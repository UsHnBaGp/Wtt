{(4*s12*(mt^2 - s13)*(mt^2 - s24)*(-(mW^6*s12^2) + 
    4*mt^8*(-mW^2 + 2*s12 + s13 + s14 + s23 + s24) + 
    2*mt^6*(-8*s12^2 - s13^2 - 5*s13*s14 - 2*s14^2 - 4*s13*s23 - 5*s14*s23 - 
      s23^2 - 5*s13*s24 - 2*s14*s24 - 5*s23*s24 - 2*s24^2 + 
      2*mW^2*(2*s12 + s13 + s14 + s23 + s24) - 
      s12*(7*s13 + 9*s14 + 7*s23 + 9*s24)) + 
    mW^4*s12*(3*s12^2 + s12*(2*s13 + 3*s14 + 2*s23 + 3*s24) + 
      2*(s14*s23 + s13*s24)) - 
    mW^2*(3*s12^4 + s12^3*(4*s13 + 6*s14 + 4*s23 + 6*s24) + 
      (s14*s23 + s13*s24)^2 + s12^2*(s13^2 + 3*s14^2 + 8*s14*s23 + s23^2 + 
        6*s14*s24 + 4*s23*s24 + 3*s24^2 + 4*s13*(s14 + s23 + 2*s24)) + 
      2*s12*(s13^2*s24 + 2*s13*(s14 + s24)*(s23 + s24) + 
        s14*s23*(2*s14 + s23 + 2*s24))) + 
    mt^4*(4*mW^4*s12 + 14*s12^3 + 3*s13^2*s14 + 4*s13*s14^2 + s14^3 + 
      2*s13^2*s23 + 14*s13*s14*s23 + 8*s14^2*s23 + 2*s13*s23^2 + 
      5*s14*s23^2 + 5*s13^2*s24 + 10*s13*s14*s24 + s14^2*s24 + 
      14*s13*s23*s24 + 10*s14*s23*s24 + 3*s23^2*s24 + 8*s13*s24^2 + 
      s14*s24^2 + 4*s23*s24^2 + s24^3 + 6*s12^2*(3*s13 + 4*s14 + 3*s23 + 
        4*s24) - mW^2*(14*s12^2 + s13^2 + s14^2 + 6*s14*s23 + s23^2 + 
        2*s14*s24 + 2*s23*s24 + s24^2 + 2*s13*(s14 + s23 + 3*s24) + 
        2*s12*(5*s13 + 6*s14 + 5*s23 + 6*s24)) + 
      s12*(5*s13^2 + 11*s14^2 + 26*s14*s23 + 5*s23^2 + 18*s14*s24 + 
        20*s23*s24 + 11*s24^2 + 2*s13*(10*s14 + 9*s23 + 13*s24))) + 
    (s12 + s14 + s24)*(s12^4 + s14^2*s23^2 + 2*s13*s14*s23*(s23 + s24) + 
      2*s12^3*(s13 + s14 + s23 + s24) + s13^2*s24*(2*s23 + s24) + 
      s12^2*(s13^2 + s14^2 + (s23 + s24)^2 + 2*s14*(2*s23 + s24) + 
        2*s13*(s14 + 2*(s23 + s24))) + 2*s12*(s13^2*(s23 + s24) + 
        s14*s23*(s14 + s23 + s24) + s13*((s23 + s24)^2 + 
          s14*(2*s23 + s24)))) - 2*mt^2*(3*s12^4 + s13^2*s14*s23 + 
      3*s13*s14^2*s23 + s14^3*s23 + 2*s13*s14*s23^2 + 2*s14^2*s23^2 + 
      2*s13^2*s14*s24 + s13*s14^2*s24 + 2*s13^2*s23*s24 + 6*s13*s14*s23*s24 + 
      s14^2*s23*s24 + s13*s23^2*s24 + 2*s14*s23^2*s24 + 2*s13^2*s24^2 + 
      s13*s14*s24^2 + 3*s13*s23*s24^2 + s14*s23*s24^2 + s13*s24^3 + 
      mW^4*s12*(2*s12 + s13 + s14 + s23 + s24) + 
      s12^3*(5*s13 + 7*s14 + 5*s23 + 7*s24) + 
      s12^2*(2*s13^2 + 5*s14^2 + 11*s14*s23 + 2*s23^2 + 9*s14*s24 + 
        8*s23*s24 + 5*s24^2 + s13*(8*s14 + 7*s23 + 11*s24)) + 
      s12*(s14^3 + 2*s13^2*(s14 + s23 + 2*s24) + s14^2*(7*s23 + 2*s24) + 
        s24*(2*s23^2 + 3*s23*s24 + s24^2) + s14*(4*s23^2 + 9*s23*s24 + 
          2*s24^2) + s13*(3*s14^2 + 10*s14*s23 + 2*s23^2 + 9*s14*s24 + 
          10*s23*s24 + 7*s24^2)) - mW^2*(5*s12^3 + s13^2*s24 + 
        s13*(s14 + s24)*(s23 + s24) + s14*s23*(s14 + s23 + s24) + 
        s12^2*(5*s13 + 7*s14 + 5*s23 + 7*s24) + 
        s12*(s13^2 + 2*s14^2 + 6*s14*s23 + s23^2 + 3*s14*s24 + 4*s23*s24 + 
          2*s24^2 + s13*(4*s14 + 3*s23 + 6*s24))))))/
  (mW^4*s12^2 + s12^4 + 2*s12^3*s13 + s12^2*s13^2 + 2*s12^3*s14 + 
    2*s12^2*s13*s14 + s12^2*s14^2 + 2*s12^3*s23 + 2*s12^2*s13*s23 + 
    4*s12^2*s14*s23 + 2*s12*s13*s14*s23 + 2*s12*s14^2*s23 + s12^2*s23^2 + 
    2*s12*s14*s23^2 + s14^2*s23^2 + 2*s12^3*s24 + 4*s12^2*s13*s24 + 
    2*s12*s13^2*s24 + 2*s12^2*s14*s24 + 2*s12*s13*s14*s24 + 2*s12^2*s23*s24 + 
    2*s12*s13*s23*s24 + 2*s12*s14*s23*s24 - 2*s13*s14*s23*s24 + s12^2*s24^2 + 
    2*s12*s13*s24^2 + s13^2*s24^2 - mt^4*(4*mW^2*s12 - 4*s12^2 - 
      (s13 - s14 - s23 + s24)^2 - 4*s12*(s13 + s14 + s23 + s24)) - 
    2*mW^2*s12*(s12^2 + s14*s23 + s13*s24 + s12*(s13 + s14 + s23 + s24)) - 
    2*mt^2*(2*s12^3 - s13*s14*s23 + s14^2*s23 + s14*s23^2 + s13^2*s24 - 
      s13*s14*s24 - s13*s23*s24 - s14*s23*s24 + s13*s24^2 + 
      3*s12^2*(s13 + s14 + s23 + s24) - mW^2*s12*(2*s12 + s13 + s14 + s23 + 
        s24) + s12*(s13^2 + s14^2 + 4*s14*s23 + (s23 + s24)^2 + 
        2*s13*(s14 + 2*s24))))^3, 
 (-8*s12*(mt^2 - s13)*(mt^4 + s13*s23 - mt^2*(s12 + s13 + s23))*(mt^2 - s24)*
   (mW^4*s12 + 2*mt^4*(-mW^2 + 2*s12 + s13 + s14 + s23 + s24) + 
    (s12 + s14 + s24)*(s12^2 + s14*s23 + s12*(s13 + s14 + s23 + s24) + 
      s13*(2*s23 + s24)) - mW^2*(2*s12^2 + s14*s23 + s13*s24 + 
      s12*(s13 + 2*s14 + s23 + 2*s24)) + 
    mt^2*(-4*s12^2 - 3*s13*s14 - s14^2 - 2*s13*s23 - 3*s14*s23 - 3*s13*s24 - 
      3*s23*s24 - s24^2 + mW^2*(2*s12 + s13 + s14 + s23 + s24) - 
      s12*(3*s13 + 5*s14 + 3*s23 + 5*s24))))/
  (mW^4*s12^2 + s12^4 + 2*s12^3*s13 + s12^2*s13^2 + 2*s12^3*s14 + 
    2*s12^2*s13*s14 + s12^2*s14^2 + 2*s12^3*s23 + 2*s12^2*s13*s23 + 
    4*s12^2*s14*s23 + 2*s12*s13*s14*s23 + 2*s12*s14^2*s23 + s12^2*s23^2 + 
    2*s12*s14*s23^2 + s14^2*s23^2 + 2*s12^3*s24 + 4*s12^2*s13*s24 + 
    2*s12*s13^2*s24 + 2*s12^2*s14*s24 + 2*s12*s13*s14*s24 + 2*s12^2*s23*s24 + 
    2*s12*s13*s23*s24 + 2*s12*s14*s23*s24 - 2*s13*s14*s23*s24 + s12^2*s24^2 + 
    2*s12*s13*s24^2 + s13^2*s24^2 - mt^4*(4*mW^2*s12 - 4*s12^2 - 
      (s13 - s14 - s23 + s24)^2 - 4*s12*(s13 + s14 + s23 + s24)) - 
    2*mW^2*s12*(s12^2 + s14*s23 + s13*s24 + s12*(s13 + s14 + s23 + s24)) - 
    2*mt^2*(2*s12^3 - s13*s14*s23 + s14^2*s23 + s14*s23^2 + s13^2*s24 - 
      s13*s14*s24 - s13*s23*s24 - s14*s23*s24 + s13*s24^2 + 
      3*s12^2*(s13 + s14 + s23 + s24) - mW^2*s12*(2*s12 + s13 + s14 + s23 + 
        s24) + s12*(s13^2 + s14^2 + 4*s14*s23 + (s23 + s24)^2 + 
        2*s13*(s14 + 2*s24))))^3, 
 (-8*s12*(mt^2 - s13)*(mt^2 - s24)*(2*mt^4 - mW^2*s12 + s12^2 + s12*s13 + 
    s12*s14 + s12*s23 + s14*s23 + s12*s24 + s13*s24 - 
    mt^2*(2*s12 + s13 + s14 + s23 + s24))*(mt^4*(-mW^2 + 2*(s13 + s24)) + 
    mt^2*(-s13^2 - 3*s13*s14 + mW^2*(s12 + s13 + s14) - 3*s13*s24 - s14*s24 - 
      s12*(3*s13 + s24)) + s13*(-(mW^2*(s12 + s14)) + 
      (s12 + s13 + s14)*(s12 + s14 + s24))))/
  (mW^4*s12^2 + s12^4 + 2*s12^3*s13 + s12^2*s13^2 + 2*s12^3*s14 + 
    2*s12^2*s13*s14 + s12^2*s14^2 + 2*s12^3*s23 + 2*s12^2*s13*s23 + 
    4*s12^2*s14*s23 + 2*s12*s13*s14*s23 + 2*s12*s14^2*s23 + s12^2*s23^2 + 
    2*s12*s14*s23^2 + s14^2*s23^2 + 2*s12^3*s24 + 4*s12^2*s13*s24 + 
    2*s12*s13^2*s24 + 2*s12^2*s14*s24 + 2*s12*s13*s14*s24 + 2*s12^2*s23*s24 + 
    2*s12*s13*s23*s24 + 2*s12*s14*s23*s24 - 2*s13*s14*s23*s24 + s12^2*s24^2 + 
    2*s12*s13*s24^2 + s13^2*s24^2 - mt^4*(4*mW^2*s12 - 4*s12^2 - 
      (s13 - s14 - s23 + s24)^2 - 4*s12*(s13 + s14 + s23 + s24)) - 
    2*mW^2*s12*(s12^2 + s14*s23 + s13*s24 + s12*(s13 + s14 + s23 + s24)) - 
    2*mt^2*(2*s12^3 - s13*s14*s23 + s14^2*s23 + s14*s23^2 + s13^2*s24 - 
      s13*s14*s24 - s13*s23*s24 - s14*s23*s24 + s13*s24^2 + 
      3*s12^2*(s13 + s14 + s23 + s24) - mW^2*s12*(2*s12 + s13 + s14 + s23 + 
        s24) + s12*(s13^2 + s14^2 + 4*s14*s23 + (s23 + s24)^2 + 
        2*s13*(s14 + 2*s24))))^3, 
 (16*s12*(mt^2 - s13)*(mt^4 + s13*s23 - mt^2*(s12 + s13 + s23))*(mt^2 - s24)*
   (mt^4*(-mW^2 + 2*(s13 + s24)) + mt^2*(-s13^2 - 3*s13*s14 + 
      mW^2*(s12 + s13 + s14) - 3*s13*s24 - s14*s24 - s12*(3*s13 + s24)) + 
    s13*(-(mW^2*(s12 + s14)) + (s12 + s13 + s14)*(s12 + s14 + s24))))/
  (mW^4*s12^2 + s12^4 + 2*s12^3*s13 + s12^2*s13^2 + 2*s12^3*s14 + 
    2*s12^2*s13*s14 + s12^2*s14^2 + 2*s12^3*s23 + 2*s12^2*s13*s23 + 
    4*s12^2*s14*s23 + 2*s12*s13*s14*s23 + 2*s12*s14^2*s23 + s12^2*s23^2 + 
    2*s12*s14*s23^2 + s14^2*s23^2 + 2*s12^3*s24 + 4*s12^2*s13*s24 + 
    2*s12*s13^2*s24 + 2*s12^2*s14*s24 + 2*s12*s13*s14*s24 + 2*s12^2*s23*s24 + 
    2*s12*s13*s23*s24 + 2*s12*s14*s23*s24 - 2*s13*s14*s23*s24 + s12^2*s24^2 + 
    2*s12*s13*s24^2 + s13^2*s24^2 - mt^4*(4*mW^2*s12 - 4*s12^2 - 
      (s13 - s14 - s23 + s24)^2 - 4*s12*(s13 + s14 + s23 + s24)) - 
    2*mW^2*s12*(s12^2 + s14*s23 + s13*s24 + s12*(s13 + s14 + s23 + s24)) - 
    2*mt^2*(2*s12^3 - s13*s14*s23 + s14^2*s23 + s14*s23^2 + s13^2*s24 - 
      s13*s14*s24 - s13*s23*s24 - s14*s23*s24 + s13*s24^2 + 
      3*s12^2*(s13 + s14 + s23 + s24) - mW^2*s12*(2*s12 + s13 + s14 + s23 + 
        s24) + s12*(s13^2 + s14^2 + 4*s14*s23 + (s23 + s24)^2 + 
        2*s13*(s14 + 2*s24))))^3, 
 (4*s12*(mt^2 - s13)*(mt^2 - s24)*(mW^4*s12^2*(s12 - s13 + s14) + 
    4*mt^8*(2*s12 - s13 + s14 + s23 - s24) - 
    2*mW^2*s12*(s12^3 - s12*s13^2 + s14^2*s23 - s13^2*s24 + 
      s12^2*(2*s14 + s23 + s24) + s12*s14*(s14 + 2*s23 + s24)) - 
    2*mt^6*(8*s12^2 - 2*s13^2 + 2*s14^2 + 5*s14*s23 + s23^2 + 
      s13*(s23 - 5*s24) - s14*s24 - s24^2 + 
      s12*(-s13 + 9*s14 + 7*s23 + s24)) + 
    mt^4*(14*s12^3 - s13^3 - s13^2*s14 + s13*s14^2 + s14^3 + 4*s13*s14*s23 + 
      8*s14^2*s23 + s13*s23^2 + 5*s14*s23^2 - 
      2*mW^2*s12*(3*s12 - 2*s13 + 2*s14 + s23 - s24) - 8*s13^2*s24 - 
      4*s13*s14*s24 - 5*s13*s24^2 - s14*s24^2 + 
      2*s12^2*(2*s13 + 12*s14 + 9*s23 + 5*s24) + 
      s12*(-7*s13^2 + 4*s13*s14 + 11*s14^2 + 6*s13*s23 + 26*s14*s23 + 
        5*s23^2 - 6*s13*s24 + 6*s14*s24 + 4*s23*s24 - s24^2)) + 
    (s12 + s13 + s14)*(s12^4 + s14^2*s23^2 - s13^2*s24^2 + 
      2*s12^3*(s14 + s23 + s24) + 2*s12*(s14^2*s23 - s13^2*s24 + 
        s14*s23*(s23 + s24)) + s12^2*(-s13^2 + s14^2 + (s23 + s24)^2 + 
        2*s14*(2*s23 + s24))) + 2*mt^2*(-3*s12^4 - s13*s14^2*s23 - 
      s14^3*s23 - s13*s14*s23^2 - 2*s14^2*s23^2 + s13^3*s24 + s13^2*s14*s24 + 
      2*s13^2*s24^2 + s13*s14*s24^2 - s12^3*(2*s13 + 7*s14 + 5*s23 + 4*s24) + 
      mW^2*s12*(3*s12^2 - s13^2 + s14^2 + 2*s14*s23 - 2*s13*s24 + 
        s12*(-s13 + 4*s14 + 2*s23 + s24)) + 
      s12^2*(2*s13^2 - 5*s14^2 - 11*s14*s23 - 2*s23^2 - 5*s14*s24 - 
        3*s23*s24 - s24^2 - s13*(3*s14 + 3*s23 + s24)) + 
      s12*(s13^3 + s13^2*(s14 + 4*s24) - s14*(s14^2 + 7*s14*s23 + 4*s23^2 + 
          s14*s24 + 3*s23*s24) - s13*(s14^2 + 4*s14*s23 + s23^2 + s23*s24 - 
          s24^2)))))/(mW^4*s12^2 + s12^4 + 2*s12^3*s13 + s12^2*s13^2 + 
    2*s12^3*s14 + 2*s12^2*s13*s14 + s12^2*s14^2 + 2*s12^3*s23 + 
    2*s12^2*s13*s23 + 4*s12^2*s14*s23 + 2*s12*s13*s14*s23 + 2*s12*s14^2*s23 + 
    s12^2*s23^2 + 2*s12*s14*s23^2 + s14^2*s23^2 + 2*s12^3*s24 + 
    4*s12^2*s13*s24 + 2*s12*s13^2*s24 + 2*s12^2*s14*s24 + 2*s12*s13*s14*s24 + 
    2*s12^2*s23*s24 + 2*s12*s13*s23*s24 + 2*s12*s14*s23*s24 - 
    2*s13*s14*s23*s24 + s12^2*s24^2 + 2*s12*s13*s24^2 + s13^2*s24^2 - 
    mt^4*(4*mW^2*s12 - 4*s12^2 - (s13 - s14 - s23 + s24)^2 - 
      4*s12*(s13 + s14 + s23 + s24)) - 
    2*mW^2*s12*(s12^2 + s14*s23 + s13*s24 + s12*(s13 + s14 + s23 + s24)) - 
    2*mt^2*(2*s12^3 - s13*s14*s23 + s14^2*s23 + s14*s23^2 + s13^2*s24 - 
      s13*s14*s24 - s13*s23*s24 - s14*s23*s24 + s13*s24^2 + 
      3*s12^2*(s13 + s14 + s23 + s24) - mW^2*s12*(2*s12 + s13 + s14 + s23 + 
        s24) + s12*(s13^2 + s14^2 + 4*s14*s23 + (s23 + s24)^2 + 
        2*s13*(s14 + 2*s24))))^3, 
 (-8*s12*(mt^2 - s13)*(mt^4 + s13*s23 - mt^2*(s12 + s13 + s23))*(mt^2 - s24)*
   (-(mW^2*s12*(s12 - s13 + s14)) + 2*mt^4*(2*s12 - s13 + s14 + s23 - s24) + 
    (s12 + s13 + s14)*(s12^2 + s14*s23 - s13*s24 + 
      s12*(-s13 + s14 + s23 + s24)) - 
    mt^2*(4*s12^2 - s13^2 + s13*(s23 - 3*s24) + s14*(s14 + 3*s23 - s24) + 
      s12*(-s13 + 5*s14 + 3*s23 + s24))))/
  (mW^4*s12^2 + s12^4 + 2*s12^3*s13 + s12^2*s13^2 + 2*s12^3*s14 + 
    2*s12^2*s13*s14 + s12^2*s14^2 + 2*s12^3*s23 + 2*s12^2*s13*s23 + 
    4*s12^2*s14*s23 + 2*s12*s13*s14*s23 + 2*s12*s14^2*s23 + s12^2*s23^2 + 
    2*s12*s14*s23^2 + s14^2*s23^2 + 2*s12^3*s24 + 4*s12^2*s13*s24 + 
    2*s12*s13^2*s24 + 2*s12^2*s14*s24 + 2*s12*s13*s14*s24 + 2*s12^2*s23*s24 + 
    2*s12*s13*s23*s24 + 2*s12*s14*s23*s24 - 2*s13*s14*s23*s24 + s12^2*s24^2 + 
    2*s12*s13*s24^2 + s13^2*s24^2 - mt^4*(4*mW^2*s12 - 4*s12^2 - 
      (s13 - s14 - s23 + s24)^2 - 4*s12*(s13 + s14 + s23 + s24)) - 
    2*mW^2*s12*(s12^2 + s14*s23 + s13*s24 + s12*(s13 + s14 + s23 + s24)) - 
    2*mt^2*(2*s12^3 - s13*s14*s23 + s14^2*s23 + s14*s23^2 + s13^2*s24 - 
      s13*s14*s24 - s13*s23*s24 - s14*s23*s24 + s13*s24^2 + 
      3*s12^2*(s13 + s14 + s23 + s24) - mW^2*s12*(2*s12 + s13 + s14 + s23 + 
        s24) + s12*(s13^2 + s14^2 + 4*s14*s23 + (s23 + s24)^2 + 
        2*s13*(s14 + 2*s24))))^3, 
 (4*mt*s12*(mt^2 - s24)*(-(mW^6*s12^2) + 
    4*mt^8*(-mW^2 + 2*s12 + s13 + s14 + s23 + s24) + 
    2*mt^6*(-8*s12^2 - s13^2 - 5*s13*s14 - 2*s14^2 - 4*s13*s23 - 5*s14*s23 - 
      s23^2 - 5*s13*s24 - 2*s14*s24 - 5*s23*s24 - 2*s24^2 + 
      2*mW^2*(2*s12 + s13 + s14 + s23 + s24) - 
      s12*(7*s13 + 9*s14 + 7*s23 + 9*s24)) + 
    mW^4*s12*(3*s12^2 + s12*(2*s13 + 3*s14 + 2*s23 + 3*s24) + 
      2*(s14*s23 + s13*s24)) - 
    mW^2*(3*s12^4 + s12^3*(4*s13 + 6*s14 + 4*s23 + 6*s24) + 
      (s14*s23 + s13*s24)^2 + s12^2*(s13^2 + 3*s14^2 + 8*s14*s23 + s23^2 + 
        6*s14*s24 + 4*s23*s24 + 3*s24^2 + 4*s13*(s14 + s23 + 2*s24)) + 
      2*s12*(s13^2*s24 + 2*s13*(s14 + s24)*(s23 + s24) + 
        s14*s23*(2*s14 + s23 + 2*s24))) + 
    mt^4*(4*mW^4*s12 + 14*s12^3 + 3*s13^2*s14 + 4*s13*s14^2 + s14^3 + 
      2*s13^2*s23 + 14*s13*s14*s23 + 8*s14^2*s23 + 2*s13*s23^2 + 
      5*s14*s23^2 + 5*s13^2*s24 + 10*s13*s14*s24 + s14^2*s24 + 
      14*s13*s23*s24 + 10*s14*s23*s24 + 3*s23^2*s24 + 8*s13*s24^2 + 
      s14*s24^2 + 4*s23*s24^2 + s24^3 + 6*s12^2*(3*s13 + 4*s14 + 3*s23 + 
        4*s24) - mW^2*(14*s12^2 + s13^2 + s14^2 + 6*s14*s23 + s23^2 + 
        2*s14*s24 + 2*s23*s24 + s24^2 + 2*s13*(s14 + s23 + 3*s24) + 
        2*s12*(5*s13 + 6*s14 + 5*s23 + 6*s24)) + 
      s12*(5*s13^2 + 11*s14^2 + 26*s14*s23 + 5*s23^2 + 18*s14*s24 + 
        20*s23*s24 + 11*s24^2 + 2*s13*(10*s14 + 9*s23 + 13*s24))) + 
    (s12 + s14 + s24)*(s12^4 + s14^2*s23^2 + 2*s13*s14*s23*(s23 + s24) + 
      2*s12^3*(s13 + s14 + s23 + s24) + s13^2*s24*(2*s23 + s24) + 
      s12^2*(s13^2 + s14^2 + (s23 + s24)^2 + 2*s14*(2*s23 + s24) + 
        2*s13*(s14 + 2*(s23 + s24))) + 2*s12*(s13^2*(s23 + s24) + 
        s14*s23*(s14 + s23 + s24) + s13*((s23 + s24)^2 + 
          s14*(2*s23 + s24)))) - 2*mt^2*(3*s12^4 + s13^2*s14*s23 + 
      3*s13*s14^2*s23 + s14^3*s23 + 2*s13*s14*s23^2 + 2*s14^2*s23^2 + 
      2*s13^2*s14*s24 + s13*s14^2*s24 + 2*s13^2*s23*s24 + 6*s13*s14*s23*s24 + 
      s14^2*s23*s24 + s13*s23^2*s24 + 2*s14*s23^2*s24 + 2*s13^2*s24^2 + 
      s13*s14*s24^2 + 3*s13*s23*s24^2 + s14*s23*s24^2 + s13*s24^3 + 
      mW^4*s12*(2*s12 + s13 + s14 + s23 + s24) + 
      s12^3*(5*s13 + 7*s14 + 5*s23 + 7*s24) + 
      s12^2*(2*s13^2 + 5*s14^2 + 11*s14*s23 + 2*s23^2 + 9*s14*s24 + 
        8*s23*s24 + 5*s24^2 + s13*(8*s14 + 7*s23 + 11*s24)) + 
      s12*(s14^3 + 2*s13^2*(s14 + s23 + 2*s24) + s14^2*(7*s23 + 2*s24) + 
        s24*(2*s23^2 + 3*s23*s24 + s24^2) + s14*(4*s23^2 + 9*s23*s24 + 
          2*s24^2) + s13*(3*s14^2 + 10*s14*s23 + 2*s23^2 + 9*s14*s24 + 
          10*s23*s24 + 7*s24^2)) - mW^2*(5*s12^3 + s13^2*s24 + 
        s13*(s14 + s24)*(s23 + s24) + s14*s23*(s14 + s23 + s24) + 
        s12^2*(5*s13 + 7*s14 + 5*s23 + 7*s24) + 
        s12*(s13^2 + 2*s14^2 + 6*s14*s23 + s23^2 + 3*s14*s24 + 4*s23*s24 + 
          2*s24^2 + s13*(4*s14 + 3*s23 + 6*s24))))))/
  (mW^4*s12^2 + s12^4 + 2*s12^3*s13 + s12^2*s13^2 + 2*s12^3*s14 + 
    2*s12^2*s13*s14 + s12^2*s14^2 + 2*s12^3*s23 + 2*s12^2*s13*s23 + 
    4*s12^2*s14*s23 + 2*s12*s13*s14*s23 + 2*s12*s14^2*s23 + s12^2*s23^2 + 
    2*s12*s14*s23^2 + s14^2*s23^2 + 2*s12^3*s24 + 4*s12^2*s13*s24 + 
    2*s12*s13^2*s24 + 2*s12^2*s14*s24 + 2*s12*s13*s14*s24 + 2*s12^2*s23*s24 + 
    2*s12*s13*s23*s24 + 2*s12*s14*s23*s24 - 2*s13*s14*s23*s24 + s12^2*s24^2 + 
    2*s12*s13*s24^2 + s13^2*s24^2 - mt^4*(4*mW^2*s12 - 4*s12^2 - 
      (s13 - s14 - s23 + s24)^2 - 4*s12*(s13 + s14 + s23 + s24)) - 
    2*mW^2*s12*(s12^2 + s14*s23 + s13*s24 + s12*(s13 + s14 + s23 + s24)) - 
    2*mt^2*(2*s12^3 - s13*s14*s23 + s14^2*s23 + s14*s23^2 + s13^2*s24 - 
      s13*s14*s24 - s13*s23*s24 - s14*s23*s24 + s13*s24^2 + 
      3*s12^2*(s13 + s14 + s23 + s24) - mW^2*s12*(2*s12 + s13 + s14 + s23 + 
        s24) + s12*(s13^2 + s14^2 + 4*s14*s23 + (s23 + s24)^2 + 
        2*s13*(s14 + 2*s24))))^3, 
 (-8*mt*s12*(mt^2 - s24)*(2*mt^8*(-mW^2 + 2*s12 + s13 + s14 + s23 + s24) + 
    mt^6*(-8*s12^2 - 2*s13^2 - 5*s13*s14 - s14^2 - 6*s13*s23 - 5*s14*s23 - 
      2*s23^2 - 5*s13*s24 - 5*s23*s24 - s24^2 + 
      mW^2*(4*s12 + 3*s13 + s14 + 3*s23 + s24) - 
      s12*(9*s13 + 7*s14 + 9*s23 + 7*s24)) + 
    s13*s23*(mW^4*s12 + (s12 + s14 + s24)*(s12^2 + s14*s23 + 
        s12*(s13 + s14 + s23 + s24) + s13*(2*s23 + s24)) - 
      mW^2*(2*s12^2 + s14*s23 + s13*s24 + s12*(s13 + 2*s14 + s23 + 2*s24))) + 
    mt^4*(mW^4*s12 + 5*s12^3 + 3*s13^2*s14 + s13*s14^2 + 4*s13^2*s23 + 
      10*s13*s14*s23 + 2*s14^2*s23 + 4*s13*s23^2 + 3*s14*s23^2 + 
      3*s13^2*s24 + s13*s14*s24 + 10*s13*s23*s24 + s14*s23*s24 + 
      3*s23^2*s24 + 2*s13*s24^2 + s23*s24^2 + 
      s12^2*(8*s13 + 7*s14 + 8*s23 + 7*s24) - 
      mW^2*(4*s12^2 + s13^2 + s23*(2*s14 + s23 + s24) + 
        s13*(s14 + 4*s23 + 2*s24) + s12*(4*s13 + 3*s14 + 4*s23 + 3*s24)) + 
      s12*(3*s13^2 + 2*s14^2 + 3*s23^2 + 9*s23*s24 + 2*s24^2 + 
        2*s14*(5*s23 + s24) + s13*(9*s14 + 14*s23 + 10*s24))) - 
    mt^2*(s12^4 + 5*s13^2*s14*s23 + 2*s13*s14^2*s23 + 2*s13^2*s23^2 + 
      5*s13*s14*s23^2 + s14^2*s23^2 + mW^4*s12*(s12 + s13 + s23) + 
      s13^2*s14*s24 + 5*s13^2*s23*s24 + 2*s13*s14*s23*s24 + 5*s13*s23^2*s24 + 
      s14*s23^2*s24 + s13^2*s24^2 + 2*s13*s23*s24^2 + 
      2*s12^3*(s13 + s14 + s23 + s24) + s12^2*(s13^2 + s14^2 + s23^2 + 
        3*s23*s24 + s24^2 + 2*s14*(2*s23 + s24) + 
        s13*(3*s14 + 8*s23 + 4*s24)) + 
      s12*(s23*(2*s14 + s24)*(s14 + s23 + s24) + 
        s13^2*(s14 + 5*s23 + 2*s24) + s13*(s14^2 + 10*s14*s23 + 5*s23^2 + 
          3*s14*s24 + 10*s23*s24 + 2*s24^2)) - 
      mW^2*(2*s12^3 + s14*s23^2 + s13^2*(s23 + s24) + 
        s13*s23*(2*s14 + s23 + 2*s24) + s12^2*(3*s13 + 2*s14 + 3*s23 + 
          2*s24) + s12*(s13^2 + s23*(3*s14 + s23 + 2*s24) + 
          s13*(2*s14 + 4*s23 + 3*s24))))))/
  (mW^4*s12^2 + s12^4 + 2*s12^3*s13 + s12^2*s13^2 + 2*s12^3*s14 + 
    2*s12^2*s13*s14 + s12^2*s14^2 + 2*s12^3*s23 + 2*s12^2*s13*s23 + 
    4*s12^2*s14*s23 + 2*s12*s13*s14*s23 + 2*s12*s14^2*s23 + s12^2*s23^2 + 
    2*s12*s14*s23^2 + s14^2*s23^2 + 2*s12^3*s24 + 4*s12^2*s13*s24 + 
    2*s12*s13^2*s24 + 2*s12^2*s14*s24 + 2*s12*s13*s14*s24 + 2*s12^2*s23*s24 + 
    2*s12*s13*s23*s24 + 2*s12*s14*s23*s24 - 2*s13*s14*s23*s24 + s12^2*s24^2 + 
    2*s12*s13*s24^2 + s13^2*s24^2 - mt^4*(4*mW^2*s12 - 4*s12^2 - 
      (s13 - s14 - s23 + s24)^2 - 4*s12*(s13 + s14 + s23 + s24)) - 
    2*mW^2*s12*(s12^2 + s14*s23 + s13*s24 + s12*(s13 + s14 + s23 + s24)) - 
    2*mt^2*(2*s12^3 - s13*s14*s23 + s14^2*s23 + s14*s23^2 + s13^2*s24 - 
      s13*s14*s24 - s13*s23*s24 - s14*s23*s24 + s13*s24^2 + 
      3*s12^2*(s13 + s14 + s23 + s24) - mW^2*s12*(2*s12 + s13 + s14 + s23 + 
        s24) + s12*(s13^2 + s14^2 + 4*s14*s23 + (s23 + s24)^2 + 
        2*s13*(s14 + 2*s24))))^3, 
 (-8*mt*s12*(mt^2 - s24)*(2*mt^4 - mW^2*s12 + s12^2 + s12*s13 + s12*s14 + 
    s12*s23 + s14*s23 + s12*s24 + s13*s24 - 
    mt^2*(2*s12 + s13 + s14 + s23 + s24))*(mt^4*(-mW^2 + 2*(s13 + s24)) + 
    mt^2*(-s13^2 - 3*s13*s14 + mW^2*(s12 + s13 + s14) - 3*s13*s24 - s14*s24 - 
      s12*(3*s13 + s24)) + s13*(-(mW^2*(s12 + s14)) + 
      (s12 + s13 + s14)*(s12 + s14 + s24))))/
  (mW^4*s12^2 + s12^4 + 2*s12^3*s13 + s12^2*s13^2 + 2*s12^3*s14 + 
    2*s12^2*s13*s14 + s12^2*s14^2 + 2*s12^3*s23 + 2*s12^2*s13*s23 + 
    4*s12^2*s14*s23 + 2*s12*s13*s14*s23 + 2*s12*s14^2*s23 + s12^2*s23^2 + 
    2*s12*s14*s23^2 + s14^2*s23^2 + 2*s12^3*s24 + 4*s12^2*s13*s24 + 
    2*s12*s13^2*s24 + 2*s12^2*s14*s24 + 2*s12*s13*s14*s24 + 2*s12^2*s23*s24 + 
    2*s12*s13*s23*s24 + 2*s12*s14*s23*s24 - 2*s13*s14*s23*s24 + s12^2*s24^2 + 
    2*s12*s13*s24^2 + s13^2*s24^2 - mt^4*(4*mW^2*s12 - 4*s12^2 - 
      (s13 - s14 - s23 + s24)^2 - 4*s12*(s13 + s14 + s23 + s24)) - 
    2*mW^2*s12*(s12^2 + s14*s23 + s13*s24 + s12*(s13 + s14 + s23 + s24)) - 
    2*mt^2*(2*s12^3 - s13*s14*s23 + s14^2*s23 + s14*s23^2 + s13^2*s24 - 
      s13*s14*s24 - s13*s23*s24 - s14*s23*s24 + s13*s24^2 + 
      3*s12^2*(s13 + s14 + s23 + s24) - mW^2*s12*(2*s12 + s13 + s14 + s23 + 
        s24) + s12*(s13^2 + s14^2 + 4*s14*s23 + (s23 + s24)^2 + 
        2*s13*(s14 + 2*s24))))^3, 
 (16*mt*s12*(mt^4 + s13*s23 - mt^2*(s12 + s13 + s23))*(mt^2 - s24)*
   (mt^4*(-mW^2 + 2*(s13 + s24)) + mt^2*(-s13^2 - 3*s13*s14 + 
      mW^2*(s12 + s13 + s14) - 3*s13*s24 - s14*s24 - s12*(3*s13 + s24)) + 
    s13*(-(mW^2*(s12 + s14)) + (s12 + s13 + s14)*(s12 + s14 + s24))))/
  (mW^4*s12^2 + s12^4 + 2*s12^3*s13 + s12^2*s13^2 + 2*s12^3*s14 + 
    2*s12^2*s13*s14 + s12^2*s14^2 + 2*s12^3*s23 + 2*s12^2*s13*s23 + 
    4*s12^2*s14*s23 + 2*s12*s13*s14*s23 + 2*s12*s14^2*s23 + s12^2*s23^2 + 
    2*s12*s14*s23^2 + s14^2*s23^2 + 2*s12^3*s24 + 4*s12^2*s13*s24 + 
    2*s12*s13^2*s24 + 2*s12^2*s14*s24 + 2*s12*s13*s14*s24 + 2*s12^2*s23*s24 + 
    2*s12*s13*s23*s24 + 2*s12*s14*s23*s24 - 2*s13*s14*s23*s24 + s12^2*s24^2 + 
    2*s12*s13*s24^2 + s13^2*s24^2 - mt^4*(4*mW^2*s12 - 4*s12^2 - 
      (s13 - s14 - s23 + s24)^2 - 4*s12*(s13 + s14 + s23 + s24)) - 
    2*mW^2*s12*(s12^2 + s14*s23 + s13*s24 + s12*(s13 + s14 + s23 + s24)) - 
    2*mt^2*(2*s12^3 - s13*s14*s23 + s14^2*s23 + s14*s23^2 + s13^2*s24 - 
      s13*s14*s24 - s13*s23*s24 - s14*s23*s24 + s13*s24^2 + 
      3*s12^2*(s13 + s14 + s23 + s24) - mW^2*s12*(2*s12 + s13 + s14 + s23 + 
        s24) + s12*(s13^2 + s14^2 + 4*s14*s23 + (s23 + s24)^2 + 
        2*s13*(s14 + 2*s24))))^3, 
 (4*mt*s12*(mt^2 - s24)*(mW^4*s12^2*(s12 - s13 + s14) + 
    4*mt^8*(2*s12 - s13 + s14 + s23 - s24) - 
    2*mW^2*s12*(s12^3 - s12*s13^2 + s14^2*s23 - s13^2*s24 + 
      s12^2*(2*s14 + s23 + s24) + s12*s14*(s14 + 2*s23 + s24)) - 
    2*mt^6*(8*s12^2 - 2*s13^2 + 2*s14^2 + 5*s14*s23 + s23^2 + 
      s13*(s23 - 5*s24) - s14*s24 - s24^2 + 
      s12*(-s13 + 9*s14 + 7*s23 + s24)) + 
    mt^4*(14*s12^3 - s13^3 - s13^2*s14 + s13*s14^2 + s14^3 + 4*s13*s14*s23 + 
      8*s14^2*s23 + s13*s23^2 + 5*s14*s23^2 - 
      2*mW^2*s12*(3*s12 - 2*s13 + 2*s14 + s23 - s24) - 8*s13^2*s24 - 
      4*s13*s14*s24 - 5*s13*s24^2 - s14*s24^2 + 
      2*s12^2*(2*s13 + 12*s14 + 9*s23 + 5*s24) + 
      s12*(-7*s13^2 + 4*s13*s14 + 11*s14^2 + 6*s13*s23 + 26*s14*s23 + 
        5*s23^2 - 6*s13*s24 + 6*s14*s24 + 4*s23*s24 - s24^2)) + 
    (s12 + s13 + s14)*(s12^4 + s14^2*s23^2 - s13^2*s24^2 + 
      2*s12^3*(s14 + s23 + s24) + 2*s12*(s14^2*s23 - s13^2*s24 + 
        s14*s23*(s23 + s24)) + s12^2*(-s13^2 + s14^2 + (s23 + s24)^2 + 
        2*s14*(2*s23 + s24))) + 2*mt^2*(-3*s12^4 - s13*s14^2*s23 - 
      s14^3*s23 - s13*s14*s23^2 - 2*s14^2*s23^2 + s13^3*s24 + s13^2*s14*s24 + 
      2*s13^2*s24^2 + s13*s14*s24^2 - s12^3*(2*s13 + 7*s14 + 5*s23 + 4*s24) + 
      mW^2*s12*(3*s12^2 - s13^2 + s14^2 + 2*s14*s23 - 2*s13*s24 + 
        s12*(-s13 + 4*s14 + 2*s23 + s24)) + 
      s12^2*(2*s13^2 - 5*s14^2 - 11*s14*s23 - 2*s23^2 - 5*s14*s24 - 
        3*s23*s24 - s24^2 - s13*(3*s14 + 3*s23 + s24)) + 
      s12*(s13^3 + s13^2*(s14 + 4*s24) - s14*(s14^2 + 7*s14*s23 + 4*s23^2 + 
          s14*s24 + 3*s23*s24) - s13*(s14^2 + 4*s14*s23 + s23^2 + s23*s24 - 
          s24^2)))))/(mW^4*s12^2 + s12^4 + 2*s12^3*s13 + s12^2*s13^2 + 
    2*s12^3*s14 + 2*s12^2*s13*s14 + s12^2*s14^2 + 2*s12^3*s23 + 
    2*s12^2*s13*s23 + 4*s12^2*s14*s23 + 2*s12*s13*s14*s23 + 2*s12*s14^2*s23 + 
    s12^2*s23^2 + 2*s12*s14*s23^2 + s14^2*s23^2 + 2*s12^3*s24 + 
    4*s12^2*s13*s24 + 2*s12*s13^2*s24 + 2*s12^2*s14*s24 + 2*s12*s13*s14*s24 + 
    2*s12^2*s23*s24 + 2*s12*s13*s23*s24 + 2*s12*s14*s23*s24 - 
    2*s13*s14*s23*s24 + s12^2*s24^2 + 2*s12*s13*s24^2 + s13^2*s24^2 - 
    mt^4*(4*mW^2*s12 - 4*s12^2 - (s13 - s14 - s23 + s24)^2 - 
      4*s12*(s13 + s14 + s23 + s24)) - 
    2*mW^2*s12*(s12^2 + s14*s23 + s13*s24 + s12*(s13 + s14 + s23 + s24)) - 
    2*mt^2*(2*s12^3 - s13*s14*s23 + s14^2*s23 + s14*s23^2 + s13^2*s24 - 
      s13*s14*s24 - s13*s23*s24 - s14*s23*s24 + s13*s24^2 + 
      3*s12^2*(s13 + s14 + s23 + s24) - mW^2*s12*(2*s12 + s13 + s14 + s23 + 
        s24) + s12*(s13^2 + s14^2 + 4*s14*s23 + (s23 + s24)^2 + 
        2*s13*(s14 + 2*s24))))^3, 
 (-8*mt*s12*(mt^4 + s13*s23 - mt^2*(s12 + s13 + s23))*(mt^2 - s24)*
   (-(mW^2*s12*(s12 - s13 + s14)) + 2*mt^4*(2*s12 - s13 + s14 + s23 - s24) + 
    (s12 + s13 + s14)*(s12^2 + s14*s23 - s13*s24 + 
      s12*(-s13 + s14 + s23 + s24)) - 
    mt^2*(4*s12^2 - s13^2 + s13*(s23 - 3*s24) + s14*(s14 + 3*s23 - s24) + 
      s12*(-s13 + 5*s14 + 3*s23 + s24))))/
  (mW^4*s12^2 + s12^4 + 2*s12^3*s13 + s12^2*s13^2 + 2*s12^3*s14 + 
    2*s12^2*s13*s14 + s12^2*s14^2 + 2*s12^3*s23 + 2*s12^2*s13*s23 + 
    4*s12^2*s14*s23 + 2*s12*s13*s14*s23 + 2*s12*s14^2*s23 + s12^2*s23^2 + 
    2*s12*s14*s23^2 + s14^2*s23^2 + 2*s12^3*s24 + 4*s12^2*s13*s24 + 
    2*s12*s13^2*s24 + 2*s12^2*s14*s24 + 2*s12*s13*s14*s24 + 2*s12^2*s23*s24 + 
    2*s12*s13*s23*s24 + 2*s12*s14*s23*s24 - 2*s13*s14*s23*s24 + s12^2*s24^2 + 
    2*s12*s13*s24^2 + s13^2*s24^2 - mt^4*(4*mW^2*s12 - 4*s12^2 - 
      (s13 - s14 - s23 + s24)^2 - 4*s12*(s13 + s14 + s23 + s24)) - 
    2*mW^2*s12*(s12^2 + s14*s23 + s13*s24 + s12*(s13 + s14 + s23 + s24)) - 
    2*mt^2*(2*s12^3 - s13*s14*s23 + s14^2*s23 + s14*s23^2 + s13^2*s24 - 
      s13*s14*s24 - s13*s23*s24 - s14*s23*s24 + s13*s24^2 + 
      3*s12^2*(s13 + s14 + s23 + s24) - mW^2*s12*(2*s12 + s13 + s14 + s23 + 
        s24) + s12*(s13^2 + s14^2 + 4*s14*s23 + (s23 + s24)^2 + 
        2*s13*(s14 + 2*s24))))^3, 
 (-4*mt*s12*(mt^2 - s13)*(-(mW^6*s12^2) + 
    4*mt^8*(-mW^2 + 2*s12 + s13 + s14 + s23 + s24) + 
    2*mt^6*(-8*s12^2 - s13^2 - 5*s13*s14 - 2*s14^2 - 4*s13*s23 - 5*s14*s23 - 
      s23^2 - 5*s13*s24 - 2*s14*s24 - 5*s23*s24 - 2*s24^2 + 
      2*mW^2*(2*s12 + s13 + s14 + s23 + s24) - 
      s12*(7*s13 + 9*s14 + 7*s23 + 9*s24)) + 
    mW^4*s12*(3*s12^2 + s12*(2*s13 + 3*s14 + 2*s23 + 3*s24) + 
      2*(s14*s23 + s13*s24)) - 
    mW^2*(3*s12^4 + s12^3*(4*s13 + 6*s14 + 4*s23 + 6*s24) + 
      (s14*s23 + s13*s24)^2 + s12^2*(s13^2 + 3*s14^2 + 8*s14*s23 + s23^2 + 
        6*s14*s24 + 4*s23*s24 + 3*s24^2 + 4*s13*(s14 + s23 + 2*s24)) + 
      2*s12*(s13^2*s24 + 2*s13*(s14 + s24)*(s23 + s24) + 
        s14*s23*(2*s14 + s23 + 2*s24))) + 
    mt^4*(4*mW^4*s12 + 14*s12^3 + 3*s13^2*s14 + 4*s13*s14^2 + s14^3 + 
      2*s13^2*s23 + 14*s13*s14*s23 + 8*s14^2*s23 + 2*s13*s23^2 + 
      5*s14*s23^2 + 5*s13^2*s24 + 10*s13*s14*s24 + s14^2*s24 + 
      14*s13*s23*s24 + 10*s14*s23*s24 + 3*s23^2*s24 + 8*s13*s24^2 + 
      s14*s24^2 + 4*s23*s24^2 + s24^3 + 6*s12^2*(3*s13 + 4*s14 + 3*s23 + 
        4*s24) - mW^2*(14*s12^2 + s13^2 + s14^2 + 6*s14*s23 + s23^2 + 
        2*s14*s24 + 2*s23*s24 + s24^2 + 2*s13*(s14 + s23 + 3*s24) + 
        2*s12*(5*s13 + 6*s14 + 5*s23 + 6*s24)) + 
      s12*(5*s13^2 + 11*s14^2 + 26*s14*s23 + 5*s23^2 + 18*s14*s24 + 
        20*s23*s24 + 11*s24^2 + 2*s13*(10*s14 + 9*s23 + 13*s24))) + 
    (s12 + s14 + s24)*(s12^4 + s14^2*s23^2 + 2*s13*s14*s23*(s23 + s24) + 
      2*s12^3*(s13 + s14 + s23 + s24) + s13^2*s24*(2*s23 + s24) + 
      s12^2*(s13^2 + s14^2 + (s23 + s24)^2 + 2*s14*(2*s23 + s24) + 
        2*s13*(s14 + 2*(s23 + s24))) + 2*s12*(s13^2*(s23 + s24) + 
        s14*s23*(s14 + s23 + s24) + s13*((s23 + s24)^2 + 
          s14*(2*s23 + s24)))) - 2*mt^2*(3*s12^4 + s13^2*s14*s23 + 
      3*s13*s14^2*s23 + s14^3*s23 + 2*s13*s14*s23^2 + 2*s14^2*s23^2 + 
      2*s13^2*s14*s24 + s13*s14^2*s24 + 2*s13^2*s23*s24 + 6*s13*s14*s23*s24 + 
      s14^2*s23*s24 + s13*s23^2*s24 + 2*s14*s23^2*s24 + 2*s13^2*s24^2 + 
      s13*s14*s24^2 + 3*s13*s23*s24^2 + s14*s23*s24^2 + s13*s24^3 + 
      mW^4*s12*(2*s12 + s13 + s14 + s23 + s24) + 
      s12^3*(5*s13 + 7*s14 + 5*s23 + 7*s24) + 
      s12^2*(2*s13^2 + 5*s14^2 + 11*s14*s23 + 2*s23^2 + 9*s14*s24 + 
        8*s23*s24 + 5*s24^2 + s13*(8*s14 + 7*s23 + 11*s24)) + 
      s12*(s14^3 + 2*s13^2*(s14 + s23 + 2*s24) + s14^2*(7*s23 + 2*s24) + 
        s24*(2*s23^2 + 3*s23*s24 + s24^2) + s14*(4*s23^2 + 9*s23*s24 + 
          2*s24^2) + s13*(3*s14^2 + 10*s14*s23 + 2*s23^2 + 9*s14*s24 + 
          10*s23*s24 + 7*s24^2)) - mW^2*(5*s12^3 + s13^2*s24 + 
        s13*(s14 + s24)*(s23 + s24) + s14*s23*(s14 + s23 + s24) + 
        s12^2*(5*s13 + 7*s14 + 5*s23 + 7*s24) + 
        s12*(s13^2 + 2*s14^2 + 6*s14*s23 + s23^2 + 3*s14*s24 + 4*s23*s24 + 
          2*s24^2 + s13*(4*s14 + 3*s23 + 6*s24))))))/
  (mW^4*s12^2 + s12^4 + 2*s12^3*s13 + s12^2*s13^2 + 2*s12^3*s14 + 
    2*s12^2*s13*s14 + s12^2*s14^2 + 2*s12^3*s23 + 2*s12^2*s13*s23 + 
    4*s12^2*s14*s23 + 2*s12*s13*s14*s23 + 2*s12*s14^2*s23 + s12^2*s23^2 + 
    2*s12*s14*s23^2 + s14^2*s23^2 + 2*s12^3*s24 + 4*s12^2*s13*s24 + 
    2*s12*s13^2*s24 + 2*s12^2*s14*s24 + 2*s12*s13*s14*s24 + 2*s12^2*s23*s24 + 
    2*s12*s13*s23*s24 + 2*s12*s14*s23*s24 - 2*s13*s14*s23*s24 + s12^2*s24^2 + 
    2*s12*s13*s24^2 + s13^2*s24^2 - mt^4*(4*mW^2*s12 - 4*s12^2 - 
      (s13 - s14 - s23 + s24)^2 - 4*s12*(s13 + s14 + s23 + s24)) - 
    2*mW^2*s12*(s12^2 + s14*s23 + s13*s24 + s12*(s13 + s14 + s23 + s24)) - 
    2*mt^2*(2*s12^3 - s13*s14*s23 + s14^2*s23 + s14*s23^2 + s13^2*s24 - 
      s13*s14*s24 - s13*s23*s24 - s14*s23*s24 + s13*s24^2 + 
      3*s12^2*(s13 + s14 + s23 + s24) - mW^2*s12*(2*s12 + s13 + s14 + s23 + 
        s24) + s12*(s13^2 + s14^2 + 4*s14*s23 + (s23 + s24)^2 + 
        2*s13*(s14 + 2*s24))))^3, 
 (8*mt*s12*(mt^2 - s13)*(mt^4 + s13*s23 - mt^2*(s12 + s13 + s23))*
   (mW^4*s12 + 2*mt^4*(-mW^2 + 2*s12 + s13 + s14 + s23 + s24) + 
    (s12 + s14 + s24)*(s12^2 + s14*s23 + s12*(s13 + s14 + s23 + s24) + 
      s13*(2*s23 + s24)) - mW^2*(2*s12^2 + s14*s23 + s13*s24 + 
      s12*(s13 + 2*s14 + s23 + 2*s24)) + 
    mt^2*(-4*s12^2 - 3*s13*s14 - s14^2 - 2*s13*s23 - 3*s14*s23 - 3*s13*s24 - 
      3*s23*s24 - s24^2 + mW^2*(2*s12 + s13 + s14 + s23 + s24) - 
      s12*(3*s13 + 5*s14 + 3*s23 + 5*s24))))/
  (mW^4*s12^2 + s12^4 + 2*s12^3*s13 + s12^2*s13^2 + 2*s12^3*s14 + 
    2*s12^2*s13*s14 + s12^2*s14^2 + 2*s12^3*s23 + 2*s12^2*s13*s23 + 
    4*s12^2*s14*s23 + 2*s12*s13*s14*s23 + 2*s12*s14^2*s23 + s12^2*s23^2 + 
    2*s12*s14*s23^2 + s14^2*s23^2 + 2*s12^3*s24 + 4*s12^2*s13*s24 + 
    2*s12*s13^2*s24 + 2*s12^2*s14*s24 + 2*s12*s13*s14*s24 + 2*s12^2*s23*s24 + 
    2*s12*s13*s23*s24 + 2*s12*s14*s23*s24 - 2*s13*s14*s23*s24 + s12^2*s24^2 + 
    2*s12*s13*s24^2 + s13^2*s24^2 - mt^4*(4*mW^2*s12 - 4*s12^2 - 
      (s13 - s14 - s23 + s24)^2 - 4*s12*(s13 + s14 + s23 + s24)) - 
    2*mW^2*s12*(s12^2 + s14*s23 + s13*s24 + s12*(s13 + s14 + s23 + s24)) - 
    2*mt^2*(2*s12^3 - s13*s14*s23 + s14^2*s23 + s14*s23^2 + s13^2*s24 - 
      s13*s14*s24 - s13*s23*s24 - s14*s23*s24 + s13*s24^2 + 
      3*s12^2*(s13 + s14 + s23 + s24) - mW^2*s12*(2*s12 + s13 + s14 + s23 + 
        s24) + s12*(s13^2 + s14^2 + 4*s14*s23 + (s23 + s24)^2 + 
        2*s13*(s14 + 2*s24))))^3, 
 (8*mt*s12*(mt^2 - s13)*(2*mt^4 - mW^2*s12 + s12^2 + s12*s13 + s12*s14 + 
    s12*s23 + s14*s23 + s12*s24 + s13*s24 - 
    mt^2*(2*s12 + s13 + s14 + s23 + s24))*(mt^4*(-mW^2 + 2*(s13 + s24)) + 
    mt^2*(-s13^2 - 3*s13*s14 + mW^2*(s12 + s13 + s14) - 3*s13*s24 - s14*s24 - 
      s12*(3*s13 + s24)) + s13*(-(mW^2*(s12 + s14)) + 
      (s12 + s13 + s14)*(s12 + s14 + s24))))/
  (mW^4*s12^2 + s12^4 + 2*s12^3*s13 + s12^2*s13^2 + 2*s12^3*s14 + 
    2*s12^2*s13*s14 + s12^2*s14^2 + 2*s12^3*s23 + 2*s12^2*s13*s23 + 
    4*s12^2*s14*s23 + 2*s12*s13*s14*s23 + 2*s12*s14^2*s23 + s12^2*s23^2 + 
    2*s12*s14*s23^2 + s14^2*s23^2 + 2*s12^3*s24 + 4*s12^2*s13*s24 + 
    2*s12*s13^2*s24 + 2*s12^2*s14*s24 + 2*s12*s13*s14*s24 + 2*s12^2*s23*s24 + 
    2*s12*s13*s23*s24 + 2*s12*s14*s23*s24 - 2*s13*s14*s23*s24 + s12^2*s24^2 + 
    2*s12*s13*s24^2 + s13^2*s24^2 - mt^4*(4*mW^2*s12 - 4*s12^2 - 
      (s13 - s14 - s23 + s24)^2 - 4*s12*(s13 + s14 + s23 + s24)) - 
    2*mW^2*s12*(s12^2 + s14*s23 + s13*s24 + s12*(s13 + s14 + s23 + s24)) - 
    2*mt^2*(2*s12^3 - s13*s14*s23 + s14^2*s23 + s14*s23^2 + s13^2*s24 - 
      s13*s14*s24 - s13*s23*s24 - s14*s23*s24 + s13*s24^2 + 
      3*s12^2*(s13 + s14 + s23 + s24) - mW^2*s12*(2*s12 + s13 + s14 + s23 + 
        s24) + s12*(s13^2 + s14^2 + 4*s14*s23 + (s23 + s24)^2 + 
        2*s13*(s14 + 2*s24))))^3, 
 (-16*mt*s12*(mt^2 - s13)*(mt^4 + s13*s23 - mt^2*(s12 + s13 + s23))*
   (mt^4*(-mW^2 + 2*(s13 + s24)) + mt^2*(-s13^2 - 3*s13*s14 + 
      mW^2*(s12 + s13 + s14) - 3*s13*s24 - s14*s24 - s12*(3*s13 + s24)) + 
    s13*(-(mW^2*(s12 + s14)) + (s12 + s13 + s14)*(s12 + s14 + s24))))/
  (mW^4*s12^2 + s12^4 + 2*s12^3*s13 + s12^2*s13^2 + 2*s12^3*s14 + 
    2*s12^2*s13*s14 + s12^2*s14^2 + 2*s12^3*s23 + 2*s12^2*s13*s23 + 
    4*s12^2*s14*s23 + 2*s12*s13*s14*s23 + 2*s12*s14^2*s23 + s12^2*s23^2 + 
    2*s12*s14*s23^2 + s14^2*s23^2 + 2*s12^3*s24 + 4*s12^2*s13*s24 + 
    2*s12*s13^2*s24 + 2*s12^2*s14*s24 + 2*s12*s13*s14*s24 + 2*s12^2*s23*s24 + 
    2*s12*s13*s23*s24 + 2*s12*s14*s23*s24 - 2*s13*s14*s23*s24 + s12^2*s24^2 + 
    2*s12*s13*s24^2 + s13^2*s24^2 - mt^4*(4*mW^2*s12 - 4*s12^2 - 
      (s13 - s14 - s23 + s24)^2 - 4*s12*(s13 + s14 + s23 + s24)) - 
    2*mW^2*s12*(s12^2 + s14*s23 + s13*s24 + s12*(s13 + s14 + s23 + s24)) - 
    2*mt^2*(2*s12^3 - s13*s14*s23 + s14^2*s23 + s14*s23^2 + s13^2*s24 - 
      s13*s14*s24 - s13*s23*s24 - s14*s23*s24 + s13*s24^2 + 
      3*s12^2*(s13 + s14 + s23 + s24) - mW^2*s12*(2*s12 + s13 + s14 + s23 + 
        s24) + s12*(s13^2 + s14^2 + 4*s14*s23 + (s23 + s24)^2 + 
        2*s13*(s14 + 2*s24))))^3, 
 (-4*mt*s12*(mt^2 - s13)*(mW^4*s12^2*(s12 - s13 + s14) + 
    4*mt^8*(2*s12 - s13 + s14 + s23 - s24) - 
    2*mW^2*s12*(s12^3 - s12*s13^2 + s14^2*s23 - s13^2*s24 + 
      s12^2*(2*s14 + s23 + s24) + s12*s14*(s14 + 2*s23 + s24)) - 
    2*mt^6*(8*s12^2 - 2*s13^2 + 2*s14^2 + 5*s14*s23 + s23^2 + 
      s13*(s23 - 5*s24) - s14*s24 - s24^2 + 
      s12*(-s13 + 9*s14 + 7*s23 + s24)) + 
    mt^4*(14*s12^3 - s13^3 - s13^2*s14 + s13*s14^2 + s14^3 + 4*s13*s14*s23 + 
      8*s14^2*s23 + s13*s23^2 + 5*s14*s23^2 - 
      2*mW^2*s12*(3*s12 - 2*s13 + 2*s14 + s23 - s24) - 8*s13^2*s24 - 
      4*s13*s14*s24 - 5*s13*s24^2 - s14*s24^2 + 
      2*s12^2*(2*s13 + 12*s14 + 9*s23 + 5*s24) + 
      s12*(-7*s13^2 + 4*s13*s14 + 11*s14^2 + 6*s13*s23 + 26*s14*s23 + 
        5*s23^2 - 6*s13*s24 + 6*s14*s24 + 4*s23*s24 - s24^2)) + 
    (s12 + s13 + s14)*(s12^4 + s14^2*s23^2 - s13^2*s24^2 + 
      2*s12^3*(s14 + s23 + s24) + 2*s12*(s14^2*s23 - s13^2*s24 + 
        s14*s23*(s23 + s24)) + s12^2*(-s13^2 + s14^2 + (s23 + s24)^2 + 
        2*s14*(2*s23 + s24))) + 2*mt^2*(-3*s12^4 - s13*s14^2*s23 - 
      s14^3*s23 - s13*s14*s23^2 - 2*s14^2*s23^2 + s13^3*s24 + s13^2*s14*s24 + 
      2*s13^2*s24^2 + s13*s14*s24^2 - s12^3*(2*s13 + 7*s14 + 5*s23 + 4*s24) + 
      mW^2*s12*(3*s12^2 - s13^2 + s14^2 + 2*s14*s23 - 2*s13*s24 + 
        s12*(-s13 + 4*s14 + 2*s23 + s24)) + 
      s12^2*(2*s13^2 - 5*s14^2 - 11*s14*s23 - 2*s23^2 - 5*s14*s24 - 
        3*s23*s24 - s24^2 - s13*(3*s14 + 3*s23 + s24)) + 
      s12*(s13^3 + s13^2*(s14 + 4*s24) - s14*(s14^2 + 7*s14*s23 + 4*s23^2 + 
          s14*s24 + 3*s23*s24) - s13*(s14^2 + 4*s14*s23 + s23^2 + s23*s24 - 
          s24^2)))))/(mW^4*s12^2 + s12^4 + 2*s12^3*s13 + s12^2*s13^2 + 
    2*s12^3*s14 + 2*s12^2*s13*s14 + s12^2*s14^2 + 2*s12^3*s23 + 
    2*s12^2*s13*s23 + 4*s12^2*s14*s23 + 2*s12*s13*s14*s23 + 2*s12*s14^2*s23 + 
    s12^2*s23^2 + 2*s12*s14*s23^2 + s14^2*s23^2 + 2*s12^3*s24 + 
    4*s12^2*s13*s24 + 2*s12*s13^2*s24 + 2*s12^2*s14*s24 + 2*s12*s13*s14*s24 + 
    2*s12^2*s23*s24 + 2*s12*s13*s23*s24 + 2*s12*s14*s23*s24 - 
    2*s13*s14*s23*s24 + s12^2*s24^2 + 2*s12*s13*s24^2 + s13^2*s24^2 - 
    mt^4*(4*mW^2*s12 - 4*s12^2 - (s13 - s14 - s23 + s24)^2 - 
      4*s12*(s13 + s14 + s23 + s24)) - 
    2*mW^2*s12*(s12^2 + s14*s23 + s13*s24 + s12*(s13 + s14 + s23 + s24)) - 
    2*mt^2*(2*s12^3 - s13*s14*s23 + s14^2*s23 + s14*s23^2 + s13^2*s24 - 
      s13*s14*s24 - s13*s23*s24 - s14*s23*s24 + s13*s24^2 + 
      3*s12^2*(s13 + s14 + s23 + s24) - mW^2*s12*(2*s12 + s13 + s14 + s23 + 
        s24) + s12*(s13^2 + s14^2 + 4*s14*s23 + (s23 + s24)^2 + 
        2*s13*(s14 + 2*s24))))^3, 
 (8*mt*s12*(mt^2 - s13)*(mt^4 + s13*s23 - mt^2*(s12 + s13 + s23))*
   (-(mW^2*s12*(s12 - s13 + s14)) + 2*mt^4*(2*s12 - s13 + s14 + s23 - s24) + 
    (s12 + s13 + s14)*(s12^2 + s14*s23 - s13*s24 + 
      s12*(-s13 + s14 + s23 + s24)) - 
    mt^2*(4*s12^2 - s13^2 + s13*(s23 - 3*s24) + s14*(s14 + 3*s23 - s24) + 
      s12*(-s13 + 5*s14 + 3*s23 + s24))))/
  (mW^4*s12^2 + s12^4 + 2*s12^3*s13 + s12^2*s13^2 + 2*s12^3*s14 + 
    2*s12^2*s13*s14 + s12^2*s14^2 + 2*s12^3*s23 + 2*s12^2*s13*s23 + 
    4*s12^2*s14*s23 + 2*s12*s13*s14*s23 + 2*s12*s14^2*s23 + s12^2*s23^2 + 
    2*s12*s14*s23^2 + s14^2*s23^2 + 2*s12^3*s24 + 4*s12^2*s13*s24 + 
    2*s12*s13^2*s24 + 2*s12^2*s14*s24 + 2*s12*s13*s14*s24 + 2*s12^2*s23*s24 + 
    2*s12*s13*s23*s24 + 2*s12*s14*s23*s24 - 2*s13*s14*s23*s24 + s12^2*s24^2 + 
    2*s12*s13*s24^2 + s13^2*s24^2 - mt^4*(4*mW^2*s12 - 4*s12^2 - 
      (s13 - s14 - s23 + s24)^2 - 4*s12*(s13 + s14 + s23 + s24)) - 
    2*mW^2*s12*(s12^2 + s14*s23 + s13*s24 + s12*(s13 + s14 + s23 + s24)) - 
    2*mt^2*(2*s12^3 - s13*s14*s23 + s14^2*s23 + s14*s23^2 + s13^2*s24 - 
      s13*s14*s24 - s13*s23*s24 - s14*s23*s24 + s13*s24^2 + 
      3*s12^2*(s13 + s14 + s23 + s24) - mW^2*s12*(2*s12 + s13 + s14 + s23 + 
        s24) + s12*(s13^2 + s14^2 + 4*s14*s23 + (s23 + s24)^2 + 
        2*s13*(s14 + 2*s24))))^3, 
 (2*(mW^8*s12^3 + 4*mt^10*(mW^2 - 2*s12 - s13 - s14 - s23 - s24)*
     (4*s12 - s13 + s14 + s23 - s24) - mW^6*s12^2*(4*s12^2 + 3*s14*s23 + 
      s13*s24 + s12*(3*s13 + 4*s14 + 3*s23 + 4*s24)) + 
    2*mt^8*(2*mW^4*s12 + 36*s12^3 - s13^3 - 4*s13^2*s14 + 3*s13*s14^2 + 
      2*s14^3 - 3*s13^2*s23 + 6*s13*s14*s23 + 9*s14^2*s23 + 3*s13*s23^2 + 
      8*s14*s23^2 + s23^3 - 8*s13^2*s24 - 4*s13*s14*s24 - 6*s13*s23*s24 + 
      4*s14*s23*s24 + 4*s23^2*s24 - 9*s13*s24^2 - 3*s23*s24^2 - 2*s24^3 + 
      s12^2*(26*s13 + 50*s14 + 42*s23 + 34*s24) - 
      2*mW^2*(11*s12^2 - s13^2 + s14^2 + 3*s14*s23 + s23^2 - 3*s13*s24 - 
        s24^2 + 4*s12*(s13 + 2*s14 + 2*s23 + s24)) + 
      s12*(-s13^2 + 22*s13*s14 + 19*s14^2 + 44*s14*s23 + 13*s23^2 + 
        12*s14*s24 + 26*s23*s24 + s24^2 + 4*s13*(5*s23 + s24))) + 
    mW^4*s12*(6*s12^4 + 3*s14^2*s23^2 + 2*s13*s14*s23*s24 - s13^2*s24^2 + 
      3*s12^3*(3*s13 + 4*s14 + 3*s23 + 4*s24) + 
      s12^2*(3*s13^2 + s13*(9*s14 + 8*s23 + 12*s24) + 
        3*(2*s14^2 + 6*s14*s23 + s23^2 + 4*s14*s24 + 3*s23*s24 + 2*s24^2)) + 
      s12*(2*s13^2*s24 + 3*s14*s23*(3*s14 + 2*s23 + 3*s24) + 
        s13*(8*s14*s23 + 3*s14*s24 + 4*s23*s24 + 3*s24^2))) - 
    mt^6*(72*s12^4 - 3*s13^3*s14 - s13^2*s14^2 + 3*s13*s14^3 + s14^4 - 
      2*s13^3*s23 - 7*s13^2*s14*s23 + 20*s13*s14^2*s23 + 13*s14^3*s23 + 
      19*s13*s14*s23^2 + 23*s14^2*s23^2 + 2*s13*s23^3 + 7*s14*s23^3 + 
      8*mW^4*s12*(3*s12 + s14 + s23) - 7*s13^3*s24 - 18*s13^2*s14*s24 + 
      s13*s14^2*s24 - 19*s13^2*s23*s24 + 7*s14^2*s23*s24 + 7*s13*s23^2*s24 + 
      18*s14*s23^2*s24 + 3*s23^3*s24 - 23*s13^2*s24^2 - 7*s13*s14*s24^2 - 
      20*s13*s23*s24^2 - s14*s23*s24^2 + s23^2*s24^2 - 13*s13*s24^3 - 
      3*s23*s24^3 - s24^4 + 4*s12^3*(22*s13 + 36*s14 + 29*(s23 + s24)) + 
      2*s12^2*(9*s13^2 + 45*s14^2 + 102*s14*s23 + 27*s23^2 + 56*s14*s24 + 
        64*s23*s24 + 21*s24^2 + s13*(58*s14 + 54*s23 + 44*s24)) + 
      s12*(-3*s13^3 + 19*s14^3 + 7*s23^3 + s13^2*(9*s14 + 5*s23 - 13*s24) + 
        39*s23^2*s24 + 21*s23*s24^2 - 3*s24^3 + s14^2*(101*s23 + 19*s24) + 
        s13*(39*s14^2 + 110*s14*s23 + 31*s23^2 + 34*s14*s24 + 58*s23*s24 - 
          9*s24^2) + s14*(77*s23^2 + 94*s23*s24 + 5*s24^2)) - 
      mW^2*(80*s12^3 - s13^3 + s14^3 + 11*s14^2*s23 + 11*s14*s23^2 + s23^3 + 
        s14^2*s24 + 2*s14*s23*s24 + s23^2*s24 - s14*s24^2 - s23*s24^2 - 
        s24^3 - s13^2*(s14 + s23 + 11*s24) + s12^2*(52*s13 + 92*s14 + 
          80*s23 + 64*s24) + s13*(s14^2 + 2*s14*s23 + s23^2 - 2*s14*s24 - 
          2*s23*s24 - 11*s24^2) + 4*s12*(6*s14^2 + 18*s14*s23 + 5*s23^2 + 
          5*s14*s24 + 7*s23*s24 + 3*s13*(2*s14 + 2*s23 + s24)))) + 
    (s12 + s14 + s24)*(s12^6 + 2*s13*s14^2*s23^3 + s14^3*s23^3 + 
      s13*s14^2*s23^2*s24 - 2*s13^3*s23*s24^2 - s13^2*s14*s23*s24^2 - 
      s13^3*s24^3 + 3*s12^5*(s13 + s14 + s23 + s24) + 
      s12^3*(s13^3 + s14^3 + (s23 + s24)^3 + 3*s14^2*(3*s23 + s24) + 
        s13^2*(3*s14 + 7*s23 + 5*s24) + 3*s14*(3*s23^2 + 4*s23*s24 + s24^2) + 
        s13*(3*s14^2 + 7*s23^2 + 12*s23*s24 + 5*s24^2 + 
          8*s14*(2*s23 + s24))) + s12^4*(3*s13^2 + 
        s13*(6*s14 + 8*s23 + 7*s24) + 3*(s14^2 + (s23 + s24)^2 + 
          s14*(3*s23 + 2*s24))) + s12*(-(s13^3*s24^2) + 
        3*s14^2*s23^2*(s14 + s23 + s24) + s13*s14*s23*(7*s14*s23 + 4*s23^2 + 
          2*s14*s24 + 6*s23*s24 + 2*s24^2) + s13^2*(-(s24^2*(s23 + s24)) + 
          s14*(4*s23^2 + 2*s23*s24 - s24^2))) + 
      s12^2*(s13^3*(2*s23 + s24) + s13^2*(7*s14*s23 + 4*s23^2 + 2*s14*s24 + 
          6*s23*s24 + s24^2) + 3*s14*s23*(s14^2 + (s23 + s24)^2 + 
          s14*(3*s23 + 2*s24)) + s13*((s23 + s24)^2*(2*s23 + s24) + 
          s14^2*(8*s23 + s24) + 2*s14*(7*s23^2 + 7*s23*s24 + s24^2)))) - 
    mW^2*(4*s12^6 + 3*s12^5*(3*s13 + 4*s14 + 3*s23 + 4*s24) + 
      (s14*s23 - s13*s24)*(s14*s23 + s13*s24)^2 + 
      s12^4*(6*s13^2 + s13*(18*s14 + 16*s23 + 21*s24) + 
        3*(4*s14^2 + 9*s14*s23 + 2*s23^2 + 8*s14*s24 + 6*s23*s24 + 
          4*s24^2)) + s12*(-(s13^3*s24^2) + 3*s14^2*s23^2*
         (2*s14 + s23 + 2*s24) + s13*s14*s23*(7*s14*s23 + 4*s14*s24 + 
          6*s23*s24 + 4*s24^2) - s13^2*s24*(-2*s14*(s23 - s24) + 
          s24*(s23 + 2*s24))) + s12^3*(s13^3 + 4*s14^3 + 
        (s23 + s24)^2*(s23 + 4*s24) + 3*s14^2*(9*s23 + 4*s24) + 
        s13^2*(6*s14 + 7*s23 + 10*s24) + 6*s14*(3*s23^2 + 6*s23*s24 + 
          2*s24^2) + s13*(9*s14^2 + 7*s23^2 + 24*s23*s24 + 15*s24^2 + 
          8*s14*(4*s23 + 3*s24))) + s12^2*(s13^3*s24 + 
        3*s14*s23*(3*s14^2 + s23^2 + 4*s23*s24 + 3*s24^2 + 
          6*s14*(s23 + s24)) + s13^2*(2*s24*(3*s23 + s24) + 
          s14*(7*s23 + 4*s24)) + s13*(s14^2*(16*s23 + 3*s24) + 
          s24*(5*s23^2 + 8*s23*s24 + 3*s24^2) + 2*s14*(7*s23^2 + 14*s23*s24 + 
            3*s24^2)))) + mt^4*(-4*mW^6*s12^2 + 38*s12^5 - 2*s13^3*s14*s23 - 
      s13^2*s14^2*s23 + 8*s13*s14^3*s23 + 3*s14^4*s23 + 20*s13*s14^2*s23^2 + 
      14*s14^3*s23^2 + 6*s13*s14*s23^3 + 9*s14^2*s23^3 - 7*s13^3*s14*s24 - 
      2*s13^2*s14^2*s24 + s13*s14^3*s24 - 6*s13^3*s23*s24 - 
      15*s13^2*s14*s23*s24 + 8*s13*s14^2*s23*s24 + s14^3*s23*s24 + 
      15*s13*s14*s23^2*s24 + 12*s14^2*s23^2*s24 + 2*s13*s23^3*s24 + 
      7*s14*s23^3*s24 - 9*s13^3*s24^2 - 12*s13^2*s14*s24^2 - 
      s13*s14^2*s24^2 - 20*s13^2*s23*s24^2 - 8*s13*s14*s23*s24^2 + 
      s14^2*s23*s24^2 + s13*s23^2*s24^2 + 2*s14*s23^2*s24^2 - 
      14*s13^2*s24^3 - s13*s14*s24^3 - 8*s13*s23*s24^3 - s14*s23*s24^3 - 
      3*s13*s24^4 + 2*s12^4*(33*s13 + 50*s14 + 39*s23 + 44*s24) + 
      mW^4*s12*(34*s12^2 - s13^2 + 3*s14^2 + 14*s14*s23 + 3*s23^2 + 
        2*s13*(s14 + s23 - s24) + 2*s14*s24 + 2*s23*s24 - s24^2 + 
        2*s12*(9*s13 + 14*s14 + 13*s23 + 10*s24)) + 
      s12^3*(29*s13^2 + 89*s14^2 + 49*s23^2 + 130*s23*s24 + 61*s24^2 + 
        2*s13*(61*s14 + 55*s23 + 59*s24) + 2*s14*(97*s23 + 69*s24)) + 
      s12^2*(s13^3 + 30*s14^3 + 9*s23^3 + 56*s23^2*s24 + 53*s23*s24^2 + 
        10*s24^3 + s13^2*(32*s14 + 31*s23 + 24*s24) + 
        s14^2*(157*s23 + 54*s24) + 2*s14*(56*s23^2 + 91*s23*s24 + 19*s24^2) + 
        s13*(65*s14^2 + 51*s23^2 + 132*s23*s24 + 45*s24^2 + 
          2*s14*(92*s23 + 55*s24))) + s12*(3*s14^4 + 4*s14^3*(11*s23 + s24) - 
        s13^3*(s14 + 2*s23 + 8*s24) + s13^2*(5*s14^2 + 20*s14*s23 + 4*s23^2 + 
          3*s23*s24 - 19*s24^2) + s14^2*(77*s23^2 + 53*s23*s24 + 2*s24^2) + 
        2*s14*s23*(9*s23^2 + 34*s23*s24 + 13*s24^2) + 
        s24*(7*s23^3 + 9*s23^2*s24 + s23*s24^2 - s24^3) + 
        s13*(9*s14^3 + s14^2*(82*s23 + 20*s24) + s14*(71*s23^2 + 96*s23*s24 + 
            s24^2) + 2*(3*s23^3 + 17*s23^2*s24 + 9*s23*s24^2 - 5*s24^3))) - 
      mW^2*(68*s12^4 - 3*s13^3*s24 + 4*s12^3*(18*s13 + 29*s14 + 23*s23 + 
          24*s24) + s14*s23*(3*s14^2 + 3*s23^2 + 2*s23*s24 - s24^2 + 
          2*s14*(5*s23 + s24)) - s13^2*(s14*(s23 + 2*s24) + 
          2*s24*(s23 + 5*s24)) + s13*(s14^2*(2*s23 + s24) + 
          s24*(s23^2 - 2*s23*s24 - 3*s24^2) + 2*s14*(s23^2 - s24^2)) + 
        s12*(-s13^3 + 6*s14^3 + 3*s23^3 + s13^2*(s23 - 4*s24) + 
          12*s23^2*s24 + 3*s23*s24^2 - 2*s24^3 + s14^2*(51*s23 + 6*s24) + 
          s13*(11*s14^2 + 44*s14*s23 + 9*s23^2 + 14*s14*s24 + 20*s23*s24 - 
            5*s24^2) + 2*s14*(22*s23^2 + 21*s23*s24 + s24^2)) + 
        2*s12^2*(7*s13^2 + 27*s14^2 + 70*s14*s23 + 17*s23^2 + 34*s14*s24 + 
          40*s23*s24 + 13*s24^2 + 4*s13*(9*s14 + 8*(s23 + s24))))) + 
    mt^2*(-10*s12^6 - 7*s13*s14^3*s23^2 - 3*s14^4*s23^2 - 6*s13*s14^2*s23^3 - 
      5*s14^3*s23^3 + 4*s13^3*s14*s23*s24 + 2*s13^2*s14^2*s23*s24 - 
      2*s13*s14^3*s23*s24 - 9*s13*s14^2*s23^2*s24 - 2*s14^3*s23^2*s24 - 
      4*s13*s14*s23^3*s24 - 5*s14^2*s23^3*s24 + 5*s13^3*s14*s24^2 + 
      s13^2*s14^2*s24^2 + 6*s13^3*s23*s24^2 + 9*s13^2*s14*s23*s24^2 - 
      2*s13*s14*s23^2*s24^2 - s14^2*s23^2*s24^2 + 5*s13^3*s24^3 + 
      2*s13^2*s14*s24^3 + 7*s13^2*s23*s24^3 + 2*s13*s14*s23*s24^3 + 
      3*s13^2*s24^4 + mW^6*s12^2*(8*s12 + s13 + 3*s14 + 3*s23 + s24) - 
      s12^5*(23*s13 + 33*s14 + 25*s23 + 31*s24) - 
      s12^4*(16*s13^2 + 39*s14^2 + 81*s14*s23 + 20*s23^2 + 70*s14*s24 + 
        57*s23*s24 + 33*s24^2 + s13*(55*s14 + 50*s23 + 59*s24)) - 
      s12^3*(3*s13^3 + 19*s14^3 + 5*s23^3 + 31*s23^2*s24 + 39*s23*s24^2 + 
        13*s24^3 + s13^2*(25*s14 + 27*s23 + 29*s24) + 
        s14^2*(93*s23 + 47*s24) + s14*(63*s23^2 + 124*s23*s24 + 41*s24^2) + 
        s13*(41*s14^2 + 116*s14*s23 + 33*s23^2 + 88*s14*s24 + 92*s23*s24 + 
          47*s24^2)) - mW^4*s12*(26*s12^3 + s12^2*(21*s13 + 35*s14 + 27*s23 + 
          29*s24) + 2*(-(s13^2*s24) + s13*(s23 - s24)*s24 + 
          s13*s14*(s23 + s24) + s14*s23*(3*s14 + 3*s23 + s24)) + 
        s12*(2*s13^2 + 9*s14^2 + 33*s14*s23 + 6*s23^2 + 10*s14*s24 + 
          13*s23*s24 + 3*s24^2 + s13*(11*s14 + 10*s23 + 15*s24))) - 
      s12^2*(3*s14^4 + s13^3*(3*s14 + 2*s23 + s24) + s24*(s23 + s24)^2*
         (5*s23 + s24) + s14^3*(43*s23 + 8*s24) + 
        s13^2*(9*s14^2 + 37*s14*s23 + 8*s23^2 + 20*s14*s24 + 31*s23*s24 + 
          7*s24^2) + s14^2*(69*s23^2 + 77*s23*s24 + 8*s24^2) + 
        s14*(15*s23^3 + 64*s23^2*s24 + 45*s23*s24^2 + 4*s24^3) + 
        s13*(9*s14^3 + 6*s23^3 + 39*s23^2*s24 + 42*s23*s24^2 + 9*s24^3 + 
          s14^2*(82*s23 + 31*s24) + s14*(73*s23^2 + 128*s23*s24 + 
            31*s24^2))) + s12*(s13^3*s24*(2*s14 + 4*s23 + 7*s24) - 
        s14*s23*(6*s14^3 + s14^2*(29*s23 + 10*s24) + 
          2*s24*(5*s23^2 + 6*s23*s24 + s24^2) + s14*(15*s23^2 + 35*s23*s24 + 
            6*s24^2)) + s13^2*(-10*s14^2*s23 + s14*(-8*s23^2 - 12*s23*s24 + 
            7*s24^2) + s24*(-4*s23^2 + 3*s23*s24 + 9*s24^2)) - 
        s13*(2*(2*s23 - s24)*s24*(s23 + s24)^2 + 2*s14^3*(8*s23 + s24) + 
          s14^2*(47*s23^2 + 38*s23*s24 + 2*s24^2) + 
          2*s14*(6*s23^3 + 24*s23^2*s24 + 11*s23*s24^2 - s24^3))) + 
      mW^2*(28*s12^5 - 3*s13^3*s24^2 + s14^2*s23^2*(3*s14 + 3*s23 + s24) + 
        s12^4*(43*s13 + 65*s14 + 49*s23 + 59*s24) + 
        s13*s14*s23*(2*(s23 - s24)*s24 + s14*(s23 + 2*s24)) - 
        s13^2*s24*(s14*(2*s23 + s24) + s24*(s23 + 3*s24)) + 
        2*s12^3*(8*s13^2 + 23*s14^2 + 55*s14*s23 + 12*s23^2 + 38*s14*s24 + 
          33*s23*s24 + 17*s24^2 + s13*(31*s14 + 28*s23 + 35*s24)) + 
        s12^2*(s13^3 + 9*s14^3 + 3*s23^3 + 17*s23^2*s24 + 17*s23*s24^2 + 
          3*s24^3 + s13^2*(11*s14 + 9*s23 + 13*s24) + 
          s14^2*(73*s23 + 17*s24) + s14*(51*s23^2 + 78*s23*s24 + 11*s24^2) + 
          s13*(19*s14^2 + 74*s14*s23 + 15*s23^2 + 46*s14*s24 + 54*s23*s24 + 
            23*s24^2)) + 2*s12*(-(s13^3*s24) + s13^2*(s14*(s23 - s24) - 
            3*s24^2) + s14*s23*(6*s14^2 + 15*s14*s23 + 3*s23^2 + 6*s14*s24 + 
            9*s23*s24 + 2*s24^2) + s13*(s14^2*(9*s23 + 2*s24) + 
            2*s14*s23*(4*s23 + 7*s24) + s24*(3*s23^2 + s23*s24 - 
              2*s24^2)))))))/(mW^4*s12^2 + s12^4 + 2*s12^3*s13 + 
    s12^2*s13^2 + 2*s12^3*s14 + 2*s12^2*s13*s14 + s12^2*s14^2 + 2*s12^3*s23 + 
    2*s12^2*s13*s23 + 4*s12^2*s14*s23 + 2*s12*s13*s14*s23 + 2*s12*s14^2*s23 + 
    s12^2*s23^2 + 2*s12*s14*s23^2 + s14^2*s23^2 + 2*s12^3*s24 + 
    4*s12^2*s13*s24 + 2*s12*s13^2*s24 + 2*s12^2*s14*s24 + 2*s12*s13*s14*s24 + 
    2*s12^2*s23*s24 + 2*s12*s13*s23*s24 + 2*s12*s14*s23*s24 - 
    2*s13*s14*s23*s24 + s12^2*s24^2 + 2*s12*s13*s24^2 + s13^2*s24^2 - 
    mt^4*(4*mW^2*s12 - 4*s12^2 - (s13 - s14 - s23 + s24)^2 - 
      4*s12*(s13 + s14 + s23 + s24)) - 
    2*mW^2*s12*(s12^2 + s14*s23 + s13*s24 + s12*(s13 + s14 + s23 + s24)) - 
    2*mt^2*(2*s12^3 - s13*s14*s23 + s14^2*s23 + s14*s23^2 + s13^2*s24 - 
      s13*s14*s24 - s13*s23*s24 - s14*s23*s24 + s13*s24^2 + 
      3*s12^2*(s13 + s14 + s23 + s24) - mW^2*s12*(2*s12 + s13 + s14 + s23 + 
        s24) + s12*(s13^2 + s14^2 + 4*s14*s23 + (s23 + s24)^2 + 
        2*s13*(s14 + 2*s24))))^3, 
 (-4*(2*mt^10*(mW^2 - 2*s12 - s13 - s14 - s23 - s24)*
     (4*s12 - s13 + s14 + s23 - s24) + 
    mt^8*(2*mW^4*s12 + 36*s12^3 - 2*s13^3 - 3*s13^2*s14 + 4*s13*s14^2 + 
      s14^3 - 4*s13^2*s23 + 8*s13*s14*s23 + 8*s14^2*s23 + 4*s13*s23^2 + 
      9*s14*s23^2 + 2*s23^3 - 9*s13^2*s24 - 2*s13*s14*s24 - s14^2*s24 - 
      8*s13*s23*s24 + 2*s14*s23*s24 + 3*s23^2*s24 - 8*s13*s24^2 + s14*s24^2 - 
      4*s23*s24^2 - s24^3 + s12^2*(34*s13 + 42*s14 + 50*s23 + 26*s24) - 
      mW^2*(22*s12^2 - 3*s13^2 + s14^2 + 6*s14*s23 + 3*s23^2 + 
        2*s13*(s14 - 3*s24) - 2*s23*s24 - s24^2 + 
        4*s12*(3*s13 + 3*s14 + 5*s23 + s24)) + 
      s12*(s13^2 + 26*s13*s14 + 13*s14^2 + 19*s23^2 + 22*s23*s24 - s24^2 + 
        4*s13*(7*s23 + s24) + 4*s14*(11*s23 + s24))) + 
    s13*s23*(-(mW^6*s12^2) + mW^4*s12*(3*s12^2 + 2*s14*s23 + 
        s12*(2*s13 + 3*s14 + 2*s23 + 3*s24)) + (s12 + s14 + s24)*
       (s12^4 + 2*s13*s14*s23^2 + s14^2*s23^2 + 
        2*s12^3*(s13 + s14 + s23 + s24) + 2*s12*(s13 + s14)*s23*
         (s13 + s14 + s23 + s24) - s13^2*s24*(2*s23 + s24) + 
        s12^2*(s13^2 + s14^2 + (s23 + s24)^2 + 2*s14*(2*s23 + s24) + 
          2*s13*(s14 + 2*s23 + s24))) - mW^2*(3*s12^4 + s14^2*s23^2 - 
        s13^2*s24^2 + s12^3*(4*s13 + 6*s14 + 4*s23 + 6*s24) + 
        s12^2*(s13^2 + 3*s14^2 + 8*s14*s23 + s23^2 + 6*s14*s24 + 4*s23*s24 + 
          3*s24^2 + 4*s13*(s14 + s23 + s24)) + 2*s12*s23*
         (s13*(2*s14 + s24) + s14*(2*s14 + s23 + 2*s24)))) - 
    mt^6*(28*s12^4 - 3*s13^3*s14 + 2*s13^2*s14^2 + s13*s14^3 - 4*s13^3*s23 - 
      s13^2*s14*s23 + 14*s13*s14^2*s23 + 3*s14^3*s23 + 17*s13*s14*s23^2 + 
      10*s14^2*s23^2 + 4*s13*s23^3 + 5*s14*s23^3 + 
      2*mW^4*s12*(4*s12 + s13 + s14 + 2*s23) - 5*s13^3*s24 - 
      6*s13^2*s14*s24 - s13*s14^2*s24 - 17*s13^2*s23*s24 - s14^2*s23*s24 + 
      s13*s23^2*s24 + 6*s14*s23^2*s24 + 3*s23^3*s24 - 10*s13^2*s24^2 + 
      s13*s14*s24^2 - 14*s13*s23*s24^2 + s14*s23*s24^2 - 2*s23^2*s24^2 - 
      3*s13*s24^3 - s23*s24^3 + s12^3*(44*s13 + 48*s14 + 54*s23 + 38*s24) + 
      s12^2*(15*s13^2 + 23*s14^2 + 84*s14*s23 + 31*s23^2 + 22*s14*s24 + 
        56*s23*s24 + 9*s24^2 + s13*(58*s14 + 80*s23 + 38*s24)) + 
      s12*(-s13^3 + 3*s14^3 + 5*s23^3 + s13^2*(13*s14 + 13*s23 - 3*s24) + 
        25*s23^2*s24 + 3*s23*s24^2 - s24^3 + s14^2*(33*s23 + s24) + 
        s14*(41*s23^2 + 22*s23*s24 + s24^2) + s13*(17*s14^2 + 35*s23^2 + 
          34*s23*s24 - 5*s24^2 + 6*s14*(13*s23 + s24))) - 
      mW^2*(28*s12^3 - s13^3 - 3*s13^2*(s23 + 2*s24) + 
        4*s12^2*(7*s13 + 7*s14 + 9*s23 + 5*s24) + 
        s13*(s14^2 + 6*s14*s23 + 3*s23^2 - 6*s23*s24 - 3*s24^2) + 
        s23*(3*s14^2 + 6*s14*s23 + s23^2 - s24^2) + 
        s12*(5*s13^2 + 5*s14^2 + 28*s14*s23 + 13*s23^2 + 2*s14*s24 + 
          12*s23*s24 - s24^2 + 2*s13*(7*s14 + 14*s23 + 3*s24)))) + 
    mt^2*(-s12^6 + 2*s13^3*s14*s23^2 - 6*s13^2*s14^2*s23^2 - 
      3*s13*s14^3*s23^2 - 4*s13^2*s14*s23^3 - 6*s13*s14^2*s23^3 - 
      s14^3*s23^3 + mW^6*s12^2*(s12 + s13 + s23) + 6*s13^3*s14*s23*s24 + 
      4*s13^3*s23^2*s24 - s13*s14^2*s23^2*s24 - 2*s13^2*s23^3*s24 - 
      6*s13*s14*s23^3*s24 - s14^2*s23^3*s24 + s13^3*s14*s24^2 + 
      6*s13^3*s23*s24^2 + s13^2*s14*s23*s24^2 + 6*s13^2*s23^2*s24^2 + 
      s13^3*s24^3 + 3*s13^2*s23*s24^3 - 3*s12^5*(s13 + s14 + s23 + s24) - 
      s12^4*(3*s13^2 + 3*s14^2 + 9*s14*s23 + 3*s23^2 + 6*s14*s24 + 
        7*s23*s24 + 3*s24^2 + s13*(7*s14 + 16*s23 + 7*s24)) - 
      s12^3*(s13^3 + s14^3 + s23^3 + 5*s23^2*s24 + 5*s23*s24^2 + s24^3 + 
        3*s14^2*(3*s23 + s24) + s13^2*(5*s14 + 17*s23 + 5*s24) + 
        s14*(9*s23^2 + 14*s23*s24 + 3*s24^2) + 
        s13*(5*s14^2 + 36*s14*s23 + 19*s23^2 + 10*s14*s24 + 30*s23*s24 + 
          5*s24^2)) - mW^4*s12*(3*s12^3 + 
        2*s23*(s14*s23 + s13*(2*s14 + s23)) + s12^2*(5*s13 + 3*s14 + 5*s23 + 
          3*s24) + s12*(2*s13^2 + s23*(5*s14 + 2*s23 + 3*s24) + 
          s13*(3*s14 + 10*s23 + 3*s24))) - 
      s12*(s14*s23^2*(s14 + s23 + s24)*(3*s14 + 2*s24) + 
        s13^3*(4*s14*s23 - s24*(2*s23 + s24)) + 
        s13^2*(8*s14^2*s23 + 4*s23^3 + 14*s23^2*s24 - s23*s24^2 - s24^3 + 
          s14*(26*s23^2 + 8*s23*s24 - s24^2)) + 
        s13*s23*(4*s14^3 + 6*s23*s24*(s23 + s24) + s14^2*(25*s23 + 6*s24) + 
          2*s14*(6*s23^2 + 13*s23*s24 + s24^2))) - 
      s12^2*(s13^3*(s14 + 4*s23 + s24) + s13^2*(2*s14^2 + 25*s14*s23 + 
          20*s23^2 + 4*s14*s24 + 19*s23*s24 + s24^2) + 
        s13*(s14^3 + 6*s23^3 + 25*s23^2*s24 + 14*s23*s24^2 + s24^3 + 
          3*s14^2*(8*s23 + s24) + s14*(41*s23^2 + 36*s23*s24 + 3*s24^2)) + 
        s23*(3*s14^3 + s24*(s23 + s24)^2 + s14^2*(9*s23 + 7*s24) + 
          s14*(3*s23^2 + 10*s23*s24 + 5*s24^2))) + 
      mW^2*(3*s12^5 + s14^2*s23^3 + s13*s14*s23^2*(3*s14 + 2*s23) - 
        3*s13^2*s23*s24^2 - s13^3*s24*(2*s23 + s24) + 
        s12^4*(7*s13 + 6*s14 + 7*s23 + 6*s24) + 
        s12^3*(5*s13^2 + 3*s14^2 + 14*s14*s23 + 5*s23^2 + 6*s14*s24 + 
          10*s23*s24 + 3*s24^2 + 2*s13*(5*s14 + 13*s23 + 5*s24)) + 
        s12*(s14*s23^2*(5*s14 + 2*s23 + 4*s24) + 2*s13*s23*
           (4*s14^2 + 10*s14*s23 + s23^2 + 3*s14*s24 + 4*s23*s24) + 
          s13^2*(8*s14*s23 + 4*s23^2 + 6*s23*s24 - s24^2)) + 
        s12^2*(s13^3 + s13^2*(4*s14 + 13*s23 + 4*s24) + 
          s13*(3*s14^2 + 34*s14*s23 + 17*s23^2 + 6*s14*s24 + 24*s23*s24 + 
            3*s24^2) + s23*(7*s14^2 + s23^2 + 4*s23*s24 + 3*s24^2 + 
            10*s14*(s23 + s24))))) + mt^4*(-(mW^6*s12^2) + 9*s12^5 - 
      5*s13^3*s14*s23 + 6*s13^2*s14^2*s23 + 3*s13*s14^3*s23 - 2*s13^3*s23^2 + 
      6*s13^2*s14*s23^2 + 16*s13*s14^2*s23^2 + 3*s14^3*s23^2 + 
      2*s13^2*s23^3 + 9*s13*s14*s23^3 + 4*s14^2*s23^3 - 4*s13^3*s14*s24 - 
      9*s13^3*s23*s24 - 8*s13^2*s14*s23*s24 - s13*s14^2*s23*s24 - 
      6*s13^2*s23^2*s24 + 8*s13*s14*s23^2*s24 + s14^2*s23^2*s24 + 
      5*s13*s23^3*s24 + 4*s14*s23^3*s24 - 4*s13^3*s24^2 - s13^2*s14*s24^2 - 
      16*s13^2*s23*s24^2 + s13*s14*s23*s24^2 - 6*s13*s23^2*s24^2 - 
      3*s13^2*s24^3 - 3*s13*s23*s24^3 + s12^4*(20*s13 + 21*s14 + 22*s23 + 
        19*s24) + mW^4*s12*(9*s12^2 + 2*s23*(2*s14 + s23) + 
        2*s13*(s14 + 2*s23) + s12*(8*s13 + 5*s14 + 10*s23 + 3*s24)) + 
      s12^3*(13*s13^2 + 15*s14^2 + 50*s14*s23 + 17*s23^2 + 24*s14*s24 + 
        36*s23*s24 + 11*s24^2 + s13*(36*s14 + 62*s23 + 32*s24)) + 
      s12^2*(2*s13^3 + 3*s14^3 + 4*s23^3 + 21*s23^2*s24 + 14*s23*s24^2 + 
        s24^3 + s14^2*(34*s23 + 5*s24) + s13^2*(17*s14 + 34*s23 + 11*s24) + 
        s14*(37*s23^2 + 42*s23*s24 + 3*s24^2) + 
        2*s13*(9*s14^2 + 49*s14*s23 + 24*s23^2 + 13*s14*s24 + 34*s23*s24 + 
          5*s24^2)) + s12*(s13^3*(2*s14 - s23 - 2*s24) + 
        s13^2*(4*s14^2 + 36*s14*s23 + 16*s23^2 + 10*s23*s24 - 5*s24^2) + 
        s13*(2*s14^3 + 9*s23^3 + 38*s23^2*s24 + 3*s23*s24^2 - 2*s24^3 + 
          s14^2*(39*s23 + 2*s24) + 2*s14*s23*(32*s23 + 15*s24)) + 
        s23*(6*s14^3 + 4*s23*s24*(s23 + s24) + s14^2*(23*s23 + 6*s24) + 
          2*s14*(4*s23^2 + 11*s23*s24 + s24^2))) - 
      mW^2*(17*s12^4 + s14*s23^2*(3*s14 + 2*s23) - 
        3*s13^2*s24*(2*s23 + s24) - s13^3*(s23 + 2*s24) + 
        s12^3*(26*s13 + 24*s14 + 30*s23 + 20*s24) + 
        s13*s23*(3*s14^2 + 6*s14*s23 + s23^2 - 3*s24^2) + 
        s12^2*(9*s13^2 + 7*s14^2 + 8*s14*(5*s23 + s24) + 
          s13*(26*s14 + 42*s23 + 22*s24) + 3*(5*s23^2 + 8*s23*s24 + s24^2)) + 
        2*s12*(s13^2*(2*s14 + 5*s23 + s24) + s13*(2*s14^2 + 8*s23^2 + 
            9*s23*s24 - s24^2 + s14*(16*s23 + s24)) + 
          s23*(5*s14^2 + 3*s14*(3*s23 + s24) + s23*(s23 + 3*s24)))))))/
  (mW^4*s12^2 + s12^4 + 2*s12^3*s13 + s12^2*s13^2 + 2*s12^3*s14 + 
    2*s12^2*s13*s14 + s12^2*s14^2 + 2*s12^3*s23 + 2*s12^2*s13*s23 + 
    4*s12^2*s14*s23 + 2*s12*s13*s14*s23 + 2*s12*s14^2*s23 + s12^2*s23^2 + 
    2*s12*s14*s23^2 + s14^2*s23^2 + 2*s12^3*s24 + 4*s12^2*s13*s24 + 
    2*s12*s13^2*s24 + 2*s12^2*s14*s24 + 2*s12*s13*s14*s24 + 2*s12^2*s23*s24 + 
    2*s12*s13*s23*s24 + 2*s12*s14*s23*s24 - 2*s13*s14*s23*s24 + s12^2*s24^2 + 
    2*s12*s13*s24^2 + s13^2*s24^2 - mt^4*(4*mW^2*s12 - 4*s12^2 - 
      (s13 - s14 - s23 + s24)^2 - 4*s12*(s13 + s14 + s23 + s24)) - 
    2*mW^2*s12*(s12^2 + s14*s23 + s13*s24 + s12*(s13 + s14 + s23 + s24)) - 
    2*mt^2*(2*s12^3 - s13*s14*s23 + s14^2*s23 + s14*s23^2 + s13^2*s24 - 
      s13*s14*s24 - s13*s23*s24 - s14*s23*s24 + s13*s24^2 + 
      3*s12^2*(s13 + s14 + s23 + s24) - mW^2*s12*(2*s12 + s13 + s14 + s23 + 
        s24) + s12*(s13^2 + s14^2 + 4*s14*s23 + (s23 + s24)^2 + 
        2*s13*(s14 + 2*s24))))^3, 
 (4*(mW^2*s13*(s12 + s14) - s13*(s12 + s13 + s14)*(s12 + s14 + s24) + 
    mt^4*(mW^2 - 2*(s13 + s24)) + mt^2*(s13^2 + 3*s13*s14 - 
      mW^2*(s12 + s13 + s14) + 3*s13*s24 + s14*s24 + s12*(3*s13 + s24)))*
   (mW^4*s12^2 + s12^4 + 2*s12^3*s13 + s12^2*s13^2 + 2*s12^3*s14 + 
    2*s12^2*s13*s14 + s12^2*s14^2 + 2*s12^3*s23 + 2*s12^2*s13*s23 + 
    4*s12^2*s14*s23 + 2*s12*s13*s14*s23 + 2*s12*s14^2*s23 + s12^2*s23^2 + 
    2*s12*s14*s23^2 + s14^2*s23^2 - 2*mt^6*(4*s12 - s13 + s14 + s23 - s24) + 
    2*s12^3*s24 + 2*s12^2*s13*s24 + 2*s12^2*s14*s24 + 2*s12^2*s23*s24 + 
    2*s12*s14*s23*s24 + s12^2*s24^2 - s13^2*s24^2 - 
    2*mW^2*s12*(s12^2 + s14*s23 + s12*(s13 + s14 + s23 + s24)) + 
    mt^4*(-2*mW^2*s12 + 10*s12^2 - s13^2 + s14^2 + 4*s14*s23 + s23^2 - 
      4*s13*s24 - s24^2 + 4*s12*(s13 + 2*s14 + 2*s23 + s24)) - 
    2*mt^2*(3*s12^3 + s14^2*s23 + s14*s23^2 - mW^2*s12*(3*s12 + s14 + s23) - 
      s13^2*s24 - s13*s24^2 + s12^2*(3*s13 + 4*s14 + 4*s23 + 3*s24) + 
      s12*(s14^2 + s23*(s23 + s24) + s13*(s14 + s23 + s24) + 
        s14*(5*s23 + s24)))))/(mW^4*s12^2 + s12^4 + 2*s12^3*s13 + 
    s12^2*s13^2 + 2*s12^3*s14 + 2*s12^2*s13*s14 + s12^2*s14^2 + 2*s12^3*s23 + 
    2*s12^2*s13*s23 + 4*s12^2*s14*s23 + 2*s12*s13*s14*s23 + 2*s12*s14^2*s23 + 
    s12^2*s23^2 + 2*s12*s14*s23^2 + s14^2*s23^2 + 2*s12^3*s24 + 
    4*s12^2*s13*s24 + 2*s12*s13^2*s24 + 2*s12^2*s14*s24 + 2*s12*s13*s14*s24 + 
    2*s12^2*s23*s24 + 2*s12*s13*s23*s24 + 2*s12*s14*s23*s24 - 
    2*s13*s14*s23*s24 + s12^2*s24^2 + 2*s12*s13*s24^2 + s13^2*s24^2 - 
    mt^4*(4*mW^2*s12 - 4*s12^2 - (s13 - s14 - s23 + s24)^2 - 
      4*s12*(s13 + s14 + s23 + s24)) - 
    2*mW^2*s12*(s12^2 + s14*s23 + s13*s24 + s12*(s13 + s14 + s23 + s24)) - 
    2*mt^2*(2*s12^3 - s13*s14*s23 + s14^2*s23 + s14*s23^2 + s13^2*s24 - 
      s13*s14*s24 - s13*s23*s24 - s14*s23*s24 + s13*s24^2 + 
      3*s12^2*(s13 + s14 + s23 + s24) - mW^2*s12*(2*s12 + s13 + s14 + s23 + 
        s24) + s12*(s13^2 + s14^2 + 4*s14*s23 + (s23 + s24)^2 + 
        2*s13*(s14 + 2*s24))))^3, 
 (8*(mt^4 + s13*s23 - mt^2*(s12 + s13 + s23))*(mW^2*s12 - s12^2 - s12*s13 - 
    s12*s14 - s12*s23 - s14*s23 + mt^2*(4*s12 - s13 + s14 + s23 - s24) - 
    s12*s24 + s13*s24)*(mW^2*s13*(s12 + s14) - s13*(s12 + s13 + s14)*
     (s12 + s14 + s24) + mt^4*(mW^2 - 2*(s13 + s24)) + 
    mt^2*(s13^2 + 3*s13*s14 - mW^2*(s12 + s13 + s14) + 3*s13*s24 + s14*s24 + 
      s12*(3*s13 + s24))))/(mW^4*s12^2 + s12^4 + 2*s12^3*s13 + s12^2*s13^2 + 
    2*s12^3*s14 + 2*s12^2*s13*s14 + s12^2*s14^2 + 2*s12^3*s23 + 
    2*s12^2*s13*s23 + 4*s12^2*s14*s23 + 2*s12*s13*s14*s23 + 2*s12*s14^2*s23 + 
    s12^2*s23^2 + 2*s12*s14*s23^2 + s14^2*s23^2 + 2*s12^3*s24 + 
    4*s12^2*s13*s24 + 2*s12*s13^2*s24 + 2*s12^2*s14*s24 + 2*s12*s13*s14*s24 + 
    2*s12^2*s23*s24 + 2*s12*s13*s23*s24 + 2*s12*s14*s23*s24 - 
    2*s13*s14*s23*s24 + s12^2*s24^2 + 2*s12*s13*s24^2 + s13^2*s24^2 - 
    mt^4*(4*mW^2*s12 - 4*s12^2 - (s13 - s14 - s23 + s24)^2 - 
      4*s12*(s13 + s14 + s23 + s24)) - 
    2*mW^2*s12*(s12^2 + s14*s23 + s13*s24 + s12*(s13 + s14 + s23 + s24)) - 
    2*mt^2*(2*s12^3 - s13*s14*s23 + s14^2*s23 + s14*s23^2 + s13^2*s24 - 
      s13*s14*s24 - s13*s23*s24 - s14*s23*s24 + s13*s24^2 + 
      3*s12^2*(s13 + s14 + s23 + s24) - mW^2*s12*(2*s12 + s13 + s14 + s23 + 
        s24) + s12*(s13^2 + s14^2 + 4*s14*s23 + (s23 + s24)^2 + 
        2*s13*(s14 + 2*s24))))^3, 
 (-2*(mW^6*s12^3*(s12 - s13 + s14) + 
    4*mt^10*(8*s12^2 - 6*s12*(s13 - s14 - s23 + s24) + 
      (s13 - s14 - s23 + s24)^2) + mW^4*s12^2*(-3*s12^3 - 3*s14^2*s23 + 
      s13^2*s24 + s13*s14*(s23 + s24) - 3*s12^2*(2*s14 + s23 + s24) + 
      s12*(3*s13^2 - 3*s14*(s14 + 2*s23 + s24) + s13*(s23 + 2*s24))) + 
    2*mt^8*(-36*s12^3 - 2*s13^3 + 2*s13^2*s14 + 2*s13*s14^2 - 2*s14^3 + 
      3*s13^2*s23 + 6*s13*s14*s23 - 9*s14^2*s23 - 8*s14*s23^2 - s23^3 + 
      2*mW^2*s12*(2*s12 - s13 + s14 + s23 - s24) - 9*s13^2*s24 + 
      6*s13*s14*s24 + 3*s14^2*s24 + 8*s13*s23*s24 + 8*s14*s23*s24 + 
      s23^2*s24 - 8*s13*s24^2 + s23*s24^2 - s24^3 + 
      2*s12^2*(5*s13 - 25*s14 - 21*s23 + s24) + 
      s12*(9*s13^2 + 10*s13*s14 - 19*s14^2 - 44*s14*s23 - 13*s23^2 + 
        12*s14*s24 + 6*s23*s24 + 7*s24^2 + 4*s13*(s23 + 7*s24))) + 
    mt^6*(72*s12^4 + s13^4 - 2*s13^2*s14^2 + s14^4 - s13^3*s23 - 
      9*s13^2*s14*s23 - 3*s13*s14^2*s23 + 13*s14^3*s23 - s13^2*s23^2 + 
      2*s13*s14*s23^2 + 23*s14^2*s23^2 + s13*s23^3 + 7*s14*s23^3 + 
      13*s13^3*s24 - 3*s13^2*s14*s24 - 9*s13*s14^2*s24 - s14^3*s24 - 
      10*s13^2*s23*s24 - 28*s13*s14*s23*s24 - 10*s14^2*s23*s24 - 
      3*s13*s23^2*s24 - 5*s14*s23^2*s24 + 23*s13^2*s24^2 + 2*s13*s14*s24^2 - 
      s14^2*s24^2 - 5*s13*s23*s24^2 - 3*s14*s23*s24^2 + 7*s13*s24^3 + 
      s14*s24^3 + 4*s12^3*(4*s13 + 36*s14 + 29*s23 + 11*s24) - 
      4*mW^2*s12*(10*s12^2 + 2*s14^2 + 4*s14*s23 + s23^2 + 
        s12*(-6*s13 + 10*s14 + 7*s23 - 3*s24) - 2*s14*s24 - s23*s24 - 
        s13*(2*s14 + s23 + s24)) + s12^2*(-38*s13^2 + 90*s14^2 + 54*s23^2 + 
        4*s13*(3*s14 + 6*s23 - 16*s24) + 24*s23*s24 - 14*s24^2 + 
        4*s14*(51*s23 + 7*s24)) - s12*(s13^3 - 19*s14^3 - 7*s23^3 - 
        s23^2*s24 + 7*s23*s24^2 + s24^3 + s14^2*(-101*s23 + 3*s24) + 
        s13^2*(19*s14 + 15*s23 + 31*s24) - s13*(s14^2 + 10*s14*s23 + 
          9*s23^2 - 62*s14*s24 - 38*s23*s24 - 27*s24^2) + 
        s14*(-77*s23^2 + 6*s23*s24 + 15*s24^2))) + 
    mW^2*s12*(3*s12^5 + 3*s14^3*s23^2 + s13*s14^2*s23*(s23 - 2*s24) + 
      s13^3*s24^2 - s13^2*s14*s24*(2*s23 + s24) + 
      3*s12^4*(s13 + 3*s14 + 2*(s23 + s24)) + 
      s12^2*(-3*s13^3 - s13^2*(3*s14 + 2*s23 + 6*s24) + 
        s13*(3*s14^2 + 8*s14*s23 + s23^2 - s24^2) + 
        3*s14*(s14^2 + 3*s23^2 + 4*s23*s24 + s24^2 + 2*s14*(3*s23 + s24))) - 
      s12*(2*s13^3*s24 - 3*s14^2*s23*(2*s14 + 3*s23 + 2*s24) + 
        2*s13*s14*(-s23^2 + s23*s24 + s24^2 + s14*(-2*s23 + s24)) + 
        s13^2*(2*s14*(s23 + 2*s24) + s24*(2*s23 + 3*s24))) + 
      s12^3*(-3*s13^2 + 2*s13*(3*s14 + 2*s23 + s24) + 
        3*(3*s14^2 + (s23 + s24)^2 + s14*(6*s23 + 4*s24)))) - 
    (s12 + s13 + s14)*(s12^6 + (s14*s23 - s13*s24)^2*(s14*s23 + s13*s24) + 
      s12^5*(s13 + 3*(s14 + s23 + s24)) + 
      s12^3*(-s13^3 + s14^3 + (s23 + s24)^3 + 3*s14^2*(3*s23 + s24) - 
        s13^2*(s14 + s23 + 3*s24) + s13*(s14^2 + 4*s14*s23 + s23^2 - s24^2) + 
        3*s14*(3*s23^2 + 4*s23*s24 + s24^2)) + 
      s12*(s13^3*s24^2 + 3*s14^2*s23^2*(s14 + s23 + s24) + 
        s13*s14*s23*(s14*(s23 - 2*s24) - 2*s24*(s23 + s24)) - 
        s13^2*s24*(s24*(s23 + s24) + s14*(2*s23 + s24))) + 
      s12^4*(-s13^2 + s13*(2*s14 + 2*s23 + s24) + 
        3*(s14^2 + (s23 + s24)^2 + s14*(3*s23 + 2*s24))) - 
      s12^2*(s13^3*s24 - 3*s14*s23*(s14^2 + (s23 + s24)^2 + 
          s14*(3*s23 + 2*s24)) + s13^2*(s14*(s23 + 2*s24) + 
          s24*(2*s23 + 3*s24)) + s13*(s14^2*(-2*s23 + s24) + 
          s24*(s23 + s24)^2 + 2*s14*(-s23^2 + s23*s24 + s24^2)))) + 
    mt^2*(10*s12^6 - s13^2*s14^2*s23^2 + 2*s13*s14^3*s23^2 + 3*s14^4*s23^2 + 
      3*s13*s14^2*s23^3 + 5*s14^3*s23^3 - 2*s13^3*s14*s23*s24 - 
      4*s13^2*s14^2*s23*s24 - 2*s13*s14^3*s23*s24 - 2*s13^2*s14*s23^2*s24 - 
      5*s13*s14^2*s23^2*s24 - s14^3*s23^2*s24 + 3*s13^4*s24^2 + 
      2*s13^3*s14*s24^2 - s13^2*s14^2*s24^2 - s13^3*s23*s24^2 - 
      5*s13^2*s14*s23*s24^2 - 2*s13*s14^2*s23*s24^2 + 5*s13^3*s24^3 + 
      3*s13^2*s14*s24^3 + s12^5*(13*s13 + 33*s14 + 25*s23 + 21*s24) + 
      mW^4*s12^2*(10*s12^2 - s13^2 + s14*(3*s14 + 5*s23 - s24) + 
        s12*(-7*s13 + 13*s14 + 5*s23 + s24) - s13*(2*s14 + s23 + 3*s24)) + 
      s12^4*(-5*s13^2 + 39*s14^2 + 81*s14*s23 + 20*s23^2 + 47*s14*s24 + 
        32*s23*s24 + 12*s24^2 + s13*(30*s14 + 27*s23 + 13*s24)) + 
      s12^3*(-9*s13^3 + 19*s14^3 + 31*s14^2*(3*s23 + s24) + 
        (s23 + s24)^2*(5*s23 + s24) - s13^2*(7*s14 + s23 + 23*s24) + 
        s13*(21*s14^2 + 60*s14*s23 + 17*s23^2 + 8*s14*s24 + 12*s23*s24 - 
          5*s24^2) + s14*(63*s23^2 + 68*s23*s24 + 13*s24^2)) - 
      2*mW^2*s12*(10*s12^4 + s14^2*s23*(3*s14 + 5*s23 - s24) + s13^3*s24 + 
        s12^3*(3*s13 + 23*s14 + 15*s23 + 11*s24) + 
        s12^2*(-8*s13^2 + 16*s14^2 + 33*s14*s23 + 5*s23^2 + 
          s13*(4*s14 + 3*s23 - 5*s24) + 13*s14*s24 + 6*s23*s24 + s24^2) - 
        s13*s14*(-s23^2 + 4*s23*s24 + s24*(s14 + s24)) - 
        s13^2*((s23 - s24)*s24 + s14*(s23 + 2*s24)) + 
        s12*(-s13^3 - s13^2*(3*s14 + 2*s23 + 9*s24) + 
          s13*(s14^2 + 3*s14*s23 + s23^2 - 7*s14*s24 - 3*s23*s24 - 4*s24^2) + 
          s14*(3*s14^2 + 21*s14*s23 + 10*s23^2 + 2*s14*s24 + 5*s23*s24 - 
            s24^2))) + s12*(2*s13^4*s24 + s14^2*s23*(6*s14^2 + 29*s14*s23 + 
          15*s23^2 + 4*s14*s24 + 9*s23*s24 - 2*s24^2) + 
        s13^3*(s24*(-4*s23 + s24) - 2*s14*(s23 + s24)) + 
        s13*s14*(6*s23^3 + s14^2*(6*s23 - 2*s24) - 4*s23^2*s24 - 
          12*s23*s24^2 - 2*s24^3 + s14*(21*s23^2 - 14*s23*s24 - 4*s24^2)) - 
        s13^2*(11*s14*s24*(2*s23 + s24) + 2*s14^2*(s23 + 3*s24) + 
          s24*(2*s23^2 + 7*s23*s24 + s24^2))) + 
      s12^2*(-s13^4 - s13^3*(4*s14 + 3*s23 + 13*s24) - 
        s13^2*(2*s14^2 + 3*s14*s23 - s23^2 + 29*s14*s24 + 16*s23*s24 + 
          19*s24^2) + s13*(4*s14^3 + s14^2*(39*s23 - 7*s24) + 
          (3*s23 - 5*s24)*(s23 + s24)^2 + 4*s14*(9*s23^2 - 4*s24^2)) + 
        s14*(3*s14^3 + 15*s23^3 + 21*s23^2*s24 + 5*s23*s24^2 - s24^3 + 
          s14^2*(43*s23 + 5*s24) + s14*(69*s23^2 + 40*s23*s24 + s24^2)))) + 
    mt^4*(-38*s12^5 + s13^3*s14*s23 + 3*s13^2*s14^2*s23 - s13*s14^3*s23 - 
      3*s14^4*s23 + 2*s13^2*s14*s23^2 - 4*s13*s14^2*s23^2 - 14*s14^3*s23^2 - 
      3*s13*s14*s23^3 - 9*s14^2*s23^3 - 2*mW^4*s12^2*(3*s12 - 2*s13 + 2*s14 + 
        s23 - s24) - 3*s13^4*s24 - s13^3*s14*s24 + 3*s13^2*s14^2*s24 + 
      s13*s14^3*s24 + 2*s13^3*s23*s24 + 14*s13^2*s14*s23*s24 + 
      14*s13*s14^2*s23*s24 + 2*s14^3*s23*s24 + s13^2*s23^2*s24 + 
      7*s13*s14*s23^2*s24 + 4*s14^2*s23^2*s24 - 14*s13^3*s24^2 - 
      4*s13^2*s14*s24^2 + 2*s13*s14^2*s24^2 + 4*s13^2*s23*s24^2 + 
      7*s13*s14*s23*s24^2 + s14^2*s23*s24^2 - 9*s13^2*s24^3 - 
      3*s13*s14*s24^3 - 2*s12^4*(14*s13 + 50*s14 + 39*s23 + 25*s24) + 
      s12^3*(23*s13^2 - 89*s14^2 - 49*s23^2 - 
        2*s13*(23*s14 + 23*s23 - 5*s24) - 54*s23*s24 - 9*s24^2 - 
        2*s14*(97*s23 + 37*s24)) + s12^2*(12*s13^3 - 30*s14^3 - 9*s23^3 - 
        11*s23^2*s24 + s23*s24^2 + 3*s24^3 + 11*s13^2*(2*s14 + s23 + 5*s24) - 
        s14^2*(157*s23 + 25*s24) - 4*s14*(28*s23^2 + 16*s23*s24 - s24^2) + 
        s13*(-20*s14^2 - 66*s14*s23 - 22*s23^2 + 38*s14*s24 + 16*s23*s24 + 
          34*s24^2)) + mW^2*s12*(44*s12^3 + s13^3 - 
        8*s12^2*(s13 - 9*s14 - 6*s23 - 2*s24) + 
        s13^2*(-3*s14 - 2*s23 + 2*s24) + s14*(3*s14^2 + 18*s14*s23 + 
          11*s23^2 - 2*s14*s24 - 6*s23*s24 - s24^2) + 
        s13*(-s14^2 + s23^2 - 6*s23*s24 + s24^2 - 4*s14*(s23 + 3*s24)) + 
        s12*(-17*s13^2 + 31*s14^2 + 66*s14*s23 + 11*s23^2 + 2*s14*s24 + 
          2*s23*s24 - 5*s24^2 - 2*s13*(3*s14 + s23 + 17*s24))) + 
      s12*(-s13^4 + s13^3*(2*s14 + 3*s23) + s13^2*(4*s14^2 + 14*s14*s23 + 
          s23^2 + 31*s14*s24 + 24*s23*s24 + 13*s24^2) - 
        s14*(3*s14^3 + 18*s23^3 + 7*s23^2*s24 - 8*s23*s24^2 - s24^3 + 
          s14^2*(44*s23 + s24) + s14*(77*s23^2 + 8*s23*s24 - 3*s24^2)) + 
        s13*(-2*s14^3 - 3*s23^3 - 3*s14^2*(7*s23 - 6*s24) + 4*s23^2*s24 + 
          13*s23*s24^2 + 2*s24^3 + s14*(-26*s23^2 + 44*s23*s24 + 
            26*s24^2))))))/(mW^4*s12^2 + s12^4 + 2*s12^3*s13 + s12^2*s13^2 + 
    2*s12^3*s14 + 2*s12^2*s13*s14 + s12^2*s14^2 + 2*s12^3*s23 + 
    2*s12^2*s13*s23 + 4*s12^2*s14*s23 + 2*s12*s13*s14*s23 + 2*s12*s14^2*s23 + 
    s12^2*s23^2 + 2*s12*s14*s23^2 + s14^2*s23^2 + 2*s12^3*s24 + 
    4*s12^2*s13*s24 + 2*s12*s13^2*s24 + 2*s12^2*s14*s24 + 2*s12*s13*s14*s24 + 
    2*s12^2*s23*s24 + 2*s12*s13*s23*s24 + 2*s12*s14*s23*s24 - 
    2*s13*s14*s23*s24 + s12^2*s24^2 + 2*s12*s13*s24^2 + s13^2*s24^2 - 
    mt^4*(4*mW^2*s12 - 4*s12^2 - (s13 - s14 - s23 + s24)^2 - 
      4*s12*(s13 + s14 + s23 + s24)) - 
    2*mW^2*s12*(s12^2 + s14*s23 + s13*s24 + s12*(s13 + s14 + s23 + s24)) - 
    2*mt^2*(2*s12^3 - s13*s14*s23 + s14^2*s23 + s14*s23^2 + s13^2*s24 - 
      s13*s14*s24 - s13*s23*s24 - s14*s23*s24 + s13*s24^2 + 
      3*s12^2*(s13 + s14 + s23 + s24) - mW^2*s12*(2*s12 + s13 + s14 + s23 + 
        s24) + s12*(s13^2 + s14^2 + 4*s14*s23 + (s23 + s24)^2 + 
        2*s13*(s14 + 2*s24))))^3, 
 (4*(mt^4 + s13*s23 - mt^2*(s12 + s13 + s23))*
   (-(mW^4*s12^2*(s12 - s13 + s14)) + 
    2*mt^6*(8*s12^2 - 6*s12*(s13 - s14 - s23 + s24) + 
      (s13 - s14 - s23 + s24)^2) - (s12 + s13 + s14)*
     (s12^4 + 2*s12^3*(s14 + s23 + s24) + 2*s12*(s14 + s23 + s24)*
       (s14*s23 - s13*s24) + (s14*s23 - s13*s24)^2 + 
      s12^2*(-s13^2 + s14^2 - 2*s13*s24 + (s23 + s24)^2 + 
        2*s14*(2*s23 + s24))) + 2*mW^2*s12*
     (s12^3 + s12^2*(2*s14 + s23 + s24) + s14*(s14*s23 - s13*s24) + 
      s12*(-s13^2 - s13*s24 + s14*(s14 + 2*s23 + s24))) + 
    mt^4*(-20*s12^3 - s13^3 + s13^2*s14 + s13*s14^2 - s14^3 + 2*s13^2*s23 + 
      4*s13*s14*s23 - 6*s14^2*s23 - s13*s23^2 - 5*s14*s23^2 + 
      2*mW^2*s12*(2*s12 - s13 + s14 + s23 - s24) - 6*s13^2*s24 + 
      4*s13*s14*s24 + 2*s14^2*s24 + 6*s13*s23*s24 + 6*s14*s23*s24 - 
      5*s13*s24^2 - s14*s24^2 + s12*(5*s13^2 + 6*s13*s14 - 11*s14^2 - 
        28*s14*s23 - 5*s23^2 + 20*s13*s24 + 8*s14*s24 + 2*s23*s24 + 
        3*s24^2) + s12^2*(6*s13 - 2*(15*s14 + 11*s23 + s24))) - 
    2*mt^2*(-4*s12^4 + s13^2*s14*s23 - s14^3*s23 - s13*s14*s23^2 - 
      2*s14^2*s23^2 - s13^3*s24 + s13*s14^2*s24 + s13^2*s23*s24 + 
      4*s13*s14*s23*s24 + s14^2*s23*s24 - 2*s13^2*s24^2 - s13*s14*s24^2 - 
      s12^3*(s13 + 9*s14 + 6*s23 + 4*s24) + 
      mW^2*s12*(4*s12^2 + s12*(-3*s13 + 5*s14 + 2*s23) + 
        s14*(s14 + 2*s23 - s24) - s13*(s14 + s24)) + 
      s12^2*(3*s13^2 - 6*s14^2 - s13*(s14 + 3*s23 - 4*s24) - 
        2*s23*(s23 + s24) - s14*(13*s23 + 4*s24)) + 
      s12*(s13^2*(s14 + s23 + 3*s24) - s14*(s14^2 + 8*s14*s23 + 4*s23^2 + 
          s23*s24 - s24^2) + s13*(-3*s14*s23 - s23^2 + 7*s14*s24 + 
          3*s23*s24 + 2*s24^2)))))/(mW^4*s12^2 + s12^4 + 2*s12^3*s13 + 
    s12^2*s13^2 + 2*s12^3*s14 + 2*s12^2*s13*s14 + s12^2*s14^2 + 2*s12^3*s23 + 
    2*s12^2*s13*s23 + 4*s12^2*s14*s23 + 2*s12*s13*s14*s23 + 2*s12*s14^2*s23 + 
    s12^2*s23^2 + 2*s12*s14*s23^2 + s14^2*s23^2 + 2*s12^3*s24 + 
    4*s12^2*s13*s24 + 2*s12*s13^2*s24 + 2*s12^2*s14*s24 + 2*s12*s13*s14*s24 + 
    2*s12^2*s23*s24 + 2*s12*s13*s23*s24 + 2*s12*s14*s23*s24 - 
    2*s13*s14*s23*s24 + s12^2*s24^2 + 2*s12*s13*s24^2 + s13^2*s24^2 - 
    mt^4*(4*mW^2*s12 - 4*s12^2 - (s13 - s14 - s23 + s24)^2 - 
      4*s12*(s13 + s14 + s23 + s24)) - 
    2*mW^2*s12*(s12^2 + s14*s23 + s13*s24 + s12*(s13 + s14 + s23 + s24)) - 
    2*mt^2*(2*s12^3 - s13*s14*s23 + s14^2*s23 + s14*s23^2 + s13^2*s24 - 
      s13*s14*s24 - s13*s23*s24 - s14*s23*s24 + s13*s24^2 + 
      3*s12^2*(s13 + s14 + s23 + s24) - mW^2*s12*(2*s12 + s13 + s14 + s23 + 
        s24) + s12*(s13^2 + s14^2 + 4*s14*s23 + (s23 + s24)^2 + 
        2*s13*(s14 + 2*s24))))^3}
