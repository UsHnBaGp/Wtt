* This file was written by the program 
* All_Possible_Products_Of_ProjectorTensors_with_With_Lorentz_Tensors.frm 


id KMatrix(1,1) =   - 2*mt^4*s24 - 2*mt^4*s23 - 2*mt^4*s14 - 2*mt^4*s13 - 2*
      mt^4*s12 + 2*mt^4*mh^2 + 2*denom(1/2*s12)*mt^2*s13*s23*s24 + 2*denom(1/2
      *s12)*mt^2*s13*s23^2 + 2*denom(1/2*s12)*mt^2*s13*s14*s23 + 2*denom(1/2*
      s12)*mt^2*s13^2*s23 + 2*denom(1/2*s12)*mt^2*s12*s13*s23 - 2*denom(1/2*
      s12)*mt^2*mh^2*s13*s23 - 2*denom(1/2*s12)*mt^4*s23*s24 - 2*denom(1/2*s12
      )*mt^4*s23^2 - 2*denom(1/2*s12)*mt^4*s14*s23 - 2*denom(1/2*s12)*mt^4*s13
      *s24 - 4*denom(1/2*s12)*mt^4*s13*s23 - 2*denom(1/2*s12)*mt^4*s13*s14 - 2
      *denom(1/2*s12)*mt^4*s13^2 - 2*denom(1/2*s12)*mt^4*s12*s23 - 2*denom(1/2
      *s12)*mt^4*s12*s13 + 2*denom(1/2*s12)*mt^4*mh^2*s23 + 2*denom(1/2*s12)*
      mt^4*mh^2*s13 + 2*denom(1/2*s12)*mt^6*s24 + 2*denom(1/2*s12)*mt^6*s23 + 
      2*denom(1/2*s12)*mt^6*s14 + 2*denom(1/2*s12)*mt^6*s13 + 2*denom(1/2*s12)
      *mt^6*s12 - 2*denom(1/2*s12)*mt^6*mh^2 - 1/2*denom(1/4*s12^2)*s13^2*
      s23^2*s24 - 1/2*denom(1/4*s12^2)*s13^2*s23^3 - 1/2*denom(1/4*s12^2)*
      s13^2*s14*s23^2 - 1/2*denom(1/4*s12^2)*s13^3*s23^2 - 1/2*denom(1/4*s12^2
      )*s12*s13^2*s23^2 + 1/2*denom(1/4*s12^2)*mh^2*s13^2*s23^2 + denom(1/4*
      s12^2)*mt^2*s13*s23^2*s24 + denom(1/4*s12^2)*mt^2*s13*s23^3 + denom(1/4*
      s12^2)*mt^2*s13*s14*s23^2 + denom(1/4*s12^2)*mt^2*s13^2*s23*s24 + 2*
      denom(1/4*s12^2)*mt^2*s13^2*s23^2 + denom(1/4*s12^2)*mt^2*s13^2*s14*s23
       + denom(1/4*s12^2)*mt^2*s13^3*s23 + denom(1/4*s12^2)*mt^2*s12*s13*s23^2
       + denom(1/4*s12^2)*mt^2*s12*s13^2*s23 - denom(1/4*s12^2)*mt^2*mh^2*s13*
      s23^2 - denom(1/4*s12^2)*mt^2*mh^2*s13^2*s23 - 1/2*denom(1/4*s12^2)*mt^4
      *s23^2*s24 - 1/2*denom(1/4*s12^2)*mt^4*s23^3 - 1/2*denom(1/4*s12^2)*mt^4
      *s14*s23^2 - 2*denom(1/4*s12^2)*mt^4*s13*s23*s24 - 5/2*denom(1/4*s12^2)*
      mt^4*s13*s23^2 - 2*denom(1/4*s12^2)*mt^4*s13*s14*s23 - 1/2*denom(1/4*
      s12^2)*mt^4*s13^2*s24 - 5/2*denom(1/4*s12^2)*mt^4*s13^2*s23 - 1/2*denom(
      1/4*s12^2)*mt^4*s13^2*s14 - 1/2*denom(1/4*s12^2)*mt^4*s13^3 - 1/2*denom(
      1/4*s12^2)*mt^4*s12*s23^2 - 2*denom(1/4*s12^2)*mt^4*s12*s13*s23 - 1/2*
      denom(1/4*s12^2)*mt^4*s12*s13^2 + 1/2*denom(1/4*s12^2)*mt^4*mh^2*s23^2
       + 2*denom(1/4*s12^2)*mt^4*mh^2*s13*s23 + 1/2*denom(1/4*s12^2)*mt^4*mh^2
      *s13^2 + denom(1/4*s12^2)*mt^6*s23*s24 + denom(1/4*s12^2)*mt^6*s23^2 + 
      denom(1/4*s12^2)*mt^6*s14*s23 + denom(1/4*s12^2)*mt^6*s13*s24 + 2*denom(
      1/4*s12^2)*mt^6*s13*s23 + denom(1/4*s12^2)*mt^6*s13*s14 + denom(1/4*
      s12^2)*mt^6*s13^2 + denom(1/4*s12^2)*mt^6*s12*s23 + denom(1/4*s12^2)*
      mt^6*s12*s13 - denom(1/4*s12^2)*mt^6*mh^2*s23 - denom(1/4*s12^2)*mt^6*
      mh^2*s13 - 1/2*denom(1/4*s12^2)*mt^8*s24 - 1/2*denom(1/4*s12^2)*mt^8*s23
       - 1/2*denom(1/4*s12^2)*mt^8*s14 - 1/2*denom(1/4*s12^2)*mt^8*s13 - 1/2*
      denom(1/4*s12^2)*mt^8*s12 + 1/2*denom(1/4*s12^2)*mt^8*mh^2;
 
 .sort
id KMatrix(1,2) =  mt^2*s24^2 + 2*mt^2*s23*s24 + mt^2*s23^2 + 2*mt^2*s14*s24
       + 2*mt^2*s14*s23 + mt^2*s14^2 + 2*mt^2*s13*s24 + 2*mt^2*s13*s23 + 2*
      mt^2*s13*s14 + mt^2*s13^2 + 2*mt^2*s12*s24 + 2*mt^2*s12*s23 + 2*mt^2*s12
      *s14 + 2*mt^2*s12*s13 + mt^2*s12^2 - 2*mt^2*mh^2*s24 - 2*mt^2*mh^2*s23
       - 2*mt^2*mh^2*s14 - 2*mt^2*mh^2*s13 - 2*mt^2*mh^2*s12 + mt^2*mh^4 - 2*
      mt^4*s24 - 2*mt^4*s23 - 2*mt^4*s14 - 2*mt^4*s13 - 2*mt^4*s12 + 2*mt^4*
      mh^2 - 1/2*denom(1/2*s12)*s13*s23*s24^2 - denom(1/2*s12)*s13*s23^2*s24
       - 1/2*denom(1/2*s12)*s13*s23^3 - denom(1/2*s12)*s13*s14*s23*s24 - 
      denom(1/2*s12)*s13*s14*s23^2 - 1/2*denom(1/2*s12)*s13*s14^2*s23 - denom(
      1/2*s12)*s13^2*s23*s24 - denom(1/2*s12)*s13^2*s23^2 - denom(1/2*s12)*
      s13^2*s14*s23 - 1/2*denom(1/2*s12)*s13^3*s23 - denom(1/2*s12)*s12*s13*
      s23*s24 - denom(1/2*s12)*s12*s13*s23^2 - denom(1/2*s12)*s12*s13*s14*s23
       - denom(1/2*s12)*s12*s13^2*s23 - 1/2*denom(1/2*s12)*s12^2*s13*s23 + 
      denom(1/2*s12)*mh^2*s13*s23*s24 + denom(1/2*s12)*mh^2*s13*s23^2 + denom(
      1/2*s12)*mh^2*s13*s14*s23 + denom(1/2*s12)*mh^2*s13^2*s23 + denom(1/2*
      s12)*mh^2*s12*s13*s23 - 1/2*denom(1/2*s12)*mh^4*s13*s23 + 1/2*denom(1/2*
      s12)*mt^2*s23*s24^2 + denom(1/2*s12)*mt^2*s23^2*s24 + 1/2*denom(1/2*s12)
      *mt^2*s23^3 + 3/2*denom(1/2*s12)*mt^2*s14*s23*s24 + 3/2*denom(1/2*s12)*
      mt^2*s14*s23^2 + denom(1/2*s12)*mt^2*s14^2*s23 + denom(1/2*s12)*mt^2*s13
      *s24^2 + 7/2*denom(1/2*s12)*mt^2*s13*s23*s24 + 5/2*denom(1/2*s12)*mt^2*
      s13*s23^2 + 3/2*denom(1/2*s12)*mt^2*s13*s14*s24 + 7/2*denom(1/2*s12)*
      mt^2*s13*s14*s23 + 1/2*denom(1/2*s12)*mt^2*s13*s14^2 + 3/2*denom(1/2*s12
      )*mt^2*s13^2*s24 + 5/2*denom(1/2*s12)*mt^2*s13^2*s23 + denom(1/2*s12)*
      mt^2*s13^2*s14 + 1/2*denom(1/2*s12)*mt^2*s13^3 + denom(1/2*s12)*mt^2*s12
      *s23*s24 + denom(1/2*s12)*mt^2*s12*s23^2 + 3/2*denom(1/2*s12)*mt^2*s12*
      s14*s23 + 3/2*denom(1/2*s12)*mt^2*s12*s13*s24 + 3*denom(1/2*s12)*mt^2*
      s12*s13*s23 + denom(1/2*s12)*mt^2*s12*s13*s14 + denom(1/2*s12)*mt^2*s12*
      s13^2 + 1/2*denom(1/2*s12)*mt^2*s12^2*s23 + 1/2*denom(1/2*s12)*mt^2*
      s12^2*s13 - denom(1/2*s12)*mt^2*mh^2*s23*s24 - denom(1/2*s12)*mt^2*mh^2*
      s23^2 - 3/2*denom(1/2*s12)*mt^2*mh^2*s14*s23 - 3/2*denom(1/2*s12)*mt^2*
      mh^2*s13*s24 - 3*denom(1/2*s12)*mt^2*mh^2*s13*s23 - denom(1/2*s12)*mt^2*
      mh^2*s13*s14 - denom(1/2*s12)*mt^2*mh^2*s13^2 - denom(1/2*s12)*mt^2*mh^2
      *s12*s23 - denom(1/2*s12)*mt^2*mh^2*s12*s13 + 1/2*denom(1/2*s12)*mt^2*
      mh^4*s23 + 1/2*denom(1/2*s12)*mt^2*mh^4*s13 - denom(1/2*s12)*mt^4*s24^2
       - 3*denom(1/2*s12)*mt^4*s23*s24 - 2*denom(1/2*s12)*mt^4*s23^2 - 2*
      denom(1/2*s12)*mt^4*s14*s24 - 3*denom(1/2*s12)*mt^4*s14*s23 - denom(1/2*
      s12)*mt^4*s14^2 - 3*denom(1/2*s12)*mt^4*s13*s24 - 4*denom(1/2*s12)*mt^4*
      s13*s23 - 3*denom(1/2*s12)*mt^4*s13*s14 - 2*denom(1/2*s12)*mt^4*s13^2 - 
      3/2*denom(1/2*s12)*mt^4*s12*s24 - 5/2*denom(1/2*s12)*mt^4*s12*s23 - 3/2*
      denom(1/2*s12)*mt^4*s12*s14 - 5/2*denom(1/2*s12)*mt^4*s12*s13 - 1/2*
      denom(1/2*s12)*mt^4*s12^2 + 3/2*denom(1/2*s12)*mt^4*mh^2*s24 + 5/2*
      denom(1/2*s12)*mt^4*mh^2*s23 + 3/2*denom(1/2*s12)*mt^4*mh^2*s14 + 5/2*
      denom(1/2*s12)*mt^4*mh^2*s13 + denom(1/2*s12)*mt^4*mh^2*s12 - 1/2*denom(
      1/2*s12)*mt^4*mh^4 + 2*denom(1/2*s12)*mt^6*s24 + 2*denom(1/2*s12)*mt^6*
      s23 + 2*denom(1/2*s12)*mt^6*s14 + 2*denom(1/2*s12)*mt^6*s13 + 2*denom(1/
      2*s12)*mt^6*s12 - 2*denom(1/2*s12)*mt^6*mh^2 - 1/4*denom(1/4*s12^2)*s13*
      s14*s23^2*s24 - 1/4*denom(1/4*s12^2)*s13*s14*s23^3 - 1/4*denom(1/4*s12^2
      )*s13*s14^2*s23^2 - 1/4*denom(1/4*s12^2)*s13^2*s23*s24^2 - 1/4*denom(1/4
      *s12^2)*s13^2*s23^2*s24 - 1/4*denom(1/4*s12^2)*s13^2*s14*s23*s24 - 1/4*
      denom(1/4*s12^2)*s13^2*s14*s23^2 - 1/4*denom(1/4*s12^2)*s13^3*s23*s24 - 
      1/4*denom(1/4*s12^2)*s12*s13*s14*s23^2 - 1/4*denom(1/4*s12^2)*s12*s13^2*
      s23*s24 + 1/4*denom(1/4*s12^2)*mh^2*s13*s14*s23^2 + 1/4*denom(1/4*s12^2)
      *mh^2*s13^2*s23*s24 + 1/4*denom(1/4*s12^2)*mt^2*s14*s23^2*s24 + 1/4*
      denom(1/4*s12^2)*mt^2*s14*s23^3 + 1/4*denom(1/4*s12^2)*mt^2*s14^2*s23^2
       + 1/2*denom(1/4*s12^2)*mt^2*s13*s23*s24^2 + 3/4*denom(1/4*s12^2)*mt^2*
      s13*s23^2*s24 + 1/4*denom(1/4*s12^2)*mt^2*s13*s23^3 + denom(1/4*s12^2)*
      mt^2*s13*s14*s23*s24 + denom(1/4*s12^2)*mt^2*s13*s14*s23^2 + 1/2*denom(1/
      4*s12^2)*mt^2*s13*s14^2*s23 + 1/4*denom(1/4*s12^2)*mt^2*s13^2*s24^2 + 
      denom(1/4*s12^2)*mt^2*s13^2*s23*s24 + 1/2*denom(1/4*s12^2)*mt^2*s13^2*
      s23^2 + 1/4*denom(1/4*s12^2)*mt^2*s13^2*s14*s24 + 3/4*denom(1/4*s12^2)*
      mt^2*s13^2*s14*s23 + 1/4*denom(1/4*s12^2)*mt^2*s13^3*s24 + 1/4*denom(1/4
      *s12^2)*mt^2*s13^3*s23 + 1/4*denom(1/4*s12^2)*mt^2*s12*s14*s23^2 + 1/2*
      denom(1/4*s12^2)*mt^2*s12*s13*s23*s24 + 1/4*denom(1/4*s12^2)*mt^2*s12*
      s13*s23^2 + 1/2*denom(1/4*s12^2)*mt^2*s12*s13*s14*s23 + 1/4*denom(1/4*
      s12^2)*mt^2*s12*s13^2*s24 + 1/4*denom(1/4*s12^2)*mt^2*s12*s13^2*s23 - 1/
      4*denom(1/4*s12^2)*mt^2*mh^2*s14*s23^2 - 1/2*denom(1/4*s12^2)*mt^2*mh^2*
      s13*s23*s24 - 1/4*denom(1/4*s12^2)*mt^2*mh^2*s13*s23^2 - 1/2*denom(1/4*
      s12^2)*mt^2*mh^2*s13*s14*s23 - 1/4*denom(1/4*s12^2)*mt^2*mh^2*s13^2*s24
       - 1/4*denom(1/4*s12^2)*mt^2*mh^2*s13^2*s23 - 1/4*denom(1/4*s12^2)*mt^4*
      s23*s24^2 - 1/2*denom(1/4*s12^2)*mt^4*s23^2*s24 - 1/4*denom(1/4*s12^2)*
      mt^4*s23^3 - 3/4*denom(1/4*s12^2)*mt^4*s14*s23*s24 - 3/4*denom(1/4*s12^2
      )*mt^4*s14*s23^2 - 1/2*denom(1/4*s12^2)*mt^4*s14^2*s23 - 1/2*denom(1/4*
      s12^2)*mt^4*s13*s24^2 - 7/4*denom(1/4*s12^2)*mt^4*s13*s23*s24 - 5/4*
      denom(1/4*s12^2)*mt^4*s13*s23^2 - 3/4*denom(1/4*s12^2)*mt^4*s13*s14*s24
       - 7/4*denom(1/4*s12^2)*mt^4*s13*s14*s23 - 1/4*denom(1/4*s12^2)*mt^4*s13
      *s14^2 - 3/4*denom(1/4*s12^2)*mt^4*s13^2*s24 - 5/4*denom(1/4*s12^2)*mt^4
      *s13^2*s23 - 1/2*denom(1/4*s12^2)*mt^4*s13^2*s14 - 1/4*denom(1/4*s12^2)*
      mt^4*s13^3 - 1/4*denom(1/4*s12^2)*mt^4*s12*s23*s24 - 1/4*denom(1/4*s12^2
      )*mt^4*s12*s23^2 - 1/2*denom(1/4*s12^2)*mt^4*s12*s14*s23 - 1/2*denom(1/4
      *s12^2)*mt^4*s12*s13*s24 - denom(1/4*s12^2)*mt^4*s12*s13*s23 - 1/4*
      denom(1/4*s12^2)*mt^4*s12*s13*s14 - 1/4*denom(1/4*s12^2)*mt^4*s12*s13^2
       + 1/4*denom(1/4*s12^2)*mt^4*mh^2*s23*s24 + 1/4*denom(1/4*s12^2)*mt^4*
      mh^2*s23^2 + 1/2*denom(1/4*s12^2)*mt^4*mh^2*s14*s23 + 1/2*denom(1/4*
      s12^2)*mt^4*mh^2*s13*s24 + denom(1/4*s12^2)*mt^4*mh^2*s13*s23 + 1/4*
      denom(1/4*s12^2)*mt^4*mh^2*s13*s14 + 1/4*denom(1/4*s12^2)*mt^4*mh^2*
      s13^2 + 1/4*denom(1/4*s12^2)*mt^6*s24^2 + denom(1/4*s12^2)*mt^6*s23*s24
       + 3/4*denom(1/4*s12^2)*mt^6*s23^2 + 1/2*denom(1/4*s12^2)*mt^6*s14*s24
       + denom(1/4*s12^2)*mt^6*s14*s23 + 1/4*denom(1/4*s12^2)*mt^6*s14^2 + 
      denom(1/4*s12^2)*mt^6*s13*s24 + 3/2*denom(1/4*s12^2)*mt^6*s13*s23 + 
      denom(1/4*s12^2)*mt^6*s13*s14 + 3/4*denom(1/4*s12^2)*mt^6*s13^2 + 1/4*
      denom(1/4*s12^2)*mt^6*s12*s24 + 3/4*denom(1/4*s12^2)*mt^6*s12*s23 + 1/4*
      denom(1/4*s12^2)*mt^6*s12*s14 + 3/4*denom(1/4*s12^2)*mt^6*s12*s13 - 1/4*
      denom(1/4*s12^2)*mt^6*mh^2*s24 - 3/4*denom(1/4*s12^2)*mt^6*mh^2*s23 - 1/
      4*denom(1/4*s12^2)*mt^6*mh^2*s14 - 3/4*denom(1/4*s12^2)*mt^6*mh^2*s13 - 
      1/2*denom(1/4*s12^2)*mt^8*s24 - 1/2*denom(1/4*s12^2)*mt^8*s23 - 1/2*
      denom(1/4*s12^2)*mt^8*s14 - 1/2*denom(1/4*s12^2)*mt^8*s13 - 1/2*denom(1/
      4*s12^2)*mt^8*s12 + 1/2*denom(1/4*s12^2)*mt^8*mh^2;
 
 .sort
id KMatrix(1,3) =  mt^2*s24^2 + 2*mt^2*s23*s24 + mt^2*s23^2 + 2*mt^2*s14*s24
       + 2*mt^2*s14*s23 + mt^2*s14^2 + 2*mt^2*s13*s24 + 2*mt^2*s13*s23 + 2*
      mt^2*s13*s14 + mt^2*s13^2 + 2*mt^2*s12*s24 + 2*mt^2*s12*s23 + 2*mt^2*s12
      *s14 + 2*mt^2*s12*s13 + mt^2*s12^2 - 2*mt^2*mh^2*s24 - 2*mt^2*mh^2*s23
       - 2*mt^2*mh^2*s14 - 2*mt^2*mh^2*s13 - 2*mt^2*mh^2*s12 + mt^2*mh^4 - 2*
      mt^4*s24 - 2*mt^4*s23 - 2*mt^4*s14 - 2*mt^4*s13 - 2*mt^4*s12 + 2*mt^4*
      mh^2 - 1/2*denom(1/2*s12)*s13*s23*s24^2 - denom(1/2*s12)*s13*s23^2*s24
       - 1/2*denom(1/2*s12)*s13*s23^3 - denom(1/2*s12)*s13*s14*s23*s24 - 
      denom(1/2*s12)*s13*s14*s23^2 - 1/2*denom(1/2*s12)*s13*s14^2*s23 - denom(
      1/2*s12)*s13^2*s23*s24 - denom(1/2*s12)*s13^2*s23^2 - denom(1/2*s12)*
      s13^2*s14*s23 - 1/2*denom(1/2*s12)*s13^3*s23 - denom(1/2*s12)*s12*s13*
      s23*s24 - denom(1/2*s12)*s12*s13*s23^2 - denom(1/2*s12)*s12*s13*s14*s23
       - denom(1/2*s12)*s12*s13^2*s23 - 1/2*denom(1/2*s12)*s12^2*s13*s23 + 
      denom(1/2*s12)*mh^2*s13*s23*s24 + denom(1/2*s12)*mh^2*s13*s23^2 + denom(
      1/2*s12)*mh^2*s13*s14*s23 + denom(1/2*s12)*mh^2*s13^2*s23 + denom(1/2*
      s12)*mh^2*s12*s13*s23 - 1/2*denom(1/2*s12)*mh^4*s13*s23 + 1/2*denom(1/2*
      s12)*mt^2*s23*s24^2 + denom(1/2*s12)*mt^2*s23^2*s24 + 1/2*denom(1/2*s12)
      *mt^2*s23^3 + 3/2*denom(1/2*s12)*mt^2*s14*s23*s24 + 3/2*denom(1/2*s12)*
      mt^2*s14*s23^2 + denom(1/2*s12)*mt^2*s14^2*s23 + denom(1/2*s12)*mt^2*s13
      *s24^2 + 7/2*denom(1/2*s12)*mt^2*s13*s23*s24 + 5/2*denom(1/2*s12)*mt^2*
      s13*s23^2 + 3/2*denom(1/2*s12)*mt^2*s13*s14*s24 + 7/2*denom(1/2*s12)*
      mt^2*s13*s14*s23 + 1/2*denom(1/2*s12)*mt^2*s13*s14^2 + 3/2*denom(1/2*s12
      )*mt^2*s13^2*s24 + 5/2*denom(1/2*s12)*mt^2*s13^2*s23 + denom(1/2*s12)*
      mt^2*s13^2*s14 + 1/2*denom(1/2*s12)*mt^2*s13^3 + denom(1/2*s12)*mt^2*s12
      *s23*s24 + denom(1/2*s12)*mt^2*s12*s23^2 + 3/2*denom(1/2*s12)*mt^2*s12*
      s14*s23 + 3/2*denom(1/2*s12)*mt^2*s12*s13*s24 + 3*denom(1/2*s12)*mt^2*
      s12*s13*s23 + denom(1/2*s12)*mt^2*s12*s13*s14 + denom(1/2*s12)*mt^2*s12*
      s13^2 + 1/2*denom(1/2*s12)*mt^2*s12^2*s23 + 1/2*denom(1/2*s12)*mt^2*
      s12^2*s13 - denom(1/2*s12)*mt^2*mh^2*s23*s24 - denom(1/2*s12)*mt^2*mh^2*
      s23^2 - 3/2*denom(1/2*s12)*mt^2*mh^2*s14*s23 - 3/2*denom(1/2*s12)*mt^2*
      mh^2*s13*s24 - 3*denom(1/2*s12)*mt^2*mh^2*s13*s23 - denom(1/2*s12)*mt^2*
      mh^2*s13*s14 - denom(1/2*s12)*mt^2*mh^2*s13^2 - denom(1/2*s12)*mt^2*mh^2
      *s12*s23 - denom(1/2*s12)*mt^2*mh^2*s12*s13 + 1/2*denom(1/2*s12)*mt^2*
      mh^4*s23 + 1/2*denom(1/2*s12)*mt^2*mh^4*s13 - denom(1/2*s12)*mt^4*s24^2
       - 3*denom(1/2*s12)*mt^4*s23*s24 - 2*denom(1/2*s12)*mt^4*s23^2 - 2*
      denom(1/2*s12)*mt^4*s14*s24 - 3*denom(1/2*s12)*mt^4*s14*s23 - denom(1/2*
      s12)*mt^4*s14^2 - 3*denom(1/2*s12)*mt^4*s13*s24 - 4*denom(1/2*s12)*mt^4*
      s13*s23 - 3*denom(1/2*s12)*mt^4*s13*s14 - 2*denom(1/2*s12)*mt^4*s13^2 - 
      3/2*denom(1/2*s12)*mt^4*s12*s24 - 5/2*denom(1/2*s12)*mt^4*s12*s23 - 3/2*
      denom(1/2*s12)*mt^4*s12*s14 - 5/2*denom(1/2*s12)*mt^4*s12*s13 - 1/2*
      denom(1/2*s12)*mt^4*s12^2 + 3/2*denom(1/2*s12)*mt^4*mh^2*s24 + 5/2*
      denom(1/2*s12)*mt^4*mh^2*s23 + 3/2*denom(1/2*s12)*mt^4*mh^2*s14 + 5/2*
      denom(1/2*s12)*mt^4*mh^2*s13 + denom(1/2*s12)*mt^4*mh^2*s12 - 1/2*denom(
      1/2*s12)*mt^4*mh^4 + 2*denom(1/2*s12)*mt^6*s24 + 2*denom(1/2*s12)*mt^6*
      s23 + 2*denom(1/2*s12)*mt^6*s14 + 2*denom(1/2*s12)*mt^6*s13 + 2*denom(1/
      2*s12)*mt^6*s12 - 2*denom(1/2*s12)*mt^6*mh^2 - 1/4*denom(1/4*s12^2)*s13*
      s14*s23^2*s24 - 1/4*denom(1/4*s12^2)*s13*s14*s23^3 - 1/4*denom(1/4*s12^2
      )*s13*s14^2*s23^2 - 1/4*denom(1/4*s12^2)*s13^2*s23*s24^2 - 1/4*denom(1/4
      *s12^2)*s13^2*s23^2*s24 - 1/4*denom(1/4*s12^2)*s13^2*s14*s23*s24 - 1/4*
      denom(1/4*s12^2)*s13^2*s14*s23^2 - 1/4*denom(1/4*s12^2)*s13^3*s23*s24 - 
      1/4*denom(1/4*s12^2)*s12*s13*s14*s23^2 - 1/4*denom(1/4*s12^2)*s12*s13^2*
      s23*s24 + 1/4*denom(1/4*s12^2)*mh^2*s13*s14*s23^2 + 1/4*denom(1/4*s12^2)
      *mh^2*s13^2*s23*s24 + 1/4*denom(1/4*s12^2)*mt^2*s14*s23^2*s24 + 1/4*
      denom(1/4*s12^2)*mt^2*s14*s23^3 + 1/4*denom(1/4*s12^2)*mt^2*s14^2*s23^2
       + 1/2*denom(1/4*s12^2)*mt^2*s13*s23*s24^2 + 3/4*denom(1/4*s12^2)*mt^2*
      s13*s23^2*s24 + 1/4*denom(1/4*s12^2)*mt^2*s13*s23^3 + denom(1/4*s12^2)*
      mt^2*s13*s14*s23*s24 + denom(1/4*s12^2)*mt^2*s13*s14*s23^2 + 1/2*denom(1/
      4*s12^2)*mt^2*s13*s14^2*s23 + 1/4*denom(1/4*s12^2)*mt^2*s13^2*s24^2 + 
      denom(1/4*s12^2)*mt^2*s13^2*s23*s24 + 1/2*denom(1/4*s12^2)*mt^2*s13^2*
      s23^2 + 1/4*denom(1/4*s12^2)*mt^2*s13^2*s14*s24 + 3/4*denom(1/4*s12^2)*
      mt^2*s13^2*s14*s23 + 1/4*denom(1/4*s12^2)*mt^2*s13^3*s24 + 1/4*denom(1/4
      *s12^2)*mt^2*s13^3*s23 + 1/4*denom(1/4*s12^2)*mt^2*s12*s14*s23^2 + 1/2*
      denom(1/4*s12^2)*mt^2*s12*s13*s23*s24 + 1/4*denom(1/4*s12^2)*mt^2*s12*
      s13*s23^2 + 1/2*denom(1/4*s12^2)*mt^2*s12*s13*s14*s23 + 1/4*denom(1/4*
      s12^2)*mt^2*s12*s13^2*s24 + 1/4*denom(1/4*s12^2)*mt^2*s12*s13^2*s23 - 1/
      4*denom(1/4*s12^2)*mt^2*mh^2*s14*s23^2 - 1/2*denom(1/4*s12^2)*mt^2*mh^2*
      s13*s23*s24 - 1/4*denom(1/4*s12^2)*mt^2*mh^2*s13*s23^2 - 1/2*denom(1/4*
      s12^2)*mt^2*mh^2*s13*s14*s23 - 1/4*denom(1/4*s12^2)*mt^2*mh^2*s13^2*s24
       - 1/4*denom(1/4*s12^2)*mt^2*mh^2*s13^2*s23 - 1/4*denom(1/4*s12^2)*mt^4*
      s23*s24^2 - 1/2*denom(1/4*s12^2)*mt^4*s23^2*s24 - 1/4*denom(1/4*s12^2)*
      mt^4*s23^3 - 3/4*denom(1/4*s12^2)*mt^4*s14*s23*s24 - 3/4*denom(1/4*s12^2
      )*mt^4*s14*s23^2 - 1/2*denom(1/4*s12^2)*mt^4*s14^2*s23 - 1/2*denom(1/4*
      s12^2)*mt^4*s13*s24^2 - 7/4*denom(1/4*s12^2)*mt^4*s13*s23*s24 - 5/4*
      denom(1/4*s12^2)*mt^4*s13*s23^2 - 3/4*denom(1/4*s12^2)*mt^4*s13*s14*s24
       - 7/4*denom(1/4*s12^2)*mt^4*s13*s14*s23 - 1/4*denom(1/4*s12^2)*mt^4*s13
      *s14^2 - 3/4*denom(1/4*s12^2)*mt^4*s13^2*s24 - 5/4*denom(1/4*s12^2)*mt^4
      *s13^2*s23 - 1/2*denom(1/4*s12^2)*mt^4*s13^2*s14 - 1/4*denom(1/4*s12^2)*
      mt^4*s13^3 - 1/4*denom(1/4*s12^2)*mt^4*s12*s23*s24 - 1/4*denom(1/4*s12^2
      )*mt^4*s12*s23^2 - 1/2*denom(1/4*s12^2)*mt^4*s12*s14*s23 - 1/2*denom(1/4
      *s12^2)*mt^4*s12*s13*s24 - denom(1/4*s12^2)*mt^4*s12*s13*s23 - 1/4*
      denom(1/4*s12^2)*mt^4*s12*s13*s14 - 1/4*denom(1/4*s12^2)*mt^4*s12*s13^2
       + 1/4*denom(1/4*s12^2)*mt^4*mh^2*s23*s24 + 1/4*denom(1/4*s12^2)*mt^4*
      mh^2*s23^2 + 1/2*denom(1/4*s12^2)*mt^4*mh^2*s14*s23 + 1/2*denom(1/4*
      s12^2)*mt^4*mh^2*s13*s24 + denom(1/4*s12^2)*mt^4*mh^2*s13*s23 + 1/4*
      denom(1/4*s12^2)*mt^4*mh^2*s13*s14 + 1/4*denom(1/4*s12^2)*mt^4*mh^2*
      s13^2 + 1/4*denom(1/4*s12^2)*mt^6*s24^2 + denom(1/4*s12^2)*mt^6*s23*s24
       + 3/4*denom(1/4*s12^2)*mt^6*s23^2 + 1/2*denom(1/4*s12^2)*mt^6*s14*s24
       + denom(1/4*s12^2)*mt^6*s14*s23 + 1/4*denom(1/4*s12^2)*mt^6*s14^2 + 
      denom(1/4*s12^2)*mt^6*s13*s24 + 3/2*denom(1/4*s12^2)*mt^6*s13*s23 + 
      denom(1/4*s12^2)*mt^6*s13*s14 + 3/4*denom(1/4*s12^2)*mt^6*s13^2 + 1/4*
      denom(1/4*s12^2)*mt^6*s12*s24 + 3/4*denom(1/4*s12^2)*mt^6*s12*s23 + 1/4*
      denom(1/4*s12^2)*mt^6*s12*s14 + 3/4*denom(1/4*s12^2)*mt^6*s12*s13 - 1/4*
      denom(1/4*s12^2)*mt^6*mh^2*s24 - 3/4*denom(1/4*s12^2)*mt^6*mh^2*s23 - 1/
      4*denom(1/4*s12^2)*mt^6*mh^2*s14 - 3/4*denom(1/4*s12^2)*mt^6*mh^2*s13 - 
      1/2*denom(1/4*s12^2)*mt^8*s24 - 1/2*denom(1/4*s12^2)*mt^8*s23 - 1/2*
      denom(1/4*s12^2)*mt^8*s14 - 1/2*denom(1/4*s12^2)*mt^8*s13 - 1/2*denom(1/
      4*s12^2)*mt^8*s12 + 1/2*denom(1/4*s12^2)*mt^8*mh^2;
 
 .sort
id KMatrix(1,4) =   - 1/2*s24^3 - 3/2*s23*s24^2 - 3/2*s23^2*s24 - 1/2*s23^3 - 
      3/2*s14*s24^2 - 3*s14*s23*s24 - 3/2*s14*s23^2 - 3/2*s14^2*s24 - 3/2*
      s14^2*s23 - 1/2*s14^3 - 3/2*s13*s24^2 - 3*s13*s23*s24 - 3/2*s13*s23^2 - 
      3*s13*s14*s24 - 3*s13*s14*s23 - 3/2*s13*s14^2 - 3/2*s13^2*s24 - 3/2*
      s13^2*s23 - 3/2*s13^2*s14 - 1/2*s13^3 - 3/2*s12*s24^2 - 3*s12*s23*s24 - 
      3/2*s12*s23^2 - 3*s12*s14*s24 - 3*s12*s14*s23 - 3/2*s12*s14^2 - 3*s12*
      s13*s24 - 3*s12*s13*s23 - 3*s12*s13*s14 - 3/2*s12*s13^2 - 3/2*s12^2*s24
       - 3/2*s12^2*s23 - 3/2*s12^2*s14 - 3/2*s12^2*s13 - 1/2*s12^3 + 3/2*mh^2*
      s24^2 + 3*mh^2*s23*s24 + 3/2*mh^2*s23^2 + 3*mh^2*s14*s24 + 3*mh^2*s14*
      s23 + 3/2*mh^2*s14^2 + 3*mh^2*s13*s24 + 3*mh^2*s13*s23 + 3*mh^2*s13*s14
       + 3/2*mh^2*s13^2 + 3*mh^2*s12*s24 + 3*mh^2*s12*s23 + 3*mh^2*s12*s14 + 3
      *mh^2*s12*s13 + 3/2*mh^2*s12^2 - 3/2*mh^4*s24 - 3/2*mh^4*s23 - 3/2*mh^4*
      s14 - 3/2*mh^4*s13 - 3/2*mh^4*s12 + 1/2*mh^6 + 2*mt^2*s24^2 + 4*mt^2*s23
      *s24 + 2*mt^2*s23^2 + 4*mt^2*s14*s24 + 4*mt^2*s14*s23 + 2*mt^2*s14^2 + 4
      *mt^2*s13*s24 + 4*mt^2*s13*s23 + 4*mt^2*s13*s14 + 2*mt^2*s13^2 + 4*mt^2*
      s12*s24 + 4*mt^2*s12*s23 + 4*mt^2*s12*s14 + 4*mt^2*s12*s13 + 2*mt^2*
      s12^2 - 4*mt^2*mh^2*s24 - 4*mt^2*mh^2*s23 - 4*mt^2*mh^2*s14 - 4*mt^2*
      mh^2*s13 - 4*mt^2*mh^2*s12 + 2*mt^2*mh^4 - 2*mt^4*s24 - 2*mt^4*s23 - 2*
      mt^4*s14 - 2*mt^4*s13 - 2*mt^4*s12 + 2*mt^4*mh^2 - 1/2*denom(1/2*s12)*
      s14*s23*s24^2 - denom(1/2*s12)*s14*s23^2*s24 - 1/2*denom(1/2*s12)*s14*
      s23^3 - denom(1/2*s12)*s14^2*s23*s24 - denom(1/2*s12)*s14^2*s23^2 - 1/2*
      denom(1/2*s12)*s14^3*s23 - 1/2*denom(1/2*s12)*s13*s24^3 - denom(1/2*s12)
      *s13*s23*s24^2 - 1/2*denom(1/2*s12)*s13*s23^2*s24 - denom(1/2*s12)*s13*
      s14*s24^2 - 2*denom(1/2*s12)*s13*s14*s23*s24 - denom(1/2*s12)*s13*s14*
      s23^2 - 1/2*denom(1/2*s12)*s13*s14^2*s24 - denom(1/2*s12)*s13*s14^2*s23
       - denom(1/2*s12)*s13^2*s24^2 - denom(1/2*s12)*s13^2*s23*s24 - denom(1/2
      *s12)*s13^2*s14*s24 - 1/2*denom(1/2*s12)*s13^2*s14*s23 - 1/2*denom(1/2*
      s12)*s13^3*s24 - denom(1/2*s12)*s12*s14*s23*s24 - denom(1/2*s12)*s12*s14
      *s23^2 - denom(1/2*s12)*s12*s14^2*s23 - denom(1/2*s12)*s12*s13*s24^2 - 
      denom(1/2*s12)*s12*s13*s23*s24 - denom(1/2*s12)*s12*s13*s14*s24 - denom(
      1/2*s12)*s12*s13*s14*s23 - denom(1/2*s12)*s12*s13^2*s24 - 1/2*denom(1/2*
      s12)*s12^2*s14*s23 - 1/2*denom(1/2*s12)*s12^2*s13*s24 + denom(1/2*s12)*
      mh^2*s14*s23*s24 + denom(1/2*s12)*mh^2*s14*s23^2 + denom(1/2*s12)*mh^2*
      s14^2*s23 + denom(1/2*s12)*mh^2*s13*s24^2 + denom(1/2*s12)*mh^2*s13*s23*
      s24 + denom(1/2*s12)*mh^2*s13*s14*s24 + denom(1/2*s12)*mh^2*s13*s14*s23
       + denom(1/2*s12)*mh^2*s13^2*s24 + denom(1/2*s12)*mh^2*s12*s14*s23 + 
      denom(1/2*s12)*mh^2*s12*s13*s24 - 1/2*denom(1/2*s12)*mh^4*s14*s23 - 1/2*
      denom(1/2*s12)*mh^4*s13*s24 + 1/2*denom(1/2*s12)*mt^2*s24^3 + 3/2*denom(
      1/2*s12)*mt^2*s23*s24^2 + 3/2*denom(1/2*s12)*mt^2*s23^2*s24 + 1/2*denom(
      1/2*s12)*mt^2*s23^3 + 3/2*denom(1/2*s12)*mt^2*s14*s24^2 + 4*denom(1/2*
      s12)*mt^2*s14*s23*s24 + 5/2*denom(1/2*s12)*mt^2*s14*s23^2 + 3/2*denom(1/
      2*s12)*mt^2*s14^2*s24 + 5/2*denom(1/2*s12)*mt^2*s14^2*s23 + 1/2*denom(1/
      2*s12)*mt^2*s14^3 + 5/2*denom(1/2*s12)*mt^2*s13*s24^2 + 4*denom(1/2*s12)
      *mt^2*s13*s23*s24 + 3/2*denom(1/2*s12)*mt^2*s13*s23^2 + 4*denom(1/2*s12)
      *mt^2*s13*s14*s24 + 4*denom(1/2*s12)*mt^2*s13*s14*s23 + 3/2*denom(1/2*
      s12)*mt^2*s13*s14^2 + 5/2*denom(1/2*s12)*mt^2*s13^2*s24 + 3/2*denom(1/2*
      s12)*mt^2*s13^2*s23 + 3/2*denom(1/2*s12)*mt^2*s13^2*s14 + 1/2*denom(1/2*
      s12)*mt^2*s13^3 + denom(1/2*s12)*mt^2*s12*s24^2 + 2*denom(1/2*s12)*mt^2*
      s12*s23*s24 + denom(1/2*s12)*mt^2*s12*s23^2 + 2*denom(1/2*s12)*mt^2*s12*
      s14*s24 + 3*denom(1/2*s12)*mt^2*s12*s14*s23 + denom(1/2*s12)*mt^2*s12*
      s14^2 + 3*denom(1/2*s12)*mt^2*s12*s13*s24 + 2*denom(1/2*s12)*mt^2*s12*
      s13*s23 + 2*denom(1/2*s12)*mt^2*s12*s13*s14 + denom(1/2*s12)*mt^2*s12*
      s13^2 + 1/2*denom(1/2*s12)*mt^2*s12^2*s24 + 1/2*denom(1/2*s12)*mt^2*
      s12^2*s23 + 1/2*denom(1/2*s12)*mt^2*s12^2*s14 + 1/2*denom(1/2*s12)*mt^2*
      s12^2*s13 - denom(1/2*s12)*mt^2*mh^2*s24^2 - 2*denom(1/2*s12)*mt^2*mh^2*
      s23*s24 - denom(1/2*s12)*mt^2*mh^2*s23^2 - 2*denom(1/2*s12)*mt^2*mh^2*
      s14*s24 - 3*denom(1/2*s12)*mt^2*mh^2*s14*s23 - denom(1/2*s12)*mt^2*mh^2*
      s14^2 - 3*denom(1/2*s12)*mt^2*mh^2*s13*s24 - 2*denom(1/2*s12)*mt^2*mh^2*
      s13*s23 - 2*denom(1/2*s12)*mt^2*mh^2*s13*s14 - denom(1/2*s12)*mt^2*mh^2*
      s13^2 - denom(1/2*s12)*mt^2*mh^2*s12*s24 - denom(1/2*s12)*mt^2*mh^2*s12*
      s23 - denom(1/2*s12)*mt^2*mh^2*s12*s14 - denom(1/2*s12)*mt^2*mh^2*s12*
      s13 + 1/2*denom(1/2*s12)*mt^2*mh^4*s24 + 1/2*denom(1/2*s12)*mt^2*mh^4*
      s23 + 1/2*denom(1/2*s12)*mt^2*mh^4*s14 + 1/2*denom(1/2*s12)*mt^2*mh^4*
      s13 - 2*denom(1/2*s12)*mt^4*s24^2 - 4*denom(1/2*s12)*mt^4*s23*s24 - 2*
      denom(1/2*s12)*mt^4*s23^2 - 4*denom(1/2*s12)*mt^4*s14*s24 - 4*denom(1/2*
      s12)*mt^4*s14*s23 - 2*denom(1/2*s12)*mt^4*s14^2 - 4*denom(1/2*s12)*mt^4*
      s13*s24 - 4*denom(1/2*s12)*mt^4*s13*s23 - 4*denom(1/2*s12)*mt^4*s13*s14
       - 2*denom(1/2*s12)*mt^4*s13^2 - 3*denom(1/2*s12)*mt^4*s12*s24 - 3*
      denom(1/2*s12)*mt^4*s12*s23 - 3*denom(1/2*s12)*mt^4*s12*s14 - 3*denom(1/
      2*s12)*mt^4*s12*s13 - denom(1/2*s12)*mt^4*s12^2 + 3*denom(1/2*s12)*mt^4*
      mh^2*s24 + 3*denom(1/2*s12)*mt^4*mh^2*s23 + 3*denom(1/2*s12)*mt^4*mh^2*
      s14 + 3*denom(1/2*s12)*mt^4*mh^2*s13 + 2*denom(1/2*s12)*mt^4*mh^2*s12 - 
      denom(1/2*s12)*mt^4*mh^4 + 2*denom(1/2*s12)*mt^6*s24 + 2*denom(1/2*s12)*
      mt^6*s23 + 2*denom(1/2*s12)*mt^6*s14 + 2*denom(1/2*s12)*mt^6*s13 + 2*
      denom(1/2*s12)*mt^6*s12 - 2*denom(1/2*s12)*mt^6*mh^2 - 1/8*denom(1/4*
      s12^2)*s14^2*s23^2*s24 - 1/8*denom(1/4*s12^2)*s14^2*s23^3 - 1/8*denom(1/
      4*s12^2)*s14^3*s23^2 - 1/4*denom(1/4*s12^2)*s13*s14*s23*s24^2 - 1/4*
      denom(1/4*s12^2)*s13*s14*s23^2*s24 - 1/4*denom(1/4*s12^2)*s13*s14^2*s23*
      s24 - 1/8*denom(1/4*s12^2)*s13*s14^2*s23^2 - 1/8*denom(1/4*s12^2)*s13^2*
      s24^3 - 1/8*denom(1/4*s12^2)*s13^2*s23*s24^2 - 1/8*denom(1/4*s12^2)*
      s13^2*s14*s24^2 - 1/4*denom(1/4*s12^2)*s13^2*s14*s23*s24 - 1/8*denom(1/4
      *s12^2)*s13^3*s24^2 - 1/8*denom(1/4*s12^2)*s12*s14^2*s23^2 - 1/4*denom(1/
      4*s12^2)*s12*s13*s14*s23*s24 - 1/8*denom(1/4*s12^2)*s12*s13^2*s24^2 + 1/
      8*denom(1/4*s12^2)*mh^2*s14^2*s23^2 + 1/4*denom(1/4*s12^2)*mh^2*s13*s14*
      s23*s24 + 1/8*denom(1/4*s12^2)*mh^2*s13^2*s24^2 + 1/4*denom(1/4*s12^2)*
      mt^2*s14*s23*s24^2 + 1/2*denom(1/4*s12^2)*mt^2*s14*s23^2*s24 + 1/4*
      denom(1/4*s12^2)*mt^2*s14*s23^3 + 1/2*denom(1/4*s12^2)*mt^2*s14^2*s23*
      s24 + 1/2*denom(1/4*s12^2)*mt^2*s14^2*s23^2 + 1/4*denom(1/4*s12^2)*mt^2*
      s14^3*s23 + 1/4*denom(1/4*s12^2)*mt^2*s13*s24^3 + 1/2*denom(1/4*s12^2)*
      mt^2*s13*s23*s24^2 + 1/4*denom(1/4*s12^2)*mt^2*s13*s23^2*s24 + 1/2*
      denom(1/4*s12^2)*mt^2*s13*s14*s24^2 + denom(1/4*s12^2)*mt^2*s13*s14*s23*
      s24 + 1/2*denom(1/4*s12^2)*mt^2*s13*s14*s23^2 + 1/4*denom(1/4*s12^2)*
      mt^2*s13*s14^2*s24 + 1/2*denom(1/4*s12^2)*mt^2*s13*s14^2*s23 + 1/2*
      denom(1/4*s12^2)*mt^2*s13^2*s24^2 + 1/2*denom(1/4*s12^2)*mt^2*s13^2*s23*
      s24 + 1/2*denom(1/4*s12^2)*mt^2*s13^2*s14*s24 + 1/4*denom(1/4*s12^2)*
      mt^2*s13^2*s14*s23 + 1/4*denom(1/4*s12^2)*mt^2*s13^3*s24 + 1/4*denom(1/4
      *s12^2)*mt^2*s12*s14*s23*s24 + 1/4*denom(1/4*s12^2)*mt^2*s12*s14*s23^2
       + 1/4*denom(1/4*s12^2)*mt^2*s12*s14^2*s23 + 1/4*denom(1/4*s12^2)*mt^2*
      s12*s13*s24^2 + 1/4*denom(1/4*s12^2)*mt^2*s12*s13*s23*s24 + 1/4*denom(1/
      4*s12^2)*mt^2*s12*s13*s14*s24 + 1/4*denom(1/4*s12^2)*mt^2*s12*s13*s14*
      s23 + 1/4*denom(1/4*s12^2)*mt^2*s12*s13^2*s24 - 1/4*denom(1/4*s12^2)*
      mt^2*mh^2*s14*s23*s24 - 1/4*denom(1/4*s12^2)*mt^2*mh^2*s14*s23^2 - 1/4*
      denom(1/4*s12^2)*mt^2*mh^2*s14^2*s23 - 1/4*denom(1/4*s12^2)*mt^2*mh^2*
      s13*s24^2 - 1/4*denom(1/4*s12^2)*mt^2*mh^2*s13*s23*s24 - 1/4*denom(1/4*
      s12^2)*mt^2*mh^2*s13*s14*s24 - 1/4*denom(1/4*s12^2)*mt^2*mh^2*s13*s14*
      s23 - 1/4*denom(1/4*s12^2)*mt^2*mh^2*s13^2*s24 - 1/8*denom(1/4*s12^2)*
      mt^4*s24^3 - 3/8*denom(1/4*s12^2)*mt^4*s23*s24^2 - 3/8*denom(1/4*s12^2)*
      mt^4*s23^2*s24 - 1/8*denom(1/4*s12^2)*mt^4*s23^3 - 3/8*denom(1/4*s12^2)*
      mt^4*s14*s24^2 - 5/4*denom(1/4*s12^2)*mt^4*s14*s23*s24 - 7/8*denom(1/4*
      s12^2)*mt^4*s14*s23^2 - 3/8*denom(1/4*s12^2)*mt^4*s14^2*s24 - 7/8*denom(
      1/4*s12^2)*mt^4*s14^2*s23 - 1/8*denom(1/4*s12^2)*mt^4*s14^3 - 7/8*denom(
      1/4*s12^2)*mt^4*s13*s24^2 - 5/4*denom(1/4*s12^2)*mt^4*s13*s23*s24 - 3/8*
      denom(1/4*s12^2)*mt^4*s13*s23^2 - 5/4*denom(1/4*s12^2)*mt^4*s13*s14*s24
       - 5/4*denom(1/4*s12^2)*mt^4*s13*s14*s23 - 3/8*denom(1/4*s12^2)*mt^4*s13
      *s14^2 - 7/8*denom(1/4*s12^2)*mt^4*s13^2*s24 - 3/8*denom(1/4*s12^2)*mt^4
      *s13^2*s23 - 3/8*denom(1/4*s12^2)*mt^4*s13^2*s14 - 1/8*denom(1/4*s12^2)*
      mt^4*s13^3 - 1/8*denom(1/4*s12^2)*mt^4*s12*s24^2 - 1/4*denom(1/4*s12^2)*
      mt^4*s12*s23*s24 - 1/8*denom(1/4*s12^2)*mt^4*s12*s23^2 - 1/4*denom(1/4*
      s12^2)*mt^4*s12*s14*s24 - 3/4*denom(1/4*s12^2)*mt^4*s12*s14*s23 - 1/8*
      denom(1/4*s12^2)*mt^4*s12*s14^2 - 3/4*denom(1/4*s12^2)*mt^4*s12*s13*s24
       - 1/4*denom(1/4*s12^2)*mt^4*s12*s13*s23 - 1/4*denom(1/4*s12^2)*mt^4*s12
      *s13*s14 - 1/8*denom(1/4*s12^2)*mt^4*s12*s13^2 + 1/8*denom(1/4*s12^2)*
      mt^4*mh^2*s24^2 + 1/4*denom(1/4*s12^2)*mt^4*mh^2*s23*s24 + 1/8*denom(1/4
      *s12^2)*mt^4*mh^2*s23^2 + 1/4*denom(1/4*s12^2)*mt^4*mh^2*s14*s24 + 3/4*
      denom(1/4*s12^2)*mt^4*mh^2*s14*s23 + 1/8*denom(1/4*s12^2)*mt^4*mh^2*
      s14^2 + 3/4*denom(1/4*s12^2)*mt^4*mh^2*s13*s24 + 1/4*denom(1/4*s12^2)*
      mt^4*mh^2*s13*s23 + 1/4*denom(1/4*s12^2)*mt^4*mh^2*s13*s14 + 1/8*denom(1/
      4*s12^2)*mt^4*mh^2*s13^2 + 1/2*denom(1/4*s12^2)*mt^6*s24^2 + denom(1/4*
      s12^2)*mt^6*s23*s24 + 1/2*denom(1/4*s12^2)*mt^6*s23^2 + denom(1/4*s12^2)
      *mt^6*s14*s24 + denom(1/4*s12^2)*mt^6*s14*s23 + 1/2*denom(1/4*s12^2)*
      mt^6*s14^2 + denom(1/4*s12^2)*mt^6*s13*s24 + denom(1/4*s12^2)*mt^6*s13*
      s23 + denom(1/4*s12^2)*mt^6*s13*s14 + 1/2*denom(1/4*s12^2)*mt^6*s13^2 + 
      1/2*denom(1/4*s12^2)*mt^6*s12*s24 + 1/2*denom(1/4*s12^2)*mt^6*s12*s23 + 
      1/2*denom(1/4*s12^2)*mt^6*s12*s14 + 1/2*denom(1/4*s12^2)*mt^6*s12*s13 - 
      1/2*denom(1/4*s12^2)*mt^6*mh^2*s24 - 1/2*denom(1/4*s12^2)*mt^6*mh^2*s23
       - 1/2*denom(1/4*s12^2)*mt^6*mh^2*s14 - 1/2*denom(1/4*s12^2)*mt^6*mh^2*
      s13 - 1/2*denom(1/4*s12^2)*mt^8*s24 - 1/2*denom(1/4*s12^2)*mt^8*s23 - 1/
      2*denom(1/4*s12^2)*mt^8*s14 - 1/2*denom(1/4*s12^2)*mt^8*s13 - 1/2*denom(
      1/4*s12^2)*mt^8*s12 + 1/2*denom(1/4*s12^2)*mt^8*mh^2;
 
 .sort
id KMatrix(1,5) =  2*mt^5*s14 - 2*mt^5*s13 - 2*denom(1/2*s12)*mt^3*s13*s14*s23
       + 2*denom(1/2*s12)*mt^3*s13^2*s23 + 2*denom(1/2*s12)*mt^5*s14*s23 - 2*
      denom(1/2*s12)*mt^5*s13*s23 + 2*denom(1/2*s12)*mt^5*s13*s14 - 2*denom(1/
      2*s12)*mt^5*s13^2 - 2*denom(1/2*s12)*mt^7*s14 + 2*denom(1/2*s12)*mt^7*
      s13 + 1/2*denom(1/4*s12^2)*mt*s13^2*s14*s23^2 - 1/2*denom(1/4*s12^2)*mt*
      s13^3*s23^2 - denom(1/4*s12^2)*mt^3*s13*s14*s23^2 + denom(1/4*s12^2)*
      mt^3*s13^2*s23^2 - denom(1/4*s12^2)*mt^3*s13^2*s14*s23 + denom(1/4*s12^2
      )*mt^3*s13^3*s23 + 1/2*denom(1/4*s12^2)*mt^5*s14*s23^2 - 1/2*denom(1/4*
      s12^2)*mt^5*s13*s23^2 + 2*denom(1/4*s12^2)*mt^5*s13*s14*s23 - 2*denom(1/
      4*s12^2)*mt^5*s13^2*s23 + 1/2*denom(1/4*s12^2)*mt^5*s13^2*s14 - 1/2*
      denom(1/4*s12^2)*mt^5*s13^3 - denom(1/4*s12^2)*mt^7*s14*s23 + denom(1/4*
      s12^2)*mt^7*s13*s23 - denom(1/4*s12^2)*mt^7*s13*s14 + denom(1/4*s12^2)*
      mt^7*s13^2 + 1/2*denom(1/4*s12^2)*mt^9*s14 - 1/2*denom(1/4*s12^2)*mt^9*
      s13;
 
 .sort
id KMatrix(1,6) =   - mt^3*s14*s24 - mt^3*s14*s23 - mt^3*s14^2 + mt^3*s13*s24
       + mt^3*s13*s23 + mt^3*s13^2 - mt^3*s12*s14 + mt^3*s12*s13 + mt^3*mh^2*
      s14 - mt^3*mh^2*s13 + 2*mt^5*s14 - 2*mt^5*s13 + 1/2*denom(1/2*s12)*mt*
      s13*s14*s23*s24 + 1/2*denom(1/2*s12)*mt*s13*s14*s23^2 + 1/2*denom(1/2*
      s12)*mt*s13*s14^2*s23 - 1/2*denom(1/2*s12)*mt*s13^2*s23*s24 - 1/2*denom(
      1/2*s12)*mt*s13^2*s23^2 - 1/2*denom(1/2*s12)*mt*s13^3*s23 + 1/2*denom(1/
      2*s12)*mt*s12*s13*s14*s23 - 1/2*denom(1/2*s12)*mt*s12*s13^2*s23 - 1/2*
      denom(1/2*s12)*mt*mh^2*s13*s14*s23 + 1/2*denom(1/2*s12)*mt*mh^2*s13^2*
      s23 - 1/2*denom(1/2*s12)*mt^3*s14*s23*s24 - 1/2*denom(1/2*s12)*mt^3*s14*
      s23^2 - denom(1/2*s12)*mt^3*s14^2*s23 + 1/2*denom(1/2*s12)*mt^3*s13*s23*
      s24 + 1/2*denom(1/2*s12)*mt^3*s13*s23^2 - denom(1/2*s12)*mt^3*s13*s14*
      s24 - denom(1/2*s12)*mt^3*s13*s14*s23 - 1/2*denom(1/2*s12)*mt^3*s13*
      s14^2 + denom(1/2*s12)*mt^3*s13^2*s24 + 2*denom(1/2*s12)*mt^3*s13^2*s23
       + 1/2*denom(1/2*s12)*mt^3*s13^3 - 1/2*denom(1/2*s12)*mt^3*s12*s14*s23
       + 1/2*denom(1/2*s12)*mt^3*s12*s13*s23 - 1/2*denom(1/2*s12)*mt^3*s12*s13
      *s14 + 1/2*denom(1/2*s12)*mt^3*s12*s13^2 + 1/2*denom(1/2*s12)*mt^3*mh^2*
      s14*s23 - 1/2*denom(1/2*s12)*mt^3*mh^2*s13*s23 + 1/2*denom(1/2*s12)*mt^3
      *mh^2*s13*s14 - 1/2*denom(1/2*s12)*mt^3*mh^2*s13^2 + denom(1/2*s12)*mt^5
      *s14*s24 + 2*denom(1/2*s12)*mt^5*s14*s23 + denom(1/2*s12)*mt^5*s14^2 - 
      denom(1/2*s12)*mt^5*s13*s24 - 2*denom(1/2*s12)*mt^5*s13*s23 + denom(1/2*
      s12)*mt^5*s13*s14 - 2*denom(1/2*s12)*mt^5*s13^2 + 1/2*denom(1/2*s12)*
      mt^5*s12*s14 - 1/2*denom(1/2*s12)*mt^5*s12*s13 - 1/2*denom(1/2*s12)*mt^5
      *mh^2*s14 + 1/2*denom(1/2*s12)*mt^5*mh^2*s13 - 2*denom(1/2*s12)*mt^7*s14
       + 2*denom(1/2*s12)*mt^7*s13 + 1/4*denom(1/4*s12^2)*mt*s13*s14^2*s23^2
       + 1/4*denom(1/4*s12^2)*mt*s13^2*s14*s23*s24 - 1/4*denom(1/4*s12^2)*mt*
      s13^2*s14*s23^2 - 1/4*denom(1/4*s12^2)*mt*s13^3*s23*s24 - 1/4*denom(1/4*
      s12^2)*mt^3*s14^2*s23^2 - 1/2*denom(1/4*s12^2)*mt^3*s13*s14*s23*s24 - 1/
      2*denom(1/4*s12^2)*mt^3*s13*s14^2*s23 + 1/2*denom(1/4*s12^2)*mt^3*s13^2*
      s23*s24 + 1/4*denom(1/4*s12^2)*mt^3*s13^2*s23^2 - 1/4*denom(1/4*s12^2)*
      mt^3*s13^2*s14*s24 + 1/4*denom(1/4*s12^2)*mt^3*s13^2*s14*s23 + 1/4*
      denom(1/4*s12^2)*mt^3*s13^3*s24 + 1/4*denom(1/4*s12^2)*mt^3*s13^3*s23 + 
      1/4*denom(1/4*s12^2)*mt^5*s14*s23*s24 + 1/4*denom(1/4*s12^2)*mt^5*s14*
      s23^2 + 1/2*denom(1/4*s12^2)*mt^5*s14^2*s23 - 1/4*denom(1/4*s12^2)*mt^5*
      s13*s23*s24 - 1/4*denom(1/4*s12^2)*mt^5*s13*s23^2 + 1/2*denom(1/4*s12^2)
      *mt^5*s13*s14*s24 + 1/2*denom(1/4*s12^2)*mt^5*s13*s14*s23 + 1/4*denom(1/
      4*s12^2)*mt^5*s13*s14^2 - 1/2*denom(1/4*s12^2)*mt^5*s13^2*s24 - denom(1/
      4*s12^2)*mt^5*s13^2*s23 - 1/4*denom(1/4*s12^2)*mt^5*s13^3 - 1/4*denom(1/
      4*s12^2)*mt^7*s14*s24 - 3/4*denom(1/4*s12^2)*mt^7*s14*s23 - 1/4*denom(1/
      4*s12^2)*mt^7*s14^2 + 1/4*denom(1/4*s12^2)*mt^7*s13*s24 + 3/4*denom(1/4*
      s12^2)*mt^7*s13*s23 - 1/2*denom(1/4*s12^2)*mt^7*s13*s14 + 3/4*denom(1/4*
      s12^2)*mt^7*s13^2 + 1/2*denom(1/4*s12^2)*mt^9*s14 - 1/2*denom(1/4*s12^2)
      *mt^9*s13;
 
 .sort
id KMatrix(1,7) =   - mt^3*s14*s24 - mt^3*s14*s23 - mt^3*s14^2 + mt^3*s13*s24
       + mt^3*s13*s23 + mt^3*s13^2 - mt^3*s12*s14 + mt^3*s12*s13 + mt^3*mh^2*
      s14 - mt^3*mh^2*s13 + 2*mt^5*s14 - 2*mt^5*s13 + 1/2*denom(1/2*s12)*mt*
      s13*s14*s23*s24 + 1/2*denom(1/2*s12)*mt*s13*s14*s23^2 + 1/2*denom(1/2*
      s12)*mt*s13*s14^2*s23 - 1/2*denom(1/2*s12)*mt*s13^2*s23*s24 - 1/2*denom(
      1/2*s12)*mt*s13^2*s23^2 - 1/2*denom(1/2*s12)*mt*s13^3*s23 + 1/2*denom(1/
      2*s12)*mt*s12*s13*s14*s23 - 1/2*denom(1/2*s12)*mt*s12*s13^2*s23 - 1/2*
      denom(1/2*s12)*mt*mh^2*s13*s14*s23 + 1/2*denom(1/2*s12)*mt*mh^2*s13^2*
      s23 - 1/2*denom(1/2*s12)*mt^3*s14*s23*s24 - 1/2*denom(1/2*s12)*mt^3*s14*
      s23^2 - denom(1/2*s12)*mt^3*s14^2*s23 + 1/2*denom(1/2*s12)*mt^3*s13*s23*
      s24 + 1/2*denom(1/2*s12)*mt^3*s13*s23^2 - denom(1/2*s12)*mt^3*s13*s14*
      s24 - denom(1/2*s12)*mt^3*s13*s14*s23 - 1/2*denom(1/2*s12)*mt^3*s13*
      s14^2 + denom(1/2*s12)*mt^3*s13^2*s24 + 2*denom(1/2*s12)*mt^3*s13^2*s23
       + 1/2*denom(1/2*s12)*mt^3*s13^3 - 1/2*denom(1/2*s12)*mt^3*s12*s14*s23
       + 1/2*denom(1/2*s12)*mt^3*s12*s13*s23 - 1/2*denom(1/2*s12)*mt^3*s12*s13
      *s14 + 1/2*denom(1/2*s12)*mt^3*s12*s13^2 + 1/2*denom(1/2*s12)*mt^3*mh^2*
      s14*s23 - 1/2*denom(1/2*s12)*mt^3*mh^2*s13*s23 + 1/2*denom(1/2*s12)*mt^3
      *mh^2*s13*s14 - 1/2*denom(1/2*s12)*mt^3*mh^2*s13^2 + denom(1/2*s12)*mt^5
      *s14*s24 + 2*denom(1/2*s12)*mt^5*s14*s23 + denom(1/2*s12)*mt^5*s14^2 - 
      denom(1/2*s12)*mt^5*s13*s24 - 2*denom(1/2*s12)*mt^5*s13*s23 + denom(1/2*
      s12)*mt^5*s13*s14 - 2*denom(1/2*s12)*mt^5*s13^2 + 1/2*denom(1/2*s12)*
      mt^5*s12*s14 - 1/2*denom(1/2*s12)*mt^5*s12*s13 - 1/2*denom(1/2*s12)*mt^5
      *mh^2*s14 + 1/2*denom(1/2*s12)*mt^5*mh^2*s13 - 2*denom(1/2*s12)*mt^7*s14
       + 2*denom(1/2*s12)*mt^7*s13 + 1/4*denom(1/4*s12^2)*mt*s13*s14^2*s23^2
       + 1/4*denom(1/4*s12^2)*mt*s13^2*s14*s23*s24 - 1/4*denom(1/4*s12^2)*mt*
      s13^2*s14*s23^2 - 1/4*denom(1/4*s12^2)*mt*s13^3*s23*s24 - 1/4*denom(1/4*
      s12^2)*mt^3*s14^2*s23^2 - 1/2*denom(1/4*s12^2)*mt^3*s13*s14*s23*s24 - 1/
      2*denom(1/4*s12^2)*mt^3*s13*s14^2*s23 + 1/2*denom(1/4*s12^2)*mt^3*s13^2*
      s23*s24 + 1/4*denom(1/4*s12^2)*mt^3*s13^2*s23^2 - 1/4*denom(1/4*s12^2)*
      mt^3*s13^2*s14*s24 + 1/4*denom(1/4*s12^2)*mt^3*s13^2*s14*s23 + 1/4*
      denom(1/4*s12^2)*mt^3*s13^3*s24 + 1/4*denom(1/4*s12^2)*mt^3*s13^3*s23 + 
      1/4*denom(1/4*s12^2)*mt^5*s14*s23*s24 + 1/4*denom(1/4*s12^2)*mt^5*s14*
      s23^2 + 1/2*denom(1/4*s12^2)*mt^5*s14^2*s23 - 1/4*denom(1/4*s12^2)*mt^5*
      s13*s23*s24 - 1/4*denom(1/4*s12^2)*mt^5*s13*s23^2 + 1/2*denom(1/4*s12^2)
      *mt^5*s13*s14*s24 + 1/2*denom(1/4*s12^2)*mt^5*s13*s14*s23 + 1/4*denom(1/
      4*s12^2)*mt^5*s13*s14^2 - 1/2*denom(1/4*s12^2)*mt^5*s13^2*s24 - denom(1/
      4*s12^2)*mt^5*s13^2*s23 - 1/4*denom(1/4*s12^2)*mt^5*s13^3 - 1/4*denom(1/
      4*s12^2)*mt^7*s14*s24 - 3/4*denom(1/4*s12^2)*mt^7*s14*s23 - 1/4*denom(1/
      4*s12^2)*mt^7*s14^2 + 1/4*denom(1/4*s12^2)*mt^7*s13*s24 + 3/4*denom(1/4*
      s12^2)*mt^7*s13*s23 - 1/2*denom(1/4*s12^2)*mt^7*s13*s14 + 3/4*denom(1/4*
      s12^2)*mt^7*s13^2 + 1/2*denom(1/4*s12^2)*mt^9*s14 - 1/2*denom(1/4*s12^2)
      *mt^9*s13;
 
 .sort
id KMatrix(1,8) =  1/2*mt*s14*s24^2 + mt*s14*s23*s24 + 1/2*mt*s14*s23^2 + mt*
      s14^2*s24 + mt*s14^2*s23 + 1/2*mt*s14^3 - 1/2*mt*s13*s24^2 - mt*s13*s23*
      s24 - 1/2*mt*s13*s23^2 + 1/2*mt*s13*s14^2 - mt*s13^2*s24 - mt*s13^2*s23
       - 1/2*mt*s13^2*s14 - 1/2*mt*s13^3 + mt*s12*s14*s24 + mt*s12*s14*s23 + 
      mt*s12*s14^2 - mt*s12*s13*s24 - mt*s12*s13*s23 - mt*s12*s13^2 + 1/2*mt*
      s12^2*s14 - 1/2*mt*s12^2*s13 - mt*mh^2*s14*s24 - mt*mh^2*s14*s23 - mt*
      mh^2*s14^2 + mt*mh^2*s13*s24 + mt*mh^2*s13*s23 + mt*mh^2*s13^2 - mt*mh^2
      *s12*s14 + mt*mh^2*s12*s13 + 1/2*mt*mh^4*s14 - 1/2*mt*mh^4*s13 - 2*mt^3*
      s14*s24 - 2*mt^3*s14*s23 - 2*mt^3*s14^2 + 2*mt^3*s13*s24 + 2*mt^3*s13*
      s23 + 2*mt^3*s13^2 - 2*mt^3*s12*s14 + 2*mt^3*s12*s13 + 2*mt^3*mh^2*s14
       - 2*mt^3*mh^2*s13 + 2*mt^5*s14 - 2*mt^5*s13 + 1/2*denom(1/2*s12)*mt*
      s14^2*s23*s24 + 1/2*denom(1/2*s12)*mt*s14^2*s23^2 + 1/2*denom(1/2*s12)*
      mt*s14^3*s23 + 1/2*denom(1/2*s12)*mt*s13*s14*s24^2 - 1/2*denom(1/2*s12)*
      mt*s13*s14*s23^2 + 1/2*denom(1/2*s12)*mt*s13*s14^2*s24 - 1/2*denom(1/2*
      s12)*mt*s13^2*s24^2 - 1/2*denom(1/2*s12)*mt*s13^2*s23*s24 - 1/2*denom(1/
      2*s12)*mt*s13^2*s14*s23 - 1/2*denom(1/2*s12)*mt*s13^3*s24 + 1/2*denom(1/
      2*s12)*mt*s12*s14^2*s23 + 1/2*denom(1/2*s12)*mt*s12*s13*s14*s24 - 1/2*
      denom(1/2*s12)*mt*s12*s13*s14*s23 - 1/2*denom(1/2*s12)*mt*s12*s13^2*s24
       - 1/2*denom(1/2*s12)*mt*mh^2*s14^2*s23 - 1/2*denom(1/2*s12)*mt*mh^2*s13
      *s14*s24 + 1/2*denom(1/2*s12)*mt*mh^2*s13*s14*s23 + 1/2*denom(1/2*s12)*
      mt*mh^2*s13^2*s24 - 1/2*denom(1/2*s12)*mt^3*s14*s24^2 - denom(1/2*s12)*
      mt^3*s14*s23*s24 - 1/2*denom(1/2*s12)*mt^3*s14*s23^2 - denom(1/2*s12)*
      mt^3*s14^2*s24 - 2*denom(1/2*s12)*mt^3*s14^2*s23 - 1/2*denom(1/2*s12)*
      mt^3*s14^3 + 1/2*denom(1/2*s12)*mt^3*s13*s24^2 + denom(1/2*s12)*mt^3*s13
      *s23*s24 + 1/2*denom(1/2*s12)*mt^3*s13*s23^2 - denom(1/2*s12)*mt^3*s13*
      s14*s24 + denom(1/2*s12)*mt^3*s13*s14*s23 - 1/2*denom(1/2*s12)*mt^3*s13*
      s14^2 + 2*denom(1/2*s12)*mt^3*s13^2*s24 + denom(1/2*s12)*mt^3*s13^2*s23
       + 1/2*denom(1/2*s12)*mt^3*s13^2*s14 + 1/2*denom(1/2*s12)*mt^3*s13^3 - 1/
      2*denom(1/2*s12)*mt^3*s12*s14*s24 - 1/2*denom(1/2*s12)*mt^3*s12*s14*s23
       - 1/2*denom(1/2*s12)*mt^3*s12*s14^2 + 1/2*denom(1/2*s12)*mt^3*s12*s13*
      s24 + 1/2*denom(1/2*s12)*mt^3*s12*s13*s23 + 1/2*denom(1/2*s12)*mt^3*s12*
      s13^2 + 1/2*denom(1/2*s12)*mt^3*mh^2*s14*s24 + 1/2*denom(1/2*s12)*mt^3*
      mh^2*s14*s23 + 1/2*denom(1/2*s12)*mt^3*mh^2*s14^2 - 1/2*denom(1/2*s12)*
      mt^3*mh^2*s13*s24 - 1/2*denom(1/2*s12)*mt^3*mh^2*s13*s23 - 1/2*denom(1/2
      *s12)*mt^3*mh^2*s13^2 + 2*denom(1/2*s12)*mt^5*s14*s24 + 2*denom(1/2*s12)
      *mt^5*s14*s23 + 2*denom(1/2*s12)*mt^5*s14^2 - 2*denom(1/2*s12)*mt^5*s13*
      s24 - 2*denom(1/2*s12)*mt^5*s13*s23 - 2*denom(1/2*s12)*mt^5*s13^2 + 
      denom(1/2*s12)*mt^5*s12*s14 - denom(1/2*s12)*mt^5*s12*s13 - denom(1/2*
      s12)*mt^5*mh^2*s14 + denom(1/2*s12)*mt^5*mh^2*s13 - 2*denom(1/2*s12)*
      mt^7*s14 + 2*denom(1/2*s12)*mt^7*s13 + 1/8*denom(1/4*s12^2)*mt*s14^3*
      s23^2 + 1/4*denom(1/4*s12^2)*mt*s13*s14^2*s23*s24 - 1/8*denom(1/4*s12^2)
      *mt*s13*s14^2*s23^2 + 1/8*denom(1/4*s12^2)*mt*s13^2*s14*s24^2 - 1/4*
      denom(1/4*s12^2)*mt*s13^2*s14*s23*s24 - 1/8*denom(1/4*s12^2)*mt*s13^3*
      s24^2 - 1/4*denom(1/4*s12^2)*mt^3*s14^2*s23*s24 - 1/4*denom(1/4*s12^2)*
      mt^3*s14^2*s23^2 - 1/4*denom(1/4*s12^2)*mt^3*s14^3*s23 - 1/4*denom(1/4*
      s12^2)*mt^3*s13*s14*s24^2 + 1/4*denom(1/4*s12^2)*mt^3*s13*s14*s23^2 - 1/
      4*denom(1/4*s12^2)*mt^3*s13*s14^2*s24 + 1/4*denom(1/4*s12^2)*mt^3*s13^2*
      s24^2 + 1/4*denom(1/4*s12^2)*mt^3*s13^2*s23*s24 + 1/4*denom(1/4*s12^2)*
      mt^3*s13^2*s14*s23 + 1/4*denom(1/4*s12^2)*mt^3*s13^3*s24 + 1/8*denom(1/4
      *s12^2)*mt^5*s14*s24^2 + 1/4*denom(1/4*s12^2)*mt^5*s14*s23*s24 + 1/8*
      denom(1/4*s12^2)*mt^5*s14*s23^2 + 1/4*denom(1/4*s12^2)*mt^5*s14^2*s24 + 
      3/4*denom(1/4*s12^2)*mt^5*s14^2*s23 + 1/8*denom(1/4*s12^2)*mt^5*s14^3 - 
      1/8*denom(1/4*s12^2)*mt^5*s13*s24^2 - 1/4*denom(1/4*s12^2)*mt^5*s13*s23*
      s24 - 1/8*denom(1/4*s12^2)*mt^5*s13*s23^2 + 1/2*denom(1/4*s12^2)*mt^5*
      s13*s14*s24 - 1/2*denom(1/4*s12^2)*mt^5*s13*s14*s23 + 1/8*denom(1/4*
      s12^2)*mt^5*s13*s14^2 - 3/4*denom(1/4*s12^2)*mt^5*s13^2*s24 - 1/4*denom(
      1/4*s12^2)*mt^5*s13^2*s23 - 1/8*denom(1/4*s12^2)*mt^5*s13^2*s14 - 1/8*
      denom(1/4*s12^2)*mt^5*s13^3 - 1/2*denom(1/4*s12^2)*mt^7*s14*s24 - 1/2*
      denom(1/4*s12^2)*mt^7*s14*s23 - 1/2*denom(1/4*s12^2)*mt^7*s14^2 + 1/2*
      denom(1/4*s12^2)*mt^7*s13*s24 + 1/2*denom(1/4*s12^2)*mt^7*s13*s23 + 1/2*
      denom(1/4*s12^2)*mt^7*s13^2 + 1/2*denom(1/4*s12^2)*mt^9*s14 - 1/2*denom(
      1/4*s12^2)*mt^9*s13;
 
 .sort
id KMatrix(1,9) =  2*mt^5*s24 - 2*mt^5*s23 - 2*denom(1/2*s12)*mt^3*s13*s23*s24
       + 2*denom(1/2*s12)*mt^3*s13*s23^2 + 2*denom(1/2*s12)*mt^5*s23*s24 - 2*
      denom(1/2*s12)*mt^5*s23^2 + 2*denom(1/2*s12)*mt^5*s13*s24 - 2*denom(1/2*
      s12)*mt^5*s13*s23 - 2*denom(1/2*s12)*mt^7*s24 + 2*denom(1/2*s12)*mt^7*
      s23 + 1/2*denom(1/4*s12^2)*mt*s13^2*s23^2*s24 - 1/2*denom(1/4*s12^2)*mt*
      s13^2*s23^3 - denom(1/4*s12^2)*mt^3*s13*s23^2*s24 + denom(1/4*s12^2)*
      mt^3*s13*s23^3 - denom(1/4*s12^2)*mt^3*s13^2*s23*s24 + denom(1/4*s12^2)*
      mt^3*s13^2*s23^2 + 1/2*denom(1/4*s12^2)*mt^5*s23^2*s24 - 1/2*denom(1/4*
      s12^2)*mt^5*s23^3 + 2*denom(1/4*s12^2)*mt^5*s13*s23*s24 - 2*denom(1/4*
      s12^2)*mt^5*s13*s23^2 + 1/2*denom(1/4*s12^2)*mt^5*s13^2*s24 - 1/2*denom(
      1/4*s12^2)*mt^5*s13^2*s23 - denom(1/4*s12^2)*mt^7*s23*s24 + denom(1/4*
      s12^2)*mt^7*s23^2 - denom(1/4*s12^2)*mt^7*s13*s24 + denom(1/4*s12^2)*
      mt^7*s13*s23 + 1/2*denom(1/4*s12^2)*mt^9*s24 - 1/2*denom(1/4*s12^2)*mt^9
      *s23;
 
 .sort
id KMatrix(1,10) =   - mt^3*s24^2 + mt^3*s23^2 - mt^3*s14*s24 + mt^3*s14*s23
       - mt^3*s13*s24 + mt^3*s13*s23 - mt^3*s12*s24 + mt^3*s12*s23 + mt^3*mh^2
      *s24 - mt^3*mh^2*s23 + 2*mt^5*s24 - 2*mt^5*s23 + 1/2*denom(1/2*s12)*mt*
      s13*s23*s24^2 - 1/2*denom(1/2*s12)*mt*s13*s23^3 + 1/2*denom(1/2*s12)*mt*
      s13*s14*s23*s24 - 1/2*denom(1/2*s12)*mt*s13*s14*s23^2 + 1/2*denom(1/2*
      s12)*mt*s13^2*s23*s24 - 1/2*denom(1/2*s12)*mt*s13^2*s23^2 + 1/2*denom(1/
      2*s12)*mt*s12*s13*s23*s24 - 1/2*denom(1/2*s12)*mt*s12*s13*s23^2 - 1/2*
      denom(1/2*s12)*mt*mh^2*s13*s23*s24 + 1/2*denom(1/2*s12)*mt*mh^2*s13*
      s23^2 - 1/2*denom(1/2*s12)*mt^3*s23*s24^2 + 1/2*denom(1/2*s12)*mt^3*
      s23^3 - denom(1/2*s12)*mt^3*s14*s23*s24 + denom(1/2*s12)*mt^3*s14*s23^2
       - denom(1/2*s12)*mt^3*s13*s24^2 - denom(1/2*s12)*mt^3*s13*s23*s24 + 2*
      denom(1/2*s12)*mt^3*s13*s23^2 - 1/2*denom(1/2*s12)*mt^3*s13*s14*s24 + 1/
      2*denom(1/2*s12)*mt^3*s13*s14*s23 - 1/2*denom(1/2*s12)*mt^3*s13^2*s24 + 
      1/2*denom(1/2*s12)*mt^3*s13^2*s23 - 1/2*denom(1/2*s12)*mt^3*s12*s23*s24
       + 1/2*denom(1/2*s12)*mt^3*s12*s23^2 - 1/2*denom(1/2*s12)*mt^3*s12*s13*
      s24 + 1/2*denom(1/2*s12)*mt^3*s12*s13*s23 + 1/2*denom(1/2*s12)*mt^3*mh^2
      *s23*s24 - 1/2*denom(1/2*s12)*mt^3*mh^2*s23^2 + 1/2*denom(1/2*s12)*mt^3*
      mh^2*s13*s24 - 1/2*denom(1/2*s12)*mt^3*mh^2*s13*s23 + denom(1/2*s12)*
      mt^5*s24^2 + denom(1/2*s12)*mt^5*s23*s24 - 2*denom(1/2*s12)*mt^5*s23^2
       + denom(1/2*s12)*mt^5*s14*s24 - denom(1/2*s12)*mt^5*s14*s23 + 2*denom(1/
      2*s12)*mt^5*s13*s24 - 2*denom(1/2*s12)*mt^5*s13*s23 + 1/2*denom(1/2*s12)
      *mt^5*s12*s24 - 1/2*denom(1/2*s12)*mt^5*s12*s23 - 1/2*denom(1/2*s12)*
      mt^5*mh^2*s24 + 1/2*denom(1/2*s12)*mt^5*mh^2*s23 - 2*denom(1/2*s12)*mt^7
      *s24 + 2*denom(1/2*s12)*mt^7*s23 + 1/4*denom(1/4*s12^2)*mt*s13*s14*s23^2
      *s24 - 1/4*denom(1/4*s12^2)*mt*s13*s14*s23^3 + 1/4*denom(1/4*s12^2)*mt*
      s13^2*s23*s24^2 - 1/4*denom(1/4*s12^2)*mt*s13^2*s23^2*s24 - 1/4*denom(1/
      4*s12^2)*mt^3*s14*s23^2*s24 + 1/4*denom(1/4*s12^2)*mt^3*s14*s23^3 - 1/2*
      denom(1/4*s12^2)*mt^3*s13*s23*s24^2 + 1/4*denom(1/4*s12^2)*mt^3*s13*
      s23^2*s24 + 1/4*denom(1/4*s12^2)*mt^3*s13*s23^3 - 1/2*denom(1/4*s12^2)*
      mt^3*s13*s14*s23*s24 + 1/2*denom(1/4*s12^2)*mt^3*s13*s14*s23^2 - 1/4*
      denom(1/4*s12^2)*mt^3*s13^2*s24^2 + 1/4*denom(1/4*s12^2)*mt^3*s13^2*
      s23^2 + 1/4*denom(1/4*s12^2)*mt^5*s23*s24^2 - 1/4*denom(1/4*s12^2)*mt^5*
      s23^3 + 1/2*denom(1/4*s12^2)*mt^5*s14*s23*s24 - 1/2*denom(1/4*s12^2)*
      mt^5*s14*s23^2 + 1/2*denom(1/4*s12^2)*mt^5*s13*s24^2 + 1/2*denom(1/4*
      s12^2)*mt^5*s13*s23*s24 - denom(1/4*s12^2)*mt^5*s13*s23^2 + 1/4*denom(1/
      4*s12^2)*mt^5*s13*s14*s24 - 1/4*denom(1/4*s12^2)*mt^5*s13*s14*s23 + 1/4*
      denom(1/4*s12^2)*mt^5*s13^2*s24 - 1/4*denom(1/4*s12^2)*mt^5*s13^2*s23 - 
      1/4*denom(1/4*s12^2)*mt^7*s24^2 - 1/2*denom(1/4*s12^2)*mt^7*s23*s24 + 3/
      4*denom(1/4*s12^2)*mt^7*s23^2 - 1/4*denom(1/4*s12^2)*mt^7*s14*s24 + 1/4*
      denom(1/4*s12^2)*mt^7*s14*s23 - 3/4*denom(1/4*s12^2)*mt^7*s13*s24 + 3/4*
      denom(1/4*s12^2)*mt^7*s13*s23 + 1/2*denom(1/4*s12^2)*mt^9*s24 - 1/2*
      denom(1/4*s12^2)*mt^9*s23;
 
 .sort
id KMatrix(1,11) =   - mt^3*s24^2 + mt^3*s23^2 - mt^3*s14*s24 + mt^3*s14*s23
       - mt^3*s13*s24 + mt^3*s13*s23 - mt^3*s12*s24 + mt^3*s12*s23 + mt^3*mh^2
      *s24 - mt^3*mh^2*s23 + 2*mt^5*s24 - 2*mt^5*s23 + 1/2*denom(1/2*s12)*mt*
      s13*s23*s24^2 - 1/2*denom(1/2*s12)*mt*s13*s23^3 + 1/2*denom(1/2*s12)*mt*
      s13*s14*s23*s24 - 1/2*denom(1/2*s12)*mt*s13*s14*s23^2 + 1/2*denom(1/2*
      s12)*mt*s13^2*s23*s24 - 1/2*denom(1/2*s12)*mt*s13^2*s23^2 + 1/2*denom(1/
      2*s12)*mt*s12*s13*s23*s24 - 1/2*denom(1/2*s12)*mt*s12*s13*s23^2 - 1/2*
      denom(1/2*s12)*mt*mh^2*s13*s23*s24 + 1/2*denom(1/2*s12)*mt*mh^2*s13*
      s23^2 - 1/2*denom(1/2*s12)*mt^3*s23*s24^2 + 1/2*denom(1/2*s12)*mt^3*
      s23^3 - denom(1/2*s12)*mt^3*s14*s23*s24 + denom(1/2*s12)*mt^3*s14*s23^2
       - denom(1/2*s12)*mt^3*s13*s24^2 - denom(1/2*s12)*mt^3*s13*s23*s24 + 2*
      denom(1/2*s12)*mt^3*s13*s23^2 - 1/2*denom(1/2*s12)*mt^3*s13*s14*s24 + 1/
      2*denom(1/2*s12)*mt^3*s13*s14*s23 - 1/2*denom(1/2*s12)*mt^3*s13^2*s24 + 
      1/2*denom(1/2*s12)*mt^3*s13^2*s23 - 1/2*denom(1/2*s12)*mt^3*s12*s23*s24
       + 1/2*denom(1/2*s12)*mt^3*s12*s23^2 - 1/2*denom(1/2*s12)*mt^3*s12*s13*
      s24 + 1/2*denom(1/2*s12)*mt^3*s12*s13*s23 + 1/2*denom(1/2*s12)*mt^3*mh^2
      *s23*s24 - 1/2*denom(1/2*s12)*mt^3*mh^2*s23^2 + 1/2*denom(1/2*s12)*mt^3*
      mh^2*s13*s24 - 1/2*denom(1/2*s12)*mt^3*mh^2*s13*s23 + denom(1/2*s12)*
      mt^5*s24^2 + denom(1/2*s12)*mt^5*s23*s24 - 2*denom(1/2*s12)*mt^5*s23^2
       + denom(1/2*s12)*mt^5*s14*s24 - denom(1/2*s12)*mt^5*s14*s23 + 2*denom(1/
      2*s12)*mt^5*s13*s24 - 2*denom(1/2*s12)*mt^5*s13*s23 + 1/2*denom(1/2*s12)
      *mt^5*s12*s24 - 1/2*denom(1/2*s12)*mt^5*s12*s23 - 1/2*denom(1/2*s12)*
      mt^5*mh^2*s24 + 1/2*denom(1/2*s12)*mt^5*mh^2*s23 - 2*denom(1/2*s12)*mt^7
      *s24 + 2*denom(1/2*s12)*mt^7*s23 + 1/4*denom(1/4*s12^2)*mt*s13*s14*s23^2
      *s24 - 1/4*denom(1/4*s12^2)*mt*s13*s14*s23^3 + 1/4*denom(1/4*s12^2)*mt*
      s13^2*s23*s24^2 - 1/4*denom(1/4*s12^2)*mt*s13^2*s23^2*s24 - 1/4*denom(1/
      4*s12^2)*mt^3*s14*s23^2*s24 + 1/4*denom(1/4*s12^2)*mt^3*s14*s23^3 - 1/2*
      denom(1/4*s12^2)*mt^3*s13*s23*s24^2 + 1/4*denom(1/4*s12^2)*mt^3*s13*
      s23^2*s24 + 1/4*denom(1/4*s12^2)*mt^3*s13*s23^3 - 1/2*denom(1/4*s12^2)*
      mt^3*s13*s14*s23*s24 + 1/2*denom(1/4*s12^2)*mt^3*s13*s14*s23^2 - 1/4*
      denom(1/4*s12^2)*mt^3*s13^2*s24^2 + 1/4*denom(1/4*s12^2)*mt^3*s13^2*
      s23^2 + 1/4*denom(1/4*s12^2)*mt^5*s23*s24^2 - 1/4*denom(1/4*s12^2)*mt^5*
      s23^3 + 1/2*denom(1/4*s12^2)*mt^5*s14*s23*s24 - 1/2*denom(1/4*s12^2)*
      mt^5*s14*s23^2 + 1/2*denom(1/4*s12^2)*mt^5*s13*s24^2 + 1/2*denom(1/4*
      s12^2)*mt^5*s13*s23*s24 - denom(1/4*s12^2)*mt^5*s13*s23^2 + 1/4*denom(1/
      4*s12^2)*mt^5*s13*s14*s24 - 1/4*denom(1/4*s12^2)*mt^5*s13*s14*s23 + 1/4*
      denom(1/4*s12^2)*mt^5*s13^2*s24 - 1/4*denom(1/4*s12^2)*mt^5*s13^2*s23 - 
      1/4*denom(1/4*s12^2)*mt^7*s24^2 - 1/2*denom(1/4*s12^2)*mt^7*s23*s24 + 3/
      4*denom(1/4*s12^2)*mt^7*s23^2 - 1/4*denom(1/4*s12^2)*mt^7*s14*s24 + 1/4*
      denom(1/4*s12^2)*mt^7*s14*s23 - 3/4*denom(1/4*s12^2)*mt^7*s13*s24 + 3/4*
      denom(1/4*s12^2)*mt^7*s13*s23 + 1/2*denom(1/4*s12^2)*mt^9*s24 - 1/2*
      denom(1/4*s12^2)*mt^9*s23;
 
 .sort
id KMatrix(1,12) =  1/2*mt*s24^3 + 1/2*mt*s23*s24^2 - 1/2*mt*s23^2*s24 - 1/2*
      mt*s23^3 + mt*s14*s24^2 - mt*s14*s23^2 + 1/2*mt*s14^2*s24 - 1/2*mt*s14^2
      *s23 + mt*s13*s24^2 - mt*s13*s23^2 + mt*s13*s14*s24 - mt*s13*s14*s23 + 1/
      2*mt*s13^2*s24 - 1/2*mt*s13^2*s23 + mt*s12*s24^2 - mt*s12*s23^2 + mt*s12
      *s14*s24 - mt*s12*s14*s23 + mt*s12*s13*s24 - mt*s12*s13*s23 + 1/2*mt*
      s12^2*s24 - 1/2*mt*s12^2*s23 - mt*mh^2*s24^2 + mt*mh^2*s23^2 - mt*mh^2*
      s14*s24 + mt*mh^2*s14*s23 - mt*mh^2*s13*s24 + mt*mh^2*s13*s23 - mt*mh^2*
      s12*s24 + mt*mh^2*s12*s23 + 1/2*mt*mh^4*s24 - 1/2*mt*mh^4*s23 - 2*mt^3*
      s24^2 + 2*mt^3*s23^2 - 2*mt^3*s14*s24 + 2*mt^3*s14*s23 - 2*mt^3*s13*s24
       + 2*mt^3*s13*s23 - 2*mt^3*s12*s24 + 2*mt^3*s12*s23 + 2*mt^3*mh^2*s24 - 
      2*mt^3*mh^2*s23 + 2*mt^5*s24 - 2*mt^5*s23 + 1/2*denom(1/2*s12)*mt*s14*
      s23*s24^2 - 1/2*denom(1/2*s12)*mt*s14*s23^3 + 1/2*denom(1/2*s12)*mt*
      s14^2*s23*s24 - 1/2*denom(1/2*s12)*mt*s14^2*s23^2 + 1/2*denom(1/2*s12)*
      mt*s13*s24^3 - 1/2*denom(1/2*s12)*mt*s13*s23^2*s24 + 1/2*denom(1/2*s12)*
      mt*s13*s14*s24^2 - 1/2*denom(1/2*s12)*mt*s13*s14*s23^2 + 1/2*denom(1/2*
      s12)*mt*s13^2*s24^2 - 1/2*denom(1/2*s12)*mt*s13^2*s23*s24 + 1/2*denom(1/
      2*s12)*mt*s12*s14*s23*s24 - 1/2*denom(1/2*s12)*mt*s12*s14*s23^2 + 1/2*
      denom(1/2*s12)*mt*s12*s13*s24^2 - 1/2*denom(1/2*s12)*mt*s12*s13*s23*s24
       - 1/2*denom(1/2*s12)*mt*mh^2*s14*s23*s24 + 1/2*denom(1/2*s12)*mt*mh^2*
      s14*s23^2 - 1/2*denom(1/2*s12)*mt*mh^2*s13*s24^2 + 1/2*denom(1/2*s12)*mt
      *mh^2*s13*s23*s24 - 1/2*denom(1/2*s12)*mt^3*s24^3 - 1/2*denom(1/2*s12)*
      mt^3*s23*s24^2 + 1/2*denom(1/2*s12)*mt^3*s23^2*s24 + 1/2*denom(1/2*s12)*
      mt^3*s23^3 - denom(1/2*s12)*mt^3*s14*s24^2 - denom(1/2*s12)*mt^3*s14*s23
      *s24 + 2*denom(1/2*s12)*mt^3*s14*s23^2 - 1/2*denom(1/2*s12)*mt^3*s14^2*
      s24 + 1/2*denom(1/2*s12)*mt^3*s14^2*s23 - 2*denom(1/2*s12)*mt^3*s13*
      s24^2 + denom(1/2*s12)*mt^3*s13*s23*s24 + denom(1/2*s12)*mt^3*s13*s23^2
       - denom(1/2*s12)*mt^3*s13*s14*s24 + denom(1/2*s12)*mt^3*s13*s14*s23 - 1/
      2*denom(1/2*s12)*mt^3*s13^2*s24 + 1/2*denom(1/2*s12)*mt^3*s13^2*s23 - 1/
      2*denom(1/2*s12)*mt^3*s12*s24^2 + 1/2*denom(1/2*s12)*mt^3*s12*s23^2 - 1/
      2*denom(1/2*s12)*mt^3*s12*s14*s24 + 1/2*denom(1/2*s12)*mt^3*s12*s14*s23
       - 1/2*denom(1/2*s12)*mt^3*s12*s13*s24 + 1/2*denom(1/2*s12)*mt^3*s12*s13
      *s23 + 1/2*denom(1/2*s12)*mt^3*mh^2*s24^2 - 1/2*denom(1/2*s12)*mt^3*mh^2
      *s23^2 + 1/2*denom(1/2*s12)*mt^3*mh^2*s14*s24 - 1/2*denom(1/2*s12)*mt^3*
      mh^2*s14*s23 + 1/2*denom(1/2*s12)*mt^3*mh^2*s13*s24 - 1/2*denom(1/2*s12)
      *mt^3*mh^2*s13*s23 + 2*denom(1/2*s12)*mt^5*s24^2 - 2*denom(1/2*s12)*mt^5
      *s23^2 + 2*denom(1/2*s12)*mt^5*s14*s24 - 2*denom(1/2*s12)*mt^5*s14*s23
       + 2*denom(1/2*s12)*mt^5*s13*s24 - 2*denom(1/2*s12)*mt^5*s13*s23 + 
      denom(1/2*s12)*mt^5*s12*s24 - denom(1/2*s12)*mt^5*s12*s23 - denom(1/2*
      s12)*mt^5*mh^2*s24 + denom(1/2*s12)*mt^5*mh^2*s23 - 2*denom(1/2*s12)*
      mt^7*s24 + 2*denom(1/2*s12)*mt^7*s23 + 1/8*denom(1/4*s12^2)*mt*s14^2*
      s23^2*s24 - 1/8*denom(1/4*s12^2)*mt*s14^2*s23^3 + 1/4*denom(1/4*s12^2)*
      mt*s13*s14*s23*s24^2 - 1/4*denom(1/4*s12^2)*mt*s13*s14*s23^2*s24 + 1/8*
      denom(1/4*s12^2)*mt*s13^2*s24^3 - 1/8*denom(1/4*s12^2)*mt*s13^2*s23*
      s24^2 - 1/4*denom(1/4*s12^2)*mt^3*s14*s23*s24^2 + 1/4*denom(1/4*s12^2)*
      mt^3*s14*s23^3 - 1/4*denom(1/4*s12^2)*mt^3*s14^2*s23*s24 + 1/4*denom(1/4
      *s12^2)*mt^3*s14^2*s23^2 - 1/4*denom(1/4*s12^2)*mt^3*s13*s24^3 + 1/4*
      denom(1/4*s12^2)*mt^3*s13*s23^2*s24 - 1/4*denom(1/4*s12^2)*mt^3*s13*s14*
      s24^2 + 1/4*denom(1/4*s12^2)*mt^3*s13*s14*s23^2 - 1/4*denom(1/4*s12^2)*
      mt^3*s13^2*s24^2 + 1/4*denom(1/4*s12^2)*mt^3*s13^2*s23*s24 + 1/8*denom(1/
      4*s12^2)*mt^5*s24^3 + 1/8*denom(1/4*s12^2)*mt^5*s23*s24^2 - 1/8*denom(1/
      4*s12^2)*mt^5*s23^2*s24 - 1/8*denom(1/4*s12^2)*mt^5*s23^3 + 1/4*denom(1/
      4*s12^2)*mt^5*s14*s24^2 + 1/2*denom(1/4*s12^2)*mt^5*s14*s23*s24 - 3/4*
      denom(1/4*s12^2)*mt^5*s14*s23^2 + 1/8*denom(1/4*s12^2)*mt^5*s14^2*s24 - 
      1/8*denom(1/4*s12^2)*mt^5*s14^2*s23 + 3/4*denom(1/4*s12^2)*mt^5*s13*
      s24^2 - 1/2*denom(1/4*s12^2)*mt^5*s13*s23*s24 - 1/4*denom(1/4*s12^2)*
      mt^5*s13*s23^2 + 1/4*denom(1/4*s12^2)*mt^5*s13*s14*s24 - 1/4*denom(1/4*
      s12^2)*mt^5*s13*s14*s23 + 1/8*denom(1/4*s12^2)*mt^5*s13^2*s24 - 1/8*
      denom(1/4*s12^2)*mt^5*s13^2*s23 - 1/2*denom(1/4*s12^2)*mt^7*s24^2 + 1/2*
      denom(1/4*s12^2)*mt^7*s23^2 - 1/2*denom(1/4*s12^2)*mt^7*s14*s24 + 1/2*
      denom(1/4*s12^2)*mt^7*s14*s23 - 1/2*denom(1/4*s12^2)*mt^7*s13*s24 + 1/2*
      denom(1/4*s12^2)*mt^7*s13*s23 + 1/2*denom(1/4*s12^2)*mt^9*s24 - 1/2*
      denom(1/4*s12^2)*mt^9*s23;
 
 .sort
id KMatrix(1,13) =  mt^4*s14*s23 - mt^4*s13*s24 - mt^4*s12*s24 - mt^4*s12*s23
       - mt^4*s12*s14 - mt^4*s12*s13 - mt^4*s12^2 + mt^4*mh^2*s12 + mt^6*s24
       - mt^6*s23 - mt^6*s14 + mt^6*s13 - denom(1/2*s12)*mt^2*s13*s14*s23^2 + 
      denom(1/2*s12)*mt^2*s13^2*s23*s24 + denom(1/2*s12)*mt^2*s12*s13*s23*s24
       + denom(1/2*s12)*mt^2*s12*s13*s23^2 + denom(1/2*s12)*mt^2*s12*s13*s14*
      s23 + denom(1/2*s12)*mt^2*s12*s13^2*s23 + denom(1/2*s12)*mt^2*s12^2*s13*
      s23 - denom(1/2*s12)*mt^2*mh^2*s12*s13*s23 + denom(1/2*s12)*mt^4*s14*
      s23^2 - 2*denom(1/2*s12)*mt^4*s13*s23*s24 + denom(1/2*s12)*mt^4*s13*
      s23^2 + 2*denom(1/2*s12)*mt^4*s13*s14*s23 - denom(1/2*s12)*mt^4*s13^2*
      s24 - denom(1/2*s12)*mt^4*s13^2*s23 - denom(1/2*s12)*mt^4*s12*s23*s24 - 
      denom(1/2*s12)*mt^4*s12*s23^2 - denom(1/2*s12)*mt^4*s12*s14*s23 - denom(
      1/2*s12)*mt^4*s12*s13*s24 - 2*denom(1/2*s12)*mt^4*s12*s13*s23 - denom(1/
      2*s12)*mt^4*s12*s13*s14 - denom(1/2*s12)*mt^4*s12*s13^2 - denom(1/2*s12)
      *mt^4*s12^2*s23 - denom(1/2*s12)*mt^4*s12^2*s13 + denom(1/2*s12)*mt^4*
      mh^2*s12*s23 + denom(1/2*s12)*mt^4*mh^2*s12*s13 + denom(1/2*s12)*mt^6*
      s23*s24 - denom(1/2*s12)*mt^6*s23^2 - 2*denom(1/2*s12)*mt^6*s14*s23 + 2*
      denom(1/2*s12)*mt^6*s13*s24 - denom(1/2*s12)*mt^6*s13*s14 + denom(1/2*
      s12)*mt^6*s13^2 + denom(1/2*s12)*mt^6*s12*s24 + denom(1/2*s12)*mt^6*s12*
      s23 + denom(1/2*s12)*mt^6*s12*s14 + denom(1/2*s12)*mt^6*s12*s13 + denom(
      1/2*s12)*mt^6*s12^2 - denom(1/2*s12)*mt^6*mh^2*s12 - denom(1/2*s12)*mt^8
      *s24 + denom(1/2*s12)*mt^8*s23 + denom(1/2*s12)*mt^8*s14 - denom(1/2*s12
      )*mt^8*s13 + 1/4*denom(1/4*s12^2)*s13^2*s14*s23^3 - 1/4*denom(1/4*s12^2)
      *s13^3*s23^2*s24 - 1/4*denom(1/4*s12^2)*s12*s13^2*s23^2*s24 - 1/4*denom(
      1/4*s12^2)*s12*s13^2*s23^3 - 1/4*denom(1/4*s12^2)*s12*s13^2*s14*s23^2 - 
      1/4*denom(1/4*s12^2)*s12*s13^3*s23^2 - 1/4*denom(1/4*s12^2)*s12^2*s13^2*
      s23^2 + 1/4*denom(1/4*s12^2)*mh^2*s12*s13^2*s23^2 - 1/2*denom(1/4*s12^2)
      *mt^2*s13*s14*s23^3 + 3/4*denom(1/4*s12^2)*mt^2*s13^2*s23^2*s24 - 1/4*
      denom(1/4*s12^2)*mt^2*s13^2*s23^3 - 3/4*denom(1/4*s12^2)*mt^2*s13^2*s14*
      s23^2 + 1/2*denom(1/4*s12^2)*mt^2*s13^3*s23*s24 + 1/4*denom(1/4*s12^2)*
      mt^2*s13^3*s23^2 + 1/2*denom(1/4*s12^2)*mt^2*s12*s13*s23^2*s24 + 1/2*
      denom(1/4*s12^2)*mt^2*s12*s13*s23^3 + 1/2*denom(1/4*s12^2)*mt^2*s12*s13*
      s14*s23^2 + 1/2*denom(1/4*s12^2)*mt^2*s12*s13^2*s23*s24 + denom(1/4*
      s12^2)*mt^2*s12*s13^2*s23^2 + 1/2*denom(1/4*s12^2)*mt^2*s12*s13^2*s14*
      s23 + 1/2*denom(1/4*s12^2)*mt^2*s12*s13^3*s23 + 1/2*denom(1/4*s12^2)*
      mt^2*s12^2*s13*s23^2 + 1/2*denom(1/4*s12^2)*mt^2*s12^2*s13^2*s23 - 1/2*
      denom(1/4*s12^2)*mt^2*mh^2*s12*s13*s23^2 - 1/2*denom(1/4*s12^2)*mt^2*
      mh^2*s12*s13^2*s23 + 1/4*denom(1/4*s12^2)*mt^4*s14*s23^3 - 3/4*denom(1/4
      *s12^2)*mt^4*s13*s23^2*s24 + 1/2*denom(1/4*s12^2)*mt^4*s13*s23^3 + 3/2*
      denom(1/4*s12^2)*mt^4*s13*s14*s23^2 - 3/2*denom(1/4*s12^2)*mt^4*s13^2*
      s23*s24 + 3/4*denom(1/4*s12^2)*mt^4*s13^2*s14*s23 - 1/4*denom(1/4*s12^2)
      *mt^4*s13^3*s24 - 1/2*denom(1/4*s12^2)*mt^4*s13^3*s23 - 1/4*denom(1/4*
      s12^2)*mt^4*s12*s23^2*s24 - 1/4*denom(1/4*s12^2)*mt^4*s12*s23^3 - 1/4*
      denom(1/4*s12^2)*mt^4*s12*s14*s23^2 - denom(1/4*s12^2)*mt^4*s12*s13*s23*
      s24 - 5/4*denom(1/4*s12^2)*mt^4*s12*s13*s23^2 - denom(1/4*s12^2)*mt^4*
      s12*s13*s14*s23 - 1/4*denom(1/4*s12^2)*mt^4*s12*s13^2*s24 - 5/4*denom(1/
      4*s12^2)*mt^4*s12*s13^2*s23 - 1/4*denom(1/4*s12^2)*mt^4*s12*s13^2*s14 - 
      1/4*denom(1/4*s12^2)*mt^4*s12*s13^3 - 1/4*denom(1/4*s12^2)*mt^4*s12^2*
      s23^2 - denom(1/4*s12^2)*mt^4*s12^2*s13*s23 - 1/4*denom(1/4*s12^2)*mt^4*
      s12^2*s13^2 + 1/4*denom(1/4*s12^2)*mt^4*mh^2*s12*s23^2 + denom(1/4*s12^2
      )*mt^4*mh^2*s12*s13*s23 + 1/4*denom(1/4*s12^2)*mt^4*mh^2*s12*s13^2 + 1/4
      *denom(1/4*s12^2)*mt^6*s23^2*s24 - 1/4*denom(1/4*s12^2)*mt^6*s23^3 - 3/4
      *denom(1/4*s12^2)*mt^6*s14*s23^2 + 3/2*denom(1/4*s12^2)*mt^6*s13*s23*s24
       - 3/4*denom(1/4*s12^2)*mt^6*s13*s23^2 - 3/2*denom(1/4*s12^2)*mt^6*s13*
      s14*s23 + 3/4*denom(1/4*s12^2)*mt^6*s13^2*s24 + 3/4*denom(1/4*s12^2)*
      mt^6*s13^2*s23 - 1/4*denom(1/4*s12^2)*mt^6*s13^2*s14 + 1/4*denom(1/4*
      s12^2)*mt^6*s13^3 + 1/2*denom(1/4*s12^2)*mt^6*s12*s23*s24 + 1/2*denom(1/
      4*s12^2)*mt^6*s12*s23^2 + 1/2*denom(1/4*s12^2)*mt^6*s12*s14*s23 + 1/2*
      denom(1/4*s12^2)*mt^6*s12*s13*s24 + denom(1/4*s12^2)*mt^6*s12*s13*s23 + 
      1/2*denom(1/4*s12^2)*mt^6*s12*s13*s14 + 1/2*denom(1/4*s12^2)*mt^6*s12*
      s13^2 + 1/2*denom(1/4*s12^2)*mt^6*s12^2*s23 + 1/2*denom(1/4*s12^2)*mt^6*
      s12^2*s13 - 1/2*denom(1/4*s12^2)*mt^6*mh^2*s12*s23 - 1/2*denom(1/4*s12^2
      )*mt^6*mh^2*s12*s13 - 1/2*denom(1/4*s12^2)*mt^8*s23*s24 + 1/2*denom(1/4*
      s12^2)*mt^8*s23^2 + 3/4*denom(1/4*s12^2)*mt^8*s14*s23 - 3/4*denom(1/4*
      s12^2)*mt^8*s13*s24 + 1/2*denom(1/4*s12^2)*mt^8*s13*s14 - 1/2*denom(1/4*
      s12^2)*mt^8*s13^2 - 1/4*denom(1/4*s12^2)*mt^8*s12*s24 - 1/4*denom(1/4*
      s12^2)*mt^8*s12*s23 - 1/4*denom(1/4*s12^2)*mt^8*s12*s14 - 1/4*denom(1/4*
      s12^2)*mt^8*s12*s13 - 1/4*denom(1/4*s12^2)*mt^8*s12^2 + 1/4*denom(1/4*
      s12^2)*mt^8*mh^2*s12 + 1/4*denom(1/4*s12^2)*mt^10*s24 - 1/4*denom(1/4*
      s12^2)*mt^10*s23 - 1/4*denom(1/4*s12^2)*mt^10*s14 + 1/4*denom(1/4*s12^2)
      *mt^10*s13;
 
 .sort
id KMatrix(1,14) =   - 1/2*mt^2*s14*s23*s24 - 1/2*mt^2*s14*s23^2 - 1/2*mt^2*
      s14^2*s23 + 1/2*mt^2*s13*s24^2 + 1/2*mt^2*s13*s23*s24 + 1/2*mt^2*s13*s14
      *s24 - 1/2*mt^2*s13*s14*s23 + 1/2*mt^2*s13^2*s24 + 1/2*mt^2*s12*s24^2 + 
      mt^2*s12*s23*s24 + 1/2*mt^2*s12*s23^2 + mt^2*s12*s14*s24 + 1/2*mt^2*s12*
      s14*s23 + 1/2*mt^2*s12*s14^2 + 3/2*mt^2*s12*s13*s24 + mt^2*s12*s13*s23
       + mt^2*s12*s13*s14 + 1/2*mt^2*s12*s13^2 + mt^2*s12^2*s24 + mt^2*s12^2*
      s23 + mt^2*s12^2*s14 + mt^2*s12^2*s13 + 1/2*mt^2*s12^3 + 1/2*mt^2*mh^2*
      s14*s23 - 1/2*mt^2*mh^2*s13*s24 - mt^2*mh^2*s12*s24 - mt^2*mh^2*s12*s23
       - mt^2*mh^2*s12*s14 - mt^2*mh^2*s12*s13 - mt^2*mh^2*s12^2 + 1/2*mt^2*
      mh^4*s12 - 1/2*mt^4*s24^2 + 1/2*mt^4*s23^2 + 2*mt^4*s14*s23 + 1/2*mt^4*
      s14^2 - 2*mt^4*s13*s24 - 1/2*mt^4*s13^2 - 3/2*mt^4*s12*s24 - 1/2*mt^4*
      s12*s23 - 1/2*mt^4*s12*s14 - 3/2*mt^4*s12*s13 - mt^4*s12^2 + 1/2*mt^4*
      mh^2*s24 - 1/2*mt^4*mh^2*s23 - 1/2*mt^4*mh^2*s14 + 1/2*mt^4*mh^2*s13 + 
      mt^4*mh^2*s12 + mt^6*s24 - mt^6*s23 - mt^6*s14 + mt^6*s13 + 1/4*denom(1/
      2*s12)*s13*s14*s23^2*s24 + 1/4*denom(1/2*s12)*s13*s14*s23^3 + 1/4*denom(
      1/2*s12)*s13*s14^2*s23^2 - 1/4*denom(1/2*s12)*s13^2*s23*s24^2 - 1/4*
      denom(1/2*s12)*s13^2*s23^2*s24 - 1/4*denom(1/2*s12)*s13^2*s14*s23*s24 + 
      1/4*denom(1/2*s12)*s13^2*s14*s23^2 - 1/4*denom(1/2*s12)*s13^3*s23*s24 - 
      1/4*denom(1/2*s12)*s12*s13*s23*s24^2 - 1/2*denom(1/2*s12)*s12*s13*s23^2*
      s24 - 1/4*denom(1/2*s12)*s12*s13*s23^3 - 1/2*denom(1/2*s12)*s12*s13*s14*
      s23*s24 - 1/4*denom(1/2*s12)*s12*s13*s14*s23^2 - 1/4*denom(1/2*s12)*s12*
      s13*s14^2*s23 - 3/4*denom(1/2*s12)*s12*s13^2*s23*s24 - 1/2*denom(1/2*s12
      )*s12*s13^2*s23^2 - 1/2*denom(1/2*s12)*s12*s13^2*s14*s23 - 1/4*denom(1/2
      *s12)*s12*s13^3*s23 - 1/2*denom(1/2*s12)*s12^2*s13*s23*s24 - 1/2*denom(1/
      2*s12)*s12^2*s13*s23^2 - 1/2*denom(1/2*s12)*s12^2*s13*s14*s23 - 1/2*
      denom(1/2*s12)*s12^2*s13^2*s23 - 1/4*denom(1/2*s12)*s12^3*s13*s23 - 1/4*
      denom(1/2*s12)*mh^2*s13*s14*s23^2 + 1/4*denom(1/2*s12)*mh^2*s13^2*s23*
      s24 + 1/2*denom(1/2*s12)*mh^2*s12*s13*s23*s24 + 1/2*denom(1/2*s12)*mh^2*
      s12*s13*s23^2 + 1/2*denom(1/2*s12)*mh^2*s12*s13*s14*s23 + 1/2*denom(1/2*
      s12)*mh^2*s12*s13^2*s23 + 1/2*denom(1/2*s12)*mh^2*s12^2*s13*s23 - 1/4*
      denom(1/2*s12)*mh^4*s12*s13*s23 - 1/4*denom(1/2*s12)*mt^2*s14*s23^2*s24
       - 1/4*denom(1/2*s12)*mt^2*s14*s23^3 - 1/2*denom(1/2*s12)*mt^2*s14^2*
      s23^2 + 1/2*denom(1/2*s12)*mt^2*s13*s23*s24^2 + 1/4*denom(1/2*s12)*mt^2*
      s13*s23^2*s24 - 1/4*denom(1/2*s12)*mt^2*s13*s23^3 - 3/2*denom(1/2*s12)*
      mt^2*s13*s14*s23^2 - 1/2*denom(1/2*s12)*mt^2*s13*s14^2*s23 + 1/2*denom(1/
      2*s12)*mt^2*s13^2*s24^2 + 3/2*denom(1/2*s12)*mt^2*s13^2*s23*s24 + 1/4*
      denom(1/2*s12)*mt^2*s13^2*s14*s24 - 1/4*denom(1/2*s12)*mt^2*s13^2*s14*
      s23 + 1/4*denom(1/2*s12)*mt^2*s13^3*s24 + 1/4*denom(1/2*s12)*mt^2*s13^3*
      s23 + 1/4*denom(1/2*s12)*mt^2*s12*s23*s24^2 + 1/2*denom(1/2*s12)*mt^2*
      s12*s23^2*s24 + 1/4*denom(1/2*s12)*mt^2*s12*s23^3 + 3/4*denom(1/2*s12)*
      mt^2*s12*s14*s23*s24 + 1/2*denom(1/2*s12)*mt^2*s12*s14*s23^2 + 1/2*
      denom(1/2*s12)*mt^2*s12*s14^2*s23 + 1/2*denom(1/2*s12)*mt^2*s12*s13*
      s24^2 + 9/4*denom(1/2*s12)*mt^2*s12*s13*s23*s24 + denom(1/2*s12)*mt^2*
      s12*s13*s23^2 + 3/4*denom(1/2*s12)*mt^2*s12*s13*s14*s24 + 5/4*denom(1/2*
      s12)*mt^2*s12*s13*s14*s23 + 1/4*denom(1/2*s12)*mt^2*s12*s13*s14^2 + 
      denom(1/2*s12)*mt^2*s12*s13^2*s24 + 3/2*denom(1/2*s12)*mt^2*s12*s13^2*
      s23 + 1/2*denom(1/2*s12)*mt^2*s12*s13^2*s14 + 1/4*denom(1/2*s12)*mt^2*
      s12*s13^3 + 1/2*denom(1/2*s12)*mt^2*s12^2*s23*s24 + 1/2*denom(1/2*s12)*
      mt^2*s12^2*s23^2 + 3/4*denom(1/2*s12)*mt^2*s12^2*s14*s23 + 3/4*denom(1/2
      *s12)*mt^2*s12^2*s13*s24 + 3/2*denom(1/2*s12)*mt^2*s12^2*s13*s23 + 1/2*
      denom(1/2*s12)*mt^2*s12^2*s13*s14 + 1/2*denom(1/2*s12)*mt^2*s12^2*s13^2
       + 1/4*denom(1/2*s12)*mt^2*s12^3*s23 + 1/4*denom(1/2*s12)*mt^2*s12^3*s13
       + 1/4*denom(1/2*s12)*mt^2*mh^2*s14*s23^2 - 1/2*denom(1/2*s12)*mt^2*mh^2
      *s13*s23*s24 + 1/4*denom(1/2*s12)*mt^2*mh^2*s13*s23^2 + 1/2*denom(1/2*
      s12)*mt^2*mh^2*s13*s14*s23 - 1/4*denom(1/2*s12)*mt^2*mh^2*s13^2*s24 - 1/
      4*denom(1/2*s12)*mt^2*mh^2*s13^2*s23 - 1/2*denom(1/2*s12)*mt^2*mh^2*s12*
      s23*s24 - 1/2*denom(1/2*s12)*mt^2*mh^2*s12*s23^2 - 3/4*denom(1/2*s12)*
      mt^2*mh^2*s12*s14*s23 - 3/4*denom(1/2*s12)*mt^2*mh^2*s12*s13*s24 - 3/2*
      denom(1/2*s12)*mt^2*mh^2*s12*s13*s23 - 1/2*denom(1/2*s12)*mt^2*mh^2*s12*
      s13*s14 - 1/2*denom(1/2*s12)*mt^2*mh^2*s12*s13^2 - 1/2*denom(1/2*s12)*
      mt^2*mh^2*s12^2*s23 - 1/2*denom(1/2*s12)*mt^2*mh^2*s12^2*s13 + 1/4*
      denom(1/2*s12)*mt^2*mh^4*s12*s23 + 1/4*denom(1/2*s12)*mt^2*mh^4*s12*s13
       - 1/4*denom(1/2*s12)*mt^4*s23*s24^2 + 1/4*denom(1/2*s12)*mt^4*s23^3 + 1/
      4*denom(1/2*s12)*mt^4*s14*s23*s24 + 7/4*denom(1/2*s12)*mt^4*s14*s23^2 + 
      denom(1/2*s12)*mt^4*s14^2*s23 - denom(1/2*s12)*mt^4*s13*s24^2 - 7/4*
      denom(1/2*s12)*mt^4*s13*s23*s24 + 3/4*denom(1/2*s12)*mt^4*s13*s23^2 - 1/
      4*denom(1/2*s12)*mt^4*s13*s14*s24 + 7/4*denom(1/2*s12)*mt^4*s13*s14*s23
       + 1/4*denom(1/2*s12)*mt^4*s13*s14^2 - 7/4*denom(1/2*s12)*mt^4*s13^2*s24
       - 3/4*denom(1/2*s12)*mt^4*s13^2*s23 - 1/4*denom(1/2*s12)*mt^4*s13^3 - 1/
      2*denom(1/2*s12)*mt^4*s12*s24^2 - 7/4*denom(1/2*s12)*mt^4*s12*s23*s24 - 
      3/4*denom(1/2*s12)*mt^4*s12*s23^2 - denom(1/2*s12)*mt^4*s12*s14*s24 - 
      denom(1/2*s12)*mt^4*s12*s14*s23 - 1/2*denom(1/2*s12)*mt^4*s12*s14^2 - 2*
      denom(1/2*s12)*mt^4*s12*s13*s24 - 2*denom(1/2*s12)*mt^4*s12*s13*s23 - 5/
      4*denom(1/2*s12)*mt^4*s12*s13*s14 - 5/4*denom(1/2*s12)*mt^4*s12*s13^2 - 
      3/4*denom(1/2*s12)*mt^4*s12^2*s24 - 5/4*denom(1/2*s12)*mt^4*s12^2*s23 - 
      3/4*denom(1/2*s12)*mt^4*s12^2*s14 - 5/4*denom(1/2*s12)*mt^4*s12^2*s13 - 
      1/4*denom(1/2*s12)*mt^4*s12^3 + 1/4*denom(1/2*s12)*mt^4*mh^2*s23*s24 - 1/
      4*denom(1/2*s12)*mt^4*mh^2*s23^2 - 1/2*denom(1/2*s12)*mt^4*mh^2*s14*s23
       + 1/2*denom(1/2*s12)*mt^4*mh^2*s13*s24 - 1/4*denom(1/2*s12)*mt^4*mh^2*
      s13*s14 + 1/4*denom(1/2*s12)*mt^4*mh^2*s13^2 + 3/4*denom(1/2*s12)*mt^4*
      mh^2*s12*s24 + 5/4*denom(1/2*s12)*mt^4*mh^2*s12*s23 + 3/4*denom(1/2*s12)
      *mt^4*mh^2*s12*s14 + 5/4*denom(1/2*s12)*mt^4*mh^2*s12*s13 + 1/2*denom(1/
      2*s12)*mt^4*mh^2*s12^2 - 1/4*denom(1/2*s12)*mt^4*mh^4*s12 + 1/2*denom(1/
      2*s12)*mt^6*s24^2 + 1/2*denom(1/2*s12)*mt^6*s23*s24 - denom(1/2*s12)*
      mt^6*s23^2 - 5/2*denom(1/2*s12)*mt^6*s14*s23 - 1/2*denom(1/2*s12)*mt^6*
      s14^2 + 5/2*denom(1/2*s12)*mt^6*s13*s24 - 1/2*denom(1/2*s12)*mt^6*s13*
      s14 + denom(1/2*s12)*mt^6*s13^2 + 5/4*denom(1/2*s12)*mt^6*s12*s24 + 3/4*
      denom(1/2*s12)*mt^6*s12*s23 + 3/4*denom(1/2*s12)*mt^6*s12*s14 + 5/4*
      denom(1/2*s12)*mt^6*s12*s13 + denom(1/2*s12)*mt^6*s12^2 - 1/4*denom(1/2*
      s12)*mt^6*mh^2*s24 + 1/4*denom(1/2*s12)*mt^6*mh^2*s23 + 1/4*denom(1/2*
      s12)*mt^6*mh^2*s14 - 1/4*denom(1/2*s12)*mt^6*mh^2*s13 - denom(1/2*s12)*
      mt^6*mh^2*s12 - denom(1/2*s12)*mt^8*s24 + denom(1/2*s12)*mt^8*s23 + 
      denom(1/2*s12)*mt^8*s14 - denom(1/2*s12)*mt^8*s13 + 1/8*denom(1/4*s12^2)
      *s13*s14^2*s23^3 - 1/8*denom(1/4*s12^2)*s13^3*s23*s24^2 - 1/8*denom(1/4*
      s12^2)*s12*s13*s14*s23^2*s24 - 1/8*denom(1/4*s12^2)*s12*s13*s14*s23^3 - 
      1/8*denom(1/4*s12^2)*s12*s13*s14^2*s23^2 - 1/8*denom(1/4*s12^2)*s12*
      s13^2*s23*s24^2 - 1/8*denom(1/4*s12^2)*s12*s13^2*s23^2*s24 - 1/8*denom(1/
      4*s12^2)*s12*s13^2*s14*s23*s24 - 1/8*denom(1/4*s12^2)*s12*s13^2*s14*
      s23^2 - 1/8*denom(1/4*s12^2)*s12*s13^3*s23*s24 - 1/8*denom(1/4*s12^2)*
      s12^2*s13*s14*s23^2 - 1/8*denom(1/4*s12^2)*s12^2*s13^2*s23*s24 + 1/8*
      denom(1/4*s12^2)*mh^2*s12*s13*s14*s23^2 + 1/8*denom(1/4*s12^2)*mh^2*s12*
      s13^2*s23*s24 - 1/8*denom(1/4*s12^2)*mt^2*s14^2*s23^3 - 1/4*denom(1/4*
      s12^2)*mt^2*s13*s14*s23^3 - 3/8*denom(1/4*s12^2)*mt^2*s13*s14^2*s23^2 + 
      3/8*denom(1/4*s12^2)*mt^2*s13^2*s23*s24^2 + 1/8*denom(1/4*s12^2)*mt^2*
      s13^3*s24^2 + 1/4*denom(1/4*s12^2)*mt^2*s13^3*s23*s24 + 1/8*denom(1/4*
      s12^2)*mt^2*s12*s14*s23^2*s24 + 1/8*denom(1/4*s12^2)*mt^2*s12*s14*s23^3
       + 1/8*denom(1/4*s12^2)*mt^2*s12*s14^2*s23^2 + 1/4*denom(1/4*s12^2)*mt^2
      *s12*s13*s23*s24^2 + 3/8*denom(1/4*s12^2)*mt^2*s12*s13*s23^2*s24 + 1/8*
      denom(1/4*s12^2)*mt^2*s12*s13*s23^3 + 1/2*denom(1/4*s12^2)*mt^2*s12*s13*
      s14*s23*s24 + 1/2*denom(1/4*s12^2)*mt^2*s12*s13*s14*s23^2 + 1/4*denom(1/
      4*s12^2)*mt^2*s12*s13*s14^2*s23 + 1/8*denom(1/4*s12^2)*mt^2*s12*s13^2*
      s24^2 + 1/2*denom(1/4*s12^2)*mt^2*s12*s13^2*s23*s24 + 1/4*denom(1/4*
      s12^2)*mt^2*s12*s13^2*s23^2 + 1/8*denom(1/4*s12^2)*mt^2*s12*s13^2*s14*
      s24 + 3/8*denom(1/4*s12^2)*mt^2*s12*s13^2*s14*s23 + 1/8*denom(1/4*s12^2)
      *mt^2*s12*s13^3*s24 + 1/8*denom(1/4*s12^2)*mt^2*s12*s13^3*s23 + 1/8*
      denom(1/4*s12^2)*mt^2*s12^2*s14*s23^2 + 1/4*denom(1/4*s12^2)*mt^2*s12^2*
      s13*s23*s24 + 1/8*denom(1/4*s12^2)*mt^2*s12^2*s13*s23^2 + 1/4*denom(1/4*
      s12^2)*mt^2*s12^2*s13*s14*s23 + 1/8*denom(1/4*s12^2)*mt^2*s12^2*s13^2*
      s24 + 1/8*denom(1/4*s12^2)*mt^2*s12^2*s13^2*s23 - 1/8*denom(1/4*s12^2)*
      mt^2*mh^2*s12*s14*s23^2 - 1/4*denom(1/4*s12^2)*mt^2*mh^2*s12*s13*s23*s24
       - 1/8*denom(1/4*s12^2)*mt^2*mh^2*s12*s13*s23^2 - 1/4*denom(1/4*s12^2)*
      mt^2*mh^2*s12*s13*s14*s23 - 1/8*denom(1/4*s12^2)*mt^2*mh^2*s12*s13^2*s24
       - 1/8*denom(1/4*s12^2)*mt^2*mh^2*s12*s13^2*s23 + 1/4*denom(1/4*s12^2)*
      mt^4*s14*s23^3 + 3/8*denom(1/4*s12^2)*mt^4*s14^2*s23^2 - 3/8*denom(1/4*
      s12^2)*mt^4*s13*s23*s24^2 + 1/8*denom(1/4*s12^2)*mt^4*s13*s23^3 + 3/4*
      denom(1/4*s12^2)*mt^4*s13*s14*s23^2 + 3/8*denom(1/4*s12^2)*mt^4*s13*
      s14^2*s23 - 3/8*denom(1/4*s12^2)*mt^4*s13^2*s24^2 - 3/4*denom(1/4*s12^2)
      *mt^4*s13^2*s23*s24 - 1/4*denom(1/4*s12^2)*mt^4*s13^3*s24 - 1/8*denom(1/
      4*s12^2)*mt^4*s13^3*s23 - 1/8*denom(1/4*s12^2)*mt^4*s12*s23*s24^2 - 1/4*
      denom(1/4*s12^2)*mt^4*s12*s23^2*s24 - 1/8*denom(1/4*s12^2)*mt^4*s12*
      s23^3 - 3/8*denom(1/4*s12^2)*mt^4*s12*s14*s23*s24 - 3/8*denom(1/4*s12^2)
      *mt^4*s12*s14*s23^2 - 1/4*denom(1/4*s12^2)*mt^4*s12*s14^2*s23 - 1/4*
      denom(1/4*s12^2)*mt^4*s12*s13*s24^2 - 7/8*denom(1/4*s12^2)*mt^4*s12*s13*
      s23*s24 - 5/8*denom(1/4*s12^2)*mt^4*s12*s13*s23^2 - 3/8*denom(1/4*s12^2)
      *mt^4*s12*s13*s14*s24 - 7/8*denom(1/4*s12^2)*mt^4*s12*s13*s14*s23 - 1/8*
      denom(1/4*s12^2)*mt^4*s12*s13*s14^2 - 3/8*denom(1/4*s12^2)*mt^4*s12*
      s13^2*s24 - 5/8*denom(1/4*s12^2)*mt^4*s12*s13^2*s23 - 1/4*denom(1/4*
      s12^2)*mt^4*s12*s13^2*s14 - 1/8*denom(1/4*s12^2)*mt^4*s12*s13^3 - 1/8*
      denom(1/4*s12^2)*mt^4*s12^2*s23*s24 - 1/8*denom(1/4*s12^2)*mt^4*s12^2*
      s23^2 - 1/4*denom(1/4*s12^2)*mt^4*s12^2*s14*s23 - 1/4*denom(1/4*s12^2)*
      mt^4*s12^2*s13*s24 - 1/2*denom(1/4*s12^2)*mt^4*s12^2*s13*s23 - 1/8*
      denom(1/4*s12^2)*mt^4*s12^2*s13*s14 - 1/8*denom(1/4*s12^2)*mt^4*s12^2*
      s13^2 + 1/8*denom(1/4*s12^2)*mt^4*mh^2*s12*s23*s24 + 1/8*denom(1/4*s12^2
      )*mt^4*mh^2*s12*s23^2 + 1/4*denom(1/4*s12^2)*mt^4*mh^2*s12*s14*s23 + 1/4
      *denom(1/4*s12^2)*mt^4*mh^2*s12*s13*s24 + 1/2*denom(1/4*s12^2)*mt^4*mh^2
      *s12*s13*s23 + 1/8*denom(1/4*s12^2)*mt^4*mh^2*s12*s13*s14 + 1/8*denom(1/
      4*s12^2)*mt^4*mh^2*s12*s13^2 + 1/8*denom(1/4*s12^2)*mt^6*s23*s24^2 - 1/8
      *denom(1/4*s12^2)*mt^6*s23^3 - 3/4*denom(1/4*s12^2)*mt^6*s14*s23^2 - 3/8
      *denom(1/4*s12^2)*mt^6*s14^2*s23 + 3/8*denom(1/4*s12^2)*mt^6*s13*s24^2
       + 3/4*denom(1/4*s12^2)*mt^6*s13*s23*s24 - 3/8*denom(1/4*s12^2)*mt^6*s13
      *s23^2 - 3/4*denom(1/4*s12^2)*mt^6*s13*s14*s23 - 1/8*denom(1/4*s12^2)*
      mt^6*s13*s14^2 + 3/4*denom(1/4*s12^2)*mt^6*s13^2*s24 + 3/8*denom(1/4*
      s12^2)*mt^6*s13^2*s23 + 1/8*denom(1/4*s12^2)*mt^6*s13^3 + 1/8*denom(1/4*
      s12^2)*mt^6*s12*s24^2 + 1/2*denom(1/4*s12^2)*mt^6*s12*s23*s24 + 3/8*
      denom(1/4*s12^2)*mt^6*s12*s23^2 + 1/4*denom(1/4*s12^2)*mt^6*s12*s14*s24
       + 1/2*denom(1/4*s12^2)*mt^6*s12*s14*s23 + 1/8*denom(1/4*s12^2)*mt^6*s12
      *s14^2 + 1/2*denom(1/4*s12^2)*mt^6*s12*s13*s24 + 3/4*denom(1/4*s12^2)*
      mt^6*s12*s13*s23 + 1/2*denom(1/4*s12^2)*mt^6*s12*s13*s14 + 3/8*denom(1/4
      *s12^2)*mt^6*s12*s13^2 + 1/8*denom(1/4*s12^2)*mt^6*s12^2*s24 + 3/8*
      denom(1/4*s12^2)*mt^6*s12^2*s23 + 1/8*denom(1/4*s12^2)*mt^6*s12^2*s14 + 
      3/8*denom(1/4*s12^2)*mt^6*s12^2*s13 - 1/8*denom(1/4*s12^2)*mt^6*mh^2*s12
      *s24 - 3/8*denom(1/4*s12^2)*mt^6*mh^2*s12*s23 - 1/8*denom(1/4*s12^2)*
      mt^6*mh^2*s12*s14 - 3/8*denom(1/4*s12^2)*mt^6*mh^2*s12*s13 - 1/8*denom(1/
      4*s12^2)*mt^8*s24^2 - 1/4*denom(1/4*s12^2)*mt^8*s23*s24 + 3/8*denom(1/4*
      s12^2)*mt^8*s23^2 + 3/4*denom(1/4*s12^2)*mt^8*s14*s23 + 1/8*denom(1/4*
      s12^2)*mt^8*s14^2 - 3/4*denom(1/4*s12^2)*mt^8*s13*s24 + 1/4*denom(1/4*
      s12^2)*mt^8*s13*s14 - 3/8*denom(1/4*s12^2)*mt^8*s13^2 - 1/4*denom(1/4*
      s12^2)*mt^8*s12*s24 - 1/4*denom(1/4*s12^2)*mt^8*s12*s23 - 1/4*denom(1/4*
      s12^2)*mt^8*s12*s14 - 1/4*denom(1/4*s12^2)*mt^8*s12*s13 - 1/4*denom(1/4*
      s12^2)*mt^8*s12^2 + 1/4*denom(1/4*s12^2)*mt^8*mh^2*s12 + 1/4*denom(1/4*
      s12^2)*mt^10*s24 - 1/4*denom(1/4*s12^2)*mt^10*s23 - 1/4*denom(1/4*s12^2)
      *mt^10*s14 + 1/4*denom(1/4*s12^2)*mt^10*s13;
 
 .sort
id KMatrix(1,15) =   - 1/2*mt^2*s14*s23*s24 - 1/2*mt^2*s14*s23^2 - 1/2*mt^2*
      s14^2*s23 + 1/2*mt^2*s13*s24^2 + 1/2*mt^2*s13*s23*s24 + 1/2*mt^2*s13*s14
      *s24 - 1/2*mt^2*s13*s14*s23 + 1/2*mt^2*s13^2*s24 + 1/2*mt^2*s12*s24^2 + 
      mt^2*s12*s23*s24 + 1/2*mt^2*s12*s23^2 + mt^2*s12*s14*s24 + 1/2*mt^2*s12*
      s14*s23 + 1/2*mt^2*s12*s14^2 + 3/2*mt^2*s12*s13*s24 + mt^2*s12*s13*s23
       + mt^2*s12*s13*s14 + 1/2*mt^2*s12*s13^2 + mt^2*s12^2*s24 + mt^2*s12^2*
      s23 + mt^2*s12^2*s14 + mt^2*s12^2*s13 + 1/2*mt^2*s12^3 + 1/2*mt^2*mh^2*
      s14*s23 - 1/2*mt^2*mh^2*s13*s24 - mt^2*mh^2*s12*s24 - mt^2*mh^2*s12*s23
       - mt^2*mh^2*s12*s14 - mt^2*mh^2*s12*s13 - mt^2*mh^2*s12^2 + 1/2*mt^2*
      mh^4*s12 - 1/2*mt^4*s24^2 + 1/2*mt^4*s23^2 + 2*mt^4*s14*s23 + 1/2*mt^4*
      s14^2 - 2*mt^4*s13*s24 - 1/2*mt^4*s13^2 - 3/2*mt^4*s12*s24 - 1/2*mt^4*
      s12*s23 - 1/2*mt^4*s12*s14 - 3/2*mt^4*s12*s13 - mt^4*s12^2 + 1/2*mt^4*
      mh^2*s24 - 1/2*mt^4*mh^2*s23 - 1/2*mt^4*mh^2*s14 + 1/2*mt^4*mh^2*s13 + 
      mt^4*mh^2*s12 + mt^6*s24 - mt^6*s23 - mt^6*s14 + mt^6*s13 + 1/4*denom(1/
      2*s12)*s13*s14*s23^2*s24 + 1/4*denom(1/2*s12)*s13*s14*s23^3 + 1/4*denom(
      1/2*s12)*s13*s14^2*s23^2 - 1/4*denom(1/2*s12)*s13^2*s23*s24^2 - 1/4*
      denom(1/2*s12)*s13^2*s23^2*s24 - 1/4*denom(1/2*s12)*s13^2*s14*s23*s24 + 
      1/4*denom(1/2*s12)*s13^2*s14*s23^2 - 1/4*denom(1/2*s12)*s13^3*s23*s24 - 
      1/4*denom(1/2*s12)*s12*s13*s23*s24^2 - 1/2*denom(1/2*s12)*s12*s13*s23^2*
      s24 - 1/4*denom(1/2*s12)*s12*s13*s23^3 - 1/2*denom(1/2*s12)*s12*s13*s14*
      s23*s24 - 1/4*denom(1/2*s12)*s12*s13*s14*s23^2 - 1/4*denom(1/2*s12)*s12*
      s13*s14^2*s23 - 3/4*denom(1/2*s12)*s12*s13^2*s23*s24 - 1/2*denom(1/2*s12
      )*s12*s13^2*s23^2 - 1/2*denom(1/2*s12)*s12*s13^2*s14*s23 - 1/4*denom(1/2
      *s12)*s12*s13^3*s23 - 1/2*denom(1/2*s12)*s12^2*s13*s23*s24 - 1/2*denom(1/
      2*s12)*s12^2*s13*s23^2 - 1/2*denom(1/2*s12)*s12^2*s13*s14*s23 - 1/2*
      denom(1/2*s12)*s12^2*s13^2*s23 - 1/4*denom(1/2*s12)*s12^3*s13*s23 - 1/4*
      denom(1/2*s12)*mh^2*s13*s14*s23^2 + 1/4*denom(1/2*s12)*mh^2*s13^2*s23*
      s24 + 1/2*denom(1/2*s12)*mh^2*s12*s13*s23*s24 + 1/2*denom(1/2*s12)*mh^2*
      s12*s13*s23^2 + 1/2*denom(1/2*s12)*mh^2*s12*s13*s14*s23 + 1/2*denom(1/2*
      s12)*mh^2*s12*s13^2*s23 + 1/2*denom(1/2*s12)*mh^2*s12^2*s13*s23 - 1/4*
      denom(1/2*s12)*mh^4*s12*s13*s23 - 1/4*denom(1/2*s12)*mt^2*s14*s23^2*s24
       - 1/4*denom(1/2*s12)*mt^2*s14*s23^3 - 1/2*denom(1/2*s12)*mt^2*s14^2*
      s23^2 + 1/2*denom(1/2*s12)*mt^2*s13*s23*s24^2 + 1/4*denom(1/2*s12)*mt^2*
      s13*s23^2*s24 - 1/4*denom(1/2*s12)*mt^2*s13*s23^3 - 3/2*denom(1/2*s12)*
      mt^2*s13*s14*s23^2 - 1/2*denom(1/2*s12)*mt^2*s13*s14^2*s23 + 1/2*denom(1/
      2*s12)*mt^2*s13^2*s24^2 + 3/2*denom(1/2*s12)*mt^2*s13^2*s23*s24 + 1/4*
      denom(1/2*s12)*mt^2*s13^2*s14*s24 - 1/4*denom(1/2*s12)*mt^2*s13^2*s14*
      s23 + 1/4*denom(1/2*s12)*mt^2*s13^3*s24 + 1/4*denom(1/2*s12)*mt^2*s13^3*
      s23 + 1/4*denom(1/2*s12)*mt^2*s12*s23*s24^2 + 1/2*denom(1/2*s12)*mt^2*
      s12*s23^2*s24 + 1/4*denom(1/2*s12)*mt^2*s12*s23^3 + 3/4*denom(1/2*s12)*
      mt^2*s12*s14*s23*s24 + 1/2*denom(1/2*s12)*mt^2*s12*s14*s23^2 + 1/2*
      denom(1/2*s12)*mt^2*s12*s14^2*s23 + 1/2*denom(1/2*s12)*mt^2*s12*s13*
      s24^2 + 9/4*denom(1/2*s12)*mt^2*s12*s13*s23*s24 + denom(1/2*s12)*mt^2*
      s12*s13*s23^2 + 3/4*denom(1/2*s12)*mt^2*s12*s13*s14*s24 + 5/4*denom(1/2*
      s12)*mt^2*s12*s13*s14*s23 + 1/4*denom(1/2*s12)*mt^2*s12*s13*s14^2 + 
      denom(1/2*s12)*mt^2*s12*s13^2*s24 + 3/2*denom(1/2*s12)*mt^2*s12*s13^2*
      s23 + 1/2*denom(1/2*s12)*mt^2*s12*s13^2*s14 + 1/4*denom(1/2*s12)*mt^2*
      s12*s13^3 + 1/2*denom(1/2*s12)*mt^2*s12^2*s23*s24 + 1/2*denom(1/2*s12)*
      mt^2*s12^2*s23^2 + 3/4*denom(1/2*s12)*mt^2*s12^2*s14*s23 + 3/4*denom(1/2
      *s12)*mt^2*s12^2*s13*s24 + 3/2*denom(1/2*s12)*mt^2*s12^2*s13*s23 + 1/2*
      denom(1/2*s12)*mt^2*s12^2*s13*s14 + 1/2*denom(1/2*s12)*mt^2*s12^2*s13^2
       + 1/4*denom(1/2*s12)*mt^2*s12^3*s23 + 1/4*denom(1/2*s12)*mt^2*s12^3*s13
       + 1/4*denom(1/2*s12)*mt^2*mh^2*s14*s23^2 - 1/2*denom(1/2*s12)*mt^2*mh^2
      *s13*s23*s24 + 1/4*denom(1/2*s12)*mt^2*mh^2*s13*s23^2 + 1/2*denom(1/2*
      s12)*mt^2*mh^2*s13*s14*s23 - 1/4*denom(1/2*s12)*mt^2*mh^2*s13^2*s24 - 1/
      4*denom(1/2*s12)*mt^2*mh^2*s13^2*s23 - 1/2*denom(1/2*s12)*mt^2*mh^2*s12*
      s23*s24 - 1/2*denom(1/2*s12)*mt^2*mh^2*s12*s23^2 - 3/4*denom(1/2*s12)*
      mt^2*mh^2*s12*s14*s23 - 3/4*denom(1/2*s12)*mt^2*mh^2*s12*s13*s24 - 3/2*
      denom(1/2*s12)*mt^2*mh^2*s12*s13*s23 - 1/2*denom(1/2*s12)*mt^2*mh^2*s12*
      s13*s14 - 1/2*denom(1/2*s12)*mt^2*mh^2*s12*s13^2 - 1/2*denom(1/2*s12)*
      mt^2*mh^2*s12^2*s23 - 1/2*denom(1/2*s12)*mt^2*mh^2*s12^2*s13 + 1/4*
      denom(1/2*s12)*mt^2*mh^4*s12*s23 + 1/4*denom(1/2*s12)*mt^2*mh^4*s12*s13
       - 1/4*denom(1/2*s12)*mt^4*s23*s24^2 + 1/4*denom(1/2*s12)*mt^4*s23^3 + 1/
      4*denom(1/2*s12)*mt^4*s14*s23*s24 + 7/4*denom(1/2*s12)*mt^4*s14*s23^2 + 
      denom(1/2*s12)*mt^4*s14^2*s23 - denom(1/2*s12)*mt^4*s13*s24^2 - 7/4*
      denom(1/2*s12)*mt^4*s13*s23*s24 + 3/4*denom(1/2*s12)*mt^4*s13*s23^2 - 1/
      4*denom(1/2*s12)*mt^4*s13*s14*s24 + 7/4*denom(1/2*s12)*mt^4*s13*s14*s23
       + 1/4*denom(1/2*s12)*mt^4*s13*s14^2 - 7/4*denom(1/2*s12)*mt^4*s13^2*s24
       - 3/4*denom(1/2*s12)*mt^4*s13^2*s23 - 1/4*denom(1/2*s12)*mt^4*s13^3 - 1/
      2*denom(1/2*s12)*mt^4*s12*s24^2 - 7/4*denom(1/2*s12)*mt^4*s12*s23*s24 - 
      3/4*denom(1/2*s12)*mt^4*s12*s23^2 - denom(1/2*s12)*mt^4*s12*s14*s24 - 
      denom(1/2*s12)*mt^4*s12*s14*s23 - 1/2*denom(1/2*s12)*mt^4*s12*s14^2 - 2*
      denom(1/2*s12)*mt^4*s12*s13*s24 - 2*denom(1/2*s12)*mt^4*s12*s13*s23 - 5/
      4*denom(1/2*s12)*mt^4*s12*s13*s14 - 5/4*denom(1/2*s12)*mt^4*s12*s13^2 - 
      3/4*denom(1/2*s12)*mt^4*s12^2*s24 - 5/4*denom(1/2*s12)*mt^4*s12^2*s23 - 
      3/4*denom(1/2*s12)*mt^4*s12^2*s14 - 5/4*denom(1/2*s12)*mt^4*s12^2*s13 - 
      1/4*denom(1/2*s12)*mt^4*s12^3 + 1/4*denom(1/2*s12)*mt^4*mh^2*s23*s24 - 1/
      4*denom(1/2*s12)*mt^4*mh^2*s23^2 - 1/2*denom(1/2*s12)*mt^4*mh^2*s14*s23
       + 1/2*denom(1/2*s12)*mt^4*mh^2*s13*s24 - 1/4*denom(1/2*s12)*mt^4*mh^2*
      s13*s14 + 1/4*denom(1/2*s12)*mt^4*mh^2*s13^2 + 3/4*denom(1/2*s12)*mt^4*
      mh^2*s12*s24 + 5/4*denom(1/2*s12)*mt^4*mh^2*s12*s23 + 3/4*denom(1/2*s12)
      *mt^4*mh^2*s12*s14 + 5/4*denom(1/2*s12)*mt^4*mh^2*s12*s13 + 1/2*denom(1/
      2*s12)*mt^4*mh^2*s12^2 - 1/4*denom(1/2*s12)*mt^4*mh^4*s12 + 1/2*denom(1/
      2*s12)*mt^6*s24^2 + 1/2*denom(1/2*s12)*mt^6*s23*s24 - denom(1/2*s12)*
      mt^6*s23^2 - 5/2*denom(1/2*s12)*mt^6*s14*s23 - 1/2*denom(1/2*s12)*mt^6*
      s14^2 + 5/2*denom(1/2*s12)*mt^6*s13*s24 - 1/2*denom(1/2*s12)*mt^6*s13*
      s14 + denom(1/2*s12)*mt^6*s13^2 + 5/4*denom(1/2*s12)*mt^6*s12*s24 + 3/4*
      denom(1/2*s12)*mt^6*s12*s23 + 3/4*denom(1/2*s12)*mt^6*s12*s14 + 5/4*
      denom(1/2*s12)*mt^6*s12*s13 + denom(1/2*s12)*mt^6*s12^2 - 1/4*denom(1/2*
      s12)*mt^6*mh^2*s24 + 1/4*denom(1/2*s12)*mt^6*mh^2*s23 + 1/4*denom(1/2*
      s12)*mt^6*mh^2*s14 - 1/4*denom(1/2*s12)*mt^6*mh^2*s13 - denom(1/2*s12)*
      mt^6*mh^2*s12 - denom(1/2*s12)*mt^8*s24 + denom(1/2*s12)*mt^8*s23 + 
      denom(1/2*s12)*mt^8*s14 - denom(1/2*s12)*mt^8*s13 + 1/8*denom(1/4*s12^2)
      *s13*s14^2*s23^3 - 1/8*denom(1/4*s12^2)*s13^3*s23*s24^2 - 1/8*denom(1/4*
      s12^2)*s12*s13*s14*s23^2*s24 - 1/8*denom(1/4*s12^2)*s12*s13*s14*s23^3 - 
      1/8*denom(1/4*s12^2)*s12*s13*s14^2*s23^2 - 1/8*denom(1/4*s12^2)*s12*
      s13^2*s23*s24^2 - 1/8*denom(1/4*s12^2)*s12*s13^2*s23^2*s24 - 1/8*denom(1/
      4*s12^2)*s12*s13^2*s14*s23*s24 - 1/8*denom(1/4*s12^2)*s12*s13^2*s14*
      s23^2 - 1/8*denom(1/4*s12^2)*s12*s13^3*s23*s24 - 1/8*denom(1/4*s12^2)*
      s12^2*s13*s14*s23^2 - 1/8*denom(1/4*s12^2)*s12^2*s13^2*s23*s24 + 1/8*
      denom(1/4*s12^2)*mh^2*s12*s13*s14*s23^2 + 1/8*denom(1/4*s12^2)*mh^2*s12*
      s13^2*s23*s24 - 1/8*denom(1/4*s12^2)*mt^2*s14^2*s23^3 - 1/4*denom(1/4*
      s12^2)*mt^2*s13*s14*s23^3 - 3/8*denom(1/4*s12^2)*mt^2*s13*s14^2*s23^2 + 
      3/8*denom(1/4*s12^2)*mt^2*s13^2*s23*s24^2 + 1/8*denom(1/4*s12^2)*mt^2*
      s13^3*s24^2 + 1/4*denom(1/4*s12^2)*mt^2*s13^3*s23*s24 + 1/8*denom(1/4*
      s12^2)*mt^2*s12*s14*s23^2*s24 + 1/8*denom(1/4*s12^2)*mt^2*s12*s14*s23^3
       + 1/8*denom(1/4*s12^2)*mt^2*s12*s14^2*s23^2 + 1/4*denom(1/4*s12^2)*mt^2
      *s12*s13*s23*s24^2 + 3/8*denom(1/4*s12^2)*mt^2*s12*s13*s23^2*s24 + 1/8*
      denom(1/4*s12^2)*mt^2*s12*s13*s23^3 + 1/2*denom(1/4*s12^2)*mt^2*s12*s13*
      s14*s23*s24 + 1/2*denom(1/4*s12^2)*mt^2*s12*s13*s14*s23^2 + 1/4*denom(1/
      4*s12^2)*mt^2*s12*s13*s14^2*s23 + 1/8*denom(1/4*s12^2)*mt^2*s12*s13^2*
      s24^2 + 1/2*denom(1/4*s12^2)*mt^2*s12*s13^2*s23*s24 + 1/4*denom(1/4*
      s12^2)*mt^2*s12*s13^2*s23^2 + 1/8*denom(1/4*s12^2)*mt^2*s12*s13^2*s14*
      s24 + 3/8*denom(1/4*s12^2)*mt^2*s12*s13^2*s14*s23 + 1/8*denom(1/4*s12^2)
      *mt^2*s12*s13^3*s24 + 1/8*denom(1/4*s12^2)*mt^2*s12*s13^3*s23 + 1/8*
      denom(1/4*s12^2)*mt^2*s12^2*s14*s23^2 + 1/4*denom(1/4*s12^2)*mt^2*s12^2*
      s13*s23*s24 + 1/8*denom(1/4*s12^2)*mt^2*s12^2*s13*s23^2 + 1/4*denom(1/4*
      s12^2)*mt^2*s12^2*s13*s14*s23 + 1/8*denom(1/4*s12^2)*mt^2*s12^2*s13^2*
      s24 + 1/8*denom(1/4*s12^2)*mt^2*s12^2*s13^2*s23 - 1/8*denom(1/4*s12^2)*
      mt^2*mh^2*s12*s14*s23^2 - 1/4*denom(1/4*s12^2)*mt^2*mh^2*s12*s13*s23*s24
       - 1/8*denom(1/4*s12^2)*mt^2*mh^2*s12*s13*s23^2 - 1/4*denom(1/4*s12^2)*
      mt^2*mh^2*s12*s13*s14*s23 - 1/8*denom(1/4*s12^2)*mt^2*mh^2*s12*s13^2*s24
       - 1/8*denom(1/4*s12^2)*mt^2*mh^2*s12*s13^2*s23 + 1/4*denom(1/4*s12^2)*
      mt^4*s14*s23^3 + 3/8*denom(1/4*s12^2)*mt^4*s14^2*s23^2 - 3/8*denom(1/4*
      s12^2)*mt^4*s13*s23*s24^2 + 1/8*denom(1/4*s12^2)*mt^4*s13*s23^3 + 3/4*
      denom(1/4*s12^2)*mt^4*s13*s14*s23^2 + 3/8*denom(1/4*s12^2)*mt^4*s13*
      s14^2*s23 - 3/8*denom(1/4*s12^2)*mt^4*s13^2*s24^2 - 3/4*denom(1/4*s12^2)
      *mt^4*s13^2*s23*s24 - 1/4*denom(1/4*s12^2)*mt^4*s13^3*s24 - 1/8*denom(1/
      4*s12^2)*mt^4*s13^3*s23 - 1/8*denom(1/4*s12^2)*mt^4*s12*s23*s24^2 - 1/4*
      denom(1/4*s12^2)*mt^4*s12*s23^2*s24 - 1/8*denom(1/4*s12^2)*mt^4*s12*
      s23^3 - 3/8*denom(1/4*s12^2)*mt^4*s12*s14*s23*s24 - 3/8*denom(1/4*s12^2)
      *mt^4*s12*s14*s23^2 - 1/4*denom(1/4*s12^2)*mt^4*s12*s14^2*s23 - 1/4*
      denom(1/4*s12^2)*mt^4*s12*s13*s24^2 - 7/8*denom(1/4*s12^2)*mt^4*s12*s13*
      s23*s24 - 5/8*denom(1/4*s12^2)*mt^4*s12*s13*s23^2 - 3/8*denom(1/4*s12^2)
      *mt^4*s12*s13*s14*s24 - 7/8*denom(1/4*s12^2)*mt^4*s12*s13*s14*s23 - 1/8*
      denom(1/4*s12^2)*mt^4*s12*s13*s14^2 - 3/8*denom(1/4*s12^2)*mt^4*s12*
      s13^2*s24 - 5/8*denom(1/4*s12^2)*mt^4*s12*s13^2*s23 - 1/4*denom(1/4*
      s12^2)*mt^4*s12*s13^2*s14 - 1/8*denom(1/4*s12^2)*mt^4*s12*s13^3 - 1/8*
      denom(1/4*s12^2)*mt^4*s12^2*s23*s24 - 1/8*denom(1/4*s12^2)*mt^4*s12^2*
      s23^2 - 1/4*denom(1/4*s12^2)*mt^4*s12^2*s14*s23 - 1/4*denom(1/4*s12^2)*
      mt^4*s12^2*s13*s24 - 1/2*denom(1/4*s12^2)*mt^4*s12^2*s13*s23 - 1/8*
      denom(1/4*s12^2)*mt^4*s12^2*s13*s14 - 1/8*denom(1/4*s12^2)*mt^4*s12^2*
      s13^2 + 1/8*denom(1/4*s12^2)*mt^4*mh^2*s12*s23*s24 + 1/8*denom(1/4*s12^2
      )*mt^4*mh^2*s12*s23^2 + 1/4*denom(1/4*s12^2)*mt^4*mh^2*s12*s14*s23 + 1/4
      *denom(1/4*s12^2)*mt^4*mh^2*s12*s13*s24 + 1/2*denom(1/4*s12^2)*mt^4*mh^2
      *s12*s13*s23 + 1/8*denom(1/4*s12^2)*mt^4*mh^2*s12*s13*s14 + 1/8*denom(1/
      4*s12^2)*mt^4*mh^2*s12*s13^2 + 1/8*denom(1/4*s12^2)*mt^6*s23*s24^2 - 1/8
      *denom(1/4*s12^2)*mt^6*s23^3 - 3/4*denom(1/4*s12^2)*mt^6*s14*s23^2 - 3/8
      *denom(1/4*s12^2)*mt^6*s14^2*s23 + 3/8*denom(1/4*s12^2)*mt^6*s13*s24^2
       + 3/4*denom(1/4*s12^2)*mt^6*s13*s23*s24 - 3/8*denom(1/4*s12^2)*mt^6*s13
      *s23^2 - 3/4*denom(1/4*s12^2)*mt^6*s13*s14*s23 - 1/8*denom(1/4*s12^2)*
      mt^6*s13*s14^2 + 3/4*denom(1/4*s12^2)*mt^6*s13^2*s24 + 3/8*denom(1/4*
      s12^2)*mt^6*s13^2*s23 + 1/8*denom(1/4*s12^2)*mt^6*s13^3 + 1/8*denom(1/4*
      s12^2)*mt^6*s12*s24^2 + 1/2*denom(1/4*s12^2)*mt^6*s12*s23*s24 + 3/8*
      denom(1/4*s12^2)*mt^6*s12*s23^2 + 1/4*denom(1/4*s12^2)*mt^6*s12*s14*s24
       + 1/2*denom(1/4*s12^2)*mt^6*s12*s14*s23 + 1/8*denom(1/4*s12^2)*mt^6*s12
      *s14^2 + 1/2*denom(1/4*s12^2)*mt^6*s12*s13*s24 + 3/4*denom(1/4*s12^2)*
      mt^6*s12*s13*s23 + 1/2*denom(1/4*s12^2)*mt^6*s12*s13*s14 + 3/8*denom(1/4
      *s12^2)*mt^6*s12*s13^2 + 1/8*denom(1/4*s12^2)*mt^6*s12^2*s24 + 3/8*
      denom(1/4*s12^2)*mt^6*s12^2*s23 + 1/8*denom(1/4*s12^2)*mt^6*s12^2*s14 + 
      3/8*denom(1/4*s12^2)*mt^6*s12^2*s13 - 1/8*denom(1/4*s12^2)*mt^6*mh^2*s12
      *s24 - 3/8*denom(1/4*s12^2)*mt^6*mh^2*s12*s23 - 1/8*denom(1/4*s12^2)*
      mt^6*mh^2*s12*s14 - 3/8*denom(1/4*s12^2)*mt^6*mh^2*s12*s13 - 1/8*denom(1/
      4*s12^2)*mt^8*s24^2 - 1/4*denom(1/4*s12^2)*mt^8*s23*s24 + 3/8*denom(1/4*
      s12^2)*mt^8*s23^2 + 3/4*denom(1/4*s12^2)*mt^8*s14*s23 + 1/8*denom(1/4*
      s12^2)*mt^8*s14^2 - 3/4*denom(1/4*s12^2)*mt^8*s13*s24 + 1/4*denom(1/4*
      s12^2)*mt^8*s13*s14 - 3/8*denom(1/4*s12^2)*mt^8*s13^2 - 1/4*denom(1/4*
      s12^2)*mt^8*s12*s24 - 1/4*denom(1/4*s12^2)*mt^8*s12*s23 - 1/4*denom(1/4*
      s12^2)*mt^8*s12*s14 - 1/4*denom(1/4*s12^2)*mt^8*s12*s13 - 1/4*denom(1/4*
      s12^2)*mt^8*s12^2 + 1/4*denom(1/4*s12^2)*mt^8*mh^2*s12 + 1/4*denom(1/4*
      s12^2)*mt^10*s24 - 1/4*denom(1/4*s12^2)*mt^10*s23 - 1/4*denom(1/4*s12^2)
      *mt^10*s14 + 1/4*denom(1/4*s12^2)*mt^10*s13;
 
 .sort
id KMatrix(1,16) =  1/4*s14*s23*s24^2 + 1/2*s14*s23^2*s24 + 1/4*s14*s23^3 + 1/
      2*s14^2*s23*s24 + 1/2*s14^2*s23^2 + 1/4*s14^3*s23 - 1/4*s13*s24^3 - 1/2*
      s13*s23*s24^2 - 1/4*s13*s23^2*s24 - 1/2*s13*s14*s24^2 + 1/2*s13*s14*
      s23^2 - 1/4*s13*s14^2*s24 + 1/2*s13*s14^2*s23 - 1/2*s13^2*s24^2 - 1/2*
      s13^2*s23*s24 - 1/2*s13^2*s14*s24 + 1/4*s13^2*s14*s23 - 1/4*s13^3*s24 - 
      1/4*s12*s24^3 - 3/4*s12*s23*s24^2 - 3/4*s12*s23^2*s24 - 1/4*s12*s23^3 - 
      3/4*s12*s14*s24^2 - s12*s14*s23*s24 - 1/4*s12*s14*s23^2 - 3/4*s12*s14^2*
      s24 - 1/4*s12*s14^2*s23 - 1/4*s12*s14^3 - 5/4*s12*s13*s24^2 - 2*s12*s13*
      s23*s24 - 3/4*s12*s13*s23^2 - 2*s12*s13*s14*s24 - s12*s13*s14*s23 - 3/4*
      s12*s13*s14^2 - 5/4*s12*s13^2*s24 - 3/4*s12*s13^2*s23 - 3/4*s12*s13^2*
      s14 - 1/4*s12*s13^3 - 3/4*s12^2*s24^2 - 3/2*s12^2*s23*s24 - 3/4*s12^2*
      s23^2 - 3/2*s12^2*s14*s24 - 5/4*s12^2*s14*s23 - 3/4*s12^2*s14^2 - 7/4*
      s12^2*s13*s24 - 3/2*s12^2*s13*s23 - 3/2*s12^2*s13*s14 - 3/4*s12^2*s13^2
       - 3/4*s12^3*s24 - 3/4*s12^3*s23 - 3/4*s12^3*s14 - 3/4*s12^3*s13 - 1/4*
      s12^4 - 1/2*mh^2*s14*s23*s24 - 1/2*mh^2*s14*s23^2 - 1/2*mh^2*s14^2*s23
       + 1/2*mh^2*s13*s24^2 + 1/2*mh^2*s13*s23*s24 + 1/2*mh^2*s13*s14*s24 - 1/
      2*mh^2*s13*s14*s23 + 1/2*mh^2*s13^2*s24 + 3/4*mh^2*s12*s24^2 + 3/2*mh^2*
      s12*s23*s24 + 3/4*mh^2*s12*s23^2 + 3/2*mh^2*s12*s14*s24 + mh^2*s12*s14*
      s23 + 3/4*mh^2*s12*s14^2 + 2*mh^2*s12*s13*s24 + 3/2*mh^2*s12*s13*s23 + 3/
      2*mh^2*s12*s13*s14 + 3/4*mh^2*s12*s13^2 + 3/2*mh^2*s12^2*s24 + 3/2*mh^2*
      s12^2*s23 + 3/2*mh^2*s12^2*s14 + 3/2*mh^2*s12^2*s13 + 3/4*mh^2*s12^3 + 1/
      4*mh^4*s14*s23 - 1/4*mh^4*s13*s24 - 3/4*mh^4*s12*s24 - 3/4*mh^4*s12*s23
       - 3/4*mh^4*s12*s14 - 3/4*mh^4*s12*s13 - 3/4*mh^4*s12^2 + 1/4*mh^6*s12
       + 1/4*mt^2*s24^3 + 1/4*mt^2*s23*s24^2 - 1/4*mt^2*s23^2*s24 - 1/4*mt^2*
      s23^3 + 1/4*mt^2*s14*s24^2 - 3/2*mt^2*s14*s23*s24 - 7/4*mt^2*s14*s23^2
       - 1/4*mt^2*s14^2*s24 - 7/4*mt^2*s14^2*s23 - 1/4*mt^2*s14^3 + 7/4*mt^2*
      s13*s24^2 + 3/2*mt^2*s13*s23*s24 - 1/4*mt^2*s13*s23^2 + 3/2*mt^2*s13*s14
      *s24 - 3/2*mt^2*s13*s14*s23 - 1/4*mt^2*s13*s14^2 + 7/4*mt^2*s13^2*s24 + 
      1/4*mt^2*s13^2*s23 + 1/4*mt^2*s13^2*s14 + 1/4*mt^2*s13^3 + 3/2*mt^2*s12*
      s24^2 + 2*mt^2*s12*s23*s24 + 1/2*mt^2*s12*s23^2 + 2*mt^2*s12*s14*s24 + 1/
      2*mt^2*s12*s14^2 + 4*mt^2*s12*s13*s24 + 2*mt^2*s12*s13*s23 + 2*mt^2*s12*
      s13*s14 + 3/2*mt^2*s12*s13^2 + 9/4*mt^2*s12^2*s24 + 7/4*mt^2*s12^2*s23
       + 7/4*mt^2*s12^2*s14 + 9/4*mt^2*s12^2*s13 + mt^2*s12^3 - 1/2*mt^2*mh^2*
      s24^2 + 1/2*mt^2*mh^2*s23^2 + 2*mt^2*mh^2*s14*s23 + 1/2*mt^2*mh^2*s14^2
       - 2*mt^2*mh^2*s13*s24 - 1/2*mt^2*mh^2*s13^2 - 5/2*mt^2*mh^2*s12*s24 - 3/
      2*mt^2*mh^2*s12*s23 - 3/2*mt^2*mh^2*s12*s14 - 5/2*mt^2*mh^2*s12*s13 - 2*
      mt^2*mh^2*s12^2 + 1/4*mt^2*mh^4*s24 - 1/4*mt^2*mh^4*s23 - 1/4*mt^2*mh^4*
      s14 + 1/4*mt^2*mh^4*s13 + mt^2*mh^4*s12 - mt^4*s24^2 + mt^4*s23^2 + 3*
      mt^4*s14*s23 + mt^4*s14^2 - 3*mt^4*s13*s24 - mt^4*s13^2 - 2*mt^4*s12*s24
       - 2*mt^4*s12*s13 - mt^4*s12^2 + mt^4*mh^2*s24 - mt^4*mh^2*s23 - mt^4*
      mh^2*s14 + mt^4*mh^2*s13 + mt^4*mh^2*s12 + mt^6*s24 - mt^6*s23 - mt^6*
      s14 + mt^6*s13 + 1/4*denom(1/2*s12)*s14^2*s23^2*s24 + 1/4*denom(1/2*s12)
      *s14^2*s23^3 + 1/4*denom(1/2*s12)*s14^3*s23^2 + 1/4*denom(1/2*s12)*s13*
      s14^2*s23^2 - 1/4*denom(1/2*s12)*s13^2*s24^3 - 1/4*denom(1/2*s12)*s13^2*
      s23*s24^2 - 1/4*denom(1/2*s12)*s13^2*s14*s24^2 - 1/4*denom(1/2*s12)*
      s13^3*s24^2 - 1/4*denom(1/2*s12)*s12*s14*s23*s24^2 - 1/2*denom(1/2*s12)*
      s12*s14*s23^2*s24 - 1/4*denom(1/2*s12)*s12*s14*s23^3 - 1/2*denom(1/2*s12
      )*s12*s14^2*s23*s24 - 1/4*denom(1/2*s12)*s12*s14^2*s23^2 - 1/4*denom(1/2
      *s12)*s12*s14^3*s23 - 1/4*denom(1/2*s12)*s12*s13*s24^3 - 1/2*denom(1/2*
      s12)*s12*s13*s23*s24^2 - 1/4*denom(1/2*s12)*s12*s13*s23^2*s24 - 1/2*
      denom(1/2*s12)*s12*s13*s14*s24^2 - denom(1/2*s12)*s12*s13*s14*s23*s24 - 
      1/2*denom(1/2*s12)*s12*s13*s14*s23^2 - 1/4*denom(1/2*s12)*s12*s13*s14^2*
      s24 - 1/2*denom(1/2*s12)*s12*s13*s14^2*s23 - 3/4*denom(1/2*s12)*s12*
      s13^2*s24^2 - 1/2*denom(1/2*s12)*s12*s13^2*s23*s24 - 1/2*denom(1/2*s12)*
      s12*s13^2*s14*s24 - 1/4*denom(1/2*s12)*s12*s13^2*s14*s23 - 1/4*denom(1/2
      *s12)*s12*s13^3*s24 - 1/2*denom(1/2*s12)*s12^2*s14*s23*s24 - 1/2*denom(1/
      2*s12)*s12^2*s14*s23^2 - 1/2*denom(1/2*s12)*s12^2*s14^2*s23 - 1/2*denom(
      1/2*s12)*s12^2*s13*s24^2 - 1/2*denom(1/2*s12)*s12^2*s13*s23*s24 - 1/2*
      denom(1/2*s12)*s12^2*s13*s14*s24 - 1/2*denom(1/2*s12)*s12^2*s13*s14*s23
       - 1/2*denom(1/2*s12)*s12^2*s13^2*s24 - 1/4*denom(1/2*s12)*s12^3*s14*s23
       - 1/4*denom(1/2*s12)*s12^3*s13*s24 - 1/4*denom(1/2*s12)*mh^2*s14^2*
      s23^2 + 1/4*denom(1/2*s12)*mh^2*s13^2*s24^2 + 1/2*denom(1/2*s12)*mh^2*
      s12*s14*s23*s24 + 1/2*denom(1/2*s12)*mh^2*s12*s14*s23^2 + 1/2*denom(1/2*
      s12)*mh^2*s12*s14^2*s23 + 1/2*denom(1/2*s12)*mh^2*s12*s13*s24^2 + 1/2*
      denom(1/2*s12)*mh^2*s12*s13*s23*s24 + 1/2*denom(1/2*s12)*mh^2*s12*s13*
      s14*s24 + 1/2*denom(1/2*s12)*mh^2*s12*s13*s14*s23 + 1/2*denom(1/2*s12)*
      mh^2*s12*s13^2*s24 + 1/2*denom(1/2*s12)*mh^2*s12^2*s14*s23 + 1/2*denom(1/
      2*s12)*mh^2*s12^2*s13*s24 - 1/4*denom(1/2*s12)*mh^4*s12*s14*s23 - 1/4*
      denom(1/2*s12)*mh^4*s12*s13*s24 - 1/2*denom(1/2*s12)*mt^2*s14*s23^2*s24
       - 1/2*denom(1/2*s12)*mt^2*s14*s23^3 - 1/2*denom(1/2*s12)*mt^2*s14^2*s23
      *s24 - 3/2*denom(1/2*s12)*mt^2*s14^2*s23^2 - 1/2*denom(1/2*s12)*mt^2*
      s14^3*s23 + 1/2*denom(1/2*s12)*mt^2*s13*s24^3 + 1/2*denom(1/2*s12)*mt^2*
      s13*s23*s24^2 + 1/2*denom(1/2*s12)*mt^2*s13*s14*s24^2 - 1/2*denom(1/2*
      s12)*mt^2*s13*s14*s23^2 - 1/2*denom(1/2*s12)*mt^2*s13*s14^2*s23 + 3/2*
      denom(1/2*s12)*mt^2*s13^2*s24^2 + 1/2*denom(1/2*s12)*mt^2*s13^2*s23*s24
       + 1/2*denom(1/2*s12)*mt^2*s13^2*s14*s24 + 1/2*denom(1/2*s12)*mt^2*s13^3
      *s24 + 1/4*denom(1/2*s12)*mt^2*s12*s24^3 + 3/4*denom(1/2*s12)*mt^2*s12*
      s23*s24^2 + 3/4*denom(1/2*s12)*mt^2*s12*s23^2*s24 + 1/4*denom(1/2*s12)*
      mt^2*s12*s23^3 + 3/4*denom(1/2*s12)*mt^2*s12*s14*s24^2 + 2*denom(1/2*s12
      )*mt^2*s12*s14*s23*s24 + 3/4*denom(1/2*s12)*mt^2*s12*s14*s23^2 + 3/4*
      denom(1/2*s12)*mt^2*s12*s14^2*s24 + 3/4*denom(1/2*s12)*mt^2*s12*s14^2*
      s23 + 1/4*denom(1/2*s12)*mt^2*s12*s14^3 + 7/4*denom(1/2*s12)*mt^2*s12*
      s13*s24^2 + 2*denom(1/2*s12)*mt^2*s12*s13*s23*s24 + 3/4*denom(1/2*s12)*
      mt^2*s12*s13*s23^2 + 2*denom(1/2*s12)*mt^2*s12*s13*s14*s24 + 2*denom(1/2
      *s12)*mt^2*s12*s13*s14*s23 + 3/4*denom(1/2*s12)*mt^2*s12*s13*s14^2 + 7/4
      *denom(1/2*s12)*mt^2*s12*s13^2*s24 + 3/4*denom(1/2*s12)*mt^2*s12*s13^2*
      s23 + 3/4*denom(1/2*s12)*mt^2*s12*s13^2*s14 + 1/4*denom(1/2*s12)*mt^2*
      s12*s13^3 + 1/2*denom(1/2*s12)*mt^2*s12^2*s24^2 + denom(1/2*s12)*mt^2*
      s12^2*s23*s24 + 1/2*denom(1/2*s12)*mt^2*s12^2*s23^2 + denom(1/2*s12)*
      mt^2*s12^2*s14*s24 + 3/2*denom(1/2*s12)*mt^2*s12^2*s14*s23 + 1/2*denom(1/
      2*s12)*mt^2*s12^2*s14^2 + 3/2*denom(1/2*s12)*mt^2*s12^2*s13*s24 + denom(
      1/2*s12)*mt^2*s12^2*s13*s23 + denom(1/2*s12)*mt^2*s12^2*s13*s14 + 1/2*
      denom(1/2*s12)*mt^2*s12^2*s13^2 + 1/4*denom(1/2*s12)*mt^2*s12^3*s24 + 1/
      4*denom(1/2*s12)*mt^2*s12^3*s23 + 1/4*denom(1/2*s12)*mt^2*s12^3*s14 + 1/
      4*denom(1/2*s12)*mt^2*s12^3*s13 + 1/2*denom(1/2*s12)*mt^2*mh^2*s14*s23^2
       + 1/2*denom(1/2*s12)*mt^2*mh^2*s14^2*s23 - 1/2*denom(1/2*s12)*mt^2*mh^2
      *s13*s24^2 - 1/2*denom(1/2*s12)*mt^2*mh^2*s13^2*s24 - 1/2*denom(1/2*s12)
      *mt^2*mh^2*s12*s24^2 - denom(1/2*s12)*mt^2*mh^2*s12*s23*s24 - 1/2*denom(
      1/2*s12)*mt^2*mh^2*s12*s23^2 - denom(1/2*s12)*mt^2*mh^2*s12*s14*s24 - 3/
      2*denom(1/2*s12)*mt^2*mh^2*s12*s14*s23 - 1/2*denom(1/2*s12)*mt^2*mh^2*
      s12*s14^2 - 3/2*denom(1/2*s12)*mt^2*mh^2*s12*s13*s24 - denom(1/2*s12)*
      mt^2*mh^2*s12*s13*s23 - denom(1/2*s12)*mt^2*mh^2*s12*s13*s14 - 1/2*
      denom(1/2*s12)*mt^2*mh^2*s12*s13^2 - 1/2*denom(1/2*s12)*mt^2*mh^2*s12^2*
      s24 - 1/2*denom(1/2*s12)*mt^2*mh^2*s12^2*s23 - 1/2*denom(1/2*s12)*mt^2*
      mh^2*s12^2*s14 - 1/2*denom(1/2*s12)*mt^2*mh^2*s12^2*s13 + 1/4*denom(1/2*
      s12)*mt^2*mh^4*s12*s24 + 1/4*denom(1/2*s12)*mt^2*mh^4*s12*s23 + 1/4*
      denom(1/2*s12)*mt^2*mh^4*s12*s14 + 1/4*denom(1/2*s12)*mt^2*mh^4*s12*s13
       - 1/4*denom(1/2*s12)*mt^4*s24^3 - 1/4*denom(1/2*s12)*mt^4*s23*s24^2 + 1/
      4*denom(1/2*s12)*mt^4*s23^2*s24 + 1/4*denom(1/2*s12)*mt^4*s23^3 - 1/4*
      denom(1/2*s12)*mt^4*s14*s24^2 + denom(1/2*s12)*mt^4*s14*s23*s24 + 9/4*
      denom(1/2*s12)*mt^4*s14*s23^2 + 1/4*denom(1/2*s12)*mt^4*s14^2*s24 + 9/4*
      denom(1/2*s12)*mt^4*s14^2*s23 + 1/4*denom(1/2*s12)*mt^4*s14^3 - 9/4*
      denom(1/2*s12)*mt^4*s13*s24^2 - denom(1/2*s12)*mt^4*s13*s23*s24 + 1/4*
      denom(1/2*s12)*mt^4*s13*s23^2 - denom(1/2*s12)*mt^4*s13*s14*s24 + denom(
      1/2*s12)*mt^4*s13*s14*s23 + 1/4*denom(1/2*s12)*mt^4*s13*s14^2 - 9/4*
      denom(1/2*s12)*mt^4*s13^2*s24 - 1/4*denom(1/2*s12)*mt^4*s13^2*s23 - 1/4*
      denom(1/2*s12)*mt^4*s13^2*s14 - 1/4*denom(1/2*s12)*mt^4*s13^3 - 5/4*
      denom(1/2*s12)*mt^4*s12*s24^2 - 2*denom(1/2*s12)*mt^4*s12*s23*s24 - 3/4*
      denom(1/2*s12)*mt^4*s12*s23^2 - 2*denom(1/2*s12)*mt^4*s12*s14*s24 - 
      denom(1/2*s12)*mt^4*s12*s14*s23 - 3/4*denom(1/2*s12)*mt^4*s12*s14^2 - 3*
      denom(1/2*s12)*mt^4*s12*s13*s24 - 2*denom(1/2*s12)*mt^4*s12*s13*s23 - 2*
      denom(1/2*s12)*mt^4*s12*s13*s14 - 5/4*denom(1/2*s12)*mt^4*s12*s13^2 - 3/
      2*denom(1/2*s12)*mt^4*s12^2*s24 - 3/2*denom(1/2*s12)*mt^4*s12^2*s23 - 3/
      2*denom(1/2*s12)*mt^4*s12^2*s14 - 3/2*denom(1/2*s12)*mt^4*s12^2*s13 - 1/
      2*denom(1/2*s12)*mt^4*s12^3 + 1/4*denom(1/2*s12)*mt^4*mh^2*s24^2 - 1/4*
      denom(1/2*s12)*mt^4*mh^2*s23^2 - denom(1/2*s12)*mt^4*mh^2*s14*s23 - 1/4*
      denom(1/2*s12)*mt^4*mh^2*s14^2 + denom(1/2*s12)*mt^4*mh^2*s13*s24 + 1/4*
      denom(1/2*s12)*mt^4*mh^2*s13^2 + 3/2*denom(1/2*s12)*mt^4*mh^2*s12*s24 + 
      3/2*denom(1/2*s12)*mt^4*mh^2*s12*s23 + 3/2*denom(1/2*s12)*mt^4*mh^2*s12*
      s14 + 3/2*denom(1/2*s12)*mt^4*mh^2*s12*s13 + denom(1/2*s12)*mt^4*mh^2*
      s12^2 - 1/2*denom(1/2*s12)*mt^4*mh^4*s12 + denom(1/2*s12)*mt^6*s24^2 - 
      denom(1/2*s12)*mt^6*s23^2 - 3*denom(1/2*s12)*mt^6*s14*s23 - denom(1/2*
      s12)*mt^6*s14^2 + 3*denom(1/2*s12)*mt^6*s13*s24 + denom(1/2*s12)*mt^6*
      s13^2 + 3/2*denom(1/2*s12)*mt^6*s12*s24 + 1/2*denom(1/2*s12)*mt^6*s12*
      s23 + 1/2*denom(1/2*s12)*mt^6*s12*s14 + 3/2*denom(1/2*s12)*mt^6*s12*s13
       + denom(1/2*s12)*mt^6*s12^2 - 1/2*denom(1/2*s12)*mt^6*mh^2*s24 + 1/2*
      denom(1/2*s12)*mt^6*mh^2*s23 + 1/2*denom(1/2*s12)*mt^6*mh^2*s14 - 1/2*
      denom(1/2*s12)*mt^6*mh^2*s13 - denom(1/2*s12)*mt^6*mh^2*s12 - denom(1/2*
      s12)*mt^8*s24 + denom(1/2*s12)*mt^8*s23 + denom(1/2*s12)*mt^8*s14 - 
      denom(1/2*s12)*mt^8*s13 + 1/16*denom(1/4*s12^2)*s14^3*s23^3 + 1/16*
      denom(1/4*s12^2)*s13*s14^2*s23^2*s24 - 1/16*denom(1/4*s12^2)*s13^2*s14*
      s23*s24^2 - 1/16*denom(1/4*s12^2)*s13^3*s24^3 - 1/16*denom(1/4*s12^2)*
      s12*s14^2*s23^2*s24 - 1/16*denom(1/4*s12^2)*s12*s14^2*s23^3 - 1/16*
      denom(1/4*s12^2)*s12*s14^3*s23^2 - 1/8*denom(1/4*s12^2)*s12*s13*s14*s23*
      s24^2 - 1/8*denom(1/4*s12^2)*s12*s13*s14*s23^2*s24 - 1/8*denom(1/4*s12^2
      )*s12*s13*s14^2*s23*s24 - 1/16*denom(1/4*s12^2)*s12*s13*s14^2*s23^2 - 1/
      16*denom(1/4*s12^2)*s12*s13^2*s24^3 - 1/16*denom(1/4*s12^2)*s12*s13^2*
      s23*s24^2 - 1/16*denom(1/4*s12^2)*s12*s13^2*s14*s24^2 - 1/8*denom(1/4*
      s12^2)*s12*s13^2*s14*s23*s24 - 1/16*denom(1/4*s12^2)*s12*s13^3*s24^2 - 1/
      16*denom(1/4*s12^2)*s12^2*s14^2*s23^2 - 1/8*denom(1/4*s12^2)*s12^2*s13*
      s14*s23*s24 - 1/16*denom(1/4*s12^2)*s12^2*s13^2*s24^2 + 1/16*denom(1/4*
      s12^2)*mh^2*s12*s14^2*s23^2 + 1/8*denom(1/4*s12^2)*mh^2*s12*s13*s14*s23*
      s24 + 1/16*denom(1/4*s12^2)*mh^2*s12*s13^2*s24^2 - 1/16*denom(1/4*s12^2)
      *mt^2*s14^2*s23^2*s24 - 3/16*denom(1/4*s12^2)*mt^2*s14^2*s23^3 - 3/16*
      denom(1/4*s12^2)*mt^2*s14^3*s23^2 + 1/8*denom(1/4*s12^2)*mt^2*s13*s14*
      s23*s24^2 - 1/8*denom(1/4*s12^2)*mt^2*s13*s14*s23^2*s24 - 1/8*denom(1/4*
      s12^2)*mt^2*s13*s14^2*s23*s24 - 1/16*denom(1/4*s12^2)*mt^2*s13*s14^2*
      s23^2 + 3/16*denom(1/4*s12^2)*mt^2*s13^2*s24^3 + 1/16*denom(1/4*s12^2)*
      mt^2*s13^2*s23*s24^2 + 1/16*denom(1/4*s12^2)*mt^2*s13^2*s14*s24^2 + 1/8*
      denom(1/4*s12^2)*mt^2*s13^2*s14*s23*s24 + 3/16*denom(1/4*s12^2)*mt^2*
      s13^3*s24^2 + 1/8*denom(1/4*s12^2)*mt^2*s12*s14*s23*s24^2 + 1/4*denom(1/
      4*s12^2)*mt^2*s12*s14*s23^2*s24 + 1/8*denom(1/4*s12^2)*mt^2*s12*s14*
      s23^3 + 1/4*denom(1/4*s12^2)*mt^2*s12*s14^2*s23*s24 + 1/4*denom(1/4*
      s12^2)*mt^2*s12*s14^2*s23^2 + 1/8*denom(1/4*s12^2)*mt^2*s12*s14^3*s23 + 
      1/8*denom(1/4*s12^2)*mt^2*s12*s13*s24^3 + 1/4*denom(1/4*s12^2)*mt^2*s12*
      s13*s23*s24^2 + 1/8*denom(1/4*s12^2)*mt^2*s12*s13*s23^2*s24 + 1/4*denom(
      1/4*s12^2)*mt^2*s12*s13*s14*s24^2 + 1/2*denom(1/4*s12^2)*mt^2*s12*s13*
      s14*s23*s24 + 1/4*denom(1/4*s12^2)*mt^2*s12*s13*s14*s23^2 + 1/8*denom(1/
      4*s12^2)*mt^2*s12*s13*s14^2*s24 + 1/4*denom(1/4*s12^2)*mt^2*s12*s13*
      s14^2*s23 + 1/4*denom(1/4*s12^2)*mt^2*s12*s13^2*s24^2 + 1/4*denom(1/4*
      s12^2)*mt^2*s12*s13^2*s23*s24 + 1/4*denom(1/4*s12^2)*mt^2*s12*s13^2*s14*
      s24 + 1/8*denom(1/4*s12^2)*mt^2*s12*s13^2*s14*s23 + 1/8*denom(1/4*s12^2)
      *mt^2*s12*s13^3*s24 + 1/8*denom(1/4*s12^2)*mt^2*s12^2*s14*s23*s24 + 1/8*
      denom(1/4*s12^2)*mt^2*s12^2*s14*s23^2 + 1/8*denom(1/4*s12^2)*mt^2*s12^2*
      s14^2*s23 + 1/8*denom(1/4*s12^2)*mt^2*s12^2*s13*s24^2 + 1/8*denom(1/4*
      s12^2)*mt^2*s12^2*s13*s23*s24 + 1/8*denom(1/4*s12^2)*mt^2*s12^2*s13*s14*
      s24 + 1/8*denom(1/4*s12^2)*mt^2*s12^2*s13*s14*s23 + 1/8*denom(1/4*s12^2)
      *mt^2*s12^2*s13^2*s24 - 1/8*denom(1/4*s12^2)*mt^2*mh^2*s12*s14*s23*s24
       - 1/8*denom(1/4*s12^2)*mt^2*mh^2*s12*s14*s23^2 - 1/8*denom(1/4*s12^2)*
      mt^2*mh^2*s12*s14^2*s23 - 1/8*denom(1/4*s12^2)*mt^2*mh^2*s12*s13*s24^2
       - 1/8*denom(1/4*s12^2)*mt^2*mh^2*s12*s13*s23*s24 - 1/8*denom(1/4*s12^2)
      *mt^2*mh^2*s12*s13*s14*s24 - 1/8*denom(1/4*s12^2)*mt^2*mh^2*s12*s13*s14*
      s23 - 1/8*denom(1/4*s12^2)*mt^2*mh^2*s12*s13^2*s24 - 1/16*denom(1/4*
      s12^2)*mt^4*s14*s23*s24^2 + 1/8*denom(1/4*s12^2)*mt^4*s14*s23^2*s24 + 3/
      16*denom(1/4*s12^2)*mt^4*s14*s23^3 + 1/8*denom(1/4*s12^2)*mt^4*s14^2*s23
      *s24 + 5/8*denom(1/4*s12^2)*mt^4*s14^2*s23^2 + 3/16*denom(1/4*s12^2)*
      mt^4*s14^3*s23 - 3/16*denom(1/4*s12^2)*mt^4*s13*s24^3 - 1/8*denom(1/4*
      s12^2)*mt^4*s13*s23*s24^2 + 1/16*denom(1/4*s12^2)*mt^4*s13*s23^2*s24 - 1/
      8*denom(1/4*s12^2)*mt^4*s13*s14*s24^2 + 1/8*denom(1/4*s12^2)*mt^4*s13*
      s14*s23^2 + 1/16*denom(1/4*s12^2)*mt^4*s13*s14^2*s24 + 1/8*denom(1/4*
      s12^2)*mt^4*s13*s14^2*s23 - 5/8*denom(1/4*s12^2)*mt^4*s13^2*s24^2 - 1/8*
      denom(1/4*s12^2)*mt^4*s13^2*s23*s24 - 1/8*denom(1/4*s12^2)*mt^4*s13^2*
      s14*s24 - 1/16*denom(1/4*s12^2)*mt^4*s13^2*s14*s23 - 3/16*denom(1/4*
      s12^2)*mt^4*s13^3*s24 - 1/16*denom(1/4*s12^2)*mt^4*s12*s24^3 - 3/16*
      denom(1/4*s12^2)*mt^4*s12*s23*s24^2 - 3/16*denom(1/4*s12^2)*mt^4*s12*
      s23^2*s24 - 1/16*denom(1/4*s12^2)*mt^4*s12*s23^3 - 3/16*denom(1/4*s12^2)
      *mt^4*s12*s14*s24^2 - 5/8*denom(1/4*s12^2)*mt^4*s12*s14*s23*s24 - 7/16*
      denom(1/4*s12^2)*mt^4*s12*s14*s23^2 - 3/16*denom(1/4*s12^2)*mt^4*s12*
      s14^2*s24 - 7/16*denom(1/4*s12^2)*mt^4*s12*s14^2*s23 - 1/16*denom(1/4*
      s12^2)*mt^4*s12*s14^3 - 7/16*denom(1/4*s12^2)*mt^4*s12*s13*s24^2 - 5/8*
      denom(1/4*s12^2)*mt^4*s12*s13*s23*s24 - 3/16*denom(1/4*s12^2)*mt^4*s12*
      s13*s23^2 - 5/8*denom(1/4*s12^2)*mt^4*s12*s13*s14*s24 - 5/8*denom(1/4*
      s12^2)*mt^4*s12*s13*s14*s23 - 3/16*denom(1/4*s12^2)*mt^4*s12*s13*s14^2
       - 7/16*denom(1/4*s12^2)*mt^4*s12*s13^2*s24 - 3/16*denom(1/4*s12^2)*mt^4
      *s12*s13^2*s23 - 3/16*denom(1/4*s12^2)*mt^4*s12*s13^2*s14 - 1/16*denom(1/
      4*s12^2)*mt^4*s12*s13^3 - 1/16*denom(1/4*s12^2)*mt^4*s12^2*s24^2 - 1/8*
      denom(1/4*s12^2)*mt^4*s12^2*s23*s24 - 1/16*denom(1/4*s12^2)*mt^4*s12^2*
      s23^2 - 1/8*denom(1/4*s12^2)*mt^4*s12^2*s14*s24 - 3/8*denom(1/4*s12^2)*
      mt^4*s12^2*s14*s23 - 1/16*denom(1/4*s12^2)*mt^4*s12^2*s14^2 - 3/8*denom(
      1/4*s12^2)*mt^4*s12^2*s13*s24 - 1/8*denom(1/4*s12^2)*mt^4*s12^2*s13*s23
       - 1/8*denom(1/4*s12^2)*mt^4*s12^2*s13*s14 - 1/16*denom(1/4*s12^2)*mt^4*
      s12^2*s13^2 + 1/16*denom(1/4*s12^2)*mt^4*mh^2*s12*s24^2 + 1/8*denom(1/4*
      s12^2)*mt^4*mh^2*s12*s23*s24 + 1/16*denom(1/4*s12^2)*mt^4*mh^2*s12*s23^2
       + 1/8*denom(1/4*s12^2)*mt^4*mh^2*s12*s14*s24 + 3/8*denom(1/4*s12^2)*
      mt^4*mh^2*s12*s14*s23 + 1/16*denom(1/4*s12^2)*mt^4*mh^2*s12*s14^2 + 3/8*
      denom(1/4*s12^2)*mt^4*mh^2*s12*s13*s24 + 1/8*denom(1/4*s12^2)*mt^4*mh^2*
      s12*s13*s23 + 1/8*denom(1/4*s12^2)*mt^4*mh^2*s12*s13*s14 + 1/16*denom(1/
      4*s12^2)*mt^4*mh^2*s12*s13^2 + 1/16*denom(1/4*s12^2)*mt^6*s24^3 + 1/16*
      denom(1/4*s12^2)*mt^6*s23*s24^2 - 1/16*denom(1/4*s12^2)*mt^6*s23^2*s24
       - 1/16*denom(1/4*s12^2)*mt^6*s23^3 + 1/16*denom(1/4*s12^2)*mt^6*s14*
      s24^2 - 1/8*denom(1/4*s12^2)*mt^6*s14*s23*s24 - 11/16*denom(1/4*s12^2)*
      mt^6*s14*s23^2 - 1/16*denom(1/4*s12^2)*mt^6*s14^2*s24 - 11/16*denom(1/4*
      s12^2)*mt^6*s14^2*s23 - 1/16*denom(1/4*s12^2)*mt^6*s14^3 + 11/16*denom(1/
      4*s12^2)*mt^6*s13*s24^2 + 1/8*denom(1/4*s12^2)*mt^6*s13*s23*s24 - 1/16*
      denom(1/4*s12^2)*mt^6*s13*s23^2 + 1/8*denom(1/4*s12^2)*mt^6*s13*s14*s24
       - 1/8*denom(1/4*s12^2)*mt^6*s13*s14*s23 - 1/16*denom(1/4*s12^2)*mt^6*
      s13*s14^2 + 11/16*denom(1/4*s12^2)*mt^6*s13^2*s24 + 1/16*denom(1/4*s12^2
      )*mt^6*s13^2*s23 + 1/16*denom(1/4*s12^2)*mt^6*s13^2*s14 + 1/16*denom(1/4
      *s12^2)*mt^6*s13^3 + 1/4*denom(1/4*s12^2)*mt^6*s12*s24^2 + 1/2*denom(1/4
      *s12^2)*mt^6*s12*s23*s24 + 1/4*denom(1/4*s12^2)*mt^6*s12*s23^2 + 1/2*
      denom(1/4*s12^2)*mt^6*s12*s14*s24 + 1/2*denom(1/4*s12^2)*mt^6*s12*s14*
      s23 + 1/4*denom(1/4*s12^2)*mt^6*s12*s14^2 + 1/2*denom(1/4*s12^2)*mt^6*
      s12*s13*s24 + 1/2*denom(1/4*s12^2)*mt^6*s12*s13*s23 + 1/2*denom(1/4*
      s12^2)*mt^6*s12*s13*s14 + 1/4*denom(1/4*s12^2)*mt^6*s12*s13^2 + 1/4*
      denom(1/4*s12^2)*mt^6*s12^2*s24 + 1/4*denom(1/4*s12^2)*mt^6*s12^2*s23 + 
      1/4*denom(1/4*s12^2)*mt^6*s12^2*s14 + 1/4*denom(1/4*s12^2)*mt^6*s12^2*
      s13 - 1/4*denom(1/4*s12^2)*mt^6*mh^2*s12*s24 - 1/4*denom(1/4*s12^2)*mt^6
      *mh^2*s12*s23 - 1/4*denom(1/4*s12^2)*mt^6*mh^2*s12*s14 - 1/4*denom(1/4*
      s12^2)*mt^6*mh^2*s12*s13 - 1/4*denom(1/4*s12^2)*mt^8*s24^2 + 1/4*denom(1/
      4*s12^2)*mt^8*s23^2 + 3/4*denom(1/4*s12^2)*mt^8*s14*s23 + 1/4*denom(1/4*
      s12^2)*mt^8*s14^2 - 3/4*denom(1/4*s12^2)*mt^8*s13*s24 - 1/4*denom(1/4*
      s12^2)*mt^8*s13^2 - 1/4*denom(1/4*s12^2)*mt^8*s12*s24 - 1/4*denom(1/4*
      s12^2)*mt^8*s12*s23 - 1/4*denom(1/4*s12^2)*mt^8*s12*s14 - 1/4*denom(1/4*
      s12^2)*mt^8*s12*s13 - 1/4*denom(1/4*s12^2)*mt^8*s12^2 + 1/4*denom(1/4*
      s12^2)*mt^8*mh^2*s12 + 1/4*denom(1/4*s12^2)*mt^10*s24 - 1/4*denom(1/4*
      s12^2)*mt^10*s23 - 1/4*denom(1/4*s12^2)*mt^10*s14 + 1/4*denom(1/4*s12^2)
      *mt^10*s13;
 
 .sort
id KMatrix(1,17) =   - 2*mt^2*s24 - 2*mt^2*s23 - 2*mt^2*s14 - 2*mt^2*s13 - 2*
      mt^2*s12 + 2*mt^2*mh^2 + 2*denom(1/2*s12)*s13*s23*s24 + 2*denom(1/2*s12)
      *s13*s23^2 + 2*denom(1/2*s12)*s13*s14*s23 + 2*denom(1/2*s12)*s13^2*s23
       + 2*denom(1/2*s12)*s12*s13*s23 - 2*denom(1/2*s12)*mh^2*s13*s23 - 2*
      denom(1/2*s12)*mt^2*s23*s24 - 2*denom(1/2*s12)*mt^2*s23^2 - 2*denom(1/2*
      s12)*mt^2*s14*s23 - 2*denom(1/2*s12)*mt^2*s13*s24 - 4*denom(1/2*s12)*
      mt^2*s13*s23 - 2*denom(1/2*s12)*mt^2*s13*s14 - 2*denom(1/2*s12)*mt^2*
      s13^2 - 2*denom(1/2*s12)*mt^2*s12*s23 - 2*denom(1/2*s12)*mt^2*s12*s13 + 
      2*denom(1/2*s12)*mt^2*mh^2*s23 + 2*denom(1/2*s12)*mt^2*mh^2*s13 + 2*
      denom(1/2*s12)*mt^4*s24 + 2*denom(1/2*s12)*mt^4*s23 + 2*denom(1/2*s12)*
      mt^4*s14 + 2*denom(1/2*s12)*mt^4*s13 + 2*denom(1/2*s12)*mt^4*s12 - 2*
      denom(1/2*s12)*mt^4*mh^2 - 1/2*denom(1/4*s12^2)*s12*s13*s23*s24 - 1/2*
      denom(1/4*s12^2)*s12*s13*s23^2 - 1/2*denom(1/4*s12^2)*s12*s13*s14*s23 - 
      1/2*denom(1/4*s12^2)*s12*s13^2*s23 - 1/2*denom(1/4*s12^2)*s12^2*s13*s23
       + 1/2*denom(1/4*s12^2)*mh^2*s12*s13*s23 + 1/2*denom(1/4*s12^2)*mt^2*s12
      *s23*s24 + 1/2*denom(1/4*s12^2)*mt^2*s12*s23^2 + 1/2*denom(1/4*s12^2)*
      mt^2*s12*s14*s23 + 1/2*denom(1/4*s12^2)*mt^2*s12*s13*s24 + denom(1/4*
      s12^2)*mt^2*s12*s13*s23 + 1/2*denom(1/4*s12^2)*mt^2*s12*s13*s14 + 1/2*
      denom(1/4*s12^2)*mt^2*s12*s13^2 + 1/2*denom(1/4*s12^2)*mt^2*s12^2*s23 + 
      1/2*denom(1/4*s12^2)*mt^2*s12^2*s13 - 1/2*denom(1/4*s12^2)*mt^2*mh^2*s12
      *s23 - 1/2*denom(1/4*s12^2)*mt^2*mh^2*s12*s13 - 1/2*denom(1/4*s12^2)*
      mt^4*s12*s24 - 1/2*denom(1/4*s12^2)*mt^4*s12*s23 - 1/2*denom(1/4*s12^2)*
      mt^4*s12*s14 - 1/2*denom(1/4*s12^2)*mt^4*s12*s13 - 1/2*denom(1/4*s12^2)*
      mt^4*s12^2 + 1/2*denom(1/4*s12^2)*mt^4*mh^2*s12;
 
 .sort
id KMatrix(1,18) =  2*mt^3*s14 - 2*mt^3*s13 - 2*denom(1/2*s12)*mt*s13*s14*s23
       + 2*denom(1/2*s12)*mt*s13^2*s23 + 2*denom(1/2*s12)*mt^3*s14*s23 - 2*
      denom(1/2*s12)*mt^3*s13*s23 + 2*denom(1/2*s12)*mt^3*s13*s14 - 2*denom(1/
      2*s12)*mt^3*s13^2 - 2*denom(1/2*s12)*mt^5*s14 + 2*denom(1/2*s12)*mt^5*
      s13 + 1/2*denom(1/4*s12^2)*mt*s12*s13*s14*s23 - 1/2*denom(1/4*s12^2)*mt*
      s12*s13^2*s23 - 1/2*denom(1/4*s12^2)*mt^3*s12*s14*s23 + 1/2*denom(1/4*
      s12^2)*mt^3*s12*s13*s23 - 1/2*denom(1/4*s12^2)*mt^3*s12*s13*s14 + 1/2*
      denom(1/4*s12^2)*mt^3*s12*s13^2 + 1/2*denom(1/4*s12^2)*mt^5*s12*s14 - 1/
      2*denom(1/4*s12^2)*mt^5*s12*s13;
 
 .sort
id KMatrix(1,19) =  2*mt^3*s24 - 2*mt^3*s23 - 2*denom(1/2*s12)*mt*s13*s23*s24
       + 2*denom(1/2*s12)*mt*s13*s23^2 + 2*denom(1/2*s12)*mt^3*s23*s24 - 2*
      denom(1/2*s12)*mt^3*s23^2 + 2*denom(1/2*s12)*mt^3*s13*s24 - 2*denom(1/2*
      s12)*mt^3*s13*s23 - 2*denom(1/2*s12)*mt^5*s24 + 2*denom(1/2*s12)*mt^5*
      s23 + 1/2*denom(1/4*s12^2)*mt*s12*s13*s23*s24 - 1/2*denom(1/4*s12^2)*mt*
      s12*s13*s23^2 - 1/2*denom(1/4*s12^2)*mt^3*s12*s23*s24 + 1/2*denom(1/4*
      s12^2)*mt^3*s12*s23^2 - 1/2*denom(1/4*s12^2)*mt^3*s12*s13*s24 + 1/2*
      denom(1/4*s12^2)*mt^3*s12*s13*s23 + 1/2*denom(1/4*s12^2)*mt^5*s12*s24 - 
      1/2*denom(1/4*s12^2)*mt^5*s12*s23;
 
 .sort
id KMatrix(1,20) =   - 2*mt^3*s24 - 2*mt^3*s23 - 2*mt^3*s14 - 2*mt^3*s13 - 2*
      mt^3*s12 + 2*mt^3*mh^2 + denom(1/2*s12)*mt*s13*s23*s24 + denom(1/2*s12)*
      mt*s13*s23^2 + denom(1/2*s12)*mt*s13*s14*s23 + denom(1/2*s12)*mt*s13^2*
      s23 + denom(1/2*s12)*mt*s12*s13*s23 - denom(1/2*s12)*mt*mh^2*s13*s23 - 
      denom(1/2*s12)*mt^3*s23*s24 - denom(1/2*s12)*mt^3*s23^2 - 2*denom(1/2*
      s12)*mt^3*s14*s23 - 2*denom(1/2*s12)*mt^3*s13*s24 - denom(1/2*s12)*mt^3*
      s13*s14 - denom(1/2*s12)*mt^3*s13^2 - denom(1/2*s12)*mt^3*s12*s23 - 
      denom(1/2*s12)*mt^3*s12*s13 + denom(1/2*s12)*mt^3*mh^2*s23 + denom(1/2*
      s12)*mt^3*mh^2*s13 + 2*denom(1/2*s12)*mt^5*s24 + 2*denom(1/2*s12)*mt^5*
      s14 + denom(1/2*s12)*mt^5*s12 - denom(1/2*s12)*mt^5*mh^2 + 1/2*denom(1/4
      *s12^2)*mt*s13*s14*s23^2 + 1/2*denom(1/4*s12^2)*mt*s13^2*s23*s24 - 
      denom(1/4*s12^2)*mt*s13^2*s23^2 - 1/2*denom(1/4*s12^2)*mt^3*s14*s23^2 - 
      denom(1/4*s12^2)*mt^3*s13*s23*s24 + 3/2*denom(1/4*s12^2)*mt^3*s13*s23^2
       - denom(1/4*s12^2)*mt^3*s13*s14*s23 - 1/2*denom(1/4*s12^2)*mt^3*s13^2*
      s24 + 3/2*denom(1/4*s12^2)*mt^3*s13^2*s23 + 1/2*denom(1/4*s12^2)*mt^5*
      s23*s24 - 1/2*denom(1/4*s12^2)*mt^5*s23^2 + denom(1/4*s12^2)*mt^5*s14*
      s23 + denom(1/4*s12^2)*mt^5*s13*s24 - 2*denom(1/4*s12^2)*mt^5*s13*s23 + 
      1/2*denom(1/4*s12^2)*mt^5*s13*s14 - 1/2*denom(1/4*s12^2)*mt^5*s13^2 - 1/
      2*denom(1/4*s12^2)*mt^7*s24 + 1/2*denom(1/4*s12^2)*mt^7*s23 - 1/2*denom(
      1/4*s12^2)*mt^7*s14 + 1/2*denom(1/4*s12^2)*mt^7*s13;
 
 .sort
id KMatrix(1,21) =  mt*s24^2 + 2*mt*s23*s24 + mt*s23^2 + 2*mt*s14*s24 + 2*mt*
      s14*s23 + mt*s14^2 + 2*mt*s13*s24 + 2*mt*s13*s23 + 2*mt*s13*s14 + mt*
      s13^2 + 2*mt*s12*s24 + 2*mt*s12*s23 + 2*mt*s12*s14 + 2*mt*s12*s13 + mt*
      s12^2 - 2*mt*mh^2*s24 - 2*mt*mh^2*s23 - 2*mt*mh^2*s14 - 2*mt*mh^2*s13 - 
      2*mt*mh^2*s12 + mt*mh^4 - 2*mt^3*s24 - 2*mt^3*s23 - 2*mt^3*s14 - 2*mt^3*
      s13 - 2*mt^3*s12 + 2*mt^3*mh^2 + denom(1/2*s12)*mt*s14*s23*s24 + denom(1/
      2*s12)*mt*s14*s23^2 + denom(1/2*s12)*mt*s14^2*s23 + denom(1/2*s12)*mt*
      s13*s24^2 - denom(1/2*s12)*mt*s13*s23^2 + denom(1/2*s12)*mt*s13*s14*s24
       + denom(1/2*s12)*mt*s13^2*s24 - denom(1/2*s12)*mt*s13^2*s23 + denom(1/2
      *s12)*mt*s12*s14*s23 + denom(1/2*s12)*mt*s12*s13*s24 - denom(1/2*s12)*mt
      *s12*s13*s23 - denom(1/2*s12)*mt*mh^2*s14*s23 - denom(1/2*s12)*mt*mh^2*
      s13*s24 + denom(1/2*s12)*mt*mh^2*s13*s23 - denom(1/2*s12)*mt^3*s24^2 - 
      denom(1/2*s12)*mt^3*s23*s24 - 2*denom(1/2*s12)*mt^3*s14*s24 - 2*denom(1/
      2*s12)*mt^3*s14*s23 - denom(1/2*s12)*mt^3*s14^2 - 2*denom(1/2*s12)*mt^3*
      s13*s24 + 2*denom(1/2*s12)*mt^3*s13*s23 - denom(1/2*s12)*mt^3*s13*s14 - 
      denom(1/2*s12)*mt^3*s12*s24 - denom(1/2*s12)*mt^3*s12*s14 + denom(1/2*
      s12)*mt^3*mh^2*s24 + denom(1/2*s12)*mt^3*mh^2*s14 + 2*denom(1/2*s12)*
      mt^5*s24 + 2*denom(1/2*s12)*mt^5*s14 + denom(1/2*s12)*mt^5*s12 - denom(1/
      2*s12)*mt^5*mh^2 + 1/4*denom(1/4*s12^2)*mt*s14^2*s23^2 + 1/2*denom(1/4*
      s12^2)*mt*s13*s14*s23*s24 - 1/2*denom(1/4*s12^2)*mt*s13*s14*s23^2 + 1/4*
      denom(1/4*s12^2)*mt*s13^2*s24^2 - 1/2*denom(1/4*s12^2)*mt*s13^2*s23*s24
       - 1/2*denom(1/4*s12^2)*mt^3*s14*s23*s24 - 1/2*denom(1/4*s12^2)*mt^3*
      s14^2*s23 - 1/2*denom(1/4*s12^2)*mt^3*s13*s24^2 + 1/2*denom(1/4*s12^2)*
      mt^3*s13*s23*s24 + 1/2*denom(1/4*s12^2)*mt^3*s13*s23^2 - 1/2*denom(1/4*
      s12^2)*mt^3*s13*s14*s24 + 1/2*denom(1/4*s12^2)*mt^3*s13*s14*s23 + 1/2*
      denom(1/4*s12^2)*mt^3*s13^2*s23 + 1/4*denom(1/4*s12^2)*mt^5*s24^2 - 1/4*
      denom(1/4*s12^2)*mt^5*s23^2 + 1/2*denom(1/4*s12^2)*mt^5*s14*s24 + 1/2*
      denom(1/4*s12^2)*mt^5*s14*s23 + 1/4*denom(1/4*s12^2)*mt^5*s14^2 + 1/2*
      denom(1/4*s12^2)*mt^5*s13*s24 - 3/2*denom(1/4*s12^2)*mt^5*s13*s23 - 1/4*
      denom(1/4*s12^2)*mt^5*s13^2 - 1/2*denom(1/4*s12^2)*mt^7*s24 + 1/2*denom(
      1/4*s12^2)*mt^7*s23 - 1/2*denom(1/4*s12^2)*mt^7*s14 + 1/2*denom(1/4*
      s12^2)*mt^7*s13;
 
 .sort
id KMatrix(1,22) =   - 2*mt^3*s24 - 2*mt^3*s23 - 2*mt^3*s14 - 2*mt^3*s13 - 2*
      mt^3*s12 + 2*mt^3*mh^2 + denom(1/2*s12)*mt*s13*s23*s24 + denom(1/2*s12)*
      mt*s13*s23^2 + denom(1/2*s12)*mt*s13*s14*s23 + denom(1/2*s12)*mt*s13^2*
      s23 + denom(1/2*s12)*mt*s12*s13*s23 - denom(1/2*s12)*mt*mh^2*s13*s23 - 
      denom(1/2*s12)*mt^3*s23*s24 - denom(1/2*s12)*mt^3*s23^2 - 2*denom(1/2*
      s12)*mt^3*s14*s23 - 2*denom(1/2*s12)*mt^3*s13*s24 - denom(1/2*s12)*mt^3*
      s13*s14 - denom(1/2*s12)*mt^3*s13^2 - denom(1/2*s12)*mt^3*s12*s23 - 
      denom(1/2*s12)*mt^3*s12*s13 + denom(1/2*s12)*mt^3*mh^2*s23 + denom(1/2*
      s12)*mt^3*mh^2*s13 + 2*denom(1/2*s12)*mt^5*s24 + 2*denom(1/2*s12)*mt^5*
      s14 + denom(1/2*s12)*mt^5*s12 - denom(1/2*s12)*mt^5*mh^2 + 1/2*denom(1/4
      *s12^2)*mt*s13*s14*s23^2 + 1/2*denom(1/4*s12^2)*mt*s13^2*s23*s24 - 
      denom(1/4*s12^2)*mt*s13^2*s23^2 - 1/2*denom(1/4*s12^2)*mt^3*s14*s23^2 - 
      denom(1/4*s12^2)*mt^3*s13*s23*s24 + 3/2*denom(1/4*s12^2)*mt^3*s13*s23^2
       - denom(1/4*s12^2)*mt^3*s13*s14*s23 - 1/2*denom(1/4*s12^2)*mt^3*s13^2*
      s24 + 3/2*denom(1/4*s12^2)*mt^3*s13^2*s23 + 1/2*denom(1/4*s12^2)*mt^5*
      s23*s24 - 1/2*denom(1/4*s12^2)*mt^5*s23^2 + denom(1/4*s12^2)*mt^5*s14*
      s23 + denom(1/4*s12^2)*mt^5*s13*s24 - 2*denom(1/4*s12^2)*mt^5*s13*s23 + 
      1/2*denom(1/4*s12^2)*mt^5*s13*s14 - 1/2*denom(1/4*s12^2)*mt^5*s13^2 - 1/
      2*denom(1/4*s12^2)*mt^7*s24 + 1/2*denom(1/4*s12^2)*mt^7*s23 - 1/2*denom(
      1/4*s12^2)*mt^7*s14 + 1/2*denom(1/4*s12^2)*mt^7*s13;
 
 .sort
id KMatrix(1,23) =  mt*s24^2 + 2*mt*s23*s24 + mt*s23^2 + 2*mt*s14*s24 + 2*mt*
      s14*s23 + mt*s14^2 + 2*mt*s13*s24 + 2*mt*s13*s23 + 2*mt*s13*s14 + mt*
      s13^2 + 2*mt*s12*s24 + 2*mt*s12*s23 + 2*mt*s12*s14 + 2*mt*s12*s13 + mt*
      s12^2 - 2*mt*mh^2*s24 - 2*mt*mh^2*s23 - 2*mt*mh^2*s14 - 2*mt*mh^2*s13 - 
      2*mt*mh^2*s12 + mt*mh^4 - 2*mt^3*s24 - 2*mt^3*s23 - 2*mt^3*s14 - 2*mt^3*
      s13 - 2*mt^3*s12 + 2*mt^3*mh^2 + denom(1/2*s12)*mt*s14*s23*s24 + denom(1/
      2*s12)*mt*s14*s23^2 + denom(1/2*s12)*mt*s14^2*s23 + denom(1/2*s12)*mt*
      s13*s24^2 - denom(1/2*s12)*mt*s13*s23^2 + denom(1/2*s12)*mt*s13*s14*s24
       + denom(1/2*s12)*mt*s13^2*s24 - denom(1/2*s12)*mt*s13^2*s23 + denom(1/2
      *s12)*mt*s12*s14*s23 + denom(1/2*s12)*mt*s12*s13*s24 - denom(1/2*s12)*mt
      *s12*s13*s23 - denom(1/2*s12)*mt*mh^2*s14*s23 - denom(1/2*s12)*mt*mh^2*
      s13*s24 + denom(1/2*s12)*mt*mh^2*s13*s23 - denom(1/2*s12)*mt^3*s24^2 - 
      denom(1/2*s12)*mt^3*s23*s24 - 2*denom(1/2*s12)*mt^3*s14*s24 - 2*denom(1/
      2*s12)*mt^3*s14*s23 - denom(1/2*s12)*mt^3*s14^2 - 2*denom(1/2*s12)*mt^3*
      s13*s24 + 2*denom(1/2*s12)*mt^3*s13*s23 - denom(1/2*s12)*mt^3*s13*s14 - 
      denom(1/2*s12)*mt^3*s12*s24 - denom(1/2*s12)*mt^3*s12*s14 + denom(1/2*
      s12)*mt^3*mh^2*s24 + denom(1/2*s12)*mt^3*mh^2*s14 + 2*denom(1/2*s12)*
      mt^5*s24 + 2*denom(1/2*s12)*mt^5*s14 + denom(1/2*s12)*mt^5*s12 - denom(1/
      2*s12)*mt^5*mh^2 + 1/4*denom(1/4*s12^2)*mt*s14^2*s23^2 + 1/2*denom(1/4*
      s12^2)*mt*s13*s14*s23*s24 - 1/2*denom(1/4*s12^2)*mt*s13*s14*s23^2 + 1/4*
      denom(1/4*s12^2)*mt*s13^2*s24^2 - 1/2*denom(1/4*s12^2)*mt*s13^2*s23*s24
       - 1/2*denom(1/4*s12^2)*mt^3*s14*s23*s24 - 1/2*denom(1/4*s12^2)*mt^3*
      s14^2*s23 - 1/2*denom(1/4*s12^2)*mt^3*s13*s24^2 + 1/2*denom(1/4*s12^2)*
      mt^3*s13*s23*s24 + 1/2*denom(1/4*s12^2)*mt^3*s13*s23^2 - 1/2*denom(1/4*
      s12^2)*mt^3*s13*s14*s24 + 1/2*denom(1/4*s12^2)*mt^3*s13*s14*s23 + 1/2*
      denom(1/4*s12^2)*mt^3*s13^2*s23 + 1/4*denom(1/4*s12^2)*mt^5*s24^2 - 1/4*
      denom(1/4*s12^2)*mt^5*s23^2 + 1/2*denom(1/4*s12^2)*mt^5*s14*s24 + 1/2*
      denom(1/4*s12^2)*mt^5*s14*s23 + 1/4*denom(1/4*s12^2)*mt^5*s14^2 + 1/2*
      denom(1/4*s12^2)*mt^5*s13*s24 - 3/2*denom(1/4*s12^2)*mt^5*s13*s23 - 1/4*
      denom(1/4*s12^2)*mt^5*s13^2 - 1/2*denom(1/4*s12^2)*mt^7*s24 + 1/2*denom(
      1/4*s12^2)*mt^7*s23 - 1/2*denom(1/4*s12^2)*mt^7*s14 + 1/2*denom(1/4*
      s12^2)*mt^7*s13;
 
 .sort
id KMatrix(1,24) =  mt^2*s14*s23 - mt^2*s13*s24 - mt^2*s12*s24 - mt^2*s12*s23
       - mt^2*s12*s14 - mt^2*s12*s13 - mt^2*s12^2 + mt^2*mh^2*s12 + mt^4*s24
       - mt^4*s23 - mt^4*s14 + mt^4*s13 - denom(1/2*s12)*s13*s14*s23^2 + 
      denom(1/2*s12)*s13^2*s23*s24 + denom(1/2*s12)*s12*s13*s23*s24 + denom(1/
      2*s12)*s12*s13*s23^2 + denom(1/2*s12)*s12*s13*s14*s23 + denom(1/2*s12)*
      s12*s13^2*s23 + denom(1/2*s12)*s12^2*s13*s23 - denom(1/2*s12)*mh^2*s12*
      s13*s23 + denom(1/2*s12)*mt^2*s14*s23^2 - 2*denom(1/2*s12)*mt^2*s13*s23*
      s24 + denom(1/2*s12)*mt^2*s13*s23^2 + 2*denom(1/2*s12)*mt^2*s13*s14*s23
       - denom(1/2*s12)*mt^2*s13^2*s24 - denom(1/2*s12)*mt^2*s13^2*s23 - 
      denom(1/2*s12)*mt^2*s12*s23*s24 - denom(1/2*s12)*mt^2*s12*s23^2 - denom(
      1/2*s12)*mt^2*s12*s14*s23 - denom(1/2*s12)*mt^2*s12*s13*s24 - 2*denom(1/
      2*s12)*mt^2*s12*s13*s23 - denom(1/2*s12)*mt^2*s12*s13*s14 - denom(1/2*
      s12)*mt^2*s12*s13^2 - denom(1/2*s12)*mt^2*s12^2*s23 - denom(1/2*s12)*
      mt^2*s12^2*s13 + denom(1/2*s12)*mt^2*mh^2*s12*s23 + denom(1/2*s12)*mt^2*
      mh^2*s12*s13 + denom(1/2*s12)*mt^4*s23*s24 - denom(1/2*s12)*mt^4*s23^2
       - 2*denom(1/2*s12)*mt^4*s14*s23 + 2*denom(1/2*s12)*mt^4*s13*s24 - 
      denom(1/2*s12)*mt^4*s13*s14 + denom(1/2*s12)*mt^4*s13^2 + denom(1/2*s12)
      *mt^4*s12*s24 + denom(1/2*s12)*mt^4*s12*s23 + denom(1/2*s12)*mt^4*s12*
      s14 + denom(1/2*s12)*mt^4*s12*s13 + denom(1/2*s12)*mt^4*s12^2 - denom(1/
      2*s12)*mt^4*mh^2*s12 - denom(1/2*s12)*mt^6*s24 + denom(1/2*s12)*mt^6*s23
       + denom(1/2*s12)*mt^6*s14 - denom(1/2*s12)*mt^6*s13 + 1/4*denom(1/4*
      s12^2)*s12*s13*s14*s23^2 - 1/4*denom(1/4*s12^2)*s12*s13^2*s23*s24 - 1/4*
      denom(1/4*s12^2)*s12^2*s13*s23*s24 - 1/4*denom(1/4*s12^2)*s12^2*s13*
      s23^2 - 1/4*denom(1/4*s12^2)*s12^2*s13*s14*s23 - 1/4*denom(1/4*s12^2)*
      s12^2*s13^2*s23 - 1/4*denom(1/4*s12^2)*s12^3*s13*s23 + 1/4*denom(1/4*
      s12^2)*mh^2*s12^2*s13*s23 - 1/4*denom(1/4*s12^2)*mt^2*s12*s14*s23^2 + 1/
      2*denom(1/4*s12^2)*mt^2*s12*s13*s23*s24 - 1/4*denom(1/4*s12^2)*mt^2*s12*
      s13*s23^2 - 1/2*denom(1/4*s12^2)*mt^2*s12*s13*s14*s23 + 1/4*denom(1/4*
      s12^2)*mt^2*s12*s13^2*s24 + 1/4*denom(1/4*s12^2)*mt^2*s12*s13^2*s23 + 1/
      4*denom(1/4*s12^2)*mt^2*s12^2*s23*s24 + 1/4*denom(1/4*s12^2)*mt^2*s12^2*
      s23^2 + 1/4*denom(1/4*s12^2)*mt^2*s12^2*s14*s23 + 1/4*denom(1/4*s12^2)*
      mt^2*s12^2*s13*s24 + 1/2*denom(1/4*s12^2)*mt^2*s12^2*s13*s23 + 1/4*
      denom(1/4*s12^2)*mt^2*s12^2*s13*s14 + 1/4*denom(1/4*s12^2)*mt^2*s12^2*
      s13^2 + 1/4*denom(1/4*s12^2)*mt^2*s12^3*s23 + 1/4*denom(1/4*s12^2)*mt^2*
      s12^3*s13 - 1/4*denom(1/4*s12^2)*mt^2*mh^2*s12^2*s23 - 1/4*denom(1/4*
      s12^2)*mt^2*mh^2*s12^2*s13 - 1/4*denom(1/4*s12^2)*mt^4*s12*s23*s24 + 1/4
      *denom(1/4*s12^2)*mt^4*s12*s23^2 + 1/2*denom(1/4*s12^2)*mt^4*s12*s14*s23
       - 1/2*denom(1/4*s12^2)*mt^4*s12*s13*s24 + 1/4*denom(1/4*s12^2)*mt^4*s12
      *s13*s14 - 1/4*denom(1/4*s12^2)*mt^4*s12*s13^2 - 1/4*denom(1/4*s12^2)*
      mt^4*s12^2*s24 - 1/4*denom(1/4*s12^2)*mt^4*s12^2*s23 - 1/4*denom(1/4*
      s12^2)*mt^4*s12^2*s14 - 1/4*denom(1/4*s12^2)*mt^4*s12^2*s13 - 1/4*denom(
      1/4*s12^2)*mt^4*s12^3 + 1/4*denom(1/4*s12^2)*mt^4*mh^2*s12^2 + 1/4*
      denom(1/4*s12^2)*mt^6*s12*s24 - 1/4*denom(1/4*s12^2)*mt^6*s12*s23 - 1/4*
      denom(1/4*s12^2)*mt^6*s12*s14 + 1/4*denom(1/4*s12^2)*mt^6*s12*s13;
 
 .sort
id KMatrix(1,25) =   - 2*mt^2*s24 - 2*mt^2*s23 - 2*mt^2*s14 - 2*mt^2*s13 - 2*
      mt^2*s12 + 2*mt^2*mh^2 + 2*denom(1/2*s12)*s13*s23*s24 + 2*denom(1/2*s12)
      *s13*s23^2 + 2*denom(1/2*s12)*s13*s14*s23 + 2*denom(1/2*s12)*s13^2*s23
       + 2*denom(1/2*s12)*s12*s13*s23 - 2*denom(1/2*s12)*mh^2*s13*s23 - 2*
      denom(1/2*s12)*mt^2*s23*s24 - 2*denom(1/2*s12)*mt^2*s23^2 - 2*denom(1/2*
      s12)*mt^2*s14*s23 - 2*denom(1/2*s12)*mt^2*s13*s24 - 4*denom(1/2*s12)*
      mt^2*s13*s23 - 2*denom(1/2*s12)*mt^2*s13*s14 - 2*denom(1/2*s12)*mt^2*
      s13^2 - 2*denom(1/2*s12)*mt^2*s12*s23 - 2*denom(1/2*s12)*mt^2*s12*s13 + 
      2*denom(1/2*s12)*mt^2*mh^2*s23 + 2*denom(1/2*s12)*mt^2*mh^2*s13 + 2*
      denom(1/2*s12)*mt^4*s24 + 2*denom(1/2*s12)*mt^4*s23 + 2*denom(1/2*s12)*
      mt^4*s14 + 2*denom(1/2*s12)*mt^4*s13 + 2*denom(1/2*s12)*mt^4*s12 - 2*
      denom(1/2*s12)*mt^4*mh^2 - 1/2*denom(1/4*s12^2)*s12*s13*s23*s24 - 1/2*
      denom(1/4*s12^2)*s12*s13*s23^2 - 1/2*denom(1/4*s12^2)*s12*s13*s14*s23 - 
      1/2*denom(1/4*s12^2)*s12*s13^2*s23 - 1/2*denom(1/4*s12^2)*s12^2*s13*s23
       + 1/2*denom(1/4*s12^2)*mh^2*s12*s13*s23 + 1/2*denom(1/4*s12^2)*mt^2*s12
      *s23*s24 + 1/2*denom(1/4*s12^2)*mt^2*s12*s23^2 + 1/2*denom(1/4*s12^2)*
      mt^2*s12*s14*s23 + 1/2*denom(1/4*s12^2)*mt^2*s12*s13*s24 + denom(1/4*
      s12^2)*mt^2*s12*s13*s23 + 1/2*denom(1/4*s12^2)*mt^2*s12*s13*s14 + 1/2*
      denom(1/4*s12^2)*mt^2*s12*s13^2 + 1/2*denom(1/4*s12^2)*mt^2*s12^2*s23 + 
      1/2*denom(1/4*s12^2)*mt^2*s12^2*s13 - 1/2*denom(1/4*s12^2)*mt^2*mh^2*s12
      *s23 - 1/2*denom(1/4*s12^2)*mt^2*mh^2*s12*s13 - 1/2*denom(1/4*s12^2)*
      mt^4*s12*s24 - 1/2*denom(1/4*s12^2)*mt^4*s12*s23 - 1/2*denom(1/4*s12^2)*
      mt^4*s12*s14 - 1/2*denom(1/4*s12^2)*mt^4*s12*s13 - 1/2*denom(1/4*s12^2)*
      mt^4*s12^2 + 1/2*denom(1/4*s12^2)*mt^4*mh^2*s12;
 
 .sort
id KMatrix(1,26) =   - mt^2*s13*s24 - mt^2*s13*s23 - mt^2*s13*s14 - mt^2*s13^2
       - mt^2*s12*s13 + mt^2*mh^2*s13 + mt^4*s24 + mt^4*s23 - mt^4*s14 + 3*
      mt^4*s13 + mt^4*s12 - mt^4*mh^2 + 1/2*denom(1/2*s12)*s13^2*s23*s24 + 1/2
      *denom(1/2*s12)*s13^2*s23^2 + 1/2*denom(1/2*s12)*s13^2*s14*s23 + 1/2*
      denom(1/2*s12)*s13^3*s23 + 1/2*denom(1/2*s12)*s12*s13^2*s23 - 1/2*denom(
      1/2*s12)*mh^2*s13^2*s23 - denom(1/2*s12)*mt^2*s13*s23*s24 - denom(1/2*
      s12)*mt^2*s13*s23^2 + 1/2*denom(1/2*s12)*mt^2*s13*s14*s23 - denom(1/2*
      s12)*mt^2*s13^2*s24 - 5/2*denom(1/2*s12)*mt^2*s13^2*s23 - 1/2*denom(1/2*
      s12)*mt^2*s13^2*s14 - 1/2*denom(1/2*s12)*mt^2*s13^3 - denom(1/2*s12)*
      mt^2*s12*s13*s23 - 1/2*denom(1/2*s12)*mt^2*s12*s13^2 + denom(1/2*s12)*
      mt^2*mh^2*s13*s23 + 1/2*denom(1/2*s12)*mt^2*mh^2*s13^2 + 1/2*denom(1/2*
      s12)*mt^4*s23*s24 + 1/2*denom(1/2*s12)*mt^4*s23^2 - denom(1/2*s12)*mt^4*
      s14*s23 + 2*denom(1/2*s12)*mt^4*s13*s24 + 2*denom(1/2*s12)*mt^4*s13*s23
       - 1/2*denom(1/2*s12)*mt^4*s13*s14 + 5/2*denom(1/2*s12)*mt^4*s13^2 + 1/2
      *denom(1/2*s12)*mt^4*s12*s23 + denom(1/2*s12)*mt^4*s12*s13 - 1/2*denom(1/
      2*s12)*mt^4*mh^2*s23 - denom(1/2*s12)*mt^4*mh^2*s13 - denom(1/2*s12)*
      mt^6*s24 + denom(1/2*s12)*mt^6*s14 - 2*denom(1/2*s12)*mt^6*s13 - 1/2*
      denom(1/2*s12)*mt^6*s12 + 1/2*denom(1/2*s12)*mt^6*mh^2 - 1/4*denom(1/4*
      s12^2)*s13^2*s14*s23^2 + 1/4*denom(1/4*s12^2)*s13^3*s23*s24 + 1/2*denom(
      1/4*s12^2)*mt^2*s13*s14*s23^2 - 3/4*denom(1/4*s12^2)*mt^2*s13^2*s23*s24
       + 1/4*denom(1/4*s12^2)*mt^2*s13^2*s23^2 + 1/2*denom(1/4*s12^2)*mt^2*
      s13^2*s14*s23 - 1/4*denom(1/4*s12^2)*mt^2*s13^3*s24 - 1/4*denom(1/4*
      s12^2)*mt^2*s13^3*s23 - 1/4*denom(1/4*s12^2)*mt^4*s14*s23^2 + 3/4*denom(
      1/4*s12^2)*mt^4*s13*s23*s24 - 1/2*denom(1/4*s12^2)*mt^4*s13*s23^2 - 
      denom(1/4*s12^2)*mt^4*s13*s14*s23 + 3/4*denom(1/4*s12^2)*mt^4*s13^2*s24
       + 1/4*denom(1/4*s12^2)*mt^4*s13^2*s23 - 1/4*denom(1/4*s12^2)*mt^4*s13^2
      *s14 + 1/4*denom(1/4*s12^2)*mt^4*s13^3 - 1/4*denom(1/4*s12^2)*mt^6*s23*
      s24 + 1/4*denom(1/4*s12^2)*mt^6*s23^2 + 1/2*denom(1/4*s12^2)*mt^6*s14*
      s23 - 3/4*denom(1/4*s12^2)*mt^6*s13*s24 + 1/4*denom(1/4*s12^2)*mt^6*s13*
      s23 + 1/2*denom(1/4*s12^2)*mt^6*s13*s14 - 1/2*denom(1/4*s12^2)*mt^6*
      s13^2 + 1/4*denom(1/4*s12^2)*mt^8*s24 - 1/4*denom(1/4*s12^2)*mt^8*s23 - 
      1/4*denom(1/4*s12^2)*mt^8*s14 + 1/4*denom(1/4*s12^2)*mt^8*s13;
 
 .sort
id KMatrix(1,27) =   - mt^2*s23*s24 - mt^2*s23^2 - mt^2*s14*s23 - mt^2*s13*s23
       - mt^2*s12*s23 + mt^2*mh^2*s23 - mt^4*s24 + 3*mt^4*s23 + mt^4*s14 + 
      mt^4*s13 + mt^4*s12 - mt^4*mh^2 + 1/2*denom(1/2*s12)*s13*s23^2*s24 + 1/2
      *denom(1/2*s12)*s13*s23^3 + 1/2*denom(1/2*s12)*s13*s14*s23^2 + 1/2*
      denom(1/2*s12)*s13^2*s23^2 + 1/2*denom(1/2*s12)*s12*s13*s23^2 - 1/2*
      denom(1/2*s12)*mh^2*s13*s23^2 - 1/2*denom(1/2*s12)*mt^2*s23^2*s24 - 1/2*
      denom(1/2*s12)*mt^2*s23^3 - denom(1/2*s12)*mt^2*s14*s23^2 + 1/2*denom(1/
      2*s12)*mt^2*s13*s23*s24 - 5/2*denom(1/2*s12)*mt^2*s13*s23^2 - denom(1/2*
      s12)*mt^2*s13*s14*s23 - denom(1/2*s12)*mt^2*s13^2*s23 - 1/2*denom(1/2*
      s12)*mt^2*s12*s23^2 - denom(1/2*s12)*mt^2*s12*s13*s23 + 1/2*denom(1/2*
      s12)*mt^2*mh^2*s23^2 + denom(1/2*s12)*mt^2*mh^2*s13*s23 - 1/2*denom(1/2*
      s12)*mt^4*s23*s24 + 5/2*denom(1/2*s12)*mt^4*s23^2 + 2*denom(1/2*s12)*
      mt^4*s14*s23 - denom(1/2*s12)*mt^4*s13*s24 + 2*denom(1/2*s12)*mt^4*s13*
      s23 + 1/2*denom(1/2*s12)*mt^4*s13*s14 + 1/2*denom(1/2*s12)*mt^4*s13^2 + 
      denom(1/2*s12)*mt^4*s12*s23 + 1/2*denom(1/2*s12)*mt^4*s12*s13 - denom(1/
      2*s12)*mt^4*mh^2*s23 - 1/2*denom(1/2*s12)*mt^4*mh^2*s13 + denom(1/2*s12)
      *mt^6*s24 - 2*denom(1/2*s12)*mt^6*s23 - denom(1/2*s12)*mt^6*s14 - 1/2*
      denom(1/2*s12)*mt^6*s12 + 1/2*denom(1/2*s12)*mt^6*mh^2 + 1/4*denom(1/4*
      s12^2)*s13*s14*s23^3 - 1/4*denom(1/4*s12^2)*s13^2*s23^2*s24 - 1/4*denom(
      1/4*s12^2)*mt^2*s14*s23^3 + 1/2*denom(1/4*s12^2)*mt^2*s13*s23^2*s24 - 1/
      4*denom(1/4*s12^2)*mt^2*s13*s23^3 - 3/4*denom(1/4*s12^2)*mt^2*s13*s14*
      s23^2 + 1/2*denom(1/4*s12^2)*mt^2*s13^2*s23*s24 + 1/4*denom(1/4*s12^2)*
      mt^2*s13^2*s23^2 - 1/4*denom(1/4*s12^2)*mt^4*s23^2*s24 + 1/4*denom(1/4*
      s12^2)*mt^4*s23^3 + 3/4*denom(1/4*s12^2)*mt^4*s14*s23^2 - denom(1/4*
      s12^2)*mt^4*s13*s23*s24 + 1/4*denom(1/4*s12^2)*mt^4*s13*s23^2 + 3/4*
      denom(1/4*s12^2)*mt^4*s13*s14*s23 - 1/4*denom(1/4*s12^2)*mt^4*s13^2*s24
       - 1/2*denom(1/4*s12^2)*mt^4*s13^2*s23 + 1/2*denom(1/4*s12^2)*mt^6*s23*
      s24 - 1/2*denom(1/4*s12^2)*mt^6*s23^2 - 3/4*denom(1/4*s12^2)*mt^6*s14*
      s23 + 1/2*denom(1/4*s12^2)*mt^6*s13*s24 + 1/4*denom(1/4*s12^2)*mt^6*s13*
      s23 - 1/4*denom(1/4*s12^2)*mt^6*s13*s14 + 1/4*denom(1/4*s12^2)*mt^6*
      s13^2 - 1/4*denom(1/4*s12^2)*mt^8*s24 + 1/4*denom(1/4*s12^2)*mt^8*s23 + 
      1/4*denom(1/4*s12^2)*mt^8*s14 - 1/4*denom(1/4*s12^2)*mt^8*s13;
 
 .sort
id KMatrix(1,28) =  1/2*s13*s24^2 + s13*s23*s24 + 1/2*s13*s23^2 + s13*s14*s24
       + s13*s14*s23 + 1/2*s13*s14^2 + s13^2*s24 + s13^2*s23 + s13^2*s14 + 1/2
      *s13^3 + s12*s13*s24 + s12*s13*s23 + s12*s13*s14 + s12*s13^2 + 1/2*s12^2
      *s13 - mh^2*s13*s24 - mh^2*s13*s23 - mh^2*s13*s14 - mh^2*s13^2 - mh^2*
      s12*s13 + 1/2*mh^4*s13 - 1/2*mt^2*s24^2 - mt^2*s23*s24 - 1/2*mt^2*s23^2
       + 1/2*mt^2*s14^2 - 3*mt^2*s13*s24 - 3*mt^2*s13*s23 - 2*mt^2*s13*s14 - 5/
      2*mt^2*s13^2 - mt^2*s12*s24 - mt^2*s12*s23 - 3*mt^2*s12*s13 - 1/2*mt^2*
      s12^2 + mt^2*mh^2*s24 + mt^2*mh^2*s23 + 3*mt^2*mh^2*s13 + mt^2*mh^2*s12
       - 1/2*mt^2*mh^4 + mt^4*s24 + mt^4*s23 - mt^4*s14 + 3*mt^4*s13 + mt^4*
      s12 - mt^4*mh^2 + 1/2*denom(1/2*s12)*s13^2*s24^2 + 1/2*denom(1/2*s12)*
      s13^2*s23*s24 + 1/2*denom(1/2*s12)*s13^2*s14*s24 + 1/2*denom(1/2*s12)*
      s13^3*s24 + 1/2*denom(1/2*s12)*s12*s13^2*s24 - 1/2*denom(1/2*s12)*mh^2*
      s13^2*s24 + 1/2*denom(1/2*s12)*mt^2*s14^2*s23 - denom(1/2*s12)*mt^2*s13*
      s24^2 - denom(1/2*s12)*mt^2*s13*s23*s24 - 1/2*denom(1/2*s12)*mt^2*s13*
      s14*s24 - 5/2*denom(1/2*s12)*mt^2*s13^2*s24 - 1/2*denom(1/2*s12)*mt^2*
      s13^2*s23 - 1/2*denom(1/2*s12)*mt^2*s13^2*s14 - 1/2*denom(1/2*s12)*mt^2*
      s13^3 - denom(1/2*s12)*mt^2*s12*s13*s24 - 1/2*denom(1/2*s12)*mt^2*s12*
      s13^2 + denom(1/2*s12)*mt^2*mh^2*s13*s24 + 1/2*denom(1/2*s12)*mt^2*mh^2*
      s13^2 + 1/2*denom(1/2*s12)*mt^4*s24^2 + 1/2*denom(1/2*s12)*mt^4*s23*s24
       - denom(1/2*s12)*mt^4*s14*s23 - 1/2*denom(1/2*s12)*mt^4*s14^2 + 3*
      denom(1/2*s12)*mt^4*s13*s24 + denom(1/2*s12)*mt^4*s13*s23 + 1/2*denom(1/
      2*s12)*mt^4*s13*s14 + 2*denom(1/2*s12)*mt^4*s13^2 + 1/2*denom(1/2*s12)*
      mt^4*s12*s24 + denom(1/2*s12)*mt^4*s12*s13 - 1/2*denom(1/2*s12)*mt^4*
      mh^2*s24 - denom(1/2*s12)*mt^4*mh^2*s13 - denom(1/2*s12)*mt^6*s24 + 
      denom(1/2*s12)*mt^6*s14 - 2*denom(1/2*s12)*mt^6*s13 - 1/2*denom(1/2*s12)
      *mt^6*s12 + 1/2*denom(1/2*s12)*mt^6*mh^2 - 1/8*denom(1/4*s12^2)*s13*
      s14^2*s23^2 + 1/8*denom(1/4*s12^2)*s13^3*s24^2 + 1/8*denom(1/4*s12^2)*
      mt^2*s14^2*s23^2 + 1/4*denom(1/4*s12^2)*mt^2*s13*s14*s23^2 + 1/4*denom(1/
      4*s12^2)*mt^2*s13*s14^2*s23 - 3/8*denom(1/4*s12^2)*mt^2*s13^2*s24^2 - 1/
      4*denom(1/4*s12^2)*mt^2*s13^3*s24 - 1/4*denom(1/4*s12^2)*mt^4*s14*s23^2
       - 1/4*denom(1/4*s12^2)*mt^4*s14^2*s23 + 3/8*denom(1/4*s12^2)*mt^4*s13*
      s24^2 - 1/8*denom(1/4*s12^2)*mt^4*s13*s23^2 - 1/2*denom(1/4*s12^2)*mt^4*
      s13*s14*s23 - 1/8*denom(1/4*s12^2)*mt^4*s13*s14^2 + 3/4*denom(1/4*s12^2)
      *mt^4*s13^2*s24 + 1/8*denom(1/4*s12^2)*mt^4*s13^3 - 1/8*denom(1/4*s12^2)
      *mt^6*s24^2 + 1/8*denom(1/4*s12^2)*mt^6*s23^2 + 1/2*denom(1/4*s12^2)*
      mt^6*s14*s23 + 1/8*denom(1/4*s12^2)*mt^6*s14^2 - 3/4*denom(1/4*s12^2)*
      mt^6*s13*s24 + 1/4*denom(1/4*s12^2)*mt^6*s13*s23 + 1/4*denom(1/4*s12^2)*
      mt^6*s13*s14 - 3/8*denom(1/4*s12^2)*mt^6*s13^2 + 1/4*denom(1/4*s12^2)*
      mt^8*s24 - 1/4*denom(1/4*s12^2)*mt^8*s23 - 1/4*denom(1/4*s12^2)*mt^8*s14
       + 1/4*denom(1/4*s12^2)*mt^8*s13;
 
 .sort
id KMatrix(1,29) =  1/2*s23*s24^2 + s23^2*s24 + 1/2*s23^3 + s14*s23*s24 + s14*
      s23^2 + 1/2*s14^2*s23 + s13*s23*s24 + s13*s23^2 + s13*s14*s23 + 1/2*
      s13^2*s23 + s12*s23*s24 + s12*s23^2 + s12*s14*s23 + s12*s13*s23 + 1/2*
      s12^2*s23 - mh^2*s23*s24 - mh^2*s23^2 - mh^2*s14*s23 - mh^2*s13*s23 - 
      mh^2*s12*s23 + 1/2*mh^4*s23 + 1/2*mt^2*s24^2 - 2*mt^2*s23*s24 - 5/2*mt^2
      *s23^2 - 3*mt^2*s14*s23 - 1/2*mt^2*s14^2 - 3*mt^2*s13*s23 - mt^2*s13*s14
       - 1/2*mt^2*s13^2 - 3*mt^2*s12*s23 - mt^2*s12*s14 - mt^2*s12*s13 - 1/2*
      mt^2*s12^2 + 3*mt^2*mh^2*s23 + mt^2*mh^2*s14 + mt^2*mh^2*s13 + mt^2*mh^2
      *s12 - 1/2*mt^2*mh^4 - mt^4*s24 + 3*mt^4*s23 + mt^4*s14 + mt^4*s13 + 
      mt^4*s12 - mt^4*mh^2 + 1/2*denom(1/2*s12)*s14*s23^2*s24 + 1/2*denom(1/2*
      s12)*s14*s23^3 + 1/2*denom(1/2*s12)*s14^2*s23^2 + 1/2*denom(1/2*s12)*s13
      *s14*s23^2 + 1/2*denom(1/2*s12)*s12*s14*s23^2 - 1/2*denom(1/2*s12)*mh^2*
      s14*s23^2 - 1/2*denom(1/2*s12)*mt^2*s23^2*s24 - 1/2*denom(1/2*s12)*mt^2*
      s23^3 - 1/2*denom(1/2*s12)*mt^2*s14*s23*s24 - 5/2*denom(1/2*s12)*mt^2*
      s14*s23^2 - denom(1/2*s12)*mt^2*s14^2*s23 + 1/2*denom(1/2*s12)*mt^2*s13*
      s24^2 - 1/2*denom(1/2*s12)*mt^2*s13*s23^2 - denom(1/2*s12)*mt^2*s13*s14*
      s23 - 1/2*denom(1/2*s12)*mt^2*s12*s23^2 - denom(1/2*s12)*mt^2*s12*s14*
      s23 + 1/2*denom(1/2*s12)*mt^2*mh^2*s23^2 + denom(1/2*s12)*mt^2*mh^2*s14*
      s23 - 1/2*denom(1/2*s12)*mt^4*s24^2 + 1/2*denom(1/2*s12)*mt^4*s23*s24 + 
      2*denom(1/2*s12)*mt^4*s23^2 + 3*denom(1/2*s12)*mt^4*s14*s23 + 1/2*denom(
      1/2*s12)*mt^4*s14^2 - denom(1/2*s12)*mt^4*s13*s24 + denom(1/2*s12)*mt^4*
      s13*s23 + 1/2*denom(1/2*s12)*mt^4*s13*s14 + denom(1/2*s12)*mt^4*s12*s23
       + 1/2*denom(1/2*s12)*mt^4*s12*s14 - denom(1/2*s12)*mt^4*mh^2*s23 - 1/2*
      denom(1/2*s12)*mt^4*mh^2*s14 + denom(1/2*s12)*mt^6*s24 - 2*denom(1/2*s12
      )*mt^6*s23 - denom(1/2*s12)*mt^6*s14 - 1/2*denom(1/2*s12)*mt^6*s12 + 1/2
      *denom(1/2*s12)*mt^6*mh^2 + 1/8*denom(1/4*s12^2)*s14^2*s23^3 - 1/8*
      denom(1/4*s12^2)*s13^2*s23*s24^2 - 1/4*denom(1/4*s12^2)*mt^2*s14*s23^3
       - 3/8*denom(1/4*s12^2)*mt^2*s14^2*s23^2 + 1/4*denom(1/4*s12^2)*mt^2*s13
      *s23*s24^2 + 1/8*denom(1/4*s12^2)*mt^2*s13^2*s24^2 + 1/4*denom(1/4*s12^2
      )*mt^2*s13^2*s23*s24 - 1/8*denom(1/4*s12^2)*mt^4*s23*s24^2 + 1/8*denom(1/
      4*s12^2)*mt^4*s23^3 + 3/4*denom(1/4*s12^2)*mt^4*s14*s23^2 + 3/8*denom(1/
      4*s12^2)*mt^4*s14^2*s23 - 1/4*denom(1/4*s12^2)*mt^4*s13*s24^2 - 1/2*
      denom(1/4*s12^2)*mt^4*s13*s23*s24 - 1/4*denom(1/4*s12^2)*mt^4*s13^2*s24
       - 1/8*denom(1/4*s12^2)*mt^4*s13^2*s23 + 1/8*denom(1/4*s12^2)*mt^6*s24^2
       + 1/4*denom(1/4*s12^2)*mt^6*s23*s24 - 3/8*denom(1/4*s12^2)*mt^6*s23^2
       - 3/4*denom(1/4*s12^2)*mt^6*s14*s23 - 1/8*denom(1/4*s12^2)*mt^6*s14^2
       + 1/2*denom(1/4*s12^2)*mt^6*s13*s24 + 1/4*denom(1/4*s12^2)*mt^6*s13*s23
       + 1/8*denom(1/4*s12^2)*mt^6*s13^2 - 1/4*denom(1/4*s12^2)*mt^8*s24 + 1/4
      *denom(1/4*s12^2)*mt^8*s23 + 1/4*denom(1/4*s12^2)*mt^8*s14 - 1/4*denom(1/
      4*s12^2)*mt^8*s13;
 
 .sort
id KMatrix(1,30) =   - mt^2*s13*s24 - mt^2*s13*s23 - mt^2*s13*s14 - mt^2*s13^2
       - mt^2*s12*s13 + mt^2*mh^2*s13 + mt^4*s24 + mt^4*s23 - mt^4*s14 + 3*
      mt^4*s13 + mt^4*s12 - mt^4*mh^2 + 1/2*denom(1/2*s12)*s13^2*s23*s24 + 1/2
      *denom(1/2*s12)*s13^2*s23^2 + 1/2*denom(1/2*s12)*s13^2*s14*s23 + 1/2*
      denom(1/2*s12)*s13^3*s23 + 1/2*denom(1/2*s12)*s12*s13^2*s23 - 1/2*denom(
      1/2*s12)*mh^2*s13^2*s23 - denom(1/2*s12)*mt^2*s13*s23*s24 - denom(1/2*
      s12)*mt^2*s13*s23^2 + 1/2*denom(1/2*s12)*mt^2*s13*s14*s23 - denom(1/2*
      s12)*mt^2*s13^2*s24 - 5/2*denom(1/2*s12)*mt^2*s13^2*s23 - 1/2*denom(1/2*
      s12)*mt^2*s13^2*s14 - 1/2*denom(1/2*s12)*mt^2*s13^3 - denom(1/2*s12)*
      mt^2*s12*s13*s23 - 1/2*denom(1/2*s12)*mt^2*s12*s13^2 + denom(1/2*s12)*
      mt^2*mh^2*s13*s23 + 1/2*denom(1/2*s12)*mt^2*mh^2*s13^2 + 1/2*denom(1/2*
      s12)*mt^4*s23*s24 + 1/2*denom(1/2*s12)*mt^4*s23^2 - denom(1/2*s12)*mt^4*
      s14*s23 + 2*denom(1/2*s12)*mt^4*s13*s24 + 2*denom(1/2*s12)*mt^4*s13*s23
       - 1/2*denom(1/2*s12)*mt^4*s13*s14 + 5/2*denom(1/2*s12)*mt^4*s13^2 + 1/2
      *denom(1/2*s12)*mt^4*s12*s23 + denom(1/2*s12)*mt^4*s12*s13 - 1/2*denom(1/
      2*s12)*mt^4*mh^2*s23 - denom(1/2*s12)*mt^4*mh^2*s13 - denom(1/2*s12)*
      mt^6*s24 + denom(1/2*s12)*mt^6*s14 - 2*denom(1/2*s12)*mt^6*s13 - 1/2*
      denom(1/2*s12)*mt^6*s12 + 1/2*denom(1/2*s12)*mt^6*mh^2 - 1/4*denom(1/4*
      s12^2)*s13^2*s14*s23^2 + 1/4*denom(1/4*s12^2)*s13^3*s23*s24 + 1/2*denom(
      1/4*s12^2)*mt^2*s13*s14*s23^2 - 3/4*denom(1/4*s12^2)*mt^2*s13^2*s23*s24
       + 1/4*denom(1/4*s12^2)*mt^2*s13^2*s23^2 + 1/2*denom(1/4*s12^2)*mt^2*
      s13^2*s14*s23 - 1/4*denom(1/4*s12^2)*mt^2*s13^3*s24 - 1/4*denom(1/4*
      s12^2)*mt^2*s13^3*s23 - 1/4*denom(1/4*s12^2)*mt^4*s14*s23^2 + 3/4*denom(
      1/4*s12^2)*mt^4*s13*s23*s24 - 1/2*denom(1/4*s12^2)*mt^4*s13*s23^2 - 
      denom(1/4*s12^2)*mt^4*s13*s14*s23 + 3/4*denom(1/4*s12^2)*mt^4*s13^2*s24
       + 1/4*denom(1/4*s12^2)*mt^4*s13^2*s23 - 1/4*denom(1/4*s12^2)*mt^4*s13^2
      *s14 + 1/4*denom(1/4*s12^2)*mt^4*s13^3 - 1/4*denom(1/4*s12^2)*mt^6*s23*
      s24 + 1/4*denom(1/4*s12^2)*mt^6*s23^2 + 1/2*denom(1/4*s12^2)*mt^6*s14*
      s23 - 3/4*denom(1/4*s12^2)*mt^6*s13*s24 + 1/4*denom(1/4*s12^2)*mt^6*s13*
      s23 + 1/2*denom(1/4*s12^2)*mt^6*s13*s14 - 1/2*denom(1/4*s12^2)*mt^6*
      s13^2 + 1/4*denom(1/4*s12^2)*mt^8*s24 - 1/4*denom(1/4*s12^2)*mt^8*s23 - 
      1/4*denom(1/4*s12^2)*mt^8*s14 + 1/4*denom(1/4*s12^2)*mt^8*s13;
 
 .sort
id KMatrix(1,31) =   - mt^2*s23*s24 - mt^2*s23^2 - mt^2*s14*s23 - mt^2*s13*s23
       - mt^2*s12*s23 + mt^2*mh^2*s23 - mt^4*s24 + 3*mt^4*s23 + mt^4*s14 + 
      mt^4*s13 + mt^4*s12 - mt^4*mh^2 + 1/2*denom(1/2*s12)*s13*s23^2*s24 + 1/2
      *denom(1/2*s12)*s13*s23^3 + 1/2*denom(1/2*s12)*s13*s14*s23^2 + 1/2*
      denom(1/2*s12)*s13^2*s23^2 + 1/2*denom(1/2*s12)*s12*s13*s23^2 - 1/2*
      denom(1/2*s12)*mh^2*s13*s23^2 - 1/2*denom(1/2*s12)*mt^2*s23^2*s24 - 1/2*
      denom(1/2*s12)*mt^2*s23^3 - denom(1/2*s12)*mt^2*s14*s23^2 + 1/2*denom(1/
      2*s12)*mt^2*s13*s23*s24 - 5/2*denom(1/2*s12)*mt^2*s13*s23^2 - denom(1/2*
      s12)*mt^2*s13*s14*s23 - denom(1/2*s12)*mt^2*s13^2*s23 - 1/2*denom(1/2*
      s12)*mt^2*s12*s23^2 - denom(1/2*s12)*mt^2*s12*s13*s23 + 1/2*denom(1/2*
      s12)*mt^2*mh^2*s23^2 + denom(1/2*s12)*mt^2*mh^2*s13*s23 - 1/2*denom(1/2*
      s12)*mt^4*s23*s24 + 5/2*denom(1/2*s12)*mt^4*s23^2 + 2*denom(1/2*s12)*
      mt^4*s14*s23 - denom(1/2*s12)*mt^4*s13*s24 + 2*denom(1/2*s12)*mt^4*s13*
      s23 + 1/2*denom(1/2*s12)*mt^4*s13*s14 + 1/2*denom(1/2*s12)*mt^4*s13^2 + 
      denom(1/2*s12)*mt^4*s12*s23 + 1/2*denom(1/2*s12)*mt^4*s12*s13 - denom(1/
      2*s12)*mt^4*mh^2*s23 - 1/2*denom(1/2*s12)*mt^4*mh^2*s13 + denom(1/2*s12)
      *mt^6*s24 - 2*denom(1/2*s12)*mt^6*s23 - denom(1/2*s12)*mt^6*s14 - 1/2*
      denom(1/2*s12)*mt^6*s12 + 1/2*denom(1/2*s12)*mt^6*mh^2 + 1/4*denom(1/4*
      s12^2)*s13*s14*s23^3 - 1/4*denom(1/4*s12^2)*s13^2*s23^2*s24 - 1/4*denom(
      1/4*s12^2)*mt^2*s14*s23^3 + 1/2*denom(1/4*s12^2)*mt^2*s13*s23^2*s24 - 1/
      4*denom(1/4*s12^2)*mt^2*s13*s23^3 - 3/4*denom(1/4*s12^2)*mt^2*s13*s14*
      s23^2 + 1/2*denom(1/4*s12^2)*mt^2*s13^2*s23*s24 + 1/4*denom(1/4*s12^2)*
      mt^2*s13^2*s23^2 - 1/4*denom(1/4*s12^2)*mt^4*s23^2*s24 + 1/4*denom(1/4*
      s12^2)*mt^4*s23^3 + 3/4*denom(1/4*s12^2)*mt^4*s14*s23^2 - denom(1/4*
      s12^2)*mt^4*s13*s23*s24 + 1/4*denom(1/4*s12^2)*mt^4*s13*s23^2 + 3/4*
      denom(1/4*s12^2)*mt^4*s13*s14*s23 - 1/4*denom(1/4*s12^2)*mt^4*s13^2*s24
       - 1/2*denom(1/4*s12^2)*mt^4*s13^2*s23 + 1/2*denom(1/4*s12^2)*mt^6*s23*
      s24 - 1/2*denom(1/4*s12^2)*mt^6*s23^2 - 3/4*denom(1/4*s12^2)*mt^6*s14*
      s23 + 1/2*denom(1/4*s12^2)*mt^6*s13*s24 + 1/4*denom(1/4*s12^2)*mt^6*s13*
      s23 - 1/4*denom(1/4*s12^2)*mt^6*s13*s14 + 1/4*denom(1/4*s12^2)*mt^6*
      s13^2 - 1/4*denom(1/4*s12^2)*mt^8*s24 + 1/4*denom(1/4*s12^2)*mt^8*s23 + 
      1/4*denom(1/4*s12^2)*mt^8*s14 - 1/4*denom(1/4*s12^2)*mt^8*s13;
 
 .sort
id KMatrix(1,32) =  1/2*s13*s24^2 + s13*s23*s24 + 1/2*s13*s23^2 + s13*s14*s24
       + s13*s14*s23 + 1/2*s13*s14^2 + s13^2*s24 + s13^2*s23 + s13^2*s14 + 1/2
      *s13^3 + s12*s13*s24 + s12*s13*s23 + s12*s13*s14 + s12*s13^2 + 1/2*s12^2
      *s13 - mh^2*s13*s24 - mh^2*s13*s23 - mh^2*s13*s14 - mh^2*s13^2 - mh^2*
      s12*s13 + 1/2*mh^4*s13 - 1/2*mt^2*s24^2 - mt^2*s23*s24 - 1/2*mt^2*s23^2
       + 1/2*mt^2*s14^2 - 3*mt^2*s13*s24 - 3*mt^2*s13*s23 - 2*mt^2*s13*s14 - 5/
      2*mt^2*s13^2 - mt^2*s12*s24 - mt^2*s12*s23 - 3*mt^2*s12*s13 - 1/2*mt^2*
      s12^2 + mt^2*mh^2*s24 + mt^2*mh^2*s23 + 3*mt^2*mh^2*s13 + mt^2*mh^2*s12
       - 1/2*mt^2*mh^4 + mt^4*s24 + mt^4*s23 - mt^4*s14 + 3*mt^4*s13 + mt^4*
      s12 - mt^4*mh^2 + 1/2*denom(1/2*s12)*s13^2*s24^2 + 1/2*denom(1/2*s12)*
      s13^2*s23*s24 + 1/2*denom(1/2*s12)*s13^2*s14*s24 + 1/2*denom(1/2*s12)*
      s13^3*s24 + 1/2*denom(1/2*s12)*s12*s13^2*s24 - 1/2*denom(1/2*s12)*mh^2*
      s13^2*s24 + 1/2*denom(1/2*s12)*mt^2*s14^2*s23 - denom(1/2*s12)*mt^2*s13*
      s24^2 - denom(1/2*s12)*mt^2*s13*s23*s24 - 1/2*denom(1/2*s12)*mt^2*s13*
      s14*s24 - 5/2*denom(1/2*s12)*mt^2*s13^2*s24 - 1/2*denom(1/2*s12)*mt^2*
      s13^2*s23 - 1/2*denom(1/2*s12)*mt^2*s13^2*s14 - 1/2*denom(1/2*s12)*mt^2*
      s13^3 - denom(1/2*s12)*mt^2*s12*s13*s24 - 1/2*denom(1/2*s12)*mt^2*s12*
      s13^2 + denom(1/2*s12)*mt^2*mh^2*s13*s24 + 1/2*denom(1/2*s12)*mt^2*mh^2*
      s13^2 + 1/2*denom(1/2*s12)*mt^4*s24^2 + 1/2*denom(1/2*s12)*mt^4*s23*s24
       - denom(1/2*s12)*mt^4*s14*s23 - 1/2*denom(1/2*s12)*mt^4*s14^2 + 3*
      denom(1/2*s12)*mt^4*s13*s24 + denom(1/2*s12)*mt^4*s13*s23 + 1/2*denom(1/
      2*s12)*mt^4*s13*s14 + 2*denom(1/2*s12)*mt^4*s13^2 + 1/2*denom(1/2*s12)*
      mt^4*s12*s24 + denom(1/2*s12)*mt^4*s12*s13 - 1/2*denom(1/2*s12)*mt^4*
      mh^2*s24 - denom(1/2*s12)*mt^4*mh^2*s13 - denom(1/2*s12)*mt^6*s24 + 
      denom(1/2*s12)*mt^6*s14 - 2*denom(1/2*s12)*mt^6*s13 - 1/2*denom(1/2*s12)
      *mt^6*s12 + 1/2*denom(1/2*s12)*mt^6*mh^2 - 1/8*denom(1/4*s12^2)*s13*
      s14^2*s23^2 + 1/8*denom(1/4*s12^2)*s13^3*s24^2 + 1/8*denom(1/4*s12^2)*
      mt^2*s14^2*s23^2 + 1/4*denom(1/4*s12^2)*mt^2*s13*s14*s23^2 + 1/4*denom(1/
      4*s12^2)*mt^2*s13*s14^2*s23 - 3/8*denom(1/4*s12^2)*mt^2*s13^2*s24^2 - 1/
      4*denom(1/4*s12^2)*mt^2*s13^3*s24 - 1/4*denom(1/4*s12^2)*mt^4*s14*s23^2
       - 1/4*denom(1/4*s12^2)*mt^4*s14^2*s23 + 3/8*denom(1/4*s12^2)*mt^4*s13*
      s24^2 - 1/8*denom(1/4*s12^2)*mt^4*s13*s23^2 - 1/2*denom(1/4*s12^2)*mt^4*
      s13*s14*s23 - 1/8*denom(1/4*s12^2)*mt^4*s13*s14^2 + 3/4*denom(1/4*s12^2)
      *mt^4*s13^2*s24 + 1/8*denom(1/4*s12^2)*mt^4*s13^3 - 1/8*denom(1/4*s12^2)
      *mt^6*s24^2 + 1/8*denom(1/4*s12^2)*mt^6*s23^2 + 1/2*denom(1/4*s12^2)*
      mt^6*s14*s23 + 1/8*denom(1/4*s12^2)*mt^6*s14^2 - 3/4*denom(1/4*s12^2)*
      mt^6*s13*s24 + 1/4*denom(1/4*s12^2)*mt^6*s13*s23 + 1/4*denom(1/4*s12^2)*
      mt^6*s13*s14 - 3/8*denom(1/4*s12^2)*mt^6*s13^2 + 1/4*denom(1/4*s12^2)*
      mt^8*s24 - 1/4*denom(1/4*s12^2)*mt^8*s23 - 1/4*denom(1/4*s12^2)*mt^8*s14
       + 1/4*denom(1/4*s12^2)*mt^8*s13;
 
 .sort
id KMatrix(1,33) =  1/2*s23*s24^2 + s23^2*s24 + 1/2*s23^3 + s14*s23*s24 + s14*
      s23^2 + 1/2*s14^2*s23 + s13*s23*s24 + s13*s23^2 + s13*s14*s23 + 1/2*
      s13^2*s23 + s12*s23*s24 + s12*s23^2 + s12*s14*s23 + s12*s13*s23 + 1/2*
      s12^2*s23 - mh^2*s23*s24 - mh^2*s23^2 - mh^2*s14*s23 - mh^2*s13*s23 - 
      mh^2*s12*s23 + 1/2*mh^4*s23 + 1/2*mt^2*s24^2 - 2*mt^2*s23*s24 - 5/2*mt^2
      *s23^2 - 3*mt^2*s14*s23 - 1/2*mt^2*s14^2 - 3*mt^2*s13*s23 - mt^2*s13*s14
       - 1/2*mt^2*s13^2 - 3*mt^2*s12*s23 - mt^2*s12*s14 - mt^2*s12*s13 - 1/2*
      mt^2*s12^2 + 3*mt^2*mh^2*s23 + mt^2*mh^2*s14 + mt^2*mh^2*s13 + mt^2*mh^2
      *s12 - 1/2*mt^2*mh^4 - mt^4*s24 + 3*mt^4*s23 + mt^4*s14 + mt^4*s13 + 
      mt^4*s12 - mt^4*mh^2 + 1/2*denom(1/2*s12)*s14*s23^2*s24 + 1/2*denom(1/2*
      s12)*s14*s23^3 + 1/2*denom(1/2*s12)*s14^2*s23^2 + 1/2*denom(1/2*s12)*s13
      *s14*s23^2 + 1/2*denom(1/2*s12)*s12*s14*s23^2 - 1/2*denom(1/2*s12)*mh^2*
      s14*s23^2 - 1/2*denom(1/2*s12)*mt^2*s23^2*s24 - 1/2*denom(1/2*s12)*mt^2*
      s23^3 - 1/2*denom(1/2*s12)*mt^2*s14*s23*s24 - 5/2*denom(1/2*s12)*mt^2*
      s14*s23^2 - denom(1/2*s12)*mt^2*s14^2*s23 + 1/2*denom(1/2*s12)*mt^2*s13*
      s24^2 - 1/2*denom(1/2*s12)*mt^2*s13*s23^2 - denom(1/2*s12)*mt^2*s13*s14*
      s23 - 1/2*denom(1/2*s12)*mt^2*s12*s23^2 - denom(1/2*s12)*mt^2*s12*s14*
      s23 + 1/2*denom(1/2*s12)*mt^2*mh^2*s23^2 + denom(1/2*s12)*mt^2*mh^2*s14*
      s23 - 1/2*denom(1/2*s12)*mt^4*s24^2 + 1/2*denom(1/2*s12)*mt^4*s23*s24 + 
      2*denom(1/2*s12)*mt^4*s23^2 + 3*denom(1/2*s12)*mt^4*s14*s23 + 1/2*denom(
      1/2*s12)*mt^4*s14^2 - denom(1/2*s12)*mt^4*s13*s24 + denom(1/2*s12)*mt^4*
      s13*s23 + 1/2*denom(1/2*s12)*mt^4*s13*s14 + denom(1/2*s12)*mt^4*s12*s23
       + 1/2*denom(1/2*s12)*mt^4*s12*s14 - denom(1/2*s12)*mt^4*mh^2*s23 - 1/2*
      denom(1/2*s12)*mt^4*mh^2*s14 + denom(1/2*s12)*mt^6*s24 - 2*denom(1/2*s12
      )*mt^6*s23 - denom(1/2*s12)*mt^6*s14 - 1/2*denom(1/2*s12)*mt^6*s12 + 1/2
      *denom(1/2*s12)*mt^6*mh^2 + 1/8*denom(1/4*s12^2)*s14^2*s23^3 - 1/8*
      denom(1/4*s12^2)*s13^2*s23*s24^2 - 1/4*denom(1/4*s12^2)*mt^2*s14*s23^3
       - 3/8*denom(1/4*s12^2)*mt^2*s14^2*s23^2 + 1/4*denom(1/4*s12^2)*mt^2*s13
      *s23*s24^2 + 1/8*denom(1/4*s12^2)*mt^2*s13^2*s24^2 + 1/4*denom(1/4*s12^2
      )*mt^2*s13^2*s23*s24 - 1/8*denom(1/4*s12^2)*mt^4*s23*s24^2 + 1/8*denom(1/
      4*s12^2)*mt^4*s23^3 + 3/4*denom(1/4*s12^2)*mt^4*s14*s23^2 + 3/8*denom(1/
      4*s12^2)*mt^4*s14^2*s23 - 1/4*denom(1/4*s12^2)*mt^4*s13*s24^2 - 1/2*
      denom(1/4*s12^2)*mt^4*s13*s23*s24 - 1/4*denom(1/4*s12^2)*mt^4*s13^2*s24
       - 1/8*denom(1/4*s12^2)*mt^4*s13^2*s23 + 1/8*denom(1/4*s12^2)*mt^6*s24^2
       + 1/4*denom(1/4*s12^2)*mt^6*s23*s24 - 3/8*denom(1/4*s12^2)*mt^6*s23^2
       - 3/4*denom(1/4*s12^2)*mt^6*s14*s23 - 1/8*denom(1/4*s12^2)*mt^6*s14^2
       + 1/2*denom(1/4*s12^2)*mt^6*s13*s24 + 1/4*denom(1/4*s12^2)*mt^6*s13*s23
       + 1/8*denom(1/4*s12^2)*mt^6*s13^2 - 1/4*denom(1/4*s12^2)*mt^8*s24 + 1/4
      *denom(1/4*s12^2)*mt^8*s23 + 1/4*denom(1/4*s12^2)*mt^8*s14 - 1/4*denom(1/
      4*s12^2)*mt^8*s13;
 
 .sort
id KMatrix(1,34) =  2*mt^3*s14 - 2*mt^3*s13 - 2*denom(1/2*s12)*mt*s13*s14*s23
       + 2*denom(1/2*s12)*mt*s13^2*s23 + 2*denom(1/2*s12)*mt^3*s14*s23 - 2*
      denom(1/2*s12)*mt^3*s13*s23 + 2*denom(1/2*s12)*mt^3*s13*s14 - 2*denom(1/
      2*s12)*mt^3*s13^2 - 2*denom(1/2*s12)*mt^5*s14 + 2*denom(1/2*s12)*mt^5*
      s13 + 1/2*denom(1/4*s12^2)*mt*s12*s13*s14*s23 - 1/2*denom(1/4*s12^2)*mt*
      s12*s13^2*s23 - 1/2*denom(1/4*s12^2)*mt^3*s12*s14*s23 + 1/2*denom(1/4*
      s12^2)*mt^3*s12*s13*s23 - 1/2*denom(1/4*s12^2)*mt^3*s12*s13*s14 + 1/2*
      denom(1/4*s12^2)*mt^3*s12*s13^2 + 1/2*denom(1/4*s12^2)*mt^5*s12*s14 - 1/
      2*denom(1/4*s12^2)*mt^5*s12*s13;
 
 .sort
id KMatrix(1,35) =  2*mt^3*s24 - 2*mt^3*s23 - 2*denom(1/2*s12)*mt*s13*s23*s24
       + 2*denom(1/2*s12)*mt*s13*s23^2 + 2*denom(1/2*s12)*mt^3*s23*s24 - 2*
      denom(1/2*s12)*mt^3*s23^2 + 2*denom(1/2*s12)*mt^3*s13*s24 - 2*denom(1/2*
      s12)*mt^3*s13*s23 - 2*denom(1/2*s12)*mt^5*s24 + 2*denom(1/2*s12)*mt^5*
      s23 + 1/2*denom(1/4*s12^2)*mt*s12*s13*s23*s24 - 1/2*denom(1/4*s12^2)*mt*
      s12*s13*s23^2 - 1/2*denom(1/4*s12^2)*mt^3*s12*s23*s24 + 1/2*denom(1/4*
      s12^2)*mt^3*s12*s23^2 - 1/2*denom(1/4*s12^2)*mt^3*s12*s13*s24 + 1/2*
      denom(1/4*s12^2)*mt^3*s12*s13*s23 + 1/2*denom(1/4*s12^2)*mt^5*s12*s24 - 
      1/2*denom(1/4*s12^2)*mt^5*s12*s23;
 
 .sort
id KMatrix(1,36) =  mt^2*s14*s23 - mt^2*s13*s24 - mt^2*s12*s24 - mt^2*s12*s23
       - mt^2*s12*s14 - mt^2*s12*s13 - mt^2*s12^2 + mt^2*mh^2*s12 + mt^4*s24
       - mt^4*s23 - mt^4*s14 + mt^4*s13 - denom(1/2*s12)*s13*s14*s23^2 + 
      denom(1/2*s12)*s13^2*s23*s24 + denom(1/2*s12)*s12*s13*s23*s24 + denom(1/
      2*s12)*s12*s13*s23^2 + denom(1/2*s12)*s12*s13*s14*s23 + denom(1/2*s12)*
      s12*s13^2*s23 + denom(1/2*s12)*s12^2*s13*s23 - denom(1/2*s12)*mh^2*s12*
      s13*s23 + denom(1/2*s12)*mt^2*s14*s23^2 - 2*denom(1/2*s12)*mt^2*s13*s23*
      s24 + denom(1/2*s12)*mt^2*s13*s23^2 + 2*denom(1/2*s12)*mt^2*s13*s14*s23
       - denom(1/2*s12)*mt^2*s13^2*s24 - denom(1/2*s12)*mt^2*s13^2*s23 - 
      denom(1/2*s12)*mt^2*s12*s23*s24 - denom(1/2*s12)*mt^2*s12*s23^2 - denom(
      1/2*s12)*mt^2*s12*s14*s23 - denom(1/2*s12)*mt^2*s12*s13*s24 - 2*denom(1/
      2*s12)*mt^2*s12*s13*s23 - denom(1/2*s12)*mt^2*s12*s13*s14 - denom(1/2*
      s12)*mt^2*s12*s13^2 - denom(1/2*s12)*mt^2*s12^2*s23 - denom(1/2*s12)*
      mt^2*s12^2*s13 + denom(1/2*s12)*mt^2*mh^2*s12*s23 + denom(1/2*s12)*mt^2*
      mh^2*s12*s13 + denom(1/2*s12)*mt^4*s23*s24 - denom(1/2*s12)*mt^4*s23^2
       - 2*denom(1/2*s12)*mt^4*s14*s23 + 2*denom(1/2*s12)*mt^4*s13*s24 - 
      denom(1/2*s12)*mt^4*s13*s14 + denom(1/2*s12)*mt^4*s13^2 + denom(1/2*s12)
      *mt^4*s12*s24 + denom(1/2*s12)*mt^4*s12*s23 + denom(1/2*s12)*mt^4*s12*
      s14 + denom(1/2*s12)*mt^4*s12*s13 + denom(1/2*s12)*mt^4*s12^2 - denom(1/
      2*s12)*mt^4*mh^2*s12 - denom(1/2*s12)*mt^6*s24 + denom(1/2*s12)*mt^6*s23
       + denom(1/2*s12)*mt^6*s14 - denom(1/2*s12)*mt^6*s13 + 1/4*denom(1/4*
      s12^2)*s12*s13*s14*s23^2 - 1/4*denom(1/4*s12^2)*s12*s13^2*s23*s24 - 1/4*
      denom(1/4*s12^2)*s12^2*s13*s23*s24 - 1/4*denom(1/4*s12^2)*s12^2*s13*
      s23^2 - 1/4*denom(1/4*s12^2)*s12^2*s13*s14*s23 - 1/4*denom(1/4*s12^2)*
      s12^2*s13^2*s23 - 1/4*denom(1/4*s12^2)*s12^3*s13*s23 + 1/4*denom(1/4*
      s12^2)*mh^2*s12^2*s13*s23 - 1/4*denom(1/4*s12^2)*mt^2*s12*s14*s23^2 + 1/
      2*denom(1/4*s12^2)*mt^2*s12*s13*s23*s24 - 1/4*denom(1/4*s12^2)*mt^2*s12*
      s13*s23^2 - 1/2*denom(1/4*s12^2)*mt^2*s12*s13*s14*s23 + 1/4*denom(1/4*
      s12^2)*mt^2*s12*s13^2*s24 + 1/4*denom(1/4*s12^2)*mt^2*s12*s13^2*s23 + 1/
      4*denom(1/4*s12^2)*mt^2*s12^2*s23*s24 + 1/4*denom(1/4*s12^2)*mt^2*s12^2*
      s23^2 + 1/4*denom(1/4*s12^2)*mt^2*s12^2*s14*s23 + 1/4*denom(1/4*s12^2)*
      mt^2*s12^2*s13*s24 + 1/2*denom(1/4*s12^2)*mt^2*s12^2*s13*s23 + 1/4*
      denom(1/4*s12^2)*mt^2*s12^2*s13*s14 + 1/4*denom(1/4*s12^2)*mt^2*s12^2*
      s13^2 + 1/4*denom(1/4*s12^2)*mt^2*s12^3*s23 + 1/4*denom(1/4*s12^2)*mt^2*
      s12^3*s13 - 1/4*denom(1/4*s12^2)*mt^2*mh^2*s12^2*s23 - 1/4*denom(1/4*
      s12^2)*mt^2*mh^2*s12^2*s13 - 1/4*denom(1/4*s12^2)*mt^4*s12*s23*s24 + 1/4
      *denom(1/4*s12^2)*mt^4*s12*s23^2 + 1/2*denom(1/4*s12^2)*mt^4*s12*s14*s23
       - 1/2*denom(1/4*s12^2)*mt^4*s12*s13*s24 + 1/4*denom(1/4*s12^2)*mt^4*s12
      *s13*s14 - 1/4*denom(1/4*s12^2)*mt^4*s12*s13^2 - 1/4*denom(1/4*s12^2)*
      mt^4*s12^2*s24 - 1/4*denom(1/4*s12^2)*mt^4*s12^2*s23 - 1/4*denom(1/4*
      s12^2)*mt^4*s12^2*s14 - 1/4*denom(1/4*s12^2)*mt^4*s12^2*s13 - 1/4*denom(
      1/4*s12^2)*mt^4*s12^3 + 1/4*denom(1/4*s12^2)*mt^4*mh^2*s12^2 + 1/4*
      denom(1/4*s12^2)*mt^6*s12*s24 - 1/4*denom(1/4*s12^2)*mt^6*s12*s23 - 1/4*
      denom(1/4*s12^2)*mt^6*s12*s14 + 1/4*denom(1/4*s12^2)*mt^6*s12*s13;
 
 .sort
id KMatrix(2,1) =  mt^2*s24^2 + 2*mt^2*s23*s24 + mt^2*s23^2 + 2*mt^2*s14*s24
       + 2*mt^2*s14*s23 + mt^2*s14^2 + 2*mt^2*s13*s24 + 2*mt^2*s13*s23 + 2*
      mt^2*s13*s14 + mt^2*s13^2 + 2*mt^2*s12*s24 + 2*mt^2*s12*s23 + 2*mt^2*s12
      *s14 + 2*mt^2*s12*s13 + mt^2*s12^2 - 2*mt^2*mh^2*s24 - 2*mt^2*mh^2*s23
       - 2*mt^2*mh^2*s14 - 2*mt^2*mh^2*s13 - 2*mt^2*mh^2*s12 + mt^2*mh^4 - 2*
      mt^4*s24 - 2*mt^4*s23 - 2*mt^4*s14 - 2*mt^4*s13 - 2*mt^4*s12 + 2*mt^4*
      mh^2 - 1/2*denom(1/2*s12)*s13*s23*s24^2 - denom(1/2*s12)*s13*s23^2*s24
       - 1/2*denom(1/2*s12)*s13*s23^3 - denom(1/2*s12)*s13*s14*s23*s24 - 
      denom(1/2*s12)*s13*s14*s23^2 - 1/2*denom(1/2*s12)*s13*s14^2*s23 - denom(
      1/2*s12)*s13^2*s23*s24 - denom(1/2*s12)*s13^2*s23^2 - denom(1/2*s12)*
      s13^2*s14*s23 - 1/2*denom(1/2*s12)*s13^3*s23 - denom(1/2*s12)*s12*s13*
      s23*s24 - denom(1/2*s12)*s12*s13*s23^2 - denom(1/2*s12)*s12*s13*s14*s23
       - denom(1/2*s12)*s12*s13^2*s23 - 1/2*denom(1/2*s12)*s12^2*s13*s23 + 
      denom(1/2*s12)*mh^2*s13*s23*s24 + denom(1/2*s12)*mh^2*s13*s23^2 + denom(
      1/2*s12)*mh^2*s13*s14*s23 + denom(1/2*s12)*mh^2*s13^2*s23 + denom(1/2*
      s12)*mh^2*s12*s13*s23 - 1/2*denom(1/2*s12)*mh^4*s13*s23 + 1/2*denom(1/2*
      s12)*mt^2*s23*s24^2 + denom(1/2*s12)*mt^2*s23^2*s24 + 1/2*denom(1/2*s12)
      *mt^2*s23^3 + 3/2*denom(1/2*s12)*mt^2*s14*s23*s24 + 3/2*denom(1/2*s12)*
      mt^2*s14*s23^2 + denom(1/2*s12)*mt^2*s14^2*s23 + denom(1/2*s12)*mt^2*s13
      *s24^2 + 7/2*denom(1/2*s12)*mt^2*s13*s23*s24 + 5/2*denom(1/2*s12)*mt^2*
      s13*s23^2 + 3/2*denom(1/2*s12)*mt^2*s13*s14*s24 + 7/2*denom(1/2*s12)*
      mt^2*s13*s14*s23 + 1/2*denom(1/2*s12)*mt^2*s13*s14^2 + 3/2*denom(1/2*s12
      )*mt^2*s13^2*s24 + 5/2*denom(1/2*s12)*mt^2*s13^2*s23 + denom(1/2*s12)*
      mt^2*s13^2*s14 + 1/2*denom(1/2*s12)*mt^2*s13^3 + denom(1/2*s12)*mt^2*s12
      *s23*s24 + denom(1/2*s12)*mt^2*s12*s23^2 + 3/2*denom(1/2*s12)*mt^2*s12*
      s14*s23 + 3/2*denom(1/2*s12)*mt^2*s12*s13*s24 + 3*denom(1/2*s12)*mt^2*
      s12*s13*s23 + denom(1/2*s12)*mt^2*s12*s13*s14 + denom(1/2*s12)*mt^2*s12*
      s13^2 + 1/2*denom(1/2*s12)*mt^2*s12^2*s23 + 1/2*denom(1/2*s12)*mt^2*
      s12^2*s13 - denom(1/2*s12)*mt^2*mh^2*s23*s24 - denom(1/2*s12)*mt^2*mh^2*
      s23^2 - 3/2*denom(1/2*s12)*mt^2*mh^2*s14*s23 - 3/2*denom(1/2*s12)*mt^2*
      mh^2*s13*s24 - 3*denom(1/2*s12)*mt^2*mh^2*s13*s23 - denom(1/2*s12)*mt^2*
      mh^2*s13*s14 - denom(1/2*s12)*mt^2*mh^2*s13^2 - denom(1/2*s12)*mt^2*mh^2
      *s12*s23 - denom(1/2*s12)*mt^2*mh^2*s12*s13 + 1/2*denom(1/2*s12)*mt^2*
      mh^4*s23 + 1/2*denom(1/2*s12)*mt^2*mh^4*s13 - denom(1/2*s12)*mt^4*s24^2
       - 3*denom(1/2*s12)*mt^4*s23*s24 - 2*denom(1/2*s12)*mt^4*s23^2 - 2*
      denom(1/2*s12)*mt^4*s14*s24 - 3*denom(1/2*s12)*mt^4*s14*s23 - denom(1/2*
      s12)*mt^4*s14^2 - 3*denom(1/2*s12)*mt^4*s13*s24 - 4*denom(1/2*s12)*mt^4*
      s13*s23 - 3*denom(1/2*s12)*mt^4*s13*s14 - 2*denom(1/2*s12)*mt^4*s13^2 - 
      3/2*denom(1/2*s12)*mt^4*s12*s24 - 5/2*denom(1/2*s12)*mt^4*s12*s23 - 3/2*
      denom(1/2*s12)*mt^4*s12*s14 - 5/2*denom(1/2*s12)*mt^4*s12*s13 - 1/2*
      denom(1/2*s12)*mt^4*s12^2 + 3/2*denom(1/2*s12)*mt^4*mh^2*s24 + 5/2*
      denom(1/2*s12)*mt^4*mh^2*s23 + 3/2*denom(1/2*s12)*mt^4*mh^2*s14 + 5/2*
      denom(1/2*s12)*mt^4*mh^2*s13 + denom(1/2*s12)*mt^4*mh^2*s12 - 1/2*denom(
      1/2*s12)*mt^4*mh^4 + 2*denom(1/2*s12)*mt^6*s24 + 2*denom(1/2*s12)*mt^6*
      s23 + 2*denom(1/2*s12)*mt^6*s14 + 2*denom(1/2*s12)*mt^6*s13 + 2*denom(1/
      2*s12)*mt^6*s12 - 2*denom(1/2*s12)*mt^6*mh^2 - 1/4*denom(1/4*s12^2)*s13*
      s14*s23^2*s24 - 1/4*denom(1/4*s12^2)*s13*s14*s23^3 - 1/4*denom(1/4*s12^2
      )*s13*s14^2*s23^2 - 1/4*denom(1/4*s12^2)*s13^2*s23*s24^2 - 1/4*denom(1/4
      *s12^2)*s13^2*s23^2*s24 - 1/4*denom(1/4*s12^2)*s13^2*s14*s23*s24 - 1/4*
      denom(1/4*s12^2)*s13^2*s14*s23^2 - 1/4*denom(1/4*s12^2)*s13^3*s23*s24 - 
      1/4*denom(1/4*s12^2)*s12*s13*s14*s23^2 - 1/4*denom(1/4*s12^2)*s12*s13^2*
      s23*s24 + 1/4*denom(1/4*s12^2)*mh^2*s13*s14*s23^2 + 1/4*denom(1/4*s12^2)
      *mh^2*s13^2*s23*s24 + 1/4*denom(1/4*s12^2)*mt^2*s14*s23^2*s24 + 1/4*
      denom(1/4*s12^2)*mt^2*s14*s23^3 + 1/4*denom(1/4*s12^2)*mt^2*s14^2*s23^2
       + 1/2*denom(1/4*s12^2)*mt^2*s13*s23*s24^2 + 3/4*denom(1/4*s12^2)*mt^2*
      s13*s23^2*s24 + 1/4*denom(1/4*s12^2)*mt^2*s13*s23^3 + denom(1/4*s12^2)*
      mt^2*s13*s14*s23*s24 + denom(1/4*s12^2)*mt^2*s13*s14*s23^2 + 1/2*denom(1/
      4*s12^2)*mt^2*s13*s14^2*s23 + 1/4*denom(1/4*s12^2)*mt^2*s13^2*s24^2 + 
      denom(1/4*s12^2)*mt^2*s13^2*s23*s24 + 1/2*denom(1/4*s12^2)*mt^2*s13^2*
      s23^2 + 1/4*denom(1/4*s12^2)*mt^2*s13^2*s14*s24 + 3/4*denom(1/4*s12^2)*
      mt^2*s13^2*s14*s23 + 1/4*denom(1/4*s12^2)*mt^2*s13^3*s24 + 1/4*denom(1/4
      *s12^2)*mt^2*s13^3*s23 + 1/4*denom(1/4*s12^2)*mt^2*s12*s14*s23^2 + 1/2*
      denom(1/4*s12^2)*mt^2*s12*s13*s23*s24 + 1/4*denom(1/4*s12^2)*mt^2*s12*
      s13*s23^2 + 1/2*denom(1/4*s12^2)*mt^2*s12*s13*s14*s23 + 1/4*denom(1/4*
      s12^2)*mt^2*s12*s13^2*s24 + 1/4*denom(1/4*s12^2)*mt^2*s12*s13^2*s23 - 1/
      4*denom(1/4*s12^2)*mt^2*mh^2*s14*s23^2 - 1/2*denom(1/4*s12^2)*mt^2*mh^2*
      s13*s23*s24 - 1/4*denom(1/4*s12^2)*mt^2*mh^2*s13*s23^2 - 1/2*denom(1/4*
      s12^2)*mt^2*mh^2*s13*s14*s23 - 1/4*denom(1/4*s12^2)*mt^2*mh^2*s13^2*s24
       - 1/4*denom(1/4*s12^2)*mt^2*mh^2*s13^2*s23 - 1/4*denom(1/4*s12^2)*mt^4*
      s23*s24^2 - 1/2*denom(1/4*s12^2)*mt^4*s23^2*s24 - 1/4*denom(1/4*s12^2)*
      mt^4*s23^3 - 3/4*denom(1/4*s12^2)*mt^4*s14*s23*s24 - 3/4*denom(1/4*s12^2
      )*mt^4*s14*s23^2 - 1/2*denom(1/4*s12^2)*mt^4*s14^2*s23 - 1/2*denom(1/4*
      s12^2)*mt^4*s13*s24^2 - 7/4*denom(1/4*s12^2)*mt^4*s13*s23*s24 - 5/4*
      denom(1/4*s12^2)*mt^4*s13*s23^2 - 3/4*denom(1/4*s12^2)*mt^4*s13*s14*s24
       - 7/4*denom(1/4*s12^2)*mt^4*s13*s14*s23 - 1/4*denom(1/4*s12^2)*mt^4*s13
      *s14^2 - 3/4*denom(1/4*s12^2)*mt^4*s13^2*s24 - 5/4*denom(1/4*s12^2)*mt^4
      *s13^2*s23 - 1/2*denom(1/4*s12^2)*mt^4*s13^2*s14 - 1/4*denom(1/4*s12^2)*
      mt^4*s13^3 - 1/4*denom(1/4*s12^2)*mt^4*s12*s23*s24 - 1/4*denom(1/4*s12^2
      )*mt^4*s12*s23^2 - 1/2*denom(1/4*s12^2)*mt^4*s12*s14*s23 - 1/2*denom(1/4
      *s12^2)*mt^4*s12*s13*s24 - denom(1/4*s12^2)*mt^4*s12*s13*s23 - 1/4*
      denom(1/4*s12^2)*mt^4*s12*s13*s14 - 1/4*denom(1/4*s12^2)*mt^4*s12*s13^2
       + 1/4*denom(1/4*s12^2)*mt^4*mh^2*s23*s24 + 1/4*denom(1/4*s12^2)*mt^4*
      mh^2*s23^2 + 1/2*denom(1/4*s12^2)*mt^4*mh^2*s14*s23 + 1/2*denom(1/4*
      s12^2)*mt^4*mh^2*s13*s24 + denom(1/4*s12^2)*mt^4*mh^2*s13*s23 + 1/4*
      denom(1/4*s12^2)*mt^4*mh^2*s13*s14 + 1/4*denom(1/4*s12^2)*mt^4*mh^2*
      s13^2 + 1/4*denom(1/4*s12^2)*mt^6*s24^2 + denom(1/4*s12^2)*mt^6*s23*s24
       + 3/4*denom(1/4*s12^2)*mt^6*s23^2 + 1/2*denom(1/4*s12^2)*mt^6*s14*s24
       + denom(1/4*s12^2)*mt^6*s14*s23 + 1/4*denom(1/4*s12^2)*mt^6*s14^2 + 
      denom(1/4*s12^2)*mt^6*s13*s24 + 3/2*denom(1/4*s12^2)*mt^6*s13*s23 + 
      denom(1/4*s12^2)*mt^6*s13*s14 + 3/4*denom(1/4*s12^2)*mt^6*s13^2 + 1/4*
      denom(1/4*s12^2)*mt^6*s12*s24 + 3/4*denom(1/4*s12^2)*mt^6*s12*s23 + 1/4*
      denom(1/4*s12^2)*mt^6*s12*s14 + 3/4*denom(1/4*s12^2)*mt^6*s12*s13 - 1/4*
      denom(1/4*s12^2)*mt^6*mh^2*s24 - 3/4*denom(1/4*s12^2)*mt^6*mh^2*s23 - 1/
      4*denom(1/4*s12^2)*mt^6*mh^2*s14 - 3/4*denom(1/4*s12^2)*mt^6*mh^2*s13 - 
      1/2*denom(1/4*s12^2)*mt^8*s24 - 1/2*denom(1/4*s12^2)*mt^8*s23 - 1/2*
      denom(1/4*s12^2)*mt^8*s14 - 1/2*denom(1/4*s12^2)*mt^8*s13 - 1/2*denom(1/
      4*s12^2)*mt^8*s12 + 1/2*denom(1/4*s12^2)*mt^8*mh^2;
 
 .sort
id KMatrix(2,2) =   - 2*mt^4*s24 - 2*mt^4*s23 - 2*mt^4*s14 - 2*mt^4*s13 - 2*
      mt^4*s12 + 2*mt^4*mh^2 + denom(1/2*s12)*mt^2*s14*s24^2 + denom(1/2*s12)*
      mt^2*s14*s23*s24 + denom(1/2*s12)*mt^2*s14^2*s24 + denom(1/2*s12)*mt^2*
      s13*s23*s24 + denom(1/2*s12)*mt^2*s13*s23^2 + denom(1/2*s12)*mt^2*s13*
      s14*s24 + denom(1/2*s12)*mt^2*s13*s14*s23 + denom(1/2*s12)*mt^2*s13^2*
      s23 + denom(1/2*s12)*mt^2*s12*s14*s24 + denom(1/2*s12)*mt^2*s12*s13*s23
       - denom(1/2*s12)*mt^2*mh^2*s14*s24 - denom(1/2*s12)*mt^2*mh^2*s13*s23
       - denom(1/2*s12)*mt^4*s24^2 - 2*denom(1/2*s12)*mt^4*s23*s24 - denom(1/2
      *s12)*mt^4*s23^2 - 2*denom(1/2*s12)*mt^4*s14*s24 - 2*denom(1/2*s12)*mt^4
      *s14*s23 - denom(1/2*s12)*mt^4*s14^2 - 2*denom(1/2*s12)*mt^4*s13*s24 - 2
      *denom(1/2*s12)*mt^4*s13*s23 - 2*denom(1/2*s12)*mt^4*s13*s14 - denom(1/2
      *s12)*mt^4*s13^2 - denom(1/2*s12)*mt^4*s12*s24 - denom(1/2*s12)*mt^4*s12
      *s23 - denom(1/2*s12)*mt^4*s12*s14 - denom(1/2*s12)*mt^4*s12*s13 + 
      denom(1/2*s12)*mt^4*mh^2*s24 + denom(1/2*s12)*mt^4*mh^2*s23 + denom(1/2*
      s12)*mt^4*mh^2*s14 + denom(1/2*s12)*mt^4*mh^2*s13 + 2*denom(1/2*s12)*
      mt^6*s24 + 2*denom(1/2*s12)*mt^6*s23 + 2*denom(1/2*s12)*mt^6*s14 + 2*
      denom(1/2*s12)*mt^6*s13 + 2*denom(1/2*s12)*mt^6*s12 - 2*denom(1/2*s12)*
      mt^6*mh^2 - 1/2*denom(1/4*s12^2)*s13*s14*s23*s24^2 - 1/2*denom(1/4*s12^2
      )*s13*s14*s23^2*s24 - 1/2*denom(1/4*s12^2)*s13*s14^2*s23*s24 - 1/2*
      denom(1/4*s12^2)*s13^2*s14*s23*s24 - 1/2*denom(1/4*s12^2)*s12*s13*s14*
      s23*s24 + 1/2*denom(1/4*s12^2)*mh^2*s13*s14*s23*s24 + 1/2*denom(1/4*
      s12^2)*mt^2*s14*s23*s24^2 + 1/2*denom(1/4*s12^2)*mt^2*s14*s23^2*s24 + 1/
      2*denom(1/4*s12^2)*mt^2*s14^2*s23*s24 + 1/2*denom(1/4*s12^2)*mt^2*s13*
      s23*s24^2 + 1/2*denom(1/4*s12^2)*mt^2*s13*s23^2*s24 + 1/2*denom(1/4*
      s12^2)*mt^2*s13*s14*s24^2 + 2*denom(1/4*s12^2)*mt^2*s13*s14*s23*s24 + 1/
      2*denom(1/4*s12^2)*mt^2*s13*s14*s23^2 + 1/2*denom(1/4*s12^2)*mt^2*s13*
      s14^2*s24 + 1/2*denom(1/4*s12^2)*mt^2*s13*s14^2*s23 + 1/2*denom(1/4*
      s12^2)*mt^2*s13^2*s23*s24 + 1/2*denom(1/4*s12^2)*mt^2*s13^2*s14*s24 + 1/
      2*denom(1/4*s12^2)*mt^2*s13^2*s14*s23 + 1/2*denom(1/4*s12^2)*mt^2*s12*
      s14*s23*s24 + 1/2*denom(1/4*s12^2)*mt^2*s12*s13*s23*s24 + 1/2*denom(1/4*
      s12^2)*mt^2*s12*s13*s14*s24 + 1/2*denom(1/4*s12^2)*mt^2*s12*s13*s14*s23
       - 1/2*denom(1/4*s12^2)*mt^2*mh^2*s14*s23*s24 - 1/2*denom(1/4*s12^2)*
      mt^2*mh^2*s13*s23*s24 - 1/2*denom(1/4*s12^2)*mt^2*mh^2*s13*s14*s24 - 1/2
      *denom(1/4*s12^2)*mt^2*mh^2*s13*s14*s23 - 1/2*denom(1/4*s12^2)*mt^4*s23*
      s24^2 - 1/2*denom(1/4*s12^2)*mt^4*s23^2*s24 - 1/2*denom(1/4*s12^2)*mt^4*
      s14*s24^2 - 3/2*denom(1/4*s12^2)*mt^4*s14*s23*s24 - 1/2*denom(1/4*s12^2)
      *mt^4*s14*s23^2 - 1/2*denom(1/4*s12^2)*mt^4*s14^2*s24 - 1/2*denom(1/4*
      s12^2)*mt^4*s14^2*s23 - 1/2*denom(1/4*s12^2)*mt^4*s13*s24^2 - 3/2*denom(
      1/4*s12^2)*mt^4*s13*s23*s24 - 1/2*denom(1/4*s12^2)*mt^4*s13*s23^2 - 3/2*
      denom(1/4*s12^2)*mt^4*s13*s14*s24 - 3/2*denom(1/4*s12^2)*mt^4*s13*s14*
      s23 - 1/2*denom(1/4*s12^2)*mt^4*s13*s14^2 - 1/2*denom(1/4*s12^2)*mt^4*
      s13^2*s24 - 1/2*denom(1/4*s12^2)*mt^4*s13^2*s23 - 1/2*denom(1/4*s12^2)*
      mt^4*s13^2*s14 - 1/2*denom(1/4*s12^2)*mt^4*s12*s23*s24 - 1/2*denom(1/4*
      s12^2)*mt^4*s12*s14*s24 - 1/2*denom(1/4*s12^2)*mt^4*s12*s14*s23 - 1/2*
      denom(1/4*s12^2)*mt^4*s12*s13*s24 - 1/2*denom(1/4*s12^2)*mt^4*s12*s13*
      s23 - 1/2*denom(1/4*s12^2)*mt^4*s12*s13*s14 + 1/2*denom(1/4*s12^2)*mt^4*
      mh^2*s23*s24 + 1/2*denom(1/4*s12^2)*mt^4*mh^2*s14*s24 + 1/2*denom(1/4*
      s12^2)*mt^4*mh^2*s14*s23 + 1/2*denom(1/4*s12^2)*mt^4*mh^2*s13*s24 + 1/2*
      denom(1/4*s12^2)*mt^4*mh^2*s13*s23 + 1/2*denom(1/4*s12^2)*mt^4*mh^2*s13*
      s14 + 1/2*denom(1/4*s12^2)*mt^6*s24^2 + denom(1/4*s12^2)*mt^6*s23*s24 + 
      1/2*denom(1/4*s12^2)*mt^6*s23^2 + denom(1/4*s12^2)*mt^6*s14*s24 + denom(
      1/4*s12^2)*mt^6*s14*s23 + 1/2*denom(1/4*s12^2)*mt^6*s14^2 + denom(1/4*
      s12^2)*mt^6*s13*s24 + denom(1/4*s12^2)*mt^6*s13*s23 + denom(1/4*s12^2)*
      mt^6*s13*s14 + 1/2*denom(1/4*s12^2)*mt^6*s13^2 + 1/2*denom(1/4*s12^2)*
      mt^6*s12*s24 + 1/2*denom(1/4*s12^2)*mt^6*s12*s23 + 1/2*denom(1/4*s12^2)*
      mt^6*s12*s14 + 1/2*denom(1/4*s12^2)*mt^6*s12*s13 - 1/2*denom(1/4*s12^2)*
      mt^6*mh^2*s24 - 1/2*denom(1/4*s12^2)*mt^6*mh^2*s23 - 1/2*denom(1/4*s12^2
      )*mt^6*mh^2*s14 - 1/2*denom(1/4*s12^2)*mt^6*mh^2*s13 - 1/2*denom(1/4*
      s12^2)*mt^8*s24 - 1/2*denom(1/4*s12^2)*mt^8*s23 - 1/2*denom(1/4*s12^2)*
      mt^8*s14 - 1/2*denom(1/4*s12^2)*mt^8*s13 - 1/2*denom(1/4*s12^2)*mt^8*s12
       + 1/2*denom(1/4*s12^2)*mt^8*mh^2;
 
 .sort
id KMatrix(2,3) =   - 1/2*s24^3 - 3/2*s23*s24^2 - 3/2*s23^2*s24 - 1/2*s23^3 - 
      3/2*s14*s24^2 - 3*s14*s23*s24 - 3/2*s14*s23^2 - 3/2*s14^2*s24 - 3/2*
      s14^2*s23 - 1/2*s14^3 - 3/2*s13*s24^2 - 3*s13*s23*s24 - 3/2*s13*s23^2 - 
      3*s13*s14*s24 - 3*s13*s14*s23 - 3/2*s13*s14^2 - 3/2*s13^2*s24 - 3/2*
      s13^2*s23 - 3/2*s13^2*s14 - 1/2*s13^3 - 3/2*s12*s24^2 - 3*s12*s23*s24 - 
      3/2*s12*s23^2 - 3*s12*s14*s24 - 3*s12*s14*s23 - 3/2*s12*s14^2 - 3*s12*
      s13*s24 - 3*s12*s13*s23 - 3*s12*s13*s14 - 3/2*s12*s13^2 - 3/2*s12^2*s24
       - 3/2*s12^2*s23 - 3/2*s12^2*s14 - 3/2*s12^2*s13 - 1/2*s12^3 + 3/2*mh^2*
      s24^2 + 3*mh^2*s23*s24 + 3/2*mh^2*s23^2 + 3*mh^2*s14*s24 + 3*mh^2*s14*
      s23 + 3/2*mh^2*s14^2 + 3*mh^2*s13*s24 + 3*mh^2*s13*s23 + 3*mh^2*s13*s14
       + 3/2*mh^2*s13^2 + 3*mh^2*s12*s24 + 3*mh^2*s12*s23 + 3*mh^2*s12*s14 + 3
      *mh^2*s12*s13 + 3/2*mh^2*s12^2 - 3/2*mh^4*s24 - 3/2*mh^4*s23 - 3/2*mh^4*
      s14 - 3/2*mh^4*s13 - 3/2*mh^4*s12 + 1/2*mh^6 + 2*mt^2*s24^2 + 4*mt^2*s23
      *s24 + 2*mt^2*s23^2 + 4*mt^2*s14*s24 + 4*mt^2*s14*s23 + 2*mt^2*s14^2 + 4
      *mt^2*s13*s24 + 4*mt^2*s13*s23 + 4*mt^2*s13*s14 + 2*mt^2*s13^2 + 4*mt^2*
      s12*s24 + 4*mt^2*s12*s23 + 4*mt^2*s12*s14 + 4*mt^2*s12*s13 + 2*mt^2*
      s12^2 - 4*mt^2*mh^2*s24 - 4*mt^2*mh^2*s23 - 4*mt^2*mh^2*s14 - 4*mt^2*
      mh^2*s13 - 4*mt^2*mh^2*s12 + 2*mt^2*mh^4 - 2*mt^4*s24 - 2*mt^4*s23 - 2*
      mt^4*s14 - 2*mt^4*s13 - 2*mt^4*s12 + 2*mt^4*mh^2 - 1/2*denom(1/2*s12)*
      s14*s23*s24^2 - denom(1/2*s12)*s14*s23^2*s24 - 1/2*denom(1/2*s12)*s14*
      s23^3 - denom(1/2*s12)*s14^2*s23*s24 - denom(1/2*s12)*s14^2*s23^2 - 1/2*
      denom(1/2*s12)*s14^3*s23 - 1/2*denom(1/2*s12)*s13*s24^3 - denom(1/2*s12)
      *s13*s23*s24^2 - 1/2*denom(1/2*s12)*s13*s23^2*s24 - denom(1/2*s12)*s13*
      s14*s24^2 - 2*denom(1/2*s12)*s13*s14*s23*s24 - denom(1/2*s12)*s13*s14*
      s23^2 - 1/2*denom(1/2*s12)*s13*s14^2*s24 - denom(1/2*s12)*s13*s14^2*s23
       - denom(1/2*s12)*s13^2*s24^2 - denom(1/2*s12)*s13^2*s23*s24 - denom(1/2
      *s12)*s13^2*s14*s24 - 1/2*denom(1/2*s12)*s13^2*s14*s23 - 1/2*denom(1/2*
      s12)*s13^3*s24 - denom(1/2*s12)*s12*s14*s23*s24 - denom(1/2*s12)*s12*s14
      *s23^2 - denom(1/2*s12)*s12*s14^2*s23 - denom(1/2*s12)*s12*s13*s24^2 - 
      denom(1/2*s12)*s12*s13*s23*s24 - denom(1/2*s12)*s12*s13*s14*s24 - denom(
      1/2*s12)*s12*s13*s14*s23 - denom(1/2*s12)*s12*s13^2*s24 - 1/2*denom(1/2*
      s12)*s12^2*s14*s23 - 1/2*denom(1/2*s12)*s12^2*s13*s24 + denom(1/2*s12)*
      mh^2*s14*s23*s24 + denom(1/2*s12)*mh^2*s14*s23^2 + denom(1/2*s12)*mh^2*
      s14^2*s23 + denom(1/2*s12)*mh^2*s13*s24^2 + denom(1/2*s12)*mh^2*s13*s23*
      s24 + denom(1/2*s12)*mh^2*s13*s14*s24 + denom(1/2*s12)*mh^2*s13*s14*s23
       + denom(1/2*s12)*mh^2*s13^2*s24 + denom(1/2*s12)*mh^2*s12*s14*s23 + 
      denom(1/2*s12)*mh^2*s12*s13*s24 - 1/2*denom(1/2*s12)*mh^4*s14*s23 - 1/2*
      denom(1/2*s12)*mh^4*s13*s24 + 1/2*denom(1/2*s12)*mt^2*s24^3 + 3/2*denom(
      1/2*s12)*mt^2*s23*s24^2 + 3/2*denom(1/2*s12)*mt^2*s23^2*s24 + 1/2*denom(
      1/2*s12)*mt^2*s23^3 + 3/2*denom(1/2*s12)*mt^2*s14*s24^2 + 4*denom(1/2*
      s12)*mt^2*s14*s23*s24 + 5/2*denom(1/2*s12)*mt^2*s14*s23^2 + 3/2*denom(1/
      2*s12)*mt^2*s14^2*s24 + 5/2*denom(1/2*s12)*mt^2*s14^2*s23 + 1/2*denom(1/
      2*s12)*mt^2*s14^3 + 5/2*denom(1/2*s12)*mt^2*s13*s24^2 + 4*denom(1/2*s12)
      *mt^2*s13*s23*s24 + 3/2*denom(1/2*s12)*mt^2*s13*s23^2 + 4*denom(1/2*s12)
      *mt^2*s13*s14*s24 + 4*denom(1/2*s12)*mt^2*s13*s14*s23 + 3/2*denom(1/2*
      s12)*mt^2*s13*s14^2 + 5/2*denom(1/2*s12)*mt^2*s13^2*s24 + 3/2*denom(1/2*
      s12)*mt^2*s13^2*s23 + 3/2*denom(1/2*s12)*mt^2*s13^2*s14 + 1/2*denom(1/2*
      s12)*mt^2*s13^3 + denom(1/2*s12)*mt^2*s12*s24^2 + 2*denom(1/2*s12)*mt^2*
      s12*s23*s24 + denom(1/2*s12)*mt^2*s12*s23^2 + 2*denom(1/2*s12)*mt^2*s12*
      s14*s24 + 3*denom(1/2*s12)*mt^2*s12*s14*s23 + denom(1/2*s12)*mt^2*s12*
      s14^2 + 3*denom(1/2*s12)*mt^2*s12*s13*s24 + 2*denom(1/2*s12)*mt^2*s12*
      s13*s23 + 2*denom(1/2*s12)*mt^2*s12*s13*s14 + denom(1/2*s12)*mt^2*s12*
      s13^2 + 1/2*denom(1/2*s12)*mt^2*s12^2*s24 + 1/2*denom(1/2*s12)*mt^2*
      s12^2*s23 + 1/2*denom(1/2*s12)*mt^2*s12^2*s14 + 1/2*denom(1/2*s12)*mt^2*
      s12^2*s13 - denom(1/2*s12)*mt^2*mh^2*s24^2 - 2*denom(1/2*s12)*mt^2*mh^2*
      s23*s24 - denom(1/2*s12)*mt^2*mh^2*s23^2 - 2*denom(1/2*s12)*mt^2*mh^2*
      s14*s24 - 3*denom(1/2*s12)*mt^2*mh^2*s14*s23 - denom(1/2*s12)*mt^2*mh^2*
      s14^2 - 3*denom(1/2*s12)*mt^2*mh^2*s13*s24 - 2*denom(1/2*s12)*mt^2*mh^2*
      s13*s23 - 2*denom(1/2*s12)*mt^2*mh^2*s13*s14 - denom(1/2*s12)*mt^2*mh^2*
      s13^2 - denom(1/2*s12)*mt^2*mh^2*s12*s24 - denom(1/2*s12)*mt^2*mh^2*s12*
      s23 - denom(1/2*s12)*mt^2*mh^2*s12*s14 - denom(1/2*s12)*mt^2*mh^2*s12*
      s13 + 1/2*denom(1/2*s12)*mt^2*mh^4*s24 + 1/2*denom(1/2*s12)*mt^2*mh^4*
      s23 + 1/2*denom(1/2*s12)*mt^2*mh^4*s14 + 1/2*denom(1/2*s12)*mt^2*mh^4*
      s13 - 2*denom(1/2*s12)*mt^4*s24^2 - 4*denom(1/2*s12)*mt^4*s23*s24 - 2*
      denom(1/2*s12)*mt^4*s23^2 - 4*denom(1/2*s12)*mt^4*s14*s24 - 4*denom(1/2*
      s12)*mt^4*s14*s23 - 2*denom(1/2*s12)*mt^4*s14^2 - 4*denom(1/2*s12)*mt^4*
      s13*s24 - 4*denom(1/2*s12)*mt^4*s13*s23 - 4*denom(1/2*s12)*mt^4*s13*s14
       - 2*denom(1/2*s12)*mt^4*s13^2 - 3*denom(1/2*s12)*mt^4*s12*s24 - 3*
      denom(1/2*s12)*mt^4*s12*s23 - 3*denom(1/2*s12)*mt^4*s12*s14 - 3*denom(1/
      2*s12)*mt^4*s12*s13 - denom(1/2*s12)*mt^4*s12^2 + 3*denom(1/2*s12)*mt^4*
      mh^2*s24 + 3*denom(1/2*s12)*mt^4*mh^2*s23 + 3*denom(1/2*s12)*mt^4*mh^2*
      s14 + 3*denom(1/2*s12)*mt^4*mh^2*s13 + 2*denom(1/2*s12)*mt^4*mh^2*s12 - 
      denom(1/2*s12)*mt^4*mh^4 + 2*denom(1/2*s12)*mt^6*s24 + 2*denom(1/2*s12)*
      mt^6*s23 + 2*denom(1/2*s12)*mt^6*s14 + 2*denom(1/2*s12)*mt^6*s13 + 2*
      denom(1/2*s12)*mt^6*s12 - 2*denom(1/2*s12)*mt^6*mh^2 - 1/8*denom(1/4*
      s12^2)*s14^2*s23^2*s24 - 1/8*denom(1/4*s12^2)*s14^2*s23^3 - 1/8*denom(1/
      4*s12^2)*s14^3*s23^2 - 1/4*denom(1/4*s12^2)*s13*s14*s23*s24^2 - 1/4*
      denom(1/4*s12^2)*s13*s14*s23^2*s24 - 1/4*denom(1/4*s12^2)*s13*s14^2*s23*
      s24 - 1/8*denom(1/4*s12^2)*s13*s14^2*s23^2 - 1/8*denom(1/4*s12^2)*s13^2*
      s24^3 - 1/8*denom(1/4*s12^2)*s13^2*s23*s24^2 - 1/8*denom(1/4*s12^2)*
      s13^2*s14*s24^2 - 1/4*denom(1/4*s12^2)*s13^2*s14*s23*s24 - 1/8*denom(1/4
      *s12^2)*s13^3*s24^2 - 1/8*denom(1/4*s12^2)*s12*s14^2*s23^2 - 1/4*denom(1/
      4*s12^2)*s12*s13*s14*s23*s24 - 1/8*denom(1/4*s12^2)*s12*s13^2*s24^2 + 1/
      8*denom(1/4*s12^2)*mh^2*s14^2*s23^2 + 1/4*denom(1/4*s12^2)*mh^2*s13*s14*
      s23*s24 + 1/8*denom(1/4*s12^2)*mh^2*s13^2*s24^2 + 1/4*denom(1/4*s12^2)*
      mt^2*s14*s23*s24^2 + 1/2*denom(1/4*s12^2)*mt^2*s14*s23^2*s24 + 1/4*
      denom(1/4*s12^2)*mt^2*s14*s23^3 + 1/2*denom(1/4*s12^2)*mt^2*s14^2*s23*
      s24 + 1/2*denom(1/4*s12^2)*mt^2*s14^2*s23^2 + 1/4*denom(1/4*s12^2)*mt^2*
      s14^3*s23 + 1/4*denom(1/4*s12^2)*mt^2*s13*s24^3 + 1/2*denom(1/4*s12^2)*
      mt^2*s13*s23*s24^2 + 1/4*denom(1/4*s12^2)*mt^2*s13*s23^2*s24 + 1/2*
      denom(1/4*s12^2)*mt^2*s13*s14*s24^2 + denom(1/4*s12^2)*mt^2*s13*s14*s23*
      s24 + 1/2*denom(1/4*s12^2)*mt^2*s13*s14*s23^2 + 1/4*denom(1/4*s12^2)*
      mt^2*s13*s14^2*s24 + 1/2*denom(1/4*s12^2)*mt^2*s13*s14^2*s23 + 1/2*
      denom(1/4*s12^2)*mt^2*s13^2*s24^2 + 1/2*denom(1/4*s12^2)*mt^2*s13^2*s23*
      s24 + 1/2*denom(1/4*s12^2)*mt^2*s13^2*s14*s24 + 1/4*denom(1/4*s12^2)*
      mt^2*s13^2*s14*s23 + 1/4*denom(1/4*s12^2)*mt^2*s13^3*s24 + 1/4*denom(1/4
      *s12^2)*mt^2*s12*s14*s23*s24 + 1/4*denom(1/4*s12^2)*mt^2*s12*s14*s23^2
       + 1/4*denom(1/4*s12^2)*mt^2*s12*s14^2*s23 + 1/4*denom(1/4*s12^2)*mt^2*
      s12*s13*s24^2 + 1/4*denom(1/4*s12^2)*mt^2*s12*s13*s23*s24 + 1/4*denom(1/
      4*s12^2)*mt^2*s12*s13*s14*s24 + 1/4*denom(1/4*s12^2)*mt^2*s12*s13*s14*
      s23 + 1/4*denom(1/4*s12^2)*mt^2*s12*s13^2*s24 - 1/4*denom(1/4*s12^2)*
      mt^2*mh^2*s14*s23*s24 - 1/4*denom(1/4*s12^2)*mt^2*mh^2*s14*s23^2 - 1/4*
      denom(1/4*s12^2)*mt^2*mh^2*s14^2*s23 - 1/4*denom(1/4*s12^2)*mt^2*mh^2*
      s13*s24^2 - 1/4*denom(1/4*s12^2)*mt^2*mh^2*s13*s23*s24 - 1/4*denom(1/4*
      s12^2)*mt^2*mh^2*s13*s14*s24 - 1/4*denom(1/4*s12^2)*mt^2*mh^2*s13*s14*
      s23 - 1/4*denom(1/4*s12^2)*mt^2*mh^2*s13^2*s24 - 1/8*denom(1/4*s12^2)*
      mt^4*s24^3 - 3/8*denom(1/4*s12^2)*mt^4*s23*s24^2 - 3/8*denom(1/4*s12^2)*
      mt^4*s23^2*s24 - 1/8*denom(1/4*s12^2)*mt^4*s23^3 - 3/8*denom(1/4*s12^2)*
      mt^4*s14*s24^2 - 5/4*denom(1/4*s12^2)*mt^4*s14*s23*s24 - 7/8*denom(1/4*
      s12^2)*mt^4*s14*s23^2 - 3/8*denom(1/4*s12^2)*mt^4*s14^2*s24 - 7/8*denom(
      1/4*s12^2)*mt^4*s14^2*s23 - 1/8*denom(1/4*s12^2)*mt^4*s14^3 - 7/8*denom(
      1/4*s12^2)*mt^4*s13*s24^2 - 5/4*denom(1/4*s12^2)*mt^4*s13*s23*s24 - 3/8*
      denom(1/4*s12^2)*mt^4*s13*s23^2 - 5/4*denom(1/4*s12^2)*mt^4*s13*s14*s24
       - 5/4*denom(1/4*s12^2)*mt^4*s13*s14*s23 - 3/8*denom(1/4*s12^2)*mt^4*s13
      *s14^2 - 7/8*denom(1/4*s12^2)*mt^4*s13^2*s24 - 3/8*denom(1/4*s12^2)*mt^4
      *s13^2*s23 - 3/8*denom(1/4*s12^2)*mt^4*s13^2*s14 - 1/8*denom(1/4*s12^2)*
      mt^4*s13^3 - 1/8*denom(1/4*s12^2)*mt^4*s12*s24^2 - 1/4*denom(1/4*s12^2)*
      mt^4*s12*s23*s24 - 1/8*denom(1/4*s12^2)*mt^4*s12*s23^2 - 1/4*denom(1/4*
      s12^2)*mt^4*s12*s14*s24 - 3/4*denom(1/4*s12^2)*mt^4*s12*s14*s23 - 1/8*
      denom(1/4*s12^2)*mt^4*s12*s14^2 - 3/4*denom(1/4*s12^2)*mt^4*s12*s13*s24
       - 1/4*denom(1/4*s12^2)*mt^4*s12*s13*s23 - 1/4*denom(1/4*s12^2)*mt^4*s12
      *s13*s14 - 1/8*denom(1/4*s12^2)*mt^4*s12*s13^2 + 1/8*denom(1/4*s12^2)*
      mt^4*mh^2*s24^2 + 1/4*denom(1/4*s12^2)*mt^4*mh^2*s23*s24 + 1/8*denom(1/4
      *s12^2)*mt^4*mh^2*s23^2 + 1/4*denom(1/4*s12^2)*mt^4*mh^2*s14*s24 + 3/4*
      denom(1/4*s12^2)*mt^4*mh^2*s14*s23 + 1/8*denom(1/4*s12^2)*mt^4*mh^2*
      s14^2 + 3/4*denom(1/4*s12^2)*mt^4*mh^2*s13*s24 + 1/4*denom(1/4*s12^2)*
      mt^4*mh^2*s13*s23 + 1/4*denom(1/4*s12^2)*mt^4*mh^2*s13*s14 + 1/8*denom(1/
      4*s12^2)*mt^4*mh^2*s13^2 + 1/2*denom(1/4*s12^2)*mt^6*s24^2 + denom(1/4*
      s12^2)*mt^6*s23*s24 + 1/2*denom(1/4*s12^2)*mt^6*s23^2 + denom(1/4*s12^2)
      *mt^6*s14*s24 + denom(1/4*s12^2)*mt^6*s14*s23 + 1/2*denom(1/4*s12^2)*
      mt^6*s14^2 + denom(1/4*s12^2)*mt^6*s13*s24 + denom(1/4*s12^2)*mt^6*s13*
      s23 + denom(1/4*s12^2)*mt^6*s13*s14 + 1/2*denom(1/4*s12^2)*mt^6*s13^2 + 
      1/2*denom(1/4*s12^2)*mt^6*s12*s24 + 1/2*denom(1/4*s12^2)*mt^6*s12*s23 + 
      1/2*denom(1/4*s12^2)*mt^6*s12*s14 + 1/2*denom(1/4*s12^2)*mt^6*s12*s13 - 
      1/2*denom(1/4*s12^2)*mt^6*mh^2*s24 - 1/2*denom(1/4*s12^2)*mt^6*mh^2*s23
       - 1/2*denom(1/4*s12^2)*mt^6*mh^2*s14 - 1/2*denom(1/4*s12^2)*mt^6*mh^2*
      s13 - 1/2*denom(1/4*s12^2)*mt^8*s24 - 1/2*denom(1/4*s12^2)*mt^8*s23 - 1/
      2*denom(1/4*s12^2)*mt^8*s14 - 1/2*denom(1/4*s12^2)*mt^8*s13 - 1/2*denom(
      1/4*s12^2)*mt^8*s12 + 1/2*denom(1/4*s12^2)*mt^8*mh^2;
 
 .sort
id KMatrix(2,4) =  mt^2*s24^2 + 2*mt^2*s23*s24 + mt^2*s23^2 + 2*mt^2*s14*s24
       + 2*mt^2*s14*s23 + mt^2*s14^2 + 2*mt^2*s13*s24 + 2*mt^2*s13*s23 + 2*
      mt^2*s13*s14 + mt^2*s13^2 + 2*mt^2*s12*s24 + 2*mt^2*s12*s23 + 2*mt^2*s12
      *s14 + 2*mt^2*s12*s13 + mt^2*s12^2 - 2*mt^2*mh^2*s24 - 2*mt^2*mh^2*s23
       - 2*mt^2*mh^2*s14 - 2*mt^2*mh^2*s13 - 2*mt^2*mh^2*s12 + mt^2*mh^4 - 2*
      mt^4*s24 - 2*mt^4*s23 - 2*mt^4*s14 - 2*mt^4*s13 - 2*mt^4*s12 + 2*mt^4*
      mh^2 - 1/2*denom(1/2*s12)*s14*s24^3 - denom(1/2*s12)*s14*s23*s24^2 - 1/2
      *denom(1/2*s12)*s14*s23^2*s24 - denom(1/2*s12)*s14^2*s24^2 - denom(1/2*
      s12)*s14^2*s23*s24 - 1/2*denom(1/2*s12)*s14^3*s24 - denom(1/2*s12)*s13*
      s14*s24^2 - denom(1/2*s12)*s13*s14*s23*s24 - denom(1/2*s12)*s13*s14^2*
      s24 - 1/2*denom(1/2*s12)*s13^2*s14*s24 - denom(1/2*s12)*s12*s14*s24^2 - 
      denom(1/2*s12)*s12*s14*s23*s24 - denom(1/2*s12)*s12*s14^2*s24 - denom(1/
      2*s12)*s12*s13*s14*s24 - 1/2*denom(1/2*s12)*s12^2*s14*s24 + denom(1/2*
      s12)*mh^2*s14*s24^2 + denom(1/2*s12)*mh^2*s14*s23*s24 + denom(1/2*s12)*
      mh^2*s14^2*s24 + denom(1/2*s12)*mh^2*s13*s14*s24 + denom(1/2*s12)*mh^2*
      s12*s14*s24 - 1/2*denom(1/2*s12)*mh^4*s14*s24 + 1/2*denom(1/2*s12)*mt^2*
      s24^3 + denom(1/2*s12)*mt^2*s23*s24^2 + 1/2*denom(1/2*s12)*mt^2*s23^2*
      s24 + 5/2*denom(1/2*s12)*mt^2*s14*s24^2 + 7/2*denom(1/2*s12)*mt^2*s14*
      s23*s24 + denom(1/2*s12)*mt^2*s14*s23^2 + 5/2*denom(1/2*s12)*mt^2*s14^2*
      s24 + 3/2*denom(1/2*s12)*mt^2*s14^2*s23 + 1/2*denom(1/2*s12)*mt^2*s14^3
       + 3/2*denom(1/2*s12)*mt^2*s13*s24^2 + 3/2*denom(1/2*s12)*mt^2*s13*s23*
      s24 + 7/2*denom(1/2*s12)*mt^2*s13*s14*s24 + 3/2*denom(1/2*s12)*mt^2*s13*
      s14*s23 + denom(1/2*s12)*mt^2*s13*s14^2 + denom(1/2*s12)*mt^2*s13^2*s24
       + 1/2*denom(1/2*s12)*mt^2*s13^2*s14 + denom(1/2*s12)*mt^2*s12*s24^2 + 
      denom(1/2*s12)*mt^2*s12*s23*s24 + 3*denom(1/2*s12)*mt^2*s12*s14*s24 + 3/
      2*denom(1/2*s12)*mt^2*s12*s14*s23 + denom(1/2*s12)*mt^2*s12*s14^2 + 3/2*
      denom(1/2*s12)*mt^2*s12*s13*s24 + denom(1/2*s12)*mt^2*s12*s13*s14 + 1/2*
      denom(1/2*s12)*mt^2*s12^2*s24 + 1/2*denom(1/2*s12)*mt^2*s12^2*s14 - 
      denom(1/2*s12)*mt^2*mh^2*s24^2 - denom(1/2*s12)*mt^2*mh^2*s23*s24 - 3*
      denom(1/2*s12)*mt^2*mh^2*s14*s24 - 3/2*denom(1/2*s12)*mt^2*mh^2*s14*s23
       - denom(1/2*s12)*mt^2*mh^2*s14^2 - 3/2*denom(1/2*s12)*mt^2*mh^2*s13*s24
       - denom(1/2*s12)*mt^2*mh^2*s13*s14 - denom(1/2*s12)*mt^2*mh^2*s12*s24
       - denom(1/2*s12)*mt^2*mh^2*s12*s14 + 1/2*denom(1/2*s12)*mt^2*mh^4*s24
       + 1/2*denom(1/2*s12)*mt^2*mh^4*s14 - 2*denom(1/2*s12)*mt^4*s24^2 - 3*
      denom(1/2*s12)*mt^4*s23*s24 - denom(1/2*s12)*mt^4*s23^2 - 4*denom(1/2*
      s12)*mt^4*s14*s24 - 3*denom(1/2*s12)*mt^4*s14*s23 - 2*denom(1/2*s12)*
      mt^4*s14^2 - 3*denom(1/2*s12)*mt^4*s13*s24 - 2*denom(1/2*s12)*mt^4*s13*
      s23 - 3*denom(1/2*s12)*mt^4*s13*s14 - denom(1/2*s12)*mt^4*s13^2 - 5/2*
      denom(1/2*s12)*mt^4*s12*s24 - 3/2*denom(1/2*s12)*mt^4*s12*s23 - 5/2*
      denom(1/2*s12)*mt^4*s12*s14 - 3/2*denom(1/2*s12)*mt^4*s12*s13 - 1/2*
      denom(1/2*s12)*mt^4*s12^2 + 5/2*denom(1/2*s12)*mt^4*mh^2*s24 + 3/2*
      denom(1/2*s12)*mt^4*mh^2*s23 + 5/2*denom(1/2*s12)*mt^4*mh^2*s14 + 3/2*
      denom(1/2*s12)*mt^4*mh^2*s13 + denom(1/2*s12)*mt^4*mh^2*s12 - 1/2*denom(
      1/2*s12)*mt^4*mh^4 + 2*denom(1/2*s12)*mt^6*s24 + 2*denom(1/2*s12)*mt^6*
      s23 + 2*denom(1/2*s12)*mt^6*s14 + 2*denom(1/2*s12)*mt^6*s13 + 2*denom(1/
      2*s12)*mt^6*s12 - 2*denom(1/2*s12)*mt^6*mh^2 - 1/4*denom(1/4*s12^2)*
      s14^2*s23*s24^2 - 1/4*denom(1/4*s12^2)*s14^2*s23^2*s24 - 1/4*denom(1/4*
      s12^2)*s14^3*s23*s24 - 1/4*denom(1/4*s12^2)*s13*s14*s24^3 - 1/4*denom(1/
      4*s12^2)*s13*s14*s23*s24^2 - 1/4*denom(1/4*s12^2)*s13*s14^2*s24^2 - 1/4*
      denom(1/4*s12^2)*s13*s14^2*s23*s24 - 1/4*denom(1/4*s12^2)*s13^2*s14*
      s24^2 - 1/4*denom(1/4*s12^2)*s12*s14^2*s23*s24 - 1/4*denom(1/4*s12^2)*
      s12*s13*s14*s24^2 + 1/4*denom(1/4*s12^2)*mh^2*s14^2*s23*s24 + 1/4*denom(
      1/4*s12^2)*mh^2*s13*s14*s24^2 + 1/4*denom(1/4*s12^2)*mt^2*s14*s24^3 + 3/
      4*denom(1/4*s12^2)*mt^2*s14*s23*s24^2 + 1/2*denom(1/4*s12^2)*mt^2*s14*
      s23^2*s24 + 1/2*denom(1/4*s12^2)*mt^2*s14^2*s24^2 + denom(1/4*s12^2)*
      mt^2*s14^2*s23*s24 + 1/4*denom(1/4*s12^2)*mt^2*s14^2*s23^2 + 1/4*denom(1/
      4*s12^2)*mt^2*s14^3*s24 + 1/4*denom(1/4*s12^2)*mt^2*s14^3*s23 + 1/4*
      denom(1/4*s12^2)*mt^2*s13*s24^3 + 1/4*denom(1/4*s12^2)*mt^2*s13*s23*
      s24^2 + denom(1/4*s12^2)*mt^2*s13*s14*s24^2 + denom(1/4*s12^2)*mt^2*s13*
      s14*s23*s24 + 3/4*denom(1/4*s12^2)*mt^2*s13*s14^2*s24 + 1/4*denom(1/4*
      s12^2)*mt^2*s13*s14^2*s23 + 1/4*denom(1/4*s12^2)*mt^2*s13^2*s24^2 + 1/2*
      denom(1/4*s12^2)*mt^2*s13^2*s14*s24 + 1/4*denom(1/4*s12^2)*mt^2*s12*s14*
      s24^2 + 1/2*denom(1/4*s12^2)*mt^2*s12*s14*s23*s24 + 1/4*denom(1/4*s12^2)
      *mt^2*s12*s14^2*s24 + 1/4*denom(1/4*s12^2)*mt^2*s12*s14^2*s23 + 1/4*
      denom(1/4*s12^2)*mt^2*s12*s13*s24^2 + 1/2*denom(1/4*s12^2)*mt^2*s12*s13*
      s14*s24 - 1/4*denom(1/4*s12^2)*mt^2*mh^2*s14*s24^2 - 1/2*denom(1/4*s12^2
      )*mt^2*mh^2*s14*s23*s24 - 1/4*denom(1/4*s12^2)*mt^2*mh^2*s14^2*s24 - 1/4
      *denom(1/4*s12^2)*mt^2*mh^2*s14^2*s23 - 1/4*denom(1/4*s12^2)*mt^2*mh^2*
      s13*s24^2 - 1/2*denom(1/4*s12^2)*mt^2*mh^2*s13*s14*s24 - 1/4*denom(1/4*
      s12^2)*mt^4*s24^3 - 1/2*denom(1/4*s12^2)*mt^4*s23*s24^2 - 1/4*denom(1/4*
      s12^2)*mt^4*s23^2*s24 - 5/4*denom(1/4*s12^2)*mt^4*s14*s24^2 - 7/4*denom(
      1/4*s12^2)*mt^4*s14*s23*s24 - 1/2*denom(1/4*s12^2)*mt^4*s14*s23^2 - 5/4*
      denom(1/4*s12^2)*mt^4*s14^2*s24 - 3/4*denom(1/4*s12^2)*mt^4*s14^2*s23 - 
      1/4*denom(1/4*s12^2)*mt^4*s14^3 - 3/4*denom(1/4*s12^2)*mt^4*s13*s24^2 - 
      3/4*denom(1/4*s12^2)*mt^4*s13*s23*s24 - 7/4*denom(1/4*s12^2)*mt^4*s13*
      s14*s24 - 3/4*denom(1/4*s12^2)*mt^4*s13*s14*s23 - 1/2*denom(1/4*s12^2)*
      mt^4*s13*s14^2 - 1/2*denom(1/4*s12^2)*mt^4*s13^2*s24 - 1/4*denom(1/4*
      s12^2)*mt^4*s13^2*s14 - 1/4*denom(1/4*s12^2)*mt^4*s12*s24^2 - 1/4*denom(
      1/4*s12^2)*mt^4*s12*s23*s24 - denom(1/4*s12^2)*mt^4*s12*s14*s24 - 1/2*
      denom(1/4*s12^2)*mt^4*s12*s14*s23 - 1/4*denom(1/4*s12^2)*mt^4*s12*s14^2
       - 1/2*denom(1/4*s12^2)*mt^4*s12*s13*s24 - 1/4*denom(1/4*s12^2)*mt^4*s12
      *s13*s14 + 1/4*denom(1/4*s12^2)*mt^4*mh^2*s24^2 + 1/4*denom(1/4*s12^2)*
      mt^4*mh^2*s23*s24 + denom(1/4*s12^2)*mt^4*mh^2*s14*s24 + 1/2*denom(1/4*
      s12^2)*mt^4*mh^2*s14*s23 + 1/4*denom(1/4*s12^2)*mt^4*mh^2*s14^2 + 1/2*
      denom(1/4*s12^2)*mt^4*mh^2*s13*s24 + 1/4*denom(1/4*s12^2)*mt^4*mh^2*s13*
      s14 + 3/4*denom(1/4*s12^2)*mt^6*s24^2 + denom(1/4*s12^2)*mt^6*s23*s24 + 
      1/4*denom(1/4*s12^2)*mt^6*s23^2 + 3/2*denom(1/4*s12^2)*mt^6*s14*s24 + 
      denom(1/4*s12^2)*mt^6*s14*s23 + 3/4*denom(1/4*s12^2)*mt^6*s14^2 + denom(
      1/4*s12^2)*mt^6*s13*s24 + 1/2*denom(1/4*s12^2)*mt^6*s13*s23 + denom(1/4*
      s12^2)*mt^6*s13*s14 + 1/4*denom(1/4*s12^2)*mt^6*s13^2 + 3/4*denom(1/4*
      s12^2)*mt^6*s12*s24 + 1/4*denom(1/4*s12^2)*mt^6*s12*s23 + 3/4*denom(1/4*
      s12^2)*mt^6*s12*s14 + 1/4*denom(1/4*s12^2)*mt^6*s12*s13 - 3/4*denom(1/4*
      s12^2)*mt^6*mh^2*s24 - 1/4*denom(1/4*s12^2)*mt^6*mh^2*s23 - 3/4*denom(1/
      4*s12^2)*mt^6*mh^2*s14 - 1/4*denom(1/4*s12^2)*mt^6*mh^2*s13 - 1/2*denom(
      1/4*s12^2)*mt^8*s24 - 1/2*denom(1/4*s12^2)*mt^8*s23 - 1/2*denom(1/4*
      s12^2)*mt^8*s14 - 1/2*denom(1/4*s12^2)*mt^8*s13 - 1/2*denom(1/4*s12^2)*
      mt^8*s12 + 1/2*denom(1/4*s12^2)*mt^8*mh^2;
 
 .sort
id KMatrix(2,5) =   - mt^3*s14*s24 - mt^3*s14*s23 - mt^3*s14^2 + mt^3*s13*s24
       + mt^3*s13*s23 + mt^3*s13^2 - mt^3*s12*s14 + mt^3*s12*s13 + mt^3*mh^2*
      s14 - mt^3*mh^2*s13 + 2*mt^5*s14 - 2*mt^5*s13 + 1/2*denom(1/2*s12)*mt*
      s13*s14*s23*s24 + 1/2*denom(1/2*s12)*mt*s13*s14*s23^2 + 1/2*denom(1/2*
      s12)*mt*s13*s14^2*s23 - 1/2*denom(1/2*s12)*mt*s13^2*s23*s24 - 1/2*denom(
      1/2*s12)*mt*s13^2*s23^2 - 1/2*denom(1/2*s12)*mt*s13^3*s23 + 1/2*denom(1/
      2*s12)*mt*s12*s13*s14*s23 - 1/2*denom(1/2*s12)*mt*s12*s13^2*s23 - 1/2*
      denom(1/2*s12)*mt*mh^2*s13*s14*s23 + 1/2*denom(1/2*s12)*mt*mh^2*s13^2*
      s23 - 1/2*denom(1/2*s12)*mt^3*s14*s23*s24 - 1/2*denom(1/2*s12)*mt^3*s14*
      s23^2 - denom(1/2*s12)*mt^3*s14^2*s23 + 1/2*denom(1/2*s12)*mt^3*s13*s23*
      s24 + 1/2*denom(1/2*s12)*mt^3*s13*s23^2 - denom(1/2*s12)*mt^3*s13*s14*
      s24 - denom(1/2*s12)*mt^3*s13*s14*s23 - 1/2*denom(1/2*s12)*mt^3*s13*
      s14^2 + denom(1/2*s12)*mt^3*s13^2*s24 + 2*denom(1/2*s12)*mt^3*s13^2*s23
       + 1/2*denom(1/2*s12)*mt^3*s13^3 - 1/2*denom(1/2*s12)*mt^3*s12*s14*s23
       + 1/2*denom(1/2*s12)*mt^3*s12*s13*s23 - 1/2*denom(1/2*s12)*mt^3*s12*s13
      *s14 + 1/2*denom(1/2*s12)*mt^3*s12*s13^2 + 1/2*denom(1/2*s12)*mt^3*mh^2*
      s14*s23 - 1/2*denom(1/2*s12)*mt^3*mh^2*s13*s23 + 1/2*denom(1/2*s12)*mt^3
      *mh^2*s13*s14 - 1/2*denom(1/2*s12)*mt^3*mh^2*s13^2 + denom(1/2*s12)*mt^5
      *s14*s24 + 2*denom(1/2*s12)*mt^5*s14*s23 + denom(1/2*s12)*mt^5*s14^2 - 
      denom(1/2*s12)*mt^5*s13*s24 - 2*denom(1/2*s12)*mt^5*s13*s23 + denom(1/2*
      s12)*mt^5*s13*s14 - 2*denom(1/2*s12)*mt^5*s13^2 + 1/2*denom(1/2*s12)*
      mt^5*s12*s14 - 1/2*denom(1/2*s12)*mt^5*s12*s13 - 1/2*denom(1/2*s12)*mt^5
      *mh^2*s14 + 1/2*denom(1/2*s12)*mt^5*mh^2*s13 - 2*denom(1/2*s12)*mt^7*s14
       + 2*denom(1/2*s12)*mt^7*s13 + 1/4*denom(1/4*s12^2)*mt*s13*s14^2*s23^2
       + 1/4*denom(1/4*s12^2)*mt*s13^2*s14*s23*s24 - 1/4*denom(1/4*s12^2)*mt*
      s13^2*s14*s23^2 - 1/4*denom(1/4*s12^2)*mt*s13^3*s23*s24 - 1/4*denom(1/4*
      s12^2)*mt^3*s14^2*s23^2 - 1/2*denom(1/4*s12^2)*mt^3*s13*s14*s23*s24 - 1/
      2*denom(1/4*s12^2)*mt^3*s13*s14^2*s23 + 1/2*denom(1/4*s12^2)*mt^3*s13^2*
      s23*s24 + 1/4*denom(1/4*s12^2)*mt^3*s13^2*s23^2 - 1/4*denom(1/4*s12^2)*
      mt^3*s13^2*s14*s24 + 1/4*denom(1/4*s12^2)*mt^3*s13^2*s14*s23 + 1/4*
      denom(1/4*s12^2)*mt^3*s13^3*s24 + 1/4*denom(1/4*s12^2)*mt^3*s13^3*s23 + 
      1/4*denom(1/4*s12^2)*mt^5*s14*s23*s24 + 1/4*denom(1/4*s12^2)*mt^5*s14*
      s23^2 + 1/2*denom(1/4*s12^2)*mt^5*s14^2*s23 - 1/4*denom(1/4*s12^2)*mt^5*
      s13*s23*s24 - 1/4*denom(1/4*s12^2)*mt^5*s13*s23^2 + 1/2*denom(1/4*s12^2)
      *mt^5*s13*s14*s24 + 1/2*denom(1/4*s12^2)*mt^5*s13*s14*s23 + 1/4*denom(1/
      4*s12^2)*mt^5*s13*s14^2 - 1/2*denom(1/4*s12^2)*mt^5*s13^2*s24 - denom(1/
      4*s12^2)*mt^5*s13^2*s23 - 1/4*denom(1/4*s12^2)*mt^5*s13^3 - 1/4*denom(1/
      4*s12^2)*mt^7*s14*s24 - 3/4*denom(1/4*s12^2)*mt^7*s14*s23 - 1/4*denom(1/
      4*s12^2)*mt^7*s14^2 + 1/4*denom(1/4*s12^2)*mt^7*s13*s24 + 3/4*denom(1/4*
      s12^2)*mt^7*s13*s23 - 1/2*denom(1/4*s12^2)*mt^7*s13*s14 + 3/4*denom(1/4*
      s12^2)*mt^7*s13^2 + 1/2*denom(1/4*s12^2)*mt^9*s14 - 1/2*denom(1/4*s12^2)
      *mt^9*s13;
 
 .sort
id KMatrix(2,6) =  2*mt^5*s14 - 2*mt^5*s13 - denom(1/2*s12)*mt^3*s14^2*s24 + 
      denom(1/2*s12)*mt^3*s13*s14*s24 - denom(1/2*s12)*mt^3*s13*s14*s23 + 
      denom(1/2*s12)*mt^3*s13^2*s23 + denom(1/2*s12)*mt^5*s14*s24 + denom(1/2*
      s12)*mt^5*s14*s23 + denom(1/2*s12)*mt^5*s14^2 - denom(1/2*s12)*mt^5*s13*
      s24 - denom(1/2*s12)*mt^5*s13*s23 - denom(1/2*s12)*mt^5*s13^2 - 2*denom(
      1/2*s12)*mt^7*s14 + 2*denom(1/2*s12)*mt^7*s13 + 1/2*denom(1/4*s12^2)*mt*
      s13*s14^2*s23*s24 - 1/2*denom(1/4*s12^2)*mt*s13^2*s14*s23*s24 - 1/2*
      denom(1/4*s12^2)*mt^3*s14^2*s23*s24 - 1/2*denom(1/4*s12^2)*mt^3*s13*
      s14^2*s24 - 1/2*denom(1/4*s12^2)*mt^3*s13*s14^2*s23 + 1/2*denom(1/4*
      s12^2)*mt^3*s13^2*s23*s24 + 1/2*denom(1/4*s12^2)*mt^3*s13^2*s14*s24 + 1/
      2*denom(1/4*s12^2)*mt^3*s13^2*s14*s23 + 1/2*denom(1/4*s12^2)*mt^5*s14*
      s23*s24 + 1/2*denom(1/4*s12^2)*mt^5*s14^2*s24 + 1/2*denom(1/4*s12^2)*
      mt^5*s14^2*s23 - 1/2*denom(1/4*s12^2)*mt^5*s13*s23*s24 + 1/2*denom(1/4*
      s12^2)*mt^5*s13*s14^2 - 1/2*denom(1/4*s12^2)*mt^5*s13^2*s24 - 1/2*denom(
      1/4*s12^2)*mt^5*s13^2*s23 - 1/2*denom(1/4*s12^2)*mt^5*s13^2*s14 - 1/2*
      denom(1/4*s12^2)*mt^7*s14*s24 - 1/2*denom(1/4*s12^2)*mt^7*s14*s23 - 1/2*
      denom(1/4*s12^2)*mt^7*s14^2 + 1/2*denom(1/4*s12^2)*mt^7*s13*s24 + 1/2*
      denom(1/4*s12^2)*mt^7*s13*s23 + 1/2*denom(1/4*s12^2)*mt^7*s13^2 + 1/2*
      denom(1/4*s12^2)*mt^9*s14 - 1/2*denom(1/4*s12^2)*mt^9*s13;
 
 .sort
id KMatrix(2,7) =  1/2*mt*s14*s24^2 + mt*s14*s23*s24 + 1/2*mt*s14*s23^2 + mt*
      s14^2*s24 + mt*s14^2*s23 + 1/2*mt*s14^3 - 1/2*mt*s13*s24^2 - mt*s13*s23*
      s24 - 1/2*mt*s13*s23^2 + 1/2*mt*s13*s14^2 - mt*s13^2*s24 - mt*s13^2*s23
       - 1/2*mt*s13^2*s14 - 1/2*mt*s13^3 + mt*s12*s14*s24 + mt*s12*s14*s23 + 
      mt*s12*s14^2 - mt*s12*s13*s24 - mt*s12*s13*s23 - mt*s12*s13^2 + 1/2*mt*
      s12^2*s14 - 1/2*mt*s12^2*s13 - mt*mh^2*s14*s24 - mt*mh^2*s14*s23 - mt*
      mh^2*s14^2 + mt*mh^2*s13*s24 + mt*mh^2*s13*s23 + mt*mh^2*s13^2 - mt*mh^2
      *s12*s14 + mt*mh^2*s12*s13 + 1/2*mt*mh^4*s14 - 1/2*mt*mh^4*s13 - 2*mt^3*
      s14*s24 - 2*mt^3*s14*s23 - 2*mt^3*s14^2 + 2*mt^3*s13*s24 + 2*mt^3*s13*
      s23 + 2*mt^3*s13^2 - 2*mt^3*s12*s14 + 2*mt^3*s12*s13 + 2*mt^3*mh^2*s14
       - 2*mt^3*mh^2*s13 + 2*mt^5*s14 - 2*mt^5*s13 + 1/2*denom(1/2*s12)*mt*
      s14^2*s23*s24 + 1/2*denom(1/2*s12)*mt*s14^2*s23^2 + 1/2*denom(1/2*s12)*
      mt*s14^3*s23 + 1/2*denom(1/2*s12)*mt*s13*s14*s24^2 - 1/2*denom(1/2*s12)*
      mt*s13*s14*s23^2 + 1/2*denom(1/2*s12)*mt*s13*s14^2*s24 - 1/2*denom(1/2*
      s12)*mt*s13^2*s24^2 - 1/2*denom(1/2*s12)*mt*s13^2*s23*s24 - 1/2*denom(1/
      2*s12)*mt*s13^2*s14*s23 - 1/2*denom(1/2*s12)*mt*s13^3*s24 + 1/2*denom(1/
      2*s12)*mt*s12*s14^2*s23 + 1/2*denom(1/2*s12)*mt*s12*s13*s14*s24 - 1/2*
      denom(1/2*s12)*mt*s12*s13*s14*s23 - 1/2*denom(1/2*s12)*mt*s12*s13^2*s24
       - 1/2*denom(1/2*s12)*mt*mh^2*s14^2*s23 - 1/2*denom(1/2*s12)*mt*mh^2*s13
      *s14*s24 + 1/2*denom(1/2*s12)*mt*mh^2*s13*s14*s23 + 1/2*denom(1/2*s12)*
      mt*mh^2*s13^2*s24 - 1/2*denom(1/2*s12)*mt^3*s14*s24^2 - denom(1/2*s12)*
      mt^3*s14*s23*s24 - 1/2*denom(1/2*s12)*mt^3*s14*s23^2 - denom(1/2*s12)*
      mt^3*s14^2*s24 - 2*denom(1/2*s12)*mt^3*s14^2*s23 - 1/2*denom(1/2*s12)*
      mt^3*s14^3 + 1/2*denom(1/2*s12)*mt^3*s13*s24^2 + denom(1/2*s12)*mt^3*s13
      *s23*s24 + 1/2*denom(1/2*s12)*mt^3*s13*s23^2 - denom(1/2*s12)*mt^3*s13*
      s14*s24 + denom(1/2*s12)*mt^3*s13*s14*s23 - 1/2*denom(1/2*s12)*mt^3*s13*
      s14^2 + 2*denom(1/2*s12)*mt^3*s13^2*s24 + denom(1/2*s12)*mt^3*s13^2*s23
       + 1/2*denom(1/2*s12)*mt^3*s13^2*s14 + 1/2*denom(1/2*s12)*mt^3*s13^3 - 1/
      2*denom(1/2*s12)*mt^3*s12*s14*s24 - 1/2*denom(1/2*s12)*mt^3*s12*s14*s23
       - 1/2*denom(1/2*s12)*mt^3*s12*s14^2 + 1/2*denom(1/2*s12)*mt^3*s12*s13*
      s24 + 1/2*denom(1/2*s12)*mt^3*s12*s13*s23 + 1/2*denom(1/2*s12)*mt^3*s12*
      s13^2 + 1/2*denom(1/2*s12)*mt^3*mh^2*s14*s24 + 1/2*denom(1/2*s12)*mt^3*
      mh^2*s14*s23 + 1/2*denom(1/2*s12)*mt^3*mh^2*s14^2 - 1/2*denom(1/2*s12)*
      mt^3*mh^2*s13*s24 - 1/2*denom(1/2*s12)*mt^3*mh^2*s13*s23 - 1/2*denom(1/2
      *s12)*mt^3*mh^2*s13^2 + 2*denom(1/2*s12)*mt^5*s14*s24 + 2*denom(1/2*s12)
      *mt^5*s14*s23 + 2*denom(1/2*s12)*mt^5*s14^2 - 2*denom(1/2*s12)*mt^5*s13*
      s24 - 2*denom(1/2*s12)*mt^5*s13*s23 - 2*denom(1/2*s12)*mt^5*s13^2 + 
      denom(1/2*s12)*mt^5*s12*s14 - denom(1/2*s12)*mt^5*s12*s13 - denom(1/2*
      s12)*mt^5*mh^2*s14 + denom(1/2*s12)*mt^5*mh^2*s13 - 2*denom(1/2*s12)*
      mt^7*s14 + 2*denom(1/2*s12)*mt^7*s13 + 1/8*denom(1/4*s12^2)*mt*s14^3*
      s23^2 + 1/4*denom(1/4*s12^2)*mt*s13*s14^2*s23*s24 - 1/8*denom(1/4*s12^2)
      *mt*s13*s14^2*s23^2 + 1/8*denom(1/4*s12^2)*mt*s13^2*s14*s24^2 - 1/4*
      denom(1/4*s12^2)*mt*s13^2*s14*s23*s24 - 1/8*denom(1/4*s12^2)*mt*s13^3*
      s24^2 - 1/4*denom(1/4*s12^2)*mt^3*s14^2*s23*s24 - 1/4*denom(1/4*s12^2)*
      mt^3*s14^2*s23^2 - 1/4*denom(1/4*s12^2)*mt^3*s14^3*s23 - 1/4*denom(1/4*
      s12^2)*mt^3*s13*s14*s24^2 + 1/4*denom(1/4*s12^2)*mt^3*s13*s14*s23^2 - 1/
      4*denom(1/4*s12^2)*mt^3*s13*s14^2*s24 + 1/4*denom(1/4*s12^2)*mt^3*s13^2*
      s24^2 + 1/4*denom(1/4*s12^2)*mt^3*s13^2*s23*s24 + 1/4*denom(1/4*s12^2)*
      mt^3*s13^2*s14*s23 + 1/4*denom(1/4*s12^2)*mt^3*s13^3*s24 + 1/8*denom(1/4
      *s12^2)*mt^5*s14*s24^2 + 1/4*denom(1/4*s12^2)*mt^5*s14*s23*s24 + 1/8*
      denom(1/4*s12^2)*mt^5*s14*s23^2 + 1/4*denom(1/4*s12^2)*mt^5*s14^2*s24 + 
      3/4*denom(1/4*s12^2)*mt^5*s14^2*s23 + 1/8*denom(1/4*s12^2)*mt^5*s14^3 - 
      1/8*denom(1/4*s12^2)*mt^5*s13*s24^2 - 1/4*denom(1/4*s12^2)*mt^5*s13*s23*
      s24 - 1/8*denom(1/4*s12^2)*mt^5*s13*s23^2 + 1/2*denom(1/4*s12^2)*mt^5*
      s13*s14*s24 - 1/2*denom(1/4*s12^2)*mt^5*s13*s14*s23 + 1/8*denom(1/4*
      s12^2)*mt^5*s13*s14^2 - 3/4*denom(1/4*s12^2)*mt^5*s13^2*s24 - 1/4*denom(
      1/4*s12^2)*mt^5*s13^2*s23 - 1/8*denom(1/4*s12^2)*mt^5*s13^2*s14 - 1/8*
      denom(1/4*s12^2)*mt^5*s13^3 - 1/2*denom(1/4*s12^2)*mt^7*s14*s24 - 1/2*
      denom(1/4*s12^2)*mt^7*s14*s23 - 1/2*denom(1/4*s12^2)*mt^7*s14^2 + 1/2*
      denom(1/4*s12^2)*mt^7*s13*s24 + 1/2*denom(1/4*s12^2)*mt^7*s13*s23 + 1/2*
      denom(1/4*s12^2)*mt^7*s13^2 + 1/2*denom(1/4*s12^2)*mt^9*s14 - 1/2*denom(
      1/4*s12^2)*mt^9*s13;
 
 .sort
id KMatrix(2,8) =   - mt^3*s14*s24 - mt^3*s14*s23 - mt^3*s14^2 + mt^3*s13*s24
       + mt^3*s13*s23 + mt^3*s13^2 - mt^3*s12*s14 + mt^3*s12*s13 + mt^3*mh^2*
      s14 - mt^3*mh^2*s13 + 2*mt^5*s14 - 2*mt^5*s13 + 1/2*denom(1/2*s12)*mt*
      s14^2*s24^2 + 1/2*denom(1/2*s12)*mt*s14^2*s23*s24 + 1/2*denom(1/2*s12)*
      mt*s14^3*s24 - 1/2*denom(1/2*s12)*mt*s13*s14*s24^2 - 1/2*denom(1/2*s12)*
      mt*s13*s14*s23*s24 - 1/2*denom(1/2*s12)*mt*s13^2*s14*s24 + 1/2*denom(1/2
      *s12)*mt*s12*s14^2*s24 - 1/2*denom(1/2*s12)*mt*s12*s13*s14*s24 - 1/2*
      denom(1/2*s12)*mt*mh^2*s14^2*s24 + 1/2*denom(1/2*s12)*mt*mh^2*s13*s14*
      s24 - 1/2*denom(1/2*s12)*mt^3*s14*s24^2 - 1/2*denom(1/2*s12)*mt^3*s14*
      s23*s24 - 2*denom(1/2*s12)*mt^3*s14^2*s24 - denom(1/2*s12)*mt^3*s14^2*
      s23 - 1/2*denom(1/2*s12)*mt^3*s14^3 + 1/2*denom(1/2*s12)*mt^3*s13*s24^2
       + 1/2*denom(1/2*s12)*mt^3*s13*s23*s24 + denom(1/2*s12)*mt^3*s13*s14*s24
       + denom(1/2*s12)*mt^3*s13*s14*s23 + denom(1/2*s12)*mt^3*s13^2*s24 + 1/2
      *denom(1/2*s12)*mt^3*s13^2*s14 - 1/2*denom(1/2*s12)*mt^3*s12*s14*s24 - 1/
      2*denom(1/2*s12)*mt^3*s12*s14^2 + 1/2*denom(1/2*s12)*mt^3*s12*s13*s24 + 
      1/2*denom(1/2*s12)*mt^3*s12*s13*s14 + 1/2*denom(1/2*s12)*mt^3*mh^2*s14*
      s24 + 1/2*denom(1/2*s12)*mt^3*mh^2*s14^2 - 1/2*denom(1/2*s12)*mt^3*mh^2*
      s13*s24 - 1/2*denom(1/2*s12)*mt^3*mh^2*s13*s14 + 2*denom(1/2*s12)*mt^5*
      s14*s24 + denom(1/2*s12)*mt^5*s14*s23 + 2*denom(1/2*s12)*mt^5*s14^2 - 2*
      denom(1/2*s12)*mt^5*s13*s24 - denom(1/2*s12)*mt^5*s13*s23 - denom(1/2*
      s12)*mt^5*s13*s14 - denom(1/2*s12)*mt^5*s13^2 + 1/2*denom(1/2*s12)*mt^5*
      s12*s14 - 1/2*denom(1/2*s12)*mt^5*s12*s13 - 1/2*denom(1/2*s12)*mt^5*mh^2
      *s14 + 1/2*denom(1/2*s12)*mt^5*mh^2*s13 - 2*denom(1/2*s12)*mt^7*s14 + 2*
      denom(1/2*s12)*mt^7*s13 + 1/4*denom(1/4*s12^2)*mt*s14^3*s23*s24 + 1/4*
      denom(1/4*s12^2)*mt*s13*s14^2*s24^2 - 1/4*denom(1/4*s12^2)*mt*s13*s14^2*
      s23*s24 - 1/4*denom(1/4*s12^2)*mt*s13^2*s14*s24^2 - 1/4*denom(1/4*s12^2)
      *mt^3*s14^2*s24^2 - 1/2*denom(1/4*s12^2)*mt^3*s14^2*s23*s24 - 1/4*denom(
      1/4*s12^2)*mt^3*s14^3*s24 - 1/4*denom(1/4*s12^2)*mt^3*s14^3*s23 + 1/2*
      denom(1/4*s12^2)*mt^3*s13*s14*s23*s24 - 1/4*denom(1/4*s12^2)*mt^3*s13*
      s14^2*s24 + 1/4*denom(1/4*s12^2)*mt^3*s13*s14^2*s23 + 1/4*denom(1/4*
      s12^2)*mt^3*s13^2*s24^2 + 1/2*denom(1/4*s12^2)*mt^3*s13^2*s14*s24 + 1/4*
      denom(1/4*s12^2)*mt^5*s14*s24^2 + 1/4*denom(1/4*s12^2)*mt^5*s14*s23*s24
       + denom(1/4*s12^2)*mt^5*s14^2*s24 + 1/2*denom(1/4*s12^2)*mt^5*s14^2*s23
       + 1/4*denom(1/4*s12^2)*mt^5*s14^3 - 1/4*denom(1/4*s12^2)*mt^5*s13*s24^2
       - 1/4*denom(1/4*s12^2)*mt^5*s13*s23*s24 - 1/2*denom(1/4*s12^2)*mt^5*s13
      *s14*s24 - 1/2*denom(1/4*s12^2)*mt^5*s13*s14*s23 - 1/2*denom(1/4*s12^2)*
      mt^5*s13^2*s24 - 1/4*denom(1/4*s12^2)*mt^5*s13^2*s14 - 3/4*denom(1/4*
      s12^2)*mt^7*s14*s24 - 1/4*denom(1/4*s12^2)*mt^7*s14*s23 - 3/4*denom(1/4*
      s12^2)*mt^7*s14^2 + 3/4*denom(1/4*s12^2)*mt^7*s13*s24 + 1/4*denom(1/4*
      s12^2)*mt^7*s13*s23 + 1/2*denom(1/4*s12^2)*mt^7*s13*s14 + 1/4*denom(1/4*
      s12^2)*mt^7*s13^2 + 1/2*denom(1/4*s12^2)*mt^9*s14 - 1/2*denom(1/4*s12^2)
      *mt^9*s13;
 
 .sort
id KMatrix(2,9) =   - mt^3*s24^2 + mt^3*s23^2 - mt^3*s14*s24 + mt^3*s14*s23 - 
      mt^3*s13*s24 + mt^3*s13*s23 - mt^3*s12*s24 + mt^3*s12*s23 + mt^3*mh^2*
      s24 - mt^3*mh^2*s23 + 2*mt^5*s24 - 2*mt^5*s23 + 1/2*denom(1/2*s12)*mt*
      s13*s23*s24^2 - 1/2*denom(1/2*s12)*mt*s13*s23^3 + 1/2*denom(1/2*s12)*mt*
      s13*s14*s23*s24 - 1/2*denom(1/2*s12)*mt*s13*s14*s23^2 + 1/2*denom(1/2*
      s12)*mt*s13^2*s23*s24 - 1/2*denom(1/2*s12)*mt*s13^2*s23^2 + 1/2*denom(1/
      2*s12)*mt*s12*s13*s23*s24 - 1/2*denom(1/2*s12)*mt*s12*s13*s23^2 - 1/2*
      denom(1/2*s12)*mt*mh^2*s13*s23*s24 + 1/2*denom(1/2*s12)*mt*mh^2*s13*
      s23^2 - 1/2*denom(1/2*s12)*mt^3*s23*s24^2 + 1/2*denom(1/2*s12)*mt^3*
      s23^3 - denom(1/2*s12)*mt^3*s14*s23*s24 + denom(1/2*s12)*mt^3*s14*s23^2
       - denom(1/2*s12)*mt^3*s13*s24^2 - denom(1/2*s12)*mt^3*s13*s23*s24 + 2*
      denom(1/2*s12)*mt^3*s13*s23^2 - 1/2*denom(1/2*s12)*mt^3*s13*s14*s24 + 1/
      2*denom(1/2*s12)*mt^3*s13*s14*s23 - 1/2*denom(1/2*s12)*mt^3*s13^2*s24 + 
      1/2*denom(1/2*s12)*mt^3*s13^2*s23 - 1/2*denom(1/2*s12)*mt^3*s12*s23*s24
       + 1/2*denom(1/2*s12)*mt^3*s12*s23^2 - 1/2*denom(1/2*s12)*mt^3*s12*s13*
      s24 + 1/2*denom(1/2*s12)*mt^3*s12*s13*s23 + 1/2*denom(1/2*s12)*mt^3*mh^2
      *s23*s24 - 1/2*denom(1/2*s12)*mt^3*mh^2*s23^2 + 1/2*denom(1/2*s12)*mt^3*
      mh^2*s13*s24 - 1/2*denom(1/2*s12)*mt^3*mh^2*s13*s23 + denom(1/2*s12)*
      mt^5*s24^2 + denom(1/2*s12)*mt^5*s23*s24 - 2*denom(1/2*s12)*mt^5*s23^2
       + denom(1/2*s12)*mt^5*s14*s24 - denom(1/2*s12)*mt^5*s14*s23 + 2*denom(1/
      2*s12)*mt^5*s13*s24 - 2*denom(1/2*s12)*mt^5*s13*s23 + 1/2*denom(1/2*s12)
      *mt^5*s12*s24 - 1/2*denom(1/2*s12)*mt^5*s12*s23 - 1/2*denom(1/2*s12)*
      mt^5*mh^2*s24 + 1/2*denom(1/2*s12)*mt^5*mh^2*s23 - 2*denom(1/2*s12)*mt^7
      *s24 + 2*denom(1/2*s12)*mt^7*s23 + 1/4*denom(1/4*s12^2)*mt*s13*s14*s23^2
      *s24 - 1/4*denom(1/4*s12^2)*mt*s13*s14*s23^3 + 1/4*denom(1/4*s12^2)*mt*
      s13^2*s23*s24^2 - 1/4*denom(1/4*s12^2)*mt*s13^2*s23^2*s24 - 1/4*denom(1/
      4*s12^2)*mt^3*s14*s23^2*s24 + 1/4*denom(1/4*s12^2)*mt^3*s14*s23^3 - 1/2*
      denom(1/4*s12^2)*mt^3*s13*s23*s24^2 + 1/4*denom(1/4*s12^2)*mt^3*s13*
      s23^2*s24 + 1/4*denom(1/4*s12^2)*mt^3*s13*s23^3 - 1/2*denom(1/4*s12^2)*
      mt^3*s13*s14*s23*s24 + 1/2*denom(1/4*s12^2)*mt^3*s13*s14*s23^2 - 1/4*
      denom(1/4*s12^2)*mt^3*s13^2*s24^2 + 1/4*denom(1/4*s12^2)*mt^3*s13^2*
      s23^2 + 1/4*denom(1/4*s12^2)*mt^5*s23*s24^2 - 1/4*denom(1/4*s12^2)*mt^5*
      s23^3 + 1/2*denom(1/4*s12^2)*mt^5*s14*s23*s24 - 1/2*denom(1/4*s12^2)*
      mt^5*s14*s23^2 + 1/2*denom(1/4*s12^2)*mt^5*s13*s24^2 + 1/2*denom(1/4*
      s12^2)*mt^5*s13*s23*s24 - denom(1/4*s12^2)*mt^5*s13*s23^2 + 1/4*denom(1/
      4*s12^2)*mt^5*s13*s14*s24 - 1/4*denom(1/4*s12^2)*mt^5*s13*s14*s23 + 1/4*
      denom(1/4*s12^2)*mt^5*s13^2*s24 - 1/4*denom(1/4*s12^2)*mt^5*s13^2*s23 - 
      1/4*denom(1/4*s12^2)*mt^7*s24^2 - 1/2*denom(1/4*s12^2)*mt^7*s23*s24 + 3/
      4*denom(1/4*s12^2)*mt^7*s23^2 - 1/4*denom(1/4*s12^2)*mt^7*s14*s24 + 1/4*
      denom(1/4*s12^2)*mt^7*s14*s23 - 3/4*denom(1/4*s12^2)*mt^7*s13*s24 + 3/4*
      denom(1/4*s12^2)*mt^7*s13*s23 + 1/2*denom(1/4*s12^2)*mt^9*s24 - 1/2*
      denom(1/4*s12^2)*mt^9*s23;
 
 .sort
id KMatrix(2,10) =  2*mt^5*s24 - 2*mt^5*s23 - denom(1/2*s12)*mt^3*s14*s24^2 + 
      denom(1/2*s12)*mt^3*s14*s23*s24 - denom(1/2*s12)*mt^3*s13*s23*s24 + 
      denom(1/2*s12)*mt^3*s13*s23^2 + denom(1/2*s12)*mt^5*s24^2 - denom(1/2*
      s12)*mt^5*s23^2 + denom(1/2*s12)*mt^5*s14*s24 - denom(1/2*s12)*mt^5*s14*
      s23 + denom(1/2*s12)*mt^5*s13*s24 - denom(1/2*s12)*mt^5*s13*s23 - 2*
      denom(1/2*s12)*mt^7*s24 + 2*denom(1/2*s12)*mt^7*s23 + 1/2*denom(1/4*
      s12^2)*mt*s13*s14*s23*s24^2 - 1/2*denom(1/4*s12^2)*mt*s13*s14*s23^2*s24
       - 1/2*denom(1/4*s12^2)*mt^3*s14*s23*s24^2 + 1/2*denom(1/4*s12^2)*mt^3*
      s14*s23^2*s24 - 1/2*denom(1/4*s12^2)*mt^3*s13*s23*s24^2 + 1/2*denom(1/4*
      s12^2)*mt^3*s13*s23^2*s24 - 1/2*denom(1/4*s12^2)*mt^3*s13*s14*s24^2 + 1/
      2*denom(1/4*s12^2)*mt^3*s13*s14*s23^2 + 1/2*denom(1/4*s12^2)*mt^5*s23*
      s24^2 - 1/2*denom(1/4*s12^2)*mt^5*s23^2*s24 + 1/2*denom(1/4*s12^2)*mt^5*
      s14*s24^2 - 1/2*denom(1/4*s12^2)*mt^5*s14*s23^2 + 1/2*denom(1/4*s12^2)*
      mt^5*s13*s24^2 - 1/2*denom(1/4*s12^2)*mt^5*s13*s23^2 + 1/2*denom(1/4*
      s12^2)*mt^5*s13*s14*s24 - 1/2*denom(1/4*s12^2)*mt^5*s13*s14*s23 - 1/2*
      denom(1/4*s12^2)*mt^7*s24^2 + 1/2*denom(1/4*s12^2)*mt^7*s23^2 - 1/2*
      denom(1/4*s12^2)*mt^7*s14*s24 + 1/2*denom(1/4*s12^2)*mt^7*s14*s23 - 1/2*
      denom(1/4*s12^2)*mt^7*s13*s24 + 1/2*denom(1/4*s12^2)*mt^7*s13*s23 + 1/2*
      denom(1/4*s12^2)*mt^9*s24 - 1/2*denom(1/4*s12^2)*mt^9*s23;
 
 .sort
id KMatrix(2,11) =  1/2*mt*s24^3 + 1/2*mt*s23*s24^2 - 1/2*mt*s23^2*s24 - 1/2*
      mt*s23^3 + mt*s14*s24^2 - mt*s14*s23^2 + 1/2*mt*s14^2*s24 - 1/2*mt*s14^2
      *s23 + mt*s13*s24^2 - mt*s13*s23^2 + mt*s13*s14*s24 - mt*s13*s14*s23 + 1/
      2*mt*s13^2*s24 - 1/2*mt*s13^2*s23 + mt*s12*s24^2 - mt*s12*s23^2 + mt*s12
      *s14*s24 - mt*s12*s14*s23 + mt*s12*s13*s24 - mt*s12*s13*s23 + 1/2*mt*
      s12^2*s24 - 1/2*mt*s12^2*s23 - mt*mh^2*s24^2 + mt*mh^2*s23^2 - mt*mh^2*
      s14*s24 + mt*mh^2*s14*s23 - mt*mh^2*s13*s24 + mt*mh^2*s13*s23 - mt*mh^2*
      s12*s24 + mt*mh^2*s12*s23 + 1/2*mt*mh^4*s24 - 1/2*mt*mh^4*s23 - 2*mt^3*
      s24^2 + 2*mt^3*s23^2 - 2*mt^3*s14*s24 + 2*mt^3*s14*s23 - 2*mt^3*s13*s24
       + 2*mt^3*s13*s23 - 2*mt^3*s12*s24 + 2*mt^3*s12*s23 + 2*mt^3*mh^2*s24 - 
      2*mt^3*mh^2*s23 + 2*mt^5*s24 - 2*mt^5*s23 + 1/2*denom(1/2*s12)*mt*s14*
      s23*s24^2 - 1/2*denom(1/2*s12)*mt*s14*s23^3 + 1/2*denom(1/2*s12)*mt*
      s14^2*s23*s24 - 1/2*denom(1/2*s12)*mt*s14^2*s23^2 + 1/2*denom(1/2*s12)*
      mt*s13*s24^3 - 1/2*denom(1/2*s12)*mt*s13*s23^2*s24 + 1/2*denom(1/2*s12)*
      mt*s13*s14*s24^2 - 1/2*denom(1/2*s12)*mt*s13*s14*s23^2 + 1/2*denom(1/2*
      s12)*mt*s13^2*s24^2 - 1/2*denom(1/2*s12)*mt*s13^2*s23*s24 + 1/2*denom(1/
      2*s12)*mt*s12*s14*s23*s24 - 1/2*denom(1/2*s12)*mt*s12*s14*s23^2 + 1/2*
      denom(1/2*s12)*mt*s12*s13*s24^2 - 1/2*denom(1/2*s12)*mt*s12*s13*s23*s24
       - 1/2*denom(1/2*s12)*mt*mh^2*s14*s23*s24 + 1/2*denom(1/2*s12)*mt*mh^2*
      s14*s23^2 - 1/2*denom(1/2*s12)*mt*mh^2*s13*s24^2 + 1/2*denom(1/2*s12)*mt
      *mh^2*s13*s23*s24 - 1/2*denom(1/2*s12)*mt^3*s24^3 - 1/2*denom(1/2*s12)*
      mt^3*s23*s24^2 + 1/2*denom(1/2*s12)*mt^3*s23^2*s24 + 1/2*denom(1/2*s12)*
      mt^3*s23^3 - denom(1/2*s12)*mt^3*s14*s24^2 - denom(1/2*s12)*mt^3*s14*s23
      *s24 + 2*denom(1/2*s12)*mt^3*s14*s23^2 - 1/2*denom(1/2*s12)*mt^3*s14^2*
      s24 + 1/2*denom(1/2*s12)*mt^3*s14^2*s23 - 2*denom(1/2*s12)*mt^3*s13*
      s24^2 + denom(1/2*s12)*mt^3*s13*s23*s24 + denom(1/2*s12)*mt^3*s13*s23^2
       - denom(1/2*s12)*mt^3*s13*s14*s24 + denom(1/2*s12)*mt^3*s13*s14*s23 - 1/
      2*denom(1/2*s12)*mt^3*s13^2*s24 + 1/2*denom(1/2*s12)*mt^3*s13^2*s23 - 1/
      2*denom(1/2*s12)*mt^3*s12*s24^2 + 1/2*denom(1/2*s12)*mt^3*s12*s23^2 - 1/
      2*denom(1/2*s12)*mt^3*s12*s14*s24 + 1/2*denom(1/2*s12)*mt^3*s12*s14*s23
       - 1/2*denom(1/2*s12)*mt^3*s12*s13*s24 + 1/2*denom(1/2*s12)*mt^3*s12*s13
      *s23 + 1/2*denom(1/2*s12)*mt^3*mh^2*s24^2 - 1/2*denom(1/2*s12)*mt^3*mh^2
      *s23^2 + 1/2*denom(1/2*s12)*mt^3*mh^2*s14*s24 - 1/2*denom(1/2*s12)*mt^3*
      mh^2*s14*s23 + 1/2*denom(1/2*s12)*mt^3*mh^2*s13*s24 - 1/2*denom(1/2*s12)
      *mt^3*mh^2*s13*s23 + 2*denom(1/2*s12)*mt^5*s24^2 - 2*denom(1/2*s12)*mt^5
      *s23^2 + 2*denom(1/2*s12)*mt^5*s14*s24 - 2*denom(1/2*s12)*mt^5*s14*s23
       + 2*denom(1/2*s12)*mt^5*s13*s24 - 2*denom(1/2*s12)*mt^5*s13*s23 + 
      denom(1/2*s12)*mt^5*s12*s24 - denom(1/2*s12)*mt^5*s12*s23 - denom(1/2*
      s12)*mt^5*mh^2*s24 + denom(1/2*s12)*mt^5*mh^2*s23 - 2*denom(1/2*s12)*
      mt^7*s24 + 2*denom(1/2*s12)*mt^7*s23 + 1/8*denom(1/4*s12^2)*mt*s14^2*
      s23^2*s24 - 1/8*denom(1/4*s12^2)*mt*s14^2*s23^3 + 1/4*denom(1/4*s12^2)*
      mt*s13*s14*s23*s24^2 - 1/4*denom(1/4*s12^2)*mt*s13*s14*s23^2*s24 + 1/8*
      denom(1/4*s12^2)*mt*s13^2*s24^3 - 1/8*denom(1/4*s12^2)*mt*s13^2*s23*
      s24^2 - 1/4*denom(1/4*s12^2)*mt^3*s14*s23*s24^2 + 1/4*denom(1/4*s12^2)*
      mt^3*s14*s23^3 - 1/4*denom(1/4*s12^2)*mt^3*s14^2*s23*s24 + 1/4*denom(1/4
      *s12^2)*mt^3*s14^2*s23^2 - 1/4*denom(1/4*s12^2)*mt^3*s13*s24^3 + 1/4*
      denom(1/4*s12^2)*mt^3*s13*s23^2*s24 - 1/4*denom(1/4*s12^2)*mt^3*s13*s14*
      s24^2 + 1/4*denom(1/4*s12^2)*mt^3*s13*s14*s23^2 - 1/4*denom(1/4*s12^2)*
      mt^3*s13^2*s24^2 + 1/4*denom(1/4*s12^2)*mt^3*s13^2*s23*s24 + 1/8*denom(1/
      4*s12^2)*mt^5*s24^3 + 1/8*denom(1/4*s12^2)*mt^5*s23*s24^2 - 1/8*denom(1/
      4*s12^2)*mt^5*s23^2*s24 - 1/8*denom(1/4*s12^2)*mt^5*s23^3 + 1/4*denom(1/
      4*s12^2)*mt^5*s14*s24^2 + 1/2*denom(1/4*s12^2)*mt^5*s14*s23*s24 - 3/4*
      denom(1/4*s12^2)*mt^5*s14*s23^2 + 1/8*denom(1/4*s12^2)*mt^5*s14^2*s24 - 
      1/8*denom(1/4*s12^2)*mt^5*s14^2*s23 + 3/4*denom(1/4*s12^2)*mt^5*s13*
      s24^2 - 1/2*denom(1/4*s12^2)*mt^5*s13*s23*s24 - 1/4*denom(1/4*s12^2)*
      mt^5*s13*s23^2 + 1/4*denom(1/4*s12^2)*mt^5*s13*s14*s24 - 1/4*denom(1/4*
      s12^2)*mt^5*s13*s14*s23 + 1/8*denom(1/4*s12^2)*mt^5*s13^2*s24 - 1/8*
      denom(1/4*s12^2)*mt^5*s13^2*s23 - 1/2*denom(1/4*s12^2)*mt^7*s24^2 + 1/2*
      denom(1/4*s12^2)*mt^7*s23^2 - 1/2*denom(1/4*s12^2)*mt^7*s14*s24 + 1/2*
      denom(1/4*s12^2)*mt^7*s14*s23 - 1/2*denom(1/4*s12^2)*mt^7*s13*s24 + 1/2*
      denom(1/4*s12^2)*mt^7*s13*s23 + 1/2*denom(1/4*s12^2)*mt^9*s24 - 1/2*
      denom(1/4*s12^2)*mt^9*s23;
 
 .sort
id KMatrix(2,12) =   - mt^3*s24^2 + mt^3*s23^2 - mt^3*s14*s24 + mt^3*s14*s23
       - mt^3*s13*s24 + mt^3*s13*s23 - mt^3*s12*s24 + mt^3*s12*s23 + mt^3*mh^2
      *s24 - mt^3*mh^2*s23 + 2*mt^5*s24 - 2*mt^5*s23 + 1/2*denom(1/2*s12)*mt*
      s14*s24^3 - 1/2*denom(1/2*s12)*mt*s14*s23^2*s24 + 1/2*denom(1/2*s12)*mt*
      s14^2*s24^2 - 1/2*denom(1/2*s12)*mt*s14^2*s23*s24 + 1/2*denom(1/2*s12)*
      mt*s13*s14*s24^2 - 1/2*denom(1/2*s12)*mt*s13*s14*s23*s24 + 1/2*denom(1/2
      *s12)*mt*s12*s14*s24^2 - 1/2*denom(1/2*s12)*mt*s12*s14*s23*s24 - 1/2*
      denom(1/2*s12)*mt*mh^2*s14*s24^2 + 1/2*denom(1/2*s12)*mt*mh^2*s14*s23*
      s24 - 1/2*denom(1/2*s12)*mt^3*s24^3 + 1/2*denom(1/2*s12)*mt^3*s23^2*s24
       - 2*denom(1/2*s12)*mt^3*s14*s24^2 + denom(1/2*s12)*mt^3*s14*s23*s24 + 
      denom(1/2*s12)*mt^3*s14*s23^2 - 1/2*denom(1/2*s12)*mt^3*s14^2*s24 + 1/2*
      denom(1/2*s12)*mt^3*s14^2*s23 - denom(1/2*s12)*mt^3*s13*s24^2 + denom(1/
      2*s12)*mt^3*s13*s23*s24 - 1/2*denom(1/2*s12)*mt^3*s13*s14*s24 + 1/2*
      denom(1/2*s12)*mt^3*s13*s14*s23 - 1/2*denom(1/2*s12)*mt^3*s12*s24^2 + 1/
      2*denom(1/2*s12)*mt^3*s12*s23*s24 - 1/2*denom(1/2*s12)*mt^3*s12*s14*s24
       + 1/2*denom(1/2*s12)*mt^3*s12*s14*s23 + 1/2*denom(1/2*s12)*mt^3*mh^2*
      s24^2 - 1/2*denom(1/2*s12)*mt^3*mh^2*s23*s24 + 1/2*denom(1/2*s12)*mt^3*
      mh^2*s14*s24 - 1/2*denom(1/2*s12)*mt^3*mh^2*s14*s23 + 2*denom(1/2*s12)*
      mt^5*s24^2 - denom(1/2*s12)*mt^5*s23*s24 - denom(1/2*s12)*mt^5*s23^2 + 2
      *denom(1/2*s12)*mt^5*s14*s24 - 2*denom(1/2*s12)*mt^5*s14*s23 + denom(1/2
      *s12)*mt^5*s13*s24 - denom(1/2*s12)*mt^5*s13*s23 + 1/2*denom(1/2*s12)*
      mt^5*s12*s24 - 1/2*denom(1/2*s12)*mt^5*s12*s23 - 1/2*denom(1/2*s12)*mt^5
      *mh^2*s24 + 1/2*denom(1/2*s12)*mt^5*mh^2*s23 - 2*denom(1/2*s12)*mt^7*s24
       + 2*denom(1/2*s12)*mt^7*s23 + 1/4*denom(1/4*s12^2)*mt*s14^2*s23*s24^2
       - 1/4*denom(1/4*s12^2)*mt*s14^2*s23^2*s24 + 1/4*denom(1/4*s12^2)*mt*s13
      *s14*s24^3 - 1/4*denom(1/4*s12^2)*mt*s13*s14*s23*s24^2 - 1/4*denom(1/4*
      s12^2)*mt^3*s14*s24^3 - 1/4*denom(1/4*s12^2)*mt^3*s14*s23*s24^2 + 1/2*
      denom(1/4*s12^2)*mt^3*s14*s23^2*s24 - 1/4*denom(1/4*s12^2)*mt^3*s14^2*
      s24^2 + 1/4*denom(1/4*s12^2)*mt^3*s14^2*s23^2 - 1/4*denom(1/4*s12^2)*
      mt^3*s13*s24^3 + 1/4*denom(1/4*s12^2)*mt^3*s13*s23*s24^2 - 1/2*denom(1/4
      *s12^2)*mt^3*s13*s14*s24^2 + 1/2*denom(1/4*s12^2)*mt^3*s13*s14*s23*s24
       + 1/4*denom(1/4*s12^2)*mt^5*s24^3 - 1/4*denom(1/4*s12^2)*mt^5*s23^2*s24
       + denom(1/4*s12^2)*mt^5*s14*s24^2 - 1/2*denom(1/4*s12^2)*mt^5*s14*s23*
      s24 - 1/2*denom(1/4*s12^2)*mt^5*s14*s23^2 + 1/4*denom(1/4*s12^2)*mt^5*
      s14^2*s24 - 1/4*denom(1/4*s12^2)*mt^5*s14^2*s23 + 1/2*denom(1/4*s12^2)*
      mt^5*s13*s24^2 - 1/2*denom(1/4*s12^2)*mt^5*s13*s23*s24 + 1/4*denom(1/4*
      s12^2)*mt^5*s13*s14*s24 - 1/4*denom(1/4*s12^2)*mt^5*s13*s14*s23 - 3/4*
      denom(1/4*s12^2)*mt^7*s24^2 + 1/2*denom(1/4*s12^2)*mt^7*s23*s24 + 1/4*
      denom(1/4*s12^2)*mt^7*s23^2 - 3/4*denom(1/4*s12^2)*mt^7*s14*s24 + 3/4*
      denom(1/4*s12^2)*mt^7*s14*s23 - 1/4*denom(1/4*s12^2)*mt^7*s13*s24 + 1/4*
      denom(1/4*s12^2)*mt^7*s13*s23 + 1/2*denom(1/4*s12^2)*mt^9*s24 - 1/2*
      denom(1/4*s12^2)*mt^9*s23;
 
 .sort
id KMatrix(2,13) =   - 1/2*mt^2*s14*s23*s24 - 1/2*mt^2*s14*s23^2 - 1/2*mt^2*
      s14^2*s23 + 1/2*mt^2*s13*s24^2 + 1/2*mt^2*s13*s23*s24 + 1/2*mt^2*s13*s14
      *s24 - 1/2*mt^2*s13*s14*s23 + 1/2*mt^2*s13^2*s24 + 1/2*mt^2*s12*s24^2 + 
      mt^2*s12*s23*s24 + 1/2*mt^2*s12*s23^2 + mt^2*s12*s14*s24 + 1/2*mt^2*s12*
      s14*s23 + 1/2*mt^2*s12*s14^2 + 3/2*mt^2*s12*s13*s24 + mt^2*s12*s13*s23
       + mt^2*s12*s13*s14 + 1/2*mt^2*s12*s13^2 + mt^2*s12^2*s24 + mt^2*s12^2*
      s23 + mt^2*s12^2*s14 + mt^2*s12^2*s13 + 1/2*mt^2*s12^3 + 1/2*mt^2*mh^2*
      s14*s23 - 1/2*mt^2*mh^2*s13*s24 - mt^2*mh^2*s12*s24 - mt^2*mh^2*s12*s23
       - mt^2*mh^2*s12*s14 - mt^2*mh^2*s12*s13 - mt^2*mh^2*s12^2 + 1/2*mt^2*
      mh^4*s12 - 1/2*mt^4*s24^2 + 1/2*mt^4*s23^2 + 2*mt^4*s14*s23 + 1/2*mt^4*
      s14^2 - 2*mt^4*s13*s24 - 1/2*mt^4*s13^2 - 3/2*mt^4*s12*s24 - 1/2*mt^4*
      s12*s23 - 1/2*mt^4*s12*s14 - 3/2*mt^4*s12*s13 - mt^4*s12^2 + 1/2*mt^4*
      mh^2*s24 - 1/2*mt^4*mh^2*s23 - 1/2*mt^4*mh^2*s14 + 1/2*mt^4*mh^2*s13 + 
      mt^4*mh^2*s12 + mt^6*s24 - mt^6*s23 - mt^6*s14 + mt^6*s13 + 1/4*denom(1/
      2*s12)*s13*s14*s23^2*s24 + 1/4*denom(1/2*s12)*s13*s14*s23^3 + 1/4*denom(
      1/2*s12)*s13*s14^2*s23^2 - 1/4*denom(1/2*s12)*s13^2*s23*s24^2 - 1/4*
      denom(1/2*s12)*s13^2*s23^2*s24 - 1/4*denom(1/2*s12)*s13^2*s14*s23*s24 + 
      1/4*denom(1/2*s12)*s13^2*s14*s23^2 - 1/4*denom(1/2*s12)*s13^3*s23*s24 - 
      1/4*denom(1/2*s12)*s12*s13*s23*s24^2 - 1/2*denom(1/2*s12)*s12*s13*s23^2*
      s24 - 1/4*denom(1/2*s12)*s12*s13*s23^3 - 1/2*denom(1/2*s12)*s12*s13*s14*
      s23*s24 - 1/4*denom(1/2*s12)*s12*s13*s14*s23^2 - 1/4*denom(1/2*s12)*s12*
      s13*s14^2*s23 - 3/4*denom(1/2*s12)*s12*s13^2*s23*s24 - 1/2*denom(1/2*s12
      )*s12*s13^2*s23^2 - 1/2*denom(1/2*s12)*s12*s13^2*s14*s23 - 1/4*denom(1/2
      *s12)*s12*s13^3*s23 - 1/2*denom(1/2*s12)*s12^2*s13*s23*s24 - 1/2*denom(1/
      2*s12)*s12^2*s13*s23^2 - 1/2*denom(1/2*s12)*s12^2*s13*s14*s23 - 1/2*
      denom(1/2*s12)*s12^2*s13^2*s23 - 1/4*denom(1/2*s12)*s12^3*s13*s23 - 1/4*
      denom(1/2*s12)*mh^2*s13*s14*s23^2 + 1/4*denom(1/2*s12)*mh^2*s13^2*s23*
      s24 + 1/2*denom(1/2*s12)*mh^2*s12*s13*s23*s24 + 1/2*denom(1/2*s12)*mh^2*
      s12*s13*s23^2 + 1/2*denom(1/2*s12)*mh^2*s12*s13*s14*s23 + 1/2*denom(1/2*
      s12)*mh^2*s12*s13^2*s23 + 1/2*denom(1/2*s12)*mh^2*s12^2*s13*s23 - 1/4*
      denom(1/2*s12)*mh^4*s12*s13*s23 - 1/4*denom(1/2*s12)*mt^2*s14*s23^2*s24
       - 1/4*denom(1/2*s12)*mt^2*s14*s23^3 - 1/2*denom(1/2*s12)*mt^2*s14^2*
      s23^2 + 1/2*denom(1/2*s12)*mt^2*s13*s23*s24^2 + 1/4*denom(1/2*s12)*mt^2*
      s13*s23^2*s24 - 1/4*denom(1/2*s12)*mt^2*s13*s23^3 - 3/2*denom(1/2*s12)*
      mt^2*s13*s14*s23^2 - 1/2*denom(1/2*s12)*mt^2*s13*s14^2*s23 + 1/2*denom(1/
      2*s12)*mt^2*s13^2*s24^2 + 3/2*denom(1/2*s12)*mt^2*s13^2*s23*s24 + 1/4*
      denom(1/2*s12)*mt^2*s13^2*s14*s24 - 1/4*denom(1/2*s12)*mt^2*s13^2*s14*
      s23 + 1/4*denom(1/2*s12)*mt^2*s13^3*s24 + 1/4*denom(1/2*s12)*mt^2*s13^3*
      s23 + 1/4*denom(1/2*s12)*mt^2*s12*s23*s24^2 + 1/2*denom(1/2*s12)*mt^2*
      s12*s23^2*s24 + 1/4*denom(1/2*s12)*mt^2*s12*s23^3 + 3/4*denom(1/2*s12)*
      mt^2*s12*s14*s23*s24 + 1/2*denom(1/2*s12)*mt^2*s12*s14*s23^2 + 1/2*
      denom(1/2*s12)*mt^2*s12*s14^2*s23 + 1/2*denom(1/2*s12)*mt^2*s12*s13*
      s24^2 + 9/4*denom(1/2*s12)*mt^2*s12*s13*s23*s24 + denom(1/2*s12)*mt^2*
      s12*s13*s23^2 + 3/4*denom(1/2*s12)*mt^2*s12*s13*s14*s24 + 5/4*denom(1/2*
      s12)*mt^2*s12*s13*s14*s23 + 1/4*denom(1/2*s12)*mt^2*s12*s13*s14^2 + 
      denom(1/2*s12)*mt^2*s12*s13^2*s24 + 3/2*denom(1/2*s12)*mt^2*s12*s13^2*
      s23 + 1/2*denom(1/2*s12)*mt^2*s12*s13^2*s14 + 1/4*denom(1/2*s12)*mt^2*
      s12*s13^3 + 1/2*denom(1/2*s12)*mt^2*s12^2*s23*s24 + 1/2*denom(1/2*s12)*
      mt^2*s12^2*s23^2 + 3/4*denom(1/2*s12)*mt^2*s12^2*s14*s23 + 3/4*denom(1/2
      *s12)*mt^2*s12^2*s13*s24 + 3/2*denom(1/2*s12)*mt^2*s12^2*s13*s23 + 1/2*
      denom(1/2*s12)*mt^2*s12^2*s13*s14 + 1/2*denom(1/2*s12)*mt^2*s12^2*s13^2
       + 1/4*denom(1/2*s12)*mt^2*s12^3*s23 + 1/4*denom(1/2*s12)*mt^2*s12^3*s13
       + 1/4*denom(1/2*s12)*mt^2*mh^2*s14*s23^2 - 1/2*denom(1/2*s12)*mt^2*mh^2
      *s13*s23*s24 + 1/4*denom(1/2*s12)*mt^2*mh^2*s13*s23^2 + 1/2*denom(1/2*
      s12)*mt^2*mh^2*s13*s14*s23 - 1/4*denom(1/2*s12)*mt^2*mh^2*s13^2*s24 - 1/
      4*denom(1/2*s12)*mt^2*mh^2*s13^2*s23 - 1/2*denom(1/2*s12)*mt^2*mh^2*s12*
      s23*s24 - 1/2*denom(1/2*s12)*mt^2*mh^2*s12*s23^2 - 3/4*denom(1/2*s12)*
      mt^2*mh^2*s12*s14*s23 - 3/4*denom(1/2*s12)*mt^2*mh^2*s12*s13*s24 - 3/2*
      denom(1/2*s12)*mt^2*mh^2*s12*s13*s23 - 1/2*denom(1/2*s12)*mt^2*mh^2*s12*
      s13*s14 - 1/2*denom(1/2*s12)*mt^2*mh^2*s12*s13^2 - 1/2*denom(1/2*s12)*
      mt^2*mh^2*s12^2*s23 - 1/2*denom(1/2*s12)*mt^2*mh^2*s12^2*s13 + 1/4*
      denom(1/2*s12)*mt^2*mh^4*s12*s23 + 1/4*denom(1/2*s12)*mt^2*mh^4*s12*s13
       - 1/4*denom(1/2*s12)*mt^4*s23*s24^2 + 1/4*denom(1/2*s12)*mt^4*s23^3 + 1/
      4*denom(1/2*s12)*mt^4*s14*s23*s24 + 7/4*denom(1/2*s12)*mt^4*s14*s23^2 + 
      denom(1/2*s12)*mt^4*s14^2*s23 - denom(1/2*s12)*mt^4*s13*s24^2 - 7/4*
      denom(1/2*s12)*mt^4*s13*s23*s24 + 3/4*denom(1/2*s12)*mt^4*s13*s23^2 - 1/
      4*denom(1/2*s12)*mt^4*s13*s14*s24 + 7/4*denom(1/2*s12)*mt^4*s13*s14*s23
       + 1/4*denom(1/2*s12)*mt^4*s13*s14^2 - 7/4*denom(1/2*s12)*mt^4*s13^2*s24
       - 3/4*denom(1/2*s12)*mt^4*s13^2*s23 - 1/4*denom(1/2*s12)*mt^4*s13^3 - 1/
      2*denom(1/2*s12)*mt^4*s12*s24^2 - 7/4*denom(1/2*s12)*mt^4*s12*s23*s24 - 
      3/4*denom(1/2*s12)*mt^4*s12*s23^2 - denom(1/2*s12)*mt^4*s12*s14*s24 - 
      denom(1/2*s12)*mt^4*s12*s14*s23 - 1/2*denom(1/2*s12)*mt^4*s12*s14^2 - 2*
      denom(1/2*s12)*mt^4*s12*s13*s24 - 2*denom(1/2*s12)*mt^4*s12*s13*s23 - 5/
      4*denom(1/2*s12)*mt^4*s12*s13*s14 - 5/4*denom(1/2*s12)*mt^4*s12*s13^2 - 
      3/4*denom(1/2*s12)*mt^4*s12^2*s24 - 5/4*denom(1/2*s12)*mt^4*s12^2*s23 - 
      3/4*denom(1/2*s12)*mt^4*s12^2*s14 - 5/4*denom(1/2*s12)*mt^4*s12^2*s13 - 
      1/4*denom(1/2*s12)*mt^4*s12^3 + 1/4*denom(1/2*s12)*mt^4*mh^2*s23*s24 - 1/
      4*denom(1/2*s12)*mt^4*mh^2*s23^2 - 1/2*denom(1/2*s12)*mt^4*mh^2*s14*s23
       + 1/2*denom(1/2*s12)*mt^4*mh^2*s13*s24 - 1/4*denom(1/2*s12)*mt^4*mh^2*
      s13*s14 + 1/4*denom(1/2*s12)*mt^4*mh^2*s13^2 + 3/4*denom(1/2*s12)*mt^4*
      mh^2*s12*s24 + 5/4*denom(1/2*s12)*mt^4*mh^2*s12*s23 + 3/4*denom(1/2*s12)
      *mt^4*mh^2*s12*s14 + 5/4*denom(1/2*s12)*mt^4*mh^2*s12*s13 + 1/2*denom(1/
      2*s12)*mt^4*mh^2*s12^2 - 1/4*denom(1/2*s12)*mt^4*mh^4*s12 + 1/2*denom(1/
      2*s12)*mt^6*s24^2 + 1/2*denom(1/2*s12)*mt^6*s23*s24 - denom(1/2*s12)*
      mt^6*s23^2 - 5/2*denom(1/2*s12)*mt^6*s14*s23 - 1/2*denom(1/2*s12)*mt^6*
      s14^2 + 5/2*denom(1/2*s12)*mt^6*s13*s24 - 1/2*denom(1/2*s12)*mt^6*s13*
      s14 + denom(1/2*s12)*mt^6*s13^2 + 5/4*denom(1/2*s12)*mt^6*s12*s24 + 3/4*
      denom(1/2*s12)*mt^6*s12*s23 + 3/4*denom(1/2*s12)*mt^6*s12*s14 + 5/4*
      denom(1/2*s12)*mt^6*s12*s13 + denom(1/2*s12)*mt^6*s12^2 - 1/4*denom(1/2*
      s12)*mt^6*mh^2*s24 + 1/4*denom(1/2*s12)*mt^6*mh^2*s23 + 1/4*denom(1/2*
      s12)*mt^6*mh^2*s14 - 1/4*denom(1/2*s12)*mt^6*mh^2*s13 - denom(1/2*s12)*
      mt^6*mh^2*s12 - denom(1/2*s12)*mt^8*s24 + denom(1/2*s12)*mt^8*s23 + 
      denom(1/2*s12)*mt^8*s14 - denom(1/2*s12)*mt^8*s13 + 1/8*denom(1/4*s12^2)
      *s13*s14^2*s23^3 - 1/8*denom(1/4*s12^2)*s13^3*s23*s24^2 - 1/8*denom(1/4*
      s12^2)*s12*s13*s14*s23^2*s24 - 1/8*denom(1/4*s12^2)*s12*s13*s14*s23^3 - 
      1/8*denom(1/4*s12^2)*s12*s13*s14^2*s23^2 - 1/8*denom(1/4*s12^2)*s12*
      s13^2*s23*s24^2 - 1/8*denom(1/4*s12^2)*s12*s13^2*s23^2*s24 - 1/8*denom(1/
      4*s12^2)*s12*s13^2*s14*s23*s24 - 1/8*denom(1/4*s12^2)*s12*s13^2*s14*
      s23^2 - 1/8*denom(1/4*s12^2)*s12*s13^3*s23*s24 - 1/8*denom(1/4*s12^2)*
      s12^2*s13*s14*s23^2 - 1/8*denom(1/4*s12^2)*s12^2*s13^2*s23*s24 + 1/8*
      denom(1/4*s12^2)*mh^2*s12*s13*s14*s23^2 + 1/8*denom(1/4*s12^2)*mh^2*s12*
      s13^2*s23*s24 - 1/8*denom(1/4*s12^2)*mt^2*s14^2*s23^3 - 1/4*denom(1/4*
      s12^2)*mt^2*s13*s14*s23^3 - 3/8*denom(1/4*s12^2)*mt^2*s13*s14^2*s23^2 + 
      3/8*denom(1/4*s12^2)*mt^2*s13^2*s23*s24^2 + 1/8*denom(1/4*s12^2)*mt^2*
      s13^3*s24^2 + 1/4*denom(1/4*s12^2)*mt^2*s13^3*s23*s24 + 1/8*denom(1/4*
      s12^2)*mt^2*s12*s14*s23^2*s24 + 1/8*denom(1/4*s12^2)*mt^2*s12*s14*s23^3
       + 1/8*denom(1/4*s12^2)*mt^2*s12*s14^2*s23^2 + 1/4*denom(1/4*s12^2)*mt^2
      *s12*s13*s23*s24^2 + 3/8*denom(1/4*s12^2)*mt^2*s12*s13*s23^2*s24 + 1/8*
      denom(1/4*s12^2)*mt^2*s12*s13*s23^3 + 1/2*denom(1/4*s12^2)*mt^2*s12*s13*
      s14*s23*s24 + 1/2*denom(1/4*s12^2)*mt^2*s12*s13*s14*s23^2 + 1/4*denom(1/
      4*s12^2)*mt^2*s12*s13*s14^2*s23 + 1/8*denom(1/4*s12^2)*mt^2*s12*s13^2*
      s24^2 + 1/2*denom(1/4*s12^2)*mt^2*s12*s13^2*s23*s24 + 1/4*denom(1/4*
      s12^2)*mt^2*s12*s13^2*s23^2 + 1/8*denom(1/4*s12^2)*mt^2*s12*s13^2*s14*
      s24 + 3/8*denom(1/4*s12^2)*mt^2*s12*s13^2*s14*s23 + 1/8*denom(1/4*s12^2)
      *mt^2*s12*s13^3*s24 + 1/8*denom(1/4*s12^2)*mt^2*s12*s13^3*s23 + 1/8*
      denom(1/4*s12^2)*mt^2*s12^2*s14*s23^2 + 1/4*denom(1/4*s12^2)*mt^2*s12^2*
      s13*s23*s24 + 1/8*denom(1/4*s12^2)*mt^2*s12^2*s13*s23^2 + 1/4*denom(1/4*
      s12^2)*mt^2*s12^2*s13*s14*s23 + 1/8*denom(1/4*s12^2)*mt^2*s12^2*s13^2*
      s24 + 1/8*denom(1/4*s12^2)*mt^2*s12^2*s13^2*s23 - 1/8*denom(1/4*s12^2)*
      mt^2*mh^2*s12*s14*s23^2 - 1/4*denom(1/4*s12^2)*mt^2*mh^2*s12*s13*s23*s24
       - 1/8*denom(1/4*s12^2)*mt^2*mh^2*s12*s13*s23^2 - 1/4*denom(1/4*s12^2)*
      mt^2*mh^2*s12*s13*s14*s23 - 1/8*denom(1/4*s12^2)*mt^2*mh^2*s12*s13^2*s24
       - 1/8*denom(1/4*s12^2)*mt^2*mh^2*s12*s13^2*s23 + 1/4*denom(1/4*s12^2)*
      mt^4*s14*s23^3 + 3/8*denom(1/4*s12^2)*mt^4*s14^2*s23^2 - 3/8*denom(1/4*
      s12^2)*mt^4*s13*s23*s24^2 + 1/8*denom(1/4*s12^2)*mt^4*s13*s23^3 + 3/4*
      denom(1/4*s12^2)*mt^4*s13*s14*s23^2 + 3/8*denom(1/4*s12^2)*mt^4*s13*
      s14^2*s23 - 3/8*denom(1/4*s12^2)*mt^4*s13^2*s24^2 - 3/4*denom(1/4*s12^2)
      *mt^4*s13^2*s23*s24 - 1/4*denom(1/4*s12^2)*mt^4*s13^3*s24 - 1/8*denom(1/
      4*s12^2)*mt^4*s13^3*s23 - 1/8*denom(1/4*s12^2)*mt^4*s12*s23*s24^2 - 1/4*
      denom(1/4*s12^2)*mt^4*s12*s23^2*s24 - 1/8*denom(1/4*s12^2)*mt^4*s12*
      s23^3 - 3/8*denom(1/4*s12^2)*mt^4*s12*s14*s23*s24 - 3/8*denom(1/4*s12^2)
      *mt^4*s12*s14*s23^2 - 1/4*denom(1/4*s12^2)*mt^4*s12*s14^2*s23 - 1/4*
      denom(1/4*s12^2)*mt^4*s12*s13*s24^2 - 7/8*denom(1/4*s12^2)*mt^4*s12*s13*
      s23*s24 - 5/8*denom(1/4*s12^2)*mt^4*s12*s13*s23^2 - 3/8*denom(1/4*s12^2)
      *mt^4*s12*s13*s14*s24 - 7/8*denom(1/4*s12^2)*mt^4*s12*s13*s14*s23 - 1/8*
      denom(1/4*s12^2)*mt^4*s12*s13*s14^2 - 3/8*denom(1/4*s12^2)*mt^4*s12*
      s13^2*s24 - 5/8*denom(1/4*s12^2)*mt^4*s12*s13^2*s23 - 1/4*denom(1/4*
      s12^2)*mt^4*s12*s13^2*s14 - 1/8*denom(1/4*s12^2)*mt^4*s12*s13^3 - 1/8*
      denom(1/4*s12^2)*mt^4*s12^2*s23*s24 - 1/8*denom(1/4*s12^2)*mt^4*s12^2*
      s23^2 - 1/4*denom(1/4*s12^2)*mt^4*s12^2*s14*s23 - 1/4*denom(1/4*s12^2)*
      mt^4*s12^2*s13*s24 - 1/2*denom(1/4*s12^2)*mt^4*s12^2*s13*s23 - 1/8*
      denom(1/4*s12^2)*mt^4*s12^2*s13*s14 - 1/8*denom(1/4*s12^2)*mt^4*s12^2*
      s13^2 + 1/8*denom(1/4*s12^2)*mt^4*mh^2*s12*s23*s24 + 1/8*denom(1/4*s12^2
      )*mt^4*mh^2*s12*s23^2 + 1/4*denom(1/4*s12^2)*mt^4*mh^2*s12*s14*s23 + 1/4
      *denom(1/4*s12^2)*mt^4*mh^2*s12*s13*s24 + 1/2*denom(1/4*s12^2)*mt^4*mh^2
      *s12*s13*s23 + 1/8*denom(1/4*s12^2)*mt^4*mh^2*s12*s13*s14 + 1/8*denom(1/
      4*s12^2)*mt^4*mh^2*s12*s13^2 + 1/8*denom(1/4*s12^2)*mt^6*s23*s24^2 - 1/8
      *denom(1/4*s12^2)*mt^6*s23^3 - 3/4*denom(1/4*s12^2)*mt^6*s14*s23^2 - 3/8
      *denom(1/4*s12^2)*mt^6*s14^2*s23 + 3/8*denom(1/4*s12^2)*mt^6*s13*s24^2
       + 3/4*denom(1/4*s12^2)*mt^6*s13*s23*s24 - 3/8*denom(1/4*s12^2)*mt^6*s13
      *s23^2 - 3/4*denom(1/4*s12^2)*mt^6*s13*s14*s23 - 1/8*denom(1/4*s12^2)*
      mt^6*s13*s14^2 + 3/4*denom(1/4*s12^2)*mt^6*s13^2*s24 + 3/8*denom(1/4*
      s12^2)*mt^6*s13^2*s23 + 1/8*denom(1/4*s12^2)*mt^6*s13^3 + 1/8*denom(1/4*
      s12^2)*mt^6*s12*s24^2 + 1/2*denom(1/4*s12^2)*mt^6*s12*s23*s24 + 3/8*
      denom(1/4*s12^2)*mt^6*s12*s23^2 + 1/4*denom(1/4*s12^2)*mt^6*s12*s14*s24
       + 1/2*denom(1/4*s12^2)*mt^6*s12*s14*s23 + 1/8*denom(1/4*s12^2)*mt^6*s12
      *s14^2 + 1/2*denom(1/4*s12^2)*mt^6*s12*s13*s24 + 3/4*denom(1/4*s12^2)*
      mt^6*s12*s13*s23 + 1/2*denom(1/4*s12^2)*mt^6*s12*s13*s14 + 3/8*denom(1/4
      *s12^2)*mt^6*s12*s13^2 + 1/8*denom(1/4*s12^2)*mt^6*s12^2*s24 + 3/8*
      denom(1/4*s12^2)*mt^6*s12^2*s23 + 1/8*denom(1/4*s12^2)*mt^6*s12^2*s14 + 
      3/8*denom(1/4*s12^2)*mt^6*s12^2*s13 - 1/8*denom(1/4*s12^2)*mt^6*mh^2*s12
      *s24 - 3/8*denom(1/4*s12^2)*mt^6*mh^2*s12*s23 - 1/8*denom(1/4*s12^2)*
      mt^6*mh^2*s12*s14 - 3/8*denom(1/4*s12^2)*mt^6*mh^2*s12*s13 - 1/8*denom(1/
      4*s12^2)*mt^8*s24^2 - 1/4*denom(1/4*s12^2)*mt^8*s23*s24 + 3/8*denom(1/4*
      s12^2)*mt^8*s23^2 + 3/4*denom(1/4*s12^2)*mt^8*s14*s23 + 1/8*denom(1/4*
      s12^2)*mt^8*s14^2 - 3/4*denom(1/4*s12^2)*mt^8*s13*s24 + 1/4*denom(1/4*
      s12^2)*mt^8*s13*s14 - 3/8*denom(1/4*s12^2)*mt^8*s13^2 - 1/4*denom(1/4*
      s12^2)*mt^8*s12*s24 - 1/4*denom(1/4*s12^2)*mt^8*s12*s23 - 1/4*denom(1/4*
      s12^2)*mt^8*s12*s14 - 1/4*denom(1/4*s12^2)*mt^8*s12*s13 - 1/4*denom(1/4*
      s12^2)*mt^8*s12^2 + 1/4*denom(1/4*s12^2)*mt^8*mh^2*s12 + 1/4*denom(1/4*
      s12^2)*mt^10*s24 - 1/4*denom(1/4*s12^2)*mt^10*s23 - 1/4*denom(1/4*s12^2)
      *mt^10*s14 + 1/4*denom(1/4*s12^2)*mt^10*s13;
 
 .sort
id KMatrix(2,14) =  mt^4*s14*s23 - mt^4*s13*s24 - mt^4*s12*s24 - mt^4*s12*s23
       - mt^4*s12*s14 - mt^4*s12*s13 - mt^4*s12^2 + mt^4*mh^2*s12 + mt^6*s24
       - mt^6*s23 - mt^6*s14 + mt^6*s13 - 1/2*denom(1/2*s12)*mt^2*s14^2*s23*
      s24 + 1/2*denom(1/2*s12)*mt^2*s13*s14*s24^2 - 1/2*denom(1/2*s12)*mt^2*
      s13*s14*s23^2 + 1/2*denom(1/2*s12)*mt^2*s13^2*s23*s24 + 1/2*denom(1/2*
      s12)*mt^2*s12*s14*s24^2 + 1/2*denom(1/2*s12)*mt^2*s12*s14*s23*s24 + 1/2*
      denom(1/2*s12)*mt^2*s12*s14^2*s24 + 1/2*denom(1/2*s12)*mt^2*s12*s13*s23*
      s24 + 1/2*denom(1/2*s12)*mt^2*s12*s13*s23^2 + 1/2*denom(1/2*s12)*mt^2*
      s12*s13*s14*s24 + 1/2*denom(1/2*s12)*mt^2*s12*s13*s14*s23 + 1/2*denom(1/
      2*s12)*mt^2*s12*s13^2*s23 + 1/2*denom(1/2*s12)*mt^2*s12^2*s14*s24 + 1/2*
      denom(1/2*s12)*mt^2*s12^2*s13*s23 - 1/2*denom(1/2*s12)*mt^2*mh^2*s12*s14
      *s24 - 1/2*denom(1/2*s12)*mt^2*mh^2*s12*s13*s23 - 1/2*denom(1/2*s12)*
      mt^4*s14*s24^2 + denom(1/2*s12)*mt^4*s14*s23*s24 + 1/2*denom(1/2*s12)*
      mt^4*s14*s23^2 + 1/2*denom(1/2*s12)*mt^4*s14^2*s24 + 1/2*denom(1/2*s12)*
      mt^4*s14^2*s23 - 1/2*denom(1/2*s12)*mt^4*s13*s24^2 - denom(1/2*s12)*mt^4
      *s13*s23*s24 + 1/2*denom(1/2*s12)*mt^4*s13*s23^2 - denom(1/2*s12)*mt^4*
      s13*s14*s24 + denom(1/2*s12)*mt^4*s13*s14*s23 - 1/2*denom(1/2*s12)*mt^4*
      s13^2*s24 - 1/2*denom(1/2*s12)*mt^4*s13^2*s23 - 1/2*denom(1/2*s12)*mt^4*
      s12*s24^2 - denom(1/2*s12)*mt^4*s12*s23*s24 - 1/2*denom(1/2*s12)*mt^4*
      s12*s23^2 - denom(1/2*s12)*mt^4*s12*s14*s24 - denom(1/2*s12)*mt^4*s12*
      s14*s23 - 1/2*denom(1/2*s12)*mt^4*s12*s14^2 - denom(1/2*s12)*mt^4*s12*
      s13*s24 - denom(1/2*s12)*mt^4*s12*s13*s23 - denom(1/2*s12)*mt^4*s12*s13*
      s14 - 1/2*denom(1/2*s12)*mt^4*s12*s13^2 - 1/2*denom(1/2*s12)*mt^4*s12^2*
      s24 - 1/2*denom(1/2*s12)*mt^4*s12^2*s23 - 1/2*denom(1/2*s12)*mt^4*s12^2*
      s14 - 1/2*denom(1/2*s12)*mt^4*s12^2*s13 + 1/2*denom(1/2*s12)*mt^4*mh^2*
      s12*s24 + 1/2*denom(1/2*s12)*mt^4*mh^2*s12*s23 + 1/2*denom(1/2*s12)*mt^4
      *mh^2*s12*s14 + 1/2*denom(1/2*s12)*mt^4*mh^2*s12*s13 + 1/2*denom(1/2*s12
      )*mt^6*s24^2 - 1/2*denom(1/2*s12)*mt^6*s23^2 - 2*denom(1/2*s12)*mt^6*s14
      *s23 - 1/2*denom(1/2*s12)*mt^6*s14^2 + 2*denom(1/2*s12)*mt^6*s13*s24 + 1/
      2*denom(1/2*s12)*mt^6*s13^2 + denom(1/2*s12)*mt^6*s12*s24 + denom(1/2*
      s12)*mt^6*s12*s23 + denom(1/2*s12)*mt^6*s12*s14 + denom(1/2*s12)*mt^6*
      s12*s13 + denom(1/2*s12)*mt^6*s12^2 - denom(1/2*s12)*mt^6*mh^2*s12 - 
      denom(1/2*s12)*mt^8*s24 + denom(1/2*s12)*mt^8*s23 + denom(1/2*s12)*mt^8*
      s14 - denom(1/2*s12)*mt^8*s13 + 1/4*denom(1/4*s12^2)*s13*s14^2*s23^2*s24
       - 1/4*denom(1/4*s12^2)*s13^2*s14*s23*s24^2 - 1/4*denom(1/4*s12^2)*s12*
      s13*s14*s23*s24^2 - 1/4*denom(1/4*s12^2)*s12*s13*s14*s23^2*s24 - 1/4*
      denom(1/4*s12^2)*s12*s13*s14^2*s23*s24 - 1/4*denom(1/4*s12^2)*s12*s13^2*
      s14*s23*s24 - 1/4*denom(1/4*s12^2)*s12^2*s13*s14*s23*s24 + 1/4*denom(1/4
      *s12^2)*mh^2*s12*s13*s14*s23*s24 - 1/4*denom(1/4*s12^2)*mt^2*s14^2*s23^2
      *s24 + 1/2*denom(1/4*s12^2)*mt^2*s13*s14*s23*s24^2 - 1/2*denom(1/4*s12^2
      )*mt^2*s13*s14*s23^2*s24 - 1/2*denom(1/4*s12^2)*mt^2*s13*s14^2*s23*s24
       - 1/4*denom(1/4*s12^2)*mt^2*s13*s14^2*s23^2 + 1/4*denom(1/4*s12^2)*mt^2
      *s13^2*s23*s24^2 + 1/4*denom(1/4*s12^2)*mt^2*s13^2*s14*s24^2 + 1/2*
      denom(1/4*s12^2)*mt^2*s13^2*s14*s23*s24 + 1/4*denom(1/4*s12^2)*mt^2*s12*
      s14*s23*s24^2 + 1/4*denom(1/4*s12^2)*mt^2*s12*s14*s23^2*s24 + 1/4*denom(
      1/4*s12^2)*mt^2*s12*s14^2*s23*s24 + 1/4*denom(1/4*s12^2)*mt^2*s12*s13*
      s23*s24^2 + 1/4*denom(1/4*s12^2)*mt^2*s12*s13*s23^2*s24 + 1/4*denom(1/4*
      s12^2)*mt^2*s12*s13*s14*s24^2 + denom(1/4*s12^2)*mt^2*s12*s13*s14*s23*
      s24 + 1/4*denom(1/4*s12^2)*mt^2*s12*s13*s14*s23^2 + 1/4*denom(1/4*s12^2)
      *mt^2*s12*s13*s14^2*s24 + 1/4*denom(1/4*s12^2)*mt^2*s12*s13*s14^2*s23 + 
      1/4*denom(1/4*s12^2)*mt^2*s12*s13^2*s23*s24 + 1/4*denom(1/4*s12^2)*mt^2*
      s12*s13^2*s14*s24 + 1/4*denom(1/4*s12^2)*mt^2*s12*s13^2*s14*s23 + 1/4*
      denom(1/4*s12^2)*mt^2*s12^2*s14*s23*s24 + 1/4*denom(1/4*s12^2)*mt^2*
      s12^2*s13*s23*s24 + 1/4*denom(1/4*s12^2)*mt^2*s12^2*s13*s14*s24 + 1/4*
      denom(1/4*s12^2)*mt^2*s12^2*s13*s14*s23 - 1/4*denom(1/4*s12^2)*mt^2*mh^2
      *s12*s14*s23*s24 - 1/4*denom(1/4*s12^2)*mt^2*mh^2*s12*s13*s23*s24 - 1/4*
      denom(1/4*s12^2)*mt^2*mh^2*s12*s13*s14*s24 - 1/4*denom(1/4*s12^2)*mt^2*
      mh^2*s12*s13*s14*s23 - 1/4*denom(1/4*s12^2)*mt^4*s14*s23*s24^2 + 1/2*
      denom(1/4*s12^2)*mt^4*s14*s23^2*s24 + 1/2*denom(1/4*s12^2)*mt^4*s14^2*
      s23*s24 + 1/4*denom(1/4*s12^2)*mt^4*s14^2*s23^2 - 1/2*denom(1/4*s12^2)*
      mt^4*s13*s23*s24^2 + 1/4*denom(1/4*s12^2)*mt^4*s13*s23^2*s24 - 1/2*
      denom(1/4*s12^2)*mt^4*s13*s14*s24^2 + 1/2*denom(1/4*s12^2)*mt^4*s13*s14*
      s23^2 + 1/4*denom(1/4*s12^2)*mt^4*s13*s14^2*s24 + 1/2*denom(1/4*s12^2)*
      mt^4*s13*s14^2*s23 - 1/4*denom(1/4*s12^2)*mt^4*s13^2*s24^2 - 1/2*denom(1/
      4*s12^2)*mt^4*s13^2*s23*s24 - 1/2*denom(1/4*s12^2)*mt^4*s13^2*s14*s24 - 
      1/4*denom(1/4*s12^2)*mt^4*s13^2*s14*s23 - 1/4*denom(1/4*s12^2)*mt^4*s12*
      s23*s24^2 - 1/4*denom(1/4*s12^2)*mt^4*s12*s23^2*s24 - 1/4*denom(1/4*
      s12^2)*mt^4*s12*s14*s24^2 - 3/4*denom(1/4*s12^2)*mt^4*s12*s14*s23*s24 - 
      1/4*denom(1/4*s12^2)*mt^4*s12*s14*s23^2 - 1/4*denom(1/4*s12^2)*mt^4*s12*
      s14^2*s24 - 1/4*denom(1/4*s12^2)*mt^4*s12*s14^2*s23 - 1/4*denom(1/4*
      s12^2)*mt^4*s12*s13*s24^2 - 3/4*denom(1/4*s12^2)*mt^4*s12*s13*s23*s24 - 
      1/4*denom(1/4*s12^2)*mt^4*s12*s13*s23^2 - 3/4*denom(1/4*s12^2)*mt^4*s12*
      s13*s14*s24 - 3/4*denom(1/4*s12^2)*mt^4*s12*s13*s14*s23 - 1/4*denom(1/4*
      s12^2)*mt^4*s12*s13*s14^2 - 1/4*denom(1/4*s12^2)*mt^4*s12*s13^2*s24 - 1/
      4*denom(1/4*s12^2)*mt^4*s12*s13^2*s23 - 1/4*denom(1/4*s12^2)*mt^4*s12*
      s13^2*s14 - 1/4*denom(1/4*s12^2)*mt^4*s12^2*s23*s24 - 1/4*denom(1/4*
      s12^2)*mt^4*s12^2*s14*s24 - 1/4*denom(1/4*s12^2)*mt^4*s12^2*s14*s23 - 1/
      4*denom(1/4*s12^2)*mt^4*s12^2*s13*s24 - 1/4*denom(1/4*s12^2)*mt^4*s12^2*
      s13*s23 - 1/4*denom(1/4*s12^2)*mt^4*s12^2*s13*s14 + 1/4*denom(1/4*s12^2)
      *mt^4*mh^2*s12*s23*s24 + 1/4*denom(1/4*s12^2)*mt^4*mh^2*s12*s14*s24 + 1/
      4*denom(1/4*s12^2)*mt^4*mh^2*s12*s14*s23 + 1/4*denom(1/4*s12^2)*mt^4*
      mh^2*s12*s13*s24 + 1/4*denom(1/4*s12^2)*mt^4*mh^2*s12*s13*s23 + 1/4*
      denom(1/4*s12^2)*mt^4*mh^2*s12*s13*s14 + 1/4*denom(1/4*s12^2)*mt^6*s23*
      s24^2 - 1/4*denom(1/4*s12^2)*mt^6*s23^2*s24 + 1/4*denom(1/4*s12^2)*mt^6*
      s14*s24^2 - 1/2*denom(1/4*s12^2)*mt^6*s14*s23*s24 - 1/2*denom(1/4*s12^2)
      *mt^6*s14*s23^2 - 1/4*denom(1/4*s12^2)*mt^6*s14^2*s24 - 1/2*denom(1/4*
      s12^2)*mt^6*s14^2*s23 + 1/2*denom(1/4*s12^2)*mt^6*s13*s24^2 + 1/2*denom(
      1/4*s12^2)*mt^6*s13*s23*s24 - 1/4*denom(1/4*s12^2)*mt^6*s13*s23^2 + 1/2*
      denom(1/4*s12^2)*mt^6*s13*s14*s24 - 1/2*denom(1/4*s12^2)*mt^6*s13*s14*
      s23 - 1/4*denom(1/4*s12^2)*mt^6*s13*s14^2 + 1/2*denom(1/4*s12^2)*mt^6*
      s13^2*s24 + 1/4*denom(1/4*s12^2)*mt^6*s13^2*s23 + 1/4*denom(1/4*s12^2)*
      mt^6*s13^2*s14 + 1/4*denom(1/4*s12^2)*mt^6*s12*s24^2 + 1/2*denom(1/4*
      s12^2)*mt^6*s12*s23*s24 + 1/4*denom(1/4*s12^2)*mt^6*s12*s23^2 + 1/2*
      denom(1/4*s12^2)*mt^6*s12*s14*s24 + 1/2*denom(1/4*s12^2)*mt^6*s12*s14*
      s23 + 1/4*denom(1/4*s12^2)*mt^6*s12*s14^2 + 1/2*denom(1/4*s12^2)*mt^6*
      s12*s13*s24 + 1/2*denom(1/4*s12^2)*mt^6*s12*s13*s23 + 1/2*denom(1/4*
      s12^2)*mt^6*s12*s13*s14 + 1/4*denom(1/4*s12^2)*mt^6*s12*s13^2 + 1/4*
      denom(1/4*s12^2)*mt^6*s12^2*s24 + 1/4*denom(1/4*s12^2)*mt^6*s12^2*s23 + 
      1/4*denom(1/4*s12^2)*mt^6*s12^2*s14 + 1/4*denom(1/4*s12^2)*mt^6*s12^2*
      s13 - 1/4*denom(1/4*s12^2)*mt^6*mh^2*s12*s24 - 1/4*denom(1/4*s12^2)*mt^6
      *mh^2*s12*s23 - 1/4*denom(1/4*s12^2)*mt^6*mh^2*s12*s14 - 1/4*denom(1/4*
      s12^2)*mt^6*mh^2*s12*s13 - 1/4*denom(1/4*s12^2)*mt^8*s24^2 + 1/4*denom(1/
      4*s12^2)*mt^8*s23^2 + 3/4*denom(1/4*s12^2)*mt^8*s14*s23 + 1/4*denom(1/4*
      s12^2)*mt^8*s14^2 - 3/4*denom(1/4*s12^2)*mt^8*s13*s24 - 1/4*denom(1/4*
      s12^2)*mt^8*s13^2 - 1/4*denom(1/4*s12^2)*mt^8*s12*s24 - 1/4*denom(1/4*
      s12^2)*mt^8*s12*s23 - 1/4*denom(1/4*s12^2)*mt^8*s12*s14 - 1/4*denom(1/4*
      s12^2)*mt^8*s12*s13 - 1/4*denom(1/4*s12^2)*mt^8*s12^2 + 1/4*denom(1/4*
      s12^2)*mt^8*mh^2*s12 + 1/4*denom(1/4*s12^2)*mt^10*s24 - 1/4*denom(1/4*
      s12^2)*mt^10*s23 - 1/4*denom(1/4*s12^2)*mt^10*s14 + 1/4*denom(1/4*s12^2)
      *mt^10*s13;
 
 .sort
id KMatrix(2,15) =  1/4*s14*s23*s24^2 + 1/2*s14*s23^2*s24 + 1/4*s14*s23^3 + 1/
      2*s14^2*s23*s24 + 1/2*s14^2*s23^2 + 1/4*s14^3*s23 - 1/4*s13*s24^3 - 1/2*
      s13*s23*s24^2 - 1/4*s13*s23^2*s24 - 1/2*s13*s14*s24^2 + 1/2*s13*s14*
      s23^2 - 1/4*s13*s14^2*s24 + 1/2*s13*s14^2*s23 - 1/2*s13^2*s24^2 - 1/2*
      s13^2*s23*s24 - 1/2*s13^2*s14*s24 + 1/4*s13^2*s14*s23 - 1/4*s13^3*s24 - 
      1/4*s12*s24^3 - 3/4*s12*s23*s24^2 - 3/4*s12*s23^2*s24 - 1/4*s12*s23^3 - 
      3/4*s12*s14*s24^2 - s12*s14*s23*s24 - 1/4*s12*s14*s23^2 - 3/4*s12*s14^2*
      s24 - 1/4*s12*s14^2*s23 - 1/4*s12*s14^3 - 5/4*s12*s13*s24^2 - 2*s12*s13*
      s23*s24 - 3/4*s12*s13*s23^2 - 2*s12*s13*s14*s24 - s12*s13*s14*s23 - 3/4*
      s12*s13*s14^2 - 5/4*s12*s13^2*s24 - 3/4*s12*s13^2*s23 - 3/4*s12*s13^2*
      s14 - 1/4*s12*s13^3 - 3/4*s12^2*s24^2 - 3/2*s12^2*s23*s24 - 3/4*s12^2*
      s23^2 - 3/2*s12^2*s14*s24 - 5/4*s12^2*s14*s23 - 3/4*s12^2*s14^2 - 7/4*
      s12^2*s13*s24 - 3/2*s12^2*s13*s23 - 3/2*s12^2*s13*s14 - 3/4*s12^2*s13^2
       - 3/4*s12^3*s24 - 3/4*s12^3*s23 - 3/4*s12^3*s14 - 3/4*s12^3*s13 - 1/4*
      s12^4 - 1/2*mh^2*s14*s23*s24 - 1/2*mh^2*s14*s23^2 - 1/2*mh^2*s14^2*s23
       + 1/2*mh^2*s13*s24^2 + 1/2*mh^2*s13*s23*s24 + 1/2*mh^2*s13*s14*s24 - 1/
      2*mh^2*s13*s14*s23 + 1/2*mh^2*s13^2*s24 + 3/4*mh^2*s12*s24^2 + 3/2*mh^2*
      s12*s23*s24 + 3/4*mh^2*s12*s23^2 + 3/2*mh^2*s12*s14*s24 + mh^2*s12*s14*
      s23 + 3/4*mh^2*s12*s14^2 + 2*mh^2*s12*s13*s24 + 3/2*mh^2*s12*s13*s23 + 3/
      2*mh^2*s12*s13*s14 + 3/4*mh^2*s12*s13^2 + 3/2*mh^2*s12^2*s24 + 3/2*mh^2*
      s12^2*s23 + 3/2*mh^2*s12^2*s14 + 3/2*mh^2*s12^2*s13 + 3/4*mh^2*s12^3 + 1/
      4*mh^4*s14*s23 - 1/4*mh^4*s13*s24 - 3/4*mh^4*s12*s24 - 3/4*mh^4*s12*s23
       - 3/4*mh^4*s12*s14 - 3/4*mh^4*s12*s13 - 3/4*mh^4*s12^2 + 1/4*mh^6*s12
       + 1/4*mt^2*s24^3 + 1/4*mt^2*s23*s24^2 - 1/4*mt^2*s23^2*s24 - 1/4*mt^2*
      s23^3 + 1/4*mt^2*s14*s24^2 - 3/2*mt^2*s14*s23*s24 - 7/4*mt^2*s14*s23^2
       - 1/4*mt^2*s14^2*s24 - 7/4*mt^2*s14^2*s23 - 1/4*mt^2*s14^3 + 7/4*mt^2*
      s13*s24^2 + 3/2*mt^2*s13*s23*s24 - 1/4*mt^2*s13*s23^2 + 3/2*mt^2*s13*s14
      *s24 - 3/2*mt^2*s13*s14*s23 - 1/4*mt^2*s13*s14^2 + 7/4*mt^2*s13^2*s24 + 
      1/4*mt^2*s13^2*s23 + 1/4*mt^2*s13^2*s14 + 1/4*mt^2*s13^3 + 3/2*mt^2*s12*
      s24^2 + 2*mt^2*s12*s23*s24 + 1/2*mt^2*s12*s23^2 + 2*mt^2*s12*s14*s24 + 1/
      2*mt^2*s12*s14^2 + 4*mt^2*s12*s13*s24 + 2*mt^2*s12*s13*s23 + 2*mt^2*s12*
      s13*s14 + 3/2*mt^2*s12*s13^2 + 9/4*mt^2*s12^2*s24 + 7/4*mt^2*s12^2*s23
       + 7/4*mt^2*s12^2*s14 + 9/4*mt^2*s12^2*s13 + mt^2*s12^3 - 1/2*mt^2*mh^2*
      s24^2 + 1/2*mt^2*mh^2*s23^2 + 2*mt^2*mh^2*s14*s23 + 1/2*mt^2*mh^2*s14^2
       - 2*mt^2*mh^2*s13*s24 - 1/2*mt^2*mh^2*s13^2 - 5/2*mt^2*mh^2*s12*s24 - 3/
      2*mt^2*mh^2*s12*s23 - 3/2*mt^2*mh^2*s12*s14 - 5/2*mt^2*mh^2*s12*s13 - 2*
      mt^2*mh^2*s12^2 + 1/4*mt^2*mh^4*s24 - 1/4*mt^2*mh^4*s23 - 1/4*mt^2*mh^4*
      s14 + 1/4*mt^2*mh^4*s13 + mt^2*mh^4*s12 - mt^4*s24^2 + mt^4*s23^2 + 3*
      mt^4*s14*s23 + mt^4*s14^2 - 3*mt^4*s13*s24 - mt^4*s13^2 - 2*mt^4*s12*s24
       - 2*mt^4*s12*s13 - mt^4*s12^2 + mt^4*mh^2*s24 - mt^4*mh^2*s23 - mt^4*
      mh^2*s14 + mt^4*mh^2*s13 + mt^4*mh^2*s12 + mt^6*s24 - mt^6*s23 - mt^6*
      s14 + mt^6*s13 + 1/4*denom(1/2*s12)*s14^2*s23^2*s24 + 1/4*denom(1/2*s12)
      *s14^2*s23^3 + 1/4*denom(1/2*s12)*s14^3*s23^2 + 1/4*denom(1/2*s12)*s13*
      s14^2*s23^2 - 1/4*denom(1/2*s12)*s13^2*s24^3 - 1/4*denom(1/2*s12)*s13^2*
      s23*s24^2 - 1/4*denom(1/2*s12)*s13^2*s14*s24^2 - 1/4*denom(1/2*s12)*
      s13^3*s24^2 - 1/4*denom(1/2*s12)*s12*s14*s23*s24^2 - 1/2*denom(1/2*s12)*
      s12*s14*s23^2*s24 - 1/4*denom(1/2*s12)*s12*s14*s23^3 - 1/2*denom(1/2*s12
      )*s12*s14^2*s23*s24 - 1/4*denom(1/2*s12)*s12*s14^2*s23^2 - 1/4*denom(1/2
      *s12)*s12*s14^3*s23 - 1/4*denom(1/2*s12)*s12*s13*s24^3 - 1/2*denom(1/2*
      s12)*s12*s13*s23*s24^2 - 1/4*denom(1/2*s12)*s12*s13*s23^2*s24 - 1/2*
      denom(1/2*s12)*s12*s13*s14*s24^2 - denom(1/2*s12)*s12*s13*s14*s23*s24 - 
      1/2*denom(1/2*s12)*s12*s13*s14*s23^2 - 1/4*denom(1/2*s12)*s12*s13*s14^2*
      s24 - 1/2*denom(1/2*s12)*s12*s13*s14^2*s23 - 3/4*denom(1/2*s12)*s12*
      s13^2*s24^2 - 1/2*denom(1/2*s12)*s12*s13^2*s23*s24 - 1/2*denom(1/2*s12)*
      s12*s13^2*s14*s24 - 1/4*denom(1/2*s12)*s12*s13^2*s14*s23 - 1/4*denom(1/2
      *s12)*s12*s13^3*s24 - 1/2*denom(1/2*s12)*s12^2*s14*s23*s24 - 1/2*denom(1/
      2*s12)*s12^2*s14*s23^2 - 1/2*denom(1/2*s12)*s12^2*s14^2*s23 - 1/2*denom(
      1/2*s12)*s12^2*s13*s24^2 - 1/2*denom(1/2*s12)*s12^2*s13*s23*s24 - 1/2*
      denom(1/2*s12)*s12^2*s13*s14*s24 - 1/2*denom(1/2*s12)*s12^2*s13*s14*s23
       - 1/2*denom(1/2*s12)*s12^2*s13^2*s24 - 1/4*denom(1/2*s12)*s12^3*s14*s23
       - 1/4*denom(1/2*s12)*s12^3*s13*s24 - 1/4*denom(1/2*s12)*mh^2*s14^2*
      s23^2 + 1/4*denom(1/2*s12)*mh^2*s13^2*s24^2 + 1/2*denom(1/2*s12)*mh^2*
      s12*s14*s23*s24 + 1/2*denom(1/2*s12)*mh^2*s12*s14*s23^2 + 1/2*denom(1/2*
      s12)*mh^2*s12*s14^2*s23 + 1/2*denom(1/2*s12)*mh^2*s12*s13*s24^2 + 1/2*
      denom(1/2*s12)*mh^2*s12*s13*s23*s24 + 1/2*denom(1/2*s12)*mh^2*s12*s13*
      s14*s24 + 1/2*denom(1/2*s12)*mh^2*s12*s13*s14*s23 + 1/2*denom(1/2*s12)*
      mh^2*s12*s13^2*s24 + 1/2*denom(1/2*s12)*mh^2*s12^2*s14*s23 + 1/2*denom(1/
      2*s12)*mh^2*s12^2*s13*s24 - 1/4*denom(1/2*s12)*mh^4*s12*s14*s23 - 1/4*
      denom(1/2*s12)*mh^4*s12*s13*s24 - 1/2*denom(1/2*s12)*mt^2*s14*s23^2*s24
       - 1/2*denom(1/2*s12)*mt^2*s14*s23^3 - 1/2*denom(1/2*s12)*mt^2*s14^2*s23
      *s24 - 3/2*denom(1/2*s12)*mt^2*s14^2*s23^2 - 1/2*denom(1/2*s12)*mt^2*
      s14^3*s23 + 1/2*denom(1/2*s12)*mt^2*s13*s24^3 + 1/2*denom(1/2*s12)*mt^2*
      s13*s23*s24^2 + 1/2*denom(1/2*s12)*mt^2*s13*s14*s24^2 - 1/2*denom(1/2*
      s12)*mt^2*s13*s14*s23^2 - 1/2*denom(1/2*s12)*mt^2*s13*s14^2*s23 + 3/2*
      denom(1/2*s12)*mt^2*s13^2*s24^2 + 1/2*denom(1/2*s12)*mt^2*s13^2*s23*s24
       + 1/2*denom(1/2*s12)*mt^2*s13^2*s14*s24 + 1/2*denom(1/2*s12)*mt^2*s13^3
      *s24 + 1/4*denom(1/2*s12)*mt^2*s12*s24^3 + 3/4*denom(1/2*s12)*mt^2*s12*
      s23*s24^2 + 3/4*denom(1/2*s12)*mt^2*s12*s23^2*s24 + 1/4*denom(1/2*s12)*
      mt^2*s12*s23^3 + 3/4*denom(1/2*s12)*mt^2*s12*s14*s24^2 + 2*denom(1/2*s12
      )*mt^2*s12*s14*s23*s24 + 3/4*denom(1/2*s12)*mt^2*s12*s14*s23^2 + 3/4*
      denom(1/2*s12)*mt^2*s12*s14^2*s24 + 3/4*denom(1/2*s12)*mt^2*s12*s14^2*
      s23 + 1/4*denom(1/2*s12)*mt^2*s12*s14^3 + 7/4*denom(1/2*s12)*mt^2*s12*
      s13*s24^2 + 2*denom(1/2*s12)*mt^2*s12*s13*s23*s24 + 3/4*denom(1/2*s12)*
      mt^2*s12*s13*s23^2 + 2*denom(1/2*s12)*mt^2*s12*s13*s14*s24 + 2*denom(1/2
      *s12)*mt^2*s12*s13*s14*s23 + 3/4*denom(1/2*s12)*mt^2*s12*s13*s14^2 + 7/4
      *denom(1/2*s12)*mt^2*s12*s13^2*s24 + 3/4*denom(1/2*s12)*mt^2*s12*s13^2*
      s23 + 3/4*denom(1/2*s12)*mt^2*s12*s13^2*s14 + 1/4*denom(1/2*s12)*mt^2*
      s12*s13^3 + 1/2*denom(1/2*s12)*mt^2*s12^2*s24^2 + denom(1/2*s12)*mt^2*
      s12^2*s23*s24 + 1/2*denom(1/2*s12)*mt^2*s12^2*s23^2 + denom(1/2*s12)*
      mt^2*s12^2*s14*s24 + 3/2*denom(1/2*s12)*mt^2*s12^2*s14*s23 + 1/2*denom(1/
      2*s12)*mt^2*s12^2*s14^2 + 3/2*denom(1/2*s12)*mt^2*s12^2*s13*s24 + denom(
      1/2*s12)*mt^2*s12^2*s13*s23 + denom(1/2*s12)*mt^2*s12^2*s13*s14 + 1/2*
      denom(1/2*s12)*mt^2*s12^2*s13^2 + 1/4*denom(1/2*s12)*mt^2*s12^3*s24 + 1/
      4*denom(1/2*s12)*mt^2*s12^3*s23 + 1/4*denom(1/2*s12)*mt^2*s12^3*s14 + 1/
      4*denom(1/2*s12)*mt^2*s12^3*s13 + 1/2*denom(1/2*s12)*mt^2*mh^2*s14*s23^2
       + 1/2*denom(1/2*s12)*mt^2*mh^2*s14^2*s23 - 1/2*denom(1/2*s12)*mt^2*mh^2
      *s13*s24^2 - 1/2*denom(1/2*s12)*mt^2*mh^2*s13^2*s24 - 1/2*denom(1/2*s12)
      *mt^2*mh^2*s12*s24^2 - denom(1/2*s12)*mt^2*mh^2*s12*s23*s24 - 1/2*denom(
      1/2*s12)*mt^2*mh^2*s12*s23^2 - denom(1/2*s12)*mt^2*mh^2*s12*s14*s24 - 3/
      2*denom(1/2*s12)*mt^2*mh^2*s12*s14*s23 - 1/2*denom(1/2*s12)*mt^2*mh^2*
      s12*s14^2 - 3/2*denom(1/2*s12)*mt^2*mh^2*s12*s13*s24 - denom(1/2*s12)*
      mt^2*mh^2*s12*s13*s23 - denom(1/2*s12)*mt^2*mh^2*s12*s13*s14 - 1/2*
      denom(1/2*s12)*mt^2*mh^2*s12*s13^2 - 1/2*denom(1/2*s12)*mt^2*mh^2*s12^2*
      s24 - 1/2*denom(1/2*s12)*mt^2*mh^2*s12^2*s23 - 1/2*denom(1/2*s12)*mt^2*
      mh^2*s12^2*s14 - 1/2*denom(1/2*s12)*mt^2*mh^2*s12^2*s13 + 1/4*denom(1/2*
      s12)*mt^2*mh^4*s12*s24 + 1/4*denom(1/2*s12)*mt^2*mh^4*s12*s23 + 1/4*
      denom(1/2*s12)*mt^2*mh^4*s12*s14 + 1/4*denom(1/2*s12)*mt^2*mh^4*s12*s13
       - 1/4*denom(1/2*s12)*mt^4*s24^3 - 1/4*denom(1/2*s12)*mt^4*s23*s24^2 + 1/
      4*denom(1/2*s12)*mt^4*s23^2*s24 + 1/4*denom(1/2*s12)*mt^4*s23^3 - 1/4*
      denom(1/2*s12)*mt^4*s14*s24^2 + denom(1/2*s12)*mt^4*s14*s23*s24 + 9/4*
      denom(1/2*s12)*mt^4*s14*s23^2 + 1/4*denom(1/2*s12)*mt^4*s14^2*s24 + 9/4*
      denom(1/2*s12)*mt^4*s14^2*s23 + 1/4*denom(1/2*s12)*mt^4*s14^3 - 9/4*
      denom(1/2*s12)*mt^4*s13*s24^2 - denom(1/2*s12)*mt^4*s13*s23*s24 + 1/4*
      denom(1/2*s12)*mt^4*s13*s23^2 - denom(1/2*s12)*mt^4*s13*s14*s24 + denom(
      1/2*s12)*mt^4*s13*s14*s23 + 1/4*denom(1/2*s12)*mt^4*s13*s14^2 - 9/4*
      denom(1/2*s12)*mt^4*s13^2*s24 - 1/4*denom(1/2*s12)*mt^4*s13^2*s23 - 1/4*
      denom(1/2*s12)*mt^4*s13^2*s14 - 1/4*denom(1/2*s12)*mt^4*s13^3 - 5/4*
      denom(1/2*s12)*mt^4*s12*s24^2 - 2*denom(1/2*s12)*mt^4*s12*s23*s24 - 3/4*
      denom(1/2*s12)*mt^4*s12*s23^2 - 2*denom(1/2*s12)*mt^4*s12*s14*s24 - 
      denom(1/2*s12)*mt^4*s12*s14*s23 - 3/4*denom(1/2*s12)*mt^4*s12*s14^2 - 3*
      denom(1/2*s12)*mt^4*s12*s13*s24 - 2*denom(1/2*s12)*mt^4*s12*s13*s23 - 2*
      denom(1/2*s12)*mt^4*s12*s13*s14 - 5/4*denom(1/2*s12)*mt^4*s12*s13^2 - 3/
      2*denom(1/2*s12)*mt^4*s12^2*s24 - 3/2*denom(1/2*s12)*mt^4*s12^2*s23 - 3/
      2*denom(1/2*s12)*mt^4*s12^2*s14 - 3/2*denom(1/2*s12)*mt^4*s12^2*s13 - 1/
      2*denom(1/2*s12)*mt^4*s12^3 + 1/4*denom(1/2*s12)*mt^4*mh^2*s24^2 - 1/4*
      denom(1/2*s12)*mt^4*mh^2*s23^2 - denom(1/2*s12)*mt^4*mh^2*s14*s23 - 1/4*
      denom(1/2*s12)*mt^4*mh^2*s14^2 + denom(1/2*s12)*mt^4*mh^2*s13*s24 + 1/4*
      denom(1/2*s12)*mt^4*mh^2*s13^2 + 3/2*denom(1/2*s12)*mt^4*mh^2*s12*s24 + 
      3/2*denom(1/2*s12)*mt^4*mh^2*s12*s23 + 3/2*denom(1/2*s12)*mt^4*mh^2*s12*
      s14 + 3/2*denom(1/2*s12)*mt^4*mh^2*s12*s13 + denom(1/2*s12)*mt^4*mh^2*
      s12^2 - 1/2*denom(1/2*s12)*mt^4*mh^4*s12 + denom(1/2*s12)*mt^6*s24^2 - 
      denom(1/2*s12)*mt^6*s23^2 - 3*denom(1/2*s12)*mt^6*s14*s23 - denom(1/2*
      s12)*mt^6*s14^2 + 3*denom(1/2*s12)*mt^6*s13*s24 + denom(1/2*s12)*mt^6*
      s13^2 + 3/2*denom(1/2*s12)*mt^6*s12*s24 + 1/2*denom(1/2*s12)*mt^6*s12*
      s23 + 1/2*denom(1/2*s12)*mt^6*s12*s14 + 3/2*denom(1/2*s12)*mt^6*s12*s13
       + denom(1/2*s12)*mt^6*s12^2 - 1/2*denom(1/2*s12)*mt^6*mh^2*s24 + 1/2*
      denom(1/2*s12)*mt^6*mh^2*s23 + 1/2*denom(1/2*s12)*mt^6*mh^2*s14 - 1/2*
      denom(1/2*s12)*mt^6*mh^2*s13 - denom(1/2*s12)*mt^6*mh^2*s12 - denom(1/2*
      s12)*mt^8*s24 + denom(1/2*s12)*mt^8*s23 + denom(1/2*s12)*mt^8*s14 - 
      denom(1/2*s12)*mt^8*s13 + 1/16*denom(1/4*s12^2)*s14^3*s23^3 + 1/16*
      denom(1/4*s12^2)*s13*s14^2*s23^2*s24 - 1/16*denom(1/4*s12^2)*s13^2*s14*
      s23*s24^2 - 1/16*denom(1/4*s12^2)*s13^3*s24^3 - 1/16*denom(1/4*s12^2)*
      s12*s14^2*s23^2*s24 - 1/16*denom(1/4*s12^2)*s12*s14^2*s23^3 - 1/16*
      denom(1/4*s12^2)*s12*s14^3*s23^2 - 1/8*denom(1/4*s12^2)*s12*s13*s14*s23*
      s24^2 - 1/8*denom(1/4*s12^2)*s12*s13*s14*s23^2*s24 - 1/8*denom(1/4*s12^2
      )*s12*s13*s14^2*s23*s24 - 1/16*denom(1/4*s12^2)*s12*s13*s14^2*s23^2 - 1/
      16*denom(1/4*s12^2)*s12*s13^2*s24^3 - 1/16*denom(1/4*s12^2)*s12*s13^2*
      s23*s24^2 - 1/16*denom(1/4*s12^2)*s12*s13^2*s14*s24^2 - 1/8*denom(1/4*
      s12^2)*s12*s13^2*s14*s23*s24 - 1/16*denom(1/4*s12^2)*s12*s13^3*s24^2 - 1/
      16*denom(1/4*s12^2)*s12^2*s14^2*s23^2 - 1/8*denom(1/4*s12^2)*s12^2*s13*
      s14*s23*s24 - 1/16*denom(1/4*s12^2)*s12^2*s13^2*s24^2 + 1/16*denom(1/4*
      s12^2)*mh^2*s12*s14^2*s23^2 + 1/8*denom(1/4*s12^2)*mh^2*s12*s13*s14*s23*
      s24 + 1/16*denom(1/4*s12^2)*mh^2*s12*s13^2*s24^2 - 1/16*denom(1/4*s12^2)
      *mt^2*s14^2*s23^2*s24 - 3/16*denom(1/4*s12^2)*mt^2*s14^2*s23^3 - 3/16*
      denom(1/4*s12^2)*mt^2*s14^3*s23^2 + 1/8*denom(1/4*s12^2)*mt^2*s13*s14*
      s23*s24^2 - 1/8*denom(1/4*s12^2)*mt^2*s13*s14*s23^2*s24 - 1/8*denom(1/4*
      s12^2)*mt^2*s13*s14^2*s23*s24 - 1/16*denom(1/4*s12^2)*mt^2*s13*s14^2*
      s23^2 + 3/16*denom(1/4*s12^2)*mt^2*s13^2*s24^3 + 1/16*denom(1/4*s12^2)*
      mt^2*s13^2*s23*s24^2 + 1/16*denom(1/4*s12^2)*mt^2*s13^2*s14*s24^2 + 1/8*
      denom(1/4*s12^2)*mt^2*s13^2*s14*s23*s24 + 3/16*denom(1/4*s12^2)*mt^2*
      s13^3*s24^2 + 1/8*denom(1/4*s12^2)*mt^2*s12*s14*s23*s24^2 + 1/4*denom(1/
      4*s12^2)*mt^2*s12*s14*s23^2*s24 + 1/8*denom(1/4*s12^2)*mt^2*s12*s14*
      s23^3 + 1/4*denom(1/4*s12^2)*mt^2*s12*s14^2*s23*s24 + 1/4*denom(1/4*
      s12^2)*mt^2*s12*s14^2*s23^2 + 1/8*denom(1/4*s12^2)*mt^2*s12*s14^3*s23 + 
      1/8*denom(1/4*s12^2)*mt^2*s12*s13*s24^3 + 1/4*denom(1/4*s12^2)*mt^2*s12*
      s13*s23*s24^2 + 1/8*denom(1/4*s12^2)*mt^2*s12*s13*s23^2*s24 + 1/4*denom(
      1/4*s12^2)*mt^2*s12*s13*s14*s24^2 + 1/2*denom(1/4*s12^2)*mt^2*s12*s13*
      s14*s23*s24 + 1/4*denom(1/4*s12^2)*mt^2*s12*s13*s14*s23^2 + 1/8*denom(1/
      4*s12^2)*mt^2*s12*s13*s14^2*s24 + 1/4*denom(1/4*s12^2)*mt^2*s12*s13*
      s14^2*s23 + 1/4*denom(1/4*s12^2)*mt^2*s12*s13^2*s24^2 + 1/4*denom(1/4*
      s12^2)*mt^2*s12*s13^2*s23*s24 + 1/4*denom(1/4*s12^2)*mt^2*s12*s13^2*s14*
      s24 + 1/8*denom(1/4*s12^2)*mt^2*s12*s13^2*s14*s23 + 1/8*denom(1/4*s12^2)
      *mt^2*s12*s13^3*s24 + 1/8*denom(1/4*s12^2)*mt^2*s12^2*s14*s23*s24 + 1/8*
      denom(1/4*s12^2)*mt^2*s12^2*s14*s23^2 + 1/8*denom(1/4*s12^2)*mt^2*s12^2*
      s14^2*s23 + 1/8*denom(1/4*s12^2)*mt^2*s12^2*s13*s24^2 + 1/8*denom(1/4*
      s12^2)*mt^2*s12^2*s13*s23*s24 + 1/8*denom(1/4*s12^2)*mt^2*s12^2*s13*s14*
      s24 + 1/8*denom(1/4*s12^2)*mt^2*s12^2*s13*s14*s23 + 1/8*denom(1/4*s12^2)
      *mt^2*s12^2*s13^2*s24 - 1/8*denom(1/4*s12^2)*mt^2*mh^2*s12*s14*s23*s24
       - 1/8*denom(1/4*s12^2)*mt^2*mh^2*s12*s14*s23^2 - 1/8*denom(1/4*s12^2)*
      mt^2*mh^2*s12*s14^2*s23 - 1/8*denom(1/4*s12^2)*mt^2*mh^2*s12*s13*s24^2
       - 1/8*denom(1/4*s12^2)*mt^2*mh^2*s12*s13*s23*s24 - 1/8*denom(1/4*s12^2)
      *mt^2*mh^2*s12*s13*s14*s24 - 1/8*denom(1/4*s12^2)*mt^2*mh^2*s12*s13*s14*
      s23 - 1/8*denom(1/4*s12^2)*mt^2*mh^2*s12*s13^2*s24 - 1/16*denom(1/4*
      s12^2)*mt^4*s14*s23*s24^2 + 1/8*denom(1/4*s12^2)*mt^4*s14*s23^2*s24 + 3/
      16*denom(1/4*s12^2)*mt^4*s14*s23^3 + 1/8*denom(1/4*s12^2)*mt^4*s14^2*s23
      *s24 + 5/8*denom(1/4*s12^2)*mt^4*s14^2*s23^2 + 3/16*denom(1/4*s12^2)*
      mt^4*s14^3*s23 - 3/16*denom(1/4*s12^2)*mt^4*s13*s24^3 - 1/8*denom(1/4*
      s12^2)*mt^4*s13*s23*s24^2 + 1/16*denom(1/4*s12^2)*mt^4*s13*s23^2*s24 - 1/
      8*denom(1/4*s12^2)*mt^4*s13*s14*s24^2 + 1/8*denom(1/4*s12^2)*mt^4*s13*
      s14*s23^2 + 1/16*denom(1/4*s12^2)*mt^4*s13*s14^2*s24 + 1/8*denom(1/4*
      s12^2)*mt^4*s13*s14^2*s23 - 5/8*denom(1/4*s12^2)*mt^4*s13^2*s24^2 - 1/8*
      denom(1/4*s12^2)*mt^4*s13^2*s23*s24 - 1/8*denom(1/4*s12^2)*mt^4*s13^2*
      s14*s24 - 1/16*denom(1/4*s12^2)*mt^4*s13^2*s14*s23 - 3/16*denom(1/4*
      s12^2)*mt^4*s13^3*s24 - 1/16*denom(1/4*s12^2)*mt^4*s12*s24^3 - 3/16*
      denom(1/4*s12^2)*mt^4*s12*s23*s24^2 - 3/16*denom(1/4*s12^2)*mt^4*s12*
      s23^2*s24 - 1/16*denom(1/4*s12^2)*mt^4*s12*s23^3 - 3/16*denom(1/4*s12^2)
      *mt^4*s12*s14*s24^2 - 5/8*denom(1/4*s12^2)*mt^4*s12*s14*s23*s24 - 7/16*
      denom(1/4*s12^2)*mt^4*s12*s14*s23^2 - 3/16*denom(1/4*s12^2)*mt^4*s12*
      s14^2*s24 - 7/16*denom(1/4*s12^2)*mt^4*s12*s14^2*s23 - 1/16*denom(1/4*
      s12^2)*mt^4*s12*s14^3 - 7/16*denom(1/4*s12^2)*mt^4*s12*s13*s24^2 - 5/8*
      denom(1/4*s12^2)*mt^4*s12*s13*s23*s24 - 3/16*denom(1/4*s12^2)*mt^4*s12*
      s13*s23^2 - 5/8*denom(1/4*s12^2)*mt^4*s12*s13*s14*s24 - 5/8*denom(1/4*
      s12^2)*mt^4*s12*s13*s14*s23 - 3/16*denom(1/4*s12^2)*mt^4*s12*s13*s14^2
       - 7/16*denom(1/4*s12^2)*mt^4*s12*s13^2*s24 - 3/16*denom(1/4*s12^2)*mt^4
      *s12*s13^2*s23 - 3/16*denom(1/4*s12^2)*mt^4*s12*s13^2*s14 - 1/16*denom(1/
      4*s12^2)*mt^4*s12*s13^3 - 1/16*denom(1/4*s12^2)*mt^4*s12^2*s24^2 - 1/8*
      denom(1/4*s12^2)*mt^4*s12^2*s23*s24 - 1/16*denom(1/4*s12^2)*mt^4*s12^2*
      s23^2 - 1/8*denom(1/4*s12^2)*mt^4*s12^2*s14*s24 - 3/8*denom(1/4*s12^2)*
      mt^4*s12^2*s14*s23 - 1/16*denom(1/4*s12^2)*mt^4*s12^2*s14^2 - 3/8*denom(
      1/4*s12^2)*mt^4*s12^2*s13*s24 - 1/8*denom(1/4*s12^2)*mt^4*s12^2*s13*s23
       - 1/8*denom(1/4*s12^2)*mt^4*s12^2*s13*s14 - 1/16*denom(1/4*s12^2)*mt^4*
      s12^2*s13^2 + 1/16*denom(1/4*s12^2)*mt^4*mh^2*s12*s24^2 + 1/8*denom(1/4*
      s12^2)*mt^4*mh^2*s12*s23*s24 + 1/16*denom(1/4*s12^2)*mt^4*mh^2*s12*s23^2
       + 1/8*denom(1/4*s12^2)*mt^4*mh^2*s12*s14*s24 + 3/8*denom(1/4*s12^2)*
      mt^4*mh^2*s12*s14*s23 + 1/16*denom(1/4*s12^2)*mt^4*mh^2*s12*s14^2 + 3/8*
      denom(1/4*s12^2)*mt^4*mh^2*s12*s13*s24 + 1/8*denom(1/4*s12^2)*mt^4*mh^2*
      s12*s13*s23 + 1/8*denom(1/4*s12^2)*mt^4*mh^2*s12*s13*s14 + 1/16*denom(1/
      4*s12^2)*mt^4*mh^2*s12*s13^2 + 1/16*denom(1/4*s12^2)*mt^6*s24^3 + 1/16*
      denom(1/4*s12^2)*mt^6*s23*s24^2 - 1/16*denom(1/4*s12^2)*mt^6*s23^2*s24
       - 1/16*denom(1/4*s12^2)*mt^6*s23^3 + 1/16*denom(1/4*s12^2)*mt^6*s14*
      s24^2 - 1/8*denom(1/4*s12^2)*mt^6*s14*s23*s24 - 11/16*denom(1/4*s12^2)*
      mt^6*s14*s23^2 - 1/16*denom(1/4*s12^2)*mt^6*s14^2*s24 - 11/16*denom(1/4*
      s12^2)*mt^6*s14^2*s23 - 1/16*denom(1/4*s12^2)*mt^6*s14^3 + 11/16*denom(1/
      4*s12^2)*mt^6*s13*s24^2 + 1/8*denom(1/4*s12^2)*mt^6*s13*s23*s24 - 1/16*
      denom(1/4*s12^2)*mt^6*s13*s23^2 + 1/8*denom(1/4*s12^2)*mt^6*s13*s14*s24
       - 1/8*denom(1/4*s12^2)*mt^6*s13*s14*s23 - 1/16*denom(1/4*s12^2)*mt^6*
      s13*s14^2 + 11/16*denom(1/4*s12^2)*mt^6*s13^2*s24 + 1/16*denom(1/4*s12^2
      )*mt^6*s13^2*s23 + 1/16*denom(1/4*s12^2)*mt^6*s13^2*s14 + 1/16*denom(1/4
      *s12^2)*mt^6*s13^3 + 1/4*denom(1/4*s12^2)*mt^6*s12*s24^2 + 1/2*denom(1/4
      *s12^2)*mt^6*s12*s23*s24 + 1/4*denom(1/4*s12^2)*mt^6*s12*s23^2 + 1/2*
      denom(1/4*s12^2)*mt^6*s12*s14*s24 + 1/2*denom(1/4*s12^2)*mt^6*s12*s14*
      s23 + 1/4*denom(1/4*s12^2)*mt^6*s12*s14^2 + 1/2*denom(1/4*s12^2)*mt^6*
      s12*s13*s24 + 1/2*denom(1/4*s12^2)*mt^6*s12*s13*s23 + 1/2*denom(1/4*
      s12^2)*mt^6*s12*s13*s14 + 1/4*denom(1/4*s12^2)*mt^6*s12*s13^2 + 1/4*
      denom(1/4*s12^2)*mt^6*s12^2*s24 + 1/4*denom(1/4*s12^2)*mt^6*s12^2*s23 + 
      1/4*denom(1/4*s12^2)*mt^6*s12^2*s14 + 1/4*denom(1/4*s12^2)*mt^6*s12^2*
      s13 - 1/4*denom(1/4*s12^2)*mt^6*mh^2*s12*s24 - 1/4*denom(1/4*s12^2)*mt^6
      *mh^2*s12*s23 - 1/4*denom(1/4*s12^2)*mt^6*mh^2*s12*s14 - 1/4*denom(1/4*
      s12^2)*mt^6*mh^2*s12*s13 - 1/4*denom(1/4*s12^2)*mt^8*s24^2 + 1/4*denom(1/
      4*s12^2)*mt^8*s23^2 + 3/4*denom(1/4*s12^2)*mt^8*s14*s23 + 1/4*denom(1/4*
      s12^2)*mt^8*s14^2 - 3/4*denom(1/4*s12^2)*mt^8*s13*s24 - 1/4*denom(1/4*
      s12^2)*mt^8*s13^2 - 1/4*denom(1/4*s12^2)*mt^8*s12*s24 - 1/4*denom(1/4*
      s12^2)*mt^8*s12*s23 - 1/4*denom(1/4*s12^2)*mt^8*s12*s14 - 1/4*denom(1/4*
      s12^2)*mt^8*s12*s13 - 1/4*denom(1/4*s12^2)*mt^8*s12^2 + 1/4*denom(1/4*
      s12^2)*mt^8*mh^2*s12 + 1/4*denom(1/4*s12^2)*mt^10*s24 - 1/4*denom(1/4*
      s12^2)*mt^10*s23 - 1/4*denom(1/4*s12^2)*mt^10*s14 + 1/4*denom(1/4*s12^2)
      *mt^10*s13;
 
 .sort
id KMatrix(2,16) =   - 1/2*mt^2*s14*s23*s24 - 1/2*mt^2*s14*s23^2 - 1/2*mt^2*
      s14^2*s23 + 1/2*mt^2*s13*s24^2 + 1/2*mt^2*s13*s23*s24 + 1/2*mt^2*s13*s14
      *s24 - 1/2*mt^2*s13*s14*s23 + 1/2*mt^2*s13^2*s24 + 1/2*mt^2*s12*s24^2 + 
      mt^2*s12*s23*s24 + 1/2*mt^2*s12*s23^2 + mt^2*s12*s14*s24 + 1/2*mt^2*s12*
      s14*s23 + 1/2*mt^2*s12*s14^2 + 3/2*mt^2*s12*s13*s24 + mt^2*s12*s13*s23
       + mt^2*s12*s13*s14 + 1/2*mt^2*s12*s13^2 + mt^2*s12^2*s24 + mt^2*s12^2*
      s23 + mt^2*s12^2*s14 + mt^2*s12^2*s13 + 1/2*mt^2*s12^3 + 1/2*mt^2*mh^2*
      s14*s23 - 1/2*mt^2*mh^2*s13*s24 - mt^2*mh^2*s12*s24 - mt^2*mh^2*s12*s23
       - mt^2*mh^2*s12*s14 - mt^2*mh^2*s12*s13 - mt^2*mh^2*s12^2 + 1/2*mt^2*
      mh^4*s12 - 1/2*mt^4*s24^2 + 1/2*mt^4*s23^2 + 2*mt^4*s14*s23 + 1/2*mt^4*
      s14^2 - 2*mt^4*s13*s24 - 1/2*mt^4*s13^2 - 3/2*mt^4*s12*s24 - 1/2*mt^4*
      s12*s23 - 1/2*mt^4*s12*s14 - 3/2*mt^4*s12*s13 - mt^4*s12^2 + 1/2*mt^4*
      mh^2*s24 - 1/2*mt^4*mh^2*s23 - 1/2*mt^4*mh^2*s14 + 1/2*mt^4*mh^2*s13 + 
      mt^4*mh^2*s12 + mt^6*s24 - mt^6*s23 - mt^6*s14 + mt^6*s13 + 1/4*denom(1/
      2*s12)*s14^2*s23*s24^2 + 1/4*denom(1/2*s12)*s14^2*s23^2*s24 + 1/4*denom(
      1/2*s12)*s14^3*s23*s24 - 1/4*denom(1/2*s12)*s13*s14*s24^3 - 1/4*denom(1/
      2*s12)*s13*s14*s23*s24^2 - 1/4*denom(1/2*s12)*s13*s14^2*s24^2 + 1/4*
      denom(1/2*s12)*s13*s14^2*s23*s24 - 1/4*denom(1/2*s12)*s13^2*s14*s24^2 - 
      1/4*denom(1/2*s12)*s12*s14*s24^3 - 1/2*denom(1/2*s12)*s12*s14*s23*s24^2
       - 1/4*denom(1/2*s12)*s12*s14*s23^2*s24 - 1/2*denom(1/2*s12)*s12*s14^2*
      s24^2 - 1/4*denom(1/2*s12)*s12*s14^2*s23*s24 - 1/4*denom(1/2*s12)*s12*
      s14^3*s24 - 3/4*denom(1/2*s12)*s12*s13*s14*s24^2 - 1/2*denom(1/2*s12)*
      s12*s13*s14*s23*s24 - 1/2*denom(1/2*s12)*s12*s13*s14^2*s24 - 1/4*denom(1/
      2*s12)*s12*s13^2*s14*s24 - 1/2*denom(1/2*s12)*s12^2*s14*s24^2 - 1/2*
      denom(1/2*s12)*s12^2*s14*s23*s24 - 1/2*denom(1/2*s12)*s12^2*s14^2*s24 - 
      1/2*denom(1/2*s12)*s12^2*s13*s14*s24 - 1/4*denom(1/2*s12)*s12^3*s14*s24
       - 1/4*denom(1/2*s12)*mh^2*s14^2*s23*s24 + 1/4*denom(1/2*s12)*mh^2*s13*
      s14*s24^2 + 1/2*denom(1/2*s12)*mh^2*s12*s14*s24^2 + 1/2*denom(1/2*s12)*
      mh^2*s12*s14*s23*s24 + 1/2*denom(1/2*s12)*mh^2*s12*s14^2*s24 + 1/2*
      denom(1/2*s12)*mh^2*s12*s13*s14*s24 + 1/2*denom(1/2*s12)*mh^2*s12^2*s14*
      s24 - 1/4*denom(1/2*s12)*mh^4*s12*s14*s24 + 1/4*denom(1/2*s12)*mt^2*s14*
      s24^3 - 1/4*denom(1/2*s12)*mt^2*s14*s23*s24^2 - 1/2*denom(1/2*s12)*mt^2*
      s14*s23^2*s24 - 3/2*denom(1/2*s12)*mt^2*s14^2*s23*s24 - 1/2*denom(1/2*
      s12)*mt^2*s14^2*s23^2 - 1/4*denom(1/2*s12)*mt^2*s14^3*s24 - 1/4*denom(1/
      2*s12)*mt^2*s14^3*s23 + 1/4*denom(1/2*s12)*mt^2*s13*s24^3 + 1/4*denom(1/
      2*s12)*mt^2*s13*s23*s24^2 + 3/2*denom(1/2*s12)*mt^2*s13*s14*s24^2 + 1/4*
      denom(1/2*s12)*mt^2*s13*s14^2*s24 - 1/4*denom(1/2*s12)*mt^2*s13*s14^2*
      s23 + 1/2*denom(1/2*s12)*mt^2*s13^2*s24^2 + 1/2*denom(1/2*s12)*mt^2*
      s13^2*s14*s24 + 1/4*denom(1/2*s12)*mt^2*s12*s24^3 + 1/2*denom(1/2*s12)*
      mt^2*s12*s23*s24^2 + 1/4*denom(1/2*s12)*mt^2*s12*s23^2*s24 + 3/2*denom(1/
      2*s12)*mt^2*s12*s14*s24^2 + 5/4*denom(1/2*s12)*mt^2*s12*s14*s23*s24 + 1/
      2*denom(1/2*s12)*mt^2*s12*s14*s23^2 + denom(1/2*s12)*mt^2*s12*s14^2*s24
       + 1/2*denom(1/2*s12)*mt^2*s12*s14^2*s23 + 1/4*denom(1/2*s12)*mt^2*s12*
      s14^3 + denom(1/2*s12)*mt^2*s12*s13*s24^2 + 3/4*denom(1/2*s12)*mt^2*s12*
      s13*s23*s24 + 9/4*denom(1/2*s12)*mt^2*s12*s13*s14*s24 + 3/4*denom(1/2*
      s12)*mt^2*s12*s13*s14*s23 + 1/2*denom(1/2*s12)*mt^2*s12*s13*s14^2 + 1/2*
      denom(1/2*s12)*mt^2*s12*s13^2*s24 + 1/4*denom(1/2*s12)*mt^2*s12*s13^2*
      s14 + 1/2*denom(1/2*s12)*mt^2*s12^2*s24^2 + 1/2*denom(1/2*s12)*mt^2*
      s12^2*s23*s24 + 3/2*denom(1/2*s12)*mt^2*s12^2*s14*s24 + 3/4*denom(1/2*
      s12)*mt^2*s12^2*s14*s23 + 1/2*denom(1/2*s12)*mt^2*s12^2*s14^2 + 3/4*
      denom(1/2*s12)*mt^2*s12^2*s13*s24 + 1/2*denom(1/2*s12)*mt^2*s12^2*s13*
      s14 + 1/4*denom(1/2*s12)*mt^2*s12^3*s24 + 1/4*denom(1/2*s12)*mt^2*s12^3*
      s14 - 1/4*denom(1/2*s12)*mt^2*mh^2*s14*s24^2 + 1/2*denom(1/2*s12)*mt^2*
      mh^2*s14*s23*s24 + 1/4*denom(1/2*s12)*mt^2*mh^2*s14^2*s24 + 1/4*denom(1/
      2*s12)*mt^2*mh^2*s14^2*s23 - 1/4*denom(1/2*s12)*mt^2*mh^2*s13*s24^2 - 1/
      2*denom(1/2*s12)*mt^2*mh^2*s13*s14*s24 - 1/2*denom(1/2*s12)*mt^2*mh^2*
      s12*s24^2 - 1/2*denom(1/2*s12)*mt^2*mh^2*s12*s23*s24 - 3/2*denom(1/2*s12
      )*mt^2*mh^2*s12*s14*s24 - 3/4*denom(1/2*s12)*mt^2*mh^2*s12*s14*s23 - 1/2
      *denom(1/2*s12)*mt^2*mh^2*s12*s14^2 - 3/4*denom(1/2*s12)*mt^2*mh^2*s12*
      s13*s24 - 1/2*denom(1/2*s12)*mt^2*mh^2*s12*s13*s14 - 1/2*denom(1/2*s12)*
      mt^2*mh^2*s12^2*s24 - 1/2*denom(1/2*s12)*mt^2*mh^2*s12^2*s14 + 1/4*
      denom(1/2*s12)*mt^2*mh^4*s12*s24 + 1/4*denom(1/2*s12)*mt^2*mh^4*s12*s14
       - 1/4*denom(1/2*s12)*mt^4*s24^3 + 1/4*denom(1/2*s12)*mt^4*s23^2*s24 - 3/
      4*denom(1/2*s12)*mt^4*s14*s24^2 + 7/4*denom(1/2*s12)*mt^4*s14*s23*s24 + 
      denom(1/2*s12)*mt^4*s14*s23^2 + 3/4*denom(1/2*s12)*mt^4*s14^2*s24 + 7/4*
      denom(1/2*s12)*mt^4*s14^2*s23 + 1/4*denom(1/2*s12)*mt^4*s14^3 - 7/4*
      denom(1/2*s12)*mt^4*s13*s24^2 - 1/4*denom(1/2*s12)*mt^4*s13*s23*s24 - 7/
      4*denom(1/2*s12)*mt^4*s13*s14*s24 + 1/4*denom(1/2*s12)*mt^4*s13*s14*s23
       - denom(1/2*s12)*mt^4*s13^2*s24 - 1/4*denom(1/2*s12)*mt^4*s13^2*s14 - 5/
      4*denom(1/2*s12)*mt^4*s12*s24^2 - 5/4*denom(1/2*s12)*mt^4*s12*s23*s24 - 
      1/2*denom(1/2*s12)*mt^4*s12*s23^2 - 2*denom(1/2*s12)*mt^4*s12*s14*s24 - 
      denom(1/2*s12)*mt^4*s12*s14*s23 - 3/4*denom(1/2*s12)*mt^4*s12*s14^2 - 2*
      denom(1/2*s12)*mt^4*s12*s13*s24 - denom(1/2*s12)*mt^4*s12*s13*s23 - 7/4*
      denom(1/2*s12)*mt^4*s12*s13*s14 - 1/2*denom(1/2*s12)*mt^4*s12*s13^2 - 5/
      4*denom(1/2*s12)*mt^4*s12^2*s24 - 3/4*denom(1/2*s12)*mt^4*s12^2*s23 - 5/
      4*denom(1/2*s12)*mt^4*s12^2*s14 - 3/4*denom(1/2*s12)*mt^4*s12^2*s13 - 1/
      4*denom(1/2*s12)*mt^4*s12^3 + 1/4*denom(1/2*s12)*mt^4*mh^2*s24^2 - 1/4*
      denom(1/2*s12)*mt^4*mh^2*s23*s24 - 1/2*denom(1/2*s12)*mt^4*mh^2*s14*s23
       - 1/4*denom(1/2*s12)*mt^4*mh^2*s14^2 + 1/2*denom(1/2*s12)*mt^4*mh^2*s13
      *s24 + 1/4*denom(1/2*s12)*mt^4*mh^2*s13*s14 + 5/4*denom(1/2*s12)*mt^4*
      mh^2*s12*s24 + 3/4*denom(1/2*s12)*mt^4*mh^2*s12*s23 + 5/4*denom(1/2*s12)
      *mt^4*mh^2*s12*s14 + 3/4*denom(1/2*s12)*mt^4*mh^2*s12*s13 + 1/2*denom(1/
      2*s12)*mt^4*mh^2*s12^2 - 1/4*denom(1/2*s12)*mt^4*mh^4*s12 + denom(1/2*
      s12)*mt^6*s24^2 - 1/2*denom(1/2*s12)*mt^6*s23*s24 - 1/2*denom(1/2*s12)*
      mt^6*s23^2 - 5/2*denom(1/2*s12)*mt^6*s14*s23 - denom(1/2*s12)*mt^6*s14^2
       + 5/2*denom(1/2*s12)*mt^6*s13*s24 + 1/2*denom(1/2*s12)*mt^6*s13*s14 + 1/
      2*denom(1/2*s12)*mt^6*s13^2 + 5/4*denom(1/2*s12)*mt^6*s12*s24 + 3/4*
      denom(1/2*s12)*mt^6*s12*s23 + 3/4*denom(1/2*s12)*mt^6*s12*s14 + 5/4*
      denom(1/2*s12)*mt^6*s12*s13 + denom(1/2*s12)*mt^6*s12^2 - 1/4*denom(1/2*
      s12)*mt^6*mh^2*s24 + 1/4*denom(1/2*s12)*mt^6*mh^2*s23 + 1/4*denom(1/2*
      s12)*mt^6*mh^2*s14 - 1/4*denom(1/2*s12)*mt^6*mh^2*s13 - denom(1/2*s12)*
      mt^6*mh^2*s12 - denom(1/2*s12)*mt^8*s24 + denom(1/2*s12)*mt^8*s23 + 
      denom(1/2*s12)*mt^8*s14 - denom(1/2*s12)*mt^8*s13 + 1/8*denom(1/4*s12^2)
      *s14^3*s23^2*s24 - 1/8*denom(1/4*s12^2)*s13^2*s14*s24^3 - 1/8*denom(1/4*
      s12^2)*s12*s14^2*s23*s24^2 - 1/8*denom(1/4*s12^2)*s12*s14^2*s23^2*s24 - 
      1/8*denom(1/4*s12^2)*s12*s14^3*s23*s24 - 1/8*denom(1/4*s12^2)*s12*s13*
      s14*s24^3 - 1/8*denom(1/4*s12^2)*s12*s13*s14*s23*s24^2 - 1/8*denom(1/4*
      s12^2)*s12*s13*s14^2*s24^2 - 1/8*denom(1/4*s12^2)*s12*s13*s14^2*s23*s24
       - 1/8*denom(1/4*s12^2)*s12*s13^2*s14*s24^2 - 1/8*denom(1/4*s12^2)*s12^2
      *s14^2*s23*s24 - 1/8*denom(1/4*s12^2)*s12^2*s13*s14*s24^2 + 1/8*denom(1/
      4*s12^2)*mh^2*s12*s14^2*s23*s24 + 1/8*denom(1/4*s12^2)*mh^2*s12*s13*s14*
      s24^2 - 3/8*denom(1/4*s12^2)*mt^2*s14^2*s23^2*s24 - 1/4*denom(1/4*s12^2)
      *mt^2*s14^3*s23*s24 - 1/8*denom(1/4*s12^2)*mt^2*s14^3*s23^2 + 1/4*denom(
      1/4*s12^2)*mt^2*s13*s14*s24^3 + 1/8*denom(1/4*s12^2)*mt^2*s13^2*s24^3 + 
      3/8*denom(1/4*s12^2)*mt^2*s13^2*s14*s24^2 + 1/8*denom(1/4*s12^2)*mt^2*
      s12*s14*s24^3 + 3/8*denom(1/4*s12^2)*mt^2*s12*s14*s23*s24^2 + 1/4*denom(
      1/4*s12^2)*mt^2*s12*s14*s23^2*s24 + 1/4*denom(1/4*s12^2)*mt^2*s12*s14^2*
      s24^2 + 1/2*denom(1/4*s12^2)*mt^2*s12*s14^2*s23*s24 + 1/8*denom(1/4*
      s12^2)*mt^2*s12*s14^2*s23^2 + 1/8*denom(1/4*s12^2)*mt^2*s12*s14^3*s24 + 
      1/8*denom(1/4*s12^2)*mt^2*s12*s14^3*s23 + 1/8*denom(1/4*s12^2)*mt^2*s12*
      s13*s24^3 + 1/8*denom(1/4*s12^2)*mt^2*s12*s13*s23*s24^2 + 1/2*denom(1/4*
      s12^2)*mt^2*s12*s13*s14*s24^2 + 1/2*denom(1/4*s12^2)*mt^2*s12*s13*s14*
      s23*s24 + 3/8*denom(1/4*s12^2)*mt^2*s12*s13*s14^2*s24 + 1/8*denom(1/4*
      s12^2)*mt^2*s12*s13*s14^2*s23 + 1/8*denom(1/4*s12^2)*mt^2*s12*s13^2*
      s24^2 + 1/4*denom(1/4*s12^2)*mt^2*s12*s13^2*s14*s24 + 1/8*denom(1/4*
      s12^2)*mt^2*s12^2*s14*s24^2 + 1/4*denom(1/4*s12^2)*mt^2*s12^2*s14*s23*
      s24 + 1/8*denom(1/4*s12^2)*mt^2*s12^2*s14^2*s24 + 1/8*denom(1/4*s12^2)*
      mt^2*s12^2*s14^2*s23 + 1/8*denom(1/4*s12^2)*mt^2*s12^2*s13*s24^2 + 1/4*
      denom(1/4*s12^2)*mt^2*s12^2*s13*s14*s24 - 1/8*denom(1/4*s12^2)*mt^2*mh^2
      *s12*s14*s24^2 - 1/4*denom(1/4*s12^2)*mt^2*mh^2*s12*s14*s23*s24 - 1/8*
      denom(1/4*s12^2)*mt^2*mh^2*s12*s14^2*s24 - 1/8*denom(1/4*s12^2)*mt^2*
      mh^2*s12*s14^2*s23 - 1/8*denom(1/4*s12^2)*mt^2*mh^2*s12*s13*s24^2 - 1/4*
      denom(1/4*s12^2)*mt^2*mh^2*s12*s13*s14*s24 - 1/8*denom(1/4*s12^2)*mt^4*
      s14*s24^3 + 3/8*denom(1/4*s12^2)*mt^4*s14*s23^2*s24 + 3/4*denom(1/4*
      s12^2)*mt^4*s14^2*s23*s24 + 3/8*denom(1/4*s12^2)*mt^4*s14^2*s23^2 + 1/8*
      denom(1/4*s12^2)*mt^4*s14^3*s24 + 1/4*denom(1/4*s12^2)*mt^4*s14^3*s23 - 
      1/4*denom(1/4*s12^2)*mt^4*s13*s24^3 - 3/4*denom(1/4*s12^2)*mt^4*s13*s14*
      s24^2 - 3/8*denom(1/4*s12^2)*mt^4*s13^2*s24^2 - 3/8*denom(1/4*s12^2)*
      mt^4*s13^2*s14*s24 - 1/8*denom(1/4*s12^2)*mt^4*s12*s24^3 - 1/4*denom(1/4
      *s12^2)*mt^4*s12*s23*s24^2 - 1/8*denom(1/4*s12^2)*mt^4*s12*s23^2*s24 - 5/
      8*denom(1/4*s12^2)*mt^4*s12*s14*s24^2 - 7/8*denom(1/4*s12^2)*mt^4*s12*
      s14*s23*s24 - 1/4*denom(1/4*s12^2)*mt^4*s12*s14*s23^2 - 5/8*denom(1/4*
      s12^2)*mt^4*s12*s14^2*s24 - 3/8*denom(1/4*s12^2)*mt^4*s12*s14^2*s23 - 1/
      8*denom(1/4*s12^2)*mt^4*s12*s14^3 - 3/8*denom(1/4*s12^2)*mt^4*s12*s13*
      s24^2 - 3/8*denom(1/4*s12^2)*mt^4*s12*s13*s23*s24 - 7/8*denom(1/4*s12^2)
      *mt^4*s12*s13*s14*s24 - 3/8*denom(1/4*s12^2)*mt^4*s12*s13*s14*s23 - 1/4*
      denom(1/4*s12^2)*mt^4*s12*s13*s14^2 - 1/4*denom(1/4*s12^2)*mt^4*s12*
      s13^2*s24 - 1/8*denom(1/4*s12^2)*mt^4*s12*s13^2*s14 - 1/8*denom(1/4*
      s12^2)*mt^4*s12^2*s24^2 - 1/8*denom(1/4*s12^2)*mt^4*s12^2*s23*s24 - 1/2*
      denom(1/4*s12^2)*mt^4*s12^2*s14*s24 - 1/4*denom(1/4*s12^2)*mt^4*s12^2*
      s14*s23 - 1/8*denom(1/4*s12^2)*mt^4*s12^2*s14^2 - 1/4*denom(1/4*s12^2)*
      mt^4*s12^2*s13*s24 - 1/8*denom(1/4*s12^2)*mt^4*s12^2*s13*s14 + 1/8*
      denom(1/4*s12^2)*mt^4*mh^2*s12*s24^2 + 1/8*denom(1/4*s12^2)*mt^4*mh^2*
      s12*s23*s24 + 1/2*denom(1/4*s12^2)*mt^4*mh^2*s12*s14*s24 + 1/4*denom(1/4
      *s12^2)*mt^4*mh^2*s12*s14*s23 + 1/8*denom(1/4*s12^2)*mt^4*mh^2*s12*s14^2
       + 1/4*denom(1/4*s12^2)*mt^4*mh^2*s12*s13*s24 + 1/8*denom(1/4*s12^2)*
      mt^4*mh^2*s12*s13*s14 + 1/8*denom(1/4*s12^2)*mt^6*s24^3 - 1/8*denom(1/4*
      s12^2)*mt^6*s23^2*s24 + 3/8*denom(1/4*s12^2)*mt^6*s14*s24^2 - 3/4*denom(
      1/4*s12^2)*mt^6*s14*s23*s24 - 3/8*denom(1/4*s12^2)*mt^6*s14*s23^2 - 3/8*
      denom(1/4*s12^2)*mt^6*s14^2*s24 - 3/4*denom(1/4*s12^2)*mt^6*s14^2*s23 - 
      1/8*denom(1/4*s12^2)*mt^6*s14^3 + 3/4*denom(1/4*s12^2)*mt^6*s13*s24^2 + 
      3/4*denom(1/4*s12^2)*mt^6*s13*s14*s24 + 3/8*denom(1/4*s12^2)*mt^6*s13^2*
      s24 + 1/8*denom(1/4*s12^2)*mt^6*s13^2*s14 + 3/8*denom(1/4*s12^2)*mt^6*
      s12*s24^2 + 1/2*denom(1/4*s12^2)*mt^6*s12*s23*s24 + 1/8*denom(1/4*s12^2)
      *mt^6*s12*s23^2 + 3/4*denom(1/4*s12^2)*mt^6*s12*s14*s24 + 1/2*denom(1/4*
      s12^2)*mt^6*s12*s14*s23 + 3/8*denom(1/4*s12^2)*mt^6*s12*s14^2 + 1/2*
      denom(1/4*s12^2)*mt^6*s12*s13*s24 + 1/4*denom(1/4*s12^2)*mt^6*s12*s13*
      s23 + 1/2*denom(1/4*s12^2)*mt^6*s12*s13*s14 + 1/8*denom(1/4*s12^2)*mt^6*
      s12*s13^2 + 3/8*denom(1/4*s12^2)*mt^6*s12^2*s24 + 1/8*denom(1/4*s12^2)*
      mt^6*s12^2*s23 + 3/8*denom(1/4*s12^2)*mt^6*s12^2*s14 + 1/8*denom(1/4*
      s12^2)*mt^6*s12^2*s13 - 3/8*denom(1/4*s12^2)*mt^6*mh^2*s12*s24 - 1/8*
      denom(1/4*s12^2)*mt^6*mh^2*s12*s23 - 3/8*denom(1/4*s12^2)*mt^6*mh^2*s12*
      s14 - 1/8*denom(1/4*s12^2)*mt^6*mh^2*s12*s13 - 3/8*denom(1/4*s12^2)*mt^8
      *s24^2 + 1/4*denom(1/4*s12^2)*mt^8*s23*s24 + 1/8*denom(1/4*s12^2)*mt^8*
      s23^2 + 3/4*denom(1/4*s12^2)*mt^8*s14*s23 + 3/8*denom(1/4*s12^2)*mt^8*
      s14^2 - 3/4*denom(1/4*s12^2)*mt^8*s13*s24 - 1/4*denom(1/4*s12^2)*mt^8*
      s13*s14 - 1/8*denom(1/4*s12^2)*mt^8*s13^2 - 1/4*denom(1/4*s12^2)*mt^8*
      s12*s24 - 1/4*denom(1/4*s12^2)*mt^8*s12*s23 - 1/4*denom(1/4*s12^2)*mt^8*
      s12*s14 - 1/4*denom(1/4*s12^2)*mt^8*s12*s13 - 1/4*denom(1/4*s12^2)*mt^8*
      s12^2 + 1/4*denom(1/4*s12^2)*mt^8*mh^2*s12 + 1/4*denom(1/4*s12^2)*mt^10*
      s24 - 1/4*denom(1/4*s12^2)*mt^10*s23 - 1/4*denom(1/4*s12^2)*mt^10*s14 + 
      1/4*denom(1/4*s12^2)*mt^10*s13;
 
 .sort
id KMatrix(2,17) =  s24^2 + 2*s23*s24 + s23^2 + 2*s14*s24 + 2*s14*s23 + s14^2
       + 2*s13*s24 + 2*s13*s23 + 2*s13*s14 + s13^2 + 2*s12*s24 + 2*s12*s23 + 2
      *s12*s14 + 2*s12*s13 + s12^2 - 2*mh^2*s24 - 2*mh^2*s23 - 2*mh^2*s14 - 2*
      mh^2*s13 - 2*mh^2*s12 + mh^4 - 2*mt^2*s24 - 2*mt^2*s23 - 2*mt^2*s14 - 2*
      mt^2*s13 - 2*mt^2*s12 + 2*mt^2*mh^2 + denom(1/2*s12)*s14*s23*s24 + 
      denom(1/2*s12)*s14*s23^2 + denom(1/2*s12)*s14^2*s23 + denom(1/2*s12)*s13
      *s24^2 + denom(1/2*s12)*s13*s23*s24 + denom(1/2*s12)*s13*s14*s24 + 
      denom(1/2*s12)*s13*s14*s23 + denom(1/2*s12)*s13^2*s24 + denom(1/2*s12)*
      s12*s14*s23 + denom(1/2*s12)*s12*s13*s24 - denom(1/2*s12)*mh^2*s14*s23
       - denom(1/2*s12)*mh^2*s13*s24 - denom(1/2*s12)*mt^2*s24^2 - 2*denom(1/2
      *s12)*mt^2*s23*s24 - denom(1/2*s12)*mt^2*s23^2 - 2*denom(1/2*s12)*mt^2*
      s14*s24 - 2*denom(1/2*s12)*mt^2*s14*s23 - denom(1/2*s12)*mt^2*s14^2 - 2*
      denom(1/2*s12)*mt^2*s13*s24 - 2*denom(1/2*s12)*mt^2*s13*s23 - 2*denom(1/
      2*s12)*mt^2*s13*s14 - denom(1/2*s12)*mt^2*s13^2 - denom(1/2*s12)*mt^2*
      s12*s24 - denom(1/2*s12)*mt^2*s12*s23 - denom(1/2*s12)*mt^2*s12*s14 - 
      denom(1/2*s12)*mt^2*s12*s13 + denom(1/2*s12)*mt^2*mh^2*s24 + denom(1/2*
      s12)*mt^2*mh^2*s23 + denom(1/2*s12)*mt^2*mh^2*s14 + denom(1/2*s12)*mt^2*
      mh^2*s13 + 2*denom(1/2*s12)*mt^4*s24 + 2*denom(1/2*s12)*mt^4*s23 + 2*
      denom(1/2*s12)*mt^4*s14 + 2*denom(1/2*s12)*mt^4*s13 + 2*denom(1/2*s12)*
      mt^4*s12 - 2*denom(1/2*s12)*mt^4*mh^2 - 1/4*denom(1/4*s12^2)*s12*s14*s23
      *s24 - 1/4*denom(1/4*s12^2)*s12*s14*s23^2 - 1/4*denom(1/4*s12^2)*s12*
      s14^2*s23 - 1/4*denom(1/4*s12^2)*s12*s13*s24^2 - 1/4*denom(1/4*s12^2)*
      s12*s13*s23*s24 - 1/4*denom(1/4*s12^2)*s12*s13*s14*s24 - 1/4*denom(1/4*
      s12^2)*s12*s13*s14*s23 - 1/4*denom(1/4*s12^2)*s12*s13^2*s24 - 1/4*denom(
      1/4*s12^2)*s12^2*s14*s23 - 1/4*denom(1/4*s12^2)*s12^2*s13*s24 + 1/4*
      denom(1/4*s12^2)*mh^2*s12*s14*s23 + 1/4*denom(1/4*s12^2)*mh^2*s12*s13*
      s24 + 1/4*denom(1/4*s12^2)*mt^2*s12*s24^2 + 1/2*denom(1/4*s12^2)*mt^2*
      s12*s23*s24 + 1/4*denom(1/4*s12^2)*mt^2*s12*s23^2 + 1/2*denom(1/4*s12^2)
      *mt^2*s12*s14*s24 + 1/2*denom(1/4*s12^2)*mt^2*s12*s14*s23 + 1/4*denom(1/
      4*s12^2)*mt^2*s12*s14^2 + 1/2*denom(1/4*s12^2)*mt^2*s12*s13*s24 + 1/2*
      denom(1/4*s12^2)*mt^2*s12*s13*s23 + 1/2*denom(1/4*s12^2)*mt^2*s12*s13*
      s14 + 1/4*denom(1/4*s12^2)*mt^2*s12*s13^2 + 1/4*denom(1/4*s12^2)*mt^2*
      s12^2*s24 + 1/4*denom(1/4*s12^2)*mt^2*s12^2*s23 + 1/4*denom(1/4*s12^2)*
      mt^2*s12^2*s14 + 1/4*denom(1/4*s12^2)*mt^2*s12^2*s13 - 1/4*denom(1/4*
      s12^2)*mt^2*mh^2*s12*s24 - 1/4*denom(1/4*s12^2)*mt^2*mh^2*s12*s23 - 1/4*
      denom(1/4*s12^2)*mt^2*mh^2*s12*s14 - 1/4*denom(1/4*s12^2)*mt^2*mh^2*s12*
      s13 - 1/2*denom(1/4*s12^2)*mt^4*s12*s24 - 1/2*denom(1/4*s12^2)*mt^4*s12*
      s23 - 1/2*denom(1/4*s12^2)*mt^4*s12*s14 - 1/2*denom(1/4*s12^2)*mt^4*s12*
      s13 - 1/2*denom(1/4*s12^2)*mt^4*s12^2 + 1/2*denom(1/4*s12^2)*mt^4*mh^2*
      s12;
 
 .sort
id KMatrix(2,18) =   - mt*s14*s24 - mt*s14*s23 - mt*s14^2 + mt*s13*s24 + mt*
      s13*s23 + mt*s13^2 - mt*s12*s14 + mt*s12*s13 + mt*mh^2*s14 - mt*mh^2*s13
       + 2*mt^3*s14 - 2*mt^3*s13 - denom(1/2*s12)*mt*s14^2*s23 - denom(1/2*s12
      )*mt*s13*s14*s24 + denom(1/2*s12)*mt*s13*s14*s23 + denom(1/2*s12)*mt*
      s13^2*s24 + denom(1/2*s12)*mt^3*s14*s24 + denom(1/2*s12)*mt^3*s14*s23 + 
      denom(1/2*s12)*mt^3*s14^2 - denom(1/2*s12)*mt^3*s13*s24 - denom(1/2*s12)
      *mt^3*s13*s23 - denom(1/2*s12)*mt^3*s13^2 - 2*denom(1/2*s12)*mt^5*s14 + 
      2*denom(1/2*s12)*mt^5*s13 + 1/4*denom(1/4*s12^2)*mt*s12*s14^2*s23 + 1/4*
      denom(1/4*s12^2)*mt*s12*s13*s14*s24 - 1/4*denom(1/4*s12^2)*mt*s12*s13*
      s14*s23 - 1/4*denom(1/4*s12^2)*mt*s12*s13^2*s24 - 1/4*denom(1/4*s12^2)*
      mt^3*s12*s14*s24 - 1/4*denom(1/4*s12^2)*mt^3*s12*s14*s23 - 1/4*denom(1/4
      *s12^2)*mt^3*s12*s14^2 + 1/4*denom(1/4*s12^2)*mt^3*s12*s13*s24 + 1/4*
      denom(1/4*s12^2)*mt^3*s12*s13*s23 + 1/4*denom(1/4*s12^2)*mt^3*s12*s13^2
       + 1/2*denom(1/4*s12^2)*mt^5*s12*s14 - 1/2*denom(1/4*s12^2)*mt^5*s12*s13
      ;
 
 .sort
id KMatrix(2,19) =   - mt*s24^2 + mt*s23^2 - mt*s14*s24 + mt*s14*s23 - mt*s13*
      s24 + mt*s13*s23 - mt*s12*s24 + mt*s12*s23 + mt*mh^2*s24 - mt*mh^2*s23
       + 2*mt^3*s24 - 2*mt^3*s23 - denom(1/2*s12)*mt*s14*s23*s24 + denom(1/2*
      s12)*mt*s14*s23^2 - denom(1/2*s12)*mt*s13*s24^2 + denom(1/2*s12)*mt*s13*
      s23*s24 + denom(1/2*s12)*mt^3*s24^2 - denom(1/2*s12)*mt^3*s23^2 + denom(
      1/2*s12)*mt^3*s14*s24 - denom(1/2*s12)*mt^3*s14*s23 + denom(1/2*s12)*
      mt^3*s13*s24 - denom(1/2*s12)*mt^3*s13*s23 - 2*denom(1/2*s12)*mt^5*s24
       + 2*denom(1/2*s12)*mt^5*s23 + 1/4*denom(1/4*s12^2)*mt*s12*s14*s23*s24
       - 1/4*denom(1/4*s12^2)*mt*s12*s14*s23^2 + 1/4*denom(1/4*s12^2)*mt*s12*
      s13*s24^2 - 1/4*denom(1/4*s12^2)*mt*s12*s13*s23*s24 - 1/4*denom(1/4*
      s12^2)*mt^3*s12*s24^2 + 1/4*denom(1/4*s12^2)*mt^3*s12*s23^2 - 1/4*denom(
      1/4*s12^2)*mt^3*s12*s14*s24 + 1/4*denom(1/4*s12^2)*mt^3*s12*s14*s23 - 1/
      4*denom(1/4*s12^2)*mt^3*s12*s13*s24 + 1/4*denom(1/4*s12^2)*mt^3*s12*s13*
      s23 + 1/2*denom(1/4*s12^2)*mt^5*s12*s24 - 1/2*denom(1/4*s12^2)*mt^5*s12*
      s23;
 
 .sort
id KMatrix(2,20) =  mt*s24^2 + 2*mt*s23*s24 + mt*s23^2 + 2*mt*s14*s24 + 2*mt*
      s14*s23 + mt*s14^2 + 2*mt*s13*s24 + 2*mt*s13*s23 + 2*mt*s13*s14 + mt*
      s13^2 + 2*mt*s12*s24 + 2*mt*s12*s23 + 2*mt*s12*s14 + 2*mt*s12*s13 + mt*
      s12^2 - 2*mt*mh^2*s24 - 2*mt*mh^2*s23 - 2*mt*mh^2*s14 - 2*mt*mh^2*s13 - 
      2*mt*mh^2*s12 + mt*mh^4 - 2*mt^3*s24 - 2*mt^3*s23 - 2*mt^3*s14 - 2*mt^3*
      s13 - 2*mt^3*s12 + 2*mt^3*mh^2 + denom(1/2*s12)*mt*s14*s23*s24 + denom(1/
      2*s12)*mt*s14*s23^2 + denom(1/2*s12)*mt*s14^2*s23 + denom(1/2*s12)*mt*
      s13*s24^2 - denom(1/2*s12)*mt*s13*s23^2 + denom(1/2*s12)*mt*s13*s14*s24
       + denom(1/2*s12)*mt*s13^2*s24 - denom(1/2*s12)*mt*s13^2*s23 + denom(1/2
      *s12)*mt*s12*s14*s23 + denom(1/2*s12)*mt*s12*s13*s24 - denom(1/2*s12)*mt
      *s12*s13*s23 - denom(1/2*s12)*mt*mh^2*s14*s23 - denom(1/2*s12)*mt*mh^2*
      s13*s24 + denom(1/2*s12)*mt*mh^2*s13*s23 - denom(1/2*s12)*mt^3*s24^2 - 
      denom(1/2*s12)*mt^3*s23*s24 - 2*denom(1/2*s12)*mt^3*s14*s24 - 2*denom(1/
      2*s12)*mt^3*s14*s23 - denom(1/2*s12)*mt^3*s14^2 - 2*denom(1/2*s12)*mt^3*
      s13*s24 + 2*denom(1/2*s12)*mt^3*s13*s23 - denom(1/2*s12)*mt^3*s13*s14 - 
      denom(1/2*s12)*mt^3*s12*s24 - denom(1/2*s12)*mt^3*s12*s14 + denom(1/2*
      s12)*mt^3*mh^2*s24 + denom(1/2*s12)*mt^3*mh^2*s14 + 2*denom(1/2*s12)*
      mt^5*s24 + 2*denom(1/2*s12)*mt^5*s14 + denom(1/2*s12)*mt^5*s12 - denom(1/
      2*s12)*mt^5*mh^2 + 1/4*denom(1/4*s12^2)*mt*s14^2*s23^2 + 1/2*denom(1/4*
      s12^2)*mt*s13*s14*s23*s24 - 1/2*denom(1/4*s12^2)*mt*s13*s14*s23^2 + 1/4*
      denom(1/4*s12^2)*mt*s13^2*s24^2 - 1/2*denom(1/4*s12^2)*mt*s13^2*s23*s24
       - 1/2*denom(1/4*s12^2)*mt^3*s14*s23*s24 - 1/2*denom(1/4*s12^2)*mt^3*
      s14^2*s23 - 1/2*denom(1/4*s12^2)*mt^3*s13*s24^2 + 1/2*denom(1/4*s12^2)*
      mt^3*s13*s23*s24 + 1/2*denom(1/4*s12^2)*mt^3*s13*s23^2 - 1/2*denom(1/4*
      s12^2)*mt^3*s13*s14*s24 + 1/2*denom(1/4*s12^2)*mt^3*s13*s14*s23 + 1/2*
      denom(1/4*s12^2)*mt^3*s13^2*s23 + 1/4*denom(1/4*s12^2)*mt^5*s24^2 - 1/4*
      denom(1/4*s12^2)*mt^5*s23^2 + 1/2*denom(1/4*s12^2)*mt^5*s14*s24 + 1/2*
      denom(1/4*s12^2)*mt^5*s14*s23 + 1/4*denom(1/4*s12^2)*mt^5*s14^2 + 1/2*
      denom(1/4*s12^2)*mt^5*s13*s24 - 3/2*denom(1/4*s12^2)*mt^5*s13*s23 - 1/4*
      denom(1/4*s12^2)*mt^5*s13^2 - 1/2*denom(1/4*s12^2)*mt^7*s24 + 1/2*denom(
      1/4*s12^2)*mt^7*s23 - 1/2*denom(1/4*s12^2)*mt^7*s14 + 1/2*denom(1/4*
      s12^2)*mt^7*s13;
 
 .sort
id KMatrix(2,21) =   - 2*mt^3*s24 - 2*mt^3*s23 - 2*mt^3*s14 - 2*mt^3*s13 - 2*
      mt^3*s12 + 2*mt^3*mh^2 + denom(1/2*s12)*mt*s14*s24^2 + denom(1/2*s12)*mt
      *s14*s23*s24 + denom(1/2*s12)*mt*s14^2*s24 + denom(1/2*s12)*mt*s13*s14*
      s24 + denom(1/2*s12)*mt*s12*s14*s24 - denom(1/2*s12)*mt*mh^2*s14*s24 - 
      denom(1/2*s12)*mt^3*s24^2 - denom(1/2*s12)*mt^3*s23*s24 - 2*denom(1/2*
      s12)*mt^3*s14*s24 - 2*denom(1/2*s12)*mt^3*s14*s23 - denom(1/2*s12)*mt^3*
      s14^2 - 2*denom(1/2*s12)*mt^3*s13*s24 + 2*denom(1/2*s12)*mt^3*s13*s23 - 
      denom(1/2*s12)*mt^3*s13*s14 - denom(1/2*s12)*mt^3*s12*s24 - denom(1/2*
      s12)*mt^3*s12*s14 + denom(1/2*s12)*mt^3*mh^2*s24 + denom(1/2*s12)*mt^3*
      mh^2*s14 + 2*denom(1/2*s12)*mt^5*s24 + 2*denom(1/2*s12)*mt^5*s14 + 
      denom(1/2*s12)*mt^5*s12 - denom(1/2*s12)*mt^5*mh^2 + 1/2*denom(1/4*s12^2
      )*mt*s14^2*s23*s24 + 1/2*denom(1/4*s12^2)*mt*s13*s14*s24^2 - denom(1/4*
      s12^2)*mt*s13*s14*s23*s24 - 1/2*denom(1/4*s12^2)*mt^3*s14*s24^2 - 1/2*
      denom(1/4*s12^2)*mt^3*s14^2*s24 - 1/2*denom(1/4*s12^2)*mt^3*s14^2*s23 - 
      1/2*denom(1/4*s12^2)*mt^3*s13*s24^2 + denom(1/4*s12^2)*mt^3*s13*s23*s24
       + denom(1/4*s12^2)*mt^3*s13*s14*s23 + 1/2*denom(1/4*s12^2)*mt^5*s24^2
       - 1/2*denom(1/4*s12^2)*mt^5*s23*s24 + denom(1/4*s12^2)*mt^5*s14*s24 + 1/
      2*denom(1/4*s12^2)*mt^5*s14^2 - denom(1/4*s12^2)*mt^5*s13*s23 - 1/2*
      denom(1/4*s12^2)*mt^5*s13*s14 - 1/2*denom(1/4*s12^2)*mt^7*s24 + 1/2*
      denom(1/4*s12^2)*mt^7*s23 - 1/2*denom(1/4*s12^2)*mt^7*s14 + 1/2*denom(1/
      4*s12^2)*mt^7*s13;
 
 .sort
id KMatrix(2,22) =  2*mt^3*s24 + 2*mt^3*s23 + 2*mt^3*s14 + 2*mt^3*s13 + 2*mt^3
      *s12 - 2*mt^3*mh^2 - denom(1/2*s12)*mt*s13*s23*s24 - denom(1/2*s12)*mt*
      s13*s23^2 - denom(1/2*s12)*mt*s13*s14*s23 - denom(1/2*s12)*mt*s13^2*s23
       - denom(1/2*s12)*mt*s12*s13*s23 + denom(1/2*s12)*mt*mh^2*s13*s23 + 
      denom(1/2*s12)*mt^3*s23*s24 + denom(1/2*s12)*mt^3*s23^2 - 2*denom(1/2*
      s12)*mt^3*s14*s24 + 2*denom(1/2*s12)*mt^3*s14*s23 + 2*denom(1/2*s12)*
      mt^3*s13*s24 + 2*denom(1/2*s12)*mt^3*s13*s23 + denom(1/2*s12)*mt^3*s13*
      s14 + denom(1/2*s12)*mt^3*s13^2 + denom(1/2*s12)*mt^3*s12*s23 + denom(1/
      2*s12)*mt^3*s12*s13 - denom(1/2*s12)*mt^3*mh^2*s23 - denom(1/2*s12)*mt^3
      *mh^2*s13 - 2*denom(1/2*s12)*mt^5*s23 - 2*denom(1/2*s12)*mt^5*s13 - 
      denom(1/2*s12)*mt^5*s12 + denom(1/2*s12)*mt^5*mh^2 + denom(1/4*s12^2)*mt
      *s13*s14*s23*s24 - 1/2*denom(1/4*s12^2)*mt*s13*s14*s23^2 - 1/2*denom(1/4
      *s12^2)*mt*s13^2*s23*s24 - denom(1/4*s12^2)*mt^3*s14*s23*s24 + 1/2*
      denom(1/4*s12^2)*mt^3*s14*s23^2 + 1/2*denom(1/4*s12^2)*mt^3*s13*s23^2 - 
      denom(1/4*s12^2)*mt^3*s13*s14*s24 + 1/2*denom(1/4*s12^2)*mt^3*s13^2*s24
       + 1/2*denom(1/4*s12^2)*mt^3*s13^2*s23 + 1/2*denom(1/4*s12^2)*mt^5*s23*
      s24 - 1/2*denom(1/4*s12^2)*mt^5*s23^2 + denom(1/4*s12^2)*mt^5*s14*s24 - 
      denom(1/4*s12^2)*mt^5*s13*s23 + 1/2*denom(1/4*s12^2)*mt^5*s13*s14 - 1/2*
      denom(1/4*s12^2)*mt^5*s13^2 - 1/2*denom(1/4*s12^2)*mt^7*s24 + 1/2*denom(
      1/4*s12^2)*mt^7*s23 - 1/2*denom(1/4*s12^2)*mt^7*s14 + 1/2*denom(1/4*
      s12^2)*mt^7*s13;
 
 .sort
id KMatrix(2,23) =   - mt*s24^2 - 2*mt*s23*s24 - mt*s23^2 - 2*mt*s14*s24 - 2*
      mt*s14*s23 - mt*s14^2 - 2*mt*s13*s24 - 2*mt*s13*s23 - 2*mt*s13*s14 - mt*
      s13^2 - 2*mt*s12*s24 - 2*mt*s12*s23 - 2*mt*s12*s14 - 2*mt*s12*s13 - mt*
      s12^2 + 2*mt*mh^2*s24 + 2*mt*mh^2*s23 + 2*mt*mh^2*s14 + 2*mt*mh^2*s13 + 
      2*mt*mh^2*s12 - mt*mh^4 + 2*mt^3*s24 + 2*mt^3*s23 + 2*mt^3*s14 + 2*mt^3*
      s13 + 2*mt^3*s12 - 2*mt^3*mh^2 + denom(1/2*s12)*mt*s14*s24^2 - denom(1/2
      *s12)*mt*s14*s23^2 + denom(1/2*s12)*mt*s14^2*s24 - denom(1/2*s12)*mt*
      s14^2*s23 - denom(1/2*s12)*mt*s13*s24^2 - denom(1/2*s12)*mt*s13*s23*s24
       - denom(1/2*s12)*mt*s13*s14*s23 - denom(1/2*s12)*mt*s13^2*s24 + denom(1/
      2*s12)*mt*s12*s14*s24 - denom(1/2*s12)*mt*s12*s14*s23 - denom(1/2*s12)*
      mt*s12*s13*s24 - denom(1/2*s12)*mt*mh^2*s14*s24 + denom(1/2*s12)*mt*mh^2
      *s14*s23 + denom(1/2*s12)*mt*mh^2*s13*s24 + denom(1/2*s12)*mt^3*s23*s24
       + denom(1/2*s12)*mt^3*s23^2 - 2*denom(1/2*s12)*mt^3*s14*s24 + 2*denom(1/
      2*s12)*mt^3*s14*s23 + 2*denom(1/2*s12)*mt^3*s13*s24 + 2*denom(1/2*s12)*
      mt^3*s13*s23 + denom(1/2*s12)*mt^3*s13*s14 + denom(1/2*s12)*mt^3*s13^2
       + denom(1/2*s12)*mt^3*s12*s23 + denom(1/2*s12)*mt^3*s12*s13 - denom(1/2
      *s12)*mt^3*mh^2*s23 - denom(1/2*s12)*mt^3*mh^2*s13 - 2*denom(1/2*s12)*
      mt^5*s23 - 2*denom(1/2*s12)*mt^5*s13 - denom(1/2*s12)*mt^5*s12 + denom(1/
      2*s12)*mt^5*mh^2 + 1/2*denom(1/4*s12^2)*mt*s14^2*s23*s24 - 1/4*denom(1/4
      *s12^2)*mt*s14^2*s23^2 + 1/2*denom(1/4*s12^2)*mt*s13*s14*s24^2 - 1/2*
      denom(1/4*s12^2)*mt*s13*s14*s23*s24 - 1/4*denom(1/4*s12^2)*mt*s13^2*
      s24^2 - 1/2*denom(1/4*s12^2)*mt^3*s14*s24^2 - 1/2*denom(1/4*s12^2)*mt^3*
      s14*s23*s24 + 1/2*denom(1/4*s12^2)*mt^3*s14*s23^2 - 1/2*denom(1/4*s12^2)
      *mt^3*s14^2*s24 + 1/2*denom(1/4*s12^2)*mt^3*s13*s23*s24 - 1/2*denom(1/4*
      s12^2)*mt^3*s13*s14*s24 + 1/2*denom(1/4*s12^2)*mt^3*s13*s14*s23 + 1/2*
      denom(1/4*s12^2)*mt^3*s13^2*s24 + 1/4*denom(1/4*s12^2)*mt^5*s24^2 - 1/4*
      denom(1/4*s12^2)*mt^5*s23^2 + 3/2*denom(1/4*s12^2)*mt^5*s14*s24 - 1/2*
      denom(1/4*s12^2)*mt^5*s14*s23 + 1/4*denom(1/4*s12^2)*mt^5*s14^2 - 1/2*
      denom(1/4*s12^2)*mt^5*s13*s24 - 1/2*denom(1/4*s12^2)*mt^5*s13*s23 - 1/4*
      denom(1/4*s12^2)*mt^5*s13^2 - 1/2*denom(1/4*s12^2)*mt^7*s24 + 1/2*denom(
      1/4*s12^2)*mt^7*s23 - 1/2*denom(1/4*s12^2)*mt^7*s14 + 1/2*denom(1/4*
      s12^2)*mt^7*s13;
 
 .sort
id KMatrix(2,24) =   - 1/2*s14*s23*s24 - 1/2*s14*s23^2 - 1/2*s14^2*s23 + 1/2*
      s13*s24^2 + 1/2*s13*s23*s24 + 1/2*s13*s14*s24 - 1/2*s13*s14*s23 + 1/2*
      s13^2*s24 + 1/2*s12*s24^2 + s12*s23*s24 + 1/2*s12*s23^2 + s12*s14*s24 + 
      1/2*s12*s14*s23 + 1/2*s12*s14^2 + 3/2*s12*s13*s24 + s12*s13*s23 + s12*
      s13*s14 + 1/2*s12*s13^2 + s12^2*s24 + s12^2*s23 + s12^2*s14 + s12^2*s13
       + 1/2*s12^3 + 1/2*mh^2*s14*s23 - 1/2*mh^2*s13*s24 - mh^2*s12*s24 - mh^2
      *s12*s23 - mh^2*s12*s14 - mh^2*s12*s13 - mh^2*s12^2 + 1/2*mh^4*s12 - 1/2
      *mt^2*s24^2 + 1/2*mt^2*s23^2 + 2*mt^2*s14*s23 + 1/2*mt^2*s14^2 - 2*mt^2*
      s13*s24 - 1/2*mt^2*s13^2 - 3/2*mt^2*s12*s24 - 1/2*mt^2*s12*s23 - 1/2*
      mt^2*s12*s14 - 3/2*mt^2*s12*s13 - mt^2*s12^2 + 1/2*mt^2*mh^2*s24 - 1/2*
      mt^2*mh^2*s23 - 1/2*mt^2*mh^2*s14 + 1/2*mt^2*mh^2*s13 + mt^2*mh^2*s12 + 
      mt^4*s24 - mt^4*s23 - mt^4*s14 + mt^4*s13 - 1/2*denom(1/2*s12)*s14^2*
      s23^2 + 1/2*denom(1/2*s12)*s13^2*s24^2 + 1/2*denom(1/2*s12)*s12*s14*s23*
      s24 + 1/2*denom(1/2*s12)*s12*s14*s23^2 + 1/2*denom(1/2*s12)*s12*s14^2*
      s23 + 1/2*denom(1/2*s12)*s12*s13*s24^2 + 1/2*denom(1/2*s12)*s12*s13*s23*
      s24 + 1/2*denom(1/2*s12)*s12*s13*s14*s24 + 1/2*denom(1/2*s12)*s12*s13*
      s14*s23 + 1/2*denom(1/2*s12)*s12*s13^2*s24 + 1/2*denom(1/2*s12)*s12^2*
      s14*s23 + 1/2*denom(1/2*s12)*s12^2*s13*s24 - 1/2*denom(1/2*s12)*mh^2*s12
      *s14*s23 - 1/2*denom(1/2*s12)*mh^2*s12*s13*s24 + denom(1/2*s12)*mt^2*s14
      *s23^2 + denom(1/2*s12)*mt^2*s14^2*s23 - denom(1/2*s12)*mt^2*s13*s24^2
       - denom(1/2*s12)*mt^2*s13^2*s24 - 1/2*denom(1/2*s12)*mt^2*s12*s24^2 - 
      denom(1/2*s12)*mt^2*s12*s23*s24 - 1/2*denom(1/2*s12)*mt^2*s12*s23^2 - 
      denom(1/2*s12)*mt^2*s12*s14*s24 - denom(1/2*s12)*mt^2*s12*s14*s23 - 1/2*
      denom(1/2*s12)*mt^2*s12*s14^2 - denom(1/2*s12)*mt^2*s12*s13*s24 - denom(
      1/2*s12)*mt^2*s12*s13*s23 - denom(1/2*s12)*mt^2*s12*s13*s14 - 1/2*denom(
      1/2*s12)*mt^2*s12*s13^2 - 1/2*denom(1/2*s12)*mt^2*s12^2*s24 - 1/2*denom(
      1/2*s12)*mt^2*s12^2*s23 - 1/2*denom(1/2*s12)*mt^2*s12^2*s14 - 1/2*denom(
      1/2*s12)*mt^2*s12^2*s13 + 1/2*denom(1/2*s12)*mt^2*mh^2*s12*s24 + 1/2*
      denom(1/2*s12)*mt^2*mh^2*s12*s23 + 1/2*denom(1/2*s12)*mt^2*mh^2*s12*s14
       + 1/2*denom(1/2*s12)*mt^2*mh^2*s12*s13 + 1/2*denom(1/2*s12)*mt^4*s24^2
       - 1/2*denom(1/2*s12)*mt^4*s23^2 - 2*denom(1/2*s12)*mt^4*s14*s23 - 1/2*
      denom(1/2*s12)*mt^4*s14^2 + 2*denom(1/2*s12)*mt^4*s13*s24 + 1/2*denom(1/
      2*s12)*mt^4*s13^2 + denom(1/2*s12)*mt^4*s12*s24 + denom(1/2*s12)*mt^4*
      s12*s23 + denom(1/2*s12)*mt^4*s12*s14 + denom(1/2*s12)*mt^4*s12*s13 + 
      denom(1/2*s12)*mt^4*s12^2 - denom(1/2*s12)*mt^4*mh^2*s12 - denom(1/2*s12
      )*mt^6*s24 + denom(1/2*s12)*mt^6*s23 + denom(1/2*s12)*mt^6*s14 - denom(1/
      2*s12)*mt^6*s13 + 1/8*denom(1/4*s12^2)*s12*s14^2*s23^2 - 1/8*denom(1/4*
      s12^2)*s12*s13^2*s24^2 - 1/8*denom(1/4*s12^2)*s12^2*s14*s23*s24 - 1/8*
      denom(1/4*s12^2)*s12^2*s14*s23^2 - 1/8*denom(1/4*s12^2)*s12^2*s14^2*s23
       - 1/8*denom(1/4*s12^2)*s12^2*s13*s24^2 - 1/8*denom(1/4*s12^2)*s12^2*s13
      *s23*s24 - 1/8*denom(1/4*s12^2)*s12^2*s13*s14*s24 - 1/8*denom(1/4*s12^2)
      *s12^2*s13*s14*s23 - 1/8*denom(1/4*s12^2)*s12^2*s13^2*s24 - 1/8*denom(1/
      4*s12^2)*s12^3*s14*s23 - 1/8*denom(1/4*s12^2)*s12^3*s13*s24 + 1/8*denom(
      1/4*s12^2)*mh^2*s12^2*s14*s23 + 1/8*denom(1/4*s12^2)*mh^2*s12^2*s13*s24
       - 1/4*denom(1/4*s12^2)*mt^2*s12*s14*s23^2 - 1/4*denom(1/4*s12^2)*mt^2*
      s12*s14^2*s23 + 1/4*denom(1/4*s12^2)*mt^2*s12*s13*s24^2 + 1/4*denom(1/4*
      s12^2)*mt^2*s12*s13^2*s24 + 1/8*denom(1/4*s12^2)*mt^2*s12^2*s24^2 + 1/4*
      denom(1/4*s12^2)*mt^2*s12^2*s23*s24 + 1/8*denom(1/4*s12^2)*mt^2*s12^2*
      s23^2 + 1/4*denom(1/4*s12^2)*mt^2*s12^2*s14*s24 + 1/4*denom(1/4*s12^2)*
      mt^2*s12^2*s14*s23 + 1/8*denom(1/4*s12^2)*mt^2*s12^2*s14^2 + 1/4*denom(1/
      4*s12^2)*mt^2*s12^2*s13*s24 + 1/4*denom(1/4*s12^2)*mt^2*s12^2*s13*s23 + 
      1/4*denom(1/4*s12^2)*mt^2*s12^2*s13*s14 + 1/8*denom(1/4*s12^2)*mt^2*
      s12^2*s13^2 + 1/8*denom(1/4*s12^2)*mt^2*s12^3*s24 + 1/8*denom(1/4*s12^2)
      *mt^2*s12^3*s23 + 1/8*denom(1/4*s12^2)*mt^2*s12^3*s14 + 1/8*denom(1/4*
      s12^2)*mt^2*s12^3*s13 - 1/8*denom(1/4*s12^2)*mt^2*mh^2*s12^2*s24 - 1/8*
      denom(1/4*s12^2)*mt^2*mh^2*s12^2*s23 - 1/8*denom(1/4*s12^2)*mt^2*mh^2*
      s12^2*s14 - 1/8*denom(1/4*s12^2)*mt^2*mh^2*s12^2*s13 - 1/8*denom(1/4*
      s12^2)*mt^4*s12*s24^2 + 1/8*denom(1/4*s12^2)*mt^4*s12*s23^2 + 1/2*denom(
      1/4*s12^2)*mt^4*s12*s14*s23 + 1/8*denom(1/4*s12^2)*mt^4*s12*s14^2 - 1/2*
      denom(1/4*s12^2)*mt^4*s12*s13*s24 - 1/8*denom(1/4*s12^2)*mt^4*s12*s13^2
       - 1/4*denom(1/4*s12^2)*mt^4*s12^2*s24 - 1/4*denom(1/4*s12^2)*mt^4*s12^2
      *s23 - 1/4*denom(1/4*s12^2)*mt^4*s12^2*s14 - 1/4*denom(1/4*s12^2)*mt^4*
      s12^2*s13 - 1/4*denom(1/4*s12^2)*mt^4*s12^3 + 1/4*denom(1/4*s12^2)*mt^4*
      mh^2*s12^2 + 1/4*denom(1/4*s12^2)*mt^6*s12*s24 - 1/4*denom(1/4*s12^2)*
      mt^6*s12*s23 - 1/4*denom(1/4*s12^2)*mt^6*s12*s14 + 1/4*denom(1/4*s12^2)*
      mt^6*s12*s13;
 
 .sort
id KMatrix(2,25) =  2*s24^2 + 4*s23*s24 + 2*s23^2 + 4*s14*s24 + 4*s14*s23 + 2*
      s14^2 + 4*s13*s24 + 4*s13*s23 + 4*s13*s14 + 2*s13^2 + 4*s12*s24 + 4*s12*
      s23 + 4*s12*s14 + 4*s12*s13 + 2*s12^2 - 4*mh^2*s24 - 4*mh^2*s23 - 4*mh^2
      *s14 - 4*mh^2*s13 - 4*mh^2*s12 + 2*mh^4 - 6*mt^2*s24 - 6*mt^2*s23 - 6*
      mt^2*s14 - 6*mt^2*s13 - 6*mt^2*s12 + 6*mt^2*mh^2 + 2*denom(1/2*s12)*s14*
      s23*s24 + 2*denom(1/2*s12)*s14*s23^2 + 2*denom(1/2*s12)*s14^2*s23 + 2*
      denom(1/2*s12)*s13*s24^2 + 2*denom(1/2*s12)*s13*s23*s24 + 2*denom(1/2*
      s12)*s13*s14*s24 + 2*denom(1/2*s12)*s13*s14*s23 + 2*denom(1/2*s12)*s13^2
      *s24 + 2*denom(1/2*s12)*s12*s14*s23 + 2*denom(1/2*s12)*s12*s13*s24 - 2*
      denom(1/2*s12)*mh^2*s14*s23 - 2*denom(1/2*s12)*mh^2*s13*s24 - 2*denom(1/
      2*s12)*mt^2*s24^2 - 4*denom(1/2*s12)*mt^2*s23*s24 - 2*denom(1/2*s12)*
      mt^2*s23^2 - 2*denom(1/2*s12)*mt^2*s14*s24 - 6*denom(1/2*s12)*mt^2*s14*
      s23 - 2*denom(1/2*s12)*mt^2*s14^2 - 6*denom(1/2*s12)*mt^2*s13*s24 - 2*
      denom(1/2*s12)*mt^2*s13*s23 - 4*denom(1/2*s12)*mt^2*s13*s14 - 2*denom(1/
      2*s12)*mt^2*s13^2 - 2*denom(1/2*s12)*mt^2*s12*s24 - 2*denom(1/2*s12)*
      mt^2*s12*s23 - 2*denom(1/2*s12)*mt^2*s12*s14 - 2*denom(1/2*s12)*mt^2*s12
      *s13 + 2*denom(1/2*s12)*mt^2*mh^2*s24 + 2*denom(1/2*s12)*mt^2*mh^2*s23
       + 2*denom(1/2*s12)*mt^2*mh^2*s14 + 2*denom(1/2*s12)*mt^2*mh^2*s13 + 4*
      denom(1/2*s12)*mt^4*s24 + 4*denom(1/2*s12)*mt^4*s23 + 4*denom(1/2*s12)*
      mt^4*s14 + 4*denom(1/2*s12)*mt^4*s13 + 4*denom(1/2*s12)*mt^4*s12 - 4*
      denom(1/2*s12)*mt^4*mh^2 + 1/4*denom(1/4*s12^2)*s14^2*s23^2 - 1/2*denom(
      1/4*s12^2)*s13*s14*s23*s24 + 1/4*denom(1/4*s12^2)*s13^2*s24^2 - 1/4*
      denom(1/4*s12^2)*s12*s14*s23*s24 - 1/4*denom(1/4*s12^2)*s12*s14*s23^2 - 
      1/4*denom(1/4*s12^2)*s12*s14^2*s23 - 1/4*denom(1/4*s12^2)*s12*s13*s24^2
       - 1/4*denom(1/4*s12^2)*s12*s13*s23*s24 - 1/4*denom(1/4*s12^2)*s12*s13*
      s14*s24 - 1/4*denom(1/4*s12^2)*s12*s13*s14*s23 - 1/4*denom(1/4*s12^2)*
      s12*s13^2*s24 - 1/4*denom(1/4*s12^2)*s12^2*s14*s23 - 1/4*denom(1/4*s12^2
      )*s12^2*s13*s24 + 1/4*denom(1/4*s12^2)*mh^2*s12*s14*s23 + 1/4*denom(1/4*
      s12^2)*mh^2*s12*s13*s24 + 1/2*denom(1/4*s12^2)*mt^2*s14*s23*s24 - 1/2*
      denom(1/4*s12^2)*mt^2*s14*s23^2 - 1/2*denom(1/4*s12^2)*mt^2*s14^2*s23 - 
      1/2*denom(1/4*s12^2)*mt^2*s13*s24^2 + 1/2*denom(1/4*s12^2)*mt^2*s13*s23*
      s24 + 1/2*denom(1/4*s12^2)*mt^2*s13*s14*s24 + 1/2*denom(1/4*s12^2)*mt^2*
      s13*s14*s23 - 1/2*denom(1/4*s12^2)*mt^2*s13^2*s24 + 1/4*denom(1/4*s12^2)
      *mt^2*s12*s24^2 + 1/2*denom(1/4*s12^2)*mt^2*s12*s23*s24 + 1/4*denom(1/4*
      s12^2)*mt^2*s12*s23^2 + 1/2*denom(1/4*s12^2)*mt^2*s12*s14*s24 + 1/2*
      denom(1/4*s12^2)*mt^2*s12*s14*s23 + 1/4*denom(1/4*s12^2)*mt^2*s12*s14^2
       + 1/2*denom(1/4*s12^2)*mt^2*s12*s13*s24 + 1/2*denom(1/4*s12^2)*mt^2*s12
      *s13*s23 + 1/2*denom(1/4*s12^2)*mt^2*s12*s13*s14 + 1/4*denom(1/4*s12^2)*
      mt^2*s12*s13^2 + 1/4*denom(1/4*s12^2)*mt^2*s12^2*s24 + 1/4*denom(1/4*
      s12^2)*mt^2*s12^2*s23 + 1/4*denom(1/4*s12^2)*mt^2*s12^2*s14 + 1/4*denom(
      1/4*s12^2)*mt^2*s12^2*s13 - 1/4*denom(1/4*s12^2)*mt^2*mh^2*s12*s24 - 1/4
      *denom(1/4*s12^2)*mt^2*mh^2*s12*s23 - 1/4*denom(1/4*s12^2)*mt^2*mh^2*s12
      *s14 - 1/4*denom(1/4*s12^2)*mt^2*mh^2*s12*s13 + 1/4*denom(1/4*s12^2)*
      mt^4*s24^2 - 1/2*denom(1/4*s12^2)*mt^4*s23*s24 + 1/4*denom(1/4*s12^2)*
      mt^4*s23^2 - 1/2*denom(1/4*s12^2)*mt^4*s14*s24 + 1/2*denom(1/4*s12^2)*
      mt^4*s14*s23 + 1/4*denom(1/4*s12^2)*mt^4*s14^2 + 1/2*denom(1/4*s12^2)*
      mt^4*s13*s24 - 1/2*denom(1/4*s12^2)*mt^4*s13*s23 - 1/2*denom(1/4*s12^2)*
      mt^4*s13*s14 + 1/4*denom(1/4*s12^2)*mt^4*s13^2 - 1/2*denom(1/4*s12^2)*
      mt^4*s12*s24 - 1/2*denom(1/4*s12^2)*mt^4*s12*s23 - 1/2*denom(1/4*s12^2)*
      mt^4*s12*s14 - 1/2*denom(1/4*s12^2)*mt^4*s12*s13 - 1/2*denom(1/4*s12^2)*
      mt^4*s12^2 + 1/2*denom(1/4*s12^2)*mt^4*mh^2*s12;
 
 .sort
id KMatrix(2,26) =  1/2*s13*s24^2 + s13*s23*s24 + 1/2*s13*s23^2 + s13*s14*s24
       + s13*s14*s23 + 1/2*s13*s14^2 + s13^2*s24 + s13^2*s23 + s13^2*s14 + 1/2
      *s13^3 + s12*s13*s24 + s12*s13*s23 + s12*s13*s14 + s12*s13^2 + 1/2*s12^2
      *s13 - mh^2*s13*s24 - mh^2*s13*s23 - mh^2*s13*s14 - mh^2*s13^2 - mh^2*
      s12*s13 + 1/2*mh^4*s13 - 1/2*mt^2*s24^2 - mt^2*s23*s24 - 1/2*mt^2*s23^2
       + 1/2*mt^2*s14^2 - 3*mt^2*s13*s24 - 3*mt^2*s13*s23 - 2*mt^2*s13*s14 - 5/
      2*mt^2*s13^2 - mt^2*s12*s24 - mt^2*s12*s23 - 3*mt^2*s12*s13 - 1/2*mt^2*
      s12^2 + mt^2*mh^2*s24 + mt^2*mh^2*s23 + 3*mt^2*mh^2*s13 + mt^2*mh^2*s12
       - 1/2*mt^2*mh^4 + mt^4*s24 + mt^4*s23 - mt^4*s14 + 3*mt^4*s13 + mt^4*
      s12 - mt^4*mh^2 + 1/2*denom(1/2*s12)*s13^2*s24^2 + 1/2*denom(1/2*s12)*
      s13^2*s23*s24 + 1/2*denom(1/2*s12)*s13^2*s14*s24 + 1/2*denom(1/2*s12)*
      s13^3*s24 + 1/2*denom(1/2*s12)*s12*s13^2*s24 - 1/2*denom(1/2*s12)*mh^2*
      s13^2*s24 + 1/2*denom(1/2*s12)*mt^2*s14^2*s23 - denom(1/2*s12)*mt^2*s13*
      s24^2 - denom(1/2*s12)*mt^2*s13*s23*s24 - 1/2*denom(1/2*s12)*mt^2*s13*
      s14*s24 - 5/2*denom(1/2*s12)*mt^2*s13^2*s24 - 1/2*denom(1/2*s12)*mt^2*
      s13^2*s23 - 1/2*denom(1/2*s12)*mt^2*s13^2*s14 - 1/2*denom(1/2*s12)*mt^2*
      s13^3 - denom(1/2*s12)*mt^2*s12*s13*s24 - 1/2*denom(1/2*s12)*mt^2*s12*
      s13^2 + denom(1/2*s12)*mt^2*mh^2*s13*s24 + 1/2*denom(1/2*s12)*mt^2*mh^2*
      s13^2 + 1/2*denom(1/2*s12)*mt^4*s24^2 + 1/2*denom(1/2*s12)*mt^4*s23*s24
       - denom(1/2*s12)*mt^4*s14*s23 - 1/2*denom(1/2*s12)*mt^4*s14^2 + 3*
      denom(1/2*s12)*mt^4*s13*s24 + denom(1/2*s12)*mt^4*s13*s23 + 1/2*denom(1/
      2*s12)*mt^4*s13*s14 + 2*denom(1/2*s12)*mt^4*s13^2 + 1/2*denom(1/2*s12)*
      mt^4*s12*s24 + denom(1/2*s12)*mt^4*s12*s13 - 1/2*denom(1/2*s12)*mt^4*
      mh^2*s24 - denom(1/2*s12)*mt^4*mh^2*s13 - denom(1/2*s12)*mt^6*s24 + 
      denom(1/2*s12)*mt^6*s14 - 2*denom(1/2*s12)*mt^6*s13 - 1/2*denom(1/2*s12)
      *mt^6*s12 + 1/2*denom(1/2*s12)*mt^6*mh^2 - 1/8*denom(1/4*s12^2)*s13*
      s14^2*s23^2 + 1/8*denom(1/4*s12^2)*s13^3*s24^2 + 1/8*denom(1/4*s12^2)*
      mt^2*s14^2*s23^2 + 1/4*denom(1/4*s12^2)*mt^2*s13*s14*s23^2 + 1/4*denom(1/
      4*s12^2)*mt^2*s13*s14^2*s23 - 3/8*denom(1/4*s12^2)*mt^2*s13^2*s24^2 - 1/
      4*denom(1/4*s12^2)*mt^2*s13^3*s24 - 1/4*denom(1/4*s12^2)*mt^4*s14*s23^2
       - 1/4*denom(1/4*s12^2)*mt^4*s14^2*s23 + 3/8*denom(1/4*s12^2)*mt^4*s13*
      s24^2 - 1/8*denom(1/4*s12^2)*mt^4*s13*s23^2 - 1/2*denom(1/4*s12^2)*mt^4*
      s13*s14*s23 - 1/8*denom(1/4*s12^2)*mt^4*s13*s14^2 + 3/4*denom(1/4*s12^2)
      *mt^4*s13^2*s24 + 1/8*denom(1/4*s12^2)*mt^4*s13^3 - 1/8*denom(1/4*s12^2)
      *mt^6*s24^2 + 1/8*denom(1/4*s12^2)*mt^6*s23^2 + 1/2*denom(1/4*s12^2)*
      mt^6*s14*s23 + 1/8*denom(1/4*s12^2)*mt^6*s14^2 - 3/4*denom(1/4*s12^2)*
      mt^6*s13*s24 + 1/4*denom(1/4*s12^2)*mt^6*s13*s23 + 1/4*denom(1/4*s12^2)*
      mt^6*s13*s14 - 3/8*denom(1/4*s12^2)*mt^6*s13^2 + 1/4*denom(1/4*s12^2)*
      mt^8*s24 - 1/4*denom(1/4*s12^2)*mt^8*s23 - 1/4*denom(1/4*s12^2)*mt^8*s14
       + 1/4*denom(1/4*s12^2)*mt^8*s13;
 
 .sort
id KMatrix(2,27) =  1/2*s23*s24^2 + s23^2*s24 + 1/2*s23^3 + s14*s23*s24 + s14*
      s23^2 + 1/2*s14^2*s23 + s13*s23*s24 + s13*s23^2 + s13*s14*s23 + 1/2*
      s13^2*s23 + s12*s23*s24 + s12*s23^2 + s12*s14*s23 + s12*s13*s23 + 1/2*
      s12^2*s23 - mh^2*s23*s24 - mh^2*s23^2 - mh^2*s14*s23 - mh^2*s13*s23 - 
      mh^2*s12*s23 + 1/2*mh^4*s23 + 1/2*mt^2*s24^2 - 2*mt^2*s23*s24 - 5/2*mt^2
      *s23^2 - 3*mt^2*s14*s23 - 1/2*mt^2*s14^2 - 3*mt^2*s13*s23 - mt^2*s13*s14
       - 1/2*mt^2*s13^2 - 3*mt^2*s12*s23 - mt^2*s12*s14 - mt^2*s12*s13 - 1/2*
      mt^2*s12^2 + 3*mt^2*mh^2*s23 + mt^2*mh^2*s14 + mt^2*mh^2*s13 + mt^2*mh^2
      *s12 - 1/2*mt^2*mh^4 - mt^4*s24 + 3*mt^4*s23 + mt^4*s14 + mt^4*s13 + 
      mt^4*s12 - mt^4*mh^2 + 1/2*denom(1/2*s12)*s14*s23^2*s24 + 1/2*denom(1/2*
      s12)*s14*s23^3 + 1/2*denom(1/2*s12)*s14^2*s23^2 + 1/2*denom(1/2*s12)*s13
      *s14*s23^2 + 1/2*denom(1/2*s12)*s12*s14*s23^2 - 1/2*denom(1/2*s12)*mh^2*
      s14*s23^2 - 1/2*denom(1/2*s12)*mt^2*s23^2*s24 - 1/2*denom(1/2*s12)*mt^2*
      s23^3 - 1/2*denom(1/2*s12)*mt^2*s14*s23*s24 - 5/2*denom(1/2*s12)*mt^2*
      s14*s23^2 - denom(1/2*s12)*mt^2*s14^2*s23 + 1/2*denom(1/2*s12)*mt^2*s13*
      s24^2 - 1/2*denom(1/2*s12)*mt^2*s13*s23^2 - denom(1/2*s12)*mt^2*s13*s14*
      s23 - 1/2*denom(1/2*s12)*mt^2*s12*s23^2 - denom(1/2*s12)*mt^2*s12*s14*
      s23 + 1/2*denom(1/2*s12)*mt^2*mh^2*s23^2 + denom(1/2*s12)*mt^2*mh^2*s14*
      s23 - 1/2*denom(1/2*s12)*mt^4*s24^2 + 1/2*denom(1/2*s12)*mt^4*s23*s24 + 
      2*denom(1/2*s12)*mt^4*s23^2 + 3*denom(1/2*s12)*mt^4*s14*s23 + 1/2*denom(
      1/2*s12)*mt^4*s14^2 - denom(1/2*s12)*mt^4*s13*s24 + denom(1/2*s12)*mt^4*
      s13*s23 + 1/2*denom(1/2*s12)*mt^4*s13*s14 + denom(1/2*s12)*mt^4*s12*s23
       + 1/2*denom(1/2*s12)*mt^4*s12*s14 - denom(1/2*s12)*mt^4*mh^2*s23 - 1/2*
      denom(1/2*s12)*mt^4*mh^2*s14 + denom(1/2*s12)*mt^6*s24 - 2*denom(1/2*s12
      )*mt^6*s23 - denom(1/2*s12)*mt^6*s14 - 1/2*denom(1/2*s12)*mt^6*s12 + 1/2
      *denom(1/2*s12)*mt^6*mh^2 + 1/8*denom(1/4*s12^2)*s14^2*s23^3 - 1/8*
      denom(1/4*s12^2)*s13^2*s23*s24^2 - 1/4*denom(1/4*s12^2)*mt^2*s14*s23^3
       - 3/8*denom(1/4*s12^2)*mt^2*s14^2*s23^2 + 1/4*denom(1/4*s12^2)*mt^2*s13
      *s23*s24^2 + 1/8*denom(1/4*s12^2)*mt^2*s13^2*s24^2 + 1/4*denom(1/4*s12^2
      )*mt^2*s13^2*s23*s24 - 1/8*denom(1/4*s12^2)*mt^4*s23*s24^2 + 1/8*denom(1/
      4*s12^2)*mt^4*s23^3 + 3/4*denom(1/4*s12^2)*mt^4*s14*s23^2 + 3/8*denom(1/
      4*s12^2)*mt^4*s14^2*s23 - 1/4*denom(1/4*s12^2)*mt^4*s13*s24^2 - 1/2*
      denom(1/4*s12^2)*mt^4*s13*s23*s24 - 1/4*denom(1/4*s12^2)*mt^4*s13^2*s24
       - 1/8*denom(1/4*s12^2)*mt^4*s13^2*s23 + 1/8*denom(1/4*s12^2)*mt^6*s24^2
       + 1/4*denom(1/4*s12^2)*mt^6*s23*s24 - 3/8*denom(1/4*s12^2)*mt^6*s23^2
       - 3/4*denom(1/4*s12^2)*mt^6*s14*s23 - 1/8*denom(1/4*s12^2)*mt^6*s14^2
       + 1/2*denom(1/4*s12^2)*mt^6*s13*s24 + 1/4*denom(1/4*s12^2)*mt^6*s13*s23
       + 1/8*denom(1/4*s12^2)*mt^6*s13^2 - 1/4*denom(1/4*s12^2)*mt^8*s24 + 1/4
      *denom(1/4*s12^2)*mt^8*s23 + 1/4*denom(1/4*s12^2)*mt^8*s14 - 1/4*denom(1/
      4*s12^2)*mt^8*s13;
 
 .sort
id KMatrix(2,28) =   - mt^2*s13*s24 - mt^2*s13*s23 - mt^2*s13*s14 - mt^2*s13^2
       - mt^2*s12*s13 + mt^2*mh^2*s13 + mt^4*s24 + mt^4*s23 - mt^4*s14 + 3*
      mt^4*s13 + mt^4*s12 - mt^4*mh^2 + 1/2*denom(1/2*s12)*s13*s14*s24^2 + 1/2
      *denom(1/2*s12)*s13*s14*s23*s24 + 1/2*denom(1/2*s12)*s13*s14^2*s24 + 1/2
      *denom(1/2*s12)*s13^2*s14*s24 + 1/2*denom(1/2*s12)*s12*s13*s14*s24 - 1/2
      *denom(1/2*s12)*mh^2*s13*s14*s24 - 1/2*denom(1/2*s12)*mt^2*s14*s24^2 - 1/
      2*denom(1/2*s12)*mt^2*s14*s23*s24 + 1/2*denom(1/2*s12)*mt^2*s14^2*s24 - 
      1/2*denom(1/2*s12)*mt^2*s13*s24^2 - 1/2*denom(1/2*s12)*mt^2*s13*s23*s24
       - 5/2*denom(1/2*s12)*mt^2*s13*s14*s24 - 1/2*denom(1/2*s12)*mt^2*s13*
      s14^2 - denom(1/2*s12)*mt^2*s13^2*s24 - 1/2*denom(1/2*s12)*mt^2*s13^2*
      s14 - 1/2*denom(1/2*s12)*mt^2*s12*s14*s24 - 1/2*denom(1/2*s12)*mt^2*s12*
      s13*s24 - 1/2*denom(1/2*s12)*mt^2*s12*s13*s14 + 1/2*denom(1/2*s12)*mt^2*
      mh^2*s14*s24 + 1/2*denom(1/2*s12)*mt^2*mh^2*s13*s24 + 1/2*denom(1/2*s12)
      *mt^2*mh^2*s13*s14 + 1/2*denom(1/2*s12)*mt^4*s24^2 + 1/2*denom(1/2*s12)*
      mt^4*s23*s24 - 1/2*denom(1/2*s12)*mt^4*s14^2 + 3*denom(1/2*s12)*mt^4*s13
      *s24 + 3/2*denom(1/2*s12)*mt^4*s13*s14 + denom(1/2*s12)*mt^4*s13^2 + 1/2
      *denom(1/2*s12)*mt^4*s12*s24 + 1/2*denom(1/2*s12)*mt^4*s12*s14 + 1/2*
      denom(1/2*s12)*mt^4*s12*s13 - 1/2*denom(1/2*s12)*mt^4*mh^2*s24 - 1/2*
      denom(1/2*s12)*mt^4*mh^2*s14 - 1/2*denom(1/2*s12)*mt^4*mh^2*s13 - denom(
      1/2*s12)*mt^6*s24 + denom(1/2*s12)*mt^6*s14 - 2*denom(1/2*s12)*mt^6*s13
       - 1/2*denom(1/2*s12)*mt^6*s12 + 1/2*denom(1/2*s12)*mt^6*mh^2 - 1/4*
      denom(1/4*s12^2)*s13*s14^2*s23*s24 + 1/4*denom(1/4*s12^2)*s13^2*s14*
      s24^2 + 1/4*denom(1/4*s12^2)*mt^2*s14^2*s23*s24 - 1/2*denom(1/4*s12^2)*
      mt^2*s13*s14*s24^2 + 1/2*denom(1/4*s12^2)*mt^2*s13*s14*s23*s24 + 1/4*
      denom(1/4*s12^2)*mt^2*s13*s14^2*s24 + 1/4*denom(1/4*s12^2)*mt^2*s13*
      s14^2*s23 - 1/4*denom(1/4*s12^2)*mt^2*s13^2*s24^2 - 1/2*denom(1/4*s12^2)
      *mt^2*s13^2*s14*s24 + 1/4*denom(1/4*s12^2)*mt^4*s14*s24^2 - 1/2*denom(1/
      4*s12^2)*mt^4*s14*s23*s24 - 1/4*denom(1/4*s12^2)*mt^4*s14^2*s24 - 1/4*
      denom(1/4*s12^2)*mt^4*s14^2*s23 + 1/2*denom(1/4*s12^2)*mt^4*s13*s24^2 - 
      1/4*denom(1/4*s12^2)*mt^4*s13*s23*s24 + 1/2*denom(1/4*s12^2)*mt^4*s13*
      s14*s24 - 1/2*denom(1/4*s12^2)*mt^4*s13*s14*s23 - 1/4*denom(1/4*s12^2)*
      mt^4*s13*s14^2 + 1/2*denom(1/4*s12^2)*mt^4*s13^2*s24 + 1/4*denom(1/4*
      s12^2)*mt^4*s13^2*s14 - 1/4*denom(1/4*s12^2)*mt^6*s24^2 + 1/4*denom(1/4*
      s12^2)*mt^6*s23*s24 + 1/2*denom(1/4*s12^2)*mt^6*s14*s23 + 1/4*denom(1/4*
      s12^2)*mt^6*s14^2 - 3/4*denom(1/4*s12^2)*mt^6*s13*s24 + 1/4*denom(1/4*
      s12^2)*mt^6*s13*s23 - 1/4*denom(1/4*s12^2)*mt^6*s13^2 + 1/4*denom(1/4*
      s12^2)*mt^8*s24 - 1/4*denom(1/4*s12^2)*mt^8*s23 - 1/4*denom(1/4*s12^2)*
      mt^8*s14 + 1/4*denom(1/4*s12^2)*mt^8*s13;
 
 .sort
id KMatrix(2,29) =   - mt^2*s23*s24 - mt^2*s23^2 - mt^2*s14*s23 - mt^2*s13*s23
       - mt^2*s12*s23 + mt^2*mh^2*s23 - mt^4*s24 + 3*mt^4*s23 + mt^4*s14 + 
      mt^4*s13 + mt^4*s12 - mt^4*mh^2 + 1/2*denom(1/2*s12)*s14*s23*s24^2 + 1/2
      *denom(1/2*s12)*s14*s23^2*s24 + 1/2*denom(1/2*s12)*s14^2*s23*s24 + 1/2*
      denom(1/2*s12)*s13*s14*s23*s24 + 1/2*denom(1/2*s12)*s12*s14*s23*s24 - 1/
      2*denom(1/2*s12)*mh^2*s14*s23*s24 - 1/2*denom(1/2*s12)*mt^2*s23*s24^2 - 
      1/2*denom(1/2*s12)*mt^2*s23^2*s24 + 1/2*denom(1/2*s12)*mt^2*s14*s24^2 - 
      5/2*denom(1/2*s12)*mt^2*s14*s23*s24 - denom(1/2*s12)*mt^2*s14*s23^2 - 1/
      2*denom(1/2*s12)*mt^2*s14^2*s24 - 1/2*denom(1/2*s12)*mt^2*s14^2*s23 - 1/
      2*denom(1/2*s12)*mt^2*s13*s14*s24 - 1/2*denom(1/2*s12)*mt^2*s13*s14*s23
       - 1/2*denom(1/2*s12)*mt^2*s12*s23*s24 - 1/2*denom(1/2*s12)*mt^2*s12*s14
      *s24 - 1/2*denom(1/2*s12)*mt^2*s12*s14*s23 + 1/2*denom(1/2*s12)*mt^2*
      mh^2*s23*s24 + 1/2*denom(1/2*s12)*mt^2*mh^2*s14*s24 + 1/2*denom(1/2*s12)
      *mt^2*mh^2*s14*s23 - 1/2*denom(1/2*s12)*mt^4*s24^2 + 3/2*denom(1/2*s12)*
      mt^4*s23*s24 + denom(1/2*s12)*mt^4*s23^2 + 3*denom(1/2*s12)*mt^4*s14*s23
       + 1/2*denom(1/2*s12)*mt^4*s14^2 + 1/2*denom(1/2*s12)*mt^4*s13*s14 + 1/2
      *denom(1/2*s12)*mt^4*s12*s24 + 1/2*denom(1/2*s12)*mt^4*s12*s23 + 1/2*
      denom(1/2*s12)*mt^4*s12*s14 - 1/2*denom(1/2*s12)*mt^4*mh^2*s24 - 1/2*
      denom(1/2*s12)*mt^4*mh^2*s23 - 1/2*denom(1/2*s12)*mt^4*mh^2*s14 + denom(
      1/2*s12)*mt^6*s24 - 2*denom(1/2*s12)*mt^6*s23 - denom(1/2*s12)*mt^6*s14
       - 1/2*denom(1/2*s12)*mt^6*s12 + 1/2*denom(1/2*s12)*mt^6*mh^2 + 1/4*
      denom(1/4*s12^2)*s14^2*s23^2*s24 - 1/4*denom(1/4*s12^2)*s13*s14*s23*
      s24^2 + 1/4*denom(1/4*s12^2)*mt^2*s14*s23*s24^2 - 1/2*denom(1/4*s12^2)*
      mt^2*s14*s23^2*s24 - 1/2*denom(1/4*s12^2)*mt^2*s14^2*s23*s24 - 1/4*
      denom(1/4*s12^2)*mt^2*s14^2*s23^2 + 1/4*denom(1/4*s12^2)*mt^2*s13*s23*
      s24^2 + 1/4*denom(1/4*s12^2)*mt^2*s13*s14*s24^2 + 1/2*denom(1/4*s12^2)*
      mt^2*s13*s14*s23*s24 - 1/4*denom(1/4*s12^2)*mt^4*s23*s24^2 + 1/4*denom(1/
      4*s12^2)*mt^4*s23^2*s24 - 1/4*denom(1/4*s12^2)*mt^4*s14*s24^2 + 1/2*
      denom(1/4*s12^2)*mt^4*s14*s23*s24 + 1/2*denom(1/4*s12^2)*mt^4*s14*s23^2
       + 1/4*denom(1/4*s12^2)*mt^4*s14^2*s24 + 1/2*denom(1/4*s12^2)*mt^4*s14^2
      *s23 - 1/4*denom(1/4*s12^2)*mt^4*s13*s24^2 - 1/2*denom(1/4*s12^2)*mt^4*
      s13*s23*s24 - 1/2*denom(1/4*s12^2)*mt^4*s13*s14*s24 - 1/4*denom(1/4*
      s12^2)*mt^4*s13*s14*s23 + 1/4*denom(1/4*s12^2)*mt^6*s24^2 - 1/4*denom(1/
      4*s12^2)*mt^6*s23^2 - 3/4*denom(1/4*s12^2)*mt^6*s14*s23 - 1/4*denom(1/4*
      s12^2)*mt^6*s14^2 + 1/2*denom(1/4*s12^2)*mt^6*s13*s24 + 1/4*denom(1/4*
      s12^2)*mt^6*s13*s23 + 1/4*denom(1/4*s12^2)*mt^6*s13*s14 - 1/4*denom(1/4*
      s12^2)*mt^8*s24 + 1/4*denom(1/4*s12^2)*mt^8*s23 + 1/4*denom(1/4*s12^2)*
      mt^8*s14 - 1/4*denom(1/4*s12^2)*mt^8*s13;
 
 .sort
id KMatrix(2,30) =  mt^2*s14*s24 + mt^2*s14*s23 + mt^2*s14^2 + mt^2*s13*s14 + 
      mt^2*s12*s14 - mt^2*mh^2*s14 - mt^4*s24 - mt^4*s23 - 3*mt^4*s14 + mt^4*
      s13 - mt^4*s12 + mt^4*mh^2 - 1/2*denom(1/2*s12)*s13*s14*s23*s24 - 1/2*
      denom(1/2*s12)*s13*s14*s23^2 - 1/2*denom(1/2*s12)*s13*s14^2*s23 - 1/2*
      denom(1/2*s12)*s13^2*s14*s23 - 1/2*denom(1/2*s12)*s12*s13*s14*s23 + 1/2*
      denom(1/2*s12)*mh^2*s13*s14*s23 + 1/2*denom(1/2*s12)*mt^2*s14*s23*s24 + 
      1/2*denom(1/2*s12)*mt^2*s14*s23^2 + denom(1/2*s12)*mt^2*s14^2*s23 + 1/2*
      denom(1/2*s12)*mt^2*s13*s23*s24 + 1/2*denom(1/2*s12)*mt^2*s13*s23^2 + 5/
      2*denom(1/2*s12)*mt^2*s13*s14*s23 + 1/2*denom(1/2*s12)*mt^2*s13*s14^2 - 
      1/2*denom(1/2*s12)*mt^2*s13^2*s23 + 1/2*denom(1/2*s12)*mt^2*s13^2*s14 + 
      1/2*denom(1/2*s12)*mt^2*s12*s14*s23 + 1/2*denom(1/2*s12)*mt^2*s12*s13*
      s23 + 1/2*denom(1/2*s12)*mt^2*s12*s13*s14 - 1/2*denom(1/2*s12)*mt^2*mh^2
      *s14*s23 - 1/2*denom(1/2*s12)*mt^2*mh^2*s13*s23 - 1/2*denom(1/2*s12)*
      mt^2*mh^2*s13*s14 - 1/2*denom(1/2*s12)*mt^4*s23*s24 - 1/2*denom(1/2*s12)
      *mt^4*s23^2 - 3*denom(1/2*s12)*mt^4*s14*s23 - denom(1/2*s12)*mt^4*s14^2
       - 3/2*denom(1/2*s12)*mt^4*s13*s14 + 1/2*denom(1/2*s12)*mt^4*s13^2 - 1/2
      *denom(1/2*s12)*mt^4*s12*s23 - 1/2*denom(1/2*s12)*mt^4*s12*s14 - 1/2*
      denom(1/2*s12)*mt^4*s12*s13 + 1/2*denom(1/2*s12)*mt^4*mh^2*s23 + 1/2*
      denom(1/2*s12)*mt^4*mh^2*s14 + 1/2*denom(1/2*s12)*mt^4*mh^2*s13 + denom(
      1/2*s12)*mt^6*s23 + 2*denom(1/2*s12)*mt^6*s14 - denom(1/2*s12)*mt^6*s13
       + 1/2*denom(1/2*s12)*mt^6*s12 - 1/2*denom(1/2*s12)*mt^6*mh^2 - 1/4*
      denom(1/4*s12^2)*s13*s14^2*s23^2 + 1/4*denom(1/4*s12^2)*s13^2*s14*s23*
      s24 + 1/4*denom(1/4*s12^2)*mt^2*s14^2*s23^2 - 1/2*denom(1/4*s12^2)*mt^2*
      s13*s14*s23*s24 + 1/2*denom(1/4*s12^2)*mt^2*s13*s14*s23^2 + 1/2*denom(1/
      4*s12^2)*mt^2*s13*s14^2*s23 - 1/4*denom(1/4*s12^2)*mt^2*s13^2*s23*s24 - 
      1/4*denom(1/4*s12^2)*mt^2*s13^2*s14*s24 - 1/4*denom(1/4*s12^2)*mt^2*
      s13^2*s14*s23 + 1/4*denom(1/4*s12^2)*mt^4*s14*s23*s24 - 1/2*denom(1/4*
      s12^2)*mt^4*s14*s23^2 - 1/2*denom(1/4*s12^2)*mt^4*s14^2*s23 + 1/2*denom(
      1/4*s12^2)*mt^4*s13*s23*s24 - 1/4*denom(1/4*s12^2)*mt^4*s13*s23^2 + 1/2*
      denom(1/4*s12^2)*mt^4*s13*s14*s24 - 1/2*denom(1/4*s12^2)*mt^4*s13*s14*
      s23 - 1/4*denom(1/4*s12^2)*mt^4*s13*s14^2 + 1/4*denom(1/4*s12^2)*mt^4*
      s13^2*s24 + 1/4*denom(1/4*s12^2)*mt^4*s13^2*s23 + 1/4*denom(1/4*s12^2)*
      mt^4*s13^2*s14 - 1/4*denom(1/4*s12^2)*mt^6*s23*s24 + 1/4*denom(1/4*s12^2
      )*mt^6*s23^2 - 1/4*denom(1/4*s12^2)*mt^6*s14*s24 + 3/4*denom(1/4*s12^2)*
      mt^6*s14*s23 + 1/4*denom(1/4*s12^2)*mt^6*s14^2 - 1/2*denom(1/4*s12^2)*
      mt^6*s13*s24 - 1/4*denom(1/4*s12^2)*mt^6*s13^2 + 1/4*denom(1/4*s12^2)*
      mt^8*s24 - 1/4*denom(1/4*s12^2)*mt^8*s23 - 1/4*denom(1/4*s12^2)*mt^8*s14
       + 1/4*denom(1/4*s12^2)*mt^8*s13;
 
 .sort
id KMatrix(2,31) =  mt^2*s24^2 + mt^2*s23*s24 + mt^2*s14*s24 + mt^2*s13*s24 + 
      mt^2*s12*s24 - mt^2*mh^2*s24 - 3*mt^4*s24 + mt^4*s23 - mt^4*s14 - mt^4*
      s13 - mt^4*s12 + mt^4*mh^2 - 1/2*denom(1/2*s12)*s13*s23*s24^2 - 1/2*
      denom(1/2*s12)*s13*s23^2*s24 - 1/2*denom(1/2*s12)*s13*s14*s23*s24 - 1/2*
      denom(1/2*s12)*s13^2*s23*s24 - 1/2*denom(1/2*s12)*s12*s13*s23*s24 + 1/2*
      denom(1/2*s12)*mh^2*s13*s23*s24 + 1/2*denom(1/2*s12)*mt^2*s23*s24^2 + 1/
      2*denom(1/2*s12)*mt^2*s23^2*s24 + denom(1/2*s12)*mt^2*s13*s24^2 + 5/2*
      denom(1/2*s12)*mt^2*s13*s23*s24 - 1/2*denom(1/2*s12)*mt^2*s13*s23^2 + 1/
      2*denom(1/2*s12)*mt^2*s13*s14*s24 + 1/2*denom(1/2*s12)*mt^2*s13*s14*s23
       + 1/2*denom(1/2*s12)*mt^2*s13^2*s24 + 1/2*denom(1/2*s12)*mt^2*s13^2*s23
       + 1/2*denom(1/2*s12)*mt^2*s12*s23*s24 + 1/2*denom(1/2*s12)*mt^2*s12*s13
      *s24 + 1/2*denom(1/2*s12)*mt^2*s12*s13*s23 - 1/2*denom(1/2*s12)*mt^2*
      mh^2*s23*s24 - 1/2*denom(1/2*s12)*mt^2*mh^2*s13*s24 - 1/2*denom(1/2*s12)
      *mt^2*mh^2*s13*s23 - denom(1/2*s12)*mt^4*s24^2 - 3/2*denom(1/2*s12)*mt^4
      *s23*s24 + 1/2*denom(1/2*s12)*mt^4*s23^2 - 3*denom(1/2*s12)*mt^4*s13*s24
       - 1/2*denom(1/2*s12)*mt^4*s13*s14 - 1/2*denom(1/2*s12)*mt^4*s13^2 - 1/2
      *denom(1/2*s12)*mt^4*s12*s24 - 1/2*denom(1/2*s12)*mt^4*s12*s23 - 1/2*
      denom(1/2*s12)*mt^4*s12*s13 + 1/2*denom(1/2*s12)*mt^4*mh^2*s24 + 1/2*
      denom(1/2*s12)*mt^4*mh^2*s23 + 1/2*denom(1/2*s12)*mt^4*mh^2*s13 + 2*
      denom(1/2*s12)*mt^6*s24 - denom(1/2*s12)*mt^6*s23 + denom(1/2*s12)*mt^6*
      s13 + 1/2*denom(1/2*s12)*mt^6*s12 - 1/2*denom(1/2*s12)*mt^6*mh^2 + 1/4*
      denom(1/4*s12^2)*s13*s14*s23^2*s24 - 1/4*denom(1/4*s12^2)*s13^2*s23*
      s24^2 - 1/4*denom(1/4*s12^2)*mt^2*s14*s23^2*s24 + 1/2*denom(1/4*s12^2)*
      mt^2*s13*s23*s24^2 - 1/4*denom(1/4*s12^2)*mt^2*s13*s23^2*s24 - 1/2*
      denom(1/4*s12^2)*mt^2*s13*s14*s23*s24 - 1/4*denom(1/4*s12^2)*mt^2*s13*
      s14*s23^2 + 1/4*denom(1/4*s12^2)*mt^2*s13^2*s24^2 + 1/2*denom(1/4*s12^2)
      *mt^2*s13^2*s23*s24 - 1/4*denom(1/4*s12^2)*mt^4*s23*s24^2 + 1/4*denom(1/
      4*s12^2)*mt^4*s23^2*s24 + 1/2*denom(1/4*s12^2)*mt^4*s14*s23*s24 + 1/4*
      denom(1/4*s12^2)*mt^4*s14*s23^2 - 1/2*denom(1/4*s12^2)*mt^4*s13*s24^2 - 
      1/2*denom(1/4*s12^2)*mt^4*s13*s23*s24 + 1/4*denom(1/4*s12^2)*mt^4*s13*
      s23^2 + 1/4*denom(1/4*s12^2)*mt^4*s13*s14*s24 + 1/2*denom(1/4*s12^2)*
      mt^4*s13*s14*s23 - 1/2*denom(1/4*s12^2)*mt^4*s13^2*s24 - 1/4*denom(1/4*
      s12^2)*mt^4*s13^2*s23 + 1/4*denom(1/4*s12^2)*mt^6*s24^2 - 1/4*denom(1/4*
      s12^2)*mt^6*s23^2 - 1/4*denom(1/4*s12^2)*mt^6*s14*s24 - 1/2*denom(1/4*
      s12^2)*mt^6*s14*s23 + 3/4*denom(1/4*s12^2)*mt^6*s13*s24 - 1/4*denom(1/4*
      s12^2)*mt^6*s13*s14 + 1/4*denom(1/4*s12^2)*mt^6*s13^2 - 1/4*denom(1/4*
      s12^2)*mt^8*s24 + 1/4*denom(1/4*s12^2)*mt^8*s23 + 1/4*denom(1/4*s12^2)*
      mt^8*s14 - 1/4*denom(1/4*s12^2)*mt^8*s13;
 
 .sort
id KMatrix(2,32) =   - 1/2*s14*s24^2 - s14*s23*s24 - 1/2*s14*s23^2 - s14^2*s24
       - s14^2*s23 - 1/2*s14^3 - s13*s14*s24 - s13*s14*s23 - s13*s14^2 - 1/2*
      s13^2*s14 - s12*s14*s24 - s12*s14*s23 - s12*s14^2 - s12*s13*s14 - 1/2*
      s12^2*s14 + mh^2*s14*s24 + mh^2*s14*s23 + mh^2*s14^2 + mh^2*s13*s14 + 
      mh^2*s12*s14 - 1/2*mh^4*s14 + 1/2*mt^2*s24^2 + mt^2*s23*s24 + 1/2*mt^2*
      s23^2 + 3*mt^2*s14*s24 + 3*mt^2*s14*s23 + 5/2*mt^2*s14^2 + 2*mt^2*s13*
      s14 - 1/2*mt^2*s13^2 + mt^2*s12*s24 + mt^2*s12*s23 + 3*mt^2*s12*s14 + 1/
      2*mt^2*s12^2 - mt^2*mh^2*s24 - mt^2*mh^2*s23 - 3*mt^2*mh^2*s14 - mt^2*
      mh^2*s12 + 1/2*mt^2*mh^4 - mt^4*s24 - mt^4*s23 - 3*mt^4*s14 + mt^4*s13
       - mt^4*s12 + mt^4*mh^2 - 1/2*denom(1/2*s12)*s14^2*s23*s24 - 1/2*denom(1/
      2*s12)*s14^2*s23^2 - 1/2*denom(1/2*s12)*s14^3*s23 - 1/2*denom(1/2*s12)*
      s13*s14^2*s23 - 1/2*denom(1/2*s12)*s12*s14^2*s23 + 1/2*denom(1/2*s12)*
      mh^2*s14^2*s23 + denom(1/2*s12)*mt^2*s14*s23*s24 + denom(1/2*s12)*mt^2*
      s14*s23^2 + 1/2*denom(1/2*s12)*mt^2*s14^2*s24 + 5/2*denom(1/2*s12)*mt^2*
      s14^2*s23 + 1/2*denom(1/2*s12)*mt^2*s14^3 + 1/2*denom(1/2*s12)*mt^2*s13*
      s14*s23 + 1/2*denom(1/2*s12)*mt^2*s13*s14^2 - 1/2*denom(1/2*s12)*mt^2*
      s13^2*s24 + denom(1/2*s12)*mt^2*s12*s14*s23 + 1/2*denom(1/2*s12)*mt^2*
      s12*s14^2 - denom(1/2*s12)*mt^2*mh^2*s14*s23 - 1/2*denom(1/2*s12)*mt^2*
      mh^2*s14^2 - 1/2*denom(1/2*s12)*mt^4*s23*s24 - 1/2*denom(1/2*s12)*mt^4*
      s23^2 - denom(1/2*s12)*mt^4*s14*s24 - 3*denom(1/2*s12)*mt^4*s14*s23 - 2*
      denom(1/2*s12)*mt^4*s14^2 + denom(1/2*s12)*mt^4*s13*s24 - 1/2*denom(1/2*
      s12)*mt^4*s13*s14 + 1/2*denom(1/2*s12)*mt^4*s13^2 - 1/2*denom(1/2*s12)*
      mt^4*s12*s23 - denom(1/2*s12)*mt^4*s12*s14 + 1/2*denom(1/2*s12)*mt^4*
      mh^2*s23 + denom(1/2*s12)*mt^4*mh^2*s14 + denom(1/2*s12)*mt^6*s23 + 2*
      denom(1/2*s12)*mt^6*s14 - denom(1/2*s12)*mt^6*s13 + 1/2*denom(1/2*s12)*
      mt^6*s12 - 1/2*denom(1/2*s12)*mt^6*mh^2 - 1/8*denom(1/4*s12^2)*s14^3*
      s23^2 + 1/8*denom(1/4*s12^2)*s13^2*s14*s24^2 + 3/8*denom(1/4*s12^2)*mt^2
      *s14^2*s23^2 + 1/4*denom(1/4*s12^2)*mt^2*s14^3*s23 - 1/4*denom(1/4*s12^2
      )*mt^2*s13*s14*s24^2 - 1/8*denom(1/4*s12^2)*mt^2*s13^2*s24^2 - 1/4*
      denom(1/4*s12^2)*mt^2*s13^2*s14*s24 + 1/8*denom(1/4*s12^2)*mt^4*s14*
      s24^2 - 3/8*denom(1/4*s12^2)*mt^4*s14*s23^2 - 3/4*denom(1/4*s12^2)*mt^4*
      s14^2*s23 - 1/8*denom(1/4*s12^2)*mt^4*s14^3 + 1/4*denom(1/4*s12^2)*mt^4*
      s13*s24^2 + 1/2*denom(1/4*s12^2)*mt^4*s13*s14*s24 + 1/4*denom(1/4*s12^2)
      *mt^4*s13^2*s24 + 1/8*denom(1/4*s12^2)*mt^4*s13^2*s14 - 1/8*denom(1/4*
      s12^2)*mt^6*s24^2 + 1/8*denom(1/4*s12^2)*mt^6*s23^2 - 1/4*denom(1/4*
      s12^2)*mt^6*s14*s24 + 3/4*denom(1/4*s12^2)*mt^6*s14*s23 + 3/8*denom(1/4*
      s12^2)*mt^6*s14^2 - 1/2*denom(1/4*s12^2)*mt^6*s13*s24 - 1/4*denom(1/4*
      s12^2)*mt^6*s13*s14 - 1/8*denom(1/4*s12^2)*mt^6*s13^2 + 1/4*denom(1/4*
      s12^2)*mt^8*s24 - 1/4*denom(1/4*s12^2)*mt^8*s23 - 1/4*denom(1/4*s12^2)*
      mt^8*s14 + 1/4*denom(1/4*s12^2)*mt^8*s13;
 
 .sort
id KMatrix(2,33) =   - 1/2*s24^3 - s23*s24^2 - 1/2*s23^2*s24 - s14*s24^2 - s14
      *s23*s24 - 1/2*s14^2*s24 - s13*s24^2 - s13*s23*s24 - s13*s14*s24 - 1/2*
      s13^2*s24 - s12*s24^2 - s12*s23*s24 - s12*s14*s24 - s12*s13*s24 - 1/2*
      s12^2*s24 + mh^2*s24^2 + mh^2*s23*s24 + mh^2*s14*s24 + mh^2*s13*s24 + 
      mh^2*s12*s24 - 1/2*mh^4*s24 + 5/2*mt^2*s24^2 + 2*mt^2*s23*s24 - 1/2*mt^2
      *s23^2 + 3*mt^2*s14*s24 + 1/2*mt^2*s14^2 + 3*mt^2*s13*s24 + mt^2*s13*s14
       + 1/2*mt^2*s13^2 + 3*mt^2*s12*s24 + mt^2*s12*s14 + mt^2*s12*s13 + 1/2*
      mt^2*s12^2 - 3*mt^2*mh^2*s24 - mt^2*mh^2*s14 - mt^2*mh^2*s13 - mt^2*mh^2
      *s12 + 1/2*mt^2*mh^4 - 3*mt^4*s24 + mt^4*s23 - mt^4*s14 - mt^4*s13 - 
      mt^4*s12 + mt^4*mh^2 - 1/2*denom(1/2*s12)*s13*s24^3 - 1/2*denom(1/2*s12)
      *s13*s23*s24^2 - 1/2*denom(1/2*s12)*s13*s14*s24^2 - 1/2*denom(1/2*s12)*
      s13^2*s24^2 - 1/2*denom(1/2*s12)*s12*s13*s24^2 + 1/2*denom(1/2*s12)*mh^2
      *s13*s24^2 + 1/2*denom(1/2*s12)*mt^2*s24^3 + 1/2*denom(1/2*s12)*mt^2*s23
      *s24^2 + 1/2*denom(1/2*s12)*mt^2*s14*s24^2 - 1/2*denom(1/2*s12)*mt^2*s14
      *s23^2 + 5/2*denom(1/2*s12)*mt^2*s13*s24^2 + 1/2*denom(1/2*s12)*mt^2*s13
      *s23*s24 + denom(1/2*s12)*mt^2*s13*s14*s24 + denom(1/2*s12)*mt^2*s13^2*
      s24 + 1/2*denom(1/2*s12)*mt^2*s12*s24^2 + denom(1/2*s12)*mt^2*s12*s13*
      s24 - 1/2*denom(1/2*s12)*mt^2*mh^2*s24^2 - denom(1/2*s12)*mt^2*mh^2*s13*
      s24 - 2*denom(1/2*s12)*mt^4*s24^2 - 1/2*denom(1/2*s12)*mt^4*s23*s24 + 1/
      2*denom(1/2*s12)*mt^4*s23^2 - denom(1/2*s12)*mt^4*s14*s24 + denom(1/2*
      s12)*mt^4*s14*s23 - 3*denom(1/2*s12)*mt^4*s13*s24 - 1/2*denom(1/2*s12)*
      mt^4*s13*s14 - 1/2*denom(1/2*s12)*mt^4*s13^2 - denom(1/2*s12)*mt^4*s12*
      s24 - 1/2*denom(1/2*s12)*mt^4*s12*s13 + denom(1/2*s12)*mt^4*mh^2*s24 + 1/
      2*denom(1/2*s12)*mt^4*mh^2*s13 + 2*denom(1/2*s12)*mt^6*s24 - denom(1/2*
      s12)*mt^6*s23 + denom(1/2*s12)*mt^6*s13 + 1/2*denom(1/2*s12)*mt^6*s12 - 
      1/2*denom(1/2*s12)*mt^6*mh^2 + 1/8*denom(1/4*s12^2)*s14^2*s23^2*s24 - 1/
      8*denom(1/4*s12^2)*s13^2*s24^3 - 1/4*denom(1/4*s12^2)*mt^2*s14*s23^2*s24
       - 1/4*denom(1/4*s12^2)*mt^2*s14^2*s23*s24 - 1/8*denom(1/4*s12^2)*mt^2*
      s14^2*s23^2 + 1/4*denom(1/4*s12^2)*mt^2*s13*s24^3 + 3/8*denom(1/4*s12^2)
      *mt^2*s13^2*s24^2 - 1/8*denom(1/4*s12^2)*mt^4*s24^3 + 1/8*denom(1/4*
      s12^2)*mt^4*s23^2*s24 + 1/2*denom(1/4*s12^2)*mt^4*s14*s23*s24 + 1/4*
      denom(1/4*s12^2)*mt^4*s14*s23^2 + 1/8*denom(1/4*s12^2)*mt^4*s14^2*s24 + 
      1/4*denom(1/4*s12^2)*mt^4*s14^2*s23 - 3/4*denom(1/4*s12^2)*mt^4*s13*
      s24^2 - 3/8*denom(1/4*s12^2)*mt^4*s13^2*s24 + 3/8*denom(1/4*s12^2)*mt^6*
      s24^2 - 1/4*denom(1/4*s12^2)*mt^6*s23*s24 - 1/8*denom(1/4*s12^2)*mt^6*
      s23^2 - 1/4*denom(1/4*s12^2)*mt^6*s14*s24 - 1/2*denom(1/4*s12^2)*mt^6*
      s14*s23 - 1/8*denom(1/4*s12^2)*mt^6*s14^2 + 3/4*denom(1/4*s12^2)*mt^6*
      s13*s24 + 1/8*denom(1/4*s12^2)*mt^6*s13^2 - 1/4*denom(1/4*s12^2)*mt^8*
      s24 + 1/4*denom(1/4*s12^2)*mt^8*s23 + 1/4*denom(1/4*s12^2)*mt^8*s14 - 1/
      4*denom(1/4*s12^2)*mt^8*s13;
 
 .sort
id KMatrix(2,34) =   - mt*s14*s24 - mt*s14*s23 - mt*s14^2 + mt*s13*s24 + mt*
      s13*s23 + mt*s13^2 - mt*s12*s14 + mt*s12*s13 + mt*mh^2*s14 - mt*mh^2*s13
       + 2*mt^3*s14 - 2*mt^3*s13 - denom(1/2*s12)*mt*s14^2*s23 - denom(1/2*s12
      )*mt*s13*s14*s24 + denom(1/2*s12)*mt*s13*s14*s23 + denom(1/2*s12)*mt*
      s13^2*s24 + denom(1/2*s12)*mt^3*s14*s24 + denom(1/2*s12)*mt^3*s14*s23 + 
      denom(1/2*s12)*mt^3*s14^2 - denom(1/2*s12)*mt^3*s13*s24 - denom(1/2*s12)
      *mt^3*s13*s23 - denom(1/2*s12)*mt^3*s13^2 - 2*denom(1/2*s12)*mt^5*s14 + 
      2*denom(1/2*s12)*mt^5*s13 + 1/4*denom(1/4*s12^2)*mt*s12*s14^2*s23 + 1/4*
      denom(1/4*s12^2)*mt*s12*s13*s14*s24 - 1/4*denom(1/4*s12^2)*mt*s12*s13*
      s14*s23 - 1/4*denom(1/4*s12^2)*mt*s12*s13^2*s24 - 1/4*denom(1/4*s12^2)*
      mt^3*s12*s14*s24 - 1/4*denom(1/4*s12^2)*mt^3*s12*s14*s23 - 1/4*denom(1/4
      *s12^2)*mt^3*s12*s14^2 + 1/4*denom(1/4*s12^2)*mt^3*s12*s13*s24 + 1/4*
      denom(1/4*s12^2)*mt^3*s12*s13*s23 + 1/4*denom(1/4*s12^2)*mt^3*s12*s13^2
       + 1/2*denom(1/4*s12^2)*mt^5*s12*s14 - 1/2*denom(1/4*s12^2)*mt^5*s12*s13
      ;
 
 .sort
id KMatrix(2,35) =   - mt*s24^2 + mt*s23^2 - mt*s14*s24 + mt*s14*s23 - mt*s13*
      s24 + mt*s13*s23 - mt*s12*s24 + mt*s12*s23 + mt*mh^2*s24 - mt*mh^2*s23
       + 2*mt^3*s24 - 2*mt^3*s23 - denom(1/2*s12)*mt*s14*s23*s24 + denom(1/2*
      s12)*mt*s14*s23^2 - denom(1/2*s12)*mt*s13*s24^2 + denom(1/2*s12)*mt*s13*
      s23*s24 + denom(1/2*s12)*mt^3*s24^2 - denom(1/2*s12)*mt^3*s23^2 + denom(
      1/2*s12)*mt^3*s14*s24 - denom(1/2*s12)*mt^3*s14*s23 + denom(1/2*s12)*
      mt^3*s13*s24 - denom(1/2*s12)*mt^3*s13*s23 - 2*denom(1/2*s12)*mt^5*s24
       + 2*denom(1/2*s12)*mt^5*s23 + 1/4*denom(1/4*s12^2)*mt*s12*s14*s23*s24
       - 1/4*denom(1/4*s12^2)*mt*s12*s14*s23^2 + 1/4*denom(1/4*s12^2)*mt*s12*
      s13*s24^2 - 1/4*denom(1/4*s12^2)*mt*s12*s13*s23*s24 - 1/4*denom(1/4*
      s12^2)*mt^3*s12*s24^2 + 1/4*denom(1/4*s12^2)*mt^3*s12*s23^2 - 1/4*denom(
      1/4*s12^2)*mt^3*s12*s14*s24 + 1/4*denom(1/4*s12^2)*mt^3*s12*s14*s23 - 1/
      4*denom(1/4*s12^2)*mt^3*s12*s13*s24 + 1/4*denom(1/4*s12^2)*mt^3*s12*s13*
      s23 + 1/2*denom(1/4*s12^2)*mt^5*s12*s24 - 1/2*denom(1/4*s12^2)*mt^5*s12*
      s23;
 
 .sort
id KMatrix(2,36) =   - 1/2*s14*s23*s24 - 1/2*s14*s23^2 - 1/2*s14^2*s23 + 1/2*
      s13*s24^2 + 1/2*s13*s23*s24 + 1/2*s13*s14*s24 - 1/2*s13*s14*s23 + 1/2*
      s13^2*s24 + s12*s24^2 + 2*s12*s23*s24 + s12*s23^2 + 2*s12*s14*s24 + 3/2*
      s12*s14*s23 + s12*s14^2 + 5/2*s12*s13*s24 + 2*s12*s13*s23 + 2*s12*s13*
      s14 + s12*s13^2 + 2*s12^2*s24 + 2*s12^2*s23 + 2*s12^2*s14 + 2*s12^2*s13
       + s12^3 + 1/2*mh^2*s14*s23 - 1/2*mh^2*s13*s24 - 2*mh^2*s12*s24 - 2*mh^2
      *s12*s23 - 2*mh^2*s12*s14 - 2*mh^2*s12*s13 - 2*mh^2*s12^2 + mh^4*s12 - 1/
      2*mt^2*s24^2 + 1/2*mt^2*s23^2 + 2*mt^2*s14*s23 + 1/2*mt^2*s14^2 - 2*mt^2
      *s13*s24 - 1/2*mt^2*s13^2 - 7/2*mt^2*s12*s24 - 5/2*mt^2*s12*s23 - 5/2*
      mt^2*s12*s14 - 7/2*mt^2*s12*s13 - 3*mt^2*s12^2 + 1/2*mt^2*mh^2*s24 - 1/2
      *mt^2*mh^2*s23 - 1/2*mt^2*mh^2*s14 + 1/2*mt^2*mh^2*s13 + 3*mt^2*mh^2*s12
       + mt^4*s24 - mt^4*s23 - mt^4*s14 + mt^4*s13 - 1/2*denom(1/2*s12)*s14^2*
      s23^2 + 1/2*denom(1/2*s12)*s13^2*s24^2 + denom(1/2*s12)*s12*s14*s23*s24
       + denom(1/2*s12)*s12*s14*s23^2 + denom(1/2*s12)*s12*s14^2*s23 + denom(1/
      2*s12)*s12*s13*s24^2 + denom(1/2*s12)*s12*s13*s23*s24 + denom(1/2*s12)*
      s12*s13*s14*s24 + denom(1/2*s12)*s12*s13*s14*s23 + denom(1/2*s12)*s12*
      s13^2*s24 + denom(1/2*s12)*s12^2*s14*s23 + denom(1/2*s12)*s12^2*s13*s24
       - denom(1/2*s12)*mh^2*s12*s14*s23 - denom(1/2*s12)*mh^2*s12*s13*s24 + 
      denom(1/2*s12)*mt^2*s14*s23^2 + denom(1/2*s12)*mt^2*s14^2*s23 - denom(1/
      2*s12)*mt^2*s13*s24^2 - denom(1/2*s12)*mt^2*s13^2*s24 - denom(1/2*s12)*
      mt^2*s12*s24^2 - 2*denom(1/2*s12)*mt^2*s12*s23*s24 - denom(1/2*s12)*mt^2
      *s12*s23^2 - denom(1/2*s12)*mt^2*s12*s14*s24 - 3*denom(1/2*s12)*mt^2*s12
      *s14*s23 - denom(1/2*s12)*mt^2*s12*s14^2 - 3*denom(1/2*s12)*mt^2*s12*s13
      *s24 - denom(1/2*s12)*mt^2*s12*s13*s23 - 2*denom(1/2*s12)*mt^2*s12*s13*
      s14 - denom(1/2*s12)*mt^2*s12*s13^2 - denom(1/2*s12)*mt^2*s12^2*s24 - 
      denom(1/2*s12)*mt^2*s12^2*s23 - denom(1/2*s12)*mt^2*s12^2*s14 - denom(1/
      2*s12)*mt^2*s12^2*s13 + denom(1/2*s12)*mt^2*mh^2*s12*s24 + denom(1/2*s12
      )*mt^2*mh^2*s12*s23 + denom(1/2*s12)*mt^2*mh^2*s12*s14 + denom(1/2*s12)*
      mt^2*mh^2*s12*s13 + 1/2*denom(1/2*s12)*mt^4*s24^2 - 1/2*denom(1/2*s12)*
      mt^4*s23^2 - 2*denom(1/2*s12)*mt^4*s14*s23 - 1/2*denom(1/2*s12)*mt^4*
      s14^2 + 2*denom(1/2*s12)*mt^4*s13*s24 + 1/2*denom(1/2*s12)*mt^4*s13^2 + 
      2*denom(1/2*s12)*mt^4*s12*s24 + 2*denom(1/2*s12)*mt^4*s12*s23 + 2*denom(
      1/2*s12)*mt^4*s12*s14 + 2*denom(1/2*s12)*mt^4*s12*s13 + 2*denom(1/2*s12)
      *mt^4*s12^2 - 2*denom(1/2*s12)*mt^4*mh^2*s12 - denom(1/2*s12)*mt^6*s24
       + denom(1/2*s12)*mt^6*s23 + denom(1/2*s12)*mt^6*s14 - denom(1/2*s12)*
      mt^6*s13 + 1/4*denom(1/4*s12^2)*s12*s14^2*s23^2 - 1/4*denom(1/4*s12^2)*
      s12*s13*s14*s23*s24 - 1/8*denom(1/4*s12^2)*s12^2*s14*s23*s24 - 1/8*
      denom(1/4*s12^2)*s12^2*s14*s23^2 - 1/8*denom(1/4*s12^2)*s12^2*s14^2*s23
       - 1/8*denom(1/4*s12^2)*s12^2*s13*s24^2 - 1/8*denom(1/4*s12^2)*s12^2*s13
      *s23*s24 - 1/8*denom(1/4*s12^2)*s12^2*s13*s14*s24 - 1/8*denom(1/4*s12^2)
      *s12^2*s13*s14*s23 - 1/8*denom(1/4*s12^2)*s12^2*s13^2*s24 - 1/8*denom(1/
      4*s12^2)*s12^3*s14*s23 - 1/8*denom(1/4*s12^2)*s12^3*s13*s24 + 1/8*denom(
      1/4*s12^2)*mh^2*s12^2*s14*s23 + 1/8*denom(1/4*s12^2)*mh^2*s12^2*s13*s24
       + 1/4*denom(1/4*s12^2)*mt^2*s12*s14*s23*s24 - 1/2*denom(1/4*s12^2)*mt^2
      *s12*s14*s23^2 - 1/2*denom(1/4*s12^2)*mt^2*s12*s14^2*s23 + 1/4*denom(1/4
      *s12^2)*mt^2*s12*s13*s23*s24 + 1/4*denom(1/4*s12^2)*mt^2*s12*s13*s14*s24
       + 1/4*denom(1/4*s12^2)*mt^2*s12*s13*s14*s23 + 1/8*denom(1/4*s12^2)*mt^2
      *s12^2*s24^2 + 1/4*denom(1/4*s12^2)*mt^2*s12^2*s23*s24 + 1/8*denom(1/4*
      s12^2)*mt^2*s12^2*s23^2 + 1/4*denom(1/4*s12^2)*mt^2*s12^2*s14*s24 + 1/4*
      denom(1/4*s12^2)*mt^2*s12^2*s14*s23 + 1/8*denom(1/4*s12^2)*mt^2*s12^2*
      s14^2 + 1/4*denom(1/4*s12^2)*mt^2*s12^2*s13*s24 + 1/4*denom(1/4*s12^2)*
      mt^2*s12^2*s13*s23 + 1/4*denom(1/4*s12^2)*mt^2*s12^2*s13*s14 + 1/8*
      denom(1/4*s12^2)*mt^2*s12^2*s13^2 + 1/8*denom(1/4*s12^2)*mt^2*s12^3*s24
       + 1/8*denom(1/4*s12^2)*mt^2*s12^3*s23 + 1/8*denom(1/4*s12^2)*mt^2*s12^3
      *s14 + 1/8*denom(1/4*s12^2)*mt^2*s12^3*s13 - 1/8*denom(1/4*s12^2)*mt^2*
      mh^2*s12^2*s24 - 1/8*denom(1/4*s12^2)*mt^2*mh^2*s12^2*s23 - 1/8*denom(1/
      4*s12^2)*mt^2*mh^2*s12^2*s14 - 1/8*denom(1/4*s12^2)*mt^2*mh^2*s12^2*s13
       - 1/4*denom(1/4*s12^2)*mt^4*s12*s23*s24 + 1/4*denom(1/4*s12^2)*mt^4*s12
      *s23^2 - 1/4*denom(1/4*s12^2)*mt^4*s12*s14*s24 + 3/4*denom(1/4*s12^2)*
      mt^4*s12*s14*s23 + 1/4*denom(1/4*s12^2)*mt^4*s12*s14^2 - 1/4*denom(1/4*
      s12^2)*mt^4*s12*s13*s24 - 1/4*denom(1/4*s12^2)*mt^4*s12*s13*s23 - 1/4*
      denom(1/4*s12^2)*mt^4*s12*s13*s14 - 1/4*denom(1/4*s12^2)*mt^4*s12^2*s24
       - 1/4*denom(1/4*s12^2)*mt^4*s12^2*s23 - 1/4*denom(1/4*s12^2)*mt^4*s12^2
      *s14 - 1/4*denom(1/4*s12^2)*mt^4*s12^2*s13 - 1/4*denom(1/4*s12^2)*mt^4*
      s12^3 + 1/4*denom(1/4*s12^2)*mt^4*mh^2*s12^2 + 1/4*denom(1/4*s12^2)*mt^6
      *s12*s24 - 1/4*denom(1/4*s12^2)*mt^6*s12*s23 - 1/4*denom(1/4*s12^2)*mt^6
      *s12*s14 + 1/4*denom(1/4*s12^2)*mt^6*s12*s13;
 
 .sort
id KMatrix(3,1) =  mt^2*s24^2 + 2*mt^2*s23*s24 + mt^2*s23^2 + 2*mt^2*s14*s24
       + 2*mt^2*s14*s23 + mt^2*s14^2 + 2*mt^2*s13*s24 + 2*mt^2*s13*s23 + 2*
      mt^2*s13*s14 + mt^2*s13^2 + 2*mt^2*s12*s24 + 2*mt^2*s12*s23 + 2*mt^2*s12
      *s14 + 2*mt^2*s12*s13 + mt^2*s12^2 - 2*mt^2*mh^2*s24 - 2*mt^2*mh^2*s23
       - 2*mt^2*mh^2*s14 - 2*mt^2*mh^2*s13 - 2*mt^2*mh^2*s12 + mt^2*mh^4 - 2*
      mt^4*s24 - 2*mt^4*s23 - 2*mt^4*s14 - 2*mt^4*s13 - 2*mt^4*s12 + 2*mt^4*
      mh^2 - 1/2*denom(1/2*s12)*s13*s23*s24^2 - denom(1/2*s12)*s13*s23^2*s24
       - 1/2*denom(1/2*s12)*s13*s23^3 - denom(1/2*s12)*s13*s14*s23*s24 - 
      denom(1/2*s12)*s13*s14*s23^2 - 1/2*denom(1/2*s12)*s13*s14^2*s23 - denom(
      1/2*s12)*s13^2*s23*s24 - denom(1/2*s12)*s13^2*s23^2 - denom(1/2*s12)*
      s13^2*s14*s23 - 1/2*denom(1/2*s12)*s13^3*s23 - denom(1/2*s12)*s12*s13*
      s23*s24 - denom(1/2*s12)*s12*s13*s23^2 - denom(1/2*s12)*s12*s13*s14*s23
       - denom(1/2*s12)*s12*s13^2*s23 - 1/2*denom(1/2*s12)*s12^2*s13*s23 + 
      denom(1/2*s12)*mh^2*s13*s23*s24 + denom(1/2*s12)*mh^2*s13*s23^2 + denom(
      1/2*s12)*mh^2*s13*s14*s23 + denom(1/2*s12)*mh^2*s13^2*s23 + denom(1/2*
      s12)*mh^2*s12*s13*s23 - 1/2*denom(1/2*s12)*mh^4*s13*s23 + 1/2*denom(1/2*
      s12)*mt^2*s23*s24^2 + denom(1/2*s12)*mt^2*s23^2*s24 + 1/2*denom(1/2*s12)
      *mt^2*s23^3 + 3/2*denom(1/2*s12)*mt^2*s14*s23*s24 + 3/2*denom(1/2*s12)*
      mt^2*s14*s23^2 + denom(1/2*s12)*mt^2*s14^2*s23 + denom(1/2*s12)*mt^2*s13
      *s24^2 + 7/2*denom(1/2*s12)*mt^2*s13*s23*s24 + 5/2*denom(1/2*s12)*mt^2*
      s13*s23^2 + 3/2*denom(1/2*s12)*mt^2*s13*s14*s24 + 7/2*denom(1/2*s12)*
      mt^2*s13*s14*s23 + 1/2*denom(1/2*s12)*mt^2*s13*s14^2 + 3/2*denom(1/2*s12
      )*mt^2*s13^2*s24 + 5/2*denom(1/2*s12)*mt^2*s13^2*s23 + denom(1/2*s12)*
      mt^2*s13^2*s14 + 1/2*denom(1/2*s12)*mt^2*s13^3 + denom(1/2*s12)*mt^2*s12
      *s23*s24 + denom(1/2*s12)*mt^2*s12*s23^2 + 3/2*denom(1/2*s12)*mt^2*s12*
      s14*s23 + 3/2*denom(1/2*s12)*mt^2*s12*s13*s24 + 3*denom(1/2*s12)*mt^2*
      s12*s13*s23 + denom(1/2*s12)*mt^2*s12*s13*s14 + denom(1/2*s12)*mt^2*s12*
      s13^2 + 1/2*denom(1/2*s12)*mt^2*s12^2*s23 + 1/2*denom(1/2*s12)*mt^2*
      s12^2*s13 - denom(1/2*s12)*mt^2*mh^2*s23*s24 - denom(1/2*s12)*mt^2*mh^2*
      s23^2 - 3/2*denom(1/2*s12)*mt^2*mh^2*s14*s23 - 3/2*denom(1/2*s12)*mt^2*
      mh^2*s13*s24 - 3*denom(1/2*s12)*mt^2*mh^2*s13*s23 - denom(1/2*s12)*mt^2*
      mh^2*s13*s14 - denom(1/2*s12)*mt^2*mh^2*s13^2 - denom(1/2*s12)*mt^2*mh^2
      *s12*s23 - denom(1/2*s12)*mt^2*mh^2*s12*s13 + 1/2*denom(1/2*s12)*mt^2*
      mh^4*s23 + 1/2*denom(1/2*s12)*mt^2*mh^4*s13 - denom(1/2*s12)*mt^4*s24^2
       - 3*denom(1/2*s12)*mt^4*s23*s24 - 2*denom(1/2*s12)*mt^4*s23^2 - 2*
      denom(1/2*s12)*mt^4*s14*s24 - 3*denom(1/2*s12)*mt^4*s14*s23 - denom(1/2*
      s12)*mt^4*s14^2 - 3*denom(1/2*s12)*mt^4*s13*s24 - 4*denom(1/2*s12)*mt^4*
      s13*s23 - 3*denom(1/2*s12)*mt^4*s13*s14 - 2*denom(1/2*s12)*mt^4*s13^2 - 
      3/2*denom(1/2*s12)*mt^4*s12*s24 - 5/2*denom(1/2*s12)*mt^4*s12*s23 - 3/2*
      denom(1/2*s12)*mt^4*s12*s14 - 5/2*denom(1/2*s12)*mt^4*s12*s13 - 1/2*
      denom(1/2*s12)*mt^4*s12^2 + 3/2*denom(1/2*s12)*mt^4*mh^2*s24 + 5/2*
      denom(1/2*s12)*mt^4*mh^2*s23 + 3/2*denom(1/2*s12)*mt^4*mh^2*s14 + 5/2*
      denom(1/2*s12)*mt^4*mh^2*s13 + denom(1/2*s12)*mt^4*mh^2*s12 - 1/2*denom(
      1/2*s12)*mt^4*mh^4 + 2*denom(1/2*s12)*mt^6*s24 + 2*denom(1/2*s12)*mt^6*
      s23 + 2*denom(1/2*s12)*mt^6*s14 + 2*denom(1/2*s12)*mt^6*s13 + 2*denom(1/
      2*s12)*mt^6*s12 - 2*denom(1/2*s12)*mt^6*mh^2 - 1/4*denom(1/4*s12^2)*s13*
      s14*s23^2*s24 - 1/4*denom(1/4*s12^2)*s13*s14*s23^3 - 1/4*denom(1/4*s12^2
      )*s13*s14^2*s23^2 - 1/4*denom(1/4*s12^2)*s13^2*s23*s24^2 - 1/4*denom(1/4
      *s12^2)*s13^2*s23^2*s24 - 1/4*denom(1/4*s12^2)*s13^2*s14*s23*s24 - 1/4*
      denom(1/4*s12^2)*s13^2*s14*s23^2 - 1/4*denom(1/4*s12^2)*s13^3*s23*s24 - 
      1/4*denom(1/4*s12^2)*s12*s13*s14*s23^2 - 1/4*denom(1/4*s12^2)*s12*s13^2*
      s23*s24 + 1/4*denom(1/4*s12^2)*mh^2*s13*s14*s23^2 + 1/4*denom(1/4*s12^2)
      *mh^2*s13^2*s23*s24 + 1/4*denom(1/4*s12^2)*mt^2*s14*s23^2*s24 + 1/4*
      denom(1/4*s12^2)*mt^2*s14*s23^3 + 1/4*denom(1/4*s12^2)*mt^2*s14^2*s23^2
       + 1/2*denom(1/4*s12^2)*mt^2*s13*s23*s24^2 + 3/4*denom(1/4*s12^2)*mt^2*
      s13*s23^2*s24 + 1/4*denom(1/4*s12^2)*mt^2*s13*s23^3 + denom(1/4*s12^2)*
      mt^2*s13*s14*s23*s24 + denom(1/4*s12^2)*mt^2*s13*s14*s23^2 + 1/2*denom(1/
      4*s12^2)*mt^2*s13*s14^2*s23 + 1/4*denom(1/4*s12^2)*mt^2*s13^2*s24^2 + 
      denom(1/4*s12^2)*mt^2*s13^2*s23*s24 + 1/2*denom(1/4*s12^2)*mt^2*s13^2*
      s23^2 + 1/4*denom(1/4*s12^2)*mt^2*s13^2*s14*s24 + 3/4*denom(1/4*s12^2)*
      mt^2*s13^2*s14*s23 + 1/4*denom(1/4*s12^2)*mt^2*s13^3*s24 + 1/4*denom(1/4
      *s12^2)*mt^2*s13^3*s23 + 1/4*denom(1/4*s12^2)*mt^2*s12*s14*s23^2 + 1/2*
      denom(1/4*s12^2)*mt^2*s12*s13*s23*s24 + 1/4*denom(1/4*s12^2)*mt^2*s12*
      s13*s23^2 + 1/2*denom(1/4*s12^2)*mt^2*s12*s13*s14*s23 + 1/4*denom(1/4*
      s12^2)*mt^2*s12*s13^2*s24 + 1/4*denom(1/4*s12^2)*mt^2*s12*s13^2*s23 - 1/
      4*denom(1/4*s12^2)*mt^2*mh^2*s14*s23^2 - 1/2*denom(1/4*s12^2)*mt^2*mh^2*
      s13*s23*s24 - 1/4*denom(1/4*s12^2)*mt^2*mh^2*s13*s23^2 - 1/2*denom(1/4*
      s12^2)*mt^2*mh^2*s13*s14*s23 - 1/4*denom(1/4*s12^2)*mt^2*mh^2*s13^2*s24
       - 1/4*denom(1/4*s12^2)*mt^2*mh^2*s13^2*s23 - 1/4*denom(1/4*s12^2)*mt^4*
      s23*s24^2 - 1/2*denom(1/4*s12^2)*mt^4*s23^2*s24 - 1/4*denom(1/4*s12^2)*
      mt^4*s23^3 - 3/4*denom(1/4*s12^2)*mt^4*s14*s23*s24 - 3/4*denom(1/4*s12^2
      )*mt^4*s14*s23^2 - 1/2*denom(1/4*s12^2)*mt^4*s14^2*s23 - 1/2*denom(1/4*
      s12^2)*mt^4*s13*s24^2 - 7/4*denom(1/4*s12^2)*mt^4*s13*s23*s24 - 5/4*
      denom(1/4*s12^2)*mt^4*s13*s23^2 - 3/4*denom(1/4*s12^2)*mt^4*s13*s14*s24
       - 7/4*denom(1/4*s12^2)*mt^4*s13*s14*s23 - 1/4*denom(1/4*s12^2)*mt^4*s13
      *s14^2 - 3/4*denom(1/4*s12^2)*mt^4*s13^2*s24 - 5/4*denom(1/4*s12^2)*mt^4
      *s13^2*s23 - 1/2*denom(1/4*s12^2)*mt^4*s13^2*s14 - 1/4*denom(1/4*s12^2)*
      mt^4*s13^3 - 1/4*denom(1/4*s12^2)*mt^4*s12*s23*s24 - 1/4*denom(1/4*s12^2
      )*mt^4*s12*s23^2 - 1/2*denom(1/4*s12^2)*mt^4*s12*s14*s23 - 1/2*denom(1/4
      *s12^2)*mt^4*s12*s13*s24 - denom(1/4*s12^2)*mt^4*s12*s13*s23 - 1/4*
      denom(1/4*s12^2)*mt^4*s12*s13*s14 - 1/4*denom(1/4*s12^2)*mt^4*s12*s13^2
       + 1/4*denom(1/4*s12^2)*mt^4*mh^2*s23*s24 + 1/4*denom(1/4*s12^2)*mt^4*
      mh^2*s23^2 + 1/2*denom(1/4*s12^2)*mt^4*mh^2*s14*s23 + 1/2*denom(1/4*
      s12^2)*mt^4*mh^2*s13*s24 + denom(1/4*s12^2)*mt^4*mh^2*s13*s23 + 1/4*
      denom(1/4*s12^2)*mt^4*mh^2*s13*s14 + 1/4*denom(1/4*s12^2)*mt^4*mh^2*
      s13^2 + 1/4*denom(1/4*s12^2)*mt^6*s24^2 + denom(1/4*s12^2)*mt^6*s23*s24
       + 3/4*denom(1/4*s12^2)*mt^6*s23^2 + 1/2*denom(1/4*s12^2)*mt^6*s14*s24
       + denom(1/4*s12^2)*mt^6*s14*s23 + 1/4*denom(1/4*s12^2)*mt^6*s14^2 + 
      denom(1/4*s12^2)*mt^6*s13*s24 + 3/2*denom(1/4*s12^2)*mt^6*s13*s23 + 
      denom(1/4*s12^2)*mt^6*s13*s14 + 3/4*denom(1/4*s12^2)*mt^6*s13^2 + 1/4*
      denom(1/4*s12^2)*mt^6*s12*s24 + 3/4*denom(1/4*s12^2)*mt^6*s12*s23 + 1/4*
      denom(1/4*s12^2)*mt^6*s12*s14 + 3/4*denom(1/4*s12^2)*mt^6*s12*s13 - 1/4*
      denom(1/4*s12^2)*mt^6*mh^2*s24 - 3/4*denom(1/4*s12^2)*mt^6*mh^2*s23 - 1/
      4*denom(1/4*s12^2)*mt^6*mh^2*s14 - 3/4*denom(1/4*s12^2)*mt^6*mh^2*s13 - 
      1/2*denom(1/4*s12^2)*mt^8*s24 - 1/2*denom(1/4*s12^2)*mt^8*s23 - 1/2*
      denom(1/4*s12^2)*mt^8*s14 - 1/2*denom(1/4*s12^2)*mt^8*s13 - 1/2*denom(1/
      4*s12^2)*mt^8*s12 + 1/2*denom(1/4*s12^2)*mt^8*mh^2;
 
 .sort
id KMatrix(3,2) =   - 1/2*s24^3 - 3/2*s23*s24^2 - 3/2*s23^2*s24 - 1/2*s23^3 - 
      3/2*s14*s24^2 - 3*s14*s23*s24 - 3/2*s14*s23^2 - 3/2*s14^2*s24 - 3/2*
      s14^2*s23 - 1/2*s14^3 - 3/2*s13*s24^2 - 3*s13*s23*s24 - 3/2*s13*s23^2 - 
      3*s13*s14*s24 - 3*s13*s14*s23 - 3/2*s13*s14^2 - 3/2*s13^2*s24 - 3/2*
      s13^2*s23 - 3/2*s13^2*s14 - 1/2*s13^3 - 3/2*s12*s24^2 - 3*s12*s23*s24 - 
      3/2*s12*s23^2 - 3*s12*s14*s24 - 3*s12*s14*s23 - 3/2*s12*s14^2 - 3*s12*
      s13*s24 - 3*s12*s13*s23 - 3*s12*s13*s14 - 3/2*s12*s13^2 - 3/2*s12^2*s24
       - 3/2*s12^2*s23 - 3/2*s12^2*s14 - 3/2*s12^2*s13 - 1/2*s12^3 + 3/2*mh^2*
      s24^2 + 3*mh^2*s23*s24 + 3/2*mh^2*s23^2 + 3*mh^2*s14*s24 + 3*mh^2*s14*
      s23 + 3/2*mh^2*s14^2 + 3*mh^2*s13*s24 + 3*mh^2*s13*s23 + 3*mh^2*s13*s14
       + 3/2*mh^2*s13^2 + 3*mh^2*s12*s24 + 3*mh^2*s12*s23 + 3*mh^2*s12*s14 + 3
      *mh^2*s12*s13 + 3/2*mh^2*s12^2 - 3/2*mh^4*s24 - 3/2*mh^4*s23 - 3/2*mh^4*
      s14 - 3/2*mh^4*s13 - 3/2*mh^4*s12 + 1/2*mh^6 + 2*mt^2*s24^2 + 4*mt^2*s23
      *s24 + 2*mt^2*s23^2 + 4*mt^2*s14*s24 + 4*mt^2*s14*s23 + 2*mt^2*s14^2 + 4
      *mt^2*s13*s24 + 4*mt^2*s13*s23 + 4*mt^2*s13*s14 + 2*mt^2*s13^2 + 4*mt^2*
      s12*s24 + 4*mt^2*s12*s23 + 4*mt^2*s12*s14 + 4*mt^2*s12*s13 + 2*mt^2*
      s12^2 - 4*mt^2*mh^2*s24 - 4*mt^2*mh^2*s23 - 4*mt^2*mh^2*s14 - 4*mt^2*
      mh^2*s13 - 4*mt^2*mh^2*s12 + 2*mt^2*mh^4 - 2*mt^4*s24 - 2*mt^4*s23 - 2*
      mt^4*s14 - 2*mt^4*s13 - 2*mt^4*s12 + 2*mt^4*mh^2 - 1/2*denom(1/2*s12)*
      s14*s23*s24^2 - denom(1/2*s12)*s14*s23^2*s24 - 1/2*denom(1/2*s12)*s14*
      s23^3 - denom(1/2*s12)*s14^2*s23*s24 - denom(1/2*s12)*s14^2*s23^2 - 1/2*
      denom(1/2*s12)*s14^3*s23 - 1/2*denom(1/2*s12)*s13*s24^3 - denom(1/2*s12)
      *s13*s23*s24^2 - 1/2*denom(1/2*s12)*s13*s23^2*s24 - denom(1/2*s12)*s13*
      s14*s24^2 - 2*denom(1/2*s12)*s13*s14*s23*s24 - denom(1/2*s12)*s13*s14*
      s23^2 - 1/2*denom(1/2*s12)*s13*s14^2*s24 - denom(1/2*s12)*s13*s14^2*s23
       - denom(1/2*s12)*s13^2*s24^2 - denom(1/2*s12)*s13^2*s23*s24 - denom(1/2
      *s12)*s13^2*s14*s24 - 1/2*denom(1/2*s12)*s13^2*s14*s23 - 1/2*denom(1/2*
      s12)*s13^3*s24 - denom(1/2*s12)*s12*s14*s23*s24 - denom(1/2*s12)*s12*s14
      *s23^2 - denom(1/2*s12)*s12*s14^2*s23 - denom(1/2*s12)*s12*s13*s24^2 - 
      denom(1/2*s12)*s12*s13*s23*s24 - denom(1/2*s12)*s12*s13*s14*s24 - denom(
      1/2*s12)*s12*s13*s14*s23 - denom(1/2*s12)*s12*s13^2*s24 - 1/2*denom(1/2*
      s12)*s12^2*s14*s23 - 1/2*denom(1/2*s12)*s12^2*s13*s24 + denom(1/2*s12)*
      mh^2*s14*s23*s24 + denom(1/2*s12)*mh^2*s14*s23^2 + denom(1/2*s12)*mh^2*
      s14^2*s23 + denom(1/2*s12)*mh^2*s13*s24^2 + denom(1/2*s12)*mh^2*s13*s23*
      s24 + denom(1/2*s12)*mh^2*s13*s14*s24 + denom(1/2*s12)*mh^2*s13*s14*s23
       + denom(1/2*s12)*mh^2*s13^2*s24 + denom(1/2*s12)*mh^2*s12*s14*s23 + 
      denom(1/2*s12)*mh^2*s12*s13*s24 - 1/2*denom(1/2*s12)*mh^4*s14*s23 - 1/2*
      denom(1/2*s12)*mh^4*s13*s24 + 1/2*denom(1/2*s12)*mt^2*s24^3 + 3/2*denom(
      1/2*s12)*mt^2*s23*s24^2 + 3/2*denom(1/2*s12)*mt^2*s23^2*s24 + 1/2*denom(
      1/2*s12)*mt^2*s23^3 + 3/2*denom(1/2*s12)*mt^2*s14*s24^2 + 4*denom(1/2*
      s12)*mt^2*s14*s23*s24 + 5/2*denom(1/2*s12)*mt^2*s14*s23^2 + 3/2*denom(1/
      2*s12)*mt^2*s14^2*s24 + 5/2*denom(1/2*s12)*mt^2*s14^2*s23 + 1/2*denom(1/
      2*s12)*mt^2*s14^3 + 5/2*denom(1/2*s12)*mt^2*s13*s24^2 + 4*denom(1/2*s12)
      *mt^2*s13*s23*s24 + 3/2*denom(1/2*s12)*mt^2*s13*s23^2 + 4*denom(1/2*s12)
      *mt^2*s13*s14*s24 + 4*denom(1/2*s12)*mt^2*s13*s14*s23 + 3/2*denom(1/2*
      s12)*mt^2*s13*s14^2 + 5/2*denom(1/2*s12)*mt^2*s13^2*s24 + 3/2*denom(1/2*
      s12)*mt^2*s13^2*s23 + 3/2*denom(1/2*s12)*mt^2*s13^2*s14 + 1/2*denom(1/2*
      s12)*mt^2*s13^3 + denom(1/2*s12)*mt^2*s12*s24^2 + 2*denom(1/2*s12)*mt^2*
      s12*s23*s24 + denom(1/2*s12)*mt^2*s12*s23^2 + 2*denom(1/2*s12)*mt^2*s12*
      s14*s24 + 3*denom(1/2*s12)*mt^2*s12*s14*s23 + denom(1/2*s12)*mt^2*s12*
      s14^2 + 3*denom(1/2*s12)*mt^2*s12*s13*s24 + 2*denom(1/2*s12)*mt^2*s12*
      s13*s23 + 2*denom(1/2*s12)*mt^2*s12*s13*s14 + denom(1/2*s12)*mt^2*s12*
      s13^2 + 1/2*denom(1/2*s12)*mt^2*s12^2*s24 + 1/2*denom(1/2*s12)*mt^2*
      s12^2*s23 + 1/2*denom(1/2*s12)*mt^2*s12^2*s14 + 1/2*denom(1/2*s12)*mt^2*
      s12^2*s13 - denom(1/2*s12)*mt^2*mh^2*s24^2 - 2*denom(1/2*s12)*mt^2*mh^2*
      s23*s24 - denom(1/2*s12)*mt^2*mh^2*s23^2 - 2*denom(1/2*s12)*mt^2*mh^2*
      s14*s24 - 3*denom(1/2*s12)*mt^2*mh^2*s14*s23 - denom(1/2*s12)*mt^2*mh^2*
      s14^2 - 3*denom(1/2*s12)*mt^2*mh^2*s13*s24 - 2*denom(1/2*s12)*mt^2*mh^2*
      s13*s23 - 2*denom(1/2*s12)*mt^2*mh^2*s13*s14 - denom(1/2*s12)*mt^2*mh^2*
      s13^2 - denom(1/2*s12)*mt^2*mh^2*s12*s24 - denom(1/2*s12)*mt^2*mh^2*s12*
      s23 - denom(1/2*s12)*mt^2*mh^2*s12*s14 - denom(1/2*s12)*mt^2*mh^2*s12*
      s13 + 1/2*denom(1/2*s12)*mt^2*mh^4*s24 + 1/2*denom(1/2*s12)*mt^2*mh^4*
      s23 + 1/2*denom(1/2*s12)*mt^2*mh^4*s14 + 1/2*denom(1/2*s12)*mt^2*mh^4*
      s13 - 2*denom(1/2*s12)*mt^4*s24^2 - 4*denom(1/2*s12)*mt^4*s23*s24 - 2*
      denom(1/2*s12)*mt^4*s23^2 - 4*denom(1/2*s12)*mt^4*s14*s24 - 4*denom(1/2*
      s12)*mt^4*s14*s23 - 2*denom(1/2*s12)*mt^4*s14^2 - 4*denom(1/2*s12)*mt^4*
      s13*s24 - 4*denom(1/2*s12)*mt^4*s13*s23 - 4*denom(1/2*s12)*mt^4*s13*s14
       - 2*denom(1/2*s12)*mt^4*s13^2 - 3*denom(1/2*s12)*mt^4*s12*s24 - 3*
      denom(1/2*s12)*mt^4*s12*s23 - 3*denom(1/2*s12)*mt^4*s12*s14 - 3*denom(1/
      2*s12)*mt^4*s12*s13 - denom(1/2*s12)*mt^4*s12^2 + 3*denom(1/2*s12)*mt^4*
      mh^2*s24 + 3*denom(1/2*s12)*mt^4*mh^2*s23 + 3*denom(1/2*s12)*mt^4*mh^2*
      s14 + 3*denom(1/2*s12)*mt^4*mh^2*s13 + 2*denom(1/2*s12)*mt^4*mh^2*s12 - 
      denom(1/2*s12)*mt^4*mh^4 + 2*denom(1/2*s12)*mt^6*s24 + 2*denom(1/2*s12)*
      mt^6*s23 + 2*denom(1/2*s12)*mt^6*s14 + 2*denom(1/2*s12)*mt^6*s13 + 2*
      denom(1/2*s12)*mt^6*s12 - 2*denom(1/2*s12)*mt^6*mh^2 - 1/8*denom(1/4*
      s12^2)*s14^2*s23^2*s24 - 1/8*denom(1/4*s12^2)*s14^2*s23^3 - 1/8*denom(1/
      4*s12^2)*s14^3*s23^2 - 1/4*denom(1/4*s12^2)*s13*s14*s23*s24^2 - 1/4*
      denom(1/4*s12^2)*s13*s14*s23^2*s24 - 1/4*denom(1/4*s12^2)*s13*s14^2*s23*
      s24 - 1/8*denom(1/4*s12^2)*s13*s14^2*s23^2 - 1/8*denom(1/4*s12^2)*s13^2*
      s24^3 - 1/8*denom(1/4*s12^2)*s13^2*s23*s24^2 - 1/8*denom(1/4*s12^2)*
      s13^2*s14*s24^2 - 1/4*denom(1/4*s12^2)*s13^2*s14*s23*s24 - 1/8*denom(1/4
      *s12^2)*s13^3*s24^2 - 1/8*denom(1/4*s12^2)*s12*s14^2*s23^2 - 1/4*denom(1/
      4*s12^2)*s12*s13*s14*s23*s24 - 1/8*denom(1/4*s12^2)*s12*s13^2*s24^2 + 1/
      8*denom(1/4*s12^2)*mh^2*s14^2*s23^2 + 1/4*denom(1/4*s12^2)*mh^2*s13*s14*
      s23*s24 + 1/8*denom(1/4*s12^2)*mh^2*s13^2*s24^2 + 1/4*denom(1/4*s12^2)*
      mt^2*s14*s23*s24^2 + 1/2*denom(1/4*s12^2)*mt^2*s14*s23^2*s24 + 1/4*
      denom(1/4*s12^2)*mt^2*s14*s23^3 + 1/2*denom(1/4*s12^2)*mt^2*s14^2*s23*
      s24 + 1/2*denom(1/4*s12^2)*mt^2*s14^2*s23^2 + 1/4*denom(1/4*s12^2)*mt^2*
      s14^3*s23 + 1/4*denom(1/4*s12^2)*mt^2*s13*s24^3 + 1/2*denom(1/4*s12^2)*
      mt^2*s13*s23*s24^2 + 1/4*denom(1/4*s12^2)*mt^2*s13*s23^2*s24 + 1/2*
      denom(1/4*s12^2)*mt^2*s13*s14*s24^2 + denom(1/4*s12^2)*mt^2*s13*s14*s23*
      s24 + 1/2*denom(1/4*s12^2)*mt^2*s13*s14*s23^2 + 1/4*denom(1/4*s12^2)*
      mt^2*s13*s14^2*s24 + 1/2*denom(1/4*s12^2)*mt^2*s13*s14^2*s23 + 1/2*
      denom(1/4*s12^2)*mt^2*s13^2*s24^2 + 1/2*denom(1/4*s12^2)*mt^2*s13^2*s23*
      s24 + 1/2*denom(1/4*s12^2)*mt^2*s13^2*s14*s24 + 1/4*denom(1/4*s12^2)*
      mt^2*s13^2*s14*s23 + 1/4*denom(1/4*s12^2)*mt^2*s13^3*s24 + 1/4*denom(1/4
      *s12^2)*mt^2*s12*s14*s23*s24 + 1/4*denom(1/4*s12^2)*mt^2*s12*s14*s23^2
       + 1/4*denom(1/4*s12^2)*mt^2*s12*s14^2*s23 + 1/4*denom(1/4*s12^2)*mt^2*
      s12*s13*s24^2 + 1/4*denom(1/4*s12^2)*mt^2*s12*s13*s23*s24 + 1/4*denom(1/
      4*s12^2)*mt^2*s12*s13*s14*s24 + 1/4*denom(1/4*s12^2)*mt^2*s12*s13*s14*
      s23 + 1/4*denom(1/4*s12^2)*mt^2*s12*s13^2*s24 - 1/4*denom(1/4*s12^2)*
      mt^2*mh^2*s14*s23*s24 - 1/4*denom(1/4*s12^2)*mt^2*mh^2*s14*s23^2 - 1/4*
      denom(1/4*s12^2)*mt^2*mh^2*s14^2*s23 - 1/4*denom(1/4*s12^2)*mt^2*mh^2*
      s13*s24^2 - 1/4*denom(1/4*s12^2)*mt^2*mh^2*s13*s23*s24 - 1/4*denom(1/4*
      s12^2)*mt^2*mh^2*s13*s14*s24 - 1/4*denom(1/4*s12^2)*mt^2*mh^2*s13*s14*
      s23 - 1/4*denom(1/4*s12^2)*mt^2*mh^2*s13^2*s24 - 1/8*denom(1/4*s12^2)*
      mt^4*s24^3 - 3/8*denom(1/4*s12^2)*mt^4*s23*s24^2 - 3/8*denom(1/4*s12^2)*
      mt^4*s23^2*s24 - 1/8*denom(1/4*s12^2)*mt^4*s23^3 - 3/8*denom(1/4*s12^2)*
      mt^4*s14*s24^2 - 5/4*denom(1/4*s12^2)*mt^4*s14*s23*s24 - 7/8*denom(1/4*
      s12^2)*mt^4*s14*s23^2 - 3/8*denom(1/4*s12^2)*mt^4*s14^2*s24 - 7/8*denom(
      1/4*s12^2)*mt^4*s14^2*s23 - 1/8*denom(1/4*s12^2)*mt^4*s14^3 - 7/8*denom(
      1/4*s12^2)*mt^4*s13*s24^2 - 5/4*denom(1/4*s12^2)*mt^4*s13*s23*s24 - 3/8*
      denom(1/4*s12^2)*mt^4*s13*s23^2 - 5/4*denom(1/4*s12^2)*mt^4*s13*s14*s24
       - 5/4*denom(1/4*s12^2)*mt^4*s13*s14*s23 - 3/8*denom(1/4*s12^2)*mt^4*s13
      *s14^2 - 7/8*denom(1/4*s12^2)*mt^4*s13^2*s24 - 3/8*denom(1/4*s12^2)*mt^4
      *s13^2*s23 - 3/8*denom(1/4*s12^2)*mt^4*s13^2*s14 - 1/8*denom(1/4*s12^2)*
      mt^4*s13^3 - 1/8*denom(1/4*s12^2)*mt^4*s12*s24^2 - 1/4*denom(1/4*s12^2)*
      mt^4*s12*s23*s24 - 1/8*denom(1/4*s12^2)*mt^4*s12*s23^2 - 1/4*denom(1/4*
      s12^2)*mt^4*s12*s14*s24 - 3/4*denom(1/4*s12^2)*mt^4*s12*s14*s23 - 1/8*
      denom(1/4*s12^2)*mt^4*s12*s14^2 - 3/4*denom(1/4*s12^2)*mt^4*s12*s13*s24
       - 1/4*denom(1/4*s12^2)*mt^4*s12*s13*s23 - 1/4*denom(1/4*s12^2)*mt^4*s12
      *s13*s14 - 1/8*denom(1/4*s12^2)*mt^4*s12*s13^2 + 1/8*denom(1/4*s12^2)*
      mt^4*mh^2*s24^2 + 1/4*denom(1/4*s12^2)*mt^4*mh^2*s23*s24 + 1/8*denom(1/4
      *s12^2)*mt^4*mh^2*s23^2 + 1/4*denom(1/4*s12^2)*mt^4*mh^2*s14*s24 + 3/4*
      denom(1/4*s12^2)*mt^4*mh^2*s14*s23 + 1/8*denom(1/4*s12^2)*mt^4*mh^2*
      s14^2 + 3/4*denom(1/4*s12^2)*mt^4*mh^2*s13*s24 + 1/4*denom(1/4*s12^2)*
      mt^4*mh^2*s13*s23 + 1/4*denom(1/4*s12^2)*mt^4*mh^2*s13*s14 + 1/8*denom(1/
      4*s12^2)*mt^4*mh^2*s13^2 + 1/2*denom(1/4*s12^2)*mt^6*s24^2 + denom(1/4*
      s12^2)*mt^6*s23*s24 + 1/2*denom(1/4*s12^2)*mt^6*s23^2 + denom(1/4*s12^2)
      *mt^6*s14*s24 + denom(1/4*s12^2)*mt^6*s14*s23 + 1/2*denom(1/4*s12^2)*
      mt^6*s14^2 + denom(1/4*s12^2)*mt^6*s13*s24 + denom(1/4*s12^2)*mt^6*s13*
      s23 + denom(1/4*s12^2)*mt^6*s13*s14 + 1/2*denom(1/4*s12^2)*mt^6*s13^2 + 
      1/2*denom(1/4*s12^2)*mt^6*s12*s24 + 1/2*denom(1/4*s12^2)*mt^6*s12*s23 + 
      1/2*denom(1/4*s12^2)*mt^6*s12*s14 + 1/2*denom(1/4*s12^2)*mt^6*s12*s13 - 
      1/2*denom(1/4*s12^2)*mt^6*mh^2*s24 - 1/2*denom(1/4*s12^2)*mt^6*mh^2*s23
       - 1/2*denom(1/4*s12^2)*mt^6*mh^2*s14 - 1/2*denom(1/4*s12^2)*mt^6*mh^2*
      s13 - 1/2*denom(1/4*s12^2)*mt^8*s24 - 1/2*denom(1/4*s12^2)*mt^8*s23 - 1/
      2*denom(1/4*s12^2)*mt^8*s14 - 1/2*denom(1/4*s12^2)*mt^8*s13 - 1/2*denom(
      1/4*s12^2)*mt^8*s12 + 1/2*denom(1/4*s12^2)*mt^8*mh^2;
 
 .sort
id KMatrix(3,3) =   - 2*mt^4*s24 - 2*mt^4*s23 - 2*mt^4*s14 - 2*mt^4*s13 - 2*
      mt^4*s12 + 2*mt^4*mh^2 + denom(1/2*s12)*mt^2*s14*s24^2 + denom(1/2*s12)*
      mt^2*s14*s23*s24 + denom(1/2*s12)*mt^2*s14^2*s24 + denom(1/2*s12)*mt^2*
      s13*s23*s24 + denom(1/2*s12)*mt^2*s13*s23^2 + denom(1/2*s12)*mt^2*s13*
      s14*s24 + denom(1/2*s12)*mt^2*s13*s14*s23 + denom(1/2*s12)*mt^2*s13^2*
      s23 + denom(1/2*s12)*mt^2*s12*s14*s24 + denom(1/2*s12)*mt^2*s12*s13*s23
       - denom(1/2*s12)*mt^2*mh^2*s14*s24 - denom(1/2*s12)*mt^2*mh^2*s13*s23
       - denom(1/2*s12)*mt^4*s24^2 - 2*denom(1/2*s12)*mt^4*s23*s24 - denom(1/2
      *s12)*mt^4*s23^2 - 2*denom(1/2*s12)*mt^4*s14*s24 - 2*denom(1/2*s12)*mt^4
      *s14*s23 - denom(1/2*s12)*mt^4*s14^2 - 2*denom(1/2*s12)*mt^4*s13*s24 - 2
      *denom(1/2*s12)*mt^4*s13*s23 - 2*denom(1/2*s12)*mt^4*s13*s14 - denom(1/2
      *s12)*mt^4*s13^2 - denom(1/2*s12)*mt^4*s12*s24 - denom(1/2*s12)*mt^4*s12
      *s23 - denom(1/2*s12)*mt^4*s12*s14 - denom(1/2*s12)*mt^4*s12*s13 + 
      denom(1/2*s12)*mt^4*mh^2*s24 + denom(1/2*s12)*mt^4*mh^2*s23 + denom(1/2*
      s12)*mt^4*mh^2*s14 + denom(1/2*s12)*mt^4*mh^2*s13 + 2*denom(1/2*s12)*
      mt^6*s24 + 2*denom(1/2*s12)*mt^6*s23 + 2*denom(1/2*s12)*mt^6*s14 + 2*
      denom(1/2*s12)*mt^6*s13 + 2*denom(1/2*s12)*mt^6*s12 - 2*denom(1/2*s12)*
      mt^6*mh^2 - 1/2*denom(1/4*s12^2)*s13*s14*s23*s24^2 - 1/2*denom(1/4*s12^2
      )*s13*s14*s23^2*s24 - 1/2*denom(1/4*s12^2)*s13*s14^2*s23*s24 - 1/2*
      denom(1/4*s12^2)*s13^2*s14*s23*s24 - 1/2*denom(1/4*s12^2)*s12*s13*s14*
      s23*s24 + 1/2*denom(1/4*s12^2)*mh^2*s13*s14*s23*s24 + 1/2*denom(1/4*
      s12^2)*mt^2*s14*s23*s24^2 + 1/2*denom(1/4*s12^2)*mt^2*s14*s23^2*s24 + 1/
      2*denom(1/4*s12^2)*mt^2*s14^2*s23*s24 + 1/2*denom(1/4*s12^2)*mt^2*s13*
      s23*s24^2 + 1/2*denom(1/4*s12^2)*mt^2*s13*s23^2*s24 + 1/2*denom(1/4*
      s12^2)*mt^2*s13*s14*s24^2 + 2*denom(1/4*s12^2)*mt^2*s13*s14*s23*s24 + 1/
      2*denom(1/4*s12^2)*mt^2*s13*s14*s23^2 + 1/2*denom(1/4*s12^2)*mt^2*s13*
      s14^2*s24 + 1/2*denom(1/4*s12^2)*mt^2*s13*s14^2*s23 + 1/2*denom(1/4*
      s12^2)*mt^2*s13^2*s23*s24 + 1/2*denom(1/4*s12^2)*mt^2*s13^2*s14*s24 + 1/
      2*denom(1/4*s12^2)*mt^2*s13^2*s14*s23 + 1/2*denom(1/4*s12^2)*mt^2*s12*
      s14*s23*s24 + 1/2*denom(1/4*s12^2)*mt^2*s12*s13*s23*s24 + 1/2*denom(1/4*
      s12^2)*mt^2*s12*s13*s14*s24 + 1/2*denom(1/4*s12^2)*mt^2*s12*s13*s14*s23
       - 1/2*denom(1/4*s12^2)*mt^2*mh^2*s14*s23*s24 - 1/2*denom(1/4*s12^2)*
      mt^2*mh^2*s13*s23*s24 - 1/2*denom(1/4*s12^2)*mt^2*mh^2*s13*s14*s24 - 1/2
      *denom(1/4*s12^2)*mt^2*mh^2*s13*s14*s23 - 1/2*denom(1/4*s12^2)*mt^4*s23*
      s24^2 - 1/2*denom(1/4*s12^2)*mt^4*s23^2*s24 - 1/2*denom(1/4*s12^2)*mt^4*
      s14*s24^2 - 3/2*denom(1/4*s12^2)*mt^4*s14*s23*s24 - 1/2*denom(1/4*s12^2)
      *mt^4*s14*s23^2 - 1/2*denom(1/4*s12^2)*mt^4*s14^2*s24 - 1/2*denom(1/4*
      s12^2)*mt^4*s14^2*s23 - 1/2*denom(1/4*s12^2)*mt^4*s13*s24^2 - 3/2*denom(
      1/4*s12^2)*mt^4*s13*s23*s24 - 1/2*denom(1/4*s12^2)*mt^4*s13*s23^2 - 3/2*
      denom(1/4*s12^2)*mt^4*s13*s14*s24 - 3/2*denom(1/4*s12^2)*mt^4*s13*s14*
      s23 - 1/2*denom(1/4*s12^2)*mt^4*s13*s14^2 - 1/2*denom(1/4*s12^2)*mt^4*
      s13^2*s24 - 1/2*denom(1/4*s12^2)*mt^4*s13^2*s23 - 1/2*denom(1/4*s12^2)*
      mt^4*s13^2*s14 - 1/2*denom(1/4*s12^2)*mt^4*s12*s23*s24 - 1/2*denom(1/4*
      s12^2)*mt^4*s12*s14*s24 - 1/2*denom(1/4*s12^2)*mt^4*s12*s14*s23 - 1/2*
      denom(1/4*s12^2)*mt^4*s12*s13*s24 - 1/2*denom(1/4*s12^2)*mt^4*s12*s13*
      s23 - 1/2*denom(1/4*s12^2)*mt^4*s12*s13*s14 + 1/2*denom(1/4*s12^2)*mt^4*
      mh^2*s23*s24 + 1/2*denom(1/4*s12^2)*mt^4*mh^2*s14*s24 + 1/2*denom(1/4*
      s12^2)*mt^4*mh^2*s14*s23 + 1/2*denom(1/4*s12^2)*mt^4*mh^2*s13*s24 + 1/2*
      denom(1/4*s12^2)*mt^4*mh^2*s13*s23 + 1/2*denom(1/4*s12^2)*mt^4*mh^2*s13*
      s14 + 1/2*denom(1/4*s12^2)*mt^6*s24^2 + denom(1/4*s12^2)*mt^6*s23*s24 + 
      1/2*denom(1/4*s12^2)*mt^6*s23^2 + denom(1/4*s12^2)*mt^6*s14*s24 + denom(
      1/4*s12^2)*mt^6*s14*s23 + 1/2*denom(1/4*s12^2)*mt^6*s14^2 + denom(1/4*
      s12^2)*mt^6*s13*s24 + denom(1/4*s12^2)*mt^6*s13*s23 + denom(1/4*s12^2)*
      mt^6*s13*s14 + 1/2*denom(1/4*s12^2)*mt^6*s13^2 + 1/2*denom(1/4*s12^2)*
      mt^6*s12*s24 + 1/2*denom(1/4*s12^2)*mt^6*s12*s23 + 1/2*denom(1/4*s12^2)*
      mt^6*s12*s14 + 1/2*denom(1/4*s12^2)*mt^6*s12*s13 - 1/2*denom(1/4*s12^2)*
      mt^6*mh^2*s24 - 1/2*denom(1/4*s12^2)*mt^6*mh^2*s23 - 1/2*denom(1/4*s12^2
      )*mt^6*mh^2*s14 - 1/2*denom(1/4*s12^2)*mt^6*mh^2*s13 - 1/2*denom(1/4*
      s12^2)*mt^8*s24 - 1/2*denom(1/4*s12^2)*mt^8*s23 - 1/2*denom(1/4*s12^2)*
      mt^8*s14 - 1/2*denom(1/4*s12^2)*mt^8*s13 - 1/2*denom(1/4*s12^2)*mt^8*s12
       + 1/2*denom(1/4*s12^2)*mt^8*mh^2;
 
 .sort
id KMatrix(3,4) =  mt^2*s24^2 + 2*mt^2*s23*s24 + mt^2*s23^2 + 2*mt^2*s14*s24
       + 2*mt^2*s14*s23 + mt^2*s14^2 + 2*mt^2*s13*s24 + 2*mt^2*s13*s23 + 2*
      mt^2*s13*s14 + mt^2*s13^2 + 2*mt^2*s12*s24 + 2*mt^2*s12*s23 + 2*mt^2*s12
      *s14 + 2*mt^2*s12*s13 + mt^2*s12^2 - 2*mt^2*mh^2*s24 - 2*mt^2*mh^2*s23
       - 2*mt^2*mh^2*s14 - 2*mt^2*mh^2*s13 - 2*mt^2*mh^2*s12 + mt^2*mh^4 - 2*
      mt^4*s24 - 2*mt^4*s23 - 2*mt^4*s14 - 2*mt^4*s13 - 2*mt^4*s12 + 2*mt^4*
      mh^2 - 1/2*denom(1/2*s12)*s14*s24^3 - denom(1/2*s12)*s14*s23*s24^2 - 1/2
      *denom(1/2*s12)*s14*s23^2*s24 - denom(1/2*s12)*s14^2*s24^2 - denom(1/2*
      s12)*s14^2*s23*s24 - 1/2*denom(1/2*s12)*s14^3*s24 - denom(1/2*s12)*s13*
      s14*s24^2 - denom(1/2*s12)*s13*s14*s23*s24 - denom(1/2*s12)*s13*s14^2*
      s24 - 1/2*denom(1/2*s12)*s13^2*s14*s24 - denom(1/2*s12)*s12*s14*s24^2 - 
      denom(1/2*s12)*s12*s14*s23*s24 - denom(1/2*s12)*s12*s14^2*s24 - denom(1/
      2*s12)*s12*s13*s14*s24 - 1/2*denom(1/2*s12)*s12^2*s14*s24 + denom(1/2*
      s12)*mh^2*s14*s24^2 + denom(1/2*s12)*mh^2*s14*s23*s24 + denom(1/2*s12)*
      mh^2*s14^2*s24 + denom(1/2*s12)*mh^2*s13*s14*s24 + denom(1/2*s12)*mh^2*
      s12*s14*s24 - 1/2*denom(1/2*s12)*mh^4*s14*s24 + 1/2*denom(1/2*s12)*mt^2*
      s24^3 + denom(1/2*s12)*mt^2*s23*s24^2 + 1/2*denom(1/2*s12)*mt^2*s23^2*
      s24 + 5/2*denom(1/2*s12)*mt^2*s14*s24^2 + 7/2*denom(1/2*s12)*mt^2*s14*
      s23*s24 + denom(1/2*s12)*mt^2*s14*s23^2 + 5/2*denom(1/2*s12)*mt^2*s14^2*
      s24 + 3/2*denom(1/2*s12)*mt^2*s14^2*s23 + 1/2*denom(1/2*s12)*mt^2*s14^3
       + 3/2*denom(1/2*s12)*mt^2*s13*s24^2 + 3/2*denom(1/2*s12)*mt^2*s13*s23*
      s24 + 7/2*denom(1/2*s12)*mt^2*s13*s14*s24 + 3/2*denom(1/2*s12)*mt^2*s13*
      s14*s23 + denom(1/2*s12)*mt^2*s13*s14^2 + denom(1/2*s12)*mt^2*s13^2*s24
       + 1/2*denom(1/2*s12)*mt^2*s13^2*s14 + denom(1/2*s12)*mt^2*s12*s24^2 + 
      denom(1/2*s12)*mt^2*s12*s23*s24 + 3*denom(1/2*s12)*mt^2*s12*s14*s24 + 3/
      2*denom(1/2*s12)*mt^2*s12*s14*s23 + denom(1/2*s12)*mt^2*s12*s14^2 + 3/2*
      denom(1/2*s12)*mt^2*s12*s13*s24 + denom(1/2*s12)*mt^2*s12*s13*s14 + 1/2*
      denom(1/2*s12)*mt^2*s12^2*s24 + 1/2*denom(1/2*s12)*mt^2*s12^2*s14 - 
      denom(1/2*s12)*mt^2*mh^2*s24^2 - denom(1/2*s12)*mt^2*mh^2*s23*s24 - 3*
      denom(1/2*s12)*mt^2*mh^2*s14*s24 - 3/2*denom(1/2*s12)*mt^2*mh^2*s14*s23
       - denom(1/2*s12)*mt^2*mh^2*s14^2 - 3/2*denom(1/2*s12)*mt^2*mh^2*s13*s24
       - denom(1/2*s12)*mt^2*mh^2*s13*s14 - denom(1/2*s12)*mt^2*mh^2*s12*s24
       - denom(1/2*s12)*mt^2*mh^2*s12*s14 + 1/2*denom(1/2*s12)*mt^2*mh^4*s24
       + 1/2*denom(1/2*s12)*mt^2*mh^4*s14 - 2*denom(1/2*s12)*mt^4*s24^2 - 3*
      denom(1/2*s12)*mt^4*s23*s24 - denom(1/2*s12)*mt^4*s23^2 - 4*denom(1/2*
      s12)*mt^4*s14*s24 - 3*denom(1/2*s12)*mt^4*s14*s23 - 2*denom(1/2*s12)*
      mt^4*s14^2 - 3*denom(1/2*s12)*mt^4*s13*s24 - 2*denom(1/2*s12)*mt^4*s13*
      s23 - 3*denom(1/2*s12)*mt^4*s13*s14 - denom(1/2*s12)*mt^4*s13^2 - 5/2*
      denom(1/2*s12)*mt^4*s12*s24 - 3/2*denom(1/2*s12)*mt^4*s12*s23 - 5/2*
      denom(1/2*s12)*mt^4*s12*s14 - 3/2*denom(1/2*s12)*mt^4*s12*s13 - 1/2*
      denom(1/2*s12)*mt^4*s12^2 + 5/2*denom(1/2*s12)*mt^4*mh^2*s24 + 3/2*
      denom(1/2*s12)*mt^4*mh^2*s23 + 5/2*denom(1/2*s12)*mt^4*mh^2*s14 + 3/2*
      denom(1/2*s12)*mt^4*mh^2*s13 + denom(1/2*s12)*mt^4*mh^2*s12 - 1/2*denom(
      1/2*s12)*mt^4*mh^4 + 2*denom(1/2*s12)*mt^6*s24 + 2*denom(1/2*s12)*mt^6*
      s23 + 2*denom(1/2*s12)*mt^6*s14 + 2*denom(1/2*s12)*mt^6*s13 + 2*denom(1/
      2*s12)*mt^6*s12 - 2*denom(1/2*s12)*mt^6*mh^2 - 1/4*denom(1/4*s12^2)*
      s14^2*s23*s24^2 - 1/4*denom(1/4*s12^2)*s14^2*s23^2*s24 - 1/4*denom(1/4*
      s12^2)*s14^3*s23*s24 - 1/4*denom(1/4*s12^2)*s13*s14*s24^3 - 1/4*denom(1/
      4*s12^2)*s13*s14*s23*s24^2 - 1/4*denom(1/4*s12^2)*s13*s14^2*s24^2 - 1/4*
      denom(1/4*s12^2)*s13*s14^2*s23*s24 - 1/4*denom(1/4*s12^2)*s13^2*s14*
      s24^2 - 1/4*denom(1/4*s12^2)*s12*s14^2*s23*s24 - 1/4*denom(1/4*s12^2)*
      s12*s13*s14*s24^2 + 1/4*denom(1/4*s12^2)*mh^2*s14^2*s23*s24 + 1/4*denom(
      1/4*s12^2)*mh^2*s13*s14*s24^2 + 1/4*denom(1/4*s12^2)*mt^2*s14*s24^3 + 3/
      4*denom(1/4*s12^2)*mt^2*s14*s23*s24^2 + 1/2*denom(1/4*s12^2)*mt^2*s14*
      s23^2*s24 + 1/2*denom(1/4*s12^2)*mt^2*s14^2*s24^2 + denom(1/4*s12^2)*
      mt^2*s14^2*s23*s24 + 1/4*denom(1/4*s12^2)*mt^2*s14^2*s23^2 + 1/4*denom(1/
      4*s12^2)*mt^2*s14^3*s24 + 1/4*denom(1/4*s12^2)*mt^2*s14^3*s23 + 1/4*
      denom(1/4*s12^2)*mt^2*s13*s24^3 + 1/4*denom(1/4*s12^2)*mt^2*s13*s23*
      s24^2 + denom(1/4*s12^2)*mt^2*s13*s14*s24^2 + denom(1/4*s12^2)*mt^2*s13*
      s14*s23*s24 + 3/4*denom(1/4*s12^2)*mt^2*s13*s14^2*s24 + 1/4*denom(1/4*
      s12^2)*mt^2*s13*s14^2*s23 + 1/4*denom(1/4*s12^2)*mt^2*s13^2*s24^2 + 1/2*
      denom(1/4*s12^2)*mt^2*s13^2*s14*s24 + 1/4*denom(1/4*s12^2)*mt^2*s12*s14*
      s24^2 + 1/2*denom(1/4*s12^2)*mt^2*s12*s14*s23*s24 + 1/4*denom(1/4*s12^2)
      *mt^2*s12*s14^2*s24 + 1/4*denom(1/4*s12^2)*mt^2*s12*s14^2*s23 + 1/4*
      denom(1/4*s12^2)*mt^2*s12*s13*s24^2 + 1/2*denom(1/4*s12^2)*mt^2*s12*s13*
      s14*s24 - 1/4*denom(1/4*s12^2)*mt^2*mh^2*s14*s24^2 - 1/2*denom(1/4*s12^2
      )*mt^2*mh^2*s14*s23*s24 - 1/4*denom(1/4*s12^2)*mt^2*mh^2*s14^2*s24 - 1/4
      *denom(1/4*s12^2)*mt^2*mh^2*s14^2*s23 - 1/4*denom(1/4*s12^2)*mt^2*mh^2*
      s13*s24^2 - 1/2*denom(1/4*s12^2)*mt^2*mh^2*s13*s14*s24 - 1/4*denom(1/4*
      s12^2)*mt^4*s24^3 - 1/2*denom(1/4*s12^2)*mt^4*s23*s24^2 - 1/4*denom(1/4*
      s12^2)*mt^4*s23^2*s24 - 5/4*denom(1/4*s12^2)*mt^4*s14*s24^2 - 7/4*denom(
      1/4*s12^2)*mt^4*s14*s23*s24 - 1/2*denom(1/4*s12^2)*mt^4*s14*s23^2 - 5/4*
      denom(1/4*s12^2)*mt^4*s14^2*s24 - 3/4*denom(1/4*s12^2)*mt^4*s14^2*s23 - 
      1/4*denom(1/4*s12^2)*mt^4*s14^3 - 3/4*denom(1/4*s12^2)*mt^4*s13*s24^2 - 
      3/4*denom(1/4*s12^2)*mt^4*s13*s23*s24 - 7/4*denom(1/4*s12^2)*mt^4*s13*
      s14*s24 - 3/4*denom(1/4*s12^2)*mt^4*s13*s14*s23 - 1/2*denom(1/4*s12^2)*
      mt^4*s13*s14^2 - 1/2*denom(1/4*s12^2)*mt^4*s13^2*s24 - 1/4*denom(1/4*
      s12^2)*mt^4*s13^2*s14 - 1/4*denom(1/4*s12^2)*mt^4*s12*s24^2 - 1/4*denom(
      1/4*s12^2)*mt^4*s12*s23*s24 - denom(1/4*s12^2)*mt^4*s12*s14*s24 - 1/2*
      denom(1/4*s12^2)*mt^4*s12*s14*s23 - 1/4*denom(1/4*s12^2)*mt^4*s12*s14^2
       - 1/2*denom(1/4*s12^2)*mt^4*s12*s13*s24 - 1/4*denom(1/4*s12^2)*mt^4*s12
      *s13*s14 + 1/4*denom(1/4*s12^2)*mt^4*mh^2*s24^2 + 1/4*denom(1/4*s12^2)*
      mt^4*mh^2*s23*s24 + denom(1/4*s12^2)*mt^4*mh^2*s14*s24 + 1/2*denom(1/4*
      s12^2)*mt^4*mh^2*s14*s23 + 1/4*denom(1/4*s12^2)*mt^4*mh^2*s14^2 + 1/2*
      denom(1/4*s12^2)*mt^4*mh^2*s13*s24 + 1/4*denom(1/4*s12^2)*mt^4*mh^2*s13*
      s14 + 3/4*denom(1/4*s12^2)*mt^6*s24^2 + denom(1/4*s12^2)*mt^6*s23*s24 + 
      1/4*denom(1/4*s12^2)*mt^6*s23^2 + 3/2*denom(1/4*s12^2)*mt^6*s14*s24 + 
      denom(1/4*s12^2)*mt^6*s14*s23 + 3/4*denom(1/4*s12^2)*mt^6*s14^2 + denom(
      1/4*s12^2)*mt^6*s13*s24 + 1/2*denom(1/4*s12^2)*mt^6*s13*s23 + denom(1/4*
      s12^2)*mt^6*s13*s14 + 1/4*denom(1/4*s12^2)*mt^6*s13^2 + 3/4*denom(1/4*
      s12^2)*mt^6*s12*s24 + 1/4*denom(1/4*s12^2)*mt^6*s12*s23 + 3/4*denom(1/4*
      s12^2)*mt^6*s12*s14 + 1/4*denom(1/4*s12^2)*mt^6*s12*s13 - 3/4*denom(1/4*
      s12^2)*mt^6*mh^2*s24 - 1/4*denom(1/4*s12^2)*mt^6*mh^2*s23 - 3/4*denom(1/
      4*s12^2)*mt^6*mh^2*s14 - 1/4*denom(1/4*s12^2)*mt^6*mh^2*s13 - 1/2*denom(
      1/4*s12^2)*mt^8*s24 - 1/2*denom(1/4*s12^2)*mt^8*s23 - 1/2*denom(1/4*
      s12^2)*mt^8*s14 - 1/2*denom(1/4*s12^2)*mt^8*s13 - 1/2*denom(1/4*s12^2)*
      mt^8*s12 + 1/2*denom(1/4*s12^2)*mt^8*mh^2;
 
 .sort
id KMatrix(3,5) =   - mt^3*s14*s24 - mt^3*s14*s23 - mt^3*s14^2 + mt^3*s13*s24
       + mt^3*s13*s23 + mt^3*s13^2 - mt^3*s12*s14 + mt^3*s12*s13 + mt^3*mh^2*
      s14 - mt^3*mh^2*s13 + 2*mt^5*s14 - 2*mt^5*s13 + 1/2*denom(1/2*s12)*mt*
      s13*s14*s23*s24 + 1/2*denom(1/2*s12)*mt*s13*s14*s23^2 + 1/2*denom(1/2*
      s12)*mt*s13*s14^2*s23 - 1/2*denom(1/2*s12)*mt*s13^2*s23*s24 - 1/2*denom(
      1/2*s12)*mt*s13^2*s23^2 - 1/2*denom(1/2*s12)*mt*s13^3*s23 + 1/2*denom(1/
      2*s12)*mt*s12*s13*s14*s23 - 1/2*denom(1/2*s12)*mt*s12*s13^2*s23 - 1/2*
      denom(1/2*s12)*mt*mh^2*s13*s14*s23 + 1/2*denom(1/2*s12)*mt*mh^2*s13^2*
      s23 - 1/2*denom(1/2*s12)*mt^3*s14*s23*s24 - 1/2*denom(1/2*s12)*mt^3*s14*
      s23^2 - denom(1/2*s12)*mt^3*s14^2*s23 + 1/2*denom(1/2*s12)*mt^3*s13*s23*
      s24 + 1/2*denom(1/2*s12)*mt^3*s13*s23^2 - denom(1/2*s12)*mt^3*s13*s14*
      s24 - denom(1/2*s12)*mt^3*s13*s14*s23 - 1/2*denom(1/2*s12)*mt^3*s13*
      s14^2 + denom(1/2*s12)*mt^3*s13^2*s24 + 2*denom(1/2*s12)*mt^3*s13^2*s23
       + 1/2*denom(1/2*s12)*mt^3*s13^3 - 1/2*denom(1/2*s12)*mt^3*s12*s14*s23
       + 1/2*denom(1/2*s12)*mt^3*s12*s13*s23 - 1/2*denom(1/2*s12)*mt^3*s12*s13
      *s14 + 1/2*denom(1/2*s12)*mt^3*s12*s13^2 + 1/2*denom(1/2*s12)*mt^3*mh^2*
      s14*s23 - 1/2*denom(1/2*s12)*mt^3*mh^2*s13*s23 + 1/2*denom(1/2*s12)*mt^3
      *mh^2*s13*s14 - 1/2*denom(1/2*s12)*mt^3*mh^2*s13^2 + denom(1/2*s12)*mt^5
      *s14*s24 + 2*denom(1/2*s12)*mt^5*s14*s23 + denom(1/2*s12)*mt^5*s14^2 - 
      denom(1/2*s12)*mt^5*s13*s24 - 2*denom(1/2*s12)*mt^5*s13*s23 + denom(1/2*
      s12)*mt^5*s13*s14 - 2*denom(1/2*s12)*mt^5*s13^2 + 1/2*denom(1/2*s12)*
      mt^5*s12*s14 - 1/2*denom(1/2*s12)*mt^5*s12*s13 - 1/2*denom(1/2*s12)*mt^5
      *mh^2*s14 + 1/2*denom(1/2*s12)*mt^5*mh^2*s13 - 2*denom(1/2*s12)*mt^7*s14
       + 2*denom(1/2*s12)*mt^7*s13 + 1/4*denom(1/4*s12^2)*mt*s13*s14^2*s23^2
       + 1/4*denom(1/4*s12^2)*mt*s13^2*s14*s23*s24 - 1/4*denom(1/4*s12^2)*mt*
      s13^2*s14*s23^2 - 1/4*denom(1/4*s12^2)*mt*s13^3*s23*s24 - 1/4*denom(1/4*
      s12^2)*mt^3*s14^2*s23^2 - 1/2*denom(1/4*s12^2)*mt^3*s13*s14*s23*s24 - 1/
      2*denom(1/4*s12^2)*mt^3*s13*s14^2*s23 + 1/2*denom(1/4*s12^2)*mt^3*s13^2*
      s23*s24 + 1/4*denom(1/4*s12^2)*mt^3*s13^2*s23^2 - 1/4*denom(1/4*s12^2)*
      mt^3*s13^2*s14*s24 + 1/4*denom(1/4*s12^2)*mt^3*s13^2*s14*s23 + 1/4*
      denom(1/4*s12^2)*mt^3*s13^3*s24 + 1/4*denom(1/4*s12^2)*mt^3*s13^3*s23 + 
      1/4*denom(1/4*s12^2)*mt^5*s14*s23*s24 + 1/4*denom(1/4*s12^2)*mt^5*s14*
      s23^2 + 1/2*denom(1/4*s12^2)*mt^5*s14^2*s23 - 1/4*denom(1/4*s12^2)*mt^5*
      s13*s23*s24 - 1/4*denom(1/4*s12^2)*mt^5*s13*s23^2 + 1/2*denom(1/4*s12^2)
      *mt^5*s13*s14*s24 + 1/2*denom(1/4*s12^2)*mt^5*s13*s14*s23 + 1/4*denom(1/
      4*s12^2)*mt^5*s13*s14^2 - 1/2*denom(1/4*s12^2)*mt^5*s13^2*s24 - denom(1/
      4*s12^2)*mt^5*s13^2*s23 - 1/4*denom(1/4*s12^2)*mt^5*s13^3 - 1/4*denom(1/
      4*s12^2)*mt^7*s14*s24 - 3/4*denom(1/4*s12^2)*mt^7*s14*s23 - 1/4*denom(1/
      4*s12^2)*mt^7*s14^2 + 1/4*denom(1/4*s12^2)*mt^7*s13*s24 + 3/4*denom(1/4*
      s12^2)*mt^7*s13*s23 - 1/2*denom(1/4*s12^2)*mt^7*s13*s14 + 3/4*denom(1/4*
      s12^2)*mt^7*s13^2 + 1/2*denom(1/4*s12^2)*mt^9*s14 - 1/2*denom(1/4*s12^2)
      *mt^9*s13;
 
 .sort
id KMatrix(3,6) =  1/2*mt*s14*s24^2 + mt*s14*s23*s24 + 1/2*mt*s14*s23^2 + mt*
      s14^2*s24 + mt*s14^2*s23 + 1/2*mt*s14^3 - 1/2*mt*s13*s24^2 - mt*s13*s23*
      s24 - 1/2*mt*s13*s23^2 + 1/2*mt*s13*s14^2 - mt*s13^2*s24 - mt*s13^2*s23
       - 1/2*mt*s13^2*s14 - 1/2*mt*s13^3 + mt*s12*s14*s24 + mt*s12*s14*s23 + 
      mt*s12*s14^2 - mt*s12*s13*s24 - mt*s12*s13*s23 - mt*s12*s13^2 + 1/2*mt*
      s12^2*s14 - 1/2*mt*s12^2*s13 - mt*mh^2*s14*s24 - mt*mh^2*s14*s23 - mt*
      mh^2*s14^2 + mt*mh^2*s13*s24 + mt*mh^2*s13*s23 + mt*mh^2*s13^2 - mt*mh^2
      *s12*s14 + mt*mh^2*s12*s13 + 1/2*mt*mh^4*s14 - 1/2*mt*mh^4*s13 - 2*mt^3*
      s14*s24 - 2*mt^3*s14*s23 - 2*mt^3*s14^2 + 2*mt^3*s13*s24 + 2*mt^3*s13*
      s23 + 2*mt^3*s13^2 - 2*mt^3*s12*s14 + 2*mt^3*s12*s13 + 2*mt^3*mh^2*s14
       - 2*mt^3*mh^2*s13 + 2*mt^5*s14 - 2*mt^5*s13 + 1/2*denom(1/2*s12)*mt*
      s14^2*s23*s24 + 1/2*denom(1/2*s12)*mt*s14^2*s23^2 + 1/2*denom(1/2*s12)*
      mt*s14^3*s23 + 1/2*denom(1/2*s12)*mt*s13*s14*s24^2 - 1/2*denom(1/2*s12)*
      mt*s13*s14*s23^2 + 1/2*denom(1/2*s12)*mt*s13*s14^2*s24 - 1/2*denom(1/2*
      s12)*mt*s13^2*s24^2 - 1/2*denom(1/2*s12)*mt*s13^2*s23*s24 - 1/2*denom(1/
      2*s12)*mt*s13^2*s14*s23 - 1/2*denom(1/2*s12)*mt*s13^3*s24 + 1/2*denom(1/
      2*s12)*mt*s12*s14^2*s23 + 1/2*denom(1/2*s12)*mt*s12*s13*s14*s24 - 1/2*
      denom(1/2*s12)*mt*s12*s13*s14*s23 - 1/2*denom(1/2*s12)*mt*s12*s13^2*s24
       - 1/2*denom(1/2*s12)*mt*mh^2*s14^2*s23 - 1/2*denom(1/2*s12)*mt*mh^2*s13
      *s14*s24 + 1/2*denom(1/2*s12)*mt*mh^2*s13*s14*s23 + 1/2*denom(1/2*s12)*
      mt*mh^2*s13^2*s24 - 1/2*denom(1/2*s12)*mt^3*s14*s24^2 - denom(1/2*s12)*
      mt^3*s14*s23*s24 - 1/2*denom(1/2*s12)*mt^3*s14*s23^2 - denom(1/2*s12)*
      mt^3*s14^2*s24 - 2*denom(1/2*s12)*mt^3*s14^2*s23 - 1/2*denom(1/2*s12)*
      mt^3*s14^3 + 1/2*denom(1/2*s12)*mt^3*s13*s24^2 + denom(1/2*s12)*mt^3*s13
      *s23*s24 + 1/2*denom(1/2*s12)*mt^3*s13*s23^2 - denom(1/2*s12)*mt^3*s13*
      s14*s24 + denom(1/2*s12)*mt^3*s13*s14*s23 - 1/2*denom(1/2*s12)*mt^3*s13*
      s14^2 + 2*denom(1/2*s12)*mt^3*s13^2*s24 + denom(1/2*s12)*mt^3*s13^2*s23
       + 1/2*denom(1/2*s12)*mt^3*s13^2*s14 + 1/2*denom(1/2*s12)*mt^3*s13^3 - 1/
      2*denom(1/2*s12)*mt^3*s12*s14*s24 - 1/2*denom(1/2*s12)*mt^3*s12*s14*s23
       - 1/2*denom(1/2*s12)*mt^3*s12*s14^2 + 1/2*denom(1/2*s12)*mt^3*s12*s13*
      s24 + 1/2*denom(1/2*s12)*mt^3*s12*s13*s23 + 1/2*denom(1/2*s12)*mt^3*s12*
      s13^2 + 1/2*denom(1/2*s12)*mt^3*mh^2*s14*s24 + 1/2*denom(1/2*s12)*mt^3*
      mh^2*s14*s23 + 1/2*denom(1/2*s12)*mt^3*mh^2*s14^2 - 1/2*denom(1/2*s12)*
      mt^3*mh^2*s13*s24 - 1/2*denom(1/2*s12)*mt^3*mh^2*s13*s23 - 1/2*denom(1/2
      *s12)*mt^3*mh^2*s13^2 + 2*denom(1/2*s12)*mt^5*s14*s24 + 2*denom(1/2*s12)
      *mt^5*s14*s23 + 2*denom(1/2*s12)*mt^5*s14^2 - 2*denom(1/2*s12)*mt^5*s13*
      s24 - 2*denom(1/2*s12)*mt^5*s13*s23 - 2*denom(1/2*s12)*mt^5*s13^2 + 
      denom(1/2*s12)*mt^5*s12*s14 - denom(1/2*s12)*mt^5*s12*s13 - denom(1/2*
      s12)*mt^5*mh^2*s14 + denom(1/2*s12)*mt^5*mh^2*s13 - 2*denom(1/2*s12)*
      mt^7*s14 + 2*denom(1/2*s12)*mt^7*s13 + 1/8*denom(1/4*s12^2)*mt*s14^3*
      s23^2 + 1/4*denom(1/4*s12^2)*mt*s13*s14^2*s23*s24 - 1/8*denom(1/4*s12^2)
      *mt*s13*s14^2*s23^2 + 1/8*denom(1/4*s12^2)*mt*s13^2*s14*s24^2 - 1/4*
      denom(1/4*s12^2)*mt*s13^2*s14*s23*s24 - 1/8*denom(1/4*s12^2)*mt*s13^3*
      s24^2 - 1/4*denom(1/4*s12^2)*mt^3*s14^2*s23*s24 - 1/4*denom(1/4*s12^2)*
      mt^3*s14^2*s23^2 - 1/4*denom(1/4*s12^2)*mt^3*s14^3*s23 - 1/4*denom(1/4*
      s12^2)*mt^3*s13*s14*s24^2 + 1/4*denom(1/4*s12^2)*mt^3*s13*s14*s23^2 - 1/
      4*denom(1/4*s12^2)*mt^3*s13*s14^2*s24 + 1/4*denom(1/4*s12^2)*mt^3*s13^2*
      s24^2 + 1/4*denom(1/4*s12^2)*mt^3*s13^2*s23*s24 + 1/4*denom(1/4*s12^2)*
      mt^3*s13^2*s14*s23 + 1/4*denom(1/4*s12^2)*mt^3*s13^3*s24 + 1/8*denom(1/4
      *s12^2)*mt^5*s14*s24^2 + 1/4*denom(1/4*s12^2)*mt^5*s14*s23*s24 + 1/8*
      denom(1/4*s12^2)*mt^5*s14*s23^2 + 1/4*denom(1/4*s12^2)*mt^5*s14^2*s24 + 
      3/4*denom(1/4*s12^2)*mt^5*s14^2*s23 + 1/8*denom(1/4*s12^2)*mt^5*s14^3 - 
      1/8*denom(1/4*s12^2)*mt^5*s13*s24^2 - 1/4*denom(1/4*s12^2)*mt^5*s13*s23*
      s24 - 1/8*denom(1/4*s12^2)*mt^5*s13*s23^2 + 1/2*denom(1/4*s12^2)*mt^5*
      s13*s14*s24 - 1/2*denom(1/4*s12^2)*mt^5*s13*s14*s23 + 1/8*denom(1/4*
      s12^2)*mt^5*s13*s14^2 - 3/4*denom(1/4*s12^2)*mt^5*s13^2*s24 - 1/4*denom(
      1/4*s12^2)*mt^5*s13^2*s23 - 1/8*denom(1/4*s12^2)*mt^5*s13^2*s14 - 1/8*
      denom(1/4*s12^2)*mt^5*s13^3 - 1/2*denom(1/4*s12^2)*mt^7*s14*s24 - 1/2*
      denom(1/4*s12^2)*mt^7*s14*s23 - 1/2*denom(1/4*s12^2)*mt^7*s14^2 + 1/2*
      denom(1/4*s12^2)*mt^7*s13*s24 + 1/2*denom(1/4*s12^2)*mt^7*s13*s23 + 1/2*
      denom(1/4*s12^2)*mt^7*s13^2 + 1/2*denom(1/4*s12^2)*mt^9*s14 - 1/2*denom(
      1/4*s12^2)*mt^9*s13;
 
 .sort
id KMatrix(3,7) =  2*mt^5*s14 - 2*mt^5*s13 - denom(1/2*s12)*mt^3*s14^2*s24 + 
      denom(1/2*s12)*mt^3*s13*s14*s24 - denom(1/2*s12)*mt^3*s13*s14*s23 + 
      denom(1/2*s12)*mt^3*s13^2*s23 + denom(1/2*s12)*mt^5*s14*s24 + denom(1/2*
      s12)*mt^5*s14*s23 + denom(1/2*s12)*mt^5*s14^2 - denom(1/2*s12)*mt^5*s13*
      s24 - denom(1/2*s12)*mt^5*s13*s23 - denom(1/2*s12)*mt^5*s13^2 - 2*denom(
      1/2*s12)*mt^7*s14 + 2*denom(1/2*s12)*mt^7*s13 + 1/2*denom(1/4*s12^2)*mt*
      s13*s14^2*s23*s24 - 1/2*denom(1/4*s12^2)*mt*s13^2*s14*s23*s24 - 1/2*
      denom(1/4*s12^2)*mt^3*s14^2*s23*s24 - 1/2*denom(1/4*s12^2)*mt^3*s13*
      s14^2*s24 - 1/2*denom(1/4*s12^2)*mt^3*s13*s14^2*s23 + 1/2*denom(1/4*
      s12^2)*mt^3*s13^2*s23*s24 + 1/2*denom(1/4*s12^2)*mt^3*s13^2*s14*s24 + 1/
      2*denom(1/4*s12^2)*mt^3*s13^2*s14*s23 + 1/2*denom(1/4*s12^2)*mt^5*s14*
      s23*s24 + 1/2*denom(1/4*s12^2)*mt^5*s14^2*s24 + 1/2*denom(1/4*s12^2)*
      mt^5*s14^2*s23 - 1/2*denom(1/4*s12^2)*mt^5*s13*s23*s24 + 1/2*denom(1/4*
      s12^2)*mt^5*s13*s14^2 - 1/2*denom(1/4*s12^2)*mt^5*s13^2*s24 - 1/2*denom(
      1/4*s12^2)*mt^5*s13^2*s23 - 1/2*denom(1/4*s12^2)*mt^5*s13^2*s14 - 1/2*
      denom(1/4*s12^2)*mt^7*s14*s24 - 1/2*denom(1/4*s12^2)*mt^7*s14*s23 - 1/2*
      denom(1/4*s12^2)*mt^7*s14^2 + 1/2*denom(1/4*s12^2)*mt^7*s13*s24 + 1/2*
      denom(1/4*s12^2)*mt^7*s13*s23 + 1/2*denom(1/4*s12^2)*mt^7*s13^2 + 1/2*
      denom(1/4*s12^2)*mt^9*s14 - 1/2*denom(1/4*s12^2)*mt^9*s13;
 
 .sort
id KMatrix(3,8) =   - mt^3*s14*s24 - mt^3*s14*s23 - mt^3*s14^2 + mt^3*s13*s24
       + mt^3*s13*s23 + mt^3*s13^2 - mt^3*s12*s14 + mt^3*s12*s13 + mt^3*mh^2*
      s14 - mt^3*mh^2*s13 + 2*mt^5*s14 - 2*mt^5*s13 + 1/2*denom(1/2*s12)*mt*
      s14^2*s24^2 + 1/2*denom(1/2*s12)*mt*s14^2*s23*s24 + 1/2*denom(1/2*s12)*
      mt*s14^3*s24 - 1/2*denom(1/2*s12)*mt*s13*s14*s24^2 - 1/2*denom(1/2*s12)*
      mt*s13*s14*s23*s24 - 1/2*denom(1/2*s12)*mt*s13^2*s14*s24 + 1/2*denom(1/2
      *s12)*mt*s12*s14^2*s24 - 1/2*denom(1/2*s12)*mt*s12*s13*s14*s24 - 1/2*
      denom(1/2*s12)*mt*mh^2*s14^2*s24 + 1/2*denom(1/2*s12)*mt*mh^2*s13*s14*
      s24 - 1/2*denom(1/2*s12)*mt^3*s14*s24^2 - 1/2*denom(1/2*s12)*mt^3*s14*
      s23*s24 - 2*denom(1/2*s12)*mt^3*s14^2*s24 - denom(1/2*s12)*mt^3*s14^2*
      s23 - 1/2*denom(1/2*s12)*mt^3*s14^3 + 1/2*denom(1/2*s12)*mt^3*s13*s24^2
       + 1/2*denom(1/2*s12)*mt^3*s13*s23*s24 + denom(1/2*s12)*mt^3*s13*s14*s24
       + denom(1/2*s12)*mt^3*s13*s14*s23 + denom(1/2*s12)*mt^3*s13^2*s24 + 1/2
      *denom(1/2*s12)*mt^3*s13^2*s14 - 1/2*denom(1/2*s12)*mt^3*s12*s14*s24 - 1/
      2*denom(1/2*s12)*mt^3*s12*s14^2 + 1/2*denom(1/2*s12)*mt^3*s12*s13*s24 + 
      1/2*denom(1/2*s12)*mt^3*s12*s13*s14 + 1/2*denom(1/2*s12)*mt^3*mh^2*s14*
      s24 + 1/2*denom(1/2*s12)*mt^3*mh^2*s14^2 - 1/2*denom(1/2*s12)*mt^3*mh^2*
      s13*s24 - 1/2*denom(1/2*s12)*mt^3*mh^2*s13*s14 + 2*denom(1/2*s12)*mt^5*
      s14*s24 + denom(1/2*s12)*mt^5*s14*s23 + 2*denom(1/2*s12)*mt^5*s14^2 - 2*
      denom(1/2*s12)*mt^5*s13*s24 - denom(1/2*s12)*mt^5*s13*s23 - denom(1/2*
      s12)*mt^5*s13*s14 - denom(1/2*s12)*mt^5*s13^2 + 1/2*denom(1/2*s12)*mt^5*
      s12*s14 - 1/2*denom(1/2*s12)*mt^5*s12*s13 - 1/2*denom(1/2*s12)*mt^5*mh^2
      *s14 + 1/2*denom(1/2*s12)*mt^5*mh^2*s13 - 2*denom(1/2*s12)*mt^7*s14 + 2*
      denom(1/2*s12)*mt^7*s13 + 1/4*denom(1/4*s12^2)*mt*s14^3*s23*s24 + 1/4*
      denom(1/4*s12^2)*mt*s13*s14^2*s24^2 - 1/4*denom(1/4*s12^2)*mt*s13*s14^2*
      s23*s24 - 1/4*denom(1/4*s12^2)*mt*s13^2*s14*s24^2 - 1/4*denom(1/4*s12^2)
      *mt^3*s14^2*s24^2 - 1/2*denom(1/4*s12^2)*mt^3*s14^2*s23*s24 - 1/4*denom(
      1/4*s12^2)*mt^3*s14^3*s24 - 1/4*denom(1/4*s12^2)*mt^3*s14^3*s23 + 1/2*
      denom(1/4*s12^2)*mt^3*s13*s14*s23*s24 - 1/4*denom(1/4*s12^2)*mt^3*s13*
      s14^2*s24 + 1/4*denom(1/4*s12^2)*mt^3*s13*s14^2*s23 + 1/4*denom(1/4*
      s12^2)*mt^3*s13^2*s24^2 + 1/2*denom(1/4*s12^2)*mt^3*s13^2*s14*s24 + 1/4*
      denom(1/4*s12^2)*mt^5*s14*s24^2 + 1/4*denom(1/4*s12^2)*mt^5*s14*s23*s24
       + denom(1/4*s12^2)*mt^5*s14^2*s24 + 1/2*denom(1/4*s12^2)*mt^5*s14^2*s23
       + 1/4*denom(1/4*s12^2)*mt^5*s14^3 - 1/4*denom(1/4*s12^2)*mt^5*s13*s24^2
       - 1/4*denom(1/4*s12^2)*mt^5*s13*s23*s24 - 1/2*denom(1/4*s12^2)*mt^5*s13
      *s14*s24 - 1/2*denom(1/4*s12^2)*mt^5*s13*s14*s23 - 1/2*denom(1/4*s12^2)*
      mt^5*s13^2*s24 - 1/4*denom(1/4*s12^2)*mt^5*s13^2*s14 - 3/4*denom(1/4*
      s12^2)*mt^7*s14*s24 - 1/4*denom(1/4*s12^2)*mt^7*s14*s23 - 3/4*denom(1/4*
      s12^2)*mt^7*s14^2 + 3/4*denom(1/4*s12^2)*mt^7*s13*s24 + 1/4*denom(1/4*
      s12^2)*mt^7*s13*s23 + 1/2*denom(1/4*s12^2)*mt^7*s13*s14 + 1/4*denom(1/4*
      s12^2)*mt^7*s13^2 + 1/2*denom(1/4*s12^2)*mt^9*s14 - 1/2*denom(1/4*s12^2)
      *mt^9*s13;
 
 .sort
id KMatrix(3,9) =   - mt^3*s24^2 + mt^3*s23^2 - mt^3*s14*s24 + mt^3*s14*s23 - 
      mt^3*s13*s24 + mt^3*s13*s23 - mt^3*s12*s24 + mt^3*s12*s23 + mt^3*mh^2*
      s24 - mt^3*mh^2*s23 + 2*mt^5*s24 - 2*mt^5*s23 + 1/2*denom(1/2*s12)*mt*
      s13*s23*s24^2 - 1/2*denom(1/2*s12)*mt*s13*s23^3 + 1/2*denom(1/2*s12)*mt*
      s13*s14*s23*s24 - 1/2*denom(1/2*s12)*mt*s13*s14*s23^2 + 1/2*denom(1/2*
      s12)*mt*s13^2*s23*s24 - 1/2*denom(1/2*s12)*mt*s13^2*s23^2 + 1/2*denom(1/
      2*s12)*mt*s12*s13*s23*s24 - 1/2*denom(1/2*s12)*mt*s12*s13*s23^2 - 1/2*
      denom(1/2*s12)*mt*mh^2*s13*s23*s24 + 1/2*denom(1/2*s12)*mt*mh^2*s13*
      s23^2 - 1/2*denom(1/2*s12)*mt^3*s23*s24^2 + 1/2*denom(1/2*s12)*mt^3*
      s23^3 - denom(1/2*s12)*mt^3*s14*s23*s24 + denom(1/2*s12)*mt^3*s14*s23^2
       - denom(1/2*s12)*mt^3*s13*s24^2 - denom(1/2*s12)*mt^3*s13*s23*s24 + 2*
      denom(1/2*s12)*mt^3*s13*s23^2 - 1/2*denom(1/2*s12)*mt^3*s13*s14*s24 + 1/
      2*denom(1/2*s12)*mt^3*s13*s14*s23 - 1/2*denom(1/2*s12)*mt^3*s13^2*s24 + 
      1/2*denom(1/2*s12)*mt^3*s13^2*s23 - 1/2*denom(1/2*s12)*mt^3*s12*s23*s24
       + 1/2*denom(1/2*s12)*mt^3*s12*s23^2 - 1/2*denom(1/2*s12)*mt^3*s12*s13*
      s24 + 1/2*denom(1/2*s12)*mt^3*s12*s13*s23 + 1/2*denom(1/2*s12)*mt^3*mh^2
      *s23*s24 - 1/2*denom(1/2*s12)*mt^3*mh^2*s23^2 + 1/2*denom(1/2*s12)*mt^3*
      mh^2*s13*s24 - 1/2*denom(1/2*s12)*mt^3*mh^2*s13*s23 + denom(1/2*s12)*
      mt^5*s24^2 + denom(1/2*s12)*mt^5*s23*s24 - 2*denom(1/2*s12)*mt^5*s23^2
       + denom(1/2*s12)*mt^5*s14*s24 - denom(1/2*s12)*mt^5*s14*s23 + 2*denom(1/
      2*s12)*mt^5*s13*s24 - 2*denom(1/2*s12)*mt^5*s13*s23 + 1/2*denom(1/2*s12)
      *mt^5*s12*s24 - 1/2*denom(1/2*s12)*mt^5*s12*s23 - 1/2*denom(1/2*s12)*
      mt^5*mh^2*s24 + 1/2*denom(1/2*s12)*mt^5*mh^2*s23 - 2*denom(1/2*s12)*mt^7
      *s24 + 2*denom(1/2*s12)*mt^7*s23 + 1/4*denom(1/4*s12^2)*mt*s13*s14*s23^2
      *s24 - 1/4*denom(1/4*s12^2)*mt*s13*s14*s23^3 + 1/4*denom(1/4*s12^2)*mt*
      s13^2*s23*s24^2 - 1/4*denom(1/4*s12^2)*mt*s13^2*s23^2*s24 - 1/4*denom(1/
      4*s12^2)*mt^3*s14*s23^2*s24 + 1/4*denom(1/4*s12^2)*mt^3*s14*s23^3 - 1/2*
      denom(1/4*s12^2)*mt^3*s13*s23*s24^2 + 1/4*denom(1/4*s12^2)*mt^3*s13*
      s23^2*s24 + 1/4*denom(1/4*s12^2)*mt^3*s13*s23^3 - 1/2*denom(1/4*s12^2)*
      mt^3*s13*s14*s23*s24 + 1/2*denom(1/4*s12^2)*mt^3*s13*s14*s23^2 - 1/4*
      denom(1/4*s12^2)*mt^3*s13^2*s24^2 + 1/4*denom(1/4*s12^2)*mt^3*s13^2*
      s23^2 + 1/4*denom(1/4*s12^2)*mt^5*s23*s24^2 - 1/4*denom(1/4*s12^2)*mt^5*
      s23^3 + 1/2*denom(1/4*s12^2)*mt^5*s14*s23*s24 - 1/2*denom(1/4*s12^2)*
      mt^5*s14*s23^2 + 1/2*denom(1/4*s12^2)*mt^5*s13*s24^2 + 1/2*denom(1/4*
      s12^2)*mt^5*s13*s23*s24 - denom(1/4*s12^2)*mt^5*s13*s23^2 + 1/4*denom(1/
      4*s12^2)*mt^5*s13*s14*s24 - 1/4*denom(1/4*s12^2)*mt^5*s13*s14*s23 + 1/4*
      denom(1/4*s12^2)*mt^5*s13^2*s24 - 1/4*denom(1/4*s12^2)*mt^5*s13^2*s23 - 
      1/4*denom(1/4*s12^2)*mt^7*s24^2 - 1/2*denom(1/4*s12^2)*mt^7*s23*s24 + 3/
      4*denom(1/4*s12^2)*mt^7*s23^2 - 1/4*denom(1/4*s12^2)*mt^7*s14*s24 + 1/4*
      denom(1/4*s12^2)*mt^7*s14*s23 - 3/4*denom(1/4*s12^2)*mt^7*s13*s24 + 3/4*
      denom(1/4*s12^2)*mt^7*s13*s23 + 1/2*denom(1/4*s12^2)*mt^9*s24 - 1/2*
      denom(1/4*s12^2)*mt^9*s23;
 
 .sort
id KMatrix(3,10) =  1/2*mt*s24^3 + 1/2*mt*s23*s24^2 - 1/2*mt*s23^2*s24 - 1/2*
      mt*s23^3 + mt*s14*s24^2 - mt*s14*s23^2 + 1/2*mt*s14^2*s24 - 1/2*mt*s14^2
      *s23 + mt*s13*s24^2 - mt*s13*s23^2 + mt*s13*s14*s24 - mt*s13*s14*s23 + 1/
      2*mt*s13^2*s24 - 1/2*mt*s13^2*s23 + mt*s12*s24^2 - mt*s12*s23^2 + mt*s12
      *s14*s24 - mt*s12*s14*s23 + mt*s12*s13*s24 - mt*s12*s13*s23 + 1/2*mt*
      s12^2*s24 - 1/2*mt*s12^2*s23 - mt*mh^2*s24^2 + mt*mh^2*s23^2 - mt*mh^2*
      s14*s24 + mt*mh^2*s14*s23 - mt*mh^2*s13*s24 + mt*mh^2*s13*s23 - mt*mh^2*
      s12*s24 + mt*mh^2*s12*s23 + 1/2*mt*mh^4*s24 - 1/2*mt*mh^4*s23 - 2*mt^3*
      s24^2 + 2*mt^3*s23^2 - 2*mt^3*s14*s24 + 2*mt^3*s14*s23 - 2*mt^3*s13*s24
       + 2*mt^3*s13*s23 - 2*mt^3*s12*s24 + 2*mt^3*s12*s23 + 2*mt^3*mh^2*s24 - 
      2*mt^3*mh^2*s23 + 2*mt^5*s24 - 2*mt^5*s23 + 1/2*denom(1/2*s12)*mt*s14*
      s23*s24^2 - 1/2*denom(1/2*s12)*mt*s14*s23^3 + 1/2*denom(1/2*s12)*mt*
      s14^2*s23*s24 - 1/2*denom(1/2*s12)*mt*s14^2*s23^2 + 1/2*denom(1/2*s12)*
      mt*s13*s24^3 - 1/2*denom(1/2*s12)*mt*s13*s23^2*s24 + 1/2*denom(1/2*s12)*
      mt*s13*s14*s24^2 - 1/2*denom(1/2*s12)*mt*s13*s14*s23^2 + 1/2*denom(1/2*
      s12)*mt*s13^2*s24^2 - 1/2*denom(1/2*s12)*mt*s13^2*s23*s24 + 1/2*denom(1/
      2*s12)*mt*s12*s14*s23*s24 - 1/2*denom(1/2*s12)*mt*s12*s14*s23^2 + 1/2*
      denom(1/2*s12)*mt*s12*s13*s24^2 - 1/2*denom(1/2*s12)*mt*s12*s13*s23*s24
       - 1/2*denom(1/2*s12)*mt*mh^2*s14*s23*s24 + 1/2*denom(1/2*s12)*mt*mh^2*
      s14*s23^2 - 1/2*denom(1/2*s12)*mt*mh^2*s13*s24^2 + 1/2*denom(1/2*s12)*mt
      *mh^2*s13*s23*s24 - 1/2*denom(1/2*s12)*mt^3*s24^3 - 1/2*denom(1/2*s12)*
      mt^3*s23*s24^2 + 1/2*denom(1/2*s12)*mt^3*s23^2*s24 + 1/2*denom(1/2*s12)*
      mt^3*s23^3 - denom(1/2*s12)*mt^3*s14*s24^2 - denom(1/2*s12)*mt^3*s14*s23
      *s24 + 2*denom(1/2*s12)*mt^3*s14*s23^2 - 1/2*denom(1/2*s12)*mt^3*s14^2*
      s24 + 1/2*denom(1/2*s12)*mt^3*s14^2*s23 - 2*denom(1/2*s12)*mt^3*s13*
      s24^2 + denom(1/2*s12)*mt^3*s13*s23*s24 + denom(1/2*s12)*mt^3*s13*s23^2
       - denom(1/2*s12)*mt^3*s13*s14*s24 + denom(1/2*s12)*mt^3*s13*s14*s23 - 1/
      2*denom(1/2*s12)*mt^3*s13^2*s24 + 1/2*denom(1/2*s12)*mt^3*s13^2*s23 - 1/
      2*denom(1/2*s12)*mt^3*s12*s24^2 + 1/2*denom(1/2*s12)*mt^3*s12*s23^2 - 1/
      2*denom(1/2*s12)*mt^3*s12*s14*s24 + 1/2*denom(1/2*s12)*mt^3*s12*s14*s23
       - 1/2*denom(1/2*s12)*mt^3*s12*s13*s24 + 1/2*denom(1/2*s12)*mt^3*s12*s13
      *s23 + 1/2*denom(1/2*s12)*mt^3*mh^2*s24^2 - 1/2*denom(1/2*s12)*mt^3*mh^2
      *s23^2 + 1/2*denom(1/2*s12)*mt^3*mh^2*s14*s24 - 1/2*denom(1/2*s12)*mt^3*
      mh^2*s14*s23 + 1/2*denom(1/2*s12)*mt^3*mh^2*s13*s24 - 1/2*denom(1/2*s12)
      *mt^3*mh^2*s13*s23 + 2*denom(1/2*s12)*mt^5*s24^2 - 2*denom(1/2*s12)*mt^5
      *s23^2 + 2*denom(1/2*s12)*mt^5*s14*s24 - 2*denom(1/2*s12)*mt^5*s14*s23
       + 2*denom(1/2*s12)*mt^5*s13*s24 - 2*denom(1/2*s12)*mt^5*s13*s23 + 
      denom(1/2*s12)*mt^5*s12*s24 - denom(1/2*s12)*mt^5*s12*s23 - denom(1/2*
      s12)*mt^5*mh^2*s24 + denom(1/2*s12)*mt^5*mh^2*s23 - 2*denom(1/2*s12)*
      mt^7*s24 + 2*denom(1/2*s12)*mt^7*s23 + 1/8*denom(1/4*s12^2)*mt*s14^2*
      s23^2*s24 - 1/8*denom(1/4*s12^2)*mt*s14^2*s23^3 + 1/4*denom(1/4*s12^2)*
      mt*s13*s14*s23*s24^2 - 1/4*denom(1/4*s12^2)*mt*s13*s14*s23^2*s24 + 1/8*
      denom(1/4*s12^2)*mt*s13^2*s24^3 - 1/8*denom(1/4*s12^2)*mt*s13^2*s23*
      s24^2 - 1/4*denom(1/4*s12^2)*mt^3*s14*s23*s24^2 + 1/4*denom(1/4*s12^2)*
      mt^3*s14*s23^3 - 1/4*denom(1/4*s12^2)*mt^3*s14^2*s23*s24 + 1/4*denom(1/4
      *s12^2)*mt^3*s14^2*s23^2 - 1/4*denom(1/4*s12^2)*mt^3*s13*s24^3 + 1/4*
      denom(1/4*s12^2)*mt^3*s13*s23^2*s24 - 1/4*denom(1/4*s12^2)*mt^3*s13*s14*
      s24^2 + 1/4*denom(1/4*s12^2)*mt^3*s13*s14*s23^2 - 1/4*denom(1/4*s12^2)*
      mt^3*s13^2*s24^2 + 1/4*denom(1/4*s12^2)*mt^3*s13^2*s23*s24 + 1/8*denom(1/
      4*s12^2)*mt^5*s24^3 + 1/8*denom(1/4*s12^2)*mt^5*s23*s24^2 - 1/8*denom(1/
      4*s12^2)*mt^5*s23^2*s24 - 1/8*denom(1/4*s12^2)*mt^5*s23^3 + 1/4*denom(1/
      4*s12^2)*mt^5*s14*s24^2 + 1/2*denom(1/4*s12^2)*mt^5*s14*s23*s24 - 3/4*
      denom(1/4*s12^2)*mt^5*s14*s23^2 + 1/8*denom(1/4*s12^2)*mt^5*s14^2*s24 - 
      1/8*denom(1/4*s12^2)*mt^5*s14^2*s23 + 3/4*denom(1/4*s12^2)*mt^5*s13*
      s24^2 - 1/2*denom(1/4*s12^2)*mt^5*s13*s23*s24 - 1/4*denom(1/4*s12^2)*
      mt^5*s13*s23^2 + 1/4*denom(1/4*s12^2)*mt^5*s13*s14*s24 - 1/4*denom(1/4*
      s12^2)*mt^5*s13*s14*s23 + 1/8*denom(1/4*s12^2)*mt^5*s13^2*s24 - 1/8*
      denom(1/4*s12^2)*mt^5*s13^2*s23 - 1/2*denom(1/4*s12^2)*mt^7*s24^2 + 1/2*
      denom(1/4*s12^2)*mt^7*s23^2 - 1/2*denom(1/4*s12^2)*mt^7*s14*s24 + 1/2*
      denom(1/4*s12^2)*mt^7*s14*s23 - 1/2*denom(1/4*s12^2)*mt^7*s13*s24 + 1/2*
      denom(1/4*s12^2)*mt^7*s13*s23 + 1/2*denom(1/4*s12^2)*mt^9*s24 - 1/2*
      denom(1/4*s12^2)*mt^9*s23;
 
 .sort
id KMatrix(3,11) =  2*mt^5*s24 - 2*mt^5*s23 - denom(1/2*s12)*mt^3*s14*s24^2 + 
      denom(1/2*s12)*mt^3*s14*s23*s24 - denom(1/2*s12)*mt^3*s13*s23*s24 + 
      denom(1/2*s12)*mt^3*s13*s23^2 + denom(1/2*s12)*mt^5*s24^2 - denom(1/2*
      s12)*mt^5*s23^2 + denom(1/2*s12)*mt^5*s14*s24 - denom(1/2*s12)*mt^5*s14*
      s23 + denom(1/2*s12)*mt^5*s13*s24 - denom(1/2*s12)*mt^5*s13*s23 - 2*
      denom(1/2*s12)*mt^7*s24 + 2*denom(1/2*s12)*mt^7*s23 + 1/2*denom(1/4*
      s12^2)*mt*s13*s14*s23*s24^2 - 1/2*denom(1/4*s12^2)*mt*s13*s14*s23^2*s24
       - 1/2*denom(1/4*s12^2)*mt^3*s14*s23*s24^2 + 1/2*denom(1/4*s12^2)*mt^3*
      s14*s23^2*s24 - 1/2*denom(1/4*s12^2)*mt^3*s13*s23*s24^2 + 1/2*denom(1/4*
      s12^2)*mt^3*s13*s23^2*s24 - 1/2*denom(1/4*s12^2)*mt^3*s13*s14*s24^2 + 1/
      2*denom(1/4*s12^2)*mt^3*s13*s14*s23^2 + 1/2*denom(1/4*s12^2)*mt^5*s23*
      s24^2 - 1/2*denom(1/4*s12^2)*mt^5*s23^2*s24 + 1/2*denom(1/4*s12^2)*mt^5*
      s14*s24^2 - 1/2*denom(1/4*s12^2)*mt^5*s14*s23^2 + 1/2*denom(1/4*s12^2)*
      mt^5*s13*s24^2 - 1/2*denom(1/4*s12^2)*mt^5*s13*s23^2 + 1/2*denom(1/4*
      s12^2)*mt^5*s13*s14*s24 - 1/2*denom(1/4*s12^2)*mt^5*s13*s14*s23 - 1/2*
      denom(1/4*s12^2)*mt^7*s24^2 + 1/2*denom(1/4*s12^2)*mt^7*s23^2 - 1/2*
      denom(1/4*s12^2)*mt^7*s14*s24 + 1/2*denom(1/4*s12^2)*mt^7*s14*s23 - 1/2*
      denom(1/4*s12^2)*mt^7*s13*s24 + 1/2*denom(1/4*s12^2)*mt^7*s13*s23 + 1/2*
      denom(1/4*s12^2)*mt^9*s24 - 1/2*denom(1/4*s12^2)*mt^9*s23;
 
 .sort
id KMatrix(3,12) =   - mt^3*s24^2 + mt^3*s23^2 - mt^3*s14*s24 + mt^3*s14*s23
       - mt^3*s13*s24 + mt^3*s13*s23 - mt^3*s12*s24 + mt^3*s12*s23 + mt^3*mh^2
      *s24 - mt^3*mh^2*s23 + 2*mt^5*s24 - 2*mt^5*s23 + 1/2*denom(1/2*s12)*mt*
      s14*s24^3 - 1/2*denom(1/2*s12)*mt*s14*s23^2*s24 + 1/2*denom(1/2*s12)*mt*
      s14^2*s24^2 - 1/2*denom(1/2*s12)*mt*s14^2*s23*s24 + 1/2*denom(1/2*s12)*
      mt*s13*s14*s24^2 - 1/2*denom(1/2*s12)*mt*s13*s14*s23*s24 + 1/2*denom(1/2
      *s12)*mt*s12*s14*s24^2 - 1/2*denom(1/2*s12)*mt*s12*s14*s23*s24 - 1/2*
      denom(1/2*s12)*mt*mh^2*s14*s24^2 + 1/2*denom(1/2*s12)*mt*mh^2*s14*s23*
      s24 - 1/2*denom(1/2*s12)*mt^3*s24^3 + 1/2*denom(1/2*s12)*mt^3*s23^2*s24
       - 2*denom(1/2*s12)*mt^3*s14*s24^2 + denom(1/2*s12)*mt^3*s14*s23*s24 + 
      denom(1/2*s12)*mt^3*s14*s23^2 - 1/2*denom(1/2*s12)*mt^3*s14^2*s24 + 1/2*
      denom(1/2*s12)*mt^3*s14^2*s23 - denom(1/2*s12)*mt^3*s13*s24^2 + denom(1/
      2*s12)*mt^3*s13*s23*s24 - 1/2*denom(1/2*s12)*mt^3*s13*s14*s24 + 1/2*
      denom(1/2*s12)*mt^3*s13*s14*s23 - 1/2*denom(1/2*s12)*mt^3*s12*s24^2 + 1/
      2*denom(1/2*s12)*mt^3*s12*s23*s24 - 1/2*denom(1/2*s12)*mt^3*s12*s14*s24
       + 1/2*denom(1/2*s12)*mt^3*s12*s14*s23 + 1/2*denom(1/2*s12)*mt^3*mh^2*
      s24^2 - 1/2*denom(1/2*s12)*mt^3*mh^2*s23*s24 + 1/2*denom(1/2*s12)*mt^3*
      mh^2*s14*s24 - 1/2*denom(1/2*s12)*mt^3*mh^2*s14*s23 + 2*denom(1/2*s12)*
      mt^5*s24^2 - denom(1/2*s12)*mt^5*s23*s24 - denom(1/2*s12)*mt^5*s23^2 + 2
      *denom(1/2*s12)*mt^5*s14*s24 - 2*denom(1/2*s12)*mt^5*s14*s23 + denom(1/2
      *s12)*mt^5*s13*s24 - denom(1/2*s12)*mt^5*s13*s23 + 1/2*denom(1/2*s12)*
      mt^5*s12*s24 - 1/2*denom(1/2*s12)*mt^5*s12*s23 - 1/2*denom(1/2*s12)*mt^5
      *mh^2*s24 + 1/2*denom(1/2*s12)*mt^5*mh^2*s23 - 2*denom(1/2*s12)*mt^7*s24
       + 2*denom(1/2*s12)*mt^7*s23 + 1/4*denom(1/4*s12^2)*mt*s14^2*s23*s24^2
       - 1/4*denom(1/4*s12^2)*mt*s14^2*s23^2*s24 + 1/4*denom(1/4*s12^2)*mt*s13
      *s14*s24^3 - 1/4*denom(1/4*s12^2)*mt*s13*s14*s23*s24^2 - 1/4*denom(1/4*
      s12^2)*mt^3*s14*s24^3 - 1/4*denom(1/4*s12^2)*mt^3*s14*s23*s24^2 + 1/2*
      denom(1/4*s12^2)*mt^3*s14*s23^2*s24 - 1/4*denom(1/4*s12^2)*mt^3*s14^2*
      s24^2 + 1/4*denom(1/4*s12^2)*mt^3*s14^2*s23^2 - 1/4*denom(1/4*s12^2)*
      mt^3*s13*s24^3 + 1/4*denom(1/4*s12^2)*mt^3*s13*s23*s24^2 - 1/2*denom(1/4
      *s12^2)*mt^3*s13*s14*s24^2 + 1/2*denom(1/4*s12^2)*mt^3*s13*s14*s23*s24
       + 1/4*denom(1/4*s12^2)*mt^5*s24^3 - 1/4*denom(1/4*s12^2)*mt^5*s23^2*s24
       + denom(1/4*s12^2)*mt^5*s14*s24^2 - 1/2*denom(1/4*s12^2)*mt^5*s14*s23*
      s24 - 1/2*denom(1/4*s12^2)*mt^5*s14*s23^2 + 1/4*denom(1/4*s12^2)*mt^5*
      s14^2*s24 - 1/4*denom(1/4*s12^2)*mt^5*s14^2*s23 + 1/2*denom(1/4*s12^2)*
      mt^5*s13*s24^2 - 1/2*denom(1/4*s12^2)*mt^5*s13*s23*s24 + 1/4*denom(1/4*
      s12^2)*mt^5*s13*s14*s24 - 1/4*denom(1/4*s12^2)*mt^5*s13*s14*s23 - 3/4*
      denom(1/4*s12^2)*mt^7*s24^2 + 1/2*denom(1/4*s12^2)*mt^7*s23*s24 + 1/4*
      denom(1/4*s12^2)*mt^7*s23^2 - 3/4*denom(1/4*s12^2)*mt^7*s14*s24 + 3/4*
      denom(1/4*s12^2)*mt^7*s14*s23 - 1/4*denom(1/4*s12^2)*mt^7*s13*s24 + 1/4*
      denom(1/4*s12^2)*mt^7*s13*s23 + 1/2*denom(1/4*s12^2)*mt^9*s24 - 1/2*
      denom(1/4*s12^2)*mt^9*s23;
 
 .sort
id KMatrix(3,13) =   - 1/2*mt^2*s14*s23*s24 - 1/2*mt^2*s14*s23^2 - 1/2*mt^2*
      s14^2*s23 + 1/2*mt^2*s13*s24^2 + 1/2*mt^2*s13*s23*s24 + 1/2*mt^2*s13*s14
      *s24 - 1/2*mt^2*s13*s14*s23 + 1/2*mt^2*s13^2*s24 + 1/2*mt^2*s12*s24^2 + 
      mt^2*s12*s23*s24 + 1/2*mt^2*s12*s23^2 + mt^2*s12*s14*s24 + 1/2*mt^2*s12*
      s14*s23 + 1/2*mt^2*s12*s14^2 + 3/2*mt^2*s12*s13*s24 + mt^2*s12*s13*s23
       + mt^2*s12*s13*s14 + 1/2*mt^2*s12*s13^2 + mt^2*s12^2*s24 + mt^2*s12^2*
      s23 + mt^2*s12^2*s14 + mt^2*s12^2*s13 + 1/2*mt^2*s12^3 + 1/2*mt^2*mh^2*
      s14*s23 - 1/2*mt^2*mh^2*s13*s24 - mt^2*mh^2*s12*s24 - mt^2*mh^2*s12*s23
       - mt^2*mh^2*s12*s14 - mt^2*mh^2*s12*s13 - mt^2*mh^2*s12^2 + 1/2*mt^2*
      mh^4*s12 - 1/2*mt^4*s24^2 + 1/2*mt^4*s23^2 + 2*mt^4*s14*s23 + 1/2*mt^4*
      s14^2 - 2*mt^4*s13*s24 - 1/2*mt^4*s13^2 - 3/2*mt^4*s12*s24 - 1/2*mt^4*
      s12*s23 - 1/2*mt^4*s12*s14 - 3/2*mt^4*s12*s13 - mt^4*s12^2 + 1/2*mt^4*
      mh^2*s24 - 1/2*mt^4*mh^2*s23 - 1/2*mt^4*mh^2*s14 + 1/2*mt^4*mh^2*s13 + 
      mt^4*mh^2*s12 + mt^6*s24 - mt^6*s23 - mt^6*s14 + mt^6*s13 + 1/4*denom(1/
      2*s12)*s13*s14*s23^2*s24 + 1/4*denom(1/2*s12)*s13*s14*s23^3 + 1/4*denom(
      1/2*s12)*s13*s14^2*s23^2 - 1/4*denom(1/2*s12)*s13^2*s23*s24^2 - 1/4*
      denom(1/2*s12)*s13^2*s23^2*s24 - 1/4*denom(1/2*s12)*s13^2*s14*s23*s24 + 
      1/4*denom(1/2*s12)*s13^2*s14*s23^2 - 1/4*denom(1/2*s12)*s13^3*s23*s24 - 
      1/4*denom(1/2*s12)*s12*s13*s23*s24^2 - 1/2*denom(1/2*s12)*s12*s13*s23^2*
      s24 - 1/4*denom(1/2*s12)*s12*s13*s23^3 - 1/2*denom(1/2*s12)*s12*s13*s14*
      s23*s24 - 1/4*denom(1/2*s12)*s12*s13*s14*s23^2 - 1/4*denom(1/2*s12)*s12*
      s13*s14^2*s23 - 3/4*denom(1/2*s12)*s12*s13^2*s23*s24 - 1/2*denom(1/2*s12
      )*s12*s13^2*s23^2 - 1/2*denom(1/2*s12)*s12*s13^2*s14*s23 - 1/4*denom(1/2
      *s12)*s12*s13^3*s23 - 1/2*denom(1/2*s12)*s12^2*s13*s23*s24 - 1/2*denom(1/
      2*s12)*s12^2*s13*s23^2 - 1/2*denom(1/2*s12)*s12^2*s13*s14*s23 - 1/2*
      denom(1/2*s12)*s12^2*s13^2*s23 - 1/4*denom(1/2*s12)*s12^3*s13*s23 - 1/4*
      denom(1/2*s12)*mh^2*s13*s14*s23^2 + 1/4*denom(1/2*s12)*mh^2*s13^2*s23*
      s24 + 1/2*denom(1/2*s12)*mh^2*s12*s13*s23*s24 + 1/2*denom(1/2*s12)*mh^2*
      s12*s13*s23^2 + 1/2*denom(1/2*s12)*mh^2*s12*s13*s14*s23 + 1/2*denom(1/2*
      s12)*mh^2*s12*s13^2*s23 + 1/2*denom(1/2*s12)*mh^2*s12^2*s13*s23 - 1/4*
      denom(1/2*s12)*mh^4*s12*s13*s23 - 1/4*denom(1/2*s12)*mt^2*s14*s23^2*s24
       - 1/4*denom(1/2*s12)*mt^2*s14*s23^3 - 1/2*denom(1/2*s12)*mt^2*s14^2*
      s23^2 + 1/2*denom(1/2*s12)*mt^2*s13*s23*s24^2 + 1/4*denom(1/2*s12)*mt^2*
      s13*s23^2*s24 - 1/4*denom(1/2*s12)*mt^2*s13*s23^3 - 3/2*denom(1/2*s12)*
      mt^2*s13*s14*s23^2 - 1/2*denom(1/2*s12)*mt^2*s13*s14^2*s23 + 1/2*denom(1/
      2*s12)*mt^2*s13^2*s24^2 + 3/2*denom(1/2*s12)*mt^2*s13^2*s23*s24 + 1/4*
      denom(1/2*s12)*mt^2*s13^2*s14*s24 - 1/4*denom(1/2*s12)*mt^2*s13^2*s14*
      s23 + 1/4*denom(1/2*s12)*mt^2*s13^3*s24 + 1/4*denom(1/2*s12)*mt^2*s13^3*
      s23 + 1/4*denom(1/2*s12)*mt^2*s12*s23*s24^2 + 1/2*denom(1/2*s12)*mt^2*
      s12*s23^2*s24 + 1/4*denom(1/2*s12)*mt^2*s12*s23^3 + 3/4*denom(1/2*s12)*
      mt^2*s12*s14*s23*s24 + 1/2*denom(1/2*s12)*mt^2*s12*s14*s23^2 + 1/2*
      denom(1/2*s12)*mt^2*s12*s14^2*s23 + 1/2*denom(1/2*s12)*mt^2*s12*s13*
      s24^2 + 9/4*denom(1/2*s12)*mt^2*s12*s13*s23*s24 + denom(1/2*s12)*mt^2*
      s12*s13*s23^2 + 3/4*denom(1/2*s12)*mt^2*s12*s13*s14*s24 + 5/4*denom(1/2*
      s12)*mt^2*s12*s13*s14*s23 + 1/4*denom(1/2*s12)*mt^2*s12*s13*s14^2 + 
      denom(1/2*s12)*mt^2*s12*s13^2*s24 + 3/2*denom(1/2*s12)*mt^2*s12*s13^2*
      s23 + 1/2*denom(1/2*s12)*mt^2*s12*s13^2*s14 + 1/4*denom(1/2*s12)*mt^2*
      s12*s13^3 + 1/2*denom(1/2*s12)*mt^2*s12^2*s23*s24 + 1/2*denom(1/2*s12)*
      mt^2*s12^2*s23^2 + 3/4*denom(1/2*s12)*mt^2*s12^2*s14*s23 + 3/4*denom(1/2
      *s12)*mt^2*s12^2*s13*s24 + 3/2*denom(1/2*s12)*mt^2*s12^2*s13*s23 + 1/2*
      denom(1/2*s12)*mt^2*s12^2*s13*s14 + 1/2*denom(1/2*s12)*mt^2*s12^2*s13^2
       + 1/4*denom(1/2*s12)*mt^2*s12^3*s23 + 1/4*denom(1/2*s12)*mt^2*s12^3*s13
       + 1/4*denom(1/2*s12)*mt^2*mh^2*s14*s23^2 - 1/2*denom(1/2*s12)*mt^2*mh^2
      *s13*s23*s24 + 1/4*denom(1/2*s12)*mt^2*mh^2*s13*s23^2 + 1/2*denom(1/2*
      s12)*mt^2*mh^2*s13*s14*s23 - 1/4*denom(1/2*s12)*mt^2*mh^2*s13^2*s24 - 1/
      4*denom(1/2*s12)*mt^2*mh^2*s13^2*s23 - 1/2*denom(1/2*s12)*mt^2*mh^2*s12*
      s23*s24 - 1/2*denom(1/2*s12)*mt^2*mh^2*s12*s23^2 - 3/4*denom(1/2*s12)*
      mt^2*mh^2*s12*s14*s23 - 3/4*denom(1/2*s12)*mt^2*mh^2*s12*s13*s24 - 3/2*
      denom(1/2*s12)*mt^2*mh^2*s12*s13*s23 - 1/2*denom(1/2*s12)*mt^2*mh^2*s12*
      s13*s14 - 1/2*denom(1/2*s12)*mt^2*mh^2*s12*s13^2 - 1/2*denom(1/2*s12)*
      mt^2*mh^2*s12^2*s23 - 1/2*denom(1/2*s12)*mt^2*mh^2*s12^2*s13 + 1/4*
      denom(1/2*s12)*mt^2*mh^4*s12*s23 + 1/4*denom(1/2*s12)*mt^2*mh^4*s12*s13
       - 1/4*denom(1/2*s12)*mt^4*s23*s24^2 + 1/4*denom(1/2*s12)*mt^4*s23^3 + 1/
      4*denom(1/2*s12)*mt^4*s14*s23*s24 + 7/4*denom(1/2*s12)*mt^4*s14*s23^2 + 
      denom(1/2*s12)*mt^4*s14^2*s23 - denom(1/2*s12)*mt^4*s13*s24^2 - 7/4*
      denom(1/2*s12)*mt^4*s13*s23*s24 + 3/4*denom(1/2*s12)*mt^4*s13*s23^2 - 1/
      4*denom(1/2*s12)*mt^4*s13*s14*s24 + 7/4*denom(1/2*s12)*mt^4*s13*s14*s23
       + 1/4*denom(1/2*s12)*mt^4*s13*s14^2 - 7/4*denom(1/2*s12)*mt^4*s13^2*s24
       - 3/4*denom(1/2*s12)*mt^4*s13^2*s23 - 1/4*denom(1/2*s12)*mt^4*s13^3 - 1/
      2*denom(1/2*s12)*mt^4*s12*s24^2 - 7/4*denom(1/2*s12)*mt^4*s12*s23*s24 - 
      3/4*denom(1/2*s12)*mt^4*s12*s23^2 - denom(1/2*s12)*mt^4*s12*s14*s24 - 
      denom(1/2*s12)*mt^4*s12*s14*s23 - 1/2*denom(1/2*s12)*mt^4*s12*s14^2 - 2*
      denom(1/2*s12)*mt^4*s12*s13*s24 - 2*denom(1/2*s12)*mt^4*s12*s13*s23 - 5/
      4*denom(1/2*s12)*mt^4*s12*s13*s14 - 5/4*denom(1/2*s12)*mt^4*s12*s13^2 - 
      3/4*denom(1/2*s12)*mt^4*s12^2*s24 - 5/4*denom(1/2*s12)*mt^4*s12^2*s23 - 
      3/4*denom(1/2*s12)*mt^4*s12^2*s14 - 5/4*denom(1/2*s12)*mt^4*s12^2*s13 - 
      1/4*denom(1/2*s12)*mt^4*s12^3 + 1/4*denom(1/2*s12)*mt^4*mh^2*s23*s24 - 1/
      4*denom(1/2*s12)*mt^4*mh^2*s23^2 - 1/2*denom(1/2*s12)*mt^4*mh^2*s14*s23
       + 1/2*denom(1/2*s12)*mt^4*mh^2*s13*s24 - 1/4*denom(1/2*s12)*mt^4*mh^2*
      s13*s14 + 1/4*denom(1/2*s12)*mt^4*mh^2*s13^2 + 3/4*denom(1/2*s12)*mt^4*
      mh^2*s12*s24 + 5/4*denom(1/2*s12)*mt^4*mh^2*s12*s23 + 3/4*denom(1/2*s12)
      *mt^4*mh^2*s12*s14 + 5/4*denom(1/2*s12)*mt^4*mh^2*s12*s13 + 1/2*denom(1/
      2*s12)*mt^4*mh^2*s12^2 - 1/4*denom(1/2*s12)*mt^4*mh^4*s12 + 1/2*denom(1/
      2*s12)*mt^6*s24^2 + 1/2*denom(1/2*s12)*mt^6*s23*s24 - denom(1/2*s12)*
      mt^6*s23^2 - 5/2*denom(1/2*s12)*mt^6*s14*s23 - 1/2*denom(1/2*s12)*mt^6*
      s14^2 + 5/2*denom(1/2*s12)*mt^6*s13*s24 - 1/2*denom(1/2*s12)*mt^6*s13*
      s14 + denom(1/2*s12)*mt^6*s13^2 + 5/4*denom(1/2*s12)*mt^6*s12*s24 + 3/4*
      denom(1/2*s12)*mt^6*s12*s23 + 3/4*denom(1/2*s12)*mt^6*s12*s14 + 5/4*
      denom(1/2*s12)*mt^6*s12*s13 + denom(1/2*s12)*mt^6*s12^2 - 1/4*denom(1/2*
      s12)*mt^6*mh^2*s24 + 1/4*denom(1/2*s12)*mt^6*mh^2*s23 + 1/4*denom(1/2*
      s12)*mt^6*mh^2*s14 - 1/4*denom(1/2*s12)*mt^6*mh^2*s13 - denom(1/2*s12)*
      mt^6*mh^2*s12 - denom(1/2*s12)*mt^8*s24 + denom(1/2*s12)*mt^8*s23 + 
      denom(1/2*s12)*mt^8*s14 - denom(1/2*s12)*mt^8*s13 + 1/8*denom(1/4*s12^2)
      *s13*s14^2*s23^3 - 1/8*denom(1/4*s12^2)*s13^3*s23*s24^2 - 1/8*denom(1/4*
      s12^2)*s12*s13*s14*s23^2*s24 - 1/8*denom(1/4*s12^2)*s12*s13*s14*s23^3 - 
      1/8*denom(1/4*s12^2)*s12*s13*s14^2*s23^2 - 1/8*denom(1/4*s12^2)*s12*
      s13^2*s23*s24^2 - 1/8*denom(1/4*s12^2)*s12*s13^2*s23^2*s24 - 1/8*denom(1/
      4*s12^2)*s12*s13^2*s14*s23*s24 - 1/8*denom(1/4*s12^2)*s12*s13^2*s14*
      s23^2 - 1/8*denom(1/4*s12^2)*s12*s13^3*s23*s24 - 1/8*denom(1/4*s12^2)*
      s12^2*s13*s14*s23^2 - 1/8*denom(1/4*s12^2)*s12^2*s13^2*s23*s24 + 1/8*
      denom(1/4*s12^2)*mh^2*s12*s13*s14*s23^2 + 1/8*denom(1/4*s12^2)*mh^2*s12*
      s13^2*s23*s24 - 1/8*denom(1/4*s12^2)*mt^2*s14^2*s23^3 - 1/4*denom(1/4*
      s12^2)*mt^2*s13*s14*s23^3 - 3/8*denom(1/4*s12^2)*mt^2*s13*s14^2*s23^2 + 
      3/8*denom(1/4*s12^2)*mt^2*s13^2*s23*s24^2 + 1/8*denom(1/4*s12^2)*mt^2*
      s13^3*s24^2 + 1/4*denom(1/4*s12^2)*mt^2*s13^3*s23*s24 + 1/8*denom(1/4*
      s12^2)*mt^2*s12*s14*s23^2*s24 + 1/8*denom(1/4*s12^2)*mt^2*s12*s14*s23^3
       + 1/8*denom(1/4*s12^2)*mt^2*s12*s14^2*s23^2 + 1/4*denom(1/4*s12^2)*mt^2
      *s12*s13*s23*s24^2 + 3/8*denom(1/4*s12^2)*mt^2*s12*s13*s23^2*s24 + 1/8*
      denom(1/4*s12^2)*mt^2*s12*s13*s23^3 + 1/2*denom(1/4*s12^2)*mt^2*s12*s13*
      s14*s23*s24 + 1/2*denom(1/4*s12^2)*mt^2*s12*s13*s14*s23^2 + 1/4*denom(1/
      4*s12^2)*mt^2*s12*s13*s14^2*s23 + 1/8*denom(1/4*s12^2)*mt^2*s12*s13^2*
      s24^2 + 1/2*denom(1/4*s12^2)*mt^2*s12*s13^2*s23*s24 + 1/4*denom(1/4*
      s12^2)*mt^2*s12*s13^2*s23^2 + 1/8*denom(1/4*s12^2)*mt^2*s12*s13^2*s14*
      s24 + 3/8*denom(1/4*s12^2)*mt^2*s12*s13^2*s14*s23 + 1/8*denom(1/4*s12^2)
      *mt^2*s12*s13^3*s24 + 1/8*denom(1/4*s12^2)*mt^2*s12*s13^3*s23 + 1/8*
      denom(1/4*s12^2)*mt^2*s12^2*s14*s23^2 + 1/4*denom(1/4*s12^2)*mt^2*s12^2*
      s13*s23*s24 + 1/8*denom(1/4*s12^2)*mt^2*s12^2*s13*s23^2 + 1/4*denom(1/4*
      s12^2)*mt^2*s12^2*s13*s14*s23 + 1/8*denom(1/4*s12^2)*mt^2*s12^2*s13^2*
      s24 + 1/8*denom(1/4*s12^2)*mt^2*s12^2*s13^2*s23 - 1/8*denom(1/4*s12^2)*
      mt^2*mh^2*s12*s14*s23^2 - 1/4*denom(1/4*s12^2)*mt^2*mh^2*s12*s13*s23*s24
       - 1/8*denom(1/4*s12^2)*mt^2*mh^2*s12*s13*s23^2 - 1/4*denom(1/4*s12^2)*
      mt^2*mh^2*s12*s13*s14*s23 - 1/8*denom(1/4*s12^2)*mt^2*mh^2*s12*s13^2*s24
       - 1/8*denom(1/4*s12^2)*mt^2*mh^2*s12*s13^2*s23 + 1/4*denom(1/4*s12^2)*
      mt^4*s14*s23^3 + 3/8*denom(1/4*s12^2)*mt^4*s14^2*s23^2 - 3/8*denom(1/4*
      s12^2)*mt^4*s13*s23*s24^2 + 1/8*denom(1/4*s12^2)*mt^4*s13*s23^3 + 3/4*
      denom(1/4*s12^2)*mt^4*s13*s14*s23^2 + 3/8*denom(1/4*s12^2)*mt^4*s13*
      s14^2*s23 - 3/8*denom(1/4*s12^2)*mt^4*s13^2*s24^2 - 3/4*denom(1/4*s12^2)
      *mt^4*s13^2*s23*s24 - 1/4*denom(1/4*s12^2)*mt^4*s13^3*s24 - 1/8*denom(1/
      4*s12^2)*mt^4*s13^3*s23 - 1/8*denom(1/4*s12^2)*mt^4*s12*s23*s24^2 - 1/4*
      denom(1/4*s12^2)*mt^4*s12*s23^2*s24 - 1/8*denom(1/4*s12^2)*mt^4*s12*
      s23^3 - 3/8*denom(1/4*s12^2)*mt^4*s12*s14*s23*s24 - 3/8*denom(1/4*s12^2)
      *mt^4*s12*s14*s23^2 - 1/4*denom(1/4*s12^2)*mt^4*s12*s14^2*s23 - 1/4*
      denom(1/4*s12^2)*mt^4*s12*s13*s24^2 - 7/8*denom(1/4*s12^2)*mt^4*s12*s13*
      s23*s24 - 5/8*denom(1/4*s12^2)*mt^4*s12*s13*s23^2 - 3/8*denom(1/4*s12^2)
      *mt^4*s12*s13*s14*s24 - 7/8*denom(1/4*s12^2)*mt^4*s12*s13*s14*s23 - 1/8*
      denom(1/4*s12^2)*mt^4*s12*s13*s14^2 - 3/8*denom(1/4*s12^2)*mt^4*s12*
      s13^2*s24 - 5/8*denom(1/4*s12^2)*mt^4*s12*s13^2*s23 - 1/4*denom(1/4*
      s12^2)*mt^4*s12*s13^2*s14 - 1/8*denom(1/4*s12^2)*mt^4*s12*s13^3 - 1/8*
      denom(1/4*s12^2)*mt^4*s12^2*s23*s24 - 1/8*denom(1/4*s12^2)*mt^4*s12^2*
      s23^2 - 1/4*denom(1/4*s12^2)*mt^4*s12^2*s14*s23 - 1/4*denom(1/4*s12^2)*
      mt^4*s12^2*s13*s24 - 1/2*denom(1/4*s12^2)*mt^4*s12^2*s13*s23 - 1/8*
      denom(1/4*s12^2)*mt^4*s12^2*s13*s14 - 1/8*denom(1/4*s12^2)*mt^4*s12^2*
      s13^2 + 1/8*denom(1/4*s12^2)*mt^4*mh^2*s12*s23*s24 + 1/8*denom(1/4*s12^2
      )*mt^4*mh^2*s12*s23^2 + 1/4*denom(1/4*s12^2)*mt^4*mh^2*s12*s14*s23 + 1/4
      *denom(1/4*s12^2)*mt^4*mh^2*s12*s13*s24 + 1/2*denom(1/4*s12^2)*mt^4*mh^2
      *s12*s13*s23 + 1/8*denom(1/4*s12^2)*mt^4*mh^2*s12*s13*s14 + 1/8*denom(1/
      4*s12^2)*mt^4*mh^2*s12*s13^2 + 1/8*denom(1/4*s12^2)*mt^6*s23*s24^2 - 1/8
      *denom(1/4*s12^2)*mt^6*s23^3 - 3/4*denom(1/4*s12^2)*mt^6*s14*s23^2 - 3/8
      *denom(1/4*s12^2)*mt^6*s14^2*s23 + 3/8*denom(1/4*s12^2)*mt^6*s13*s24^2
       + 3/4*denom(1/4*s12^2)*mt^6*s13*s23*s24 - 3/8*denom(1/4*s12^2)*mt^6*s13
      *s23^2 - 3/4*denom(1/4*s12^2)*mt^6*s13*s14*s23 - 1/8*denom(1/4*s12^2)*
      mt^6*s13*s14^2 + 3/4*denom(1/4*s12^2)*mt^6*s13^2*s24 + 3/8*denom(1/4*
      s12^2)*mt^6*s13^2*s23 + 1/8*denom(1/4*s12^2)*mt^6*s13^3 + 1/8*denom(1/4*
      s12^2)*mt^6*s12*s24^2 + 1/2*denom(1/4*s12^2)*mt^6*s12*s23*s24 + 3/8*
      denom(1/4*s12^2)*mt^6*s12*s23^2 + 1/4*denom(1/4*s12^2)*mt^6*s12*s14*s24
       + 1/2*denom(1/4*s12^2)*mt^6*s12*s14*s23 + 1/8*denom(1/4*s12^2)*mt^6*s12
      *s14^2 + 1/2*denom(1/4*s12^2)*mt^6*s12*s13*s24 + 3/4*denom(1/4*s12^2)*
      mt^6*s12*s13*s23 + 1/2*denom(1/4*s12^2)*mt^6*s12*s13*s14 + 3/8*denom(1/4
      *s12^2)*mt^6*s12*s13^2 + 1/8*denom(1/4*s12^2)*mt^6*s12^2*s24 + 3/8*
      denom(1/4*s12^2)*mt^6*s12^2*s23 + 1/8*denom(1/4*s12^2)*mt^6*s12^2*s14 + 
      3/8*denom(1/4*s12^2)*mt^6*s12^2*s13 - 1/8*denom(1/4*s12^2)*mt^6*mh^2*s12
      *s24 - 3/8*denom(1/4*s12^2)*mt^6*mh^2*s12*s23 - 1/8*denom(1/4*s12^2)*
      mt^6*mh^2*s12*s14 - 3/8*denom(1/4*s12^2)*mt^6*mh^2*s12*s13 - 1/8*denom(1/
      4*s12^2)*mt^8*s24^2 - 1/4*denom(1/4*s12^2)*mt^8*s23*s24 + 3/8*denom(1/4*
      s12^2)*mt^8*s23^2 + 3/4*denom(1/4*s12^2)*mt^8*s14*s23 + 1/8*denom(1/4*
      s12^2)*mt^8*s14^2 - 3/4*denom(1/4*s12^2)*mt^8*s13*s24 + 1/4*denom(1/4*
      s12^2)*mt^8*s13*s14 - 3/8*denom(1/4*s12^2)*mt^8*s13^2 - 1/4*denom(1/4*
      s12^2)*mt^8*s12*s24 - 1/4*denom(1/4*s12^2)*mt^8*s12*s23 - 1/4*denom(1/4*
      s12^2)*mt^8*s12*s14 - 1/4*denom(1/4*s12^2)*mt^8*s12*s13 - 1/4*denom(1/4*
      s12^2)*mt^8*s12^2 + 1/4*denom(1/4*s12^2)*mt^8*mh^2*s12 + 1/4*denom(1/4*
      s12^2)*mt^10*s24 - 1/4*denom(1/4*s12^2)*mt^10*s23 - 1/4*denom(1/4*s12^2)
      *mt^10*s14 + 1/4*denom(1/4*s12^2)*mt^10*s13;
 
 .sort
id KMatrix(3,14) =  1/4*s14*s23*s24^2 + 1/2*s14*s23^2*s24 + 1/4*s14*s23^3 + 1/
      2*s14^2*s23*s24 + 1/2*s14^2*s23^2 + 1/4*s14^3*s23 - 1/4*s13*s24^3 - 1/2*
      s13*s23*s24^2 - 1/4*s13*s23^2*s24 - 1/2*s13*s14*s24^2 + 1/2*s13*s14*
      s23^2 - 1/4*s13*s14^2*s24 + 1/2*s13*s14^2*s23 - 1/2*s13^2*s24^2 - 1/2*
      s13^2*s23*s24 - 1/2*s13^2*s14*s24 + 1/4*s13^2*s14*s23 - 1/4*s13^3*s24 - 
      1/4*s12*s24^3 - 3/4*s12*s23*s24^2 - 3/4*s12*s23^2*s24 - 1/4*s12*s23^3 - 
      3/4*s12*s14*s24^2 - s12*s14*s23*s24 - 1/4*s12*s14*s23^2 - 3/4*s12*s14^2*
      s24 - 1/4*s12*s14^2*s23 - 1/4*s12*s14^3 - 5/4*s12*s13*s24^2 - 2*s12*s13*
      s23*s24 - 3/4*s12*s13*s23^2 - 2*s12*s13*s14*s24 - s12*s13*s14*s23 - 3/4*
      s12*s13*s14^2 - 5/4*s12*s13^2*s24 - 3/4*s12*s13^2*s23 - 3/4*s12*s13^2*
      s14 - 1/4*s12*s13^3 - 3/4*s12^2*s24^2 - 3/2*s12^2*s23*s24 - 3/4*s12^2*
      s23^2 - 3/2*s12^2*s14*s24 - 5/4*s12^2*s14*s23 - 3/4*s12^2*s14^2 - 7/4*
      s12^2*s13*s24 - 3/2*s12^2*s13*s23 - 3/2*s12^2*s13*s14 - 3/4*s12^2*s13^2
       - 3/4*s12^3*s24 - 3/4*s12^3*s23 - 3/4*s12^3*s14 - 3/4*s12^3*s13 - 1/4*
      s12^4 - 1/2*mh^2*s14*s23*s24 - 1/2*mh^2*s14*s23^2 - 1/2*mh^2*s14^2*s23
       + 1/2*mh^2*s13*s24^2 + 1/2*mh^2*s13*s23*s24 + 1/2*mh^2*s13*s14*s24 - 1/
      2*mh^2*s13*s14*s23 + 1/2*mh^2*s13^2*s24 + 3/4*mh^2*s12*s24^2 + 3/2*mh^2*
      s12*s23*s24 + 3/4*mh^2*s12*s23^2 + 3/2*mh^2*s12*s14*s24 + mh^2*s12*s14*
      s23 + 3/4*mh^2*s12*s14^2 + 2*mh^2*s12*s13*s24 + 3/2*mh^2*s12*s13*s23 + 3/
      2*mh^2*s12*s13*s14 + 3/4*mh^2*s12*s13^2 + 3/2*mh^2*s12^2*s24 + 3/2*mh^2*
      s12^2*s23 + 3/2*mh^2*s12^2*s14 + 3/2*mh^2*s12^2*s13 + 3/4*mh^2*s12^3 + 1/
      4*mh^4*s14*s23 - 1/4*mh^4*s13*s24 - 3/4*mh^4*s12*s24 - 3/4*mh^4*s12*s23
       - 3/4*mh^4*s12*s14 - 3/4*mh^4*s12*s13 - 3/4*mh^4*s12^2 + 1/4*mh^6*s12
       + 1/4*mt^2*s24^3 + 1/4*mt^2*s23*s24^2 - 1/4*mt^2*s23^2*s24 - 1/4*mt^2*
      s23^3 + 1/4*mt^2*s14*s24^2 - 3/2*mt^2*s14*s23*s24 - 7/4*mt^2*s14*s23^2
       - 1/4*mt^2*s14^2*s24 - 7/4*mt^2*s14^2*s23 - 1/4*mt^2*s14^3 + 7/4*mt^2*
      s13*s24^2 + 3/2*mt^2*s13*s23*s24 - 1/4*mt^2*s13*s23^2 + 3/2*mt^2*s13*s14
      *s24 - 3/2*mt^2*s13*s14*s23 - 1/4*mt^2*s13*s14^2 + 7/4*mt^2*s13^2*s24 + 
      1/4*mt^2*s13^2*s23 + 1/4*mt^2*s13^2*s14 + 1/4*mt^2*s13^3 + 3/2*mt^2*s12*
      s24^2 + 2*mt^2*s12*s23*s24 + 1/2*mt^2*s12*s23^2 + 2*mt^2*s12*s14*s24 + 1/
      2*mt^2*s12*s14^2 + 4*mt^2*s12*s13*s24 + 2*mt^2*s12*s13*s23 + 2*mt^2*s12*
      s13*s14 + 3/2*mt^2*s12*s13^2 + 9/4*mt^2*s12^2*s24 + 7/4*mt^2*s12^2*s23
       + 7/4*mt^2*s12^2*s14 + 9/4*mt^2*s12^2*s13 + mt^2*s12^3 - 1/2*mt^2*mh^2*
      s24^2 + 1/2*mt^2*mh^2*s23^2 + 2*mt^2*mh^2*s14*s23 + 1/2*mt^2*mh^2*s14^2
       - 2*mt^2*mh^2*s13*s24 - 1/2*mt^2*mh^2*s13^2 - 5/2*mt^2*mh^2*s12*s24 - 3/
      2*mt^2*mh^2*s12*s23 - 3/2*mt^2*mh^2*s12*s14 - 5/2*mt^2*mh^2*s12*s13 - 2*
      mt^2*mh^2*s12^2 + 1/4*mt^2*mh^4*s24 - 1/4*mt^2*mh^4*s23 - 1/4*mt^2*mh^4*
      s14 + 1/4*mt^2*mh^4*s13 + mt^2*mh^4*s12 - mt^4*s24^2 + mt^4*s23^2 + 3*
      mt^4*s14*s23 + mt^4*s14^2 - 3*mt^4*s13*s24 - mt^4*s13^2 - 2*mt^4*s12*s24
       - 2*mt^4*s12*s13 - mt^4*s12^2 + mt^4*mh^2*s24 - mt^4*mh^2*s23 - mt^4*
      mh^2*s14 + mt^4*mh^2*s13 + mt^4*mh^2*s12 + mt^6*s24 - mt^6*s23 - mt^6*
      s14 + mt^6*s13 + 1/4*denom(1/2*s12)*s14^2*s23^2*s24 + 1/4*denom(1/2*s12)
      *s14^2*s23^3 + 1/4*denom(1/2*s12)*s14^3*s23^2 + 1/4*denom(1/2*s12)*s13*
      s14^2*s23^2 - 1/4*denom(1/2*s12)*s13^2*s24^3 - 1/4*denom(1/2*s12)*s13^2*
      s23*s24^2 - 1/4*denom(1/2*s12)*s13^2*s14*s24^2 - 1/4*denom(1/2*s12)*
      s13^3*s24^2 - 1/4*denom(1/2*s12)*s12*s14*s23*s24^2 - 1/2*denom(1/2*s12)*
      s12*s14*s23^2*s24 - 1/4*denom(1/2*s12)*s12*s14*s23^3 - 1/2*denom(1/2*s12
      )*s12*s14^2*s23*s24 - 1/4*denom(1/2*s12)*s12*s14^2*s23^2 - 1/4*denom(1/2
      *s12)*s12*s14^3*s23 - 1/4*denom(1/2*s12)*s12*s13*s24^3 - 1/2*denom(1/2*
      s12)*s12*s13*s23*s24^2 - 1/4*denom(1/2*s12)*s12*s13*s23^2*s24 - 1/2*
      denom(1/2*s12)*s12*s13*s14*s24^2 - denom(1/2*s12)*s12*s13*s14*s23*s24 - 
      1/2*denom(1/2*s12)*s12*s13*s14*s23^2 - 1/4*denom(1/2*s12)*s12*s13*s14^2*
      s24 - 1/2*denom(1/2*s12)*s12*s13*s14^2*s23 - 3/4*denom(1/2*s12)*s12*
      s13^2*s24^2 - 1/2*denom(1/2*s12)*s12*s13^2*s23*s24 - 1/2*denom(1/2*s12)*
      s12*s13^2*s14*s24 - 1/4*denom(1/2*s12)*s12*s13^2*s14*s23 - 1/4*denom(1/2
      *s12)*s12*s13^3*s24 - 1/2*denom(1/2*s12)*s12^2*s14*s23*s24 - 1/2*denom(1/
      2*s12)*s12^2*s14*s23^2 - 1/2*denom(1/2*s12)*s12^2*s14^2*s23 - 1/2*denom(
      1/2*s12)*s12^2*s13*s24^2 - 1/2*denom(1/2*s12)*s12^2*s13*s23*s24 - 1/2*
      denom(1/2*s12)*s12^2*s13*s14*s24 - 1/2*denom(1/2*s12)*s12^2*s13*s14*s23
       - 1/2*denom(1/2*s12)*s12^2*s13^2*s24 - 1/4*denom(1/2*s12)*s12^3*s14*s23
       - 1/4*denom(1/2*s12)*s12^3*s13*s24 - 1/4*denom(1/2*s12)*mh^2*s14^2*
      s23^2 + 1/4*denom(1/2*s12)*mh^2*s13^2*s24^2 + 1/2*denom(1/2*s12)*mh^2*
      s12*s14*s23*s24 + 1/2*denom(1/2*s12)*mh^2*s12*s14*s23^2 + 1/2*denom(1/2*
      s12)*mh^2*s12*s14^2*s23 + 1/2*denom(1/2*s12)*mh^2*s12*s13*s24^2 + 1/2*
      denom(1/2*s12)*mh^2*s12*s13*s23*s24 + 1/2*denom(1/2*s12)*mh^2*s12*s13*
      s14*s24 + 1/2*denom(1/2*s12)*mh^2*s12*s13*s14*s23 + 1/2*denom(1/2*s12)*
      mh^2*s12*s13^2*s24 + 1/2*denom(1/2*s12)*mh^2*s12^2*s14*s23 + 1/2*denom(1/
      2*s12)*mh^2*s12^2*s13*s24 - 1/4*denom(1/2*s12)*mh^4*s12*s14*s23 - 1/4*
      denom(1/2*s12)*mh^4*s12*s13*s24 - 1/2*denom(1/2*s12)*mt^2*s14*s23^2*s24
       - 1/2*denom(1/2*s12)*mt^2*s14*s23^3 - 1/2*denom(1/2*s12)*mt^2*s14^2*s23
      *s24 - 3/2*denom(1/2*s12)*mt^2*s14^2*s23^2 - 1/2*denom(1/2*s12)*mt^2*
      s14^3*s23 + 1/2*denom(1/2*s12)*mt^2*s13*s24^3 + 1/2*denom(1/2*s12)*mt^2*
      s13*s23*s24^2 + 1/2*denom(1/2*s12)*mt^2*s13*s14*s24^2 - 1/2*denom(1/2*
      s12)*mt^2*s13*s14*s23^2 - 1/2*denom(1/2*s12)*mt^2*s13*s14^2*s23 + 3/2*
      denom(1/2*s12)*mt^2*s13^2*s24^2 + 1/2*denom(1/2*s12)*mt^2*s13^2*s23*s24
       + 1/2*denom(1/2*s12)*mt^2*s13^2*s14*s24 + 1/2*denom(1/2*s12)*mt^2*s13^3
      *s24 + 1/4*denom(1/2*s12)*mt^2*s12*s24^3 + 3/4*denom(1/2*s12)*mt^2*s12*
      s23*s24^2 + 3/4*denom(1/2*s12)*mt^2*s12*s23^2*s24 + 1/4*denom(1/2*s12)*
      mt^2*s12*s23^3 + 3/4*denom(1/2*s12)*mt^2*s12*s14*s24^2 + 2*denom(1/2*s12
      )*mt^2*s12*s14*s23*s24 + 3/4*denom(1/2*s12)*mt^2*s12*s14*s23^2 + 3/4*
      denom(1/2*s12)*mt^2*s12*s14^2*s24 + 3/4*denom(1/2*s12)*mt^2*s12*s14^2*
      s23 + 1/4*denom(1/2*s12)*mt^2*s12*s14^3 + 7/4*denom(1/2*s12)*mt^2*s12*
      s13*s24^2 + 2*denom(1/2*s12)*mt^2*s12*s13*s23*s24 + 3/4*denom(1/2*s12)*
      mt^2*s12*s13*s23^2 + 2*denom(1/2*s12)*mt^2*s12*s13*s14*s24 + 2*denom(1/2
      *s12)*mt^2*s12*s13*s14*s23 + 3/4*denom(1/2*s12)*mt^2*s12*s13*s14^2 + 7/4
      *denom(1/2*s12)*mt^2*s12*s13^2*s24 + 3/4*denom(1/2*s12)*mt^2*s12*s13^2*
      s23 + 3/4*denom(1/2*s12)*mt^2*s12*s13^2*s14 + 1/4*denom(1/2*s12)*mt^2*
      s12*s13^3 + 1/2*denom(1/2*s12)*mt^2*s12^2*s24^2 + denom(1/2*s12)*mt^2*
      s12^2*s23*s24 + 1/2*denom(1/2*s12)*mt^2*s12^2*s23^2 + denom(1/2*s12)*
      mt^2*s12^2*s14*s24 + 3/2*denom(1/2*s12)*mt^2*s12^2*s14*s23 + 1/2*denom(1/
      2*s12)*mt^2*s12^2*s14^2 + 3/2*denom(1/2*s12)*mt^2*s12^2*s13*s24 + denom(
      1/2*s12)*mt^2*s12^2*s13*s23 + denom(1/2*s12)*mt^2*s12^2*s13*s14 + 1/2*
      denom(1/2*s12)*mt^2*s12^2*s13^2 + 1/4*denom(1/2*s12)*mt^2*s12^3*s24 + 1/
      4*denom(1/2*s12)*mt^2*s12^3*s23 + 1/4*denom(1/2*s12)*mt^2*s12^3*s14 + 1/
      4*denom(1/2*s12)*mt^2*s12^3*s13 + 1/2*denom(1/2*s12)*mt^2*mh^2*s14*s23^2
       + 1/2*denom(1/2*s12)*mt^2*mh^2*s14^2*s23 - 1/2*denom(1/2*s12)*mt^2*mh^2
      *s13*s24^2 - 1/2*denom(1/2*s12)*mt^2*mh^2*s13^2*s24 - 1/2*denom(1/2*s12)
      *mt^2*mh^2*s12*s24^2 - denom(1/2*s12)*mt^2*mh^2*s12*s23*s24 - 1/2*denom(
      1/2*s12)*mt^2*mh^2*s12*s23^2 - denom(1/2*s12)*mt^2*mh^2*s12*s14*s24 - 3/
      2*denom(1/2*s12)*mt^2*mh^2*s12*s14*s23 - 1/2*denom(1/2*s12)*mt^2*mh^2*
      s12*s14^2 - 3/2*denom(1/2*s12)*mt^2*mh^2*s12*s13*s24 - denom(1/2*s12)*
      mt^2*mh^2*s12*s13*s23 - denom(1/2*s12)*mt^2*mh^2*s12*s13*s14 - 1/2*
      denom(1/2*s12)*mt^2*mh^2*s12*s13^2 - 1/2*denom(1/2*s12)*mt^2*mh^2*s12^2*
      s24 - 1/2*denom(1/2*s12)*mt^2*mh^2*s12^2*s23 - 1/2*denom(1/2*s12)*mt^2*
      mh^2*s12^2*s14 - 1/2*denom(1/2*s12)*mt^2*mh^2*s12^2*s13 + 1/4*denom(1/2*
      s12)*mt^2*mh^4*s12*s24 + 1/4*denom(1/2*s12)*mt^2*mh^4*s12*s23 + 1/4*
      denom(1/2*s12)*mt^2*mh^4*s12*s14 + 1/4*denom(1/2*s12)*mt^2*mh^4*s12*s13
       - 1/4*denom(1/2*s12)*mt^4*s24^3 - 1/4*denom(1/2*s12)*mt^4*s23*s24^2 + 1/
      4*denom(1/2*s12)*mt^4*s23^2*s24 + 1/4*denom(1/2*s12)*mt^4*s23^3 - 1/4*
      denom(1/2*s12)*mt^4*s14*s24^2 + denom(1/2*s12)*mt^4*s14*s23*s24 + 9/4*
      denom(1/2*s12)*mt^4*s14*s23^2 + 1/4*denom(1/2*s12)*mt^4*s14^2*s24 + 9/4*
      denom(1/2*s12)*mt^4*s14^2*s23 + 1/4*denom(1/2*s12)*mt^4*s14^3 - 9/4*
      denom(1/2*s12)*mt^4*s13*s24^2 - denom(1/2*s12)*mt^4*s13*s23*s24 + 1/4*
      denom(1/2*s12)*mt^4*s13*s23^2 - denom(1/2*s12)*mt^4*s13*s14*s24 + denom(
      1/2*s12)*mt^4*s13*s14*s23 + 1/4*denom(1/2*s12)*mt^4*s13*s14^2 - 9/4*
      denom(1/2*s12)*mt^4*s13^2*s24 - 1/4*denom(1/2*s12)*mt^4*s13^2*s23 - 1/4*
      denom(1/2*s12)*mt^4*s13^2*s14 - 1/4*denom(1/2*s12)*mt^4*s13^3 - 5/4*
      denom(1/2*s12)*mt^4*s12*s24^2 - 2*denom(1/2*s12)*mt^4*s12*s23*s24 - 3/4*
      denom(1/2*s12)*mt^4*s12*s23^2 - 2*denom(1/2*s12)*mt^4*s12*s14*s24 - 
      denom(1/2*s12)*mt^4*s12*s14*s23 - 3/4*denom(1/2*s12)*mt^4*s12*s14^2 - 3*
      denom(1/2*s12)*mt^4*s12*s13*s24 - 2*denom(1/2*s12)*mt^4*s12*s13*s23 - 2*
      denom(1/2*s12)*mt^4*s12*s13*s14 - 5/4*denom(1/2*s12)*mt^4*s12*s13^2 - 3/
      2*denom(1/2*s12)*mt^4*s12^2*s24 - 3/2*denom(1/2*s12)*mt^4*s12^2*s23 - 3/
      2*denom(1/2*s12)*mt^4*s12^2*s14 - 3/2*denom(1/2*s12)*mt^4*s12^2*s13 - 1/
      2*denom(1/2*s12)*mt^4*s12^3 + 1/4*denom(1/2*s12)*mt^4*mh^2*s24^2 - 1/4*
      denom(1/2*s12)*mt^4*mh^2*s23^2 - denom(1/2*s12)*mt^4*mh^2*s14*s23 - 1/4*
      denom(1/2*s12)*mt^4*mh^2*s14^2 + denom(1/2*s12)*mt^4*mh^2*s13*s24 + 1/4*
      denom(1/2*s12)*mt^4*mh^2*s13^2 + 3/2*denom(1/2*s12)*mt^4*mh^2*s12*s24 + 
      3/2*denom(1/2*s12)*mt^4*mh^2*s12*s23 + 3/2*denom(1/2*s12)*mt^4*mh^2*s12*
      s14 + 3/2*denom(1/2*s12)*mt^4*mh^2*s12*s13 + denom(1/2*s12)*mt^4*mh^2*
      s12^2 - 1/2*denom(1/2*s12)*mt^4*mh^4*s12 + denom(1/2*s12)*mt^6*s24^2 - 
      denom(1/2*s12)*mt^6*s23^2 - 3*denom(1/2*s12)*mt^6*s14*s23 - denom(1/2*
      s12)*mt^6*s14^2 + 3*denom(1/2*s12)*mt^6*s13*s24 + denom(1/2*s12)*mt^6*
      s13^2 + 3/2*denom(1/2*s12)*mt^6*s12*s24 + 1/2*denom(1/2*s12)*mt^6*s12*
      s23 + 1/2*denom(1/2*s12)*mt^6*s12*s14 + 3/2*denom(1/2*s12)*mt^6*s12*s13
       + denom(1/2*s12)*mt^6*s12^2 - 1/2*denom(1/2*s12)*mt^6*mh^2*s24 + 1/2*
      denom(1/2*s12)*mt^6*mh^2*s23 + 1/2*denom(1/2*s12)*mt^6*mh^2*s14 - 1/2*
      denom(1/2*s12)*mt^6*mh^2*s13 - denom(1/2*s12)*mt^6*mh^2*s12 - denom(1/2*
      s12)*mt^8*s24 + denom(1/2*s12)*mt^8*s23 + denom(1/2*s12)*mt^8*s14 - 
      denom(1/2*s12)*mt^8*s13 + 1/16*denom(1/4*s12^2)*s14^3*s23^3 + 1/16*
      denom(1/4*s12^2)*s13*s14^2*s23^2*s24 - 1/16*denom(1/4*s12^2)*s13^2*s14*
      s23*s24^2 - 1/16*denom(1/4*s12^2)*s13^3*s24^3 - 1/16*denom(1/4*s12^2)*
      s12*s14^2*s23^2*s24 - 1/16*denom(1/4*s12^2)*s12*s14^2*s23^3 - 1/16*
      denom(1/4*s12^2)*s12*s14^3*s23^2 - 1/8*denom(1/4*s12^2)*s12*s13*s14*s23*
      s24^2 - 1/8*denom(1/4*s12^2)*s12*s13*s14*s23^2*s24 - 1/8*denom(1/4*s12^2
      )*s12*s13*s14^2*s23*s24 - 1/16*denom(1/4*s12^2)*s12*s13*s14^2*s23^2 - 1/
      16*denom(1/4*s12^2)*s12*s13^2*s24^3 - 1/16*denom(1/4*s12^2)*s12*s13^2*
      s23*s24^2 - 1/16*denom(1/4*s12^2)*s12*s13^2*s14*s24^2 - 1/8*denom(1/4*
      s12^2)*s12*s13^2*s14*s23*s24 - 1/16*denom(1/4*s12^2)*s12*s13^3*s24^2 - 1/
      16*denom(1/4*s12^2)*s12^2*s14^2*s23^2 - 1/8*denom(1/4*s12^2)*s12^2*s13*
      s14*s23*s24 - 1/16*denom(1/4*s12^2)*s12^2*s13^2*s24^2 + 1/16*denom(1/4*
      s12^2)*mh^2*s12*s14^2*s23^2 + 1/8*denom(1/4*s12^2)*mh^2*s12*s13*s14*s23*
      s24 + 1/16*denom(1/4*s12^2)*mh^2*s12*s13^2*s24^2 - 1/16*denom(1/4*s12^2)
      *mt^2*s14^2*s23^2*s24 - 3/16*denom(1/4*s12^2)*mt^2*s14^2*s23^3 - 3/16*
      denom(1/4*s12^2)*mt^2*s14^3*s23^2 + 1/8*denom(1/4*s12^2)*mt^2*s13*s14*
      s23*s24^2 - 1/8*denom(1/4*s12^2)*mt^2*s13*s14*s23^2*s24 - 1/8*denom(1/4*
      s12^2)*mt^2*s13*s14^2*s23*s24 - 1/16*denom(1/4*s12^2)*mt^2*s13*s14^2*
      s23^2 + 3/16*denom(1/4*s12^2)*mt^2*s13^2*s24^3 + 1/16*denom(1/4*s12^2)*
      mt^2*s13^2*s23*s24^2 + 1/16*denom(1/4*s12^2)*mt^2*s13^2*s14*s24^2 + 1/8*
      denom(1/4*s12^2)*mt^2*s13^2*s14*s23*s24 + 3/16*denom(1/4*s12^2)*mt^2*
      s13^3*s24^2 + 1/8*denom(1/4*s12^2)*mt^2*s12*s14*s23*s24^2 + 1/4*denom(1/
      4*s12^2)*mt^2*s12*s14*s23^2*s24 + 1/8*denom(1/4*s12^2)*mt^2*s12*s14*
      s23^3 + 1/4*denom(1/4*s12^2)*mt^2*s12*s14^2*s23*s24 + 1/4*denom(1/4*
      s12^2)*mt^2*s12*s14^2*s23^2 + 1/8*denom(1/4*s12^2)*mt^2*s12*s14^3*s23 + 
      1/8*denom(1/4*s12^2)*mt^2*s12*s13*s24^3 + 1/4*denom(1/4*s12^2)*mt^2*s12*
      s13*s23*s24^2 + 1/8*denom(1/4*s12^2)*mt^2*s12*s13*s23^2*s24 + 1/4*denom(
      1/4*s12^2)*mt^2*s12*s13*s14*s24^2 + 1/2*denom(1/4*s12^2)*mt^2*s12*s13*
      s14*s23*s24 + 1/4*denom(1/4*s12^2)*mt^2*s12*s13*s14*s23^2 + 1/8*denom(1/
      4*s12^2)*mt^2*s12*s13*s14^2*s24 + 1/4*denom(1/4*s12^2)*mt^2*s12*s13*
      s14^2*s23 + 1/4*denom(1/4*s12^2)*mt^2*s12*s13^2*s24^2 + 1/4*denom(1/4*
      s12^2)*mt^2*s12*s13^2*s23*s24 + 1/4*denom(1/4*s12^2)*mt^2*s12*s13^2*s14*
      s24 + 1/8*denom(1/4*s12^2)*mt^2*s12*s13^2*s14*s23 + 1/8*denom(1/4*s12^2)
      *mt^2*s12*s13^3*s24 + 1/8*denom(1/4*s12^2)*mt^2*s12^2*s14*s23*s24 + 1/8*
      denom(1/4*s12^2)*mt^2*s12^2*s14*s23^2 + 1/8*denom(1/4*s12^2)*mt^2*s12^2*
      s14^2*s23 + 1/8*denom(1/4*s12^2)*mt^2*s12^2*s13*s24^2 + 1/8*denom(1/4*
      s12^2)*mt^2*s12^2*s13*s23*s24 + 1/8*denom(1/4*s12^2)*mt^2*s12^2*s13*s14*
      s24 + 1/8*denom(1/4*s12^2)*mt^2*s12^2*s13*s14*s23 + 1/8*denom(1/4*s12^2)
      *mt^2*s12^2*s13^2*s24 - 1/8*denom(1/4*s12^2)*mt^2*mh^2*s12*s14*s23*s24
       - 1/8*denom(1/4*s12^2)*mt^2*mh^2*s12*s14*s23^2 - 1/8*denom(1/4*s12^2)*
      mt^2*mh^2*s12*s14^2*s23 - 1/8*denom(1/4*s12^2)*mt^2*mh^2*s12*s13*s24^2
       - 1/8*denom(1/4*s12^2)*mt^2*mh^2*s12*s13*s23*s24 - 1/8*denom(1/4*s12^2)
      *mt^2*mh^2*s12*s13*s14*s24 - 1/8*denom(1/4*s12^2)*mt^2*mh^2*s12*s13*s14*
      s23 - 1/8*denom(1/4*s12^2)*mt^2*mh^2*s12*s13^2*s24 - 1/16*denom(1/4*
      s12^2)*mt^4*s14*s23*s24^2 + 1/8*denom(1/4*s12^2)*mt^4*s14*s23^2*s24 + 3/
      16*denom(1/4*s12^2)*mt^4*s14*s23^3 + 1/8*denom(1/4*s12^2)*mt^4*s14^2*s23
      *s24 + 5/8*denom(1/4*s12^2)*mt^4*s14^2*s23^2 + 3/16*denom(1/4*s12^2)*
      mt^4*s14^3*s23 - 3/16*denom(1/4*s12^2)*mt^4*s13*s24^3 - 1/8*denom(1/4*
      s12^2)*mt^4*s13*s23*s24^2 + 1/16*denom(1/4*s12^2)*mt^4*s13*s23^2*s24 - 1/
      8*denom(1/4*s12^2)*mt^4*s13*s14*s24^2 + 1/8*denom(1/4*s12^2)*mt^4*s13*
      s14*s23^2 + 1/16*denom(1/4*s12^2)*mt^4*s13*s14^2*s24 + 1/8*denom(1/4*
      s12^2)*mt^4*s13*s14^2*s23 - 5/8*denom(1/4*s12^2)*mt^4*s13^2*s24^2 - 1/8*
      denom(1/4*s12^2)*mt^4*s13^2*s23*s24 - 1/8*denom(1/4*s12^2)*mt^4*s13^2*
      s14*s24 - 1/16*denom(1/4*s12^2)*mt^4*s13^2*s14*s23 - 3/16*denom(1/4*
      s12^2)*mt^4*s13^3*s24 - 1/16*denom(1/4*s12^2)*mt^4*s12*s24^3 - 3/16*
      denom(1/4*s12^2)*mt^4*s12*s23*s24^2 - 3/16*denom(1/4*s12^2)*mt^4*s12*
      s23^2*s24 - 1/16*denom(1/4*s12^2)*mt^4*s12*s23^3 - 3/16*denom(1/4*s12^2)
      *mt^4*s12*s14*s24^2 - 5/8*denom(1/4*s12^2)*mt^4*s12*s14*s23*s24 - 7/16*
      denom(1/4*s12^2)*mt^4*s12*s14*s23^2 - 3/16*denom(1/4*s12^2)*mt^4*s12*
      s14^2*s24 - 7/16*denom(1/4*s12^2)*mt^4*s12*s14^2*s23 - 1/16*denom(1/4*
      s12^2)*mt^4*s12*s14^3 - 7/16*denom(1/4*s12^2)*mt^4*s12*s13*s24^2 - 5/8*
      denom(1/4*s12^2)*mt^4*s12*s13*s23*s24 - 3/16*denom(1/4*s12^2)*mt^4*s12*
      s13*s23^2 - 5/8*denom(1/4*s12^2)*mt^4*s12*s13*s14*s24 - 5/8*denom(1/4*
      s12^2)*mt^4*s12*s13*s14*s23 - 3/16*denom(1/4*s12^2)*mt^4*s12*s13*s14^2
       - 7/16*denom(1/4*s12^2)*mt^4*s12*s13^2*s24 - 3/16*denom(1/4*s12^2)*mt^4
      *s12*s13^2*s23 - 3/16*denom(1/4*s12^2)*mt^4*s12*s13^2*s14 - 1/16*denom(1/
      4*s12^2)*mt^4*s12*s13^3 - 1/16*denom(1/4*s12^2)*mt^4*s12^2*s24^2 - 1/8*
      denom(1/4*s12^2)*mt^4*s12^2*s23*s24 - 1/16*denom(1/4*s12^2)*mt^4*s12^2*
      s23^2 - 1/8*denom(1/4*s12^2)*mt^4*s12^2*s14*s24 - 3/8*denom(1/4*s12^2)*
      mt^4*s12^2*s14*s23 - 1/16*denom(1/4*s12^2)*mt^4*s12^2*s14^2 - 3/8*denom(
      1/4*s12^2)*mt^4*s12^2*s13*s24 - 1/8*denom(1/4*s12^2)*mt^4*s12^2*s13*s23
       - 1/8*denom(1/4*s12^2)*mt^4*s12^2*s13*s14 - 1/16*denom(1/4*s12^2)*mt^4*
      s12^2*s13^2 + 1/16*denom(1/4*s12^2)*mt^4*mh^2*s12*s24^2 + 1/8*denom(1/4*
      s12^2)*mt^4*mh^2*s12*s23*s24 + 1/16*denom(1/4*s12^2)*mt^4*mh^2*s12*s23^2
       + 1/8*denom(1/4*s12^2)*mt^4*mh^2*s12*s14*s24 + 3/8*denom(1/4*s12^2)*
      mt^4*mh^2*s12*s14*s23 + 1/16*denom(1/4*s12^2)*mt^4*mh^2*s12*s14^2 + 3/8*
      denom(1/4*s12^2)*mt^4*mh^2*s12*s13*s24 + 1/8*denom(1/4*s12^2)*mt^4*mh^2*
      s12*s13*s23 + 1/8*denom(1/4*s12^2)*mt^4*mh^2*s12*s13*s14 + 1/16*denom(1/
      4*s12^2)*mt^4*mh^2*s12*s13^2 + 1/16*denom(1/4*s12^2)*mt^6*s24^3 + 1/16*
      denom(1/4*s12^2)*mt^6*s23*s24^2 - 1/16*denom(1/4*s12^2)*mt^6*s23^2*s24
       - 1/16*denom(1/4*s12^2)*mt^6*s23^3 + 1/16*denom(1/4*s12^2)*mt^6*s14*
      s24^2 - 1/8*denom(1/4*s12^2)*mt^6*s14*s23*s24 - 11/16*denom(1/4*s12^2)*
      mt^6*s14*s23^2 - 1/16*denom(1/4*s12^2)*mt^6*s14^2*s24 - 11/16*denom(1/4*
      s12^2)*mt^6*s14^2*s23 - 1/16*denom(1/4*s12^2)*mt^6*s14^3 + 11/16*denom(1/
      4*s12^2)*mt^6*s13*s24^2 + 1/8*denom(1/4*s12^2)*mt^6*s13*s23*s24 - 1/16*
      denom(1/4*s12^2)*mt^6*s13*s23^2 + 1/8*denom(1/4*s12^2)*mt^6*s13*s14*s24
       - 1/8*denom(1/4*s12^2)*mt^6*s13*s14*s23 - 1/16*denom(1/4*s12^2)*mt^6*
      s13*s14^2 + 11/16*denom(1/4*s12^2)*mt^6*s13^2*s24 + 1/16*denom(1/4*s12^2
      )*mt^6*s13^2*s23 + 1/16*denom(1/4*s12^2)*mt^6*s13^2*s14 + 1/16*denom(1/4
      *s12^2)*mt^6*s13^3 + 1/4*denom(1/4*s12^2)*mt^6*s12*s24^2 + 1/2*denom(1/4
      *s12^2)*mt^6*s12*s23*s24 + 1/4*denom(1/4*s12^2)*mt^6*s12*s23^2 + 1/2*
      denom(1/4*s12^2)*mt^6*s12*s14*s24 + 1/2*denom(1/4*s12^2)*mt^6*s12*s14*
      s23 + 1/4*denom(1/4*s12^2)*mt^6*s12*s14^2 + 1/2*denom(1/4*s12^2)*mt^6*
      s12*s13*s24 + 1/2*denom(1/4*s12^2)*mt^6*s12*s13*s23 + 1/2*denom(1/4*
      s12^2)*mt^6*s12*s13*s14 + 1/4*denom(1/4*s12^2)*mt^6*s12*s13^2 + 1/4*
      denom(1/4*s12^2)*mt^6*s12^2*s24 + 1/4*denom(1/4*s12^2)*mt^6*s12^2*s23 + 
      1/4*denom(1/4*s12^2)*mt^6*s12^2*s14 + 1/4*denom(1/4*s12^2)*mt^6*s12^2*
      s13 - 1/4*denom(1/4*s12^2)*mt^6*mh^2*s12*s24 - 1/4*denom(1/4*s12^2)*mt^6
      *mh^2*s12*s23 - 1/4*denom(1/4*s12^2)*mt^6*mh^2*s12*s14 - 1/4*denom(1/4*
      s12^2)*mt^6*mh^2*s12*s13 - 1/4*denom(1/4*s12^2)*mt^8*s24^2 + 1/4*denom(1/
      4*s12^2)*mt^8*s23^2 + 3/4*denom(1/4*s12^2)*mt^8*s14*s23 + 1/4*denom(1/4*
      s12^2)*mt^8*s14^2 - 3/4*denom(1/4*s12^2)*mt^8*s13*s24 - 1/4*denom(1/4*
      s12^2)*mt^8*s13^2 - 1/4*denom(1/4*s12^2)*mt^8*s12*s24 - 1/4*denom(1/4*
      s12^2)*mt^8*s12*s23 - 1/4*denom(1/4*s12^2)*mt^8*s12*s14 - 1/4*denom(1/4*
      s12^2)*mt^8*s12*s13 - 1/4*denom(1/4*s12^2)*mt^8*s12^2 + 1/4*denom(1/4*
      s12^2)*mt^8*mh^2*s12 + 1/4*denom(1/4*s12^2)*mt^10*s24 - 1/4*denom(1/4*
      s12^2)*mt^10*s23 - 1/4*denom(1/4*s12^2)*mt^10*s14 + 1/4*denom(1/4*s12^2)
      *mt^10*s13;
 
 .sort
id KMatrix(3,15) =  mt^4*s14*s23 - mt^4*s13*s24 - mt^4*s12*s24 - mt^4*s12*s23
       - mt^4*s12*s14 - mt^4*s12*s13 - mt^4*s12^2 + mt^4*mh^2*s12 + mt^6*s24
       - mt^6*s23 - mt^6*s14 + mt^6*s13 - 1/2*denom(1/2*s12)*mt^2*s14^2*s23*
      s24 + 1/2*denom(1/2*s12)*mt^2*s13*s14*s24^2 - 1/2*denom(1/2*s12)*mt^2*
      s13*s14*s23^2 + 1/2*denom(1/2*s12)*mt^2*s13^2*s23*s24 + 1/2*denom(1/2*
      s12)*mt^2*s12*s14*s24^2 + 1/2*denom(1/2*s12)*mt^2*s12*s14*s23*s24 + 1/2*
      denom(1/2*s12)*mt^2*s12*s14^2*s24 + 1/2*denom(1/2*s12)*mt^2*s12*s13*s23*
      s24 + 1/2*denom(1/2*s12)*mt^2*s12*s13*s23^2 + 1/2*denom(1/2*s12)*mt^2*
      s12*s13*s14*s24 + 1/2*denom(1/2*s12)*mt^2*s12*s13*s14*s23 + 1/2*denom(1/
      2*s12)*mt^2*s12*s13^2*s23 + 1/2*denom(1/2*s12)*mt^2*s12^2*s14*s24 + 1/2*
      denom(1/2*s12)*mt^2*s12^2*s13*s23 - 1/2*denom(1/2*s12)*mt^2*mh^2*s12*s14
      *s24 - 1/2*denom(1/2*s12)*mt^2*mh^2*s12*s13*s23 - 1/2*denom(1/2*s12)*
      mt^4*s14*s24^2 + denom(1/2*s12)*mt^4*s14*s23*s24 + 1/2*denom(1/2*s12)*
      mt^4*s14*s23^2 + 1/2*denom(1/2*s12)*mt^4*s14^2*s24 + 1/2*denom(1/2*s12)*
      mt^4*s14^2*s23 - 1/2*denom(1/2*s12)*mt^4*s13*s24^2 - denom(1/2*s12)*mt^4
      *s13*s23*s24 + 1/2*denom(1/2*s12)*mt^4*s13*s23^2 - denom(1/2*s12)*mt^4*
      s13*s14*s24 + denom(1/2*s12)*mt^4*s13*s14*s23 - 1/2*denom(1/2*s12)*mt^4*
      s13^2*s24 - 1/2*denom(1/2*s12)*mt^4*s13^2*s23 - 1/2*denom(1/2*s12)*mt^4*
      s12*s24^2 - denom(1/2*s12)*mt^4*s12*s23*s24 - 1/2*denom(1/2*s12)*mt^4*
      s12*s23^2 - denom(1/2*s12)*mt^4*s12*s14*s24 - denom(1/2*s12)*mt^4*s12*
      s14*s23 - 1/2*denom(1/2*s12)*mt^4*s12*s14^2 - denom(1/2*s12)*mt^4*s12*
      s13*s24 - denom(1/2*s12)*mt^4*s12*s13*s23 - denom(1/2*s12)*mt^4*s12*s13*
      s14 - 1/2*denom(1/2*s12)*mt^4*s12*s13^2 - 1/2*denom(1/2*s12)*mt^4*s12^2*
      s24 - 1/2*denom(1/2*s12)*mt^4*s12^2*s23 - 1/2*denom(1/2*s12)*mt^4*s12^2*
      s14 - 1/2*denom(1/2*s12)*mt^4*s12^2*s13 + 1/2*denom(1/2*s12)*mt^4*mh^2*
      s12*s24 + 1/2*denom(1/2*s12)*mt^4*mh^2*s12*s23 + 1/2*denom(1/2*s12)*mt^4
      *mh^2*s12*s14 + 1/2*denom(1/2*s12)*mt^4*mh^2*s12*s13 + 1/2*denom(1/2*s12
      )*mt^6*s24^2 - 1/2*denom(1/2*s12)*mt^6*s23^2 - 2*denom(1/2*s12)*mt^6*s14
      *s23 - 1/2*denom(1/2*s12)*mt^6*s14^2 + 2*denom(1/2*s12)*mt^6*s13*s24 + 1/
      2*denom(1/2*s12)*mt^6*s13^2 + denom(1/2*s12)*mt^6*s12*s24 + denom(1/2*
      s12)*mt^6*s12*s23 + denom(1/2*s12)*mt^6*s12*s14 + denom(1/2*s12)*mt^6*
      s12*s13 + denom(1/2*s12)*mt^6*s12^2 - denom(1/2*s12)*mt^6*mh^2*s12 - 
      denom(1/2*s12)*mt^8*s24 + denom(1/2*s12)*mt^8*s23 + denom(1/2*s12)*mt^8*
      s14 - denom(1/2*s12)*mt^8*s13 + 1/4*denom(1/4*s12^2)*s13*s14^2*s23^2*s24
       - 1/4*denom(1/4*s12^2)*s13^2*s14*s23*s24^2 - 1/4*denom(1/4*s12^2)*s12*
      s13*s14*s23*s24^2 - 1/4*denom(1/4*s12^2)*s12*s13*s14*s23^2*s24 - 1/4*
      denom(1/4*s12^2)*s12*s13*s14^2*s23*s24 - 1/4*denom(1/4*s12^2)*s12*s13^2*
      s14*s23*s24 - 1/4*denom(1/4*s12^2)*s12^2*s13*s14*s23*s24 + 1/4*denom(1/4
      *s12^2)*mh^2*s12*s13*s14*s23*s24 - 1/4*denom(1/4*s12^2)*mt^2*s14^2*s23^2
      *s24 + 1/2*denom(1/4*s12^2)*mt^2*s13*s14*s23*s24^2 - 1/2*denom(1/4*s12^2
      )*mt^2*s13*s14*s23^2*s24 - 1/2*denom(1/4*s12^2)*mt^2*s13*s14^2*s23*s24
       - 1/4*denom(1/4*s12^2)*mt^2*s13*s14^2*s23^2 + 1/4*denom(1/4*s12^2)*mt^2
      *s13^2*s23*s24^2 + 1/4*denom(1/4*s12^2)*mt^2*s13^2*s14*s24^2 + 1/2*
      denom(1/4*s12^2)*mt^2*s13^2*s14*s23*s24 + 1/4*denom(1/4*s12^2)*mt^2*s12*
      s14*s23*s24^2 + 1/4*denom(1/4*s12^2)*mt^2*s12*s14*s23^2*s24 + 1/4*denom(
      1/4*s12^2)*mt^2*s12*s14^2*s23*s24 + 1/4*denom(1/4*s12^2)*mt^2*s12*s13*
      s23*s24^2 + 1/4*denom(1/4*s12^2)*mt^2*s12*s13*s23^2*s24 + 1/4*denom(1/4*
      s12^2)*mt^2*s12*s13*s14*s24^2 + denom(1/4*s12^2)*mt^2*s12*s13*s14*s23*
      s24 + 1/4*denom(1/4*s12^2)*mt^2*s12*s13*s14*s23^2 + 1/4*denom(1/4*s12^2)
      *mt^2*s12*s13*s14^2*s24 + 1/4*denom(1/4*s12^2)*mt^2*s12*s13*s14^2*s23 + 
      1/4*denom(1/4*s12^2)*mt^2*s12*s13^2*s23*s24 + 1/4*denom(1/4*s12^2)*mt^2*
      s12*s13^2*s14*s24 + 1/4*denom(1/4*s12^2)*mt^2*s12*s13^2*s14*s23 + 1/4*
      denom(1/4*s12^2)*mt^2*s12^2*s14*s23*s24 + 1/4*denom(1/4*s12^2)*mt^2*
      s12^2*s13*s23*s24 + 1/4*denom(1/4*s12^2)*mt^2*s12^2*s13*s14*s24 + 1/4*
      denom(1/4*s12^2)*mt^2*s12^2*s13*s14*s23 - 1/4*denom(1/4*s12^2)*mt^2*mh^2
      *s12*s14*s23*s24 - 1/4*denom(1/4*s12^2)*mt^2*mh^2*s12*s13*s23*s24 - 1/4*
      denom(1/4*s12^2)*mt^2*mh^2*s12*s13*s14*s24 - 1/4*denom(1/4*s12^2)*mt^2*
      mh^2*s12*s13*s14*s23 - 1/4*denom(1/4*s12^2)*mt^4*s14*s23*s24^2 + 1/2*
      denom(1/4*s12^2)*mt^4*s14*s23^2*s24 + 1/2*denom(1/4*s12^2)*mt^4*s14^2*
      s23*s24 + 1/4*denom(1/4*s12^2)*mt^4*s14^2*s23^2 - 1/2*denom(1/4*s12^2)*
      mt^4*s13*s23*s24^2 + 1/4*denom(1/4*s12^2)*mt^4*s13*s23^2*s24 - 1/2*
      denom(1/4*s12^2)*mt^4*s13*s14*s24^2 + 1/2*denom(1/4*s12^2)*mt^4*s13*s14*
      s23^2 + 1/4*denom(1/4*s12^2)*mt^4*s13*s14^2*s24 + 1/2*denom(1/4*s12^2)*
      mt^4*s13*s14^2*s23 - 1/4*denom(1/4*s12^2)*mt^4*s13^2*s24^2 - 1/2*denom(1/
      4*s12^2)*mt^4*s13^2*s23*s24 - 1/2*denom(1/4*s12^2)*mt^4*s13^2*s14*s24 - 
      1/4*denom(1/4*s12^2)*mt^4*s13^2*s14*s23 - 1/4*denom(1/4*s12^2)*mt^4*s12*
      s23*s24^2 - 1/4*denom(1/4*s12^2)*mt^4*s12*s23^2*s24 - 1/4*denom(1/4*
      s12^2)*mt^4*s12*s14*s24^2 - 3/4*denom(1/4*s12^2)*mt^4*s12*s14*s23*s24 - 
      1/4*denom(1/4*s12^2)*mt^4*s12*s14*s23^2 - 1/4*denom(1/4*s12^2)*mt^4*s12*
      s14^2*s24 - 1/4*denom(1/4*s12^2)*mt^4*s12*s14^2*s23 - 1/4*denom(1/4*
      s12^2)*mt^4*s12*s13*s24^2 - 3/4*denom(1/4*s12^2)*mt^4*s12*s13*s23*s24 - 
      1/4*denom(1/4*s12^2)*mt^4*s12*s13*s23^2 - 3/4*denom(1/4*s12^2)*mt^4*s12*
      s13*s14*s24 - 3/4*denom(1/4*s12^2)*mt^4*s12*s13*s14*s23 - 1/4*denom(1/4*
      s12^2)*mt^4*s12*s13*s14^2 - 1/4*denom(1/4*s12^2)*mt^4*s12*s13^2*s24 - 1/
      4*denom(1/4*s12^2)*mt^4*s12*s13^2*s23 - 1/4*denom(1/4*s12^2)*mt^4*s12*
      s13^2*s14 - 1/4*denom(1/4*s12^2)*mt^4*s12^2*s23*s24 - 1/4*denom(1/4*
      s12^2)*mt^4*s12^2*s14*s24 - 1/4*denom(1/4*s12^2)*mt^4*s12^2*s14*s23 - 1/
      4*denom(1/4*s12^2)*mt^4*s12^2*s13*s24 - 1/4*denom(1/4*s12^2)*mt^4*s12^2*
      s13*s23 - 1/4*denom(1/4*s12^2)*mt^4*s12^2*s13*s14 + 1/4*denom(1/4*s12^2)
      *mt^4*mh^2*s12*s23*s24 + 1/4*denom(1/4*s12^2)*mt^4*mh^2*s12*s14*s24 + 1/
      4*denom(1/4*s12^2)*mt^4*mh^2*s12*s14*s23 + 1/4*denom(1/4*s12^2)*mt^4*
      mh^2*s12*s13*s24 + 1/4*denom(1/4*s12^2)*mt^4*mh^2*s12*s13*s23 + 1/4*
      denom(1/4*s12^2)*mt^4*mh^2*s12*s13*s14 + 1/4*denom(1/4*s12^2)*mt^6*s23*
      s24^2 - 1/4*denom(1/4*s12^2)*mt^6*s23^2*s24 + 1/4*denom(1/4*s12^2)*mt^6*
      s14*s24^2 - 1/2*denom(1/4*s12^2)*mt^6*s14*s23*s24 - 1/2*denom(1/4*s12^2)
      *mt^6*s14*s23^2 - 1/4*denom(1/4*s12^2)*mt^6*s14^2*s24 - 1/2*denom(1/4*
      s12^2)*mt^6*s14^2*s23 + 1/2*denom(1/4*s12^2)*mt^6*s13*s24^2 + 1/2*denom(
      1/4*s12^2)*mt^6*s13*s23*s24 - 1/4*denom(1/4*s12^2)*mt^6*s13*s23^2 + 1/2*
      denom(1/4*s12^2)*mt^6*s13*s14*s24 - 1/2*denom(1/4*s12^2)*mt^6*s13*s14*
      s23 - 1/4*denom(1/4*s12^2)*mt^6*s13*s14^2 + 1/2*denom(1/4*s12^2)*mt^6*
      s13^2*s24 + 1/4*denom(1/4*s12^2)*mt^6*s13^2*s23 + 1/4*denom(1/4*s12^2)*
      mt^6*s13^2*s14 + 1/4*denom(1/4*s12^2)*mt^6*s12*s24^2 + 1/2*denom(1/4*
      s12^2)*mt^6*s12*s23*s24 + 1/4*denom(1/4*s12^2)*mt^6*s12*s23^2 + 1/2*
      denom(1/4*s12^2)*mt^6*s12*s14*s24 + 1/2*denom(1/4*s12^2)*mt^6*s12*s14*
      s23 + 1/4*denom(1/4*s12^2)*mt^6*s12*s14^2 + 1/2*denom(1/4*s12^2)*mt^6*
      s12*s13*s24 + 1/2*denom(1/4*s12^2)*mt^6*s12*s13*s23 + 1/2*denom(1/4*
      s12^2)*mt^6*s12*s13*s14 + 1/4*denom(1/4*s12^2)*mt^6*s12*s13^2 + 1/4*
      denom(1/4*s12^2)*mt^6*s12^2*s24 + 1/4*denom(1/4*s12^2)*mt^6*s12^2*s23 + 
      1/4*denom(1/4*s12^2)*mt^6*s12^2*s14 + 1/4*denom(1/4*s12^2)*mt^6*s12^2*
      s13 - 1/4*denom(1/4*s12^2)*mt^6*mh^2*s12*s24 - 1/4*denom(1/4*s12^2)*mt^6
      *mh^2*s12*s23 - 1/4*denom(1/4*s12^2)*mt^6*mh^2*s12*s14 - 1/4*denom(1/4*
      s12^2)*mt^6*mh^2*s12*s13 - 1/4*denom(1/4*s12^2)*mt^8*s24^2 + 1/4*denom(1/
      4*s12^2)*mt^8*s23^2 + 3/4*denom(1/4*s12^2)*mt^8*s14*s23 + 1/4*denom(1/4*
      s12^2)*mt^8*s14^2 - 3/4*denom(1/4*s12^2)*mt^8*s13*s24 - 1/4*denom(1/4*
      s12^2)*mt^8*s13^2 - 1/4*denom(1/4*s12^2)*mt^8*s12*s24 - 1/4*denom(1/4*
      s12^2)*mt^8*s12*s23 - 1/4*denom(1/4*s12^2)*mt^8*s12*s14 - 1/4*denom(1/4*
      s12^2)*mt^8*s12*s13 - 1/4*denom(1/4*s12^2)*mt^8*s12^2 + 1/4*denom(1/4*
      s12^2)*mt^8*mh^2*s12 + 1/4*denom(1/4*s12^2)*mt^10*s24 - 1/4*denom(1/4*
      s12^2)*mt^10*s23 - 1/4*denom(1/4*s12^2)*mt^10*s14 + 1/4*denom(1/4*s12^2)
      *mt^10*s13;
 
 .sort
id KMatrix(3,16) =   - 1/2*mt^2*s14*s23*s24 - 1/2*mt^2*s14*s23^2 - 1/2*mt^2*
      s14^2*s23 + 1/2*mt^2*s13*s24^2 + 1/2*mt^2*s13*s23*s24 + 1/2*mt^2*s13*s14
      *s24 - 1/2*mt^2*s13*s14*s23 + 1/2*mt^2*s13^2*s24 + 1/2*mt^2*s12*s24^2 + 
      mt^2*s12*s23*s24 + 1/2*mt^2*s12*s23^2 + mt^2*s12*s14*s24 + 1/2*mt^2*s12*
      s14*s23 + 1/2*mt^2*s12*s14^2 + 3/2*mt^2*s12*s13*s24 + mt^2*s12*s13*s23
       + mt^2*s12*s13*s14 + 1/2*mt^2*s12*s13^2 + mt^2*s12^2*s24 + mt^2*s12^2*
      s23 + mt^2*s12^2*s14 + mt^2*s12^2*s13 + 1/2*mt^2*s12^3 + 1/2*mt^2*mh^2*
      s14*s23 - 1/2*mt^2*mh^2*s13*s24 - mt^2*mh^2*s12*s24 - mt^2*mh^2*s12*s23
       - mt^2*mh^2*s12*s14 - mt^2*mh^2*s12*s13 - mt^2*mh^2*s12^2 + 1/2*mt^2*
      mh^4*s12 - 1/2*mt^4*s24^2 + 1/2*mt^4*s23^2 + 2*mt^4*s14*s23 + 1/2*mt^4*
      s14^2 - 2*mt^4*s13*s24 - 1/2*mt^4*s13^2 - 3/2*mt^4*s12*s24 - 1/2*mt^4*
      s12*s23 - 1/2*mt^4*s12*s14 - 3/2*mt^4*s12*s13 - mt^4*s12^2 + 1/2*mt^4*
      mh^2*s24 - 1/2*mt^4*mh^2*s23 - 1/2*mt^4*mh^2*s14 + 1/2*mt^4*mh^2*s13 + 
      mt^4*mh^2*s12 + mt^6*s24 - mt^6*s23 - mt^6*s14 + mt^6*s13 + 1/4*denom(1/
      2*s12)*s14^2*s23*s24^2 + 1/4*denom(1/2*s12)*s14^2*s23^2*s24 + 1/4*denom(
      1/2*s12)*s14^3*s23*s24 - 1/4*denom(1/2*s12)*s13*s14*s24^3 - 1/4*denom(1/
      2*s12)*s13*s14*s23*s24^2 - 1/4*denom(1/2*s12)*s13*s14^2*s24^2 + 1/4*
      denom(1/2*s12)*s13*s14^2*s23*s24 - 1/4*denom(1/2*s12)*s13^2*s14*s24^2 - 
      1/4*denom(1/2*s12)*s12*s14*s24^3 - 1/2*denom(1/2*s12)*s12*s14*s23*s24^2
       - 1/4*denom(1/2*s12)*s12*s14*s23^2*s24 - 1/2*denom(1/2*s12)*s12*s14^2*
      s24^2 - 1/4*denom(1/2*s12)*s12*s14^2*s23*s24 - 1/4*denom(1/2*s12)*s12*
      s14^3*s24 - 3/4*denom(1/2*s12)*s12*s13*s14*s24^2 - 1/2*denom(1/2*s12)*
      s12*s13*s14*s23*s24 - 1/2*denom(1/2*s12)*s12*s13*s14^2*s24 - 1/4*denom(1/
      2*s12)*s12*s13^2*s14*s24 - 1/2*denom(1/2*s12)*s12^2*s14*s24^2 - 1/2*
      denom(1/2*s12)*s12^2*s14*s23*s24 - 1/2*denom(1/2*s12)*s12^2*s14^2*s24 - 
      1/2*denom(1/2*s12)*s12^2*s13*s14*s24 - 1/4*denom(1/2*s12)*s12^3*s14*s24
       - 1/4*denom(1/2*s12)*mh^2*s14^2*s23*s24 + 1/4*denom(1/2*s12)*mh^2*s13*
      s14*s24^2 + 1/2*denom(1/2*s12)*mh^2*s12*s14*s24^2 + 1/2*denom(1/2*s12)*
      mh^2*s12*s14*s23*s24 + 1/2*denom(1/2*s12)*mh^2*s12*s14^2*s24 + 1/2*
      denom(1/2*s12)*mh^2*s12*s13*s14*s24 + 1/2*denom(1/2*s12)*mh^2*s12^2*s14*
      s24 - 1/4*denom(1/2*s12)*mh^4*s12*s14*s24 + 1/4*denom(1/2*s12)*mt^2*s14*
      s24^3 - 1/4*denom(1/2*s12)*mt^2*s14*s23*s24^2 - 1/2*denom(1/2*s12)*mt^2*
      s14*s23^2*s24 - 3/2*denom(1/2*s12)*mt^2*s14^2*s23*s24 - 1/2*denom(1/2*
      s12)*mt^2*s14^2*s23^2 - 1/4*denom(1/2*s12)*mt^2*s14^3*s24 - 1/4*denom(1/
      2*s12)*mt^2*s14^3*s23 + 1/4*denom(1/2*s12)*mt^2*s13*s24^3 + 1/4*denom(1/
      2*s12)*mt^2*s13*s23*s24^2 + 3/2*denom(1/2*s12)*mt^2*s13*s14*s24^2 + 1/4*
      denom(1/2*s12)*mt^2*s13*s14^2*s24 - 1/4*denom(1/2*s12)*mt^2*s13*s14^2*
      s23 + 1/2*denom(1/2*s12)*mt^2*s13^2*s24^2 + 1/2*denom(1/2*s12)*mt^2*
      s13^2*s14*s24 + 1/4*denom(1/2*s12)*mt^2*s12*s24^3 + 1/2*denom(1/2*s12)*
      mt^2*s12*s23*s24^2 + 1/4*denom(1/2*s12)*mt^2*s12*s23^2*s24 + 3/2*denom(1/
      2*s12)*mt^2*s12*s14*s24^2 + 5/4*denom(1/2*s12)*mt^2*s12*s14*s23*s24 + 1/
      2*denom(1/2*s12)*mt^2*s12*s14*s23^2 + denom(1/2*s12)*mt^2*s12*s14^2*s24
       + 1/2*denom(1/2*s12)*mt^2*s12*s14^2*s23 + 1/4*denom(1/2*s12)*mt^2*s12*
      s14^3 + denom(1/2*s12)*mt^2*s12*s13*s24^2 + 3/4*denom(1/2*s12)*mt^2*s12*
      s13*s23*s24 + 9/4*denom(1/2*s12)*mt^2*s12*s13*s14*s24 + 3/4*denom(1/2*
      s12)*mt^2*s12*s13*s14*s23 + 1/2*denom(1/2*s12)*mt^2*s12*s13*s14^2 + 1/2*
      denom(1/2*s12)*mt^2*s12*s13^2*s24 + 1/4*denom(1/2*s12)*mt^2*s12*s13^2*
      s14 + 1/2*denom(1/2*s12)*mt^2*s12^2*s24^2 + 1/2*denom(1/2*s12)*mt^2*
      s12^2*s23*s24 + 3/2*denom(1/2*s12)*mt^2*s12^2*s14*s24 + 3/4*denom(1/2*
      s12)*mt^2*s12^2*s14*s23 + 1/2*denom(1/2*s12)*mt^2*s12^2*s14^2 + 3/4*
      denom(1/2*s12)*mt^2*s12^2*s13*s24 + 1/2*denom(1/2*s12)*mt^2*s12^2*s13*
      s14 + 1/4*denom(1/2*s12)*mt^2*s12^3*s24 + 1/4*denom(1/2*s12)*mt^2*s12^3*
      s14 - 1/4*denom(1/2*s12)*mt^2*mh^2*s14*s24^2 + 1/2*denom(1/2*s12)*mt^2*
      mh^2*s14*s23*s24 + 1/4*denom(1/2*s12)*mt^2*mh^2*s14^2*s24 + 1/4*denom(1/
      2*s12)*mt^2*mh^2*s14^2*s23 - 1/4*denom(1/2*s12)*mt^2*mh^2*s13*s24^2 - 1/
      2*denom(1/2*s12)*mt^2*mh^2*s13*s14*s24 - 1/2*denom(1/2*s12)*mt^2*mh^2*
      s12*s24^2 - 1/2*denom(1/2*s12)*mt^2*mh^2*s12*s23*s24 - 3/2*denom(1/2*s12
      )*mt^2*mh^2*s12*s14*s24 - 3/4*denom(1/2*s12)*mt^2*mh^2*s12*s14*s23 - 1/2
      *denom(1/2*s12)*mt^2*mh^2*s12*s14^2 - 3/4*denom(1/2*s12)*mt^2*mh^2*s12*
      s13*s24 - 1/2*denom(1/2*s12)*mt^2*mh^2*s12*s13*s14 - 1/2*denom(1/2*s12)*
      mt^2*mh^2*s12^2*s24 - 1/2*denom(1/2*s12)*mt^2*mh^2*s12^2*s14 + 1/4*
      denom(1/2*s12)*mt^2*mh^4*s12*s24 + 1/4*denom(1/2*s12)*mt^2*mh^4*s12*s14
       - 1/4*denom(1/2*s12)*mt^4*s24^3 + 1/4*denom(1/2*s12)*mt^4*s23^2*s24 - 3/
      4*denom(1/2*s12)*mt^4*s14*s24^2 + 7/4*denom(1/2*s12)*mt^4*s14*s23*s24 + 
      denom(1/2*s12)*mt^4*s14*s23^2 + 3/4*denom(1/2*s12)*mt^4*s14^2*s24 + 7/4*
      denom(1/2*s12)*mt^4*s14^2*s23 + 1/4*denom(1/2*s12)*mt^4*s14^3 - 7/4*
      denom(1/2*s12)*mt^4*s13*s24^2 - 1/4*denom(1/2*s12)*mt^4*s13*s23*s24 - 7/
      4*denom(1/2*s12)*mt^4*s13*s14*s24 + 1/4*denom(1/2*s12)*mt^4*s13*s14*s23
       - denom(1/2*s12)*mt^4*s13^2*s24 - 1/4*denom(1/2*s12)*mt^4*s13^2*s14 - 5/
      4*denom(1/2*s12)*mt^4*s12*s24^2 - 5/4*denom(1/2*s12)*mt^4*s12*s23*s24 - 
      1/2*denom(1/2*s12)*mt^4*s12*s23^2 - 2*denom(1/2*s12)*mt^4*s12*s14*s24 - 
      denom(1/2*s12)*mt^4*s12*s14*s23 - 3/4*denom(1/2*s12)*mt^4*s12*s14^2 - 2*
      denom(1/2*s12)*mt^4*s12*s13*s24 - denom(1/2*s12)*mt^4*s12*s13*s23 - 7/4*
      denom(1/2*s12)*mt^4*s12*s13*s14 - 1/2*denom(1/2*s12)*mt^4*s12*s13^2 - 5/
      4*denom(1/2*s12)*mt^4*s12^2*s24 - 3/4*denom(1/2*s12)*mt^4*s12^2*s23 - 5/
      4*denom(1/2*s12)*mt^4*s12^2*s14 - 3/4*denom(1/2*s12)*mt^4*s12^2*s13 - 1/
      4*denom(1/2*s12)*mt^4*s12^3 + 1/4*denom(1/2*s12)*mt^4*mh^2*s24^2 - 1/4*
      denom(1/2*s12)*mt^4*mh^2*s23*s24 - 1/2*denom(1/2*s12)*mt^4*mh^2*s14*s23
       - 1/4*denom(1/2*s12)*mt^4*mh^2*s14^2 + 1/2*denom(1/2*s12)*mt^4*mh^2*s13
      *s24 + 1/4*denom(1/2*s12)*mt^4*mh^2*s13*s14 + 5/4*denom(1/2*s12)*mt^4*
      mh^2*s12*s24 + 3/4*denom(1/2*s12)*mt^4*mh^2*s12*s23 + 5/4*denom(1/2*s12)
      *mt^4*mh^2*s12*s14 + 3/4*denom(1/2*s12)*mt^4*mh^2*s12*s13 + 1/2*denom(1/
      2*s12)*mt^4*mh^2*s12^2 - 1/4*denom(1/2*s12)*mt^4*mh^4*s12 + denom(1/2*
      s12)*mt^6*s24^2 - 1/2*denom(1/2*s12)*mt^6*s23*s24 - 1/2*denom(1/2*s12)*
      mt^6*s23^2 - 5/2*denom(1/2*s12)*mt^6*s14*s23 - denom(1/2*s12)*mt^6*s14^2
       + 5/2*denom(1/2*s12)*mt^6*s13*s24 + 1/2*denom(1/2*s12)*mt^6*s13*s14 + 1/
      2*denom(1/2*s12)*mt^6*s13^2 + 5/4*denom(1/2*s12)*mt^6*s12*s24 + 3/4*
      denom(1/2*s12)*mt^6*s12*s23 + 3/4*denom(1/2*s12)*mt^6*s12*s14 + 5/4*
      denom(1/2*s12)*mt^6*s12*s13 + denom(1/2*s12)*mt^6*s12^2 - 1/4*denom(1/2*
      s12)*mt^6*mh^2*s24 + 1/4*denom(1/2*s12)*mt^6*mh^2*s23 + 1/4*denom(1/2*
      s12)*mt^6*mh^2*s14 - 1/4*denom(1/2*s12)*mt^6*mh^2*s13 - denom(1/2*s12)*
      mt^6*mh^2*s12 - denom(1/2*s12)*mt^8*s24 + denom(1/2*s12)*mt^8*s23 + 
      denom(1/2*s12)*mt^8*s14 - denom(1/2*s12)*mt^8*s13 + 1/8*denom(1/4*s12^2)
      *s14^3*s23^2*s24 - 1/8*denom(1/4*s12^2)*s13^2*s14*s24^3 - 1/8*denom(1/4*
      s12^2)*s12*s14^2*s23*s24^2 - 1/8*denom(1/4*s12^2)*s12*s14^2*s23^2*s24 - 
      1/8*denom(1/4*s12^2)*s12*s14^3*s23*s24 - 1/8*denom(1/4*s12^2)*s12*s13*
      s14*s24^3 - 1/8*denom(1/4*s12^2)*s12*s13*s14*s23*s24^2 - 1/8*denom(1/4*
      s12^2)*s12*s13*s14^2*s24^2 - 1/8*denom(1/4*s12^2)*s12*s13*s14^2*s23*s24
       - 1/8*denom(1/4*s12^2)*s12*s13^2*s14*s24^2 - 1/8*denom(1/4*s12^2)*s12^2
      *s14^2*s23*s24 - 1/8*denom(1/4*s12^2)*s12^2*s13*s14*s24^2 + 1/8*denom(1/
      4*s12^2)*mh^2*s12*s14^2*s23*s24 + 1/8*denom(1/4*s12^2)*mh^2*s12*s13*s14*
      s24^2 - 3/8*denom(1/4*s12^2)*mt^2*s14^2*s23^2*s24 - 1/4*denom(1/4*s12^2)
      *mt^2*s14^3*s23*s24 - 1/8*denom(1/4*s12^2)*mt^2*s14^3*s23^2 + 1/4*denom(
      1/4*s12^2)*mt^2*s13*s14*s24^3 + 1/8*denom(1/4*s12^2)*mt^2*s13^2*s24^3 + 
      3/8*denom(1/4*s12^2)*mt^2*s13^2*s14*s24^2 + 1/8*denom(1/4*s12^2)*mt^2*
      s12*s14*s24^3 + 3/8*denom(1/4*s12^2)*mt^2*s12*s14*s23*s24^2 + 1/4*denom(
      1/4*s12^2)*mt^2*s12*s14*s23^2*s24 + 1/4*denom(1/4*s12^2)*mt^2*s12*s14^2*
      s24^2 + 1/2*denom(1/4*s12^2)*mt^2*s12*s14^2*s23*s24 + 1/8*denom(1/4*
      s12^2)*mt^2*s12*s14^2*s23^2 + 1/8*denom(1/4*s12^2)*mt^2*s12*s14^3*s24 + 
      1/8*denom(1/4*s12^2)*mt^2*s12*s14^3*s23 + 1/8*denom(1/4*s12^2)*mt^2*s12*
      s13*s24^3 + 1/8*denom(1/4*s12^2)*mt^2*s12*s13*s23*s24^2 + 1/2*denom(1/4*
      s12^2)*mt^2*s12*s13*s14*s24^2 + 1/2*denom(1/4*s12^2)*mt^2*s12*s13*s14*
      s23*s24 + 3/8*denom(1/4*s12^2)*mt^2*s12*s13*s14^2*s24 + 1/8*denom(1/4*
      s12^2)*mt^2*s12*s13*s14^2*s23 + 1/8*denom(1/4*s12^2)*mt^2*s12*s13^2*
      s24^2 + 1/4*denom(1/4*s12^2)*mt^2*s12*s13^2*s14*s24 + 1/8*denom(1/4*
      s12^2)*mt^2*s12^2*s14*s24^2 + 1/4*denom(1/4*s12^2)*mt^2*s12^2*s14*s23*
      s24 + 1/8*denom(1/4*s12^2)*mt^2*s12^2*s14^2*s24 + 1/8*denom(1/4*s12^2)*
      mt^2*s12^2*s14^2*s23 + 1/8*denom(1/4*s12^2)*mt^2*s12^2*s13*s24^2 + 1/4*
      denom(1/4*s12^2)*mt^2*s12^2*s13*s14*s24 - 1/8*denom(1/4*s12^2)*mt^2*mh^2
      *s12*s14*s24^2 - 1/4*denom(1/4*s12^2)*mt^2*mh^2*s12*s14*s23*s24 - 1/8*
      denom(1/4*s12^2)*mt^2*mh^2*s12*s14^2*s24 - 1/8*denom(1/4*s12^2)*mt^2*
      mh^2*s12*s14^2*s23 - 1/8*denom(1/4*s12^2)*mt^2*mh^2*s12*s13*s24^2 - 1/4*
      denom(1/4*s12^2)*mt^2*mh^2*s12*s13*s14*s24 - 1/8*denom(1/4*s12^2)*mt^4*
      s14*s24^3 + 3/8*denom(1/4*s12^2)*mt^4*s14*s23^2*s24 + 3/4*denom(1/4*
      s12^2)*mt^4*s14^2*s23*s24 + 3/8*denom(1/4*s12^2)*mt^4*s14^2*s23^2 + 1/8*
      denom(1/4*s12^2)*mt^4*s14^3*s24 + 1/4*denom(1/4*s12^2)*mt^4*s14^3*s23 - 
      1/4*denom(1/4*s12^2)*mt^4*s13*s24^3 - 3/4*denom(1/4*s12^2)*mt^4*s13*s14*
      s24^2 - 3/8*denom(1/4*s12^2)*mt^4*s13^2*s24^2 - 3/8*denom(1/4*s12^2)*
      mt^4*s13^2*s14*s24 - 1/8*denom(1/4*s12^2)*mt^4*s12*s24^3 - 1/4*denom(1/4
      *s12^2)*mt^4*s12*s23*s24^2 - 1/8*denom(1/4*s12^2)*mt^4*s12*s23^2*s24 - 5/
      8*denom(1/4*s12^2)*mt^4*s12*s14*s24^2 - 7/8*denom(1/4*s12^2)*mt^4*s12*
      s14*s23*s24 - 1/4*denom(1/4*s12^2)*mt^4*s12*s14*s23^2 - 5/8*denom(1/4*
      s12^2)*mt^4*s12*s14^2*s24 - 3/8*denom(1/4*s12^2)*mt^4*s12*s14^2*s23 - 1/
      8*denom(1/4*s12^2)*mt^4*s12*s14^3 - 3/8*denom(1/4*s12^2)*mt^4*s12*s13*
      s24^2 - 3/8*denom(1/4*s12^2)*mt^4*s12*s13*s23*s24 - 7/8*denom(1/4*s12^2)
      *mt^4*s12*s13*s14*s24 - 3/8*denom(1/4*s12^2)*mt^4*s12*s13*s14*s23 - 1/4*
      denom(1/4*s12^2)*mt^4*s12*s13*s14^2 - 1/4*denom(1/4*s12^2)*mt^4*s12*
      s13^2*s24 - 1/8*denom(1/4*s12^2)*mt^4*s12*s13^2*s14 - 1/8*denom(1/4*
      s12^2)*mt^4*s12^2*s24^2 - 1/8*denom(1/4*s12^2)*mt^4*s12^2*s23*s24 - 1/2*
      denom(1/4*s12^2)*mt^4*s12^2*s14*s24 - 1/4*denom(1/4*s12^2)*mt^4*s12^2*
      s14*s23 - 1/8*denom(1/4*s12^2)*mt^4*s12^2*s14^2 - 1/4*denom(1/4*s12^2)*
      mt^4*s12^2*s13*s24 - 1/8*denom(1/4*s12^2)*mt^4*s12^2*s13*s14 + 1/8*
      denom(1/4*s12^2)*mt^4*mh^2*s12*s24^2 + 1/8*denom(1/4*s12^2)*mt^4*mh^2*
      s12*s23*s24 + 1/2*denom(1/4*s12^2)*mt^4*mh^2*s12*s14*s24 + 1/4*denom(1/4
      *s12^2)*mt^4*mh^2*s12*s14*s23 + 1/8*denom(1/4*s12^2)*mt^4*mh^2*s12*s14^2
       + 1/4*denom(1/4*s12^2)*mt^4*mh^2*s12*s13*s24 + 1/8*denom(1/4*s12^2)*
      mt^4*mh^2*s12*s13*s14 + 1/8*denom(1/4*s12^2)*mt^6*s24^3 - 1/8*denom(1/4*
      s12^2)*mt^6*s23^2*s24 + 3/8*denom(1/4*s12^2)*mt^6*s14*s24^2 - 3/4*denom(
      1/4*s12^2)*mt^6*s14*s23*s24 - 3/8*denom(1/4*s12^2)*mt^6*s14*s23^2 - 3/8*
      denom(1/4*s12^2)*mt^6*s14^2*s24 - 3/4*denom(1/4*s12^2)*mt^6*s14^2*s23 - 
      1/8*denom(1/4*s12^2)*mt^6*s14^3 + 3/4*denom(1/4*s12^2)*mt^6*s13*s24^2 + 
      3/4*denom(1/4*s12^2)*mt^6*s13*s14*s24 + 3/8*denom(1/4*s12^2)*mt^6*s13^2*
      s24 + 1/8*denom(1/4*s12^2)*mt^6*s13^2*s14 + 3/8*denom(1/4*s12^2)*mt^6*
      s12*s24^2 + 1/2*denom(1/4*s12^2)*mt^6*s12*s23*s24 + 1/8*denom(1/4*s12^2)
      *mt^6*s12*s23^2 + 3/4*denom(1/4*s12^2)*mt^6*s12*s14*s24 + 1/2*denom(1/4*
      s12^2)*mt^6*s12*s14*s23 + 3/8*denom(1/4*s12^2)*mt^6*s12*s14^2 + 1/2*
      denom(1/4*s12^2)*mt^6*s12*s13*s24 + 1/4*denom(1/4*s12^2)*mt^6*s12*s13*
      s23 + 1/2*denom(1/4*s12^2)*mt^6*s12*s13*s14 + 1/8*denom(1/4*s12^2)*mt^6*
      s12*s13^2 + 3/8*denom(1/4*s12^2)*mt^6*s12^2*s24 + 1/8*denom(1/4*s12^2)*
      mt^6*s12^2*s23 + 3/8*denom(1/4*s12^2)*mt^6*s12^2*s14 + 1/8*denom(1/4*
      s12^2)*mt^6*s12^2*s13 - 3/8*denom(1/4*s12^2)*mt^6*mh^2*s12*s24 - 1/8*
      denom(1/4*s12^2)*mt^6*mh^2*s12*s23 - 3/8*denom(1/4*s12^2)*mt^6*mh^2*s12*
      s14 - 1/8*denom(1/4*s12^2)*mt^6*mh^2*s12*s13 - 3/8*denom(1/4*s12^2)*mt^8
      *s24^2 + 1/4*denom(1/4*s12^2)*mt^8*s23*s24 + 1/8*denom(1/4*s12^2)*mt^8*
      s23^2 + 3/4*denom(1/4*s12^2)*mt^8*s14*s23 + 3/8*denom(1/4*s12^2)*mt^8*
      s14^2 - 3/4*denom(1/4*s12^2)*mt^8*s13*s24 - 1/4*denom(1/4*s12^2)*mt^8*
      s13*s14 - 1/8*denom(1/4*s12^2)*mt^8*s13^2 - 1/4*denom(1/4*s12^2)*mt^8*
      s12*s24 - 1/4*denom(1/4*s12^2)*mt^8*s12*s23 - 1/4*denom(1/4*s12^2)*mt^8*
      s12*s14 - 1/4*denom(1/4*s12^2)*mt^8*s12*s13 - 1/4*denom(1/4*s12^2)*mt^8*
      s12^2 + 1/4*denom(1/4*s12^2)*mt^8*mh^2*s12 + 1/4*denom(1/4*s12^2)*mt^10*
      s24 - 1/4*denom(1/4*s12^2)*mt^10*s23 - 1/4*denom(1/4*s12^2)*mt^10*s14 + 
      1/4*denom(1/4*s12^2)*mt^10*s13;
 
 .sort
id KMatrix(3,17) =  s24^2 + 2*s23*s24 + s23^2 + 2*s14*s24 + 2*s14*s23 + s14^2
       + 2*s13*s24 + 2*s13*s23 + 2*s13*s14 + s13^2 + 2*s12*s24 + 2*s12*s23 + 2
      *s12*s14 + 2*s12*s13 + s12^2 - 2*mh^2*s24 - 2*mh^2*s23 - 2*mh^2*s14 - 2*
      mh^2*s13 - 2*mh^2*s12 + mh^4 - 2*mt^2*s24 - 2*mt^2*s23 - 2*mt^2*s14 - 2*
      mt^2*s13 - 2*mt^2*s12 + 2*mt^2*mh^2 + denom(1/2*s12)*s14*s23*s24 + 
      denom(1/2*s12)*s14*s23^2 + denom(1/2*s12)*s14^2*s23 + denom(1/2*s12)*s13
      *s24^2 + denom(1/2*s12)*s13*s23*s24 + denom(1/2*s12)*s13*s14*s24 + 
      denom(1/2*s12)*s13*s14*s23 + denom(1/2*s12)*s13^2*s24 + denom(1/2*s12)*
      s12*s14*s23 + denom(1/2*s12)*s12*s13*s24 - denom(1/2*s12)*mh^2*s14*s23
       - denom(1/2*s12)*mh^2*s13*s24 - denom(1/2*s12)*mt^2*s24^2 - 2*denom(1/2
      *s12)*mt^2*s23*s24 - denom(1/2*s12)*mt^2*s23^2 - 2*denom(1/2*s12)*mt^2*
      s14*s24 - 2*denom(1/2*s12)*mt^2*s14*s23 - denom(1/2*s12)*mt^2*s14^2 - 2*
      denom(1/2*s12)*mt^2*s13*s24 - 2*denom(1/2*s12)*mt^2*s13*s23 - 2*denom(1/
      2*s12)*mt^2*s13*s14 - denom(1/2*s12)*mt^2*s13^2 - denom(1/2*s12)*mt^2*
      s12*s24 - denom(1/2*s12)*mt^2*s12*s23 - denom(1/2*s12)*mt^2*s12*s14 - 
      denom(1/2*s12)*mt^2*s12*s13 + denom(1/2*s12)*mt^2*mh^2*s24 + denom(1/2*
      s12)*mt^2*mh^2*s23 + denom(1/2*s12)*mt^2*mh^2*s14 + denom(1/2*s12)*mt^2*
      mh^2*s13 + 2*denom(1/2*s12)*mt^4*s24 + 2*denom(1/2*s12)*mt^4*s23 + 2*
      denom(1/2*s12)*mt^4*s14 + 2*denom(1/2*s12)*mt^4*s13 + 2*denom(1/2*s12)*
      mt^4*s12 - 2*denom(1/2*s12)*mt^4*mh^2 - 1/4*denom(1/4*s12^2)*s12*s14*s23
      *s24 - 1/4*denom(1/4*s12^2)*s12*s14*s23^2 - 1/4*denom(1/4*s12^2)*s12*
      s14^2*s23 - 1/4*denom(1/4*s12^2)*s12*s13*s24^2 - 1/4*denom(1/4*s12^2)*
      s12*s13*s23*s24 - 1/4*denom(1/4*s12^2)*s12*s13*s14*s24 - 1/4*denom(1/4*
      s12^2)*s12*s13*s14*s23 - 1/4*denom(1/4*s12^2)*s12*s13^2*s24 - 1/4*denom(
      1/4*s12^2)*s12^2*s14*s23 - 1/4*denom(1/4*s12^2)*s12^2*s13*s24 + 1/4*
      denom(1/4*s12^2)*mh^2*s12*s14*s23 + 1/4*denom(1/4*s12^2)*mh^2*s12*s13*
      s24 + 1/4*denom(1/4*s12^2)*mt^2*s12*s24^2 + 1/2*denom(1/4*s12^2)*mt^2*
      s12*s23*s24 + 1/4*denom(1/4*s12^2)*mt^2*s12*s23^2 + 1/2*denom(1/4*s12^2)
      *mt^2*s12*s14*s24 + 1/2*denom(1/4*s12^2)*mt^2*s12*s14*s23 + 1/4*denom(1/
      4*s12^2)*mt^2*s12*s14^2 + 1/2*denom(1/4*s12^2)*mt^2*s12*s13*s24 + 1/2*
      denom(1/4*s12^2)*mt^2*s12*s13*s23 + 1/2*denom(1/4*s12^2)*mt^2*s12*s13*
      s14 + 1/4*denom(1/4*s12^2)*mt^2*s12*s13^2 + 1/4*denom(1/4*s12^2)*mt^2*
      s12^2*s24 + 1/4*denom(1/4*s12^2)*mt^2*s12^2*s23 + 1/4*denom(1/4*s12^2)*
      mt^2*s12^2*s14 + 1/4*denom(1/4*s12^2)*mt^2*s12^2*s13 - 1/4*denom(1/4*
      s12^2)*mt^2*mh^2*s12*s24 - 1/4*denom(1/4*s12^2)*mt^2*mh^2*s12*s23 - 1/4*
      denom(1/4*s12^2)*mt^2*mh^2*s12*s14 - 1/4*denom(1/4*s12^2)*mt^2*mh^2*s12*
      s13 - 1/2*denom(1/4*s12^2)*mt^4*s12*s24 - 1/2*denom(1/4*s12^2)*mt^4*s12*
      s23 - 1/2*denom(1/4*s12^2)*mt^4*s12*s14 - 1/2*denom(1/4*s12^2)*mt^4*s12*
      s13 - 1/2*denom(1/4*s12^2)*mt^4*s12^2 + 1/2*denom(1/4*s12^2)*mt^4*mh^2*
      s12;
 
 .sort
id KMatrix(3,18) =   - mt*s14*s24 - mt*s14*s23 - mt*s14^2 + mt*s13*s24 + mt*
      s13*s23 + mt*s13^2 - mt*s12*s14 + mt*s12*s13 + mt*mh^2*s14 - mt*mh^2*s13
       + 2*mt^3*s14 - 2*mt^3*s13 - denom(1/2*s12)*mt*s14^2*s23 - denom(1/2*s12
      )*mt*s13*s14*s24 + denom(1/2*s12)*mt*s13*s14*s23 + denom(1/2*s12)*mt*
      s13^2*s24 + denom(1/2*s12)*mt^3*s14*s24 + denom(1/2*s12)*mt^3*s14*s23 + 
      denom(1/2*s12)*mt^3*s14^2 - denom(1/2*s12)*mt^3*s13*s24 - denom(1/2*s12)
      *mt^3*s13*s23 - denom(1/2*s12)*mt^3*s13^2 - 2*denom(1/2*s12)*mt^5*s14 + 
      2*denom(1/2*s12)*mt^5*s13 + 1/4*denom(1/4*s12^2)*mt*s12*s14^2*s23 + 1/4*
      denom(1/4*s12^2)*mt*s12*s13*s14*s24 - 1/4*denom(1/4*s12^2)*mt*s12*s13*
      s14*s23 - 1/4*denom(1/4*s12^2)*mt*s12*s13^2*s24 - 1/4*denom(1/4*s12^2)*
      mt^3*s12*s14*s24 - 1/4*denom(1/4*s12^2)*mt^3*s12*s14*s23 - 1/4*denom(1/4
      *s12^2)*mt^3*s12*s14^2 + 1/4*denom(1/4*s12^2)*mt^3*s12*s13*s24 + 1/4*
      denom(1/4*s12^2)*mt^3*s12*s13*s23 + 1/4*denom(1/4*s12^2)*mt^3*s12*s13^2
       + 1/2*denom(1/4*s12^2)*mt^5*s12*s14 - 1/2*denom(1/4*s12^2)*mt^5*s12*s13
      ;
 
 .sort
id KMatrix(3,19) =   - mt*s24^2 + mt*s23^2 - mt*s14*s24 + mt*s14*s23 - mt*s13*
      s24 + mt*s13*s23 - mt*s12*s24 + mt*s12*s23 + mt*mh^2*s24 - mt*mh^2*s23
       + 2*mt^3*s24 - 2*mt^3*s23 - denom(1/2*s12)*mt*s14*s23*s24 + denom(1/2*
      s12)*mt*s14*s23^2 - denom(1/2*s12)*mt*s13*s24^2 + denom(1/2*s12)*mt*s13*
      s23*s24 + denom(1/2*s12)*mt^3*s24^2 - denom(1/2*s12)*mt^3*s23^2 + denom(
      1/2*s12)*mt^3*s14*s24 - denom(1/2*s12)*mt^3*s14*s23 + denom(1/2*s12)*
      mt^3*s13*s24 - denom(1/2*s12)*mt^3*s13*s23 - 2*denom(1/2*s12)*mt^5*s24
       + 2*denom(1/2*s12)*mt^5*s23 + 1/4*denom(1/4*s12^2)*mt*s12*s14*s23*s24
       - 1/4*denom(1/4*s12^2)*mt*s12*s14*s23^2 + 1/4*denom(1/4*s12^2)*mt*s12*
      s13*s24^2 - 1/4*denom(1/4*s12^2)*mt*s12*s13*s23*s24 - 1/4*denom(1/4*
      s12^2)*mt^3*s12*s24^2 + 1/4*denom(1/4*s12^2)*mt^3*s12*s23^2 - 1/4*denom(
      1/4*s12^2)*mt^3*s12*s14*s24 + 1/4*denom(1/4*s12^2)*mt^3*s12*s14*s23 - 1/
      4*denom(1/4*s12^2)*mt^3*s12*s13*s24 + 1/4*denom(1/4*s12^2)*mt^3*s12*s13*
      s23 + 1/2*denom(1/4*s12^2)*mt^5*s12*s24 - 1/2*denom(1/4*s12^2)*mt^5*s12*
      s23;
 
 .sort
id KMatrix(3,20) =  2*mt^3*s24 + 2*mt^3*s23 + 2*mt^3*s14 + 2*mt^3*s13 + 2*mt^3
      *s12 - 2*mt^3*mh^2 - denom(1/2*s12)*mt*s13*s23*s24 - denom(1/2*s12)*mt*
      s13*s23^2 - denom(1/2*s12)*mt*s13*s14*s23 - denom(1/2*s12)*mt*s13^2*s23
       - denom(1/2*s12)*mt*s12*s13*s23 + denom(1/2*s12)*mt*mh^2*s13*s23 + 
      denom(1/2*s12)*mt^3*s23*s24 + denom(1/2*s12)*mt^3*s23^2 - 2*denom(1/2*
      s12)*mt^3*s14*s24 + 2*denom(1/2*s12)*mt^3*s14*s23 + 2*denom(1/2*s12)*
      mt^3*s13*s24 + 2*denom(1/2*s12)*mt^3*s13*s23 + denom(1/2*s12)*mt^3*s13*
      s14 + denom(1/2*s12)*mt^3*s13^2 + denom(1/2*s12)*mt^3*s12*s23 + denom(1/
      2*s12)*mt^3*s12*s13 - denom(1/2*s12)*mt^3*mh^2*s23 - denom(1/2*s12)*mt^3
      *mh^2*s13 - 2*denom(1/2*s12)*mt^5*s23 - 2*denom(1/2*s12)*mt^5*s13 - 
      denom(1/2*s12)*mt^5*s12 + denom(1/2*s12)*mt^5*mh^2 + denom(1/4*s12^2)*mt
      *s13*s14*s23*s24 - 1/2*denom(1/4*s12^2)*mt*s13*s14*s23^2 - 1/2*denom(1/4
      *s12^2)*mt*s13^2*s23*s24 - denom(1/4*s12^2)*mt^3*s14*s23*s24 + 1/2*
      denom(1/4*s12^2)*mt^3*s14*s23^2 + 1/2*denom(1/4*s12^2)*mt^3*s13*s23^2 - 
      denom(1/4*s12^2)*mt^3*s13*s14*s24 + 1/2*denom(1/4*s12^2)*mt^3*s13^2*s24
       + 1/2*denom(1/4*s12^2)*mt^3*s13^2*s23 + 1/2*denom(1/4*s12^2)*mt^5*s23*
      s24 - 1/2*denom(1/4*s12^2)*mt^5*s23^2 + denom(1/4*s12^2)*mt^5*s14*s24 - 
      denom(1/4*s12^2)*mt^5*s13*s23 + 1/2*denom(1/4*s12^2)*mt^5*s13*s14 - 1/2*
      denom(1/4*s12^2)*mt^5*s13^2 - 1/2*denom(1/4*s12^2)*mt^7*s24 + 1/2*denom(
      1/4*s12^2)*mt^7*s23 - 1/2*denom(1/4*s12^2)*mt^7*s14 + 1/2*denom(1/4*
      s12^2)*mt^7*s13;
 
 .sort
id KMatrix(3,21) =   - mt*s24^2 - 2*mt*s23*s24 - mt*s23^2 - 2*mt*s14*s24 - 2*
      mt*s14*s23 - mt*s14^2 - 2*mt*s13*s24 - 2*mt*s13*s23 - 2*mt*s13*s14 - mt*
      s13^2 - 2*mt*s12*s24 - 2*mt*s12*s23 - 2*mt*s12*s14 - 2*mt*s12*s13 - mt*
      s12^2 + 2*mt*mh^2*s24 + 2*mt*mh^2*s23 + 2*mt*mh^2*s14 + 2*mt*mh^2*s13 + 
      2*mt*mh^2*s12 - mt*mh^4 + 2*mt^3*s24 + 2*mt^3*s23 + 2*mt^3*s14 + 2*mt^3*
      s13 + 2*mt^3*s12 - 2*mt^3*mh^2 + denom(1/2*s12)*mt*s14*s24^2 - denom(1/2
      *s12)*mt*s14*s23^2 + denom(1/2*s12)*mt*s14^2*s24 - denom(1/2*s12)*mt*
      s14^2*s23 - denom(1/2*s12)*mt*s13*s24^2 - denom(1/2*s12)*mt*s13*s23*s24
       - denom(1/2*s12)*mt*s13*s14*s23 - denom(1/2*s12)*mt*s13^2*s24 + denom(1/
      2*s12)*mt*s12*s14*s24 - denom(1/2*s12)*mt*s12*s14*s23 - denom(1/2*s12)*
      mt*s12*s13*s24 - denom(1/2*s12)*mt*mh^2*s14*s24 + denom(1/2*s12)*mt*mh^2
      *s14*s23 + denom(1/2*s12)*mt*mh^2*s13*s24 + denom(1/2*s12)*mt^3*s23*s24
       + denom(1/2*s12)*mt^3*s23^2 - 2*denom(1/2*s12)*mt^3*s14*s24 + 2*denom(1/
      2*s12)*mt^3*s14*s23 + 2*denom(1/2*s12)*mt^3*s13*s24 + 2*denom(1/2*s12)*
      mt^3*s13*s23 + denom(1/2*s12)*mt^3*s13*s14 + denom(1/2*s12)*mt^3*s13^2
       + denom(1/2*s12)*mt^3*s12*s23 + denom(1/2*s12)*mt^3*s12*s13 - denom(1/2
      *s12)*mt^3*mh^2*s23 - denom(1/2*s12)*mt^3*mh^2*s13 - 2*denom(1/2*s12)*
      mt^5*s23 - 2*denom(1/2*s12)*mt^5*s13 - denom(1/2*s12)*mt^5*s12 + denom(1/
      2*s12)*mt^5*mh^2 + 1/2*denom(1/4*s12^2)*mt*s14^2*s23*s24 - 1/4*denom(1/4
      *s12^2)*mt*s14^2*s23^2 + 1/2*denom(1/4*s12^2)*mt*s13*s14*s24^2 - 1/2*
      denom(1/4*s12^2)*mt*s13*s14*s23*s24 - 1/4*denom(1/4*s12^2)*mt*s13^2*
      s24^2 - 1/2*denom(1/4*s12^2)*mt^3*s14*s24^2 - 1/2*denom(1/4*s12^2)*mt^3*
      s14*s23*s24 + 1/2*denom(1/4*s12^2)*mt^3*s14*s23^2 - 1/2*denom(1/4*s12^2)
      *mt^3*s14^2*s24 + 1/2*denom(1/4*s12^2)*mt^3*s13*s23*s24 - 1/2*denom(1/4*
      s12^2)*mt^3*s13*s14*s24 + 1/2*denom(1/4*s12^2)*mt^3*s13*s14*s23 + 1/2*
      denom(1/4*s12^2)*mt^3*s13^2*s24 + 1/4*denom(1/4*s12^2)*mt^5*s24^2 - 1/4*
      denom(1/4*s12^2)*mt^5*s23^2 + 3/2*denom(1/4*s12^2)*mt^5*s14*s24 - 1/2*
      denom(1/4*s12^2)*mt^5*s14*s23 + 1/4*denom(1/4*s12^2)*mt^5*s14^2 - 1/2*
      denom(1/4*s12^2)*mt^5*s13*s24 - 1/2*denom(1/4*s12^2)*mt^5*s13*s23 - 1/4*
      denom(1/4*s12^2)*mt^5*s13^2 - 1/2*denom(1/4*s12^2)*mt^7*s24 + 1/2*denom(
      1/4*s12^2)*mt^7*s23 - 1/2*denom(1/4*s12^2)*mt^7*s14 + 1/2*denom(1/4*
      s12^2)*mt^7*s13;
 
 .sort
id KMatrix(3,22) =  mt*s24^2 + 2*mt*s23*s24 + mt*s23^2 + 2*mt*s14*s24 + 2*mt*
      s14*s23 + mt*s14^2 + 2*mt*s13*s24 + 2*mt*s13*s23 + 2*mt*s13*s14 + mt*
      s13^2 + 2*mt*s12*s24 + 2*mt*s12*s23 + 2*mt*s12*s14 + 2*mt*s12*s13 + mt*
      s12^2 - 2*mt*mh^2*s24 - 2*mt*mh^2*s23 - 2*mt*mh^2*s14 - 2*mt*mh^2*s13 - 
      2*mt*mh^2*s12 + mt*mh^4 - 2*mt^3*s24 - 2*mt^3*s23 - 2*mt^3*s14 - 2*mt^3*
      s13 - 2*mt^3*s12 + 2*mt^3*mh^2 + denom(1/2*s12)*mt*s14*s23*s24 + denom(1/
      2*s12)*mt*s14*s23^2 + denom(1/2*s12)*mt*s14^2*s23 + denom(1/2*s12)*mt*
      s13*s24^2 - denom(1/2*s12)*mt*s13*s23^2 + denom(1/2*s12)*mt*s13*s14*s24
       + denom(1/2*s12)*mt*s13^2*s24 - denom(1/2*s12)*mt*s13^2*s23 + denom(1/2
      *s12)*mt*s12*s14*s23 + denom(1/2*s12)*mt*s12*s13*s24 - denom(1/2*s12)*mt
      *s12*s13*s23 - denom(1/2*s12)*mt*mh^2*s14*s23 - denom(1/2*s12)*mt*mh^2*
      s13*s24 + denom(1/2*s12)*mt*mh^2*s13*s23 - denom(1/2*s12)*mt^3*s24^2 - 
      denom(1/2*s12)*mt^3*s23*s24 - 2*denom(1/2*s12)*mt^3*s14*s24 - 2*denom(1/
      2*s12)*mt^3*s14*s23 - denom(1/2*s12)*mt^3*s14^2 - 2*denom(1/2*s12)*mt^3*
      s13*s24 + 2*denom(1/2*s12)*mt^3*s13*s23 - denom(1/2*s12)*mt^3*s13*s14 - 
      denom(1/2*s12)*mt^3*s12*s24 - denom(1/2*s12)*mt^3*s12*s14 + denom(1/2*
      s12)*mt^3*mh^2*s24 + denom(1/2*s12)*mt^3*mh^2*s14 + 2*denom(1/2*s12)*
      mt^5*s24 + 2*denom(1/2*s12)*mt^5*s14 + denom(1/2*s12)*mt^5*s12 - denom(1/
      2*s12)*mt^5*mh^2 + 1/4*denom(1/4*s12^2)*mt*s14^2*s23^2 + 1/2*denom(1/4*
      s12^2)*mt*s13*s14*s23*s24 - 1/2*denom(1/4*s12^2)*mt*s13*s14*s23^2 + 1/4*
      denom(1/4*s12^2)*mt*s13^2*s24^2 - 1/2*denom(1/4*s12^2)*mt*s13^2*s23*s24
       - 1/2*denom(1/4*s12^2)*mt^3*s14*s23*s24 - 1/2*denom(1/4*s12^2)*mt^3*
      s14^2*s23 - 1/2*denom(1/4*s12^2)*mt^3*s13*s24^2 + 1/2*denom(1/4*s12^2)*
      mt^3*s13*s23*s24 + 1/2*denom(1/4*s12^2)*mt^3*s13*s23^2 - 1/2*denom(1/4*
      s12^2)*mt^3*s13*s14*s24 + 1/2*denom(1/4*s12^2)*mt^3*s13*s14*s23 + 1/2*
      denom(1/4*s12^2)*mt^3*s13^2*s23 + 1/4*denom(1/4*s12^2)*mt^5*s24^2 - 1/4*
      denom(1/4*s12^2)*mt^5*s23^2 + 1/2*denom(1/4*s12^2)*mt^5*s14*s24 + 1/2*
      denom(1/4*s12^2)*mt^5*s14*s23 + 1/4*denom(1/4*s12^2)*mt^5*s14^2 + 1/2*
      denom(1/4*s12^2)*mt^5*s13*s24 - 3/2*denom(1/4*s12^2)*mt^5*s13*s23 - 1/4*
      denom(1/4*s12^2)*mt^5*s13^2 - 1/2*denom(1/4*s12^2)*mt^7*s24 + 1/2*denom(
      1/4*s12^2)*mt^7*s23 - 1/2*denom(1/4*s12^2)*mt^7*s14 + 1/2*denom(1/4*
      s12^2)*mt^7*s13;
 
 .sort
id KMatrix(3,23) =   - 2*mt^3*s24 - 2*mt^3*s23 - 2*mt^3*s14 - 2*mt^3*s13 - 2*
      mt^3*s12 + 2*mt^3*mh^2 + denom(1/2*s12)*mt*s14*s24^2 + denom(1/2*s12)*mt
      *s14*s23*s24 + denom(1/2*s12)*mt*s14^2*s24 + denom(1/2*s12)*mt*s13*s14*
      s24 + denom(1/2*s12)*mt*s12*s14*s24 - denom(1/2*s12)*mt*mh^2*s14*s24 - 
      denom(1/2*s12)*mt^3*s24^2 - denom(1/2*s12)*mt^3*s23*s24 - 2*denom(1/2*
      s12)*mt^3*s14*s24 - 2*denom(1/2*s12)*mt^3*s14*s23 - denom(1/2*s12)*mt^3*
      s14^2 - 2*denom(1/2*s12)*mt^3*s13*s24 + 2*denom(1/2*s12)*mt^3*s13*s23 - 
      denom(1/2*s12)*mt^3*s13*s14 - denom(1/2*s12)*mt^3*s12*s24 - denom(1/2*
      s12)*mt^3*s12*s14 + denom(1/2*s12)*mt^3*mh^2*s24 + denom(1/2*s12)*mt^3*
      mh^2*s14 + 2*denom(1/2*s12)*mt^5*s24 + 2*denom(1/2*s12)*mt^5*s14 + 
      denom(1/2*s12)*mt^5*s12 - denom(1/2*s12)*mt^5*mh^2 + 1/2*denom(1/4*s12^2
      )*mt*s14^2*s23*s24 + 1/2*denom(1/4*s12^2)*mt*s13*s14*s24^2 - denom(1/4*
      s12^2)*mt*s13*s14*s23*s24 - 1/2*denom(1/4*s12^2)*mt^3*s14*s24^2 - 1/2*
      denom(1/4*s12^2)*mt^3*s14^2*s24 - 1/2*denom(1/4*s12^2)*mt^3*s14^2*s23 - 
      1/2*denom(1/4*s12^2)*mt^3*s13*s24^2 + denom(1/4*s12^2)*mt^3*s13*s23*s24
       + denom(1/4*s12^2)*mt^3*s13*s14*s23 + 1/2*denom(1/4*s12^2)*mt^5*s24^2
       - 1/2*denom(1/4*s12^2)*mt^5*s23*s24 + denom(1/4*s12^2)*mt^5*s14*s24 + 1/
      2*denom(1/4*s12^2)*mt^5*s14^2 - denom(1/4*s12^2)*mt^5*s13*s23 - 1/2*
      denom(1/4*s12^2)*mt^5*s13*s14 - 1/2*denom(1/4*s12^2)*mt^7*s24 + 1/2*
      denom(1/4*s12^2)*mt^7*s23 - 1/2*denom(1/4*s12^2)*mt^7*s14 + 1/2*denom(1/
      4*s12^2)*mt^7*s13;
 
 .sort
id KMatrix(3,24) =   - 1/2*s14*s23*s24 - 1/2*s14*s23^2 - 1/2*s14^2*s23 + 1/2*
      s13*s24^2 + 1/2*s13*s23*s24 + 1/2*s13*s14*s24 - 1/2*s13*s14*s23 + 1/2*
      s13^2*s24 + 1/2*s12*s24^2 + s12*s23*s24 + 1/2*s12*s23^2 + s12*s14*s24 + 
      1/2*s12*s14*s23 + 1/2*s12*s14^2 + 3/2*s12*s13*s24 + s12*s13*s23 + s12*
      s13*s14 + 1/2*s12*s13^2 + s12^2*s24 + s12^2*s23 + s12^2*s14 + s12^2*s13
       + 1/2*s12^3 + 1/2*mh^2*s14*s23 - 1/2*mh^2*s13*s24 - mh^2*s12*s24 - mh^2
      *s12*s23 - mh^2*s12*s14 - mh^2*s12*s13 - mh^2*s12^2 + 1/2*mh^4*s12 - 1/2
      *mt^2*s24^2 + 1/2*mt^2*s23^2 + 2*mt^2*s14*s23 + 1/2*mt^2*s14^2 - 2*mt^2*
      s13*s24 - 1/2*mt^2*s13^2 - 3/2*mt^2*s12*s24 - 1/2*mt^2*s12*s23 - 1/2*
      mt^2*s12*s14 - 3/2*mt^2*s12*s13 - mt^2*s12^2 + 1/2*mt^2*mh^2*s24 - 1/2*
      mt^2*mh^2*s23 - 1/2*mt^2*mh^2*s14 + 1/2*mt^2*mh^2*s13 + mt^2*mh^2*s12 + 
      mt^4*s24 - mt^4*s23 - mt^4*s14 + mt^4*s13 - 1/2*denom(1/2*s12)*s14^2*
      s23^2 + 1/2*denom(1/2*s12)*s13^2*s24^2 + 1/2*denom(1/2*s12)*s12*s14*s23*
      s24 + 1/2*denom(1/2*s12)*s12*s14*s23^2 + 1/2*denom(1/2*s12)*s12*s14^2*
      s23 + 1/2*denom(1/2*s12)*s12*s13*s24^2 + 1/2*denom(1/2*s12)*s12*s13*s23*
      s24 + 1/2*denom(1/2*s12)*s12*s13*s14*s24 + 1/2*denom(1/2*s12)*s12*s13*
      s14*s23 + 1/2*denom(1/2*s12)*s12*s13^2*s24 + 1/2*denom(1/2*s12)*s12^2*
      s14*s23 + 1/2*denom(1/2*s12)*s12^2*s13*s24 - 1/2*denom(1/2*s12)*mh^2*s12
      *s14*s23 - 1/2*denom(1/2*s12)*mh^2*s12*s13*s24 + denom(1/2*s12)*mt^2*s14
      *s23^2 + denom(1/2*s12)*mt^2*s14^2*s23 - denom(1/2*s12)*mt^2*s13*s24^2
       - denom(1/2*s12)*mt^2*s13^2*s24 - 1/2*denom(1/2*s12)*mt^2*s12*s24^2 - 
      denom(1/2*s12)*mt^2*s12*s23*s24 - 1/2*denom(1/2*s12)*mt^2*s12*s23^2 - 
      denom(1/2*s12)*mt^2*s12*s14*s24 - denom(1/2*s12)*mt^2*s12*s14*s23 - 1/2*
      denom(1/2*s12)*mt^2*s12*s14^2 - denom(1/2*s12)*mt^2*s12*s13*s24 - denom(
      1/2*s12)*mt^2*s12*s13*s23 - denom(1/2*s12)*mt^2*s12*s13*s14 - 1/2*denom(
      1/2*s12)*mt^2*s12*s13^2 - 1/2*denom(1/2*s12)*mt^2*s12^2*s24 - 1/2*denom(
      1/2*s12)*mt^2*s12^2*s23 - 1/2*denom(1/2*s12)*mt^2*s12^2*s14 - 1/2*denom(
      1/2*s12)*mt^2*s12^2*s13 + 1/2*denom(1/2*s12)*mt^2*mh^2*s12*s24 + 1/2*
      denom(1/2*s12)*mt^2*mh^2*s12*s23 + 1/2*denom(1/2*s12)*mt^2*mh^2*s12*s14
       + 1/2*denom(1/2*s12)*mt^2*mh^2*s12*s13 + 1/2*denom(1/2*s12)*mt^4*s24^2
       - 1/2*denom(1/2*s12)*mt^4*s23^2 - 2*denom(1/2*s12)*mt^4*s14*s23 - 1/2*
      denom(1/2*s12)*mt^4*s14^2 + 2*denom(1/2*s12)*mt^4*s13*s24 + 1/2*denom(1/
      2*s12)*mt^4*s13^2 + denom(1/2*s12)*mt^4*s12*s24 + denom(1/2*s12)*mt^4*
      s12*s23 + denom(1/2*s12)*mt^4*s12*s14 + denom(1/2*s12)*mt^4*s12*s13 + 
      denom(1/2*s12)*mt^4*s12^2 - denom(1/2*s12)*mt^4*mh^2*s12 - denom(1/2*s12
      )*mt^6*s24 + denom(1/2*s12)*mt^6*s23 + denom(1/2*s12)*mt^6*s14 - denom(1/
      2*s12)*mt^6*s13 + 1/8*denom(1/4*s12^2)*s12*s14^2*s23^2 - 1/8*denom(1/4*
      s12^2)*s12*s13^2*s24^2 - 1/8*denom(1/4*s12^2)*s12^2*s14*s23*s24 - 1/8*
      denom(1/4*s12^2)*s12^2*s14*s23^2 - 1/8*denom(1/4*s12^2)*s12^2*s14^2*s23
       - 1/8*denom(1/4*s12^2)*s12^2*s13*s24^2 - 1/8*denom(1/4*s12^2)*s12^2*s13
      *s23*s24 - 1/8*denom(1/4*s12^2)*s12^2*s13*s14*s24 - 1/8*denom(1/4*s12^2)
      *s12^2*s13*s14*s23 - 1/8*denom(1/4*s12^2)*s12^2*s13^2*s24 - 1/8*denom(1/
      4*s12^2)*s12^3*s14*s23 - 1/8*denom(1/4*s12^2)*s12^3*s13*s24 + 1/8*denom(
      1/4*s12^2)*mh^2*s12^2*s14*s23 + 1/8*denom(1/4*s12^2)*mh^2*s12^2*s13*s24
       - 1/4*denom(1/4*s12^2)*mt^2*s12*s14*s23^2 - 1/4*denom(1/4*s12^2)*mt^2*
      s12*s14^2*s23 + 1/4*denom(1/4*s12^2)*mt^2*s12*s13*s24^2 + 1/4*denom(1/4*
      s12^2)*mt^2*s12*s13^2*s24 + 1/8*denom(1/4*s12^2)*mt^2*s12^2*s24^2 + 1/4*
      denom(1/4*s12^2)*mt^2*s12^2*s23*s24 + 1/8*denom(1/4*s12^2)*mt^2*s12^2*
      s23^2 + 1/4*denom(1/4*s12^2)*mt^2*s12^2*s14*s24 + 1/4*denom(1/4*s12^2)*
      mt^2*s12^2*s14*s23 + 1/8*denom(1/4*s12^2)*mt^2*s12^2*s14^2 + 1/4*denom(1/
      4*s12^2)*mt^2*s12^2*s13*s24 + 1/4*denom(1/4*s12^2)*mt^2*s12^2*s13*s23 + 
      1/4*denom(1/4*s12^2)*mt^2*s12^2*s13*s14 + 1/8*denom(1/4*s12^2)*mt^2*
      s12^2*s13^2 + 1/8*denom(1/4*s12^2)*mt^2*s12^3*s24 + 1/8*denom(1/4*s12^2)
      *mt^2*s12^3*s23 + 1/8*denom(1/4*s12^2)*mt^2*s12^3*s14 + 1/8*denom(1/4*
      s12^2)*mt^2*s12^3*s13 - 1/8*denom(1/4*s12^2)*mt^2*mh^2*s12^2*s24 - 1/8*
      denom(1/4*s12^2)*mt^2*mh^2*s12^2*s23 - 1/8*denom(1/4*s12^2)*mt^2*mh^2*
      s12^2*s14 - 1/8*denom(1/4*s12^2)*mt^2*mh^2*s12^2*s13 - 1/8*denom(1/4*
      s12^2)*mt^4*s12*s24^2 + 1/8*denom(1/4*s12^2)*mt^4*s12*s23^2 + 1/2*denom(
      1/4*s12^2)*mt^4*s12*s14*s23 + 1/8*denom(1/4*s12^2)*mt^4*s12*s14^2 - 1/2*
      denom(1/4*s12^2)*mt^4*s12*s13*s24 - 1/8*denom(1/4*s12^2)*mt^4*s12*s13^2
       - 1/4*denom(1/4*s12^2)*mt^4*s12^2*s24 - 1/4*denom(1/4*s12^2)*mt^4*s12^2
      *s23 - 1/4*denom(1/4*s12^2)*mt^4*s12^2*s14 - 1/4*denom(1/4*s12^2)*mt^4*
      s12^2*s13 - 1/4*denom(1/4*s12^2)*mt^4*s12^3 + 1/4*denom(1/4*s12^2)*mt^4*
      mh^2*s12^2 + 1/4*denom(1/4*s12^2)*mt^6*s12*s24 - 1/4*denom(1/4*s12^2)*
      mt^6*s12*s23 - 1/4*denom(1/4*s12^2)*mt^6*s12*s14 + 1/4*denom(1/4*s12^2)*
      mt^6*s12*s13;
 
 .sort
id KMatrix(3,25) =  2*mt^2*s24 + 2*mt^2*s23 + 2*mt^2*s14 + 2*mt^2*s13 + 2*mt^2
      *s12 - 2*mt^2*mh^2 - 2*denom(1/2*s12)*mt^2*s14*s24 + 2*denom(1/2*s12)*
      mt^2*s14*s23 + 2*denom(1/2*s12)*mt^2*s13*s24 - 2*denom(1/2*s12)*mt^2*s13
      *s23 - 1/4*denom(1/4*s12^2)*s14^2*s23^2 + 1/2*denom(1/4*s12^2)*s13*s14*
      s23*s24 - 1/4*denom(1/4*s12^2)*s13^2*s24^2 - 1/4*denom(1/4*s12^2)*s12*
      s14*s23*s24 - 1/4*denom(1/4*s12^2)*s12*s14*s23^2 - 1/4*denom(1/4*s12^2)*
      s12*s14^2*s23 - 1/4*denom(1/4*s12^2)*s12*s13*s24^2 - 1/4*denom(1/4*s12^2
      )*s12*s13*s23*s24 - 1/4*denom(1/4*s12^2)*s12*s13*s14*s24 - 1/4*denom(1/4
      *s12^2)*s12*s13*s14*s23 - 1/4*denom(1/4*s12^2)*s12*s13^2*s24 - 1/4*
      denom(1/4*s12^2)*s12^2*s14*s23 - 1/4*denom(1/4*s12^2)*s12^2*s13*s24 + 1/
      4*denom(1/4*s12^2)*mh^2*s12*s14*s23 + 1/4*denom(1/4*s12^2)*mh^2*s12*s13*
      s24 - 1/2*denom(1/4*s12^2)*mt^2*s14*s23*s24 + 1/2*denom(1/4*s12^2)*mt^2*
      s14*s23^2 + 1/2*denom(1/4*s12^2)*mt^2*s14^2*s23 + 1/2*denom(1/4*s12^2)*
      mt^2*s13*s24^2 - 1/2*denom(1/4*s12^2)*mt^2*s13*s23*s24 - 1/2*denom(1/4*
      s12^2)*mt^2*s13*s14*s24 - 1/2*denom(1/4*s12^2)*mt^2*s13*s14*s23 + 1/2*
      denom(1/4*s12^2)*mt^2*s13^2*s24 + 1/4*denom(1/4*s12^2)*mt^2*s12*s24^2 + 
      1/2*denom(1/4*s12^2)*mt^2*s12*s23*s24 + 1/4*denom(1/4*s12^2)*mt^2*s12*
      s23^2 + 1/2*denom(1/4*s12^2)*mt^2*s12*s14*s24 + 1/2*denom(1/4*s12^2)*
      mt^2*s12*s14*s23 + 1/4*denom(1/4*s12^2)*mt^2*s12*s14^2 + 1/2*denom(1/4*
      s12^2)*mt^2*s12*s13*s24 + 1/2*denom(1/4*s12^2)*mt^2*s12*s13*s23 + 1/2*
      denom(1/4*s12^2)*mt^2*s12*s13*s14 + 1/4*denom(1/4*s12^2)*mt^2*s12*s13^2
       + 1/4*denom(1/4*s12^2)*mt^2*s12^2*s24 + 1/4*denom(1/4*s12^2)*mt^2*s12^2
      *s23 + 1/4*denom(1/4*s12^2)*mt^2*s12^2*s14 + 1/4*denom(1/4*s12^2)*mt^2*
      s12^2*s13 - 1/4*denom(1/4*s12^2)*mt^2*mh^2*s12*s24 - 1/4*denom(1/4*s12^2
      )*mt^2*mh^2*s12*s23 - 1/4*denom(1/4*s12^2)*mt^2*mh^2*s12*s14 - 1/4*
      denom(1/4*s12^2)*mt^2*mh^2*s12*s13 - 1/4*denom(1/4*s12^2)*mt^4*s24^2 + 1/
      2*denom(1/4*s12^2)*mt^4*s23*s24 - 1/4*denom(1/4*s12^2)*mt^4*s23^2 + 1/2*
      denom(1/4*s12^2)*mt^4*s14*s24 - 1/2*denom(1/4*s12^2)*mt^4*s14*s23 - 1/4*
      denom(1/4*s12^2)*mt^4*s14^2 - 1/2*denom(1/4*s12^2)*mt^4*s13*s24 + 1/2*
      denom(1/4*s12^2)*mt^4*s13*s23 + 1/2*denom(1/4*s12^2)*mt^4*s13*s14 - 1/4*
      denom(1/4*s12^2)*mt^4*s13^2 - 1/2*denom(1/4*s12^2)*mt^4*s12*s24 - 1/2*
      denom(1/4*s12^2)*mt^4*s12*s23 - 1/2*denom(1/4*s12^2)*mt^4*s12*s14 - 1/2*
      denom(1/4*s12^2)*mt^4*s12*s13 - 1/2*denom(1/4*s12^2)*mt^4*s12^2 + 1/2*
      denom(1/4*s12^2)*mt^4*mh^2*s12;
 
 .sort
id KMatrix(3,26) =  mt^2*s14*s24 + mt^2*s14*s23 + mt^2*s14^2 + mt^2*s13*s14 + 
      mt^2*s12*s14 - mt^2*mh^2*s14 - mt^4*s24 - mt^4*s23 - 3*mt^4*s14 + mt^4*
      s13 - mt^4*s12 + mt^4*mh^2 - 1/2*denom(1/2*s12)*s13*s14*s23*s24 - 1/2*
      denom(1/2*s12)*s13*s14*s23^2 - 1/2*denom(1/2*s12)*s13*s14^2*s23 - 1/2*
      denom(1/2*s12)*s13^2*s14*s23 - 1/2*denom(1/2*s12)*s12*s13*s14*s23 + 1/2*
      denom(1/2*s12)*mh^2*s13*s14*s23 + 1/2*denom(1/2*s12)*mt^2*s14*s23*s24 + 
      1/2*denom(1/2*s12)*mt^2*s14*s23^2 + denom(1/2*s12)*mt^2*s14^2*s23 + 1/2*
      denom(1/2*s12)*mt^2*s13*s23*s24 + 1/2*denom(1/2*s12)*mt^2*s13*s23^2 + 5/
      2*denom(1/2*s12)*mt^2*s13*s14*s23 + 1/2*denom(1/2*s12)*mt^2*s13*s14^2 - 
      1/2*denom(1/2*s12)*mt^2*s13^2*s23 + 1/2*denom(1/2*s12)*mt^2*s13^2*s14 + 
      1/2*denom(1/2*s12)*mt^2*s12*s14*s23 + 1/2*denom(1/2*s12)*mt^2*s12*s13*
      s23 + 1/2*denom(1/2*s12)*mt^2*s12*s13*s14 - 1/2*denom(1/2*s12)*mt^2*mh^2
      *s14*s23 - 1/2*denom(1/2*s12)*mt^2*mh^2*s13*s23 - 1/2*denom(1/2*s12)*
      mt^2*mh^2*s13*s14 - 1/2*denom(1/2*s12)*mt^4*s23*s24 - 1/2*denom(1/2*s12)
      *mt^4*s23^2 - 3*denom(1/2*s12)*mt^4*s14*s23 - denom(1/2*s12)*mt^4*s14^2
       - 3/2*denom(1/2*s12)*mt^4*s13*s14 + 1/2*denom(1/2*s12)*mt^4*s13^2 - 1/2
      *denom(1/2*s12)*mt^4*s12*s23 - 1/2*denom(1/2*s12)*mt^4*s12*s14 - 1/2*
      denom(1/2*s12)*mt^4*s12*s13 + 1/2*denom(1/2*s12)*mt^4*mh^2*s23 + 1/2*
      denom(1/2*s12)*mt^4*mh^2*s14 + 1/2*denom(1/2*s12)*mt^4*mh^2*s13 + denom(
      1/2*s12)*mt^6*s23 + 2*denom(1/2*s12)*mt^6*s14 - denom(1/2*s12)*mt^6*s13
       + 1/2*denom(1/2*s12)*mt^6*s12 - 1/2*denom(1/2*s12)*mt^6*mh^2 - 1/4*
      denom(1/4*s12^2)*s13*s14^2*s23^2 + 1/4*denom(1/4*s12^2)*s13^2*s14*s23*
      s24 + 1/4*denom(1/4*s12^2)*mt^2*s14^2*s23^2 - 1/2*denom(1/4*s12^2)*mt^2*
      s13*s14*s23*s24 + 1/2*denom(1/4*s12^2)*mt^2*s13*s14*s23^2 + 1/2*denom(1/
      4*s12^2)*mt^2*s13*s14^2*s23 - 1/4*denom(1/4*s12^2)*mt^2*s13^2*s23*s24 - 
      1/4*denom(1/4*s12^2)*mt^2*s13^2*s14*s24 - 1/4*denom(1/4*s12^2)*mt^2*
      s13^2*s14*s23 + 1/4*denom(1/4*s12^2)*mt^4*s14*s23*s24 - 1/2*denom(1/4*
      s12^2)*mt^4*s14*s23^2 - 1/2*denom(1/4*s12^2)*mt^4*s14^2*s23 + 1/2*denom(
      1/4*s12^2)*mt^4*s13*s23*s24 - 1/4*denom(1/4*s12^2)*mt^4*s13*s23^2 + 1/2*
      denom(1/4*s12^2)*mt^4*s13*s14*s24 - 1/2*denom(1/4*s12^2)*mt^4*s13*s14*
      s23 - 1/4*denom(1/4*s12^2)*mt^4*s13*s14^2 + 1/4*denom(1/4*s12^2)*mt^4*
      s13^2*s24 + 1/4*denom(1/4*s12^2)*mt^4*s13^2*s23 + 1/4*denom(1/4*s12^2)*
      mt^4*s13^2*s14 - 1/4*denom(1/4*s12^2)*mt^6*s23*s24 + 1/4*denom(1/4*s12^2
      )*mt^6*s23^2 - 1/4*denom(1/4*s12^2)*mt^6*s14*s24 + 3/4*denom(1/4*s12^2)*
      mt^6*s14*s23 + 1/4*denom(1/4*s12^2)*mt^6*s14^2 - 1/2*denom(1/4*s12^2)*
      mt^6*s13*s24 - 1/4*denom(1/4*s12^2)*mt^6*s13^2 + 1/4*denom(1/4*s12^2)*
      mt^8*s24 - 1/4*denom(1/4*s12^2)*mt^8*s23 - 1/4*denom(1/4*s12^2)*mt^8*s14
       + 1/4*denom(1/4*s12^2)*mt^8*s13;
 
 .sort
id KMatrix(3,27) =  mt^2*s24^2 + mt^2*s23*s24 + mt^2*s14*s24 + mt^2*s13*s24 + 
      mt^2*s12*s24 - mt^2*mh^2*s24 - 3*mt^4*s24 + mt^4*s23 - mt^4*s14 - mt^4*
      s13 - mt^4*s12 + mt^4*mh^2 - 1/2*denom(1/2*s12)*s13*s23*s24^2 - 1/2*
      denom(1/2*s12)*s13*s23^2*s24 - 1/2*denom(1/2*s12)*s13*s14*s23*s24 - 1/2*
      denom(1/2*s12)*s13^2*s23*s24 - 1/2*denom(1/2*s12)*s12*s13*s23*s24 + 1/2*
      denom(1/2*s12)*mh^2*s13*s23*s24 + 1/2*denom(1/2*s12)*mt^2*s23*s24^2 + 1/
      2*denom(1/2*s12)*mt^2*s23^2*s24 + denom(1/2*s12)*mt^2*s13*s24^2 + 5/2*
      denom(1/2*s12)*mt^2*s13*s23*s24 - 1/2*denom(1/2*s12)*mt^2*s13*s23^2 + 1/
      2*denom(1/2*s12)*mt^2*s13*s14*s24 + 1/2*denom(1/2*s12)*mt^2*s13*s14*s23
       + 1/2*denom(1/2*s12)*mt^2*s13^2*s24 + 1/2*denom(1/2*s12)*mt^2*s13^2*s23
       + 1/2*denom(1/2*s12)*mt^2*s12*s23*s24 + 1/2*denom(1/2*s12)*mt^2*s12*s13
      *s24 + 1/2*denom(1/2*s12)*mt^2*s12*s13*s23 - 1/2*denom(1/2*s12)*mt^2*
      mh^2*s23*s24 - 1/2*denom(1/2*s12)*mt^2*mh^2*s13*s24 - 1/2*denom(1/2*s12)
      *mt^2*mh^2*s13*s23 - denom(1/2*s12)*mt^4*s24^2 - 3/2*denom(1/2*s12)*mt^4
      *s23*s24 + 1/2*denom(1/2*s12)*mt^4*s23^2 - 3*denom(1/2*s12)*mt^4*s13*s24
       - 1/2*denom(1/2*s12)*mt^4*s13*s14 - 1/2*denom(1/2*s12)*mt^4*s13^2 - 1/2
      *denom(1/2*s12)*mt^4*s12*s24 - 1/2*denom(1/2*s12)*mt^4*s12*s23 - 1/2*
      denom(1/2*s12)*mt^4*s12*s13 + 1/2*denom(1/2*s12)*mt^4*mh^2*s24 + 1/2*
      denom(1/2*s12)*mt^4*mh^2*s23 + 1/2*denom(1/2*s12)*mt^4*mh^2*s13 + 2*
      denom(1/2*s12)*mt^6*s24 - denom(1/2*s12)*mt^6*s23 + denom(1/2*s12)*mt^6*
      s13 + 1/2*denom(1/2*s12)*mt^6*s12 - 1/2*denom(1/2*s12)*mt^6*mh^2 + 1/4*
      denom(1/4*s12^2)*s13*s14*s23^2*s24 - 1/4*denom(1/4*s12^2)*s13^2*s23*
      s24^2 - 1/4*denom(1/4*s12^2)*mt^2*s14*s23^2*s24 + 1/2*denom(1/4*s12^2)*
      mt^2*s13*s23*s24^2 - 1/4*denom(1/4*s12^2)*mt^2*s13*s23^2*s24 - 1/2*
      denom(1/4*s12^2)*mt^2*s13*s14*s23*s24 - 1/4*denom(1/4*s12^2)*mt^2*s13*
      s14*s23^2 + 1/4*denom(1/4*s12^2)*mt^2*s13^2*s24^2 + 1/2*denom(1/4*s12^2)
      *mt^2*s13^2*s23*s24 - 1/4*denom(1/4*s12^2)*mt^4*s23*s24^2 + 1/4*denom(1/
      4*s12^2)*mt^4*s23^2*s24 + 1/2*denom(1/4*s12^2)*mt^4*s14*s23*s24 + 1/4*
      denom(1/4*s12^2)*mt^4*s14*s23^2 - 1/2*denom(1/4*s12^2)*mt^4*s13*s24^2 - 
      1/2*denom(1/4*s12^2)*mt^4*s13*s23*s24 + 1/4*denom(1/4*s12^2)*mt^4*s13*
      s23^2 + 1/4*denom(1/4*s12^2)*mt^4*s13*s14*s24 + 1/2*denom(1/4*s12^2)*
      mt^4*s13*s14*s23 - 1/2*denom(1/4*s12^2)*mt^4*s13^2*s24 - 1/4*denom(1/4*
      s12^2)*mt^4*s13^2*s23 + 1/4*denom(1/4*s12^2)*mt^6*s24^2 - 1/4*denom(1/4*
      s12^2)*mt^6*s23^2 - 1/4*denom(1/4*s12^2)*mt^6*s14*s24 - 1/2*denom(1/4*
      s12^2)*mt^6*s14*s23 + 3/4*denom(1/4*s12^2)*mt^6*s13*s24 - 1/4*denom(1/4*
      s12^2)*mt^6*s13*s14 + 1/4*denom(1/4*s12^2)*mt^6*s13^2 - 1/4*denom(1/4*
      s12^2)*mt^8*s24 + 1/4*denom(1/4*s12^2)*mt^8*s23 + 1/4*denom(1/4*s12^2)*
      mt^8*s14 - 1/4*denom(1/4*s12^2)*mt^8*s13;
 
 .sort
id KMatrix(3,28) =   - 1/2*s14*s24^2 - s14*s23*s24 - 1/2*s14*s23^2 - s14^2*s24
       - s14^2*s23 - 1/2*s14^3 - s13*s14*s24 - s13*s14*s23 - s13*s14^2 - 1/2*
      s13^2*s14 - s12*s14*s24 - s12*s14*s23 - s12*s14^2 - s12*s13*s14 - 1/2*
      s12^2*s14 + mh^2*s14*s24 + mh^2*s14*s23 + mh^2*s14^2 + mh^2*s13*s14 + 
      mh^2*s12*s14 - 1/2*mh^4*s14 + 1/2*mt^2*s24^2 + mt^2*s23*s24 + 1/2*mt^2*
      s23^2 + 3*mt^2*s14*s24 + 3*mt^2*s14*s23 + 5/2*mt^2*s14^2 + 2*mt^2*s13*
      s14 - 1/2*mt^2*s13^2 + mt^2*s12*s24 + mt^2*s12*s23 + 3*mt^2*s12*s14 + 1/
      2*mt^2*s12^2 - mt^2*mh^2*s24 - mt^2*mh^2*s23 - 3*mt^2*mh^2*s14 - mt^2*
      mh^2*s12 + 1/2*mt^2*mh^4 - mt^4*s24 - mt^4*s23 - 3*mt^4*s14 + mt^4*s13
       - mt^4*s12 + mt^4*mh^2 - 1/2*denom(1/2*s12)*s14^2*s23*s24 - 1/2*denom(1/
      2*s12)*s14^2*s23^2 - 1/2*denom(1/2*s12)*s14^3*s23 - 1/2*denom(1/2*s12)*
      s13*s14^2*s23 - 1/2*denom(1/2*s12)*s12*s14^2*s23 + 1/2*denom(1/2*s12)*
      mh^2*s14^2*s23 + denom(1/2*s12)*mt^2*s14*s23*s24 + denom(1/2*s12)*mt^2*
      s14*s23^2 + 1/2*denom(1/2*s12)*mt^2*s14^2*s24 + 5/2*denom(1/2*s12)*mt^2*
      s14^2*s23 + 1/2*denom(1/2*s12)*mt^2*s14^3 + 1/2*denom(1/2*s12)*mt^2*s13*
      s14*s23 + 1/2*denom(1/2*s12)*mt^2*s13*s14^2 - 1/2*denom(1/2*s12)*mt^2*
      s13^2*s24 + denom(1/2*s12)*mt^2*s12*s14*s23 + 1/2*denom(1/2*s12)*mt^2*
      s12*s14^2 - denom(1/2*s12)*mt^2*mh^2*s14*s23 - 1/2*denom(1/2*s12)*mt^2*
      mh^2*s14^2 - 1/2*denom(1/2*s12)*mt^4*s23*s24 - 1/2*denom(1/2*s12)*mt^4*
      s23^2 - denom(1/2*s12)*mt^4*s14*s24 - 3*denom(1/2*s12)*mt^4*s14*s23 - 2*
      denom(1/2*s12)*mt^4*s14^2 + denom(1/2*s12)*mt^4*s13*s24 - 1/2*denom(1/2*
      s12)*mt^4*s13*s14 + 1/2*denom(1/2*s12)*mt^4*s13^2 - 1/2*denom(1/2*s12)*
      mt^4*s12*s23 - denom(1/2*s12)*mt^4*s12*s14 + 1/2*denom(1/2*s12)*mt^4*
      mh^2*s23 + denom(1/2*s12)*mt^4*mh^2*s14 + denom(1/2*s12)*mt^6*s23 + 2*
      denom(1/2*s12)*mt^6*s14 - denom(1/2*s12)*mt^6*s13 + 1/2*denom(1/2*s12)*
      mt^6*s12 - 1/2*denom(1/2*s12)*mt^6*mh^2 - 1/8*denom(1/4*s12^2)*s14^3*
      s23^2 + 1/8*denom(1/4*s12^2)*s13^2*s14*s24^2 + 3/8*denom(1/4*s12^2)*mt^2
      *s14^2*s23^2 + 1/4*denom(1/4*s12^2)*mt^2*s14^3*s23 - 1/4*denom(1/4*s12^2
      )*mt^2*s13*s14*s24^2 - 1/8*denom(1/4*s12^2)*mt^2*s13^2*s24^2 - 1/4*
      denom(1/4*s12^2)*mt^2*s13^2*s14*s24 + 1/8*denom(1/4*s12^2)*mt^4*s14*
      s24^2 - 3/8*denom(1/4*s12^2)*mt^4*s14*s23^2 - 3/4*denom(1/4*s12^2)*mt^4*
      s14^2*s23 - 1/8*denom(1/4*s12^2)*mt^4*s14^3 + 1/4*denom(1/4*s12^2)*mt^4*
      s13*s24^2 + 1/2*denom(1/4*s12^2)*mt^4*s13*s14*s24 + 1/4*denom(1/4*s12^2)
      *mt^4*s13^2*s24 + 1/8*denom(1/4*s12^2)*mt^4*s13^2*s14 - 1/8*denom(1/4*
      s12^2)*mt^6*s24^2 + 1/8*denom(1/4*s12^2)*mt^6*s23^2 - 1/4*denom(1/4*
      s12^2)*mt^6*s14*s24 + 3/4*denom(1/4*s12^2)*mt^6*s14*s23 + 3/8*denom(1/4*
      s12^2)*mt^6*s14^2 - 1/2*denom(1/4*s12^2)*mt^6*s13*s24 - 1/4*denom(1/4*
      s12^2)*mt^6*s13*s14 - 1/8*denom(1/4*s12^2)*mt^6*s13^2 + 1/4*denom(1/4*
      s12^2)*mt^8*s24 - 1/4*denom(1/4*s12^2)*mt^8*s23 - 1/4*denom(1/4*s12^2)*
      mt^8*s14 + 1/4*denom(1/4*s12^2)*mt^8*s13;
 
 .sort
id KMatrix(3,29) =   - 1/2*s24^3 - s23*s24^2 - 1/2*s23^2*s24 - s14*s24^2 - s14
      *s23*s24 - 1/2*s14^2*s24 - s13*s24^2 - s13*s23*s24 - s13*s14*s24 - 1/2*
      s13^2*s24 - s12*s24^2 - s12*s23*s24 - s12*s14*s24 - s12*s13*s24 - 1/2*
      s12^2*s24 + mh^2*s24^2 + mh^2*s23*s24 + mh^2*s14*s24 + mh^2*s13*s24 + 
      mh^2*s12*s24 - 1/2*mh^4*s24 + 5/2*mt^2*s24^2 + 2*mt^2*s23*s24 - 1/2*mt^2
      *s23^2 + 3*mt^2*s14*s24 + 1/2*mt^2*s14^2 + 3*mt^2*s13*s24 + mt^2*s13*s14
       + 1/2*mt^2*s13^2 + 3*mt^2*s12*s24 + mt^2*s12*s14 + mt^2*s12*s13 + 1/2*
      mt^2*s12^2 - 3*mt^2*mh^2*s24 - mt^2*mh^2*s14 - mt^2*mh^2*s13 - mt^2*mh^2
      *s12 + 1/2*mt^2*mh^4 - 3*mt^4*s24 + mt^4*s23 - mt^4*s14 - mt^4*s13 - 
      mt^4*s12 + mt^4*mh^2 - 1/2*denom(1/2*s12)*s13*s24^3 - 1/2*denom(1/2*s12)
      *s13*s23*s24^2 - 1/2*denom(1/2*s12)*s13*s14*s24^2 - 1/2*denom(1/2*s12)*
      s13^2*s24^2 - 1/2*denom(1/2*s12)*s12*s13*s24^2 + 1/2*denom(1/2*s12)*mh^2
      *s13*s24^2 + 1/2*denom(1/2*s12)*mt^2*s24^3 + 1/2*denom(1/2*s12)*mt^2*s23
      *s24^2 + 1/2*denom(1/2*s12)*mt^2*s14*s24^2 - 1/2*denom(1/2*s12)*mt^2*s14
      *s23^2 + 5/2*denom(1/2*s12)*mt^2*s13*s24^2 + 1/2*denom(1/2*s12)*mt^2*s13
      *s23*s24 + denom(1/2*s12)*mt^2*s13*s14*s24 + denom(1/2*s12)*mt^2*s13^2*
      s24 + 1/2*denom(1/2*s12)*mt^2*s12*s24^2 + denom(1/2*s12)*mt^2*s12*s13*
      s24 - 1/2*denom(1/2*s12)*mt^2*mh^2*s24^2 - denom(1/2*s12)*mt^2*mh^2*s13*
      s24 - 2*denom(1/2*s12)*mt^4*s24^2 - 1/2*denom(1/2*s12)*mt^4*s23*s24 + 1/
      2*denom(1/2*s12)*mt^4*s23^2 - denom(1/2*s12)*mt^4*s14*s24 + denom(1/2*
      s12)*mt^4*s14*s23 - 3*denom(1/2*s12)*mt^4*s13*s24 - 1/2*denom(1/2*s12)*
      mt^4*s13*s14 - 1/2*denom(1/2*s12)*mt^4*s13^2 - denom(1/2*s12)*mt^4*s12*
      s24 - 1/2*denom(1/2*s12)*mt^4*s12*s13 + denom(1/2*s12)*mt^4*mh^2*s24 + 1/
      2*denom(1/2*s12)*mt^4*mh^2*s13 + 2*denom(1/2*s12)*mt^6*s24 - denom(1/2*
      s12)*mt^6*s23 + denom(1/2*s12)*mt^6*s13 + 1/2*denom(1/2*s12)*mt^6*s12 - 
      1/2*denom(1/2*s12)*mt^6*mh^2 + 1/8*denom(1/4*s12^2)*s14^2*s23^2*s24 - 1/
      8*denom(1/4*s12^2)*s13^2*s24^3 - 1/4*denom(1/4*s12^2)*mt^2*s14*s23^2*s24
       - 1/4*denom(1/4*s12^2)*mt^2*s14^2*s23*s24 - 1/8*denom(1/4*s12^2)*mt^2*
      s14^2*s23^2 + 1/4*denom(1/4*s12^2)*mt^2*s13*s24^3 + 3/8*denom(1/4*s12^2)
      *mt^2*s13^2*s24^2 - 1/8*denom(1/4*s12^2)*mt^4*s24^3 + 1/8*denom(1/4*
      s12^2)*mt^4*s23^2*s24 + 1/2*denom(1/4*s12^2)*mt^4*s14*s23*s24 + 1/4*
      denom(1/4*s12^2)*mt^4*s14*s23^2 + 1/8*denom(1/4*s12^2)*mt^4*s14^2*s24 + 
      1/4*denom(1/4*s12^2)*mt^4*s14^2*s23 - 3/4*denom(1/4*s12^2)*mt^4*s13*
      s24^2 - 3/8*denom(1/4*s12^2)*mt^4*s13^2*s24 + 3/8*denom(1/4*s12^2)*mt^6*
      s24^2 - 1/4*denom(1/4*s12^2)*mt^6*s23*s24 - 1/8*denom(1/4*s12^2)*mt^6*
      s23^2 - 1/4*denom(1/4*s12^2)*mt^6*s14*s24 - 1/2*denom(1/4*s12^2)*mt^6*
      s14*s23 - 1/8*denom(1/4*s12^2)*mt^6*s14^2 + 3/4*denom(1/4*s12^2)*mt^6*
      s13*s24 + 1/8*denom(1/4*s12^2)*mt^6*s13^2 - 1/4*denom(1/4*s12^2)*mt^8*
      s24 + 1/4*denom(1/4*s12^2)*mt^8*s23 + 1/4*denom(1/4*s12^2)*mt^8*s14 - 1/
      4*denom(1/4*s12^2)*mt^8*s13;
 
 .sort
id KMatrix(3,30) =  1/2*s13*s24^2 + s13*s23*s24 + 1/2*s13*s23^2 + s13*s14*s24
       + s13*s14*s23 + 1/2*s13*s14^2 + s13^2*s24 + s13^2*s23 + s13^2*s14 + 1/2
      *s13^3 + s12*s13*s24 + s12*s13*s23 + s12*s13*s14 + s12*s13^2 + 1/2*s12^2
      *s13 - mh^2*s13*s24 - mh^2*s13*s23 - mh^2*s13*s14 - mh^2*s13^2 - mh^2*
      s12*s13 + 1/2*mh^4*s13 - 1/2*mt^2*s24^2 - mt^2*s23*s24 - 1/2*mt^2*s23^2
       + 1/2*mt^2*s14^2 - 3*mt^2*s13*s24 - 3*mt^2*s13*s23 - 2*mt^2*s13*s14 - 5/
      2*mt^2*s13^2 - mt^2*s12*s24 - mt^2*s12*s23 - 3*mt^2*s12*s13 - 1/2*mt^2*
      s12^2 + mt^2*mh^2*s24 + mt^2*mh^2*s23 + 3*mt^2*mh^2*s13 + mt^2*mh^2*s12
       - 1/2*mt^2*mh^4 + mt^4*s24 + mt^4*s23 - mt^4*s14 + 3*mt^4*s13 + mt^4*
      s12 - mt^4*mh^2 + 1/2*denom(1/2*s12)*s13^2*s24^2 + 1/2*denom(1/2*s12)*
      s13^2*s23*s24 + 1/2*denom(1/2*s12)*s13^2*s14*s24 + 1/2*denom(1/2*s12)*
      s13^3*s24 + 1/2*denom(1/2*s12)*s12*s13^2*s24 - 1/2*denom(1/2*s12)*mh^2*
      s13^2*s24 + 1/2*denom(1/2*s12)*mt^2*s14^2*s23 - denom(1/2*s12)*mt^2*s13*
      s24^2 - denom(1/2*s12)*mt^2*s13*s23*s24 - 1/2*denom(1/2*s12)*mt^2*s13*
      s14*s24 - 5/2*denom(1/2*s12)*mt^2*s13^2*s24 - 1/2*denom(1/2*s12)*mt^2*
      s13^2*s23 - 1/2*denom(1/2*s12)*mt^2*s13^2*s14 - 1/2*denom(1/2*s12)*mt^2*
      s13^3 - denom(1/2*s12)*mt^2*s12*s13*s24 - 1/2*denom(1/2*s12)*mt^2*s12*
      s13^2 + denom(1/2*s12)*mt^2*mh^2*s13*s24 + 1/2*denom(1/2*s12)*mt^2*mh^2*
      s13^2 + 1/2*denom(1/2*s12)*mt^4*s24^2 + 1/2*denom(1/2*s12)*mt^4*s23*s24
       - denom(1/2*s12)*mt^4*s14*s23 - 1/2*denom(1/2*s12)*mt^4*s14^2 + 3*
      denom(1/2*s12)*mt^4*s13*s24 + denom(1/2*s12)*mt^4*s13*s23 + 1/2*denom(1/
      2*s12)*mt^4*s13*s14 + 2*denom(1/2*s12)*mt^4*s13^2 + 1/2*denom(1/2*s12)*
      mt^4*s12*s24 + denom(1/2*s12)*mt^4*s12*s13 - 1/2*denom(1/2*s12)*mt^4*
      mh^2*s24 - denom(1/2*s12)*mt^4*mh^2*s13 - denom(1/2*s12)*mt^6*s24 + 
      denom(1/2*s12)*mt^6*s14 - 2*denom(1/2*s12)*mt^6*s13 - 1/2*denom(1/2*s12)
      *mt^6*s12 + 1/2*denom(1/2*s12)*mt^6*mh^2 - 1/8*denom(1/4*s12^2)*s13*
      s14^2*s23^2 + 1/8*denom(1/4*s12^2)*s13^3*s24^2 + 1/8*denom(1/4*s12^2)*
      mt^2*s14^2*s23^2 + 1/4*denom(1/4*s12^2)*mt^2*s13*s14*s23^2 + 1/4*denom(1/
      4*s12^2)*mt^2*s13*s14^2*s23 - 3/8*denom(1/4*s12^2)*mt^2*s13^2*s24^2 - 1/
      4*denom(1/4*s12^2)*mt^2*s13^3*s24 - 1/4*denom(1/4*s12^2)*mt^4*s14*s23^2
       - 1/4*denom(1/4*s12^2)*mt^4*s14^2*s23 + 3/8*denom(1/4*s12^2)*mt^4*s13*
      s24^2 - 1/8*denom(1/4*s12^2)*mt^4*s13*s23^2 - 1/2*denom(1/4*s12^2)*mt^4*
      s13*s14*s23 - 1/8*denom(1/4*s12^2)*mt^4*s13*s14^2 + 3/4*denom(1/4*s12^2)
      *mt^4*s13^2*s24 + 1/8*denom(1/4*s12^2)*mt^4*s13^3 - 1/8*denom(1/4*s12^2)
      *mt^6*s24^2 + 1/8*denom(1/4*s12^2)*mt^6*s23^2 + 1/2*denom(1/4*s12^2)*
      mt^6*s14*s23 + 1/8*denom(1/4*s12^2)*mt^6*s14^2 - 3/4*denom(1/4*s12^2)*
      mt^6*s13*s24 + 1/4*denom(1/4*s12^2)*mt^6*s13*s23 + 1/4*denom(1/4*s12^2)*
      mt^6*s13*s14 - 3/8*denom(1/4*s12^2)*mt^6*s13^2 + 1/4*denom(1/4*s12^2)*
      mt^8*s24 - 1/4*denom(1/4*s12^2)*mt^8*s23 - 1/4*denom(1/4*s12^2)*mt^8*s14
       + 1/4*denom(1/4*s12^2)*mt^8*s13;
 
 .sort
id KMatrix(3,31) =  1/2*s23*s24^2 + s23^2*s24 + 1/2*s23^3 + s14*s23*s24 + s14*
      s23^2 + 1/2*s14^2*s23 + s13*s23*s24 + s13*s23^2 + s13*s14*s23 + 1/2*
      s13^2*s23 + s12*s23*s24 + s12*s23^2 + s12*s14*s23 + s12*s13*s23 + 1/2*
      s12^2*s23 - mh^2*s23*s24 - mh^2*s23^2 - mh^2*s14*s23 - mh^2*s13*s23 - 
      mh^2*s12*s23 + 1/2*mh^4*s23 + 1/2*mt^2*s24^2 - 2*mt^2*s23*s24 - 5/2*mt^2
      *s23^2 - 3*mt^2*s14*s23 - 1/2*mt^2*s14^2 - 3*mt^2*s13*s23 - mt^2*s13*s14
       - 1/2*mt^2*s13^2 - 3*mt^2*s12*s23 - mt^2*s12*s14 - mt^2*s12*s13 - 1/2*
      mt^2*s12^2 + 3*mt^2*mh^2*s23 + mt^2*mh^2*s14 + mt^2*mh^2*s13 + mt^2*mh^2
      *s12 - 1/2*mt^2*mh^4 - mt^4*s24 + 3*mt^4*s23 + mt^4*s14 + mt^4*s13 + 
      mt^4*s12 - mt^4*mh^2 + 1/2*denom(1/2*s12)*s14*s23^2*s24 + 1/2*denom(1/2*
      s12)*s14*s23^3 + 1/2*denom(1/2*s12)*s14^2*s23^2 + 1/2*denom(1/2*s12)*s13
      *s14*s23^2 + 1/2*denom(1/2*s12)*s12*s14*s23^2 - 1/2*denom(1/2*s12)*mh^2*
      s14*s23^2 - 1/2*denom(1/2*s12)*mt^2*s23^2*s24 - 1/2*denom(1/2*s12)*mt^2*
      s23^3 - 1/2*denom(1/2*s12)*mt^2*s14*s23*s24 - 5/2*denom(1/2*s12)*mt^2*
      s14*s23^2 - denom(1/2*s12)*mt^2*s14^2*s23 + 1/2*denom(1/2*s12)*mt^2*s13*
      s24^2 - 1/2*denom(1/2*s12)*mt^2*s13*s23^2 - denom(1/2*s12)*mt^2*s13*s14*
      s23 - 1/2*denom(1/2*s12)*mt^2*s12*s23^2 - denom(1/2*s12)*mt^2*s12*s14*
      s23 + 1/2*denom(1/2*s12)*mt^2*mh^2*s23^2 + denom(1/2*s12)*mt^2*mh^2*s14*
      s23 - 1/2*denom(1/2*s12)*mt^4*s24^2 + 1/2*denom(1/2*s12)*mt^4*s23*s24 + 
      2*denom(1/2*s12)*mt^4*s23^2 + 3*denom(1/2*s12)*mt^4*s14*s23 + 1/2*denom(
      1/2*s12)*mt^4*s14^2 - denom(1/2*s12)*mt^4*s13*s24 + denom(1/2*s12)*mt^4*
      s13*s23 + 1/2*denom(1/2*s12)*mt^4*s13*s14 + denom(1/2*s12)*mt^4*s12*s23
       + 1/2*denom(1/2*s12)*mt^4*s12*s14 - denom(1/2*s12)*mt^4*mh^2*s23 - 1/2*
      denom(1/2*s12)*mt^4*mh^2*s14 + denom(1/2*s12)*mt^6*s24 - 2*denom(1/2*s12
      )*mt^6*s23 - denom(1/2*s12)*mt^6*s14 - 1/2*denom(1/2*s12)*mt^6*s12 + 1/2
      *denom(1/2*s12)*mt^6*mh^2 + 1/8*denom(1/4*s12^2)*s14^2*s23^3 - 1/8*
      denom(1/4*s12^2)*s13^2*s23*s24^2 - 1/4*denom(1/4*s12^2)*mt^2*s14*s23^3
       - 3/8*denom(1/4*s12^2)*mt^2*s14^2*s23^2 + 1/4*denom(1/4*s12^2)*mt^2*s13
      *s23*s24^2 + 1/8*denom(1/4*s12^2)*mt^2*s13^2*s24^2 + 1/4*denom(1/4*s12^2
      )*mt^2*s13^2*s23*s24 - 1/8*denom(1/4*s12^2)*mt^4*s23*s24^2 + 1/8*denom(1/
      4*s12^2)*mt^4*s23^3 + 3/4*denom(1/4*s12^2)*mt^4*s14*s23^2 + 3/8*denom(1/
      4*s12^2)*mt^4*s14^2*s23 - 1/4*denom(1/4*s12^2)*mt^4*s13*s24^2 - 1/2*
      denom(1/4*s12^2)*mt^4*s13*s23*s24 - 1/4*denom(1/4*s12^2)*mt^4*s13^2*s24
       - 1/8*denom(1/4*s12^2)*mt^4*s13^2*s23 + 1/8*denom(1/4*s12^2)*mt^6*s24^2
       + 1/4*denom(1/4*s12^2)*mt^6*s23*s24 - 3/8*denom(1/4*s12^2)*mt^6*s23^2
       - 3/4*denom(1/4*s12^2)*mt^6*s14*s23 - 1/8*denom(1/4*s12^2)*mt^6*s14^2
       + 1/2*denom(1/4*s12^2)*mt^6*s13*s24 + 1/4*denom(1/4*s12^2)*mt^6*s13*s23
       + 1/8*denom(1/4*s12^2)*mt^6*s13^2 - 1/4*denom(1/4*s12^2)*mt^8*s24 + 1/4
      *denom(1/4*s12^2)*mt^8*s23 + 1/4*denom(1/4*s12^2)*mt^8*s14 - 1/4*denom(1/
      4*s12^2)*mt^8*s13;
 
 .sort
id KMatrix(3,32) =   - mt^2*s13*s24 - mt^2*s13*s23 - mt^2*s13*s14 - mt^2*s13^2
       - mt^2*s12*s13 + mt^2*mh^2*s13 + mt^4*s24 + mt^4*s23 - mt^4*s14 + 3*
      mt^4*s13 + mt^4*s12 - mt^4*mh^2 + 1/2*denom(1/2*s12)*s13*s14*s24^2 + 1/2
      *denom(1/2*s12)*s13*s14*s23*s24 + 1/2*denom(1/2*s12)*s13*s14^2*s24 + 1/2
      *denom(1/2*s12)*s13^2*s14*s24 + 1/2*denom(1/2*s12)*s12*s13*s14*s24 - 1/2
      *denom(1/2*s12)*mh^2*s13*s14*s24 - 1/2*denom(1/2*s12)*mt^2*s14*s24^2 - 1/
      2*denom(1/2*s12)*mt^2*s14*s23*s24 + 1/2*denom(1/2*s12)*mt^2*s14^2*s24 - 
      1/2*denom(1/2*s12)*mt^2*s13*s24^2 - 1/2*denom(1/2*s12)*mt^2*s13*s23*s24
       - 5/2*denom(1/2*s12)*mt^2*s13*s14*s24 - 1/2*denom(1/2*s12)*mt^2*s13*
      s14^2 - denom(1/2*s12)*mt^2*s13^2*s24 - 1/2*denom(1/2*s12)*mt^2*s13^2*
      s14 - 1/2*denom(1/2*s12)*mt^2*s12*s14*s24 - 1/2*denom(1/2*s12)*mt^2*s12*
      s13*s24 - 1/2*denom(1/2*s12)*mt^2*s12*s13*s14 + 1/2*denom(1/2*s12)*mt^2*
      mh^2*s14*s24 + 1/2*denom(1/2*s12)*mt^2*mh^2*s13*s24 + 1/2*denom(1/2*s12)
      *mt^2*mh^2*s13*s14 + 1/2*denom(1/2*s12)*mt^4*s24^2 + 1/2*denom(1/2*s12)*
      mt^4*s23*s24 - 1/2*denom(1/2*s12)*mt^4*s14^2 + 3*denom(1/2*s12)*mt^4*s13
      *s24 + 3/2*denom(1/2*s12)*mt^4*s13*s14 + denom(1/2*s12)*mt^4*s13^2 + 1/2
      *denom(1/2*s12)*mt^4*s12*s24 + 1/2*denom(1/2*s12)*mt^4*s12*s14 + 1/2*
      denom(1/2*s12)*mt^4*s12*s13 - 1/2*denom(1/2*s12)*mt^4*mh^2*s24 - 1/2*
      denom(1/2*s12)*mt^4*mh^2*s14 - 1/2*denom(1/2*s12)*mt^4*mh^2*s13 - denom(
      1/2*s12)*mt^6*s24 + denom(1/2*s12)*mt^6*s14 - 2*denom(1/2*s12)*mt^6*s13
       - 1/2*denom(1/2*s12)*mt^6*s12 + 1/2*denom(1/2*s12)*mt^6*mh^2 - 1/4*
      denom(1/4*s12^2)*s13*s14^2*s23*s24 + 1/4*denom(1/4*s12^2)*s13^2*s14*
      s24^2 + 1/4*denom(1/4*s12^2)*mt^2*s14^2*s23*s24 - 1/2*denom(1/4*s12^2)*
      mt^2*s13*s14*s24^2 + 1/2*denom(1/4*s12^2)*mt^2*s13*s14*s23*s24 + 1/4*
      denom(1/4*s12^2)*mt^2*s13*s14^2*s24 + 1/4*denom(1/4*s12^2)*mt^2*s13*
      s14^2*s23 - 1/4*denom(1/4*s12^2)*mt^2*s13^2*s24^2 - 1/2*denom(1/4*s12^2)
      *mt^2*s13^2*s14*s24 + 1/4*denom(1/4*s12^2)*mt^4*s14*s24^2 - 1/2*denom(1/
      4*s12^2)*mt^4*s14*s23*s24 - 1/4*denom(1/4*s12^2)*mt^4*s14^2*s24 - 1/4*
      denom(1/4*s12^2)*mt^4*s14^2*s23 + 1/2*denom(1/4*s12^2)*mt^4*s13*s24^2 - 
      1/4*denom(1/4*s12^2)*mt^4*s13*s23*s24 + 1/2*denom(1/4*s12^2)*mt^4*s13*
      s14*s24 - 1/2*denom(1/4*s12^2)*mt^4*s13*s14*s23 - 1/4*denom(1/4*s12^2)*
      mt^4*s13*s14^2 + 1/2*denom(1/4*s12^2)*mt^4*s13^2*s24 + 1/4*denom(1/4*
      s12^2)*mt^4*s13^2*s14 - 1/4*denom(1/4*s12^2)*mt^6*s24^2 + 1/4*denom(1/4*
      s12^2)*mt^6*s23*s24 + 1/2*denom(1/4*s12^2)*mt^6*s14*s23 + 1/4*denom(1/4*
      s12^2)*mt^6*s14^2 - 3/4*denom(1/4*s12^2)*mt^6*s13*s24 + 1/4*denom(1/4*
      s12^2)*mt^6*s13*s23 - 1/4*denom(1/4*s12^2)*mt^6*s13^2 + 1/4*denom(1/4*
      s12^2)*mt^8*s24 - 1/4*denom(1/4*s12^2)*mt^8*s23 - 1/4*denom(1/4*s12^2)*
      mt^8*s14 + 1/4*denom(1/4*s12^2)*mt^8*s13;
 
 .sort
id KMatrix(3,33) =   - mt^2*s23*s24 - mt^2*s23^2 - mt^2*s14*s23 - mt^2*s13*s23
       - mt^2*s12*s23 + mt^2*mh^2*s23 - mt^4*s24 + 3*mt^4*s23 + mt^4*s14 + 
      mt^4*s13 + mt^4*s12 - mt^4*mh^2 + 1/2*denom(1/2*s12)*s14*s23*s24^2 + 1/2
      *denom(1/2*s12)*s14*s23^2*s24 + 1/2*denom(1/2*s12)*s14^2*s23*s24 + 1/2*
      denom(1/2*s12)*s13*s14*s23*s24 + 1/2*denom(1/2*s12)*s12*s14*s23*s24 - 1/
      2*denom(1/2*s12)*mh^2*s14*s23*s24 - 1/2*denom(1/2*s12)*mt^2*s23*s24^2 - 
      1/2*denom(1/2*s12)*mt^2*s23^2*s24 + 1/2*denom(1/2*s12)*mt^2*s14*s24^2 - 
      5/2*denom(1/2*s12)*mt^2*s14*s23*s24 - denom(1/2*s12)*mt^2*s14*s23^2 - 1/
      2*denom(1/2*s12)*mt^2*s14^2*s24 - 1/2*denom(1/2*s12)*mt^2*s14^2*s23 - 1/
      2*denom(1/2*s12)*mt^2*s13*s14*s24 - 1/2*denom(1/2*s12)*mt^2*s13*s14*s23
       - 1/2*denom(1/2*s12)*mt^2*s12*s23*s24 - 1/2*denom(1/2*s12)*mt^2*s12*s14
      *s24 - 1/2*denom(1/2*s12)*mt^2*s12*s14*s23 + 1/2*denom(1/2*s12)*mt^2*
      mh^2*s23*s24 + 1/2*denom(1/2*s12)*mt^2*mh^2*s14*s24 + 1/2*denom(1/2*s12)
      *mt^2*mh^2*s14*s23 - 1/2*denom(1/2*s12)*mt^4*s24^2 + 3/2*denom(1/2*s12)*
      mt^4*s23*s24 + denom(1/2*s12)*mt^4*s23^2 + 3*denom(1/2*s12)*mt^4*s14*s23
       + 1/2*denom(1/2*s12)*mt^4*s14^2 + 1/2*denom(1/2*s12)*mt^4*s13*s14 + 1/2
      *denom(1/2*s12)*mt^4*s12*s24 + 1/2*denom(1/2*s12)*mt^4*s12*s23 + 1/2*
      denom(1/2*s12)*mt^4*s12*s14 - 1/2*denom(1/2*s12)*mt^4*mh^2*s24 - 1/2*
      denom(1/2*s12)*mt^4*mh^2*s23 - 1/2*denom(1/2*s12)*mt^4*mh^2*s14 + denom(
      1/2*s12)*mt^6*s24 - 2*denom(1/2*s12)*mt^6*s23 - denom(1/2*s12)*mt^6*s14
       - 1/2*denom(1/2*s12)*mt^6*s12 + 1/2*denom(1/2*s12)*mt^6*mh^2 + 1/4*
      denom(1/4*s12^2)*s14^2*s23^2*s24 - 1/4*denom(1/4*s12^2)*s13*s14*s23*
      s24^2 + 1/4*denom(1/4*s12^2)*mt^2*s14*s23*s24^2 - 1/2*denom(1/4*s12^2)*
      mt^2*s14*s23^2*s24 - 1/2*denom(1/4*s12^2)*mt^2*s14^2*s23*s24 - 1/4*
      denom(1/4*s12^2)*mt^2*s14^2*s23^2 + 1/4*denom(1/4*s12^2)*mt^2*s13*s23*
      s24^2 + 1/4*denom(1/4*s12^2)*mt^2*s13*s14*s24^2 + 1/2*denom(1/4*s12^2)*
      mt^2*s13*s14*s23*s24 - 1/4*denom(1/4*s12^2)*mt^4*s23*s24^2 + 1/4*denom(1/
      4*s12^2)*mt^4*s23^2*s24 - 1/4*denom(1/4*s12^2)*mt^4*s14*s24^2 + 1/2*
      denom(1/4*s12^2)*mt^4*s14*s23*s24 + 1/2*denom(1/4*s12^2)*mt^4*s14*s23^2
       + 1/4*denom(1/4*s12^2)*mt^4*s14^2*s24 + 1/2*denom(1/4*s12^2)*mt^4*s14^2
      *s23 - 1/4*denom(1/4*s12^2)*mt^4*s13*s24^2 - 1/2*denom(1/4*s12^2)*mt^4*
      s13*s23*s24 - 1/2*denom(1/4*s12^2)*mt^4*s13*s14*s24 - 1/4*denom(1/4*
      s12^2)*mt^4*s13*s14*s23 + 1/4*denom(1/4*s12^2)*mt^6*s24^2 - 1/4*denom(1/
      4*s12^2)*mt^6*s23^2 - 3/4*denom(1/4*s12^2)*mt^6*s14*s23 - 1/4*denom(1/4*
      s12^2)*mt^6*s14^2 + 1/2*denom(1/4*s12^2)*mt^6*s13*s24 + 1/4*denom(1/4*
      s12^2)*mt^6*s13*s23 + 1/4*denom(1/4*s12^2)*mt^6*s13*s14 - 1/4*denom(1/4*
      s12^2)*mt^8*s24 + 1/4*denom(1/4*s12^2)*mt^8*s23 + 1/4*denom(1/4*s12^2)*
      mt^8*s14 - 1/4*denom(1/4*s12^2)*mt^8*s13;
 
 .sort
id KMatrix(3,34) =   - mt*s14*s24 - mt*s14*s23 - mt*s14^2 + mt*s13*s24 + mt*
      s13*s23 + mt*s13^2 - mt*s12*s14 + mt*s12*s13 + mt*mh^2*s14 - mt*mh^2*s13
       + 2*mt^3*s14 - 2*mt^3*s13 - denom(1/2*s12)*mt*s14^2*s23 - denom(1/2*s12
      )*mt*s13*s14*s24 + denom(1/2*s12)*mt*s13*s14*s23 + denom(1/2*s12)*mt*
      s13^2*s24 + denom(1/2*s12)*mt^3*s14*s24 + denom(1/2*s12)*mt^3*s14*s23 + 
      denom(1/2*s12)*mt^3*s14^2 - denom(1/2*s12)*mt^3*s13*s24 - denom(1/2*s12)
      *mt^3*s13*s23 - denom(1/2*s12)*mt^3*s13^2 - 2*denom(1/2*s12)*mt^5*s14 + 
      2*denom(1/2*s12)*mt^5*s13 + 1/4*denom(1/4*s12^2)*mt*s12*s14^2*s23 + 1/4*
      denom(1/4*s12^2)*mt*s12*s13*s14*s24 - 1/4*denom(1/4*s12^2)*mt*s12*s13*
      s14*s23 - 1/4*denom(1/4*s12^2)*mt*s12*s13^2*s24 - 1/4*denom(1/4*s12^2)*
      mt^3*s12*s14*s24 - 1/4*denom(1/4*s12^2)*mt^3*s12*s14*s23 - 1/4*denom(1/4
      *s12^2)*mt^3*s12*s14^2 + 1/4*denom(1/4*s12^2)*mt^3*s12*s13*s24 + 1/4*
      denom(1/4*s12^2)*mt^3*s12*s13*s23 + 1/4*denom(1/4*s12^2)*mt^3*s12*s13^2
       + 1/2*denom(1/4*s12^2)*mt^5*s12*s14 - 1/2*denom(1/4*s12^2)*mt^5*s12*s13
      ;
 
 .sort
id KMatrix(3,35) =   - mt*s24^2 + mt*s23^2 - mt*s14*s24 + mt*s14*s23 - mt*s13*
      s24 + mt*s13*s23 - mt*s12*s24 + mt*s12*s23 + mt*mh^2*s24 - mt*mh^2*s23
       + 2*mt^3*s24 - 2*mt^3*s23 - denom(1/2*s12)*mt*s14*s23*s24 + denom(1/2*
      s12)*mt*s14*s23^2 - denom(1/2*s12)*mt*s13*s24^2 + denom(1/2*s12)*mt*s13*
      s23*s24 + denom(1/2*s12)*mt^3*s24^2 - denom(1/2*s12)*mt^3*s23^2 + denom(
      1/2*s12)*mt^3*s14*s24 - denom(1/2*s12)*mt^3*s14*s23 + denom(1/2*s12)*
      mt^3*s13*s24 - denom(1/2*s12)*mt^3*s13*s23 - 2*denom(1/2*s12)*mt^5*s24
       + 2*denom(1/2*s12)*mt^5*s23 + 1/4*denom(1/4*s12^2)*mt*s12*s14*s23*s24
       - 1/4*denom(1/4*s12^2)*mt*s12*s14*s23^2 + 1/4*denom(1/4*s12^2)*mt*s12*
      s13*s24^2 - 1/4*denom(1/4*s12^2)*mt*s12*s13*s23*s24 - 1/4*denom(1/4*
      s12^2)*mt^3*s12*s24^2 + 1/4*denom(1/4*s12^2)*mt^3*s12*s23^2 - 1/4*denom(
      1/4*s12^2)*mt^3*s12*s14*s24 + 1/4*denom(1/4*s12^2)*mt^3*s12*s14*s23 - 1/
      4*denom(1/4*s12^2)*mt^3*s12*s13*s24 + 1/4*denom(1/4*s12^2)*mt^3*s12*s13*
      s23 + 1/2*denom(1/4*s12^2)*mt^5*s12*s24 - 1/2*denom(1/4*s12^2)*mt^5*s12*
      s23;
 
 .sort
id KMatrix(3,36) =   - 1/2*s14*s23*s24 - 1/2*s14*s23^2 - 1/2*s14^2*s23 + 1/2*
      s13*s24^2 + 1/2*s13*s23*s24 + 1/2*s13*s14*s24 - 1/2*s13*s14*s23 + 1/2*
      s13^2*s24 - 1/2*s12*s14*s23 + 1/2*s12*s13*s24 + 1/2*mh^2*s14*s23 - 1/2*
      mh^2*s13*s24 - 1/2*mt^2*s24^2 + 1/2*mt^2*s23^2 + 2*mt^2*s14*s23 + 1/2*
      mt^2*s14^2 - 2*mt^2*s13*s24 - 1/2*mt^2*s13^2 + 1/2*mt^2*s12*s24 + 3/2*
      mt^2*s12*s23 + 3/2*mt^2*s12*s14 + 1/2*mt^2*s12*s13 + mt^2*s12^2 + 1/2*
      mt^2*mh^2*s24 - 1/2*mt^2*mh^2*s23 - 1/2*mt^2*mh^2*s14 + 1/2*mt^2*mh^2*
      s13 - mt^2*mh^2*s12 + mt^4*s24 - mt^4*s23 - mt^4*s14 + mt^4*s13 - 1/2*
      denom(1/2*s12)*s14^2*s23^2 + 1/2*denom(1/2*s12)*s13^2*s24^2 + denom(1/2*
      s12)*mt^2*s14*s23^2 + denom(1/2*s12)*mt^2*s14^2*s23 - denom(1/2*s12)*
      mt^2*s13*s24^2 - denom(1/2*s12)*mt^2*s13^2*s24 - denom(1/2*s12)*mt^2*s12
      *s14*s24 + denom(1/2*s12)*mt^2*s12*s14*s23 + denom(1/2*s12)*mt^2*s12*s13
      *s24 - denom(1/2*s12)*mt^2*s12*s13*s23 + 1/2*denom(1/2*s12)*mt^4*s24^2
       - 1/2*denom(1/2*s12)*mt^4*s23^2 - 2*denom(1/2*s12)*mt^4*s14*s23 - 1/2*
      denom(1/2*s12)*mt^4*s14^2 + 2*denom(1/2*s12)*mt^4*s13*s24 + 1/2*denom(1/
      2*s12)*mt^4*s13^2 - denom(1/2*s12)*mt^6*s24 + denom(1/2*s12)*mt^6*s23 + 
      denom(1/2*s12)*mt^6*s14 - denom(1/2*s12)*mt^6*s13 + 1/4*denom(1/4*s12^2)
      *s12*s13*s14*s23*s24 - 1/4*denom(1/4*s12^2)*s12*s13^2*s24^2 - 1/8*denom(
      1/4*s12^2)*s12^2*s14*s23*s24 - 1/8*denom(1/4*s12^2)*s12^2*s14*s23^2 - 1/
      8*denom(1/4*s12^2)*s12^2*s14^2*s23 - 1/8*denom(1/4*s12^2)*s12^2*s13*
      s24^2 - 1/8*denom(1/4*s12^2)*s12^2*s13*s23*s24 - 1/8*denom(1/4*s12^2)*
      s12^2*s13*s14*s24 - 1/8*denom(1/4*s12^2)*s12^2*s13*s14*s23 - 1/8*denom(1/
      4*s12^2)*s12^2*s13^2*s24 - 1/8*denom(1/4*s12^2)*s12^3*s14*s23 - 1/8*
      denom(1/4*s12^2)*s12^3*s13*s24 + 1/8*denom(1/4*s12^2)*mh^2*s12^2*s14*s23
       + 1/8*denom(1/4*s12^2)*mh^2*s12^2*s13*s24 - 1/4*denom(1/4*s12^2)*mt^2*
      s12*s14*s23*s24 + 1/2*denom(1/4*s12^2)*mt^2*s12*s13*s24^2 - 1/4*denom(1/
      4*s12^2)*mt^2*s12*s13*s23*s24 - 1/4*denom(1/4*s12^2)*mt^2*s12*s13*s14*
      s24 - 1/4*denom(1/4*s12^2)*mt^2*s12*s13*s14*s23 + 1/2*denom(1/4*s12^2)*
      mt^2*s12*s13^2*s24 + 1/8*denom(1/4*s12^2)*mt^2*s12^2*s24^2 + 1/4*denom(1/
      4*s12^2)*mt^2*s12^2*s23*s24 + 1/8*denom(1/4*s12^2)*mt^2*s12^2*s23^2 + 1/
      4*denom(1/4*s12^2)*mt^2*s12^2*s14*s24 + 1/4*denom(1/4*s12^2)*mt^2*s12^2*
      s14*s23 + 1/8*denom(1/4*s12^2)*mt^2*s12^2*s14^2 + 1/4*denom(1/4*s12^2)*
      mt^2*s12^2*s13*s24 + 1/4*denom(1/4*s12^2)*mt^2*s12^2*s13*s23 + 1/4*
      denom(1/4*s12^2)*mt^2*s12^2*s13*s14 + 1/8*denom(1/4*s12^2)*mt^2*s12^2*
      s13^2 + 1/8*denom(1/4*s12^2)*mt^2*s12^3*s24 + 1/8*denom(1/4*s12^2)*mt^2*
      s12^3*s23 + 1/8*denom(1/4*s12^2)*mt^2*s12^3*s14 + 1/8*denom(1/4*s12^2)*
      mt^2*s12^3*s13 - 1/8*denom(1/4*s12^2)*mt^2*mh^2*s12^2*s24 - 1/8*denom(1/
      4*s12^2)*mt^2*mh^2*s12^2*s23 - 1/8*denom(1/4*s12^2)*mt^2*mh^2*s12^2*s14
       - 1/8*denom(1/4*s12^2)*mt^2*mh^2*s12^2*s13 - 1/4*denom(1/4*s12^2)*mt^4*
      s12*s24^2 + 1/4*denom(1/4*s12^2)*mt^4*s12*s23*s24 + 1/4*denom(1/4*s12^2)
      *mt^4*s12*s14*s24 + 1/4*denom(1/4*s12^2)*mt^4*s12*s14*s23 - 3/4*denom(1/
      4*s12^2)*mt^4*s12*s13*s24 + 1/4*denom(1/4*s12^2)*mt^4*s12*s13*s23 + 1/4*
      denom(1/4*s12^2)*mt^4*s12*s13*s14 - 1/4*denom(1/4*s12^2)*mt^4*s12*s13^2
       - 1/4*denom(1/4*s12^2)*mt^4*s12^2*s24 - 1/4*denom(1/4*s12^2)*mt^4*s12^2
      *s23 - 1/4*denom(1/4*s12^2)*mt^4*s12^2*s14 - 1/4*denom(1/4*s12^2)*mt^4*
      s12^2*s13 - 1/4*denom(1/4*s12^2)*mt^4*s12^3 + 1/4*denom(1/4*s12^2)*mt^4*
      mh^2*s12^2 + 1/4*denom(1/4*s12^2)*mt^6*s12*s24 - 1/4*denom(1/4*s12^2)*
      mt^6*s12*s23 - 1/4*denom(1/4*s12^2)*mt^6*s12*s14 + 1/4*denom(1/4*s12^2)*
      mt^6*s12*s13;
 
 .sort
id KMatrix(4,1) =   - 1/2*s24^3 - 3/2*s23*s24^2 - 3/2*s23^2*s24 - 1/2*s23^3 - 
      3/2*s14*s24^2 - 3*s14*s23*s24 - 3/2*s14*s23^2 - 3/2*s14^2*s24 - 3/2*
      s14^2*s23 - 1/2*s14^3 - 3/2*s13*s24^2 - 3*s13*s23*s24 - 3/2*s13*s23^2 - 
      3*s13*s14*s24 - 3*s13*s14*s23 - 3/2*s13*s14^2 - 3/2*s13^2*s24 - 3/2*
      s13^2*s23 - 3/2*s13^2*s14 - 1/2*s13^3 - 3/2*s12*s24^2 - 3*s12*s23*s24 - 
      3/2*s12*s23^2 - 3*s12*s14*s24 - 3*s12*s14*s23 - 3/2*s12*s14^2 - 3*s12*
      s13*s24 - 3*s12*s13*s23 - 3*s12*s13*s14 - 3/2*s12*s13^2 - 3/2*s12^2*s24
       - 3/2*s12^2*s23 - 3/2*s12^2*s14 - 3/2*s12^2*s13 - 1/2*s12^3 + 3/2*mh^2*
      s24^2 + 3*mh^2*s23*s24 + 3/2*mh^2*s23^2 + 3*mh^2*s14*s24 + 3*mh^2*s14*
      s23 + 3/2*mh^2*s14^2 + 3*mh^2*s13*s24 + 3*mh^2*s13*s23 + 3*mh^2*s13*s14
       + 3/2*mh^2*s13^2 + 3*mh^2*s12*s24 + 3*mh^2*s12*s23 + 3*mh^2*s12*s14 + 3
      *mh^2*s12*s13 + 3/2*mh^2*s12^2 - 3/2*mh^4*s24 - 3/2*mh^4*s23 - 3/2*mh^4*
      s14 - 3/2*mh^4*s13 - 3/2*mh^4*s12 + 1/2*mh^6 + 2*mt^2*s24^2 + 4*mt^2*s23
      *s24 + 2*mt^2*s23^2 + 4*mt^2*s14*s24 + 4*mt^2*s14*s23 + 2*mt^2*s14^2 + 4
      *mt^2*s13*s24 + 4*mt^2*s13*s23 + 4*mt^2*s13*s14 + 2*mt^2*s13^2 + 4*mt^2*
      s12*s24 + 4*mt^2*s12*s23 + 4*mt^2*s12*s14 + 4*mt^2*s12*s13 + 2*mt^2*
      s12^2 - 4*mt^2*mh^2*s24 - 4*mt^2*mh^2*s23 - 4*mt^2*mh^2*s14 - 4*mt^2*
      mh^2*s13 - 4*mt^2*mh^2*s12 + 2*mt^2*mh^4 - 2*mt^4*s24 - 2*mt^4*s23 - 2*
      mt^4*s14 - 2*mt^4*s13 - 2*mt^4*s12 + 2*mt^4*mh^2 - 1/2*denom(1/2*s12)*
      s14*s23*s24^2 - denom(1/2*s12)*s14*s23^2*s24 - 1/2*denom(1/2*s12)*s14*
      s23^3 - denom(1/2*s12)*s14^2*s23*s24 - denom(1/2*s12)*s14^2*s23^2 - 1/2*
      denom(1/2*s12)*s14^3*s23 - 1/2*denom(1/2*s12)*s13*s24^3 - denom(1/2*s12)
      *s13*s23*s24^2 - 1/2*denom(1/2*s12)*s13*s23^2*s24 - denom(1/2*s12)*s13*
      s14*s24^2 - 2*denom(1/2*s12)*s13*s14*s23*s24 - denom(1/2*s12)*s13*s14*
      s23^2 - 1/2*denom(1/2*s12)*s13*s14^2*s24 - denom(1/2*s12)*s13*s14^2*s23
       - denom(1/2*s12)*s13^2*s24^2 - denom(1/2*s12)*s13^2*s23*s24 - denom(1/2
      *s12)*s13^2*s14*s24 - 1/2*denom(1/2*s12)*s13^2*s14*s23 - 1/2*denom(1/2*
      s12)*s13^3*s24 - denom(1/2*s12)*s12*s14*s23*s24 - denom(1/2*s12)*s12*s14
      *s23^2 - denom(1/2*s12)*s12*s14^2*s23 - denom(1/2*s12)*s12*s13*s24^2 - 
      denom(1/2*s12)*s12*s13*s23*s24 - denom(1/2*s12)*s12*s13*s14*s24 - denom(
      1/2*s12)*s12*s13*s14*s23 - denom(1/2*s12)*s12*s13^2*s24 - 1/2*denom(1/2*
      s12)*s12^2*s14*s23 - 1/2*denom(1/2*s12)*s12^2*s13*s24 + denom(1/2*s12)*
      mh^2*s14*s23*s24 + denom(1/2*s12)*mh^2*s14*s23^2 + denom(1/2*s12)*mh^2*
      s14^2*s23 + denom(1/2*s12)*mh^2*s13*s24^2 + denom(1/2*s12)*mh^2*s13*s23*
      s24 + denom(1/2*s12)*mh^2*s13*s14*s24 + denom(1/2*s12)*mh^2*s13*s14*s23
       + denom(1/2*s12)*mh^2*s13^2*s24 + denom(1/2*s12)*mh^2*s12*s14*s23 + 
      denom(1/2*s12)*mh^2*s12*s13*s24 - 1/2*denom(1/2*s12)*mh^4*s14*s23 - 1/2*
      denom(1/2*s12)*mh^4*s13*s24 + 1/2*denom(1/2*s12)*mt^2*s24^3 + 3/2*denom(
      1/2*s12)*mt^2*s23*s24^2 + 3/2*denom(1/2*s12)*mt^2*s23^2*s24 + 1/2*denom(
      1/2*s12)*mt^2*s23^3 + 3/2*denom(1/2*s12)*mt^2*s14*s24^2 + 4*denom(1/2*
      s12)*mt^2*s14*s23*s24 + 5/2*denom(1/2*s12)*mt^2*s14*s23^2 + 3/2*denom(1/
      2*s12)*mt^2*s14^2*s24 + 5/2*denom(1/2*s12)*mt^2*s14^2*s23 + 1/2*denom(1/
      2*s12)*mt^2*s14^3 + 5/2*denom(1/2*s12)*mt^2*s13*s24^2 + 4*denom(1/2*s12)
      *mt^2*s13*s23*s24 + 3/2*denom(1/2*s12)*mt^2*s13*s23^2 + 4*denom(1/2*s12)
      *mt^2*s13*s14*s24 + 4*denom(1/2*s12)*mt^2*s13*s14*s23 + 3/2*denom(1/2*
      s12)*mt^2*s13*s14^2 + 5/2*denom(1/2*s12)*mt^2*s13^2*s24 + 3/2*denom(1/2*
      s12)*mt^2*s13^2*s23 + 3/2*denom(1/2*s12)*mt^2*s13^2*s14 + 1/2*denom(1/2*
      s12)*mt^2*s13^3 + denom(1/2*s12)*mt^2*s12*s24^2 + 2*denom(1/2*s12)*mt^2*
      s12*s23*s24 + denom(1/2*s12)*mt^2*s12*s23^2 + 2*denom(1/2*s12)*mt^2*s12*
      s14*s24 + 3*denom(1/2*s12)*mt^2*s12*s14*s23 + denom(1/2*s12)*mt^2*s12*
      s14^2 + 3*denom(1/2*s12)*mt^2*s12*s13*s24 + 2*denom(1/2*s12)*mt^2*s12*
      s13*s23 + 2*denom(1/2*s12)*mt^2*s12*s13*s14 + denom(1/2*s12)*mt^2*s12*
      s13^2 + 1/2*denom(1/2*s12)*mt^2*s12^2*s24 + 1/2*denom(1/2*s12)*mt^2*
      s12^2*s23 + 1/2*denom(1/2*s12)*mt^2*s12^2*s14 + 1/2*denom(1/2*s12)*mt^2*
      s12^2*s13 - denom(1/2*s12)*mt^2*mh^2*s24^2 - 2*denom(1/2*s12)*mt^2*mh^2*
      s23*s24 - denom(1/2*s12)*mt^2*mh^2*s23^2 - 2*denom(1/2*s12)*mt^2*mh^2*
      s14*s24 - 3*denom(1/2*s12)*mt^2*mh^2*s14*s23 - denom(1/2*s12)*mt^2*mh^2*
      s14^2 - 3*denom(1/2*s12)*mt^2*mh^2*s13*s24 - 2*denom(1/2*s12)*mt^2*mh^2*
      s13*s23 - 2*denom(1/2*s12)*mt^2*mh^2*s13*s14 - denom(1/2*s12)*mt^2*mh^2*
      s13^2 - denom(1/2*s12)*mt^2*mh^2*s12*s24 - denom(1/2*s12)*mt^2*mh^2*s12*
      s23 - denom(1/2*s12)*mt^2*mh^2*s12*s14 - denom(1/2*s12)*mt^2*mh^2*s12*
      s13 + 1/2*denom(1/2*s12)*mt^2*mh^4*s24 + 1/2*denom(1/2*s12)*mt^2*mh^4*
      s23 + 1/2*denom(1/2*s12)*mt^2*mh^4*s14 + 1/2*denom(1/2*s12)*mt^2*mh^4*
      s13 - 2*denom(1/2*s12)*mt^4*s24^2 - 4*denom(1/2*s12)*mt^4*s23*s24 - 2*
      denom(1/2*s12)*mt^4*s23^2 - 4*denom(1/2*s12)*mt^4*s14*s24 - 4*denom(1/2*
      s12)*mt^4*s14*s23 - 2*denom(1/2*s12)*mt^4*s14^2 - 4*denom(1/2*s12)*mt^4*
      s13*s24 - 4*denom(1/2*s12)*mt^4*s13*s23 - 4*denom(1/2*s12)*mt^4*s13*s14
       - 2*denom(1/2*s12)*mt^4*s13^2 - 3*denom(1/2*s12)*mt^4*s12*s24 - 3*
      denom(1/2*s12)*mt^4*s12*s23 - 3*denom(1/2*s12)*mt^4*s12*s14 - 3*denom(1/
      2*s12)*mt^4*s12*s13 - denom(1/2*s12)*mt^4*s12^2 + 3*denom(1/2*s12)*mt^4*
      mh^2*s24 + 3*denom(1/2*s12)*mt^4*mh^2*s23 + 3*denom(1/2*s12)*mt^4*mh^2*
      s14 + 3*denom(1/2*s12)*mt^4*mh^2*s13 + 2*denom(1/2*s12)*mt^4*mh^2*s12 - 
      denom(1/2*s12)*mt^4*mh^4 + 2*denom(1/2*s12)*mt^6*s24 + 2*denom(1/2*s12)*
      mt^6*s23 + 2*denom(1/2*s12)*mt^6*s14 + 2*denom(1/2*s12)*mt^6*s13 + 2*
      denom(1/2*s12)*mt^6*s12 - 2*denom(1/2*s12)*mt^6*mh^2 - 1/8*denom(1/4*
      s12^2)*s14^2*s23^2*s24 - 1/8*denom(1/4*s12^2)*s14^2*s23^3 - 1/8*denom(1/
      4*s12^2)*s14^3*s23^2 - 1/4*denom(1/4*s12^2)*s13*s14*s23*s24^2 - 1/4*
      denom(1/4*s12^2)*s13*s14*s23^2*s24 - 1/4*denom(1/4*s12^2)*s13*s14^2*s23*
      s24 - 1/8*denom(1/4*s12^2)*s13*s14^2*s23^2 - 1/8*denom(1/4*s12^2)*s13^2*
      s24^3 - 1/8*denom(1/4*s12^2)*s13^2*s23*s24^2 - 1/8*denom(1/4*s12^2)*
      s13^2*s14*s24^2 - 1/4*denom(1/4*s12^2)*s13^2*s14*s23*s24 - 1/8*denom(1/4
      *s12^2)*s13^3*s24^2 - 1/8*denom(1/4*s12^2)*s12*s14^2*s23^2 - 1/4*denom(1/
      4*s12^2)*s12*s13*s14*s23*s24 - 1/8*denom(1/4*s12^2)*s12*s13^2*s24^2 + 1/
      8*denom(1/4*s12^2)*mh^2*s14^2*s23^2 + 1/4*denom(1/4*s12^2)*mh^2*s13*s14*
      s23*s24 + 1/8*denom(1/4*s12^2)*mh^2*s13^2*s24^2 + 1/4*denom(1/4*s12^2)*
      mt^2*s14*s23*s24^2 + 1/2*denom(1/4*s12^2)*mt^2*s14*s23^2*s24 + 1/4*
      denom(1/4*s12^2)*mt^2*s14*s23^3 + 1/2*denom(1/4*s12^2)*mt^2*s14^2*s23*
      s24 + 1/2*denom(1/4*s12^2)*mt^2*s14^2*s23^2 + 1/4*denom(1/4*s12^2)*mt^2*
      s14^3*s23 + 1/4*denom(1/4*s12^2)*mt^2*s13*s24^3 + 1/2*denom(1/4*s12^2)*
      mt^2*s13*s23*s24^2 + 1/4*denom(1/4*s12^2)*mt^2*s13*s23^2*s24 + 1/2*
      denom(1/4*s12^2)*mt^2*s13*s14*s24^2 + denom(1/4*s12^2)*mt^2*s13*s14*s23*
      s24 + 1/2*denom(1/4*s12^2)*mt^2*s13*s14*s23^2 + 1/4*denom(1/4*s12^2)*
      mt^2*s13*s14^2*s24 + 1/2*denom(1/4*s12^2)*mt^2*s13*s14^2*s23 + 1/2*
      denom(1/4*s12^2)*mt^2*s13^2*s24^2 + 1/2*denom(1/4*s12^2)*mt^2*s13^2*s23*
      s24 + 1/2*denom(1/4*s12^2)*mt^2*s13^2*s14*s24 + 1/4*denom(1/4*s12^2)*
      mt^2*s13^2*s14*s23 + 1/4*denom(1/4*s12^2)*mt^2*s13^3*s24 + 1/4*denom(1/4
      *s12^2)*mt^2*s12*s14*s23*s24 + 1/4*denom(1/4*s12^2)*mt^2*s12*s14*s23^2
       + 1/4*denom(1/4*s12^2)*mt^2*s12*s14^2*s23 + 1/4*denom(1/4*s12^2)*mt^2*
      s12*s13*s24^2 + 1/4*denom(1/4*s12^2)*mt^2*s12*s13*s23*s24 + 1/4*denom(1/
      4*s12^2)*mt^2*s12*s13*s14*s24 + 1/4*denom(1/4*s12^2)*mt^2*s12*s13*s14*
      s23 + 1/4*denom(1/4*s12^2)*mt^2*s12*s13^2*s24 - 1/4*denom(1/4*s12^2)*
      mt^2*mh^2*s14*s23*s24 - 1/4*denom(1/4*s12^2)*mt^2*mh^2*s14*s23^2 - 1/4*
      denom(1/4*s12^2)*mt^2*mh^2*s14^2*s23 - 1/4*denom(1/4*s12^2)*mt^2*mh^2*
      s13*s24^2 - 1/4*denom(1/4*s12^2)*mt^2*mh^2*s13*s23*s24 - 1/4*denom(1/4*
      s12^2)*mt^2*mh^2*s13*s14*s24 - 1/4*denom(1/4*s12^2)*mt^2*mh^2*s13*s14*
      s23 - 1/4*denom(1/4*s12^2)*mt^2*mh^2*s13^2*s24 - 1/8*denom(1/4*s12^2)*
      mt^4*s24^3 - 3/8*denom(1/4*s12^2)*mt^4*s23*s24^2 - 3/8*denom(1/4*s12^2)*
      mt^4*s23^2*s24 - 1/8*denom(1/4*s12^2)*mt^4*s23^3 - 3/8*denom(1/4*s12^2)*
      mt^4*s14*s24^2 - 5/4*denom(1/4*s12^2)*mt^4*s14*s23*s24 - 7/8*denom(1/4*
      s12^2)*mt^4*s14*s23^2 - 3/8*denom(1/4*s12^2)*mt^4*s14^2*s24 - 7/8*denom(
      1/4*s12^2)*mt^4*s14^2*s23 - 1/8*denom(1/4*s12^2)*mt^4*s14^3 - 7/8*denom(
      1/4*s12^2)*mt^4*s13*s24^2 - 5/4*denom(1/4*s12^2)*mt^4*s13*s23*s24 - 3/8*
      denom(1/4*s12^2)*mt^4*s13*s23^2 - 5/4*denom(1/4*s12^2)*mt^4*s13*s14*s24
       - 5/4*denom(1/4*s12^2)*mt^4*s13*s14*s23 - 3/8*denom(1/4*s12^2)*mt^4*s13
      *s14^2 - 7/8*denom(1/4*s12^2)*mt^4*s13^2*s24 - 3/8*denom(1/4*s12^2)*mt^4
      *s13^2*s23 - 3/8*denom(1/4*s12^2)*mt^4*s13^2*s14 - 1/8*denom(1/4*s12^2)*
      mt^4*s13^3 - 1/8*denom(1/4*s12^2)*mt^4*s12*s24^2 - 1/4*denom(1/4*s12^2)*
      mt^4*s12*s23*s24 - 1/8*denom(1/4*s12^2)*mt^4*s12*s23^2 - 1/4*denom(1/4*
      s12^2)*mt^4*s12*s14*s24 - 3/4*denom(1/4*s12^2)*mt^4*s12*s14*s23 - 1/8*
      denom(1/4*s12^2)*mt^4*s12*s14^2 - 3/4*denom(1/4*s12^2)*mt^4*s12*s13*s24
       - 1/4*denom(1/4*s12^2)*mt^4*s12*s13*s23 - 1/4*denom(1/4*s12^2)*mt^4*s12
      *s13*s14 - 1/8*denom(1/4*s12^2)*mt^4*s12*s13^2 + 1/8*denom(1/4*s12^2)*
      mt^4*mh^2*s24^2 + 1/4*denom(1/4*s12^2)*mt^4*mh^2*s23*s24 + 1/8*denom(1/4
      *s12^2)*mt^4*mh^2*s23^2 + 1/4*denom(1/4*s12^2)*mt^4*mh^2*s14*s24 + 3/4*
      denom(1/4*s12^2)*mt^4*mh^2*s14*s23 + 1/8*denom(1/4*s12^2)*mt^4*mh^2*
      s14^2 + 3/4*denom(1/4*s12^2)*mt^4*mh^2*s13*s24 + 1/4*denom(1/4*s12^2)*
      mt^4*mh^2*s13*s23 + 1/4*denom(1/4*s12^2)*mt^4*mh^2*s13*s14 + 1/8*denom(1/
      4*s12^2)*mt^4*mh^2*s13^2 + 1/2*denom(1/4*s12^2)*mt^6*s24^2 + denom(1/4*
      s12^2)*mt^6*s23*s24 + 1/2*denom(1/4*s12^2)*mt^6*s23^2 + denom(1/4*s12^2)
      *mt^6*s14*s24 + denom(1/4*s12^2)*mt^6*s14*s23 + 1/2*denom(1/4*s12^2)*
      mt^6*s14^2 + denom(1/4*s12^2)*mt^6*s13*s24 + denom(1/4*s12^2)*mt^6*s13*
      s23 + denom(1/4*s12^2)*mt^6*s13*s14 + 1/2*denom(1/4*s12^2)*mt^6*s13^2 + 
      1/2*denom(1/4*s12^2)*mt^6*s12*s24 + 1/2*denom(1/4*s12^2)*mt^6*s12*s23 + 
      1/2*denom(1/4*s12^2)*mt^6*s12*s14 + 1/2*denom(1/4*s12^2)*mt^6*s12*s13 - 
      1/2*denom(1/4*s12^2)*mt^6*mh^2*s24 - 1/2*denom(1/4*s12^2)*mt^6*mh^2*s23
       - 1/2*denom(1/4*s12^2)*mt^6*mh^2*s14 - 1/2*denom(1/4*s12^2)*mt^6*mh^2*
      s13 - 1/2*denom(1/4*s12^2)*mt^8*s24 - 1/2*denom(1/4*s12^2)*mt^8*s23 - 1/
      2*denom(1/4*s12^2)*mt^8*s14 - 1/2*denom(1/4*s12^2)*mt^8*s13 - 1/2*denom(
      1/4*s12^2)*mt^8*s12 + 1/2*denom(1/4*s12^2)*mt^8*mh^2;
 
 .sort
id KMatrix(4,2) =  mt^2*s24^2 + 2*mt^2*s23*s24 + mt^2*s23^2 + 2*mt^2*s14*s24
       + 2*mt^2*s14*s23 + mt^2*s14^2 + 2*mt^2*s13*s24 + 2*mt^2*s13*s23 + 2*
      mt^2*s13*s14 + mt^2*s13^2 + 2*mt^2*s12*s24 + 2*mt^2*s12*s23 + 2*mt^2*s12
      *s14 + 2*mt^2*s12*s13 + mt^2*s12^2 - 2*mt^2*mh^2*s24 - 2*mt^2*mh^2*s23
       - 2*mt^2*mh^2*s14 - 2*mt^2*mh^2*s13 - 2*mt^2*mh^2*s12 + mt^2*mh^4 - 2*
      mt^4*s24 - 2*mt^4*s23 - 2*mt^4*s14 - 2*mt^4*s13 - 2*mt^4*s12 + 2*mt^4*
      mh^2 - 1/2*denom(1/2*s12)*s14*s24^3 - denom(1/2*s12)*s14*s23*s24^2 - 1/2
      *denom(1/2*s12)*s14*s23^2*s24 - denom(1/2*s12)*s14^2*s24^2 - denom(1/2*
      s12)*s14^2*s23*s24 - 1/2*denom(1/2*s12)*s14^3*s24 - denom(1/2*s12)*s13*
      s14*s24^2 - denom(1/2*s12)*s13*s14*s23*s24 - denom(1/2*s12)*s13*s14^2*
      s24 - 1/2*denom(1/2*s12)*s13^2*s14*s24 - denom(1/2*s12)*s12*s14*s24^2 - 
      denom(1/2*s12)*s12*s14*s23*s24 - denom(1/2*s12)*s12*s14^2*s24 - denom(1/
      2*s12)*s12*s13*s14*s24 - 1/2*denom(1/2*s12)*s12^2*s14*s24 + denom(1/2*
      s12)*mh^2*s14*s24^2 + denom(1/2*s12)*mh^2*s14*s23*s24 + denom(1/2*s12)*
      mh^2*s14^2*s24 + denom(1/2*s12)*mh^2*s13*s14*s24 + denom(1/2*s12)*mh^2*
      s12*s14*s24 - 1/2*denom(1/2*s12)*mh^4*s14*s24 + 1/2*denom(1/2*s12)*mt^2*
      s24^3 + denom(1/2*s12)*mt^2*s23*s24^2 + 1/2*denom(1/2*s12)*mt^2*s23^2*
      s24 + 5/2*denom(1/2*s12)*mt^2*s14*s24^2 + 7/2*denom(1/2*s12)*mt^2*s14*
      s23*s24 + denom(1/2*s12)*mt^2*s14*s23^2 + 5/2*denom(1/2*s12)*mt^2*s14^2*
      s24 + 3/2*denom(1/2*s12)*mt^2*s14^2*s23 + 1/2*denom(1/2*s12)*mt^2*s14^3
       + 3/2*denom(1/2*s12)*mt^2*s13*s24^2 + 3/2*denom(1/2*s12)*mt^2*s13*s23*
      s24 + 7/2*denom(1/2*s12)*mt^2*s13*s14*s24 + 3/2*denom(1/2*s12)*mt^2*s13*
      s14*s23 + denom(1/2*s12)*mt^2*s13*s14^2 + denom(1/2*s12)*mt^2*s13^2*s24
       + 1/2*denom(1/2*s12)*mt^2*s13^2*s14 + denom(1/2*s12)*mt^2*s12*s24^2 + 
      denom(1/2*s12)*mt^2*s12*s23*s24 + 3*denom(1/2*s12)*mt^2*s12*s14*s24 + 3/
      2*denom(1/2*s12)*mt^2*s12*s14*s23 + denom(1/2*s12)*mt^2*s12*s14^2 + 3/2*
      denom(1/2*s12)*mt^2*s12*s13*s24 + denom(1/2*s12)*mt^2*s12*s13*s14 + 1/2*
      denom(1/2*s12)*mt^2*s12^2*s24 + 1/2*denom(1/2*s12)*mt^2*s12^2*s14 - 
      denom(1/2*s12)*mt^2*mh^2*s24^2 - denom(1/2*s12)*mt^2*mh^2*s23*s24 - 3*
      denom(1/2*s12)*mt^2*mh^2*s14*s24 - 3/2*denom(1/2*s12)*mt^2*mh^2*s14*s23
       - denom(1/2*s12)*mt^2*mh^2*s14^2 - 3/2*denom(1/2*s12)*mt^2*mh^2*s13*s24
       - denom(1/2*s12)*mt^2*mh^2*s13*s14 - denom(1/2*s12)*mt^2*mh^2*s12*s24
       - denom(1/2*s12)*mt^2*mh^2*s12*s14 + 1/2*denom(1/2*s12)*mt^2*mh^4*s24
       + 1/2*denom(1/2*s12)*mt^2*mh^4*s14 - 2*denom(1/2*s12)*mt^4*s24^2 - 3*
      denom(1/2*s12)*mt^4*s23*s24 - denom(1/2*s12)*mt^4*s23^2 - 4*denom(1/2*
      s12)*mt^4*s14*s24 - 3*denom(1/2*s12)*mt^4*s14*s23 - 2*denom(1/2*s12)*
      mt^4*s14^2 - 3*denom(1/2*s12)*mt^4*s13*s24 - 2*denom(1/2*s12)*mt^4*s13*
      s23 - 3*denom(1/2*s12)*mt^4*s13*s14 - denom(1/2*s12)*mt^4*s13^2 - 5/2*
      denom(1/2*s12)*mt^4*s12*s24 - 3/2*denom(1/2*s12)*mt^4*s12*s23 - 5/2*
      denom(1/2*s12)*mt^4*s12*s14 - 3/2*denom(1/2*s12)*mt^4*s12*s13 - 1/2*
      denom(1/2*s12)*mt^4*s12^2 + 5/2*denom(1/2*s12)*mt^4*mh^2*s24 + 3/2*
      denom(1/2*s12)*mt^4*mh^2*s23 + 5/2*denom(1/2*s12)*mt^4*mh^2*s14 + 3/2*
      denom(1/2*s12)*mt^4*mh^2*s13 + denom(1/2*s12)*mt^4*mh^2*s12 - 1/2*denom(
      1/2*s12)*mt^4*mh^4 + 2*denom(1/2*s12)*mt^6*s24 + 2*denom(1/2*s12)*mt^6*
      s23 + 2*denom(1/2*s12)*mt^6*s14 + 2*denom(1/2*s12)*mt^6*s13 + 2*denom(1/
      2*s12)*mt^6*s12 - 2*denom(1/2*s12)*mt^6*mh^2 - 1/4*denom(1/4*s12^2)*
      s14^2*s23*s24^2 - 1/4*denom(1/4*s12^2)*s14^2*s23^2*s24 - 1/4*denom(1/4*
      s12^2)*s14^3*s23*s24 - 1/4*denom(1/4*s12^2)*s13*s14*s24^3 - 1/4*denom(1/
      4*s12^2)*s13*s14*s23*s24^2 - 1/4*denom(1/4*s12^2)*s13*s14^2*s24^2 - 1/4*
      denom(1/4*s12^2)*s13*s14^2*s23*s24 - 1/4*denom(1/4*s12^2)*s13^2*s14*
      s24^2 - 1/4*denom(1/4*s12^2)*s12*s14^2*s23*s24 - 1/4*denom(1/4*s12^2)*
      s12*s13*s14*s24^2 + 1/4*denom(1/4*s12^2)*mh^2*s14^2*s23*s24 + 1/4*denom(
      1/4*s12^2)*mh^2*s13*s14*s24^2 + 1/4*denom(1/4*s12^2)*mt^2*s14*s24^3 + 3/
      4*denom(1/4*s12^2)*mt^2*s14*s23*s24^2 + 1/2*denom(1/4*s12^2)*mt^2*s14*
      s23^2*s24 + 1/2*denom(1/4*s12^2)*mt^2*s14^2*s24^2 + denom(1/4*s12^2)*
      mt^2*s14^2*s23*s24 + 1/4*denom(1/4*s12^2)*mt^2*s14^2*s23^2 + 1/4*denom(1/
      4*s12^2)*mt^2*s14^3*s24 + 1/4*denom(1/4*s12^2)*mt^2*s14^3*s23 + 1/4*
      denom(1/4*s12^2)*mt^2*s13*s24^3 + 1/4*denom(1/4*s12^2)*mt^2*s13*s23*
      s24^2 + denom(1/4*s12^2)*mt^2*s13*s14*s24^2 + denom(1/4*s12^2)*mt^2*s13*
      s14*s23*s24 + 3/4*denom(1/4*s12^2)*mt^2*s13*s14^2*s24 + 1/4*denom(1/4*
      s12^2)*mt^2*s13*s14^2*s23 + 1/4*denom(1/4*s12^2)*mt^2*s13^2*s24^2 + 1/2*
      denom(1/4*s12^2)*mt^2*s13^2*s14*s24 + 1/4*denom(1/4*s12^2)*mt^2*s12*s14*
      s24^2 + 1/2*denom(1/4*s12^2)*mt^2*s12*s14*s23*s24 + 1/4*denom(1/4*s12^2)
      *mt^2*s12*s14^2*s24 + 1/4*denom(1/4*s12^2)*mt^2*s12*s14^2*s23 + 1/4*
      denom(1/4*s12^2)*mt^2*s12*s13*s24^2 + 1/2*denom(1/4*s12^2)*mt^2*s12*s13*
      s14*s24 - 1/4*denom(1/4*s12^2)*mt^2*mh^2*s14*s24^2 - 1/2*denom(1/4*s12^2
      )*mt^2*mh^2*s14*s23*s24 - 1/4*denom(1/4*s12^2)*mt^2*mh^2*s14^2*s24 - 1/4
      *denom(1/4*s12^2)*mt^2*mh^2*s14^2*s23 - 1/4*denom(1/4*s12^2)*mt^2*mh^2*
      s13*s24^2 - 1/2*denom(1/4*s12^2)*mt^2*mh^2*s13*s14*s24 - 1/4*denom(1/4*
      s12^2)*mt^4*s24^3 - 1/2*denom(1/4*s12^2)*mt^4*s23*s24^2 - 1/4*denom(1/4*
      s12^2)*mt^4*s23^2*s24 - 5/4*denom(1/4*s12^2)*mt^4*s14*s24^2 - 7/4*denom(
      1/4*s12^2)*mt^4*s14*s23*s24 - 1/2*denom(1/4*s12^2)*mt^4*s14*s23^2 - 5/4*
      denom(1/4*s12^2)*mt^4*s14^2*s24 - 3/4*denom(1/4*s12^2)*mt^4*s14^2*s23 - 
      1/4*denom(1/4*s12^2)*mt^4*s14^3 - 3/4*denom(1/4*s12^2)*mt^4*s13*s24^2 - 
      3/4*denom(1/4*s12^2)*mt^4*s13*s23*s24 - 7/4*denom(1/4*s12^2)*mt^4*s13*
      s14*s24 - 3/4*denom(1/4*s12^2)*mt^4*s13*s14*s23 - 1/2*denom(1/4*s12^2)*
      mt^4*s13*s14^2 - 1/2*denom(1/4*s12^2)*mt^4*s13^2*s24 - 1/4*denom(1/4*
      s12^2)*mt^4*s13^2*s14 - 1/4*denom(1/4*s12^2)*mt^4*s12*s24^2 - 1/4*denom(
      1/4*s12^2)*mt^4*s12*s23*s24 - denom(1/4*s12^2)*mt^4*s12*s14*s24 - 1/2*
      denom(1/4*s12^2)*mt^4*s12*s14*s23 - 1/4*denom(1/4*s12^2)*mt^4*s12*s14^2
       - 1/2*denom(1/4*s12^2)*mt^4*s12*s13*s24 - 1/4*denom(1/4*s12^2)*mt^4*s12
      *s13*s14 + 1/4*denom(1/4*s12^2)*mt^4*mh^2*s24^2 + 1/4*denom(1/4*s12^2)*
      mt^4*mh^2*s23*s24 + denom(1/4*s12^2)*mt^4*mh^2*s14*s24 + 1/2*denom(1/4*
      s12^2)*mt^4*mh^2*s14*s23 + 1/4*denom(1/4*s12^2)*mt^4*mh^2*s14^2 + 1/2*
      denom(1/4*s12^2)*mt^4*mh^2*s13*s24 + 1/4*denom(1/4*s12^2)*mt^4*mh^2*s13*
      s14 + 3/4*denom(1/4*s12^2)*mt^6*s24^2 + denom(1/4*s12^2)*mt^6*s23*s24 + 
      1/4*denom(1/4*s12^2)*mt^6*s23^2 + 3/2*denom(1/4*s12^2)*mt^6*s14*s24 + 
      denom(1/4*s12^2)*mt^6*s14*s23 + 3/4*denom(1/4*s12^2)*mt^6*s14^2 + denom(
      1/4*s12^2)*mt^6*s13*s24 + 1/2*denom(1/4*s12^2)*mt^6*s13*s23 + denom(1/4*
      s12^2)*mt^6*s13*s14 + 1/4*denom(1/4*s12^2)*mt^6*s13^2 + 3/4*denom(1/4*
      s12^2)*mt^6*s12*s24 + 1/4*denom(1/4*s12^2)*mt^6*s12*s23 + 3/4*denom(1/4*
      s12^2)*mt^6*s12*s14 + 1/4*denom(1/4*s12^2)*mt^6*s12*s13 - 3/4*denom(1/4*
      s12^2)*mt^6*mh^2*s24 - 1/4*denom(1/4*s12^2)*mt^6*mh^2*s23 - 3/4*denom(1/
      4*s12^2)*mt^6*mh^2*s14 - 1/4*denom(1/4*s12^2)*mt^6*mh^2*s13 - 1/2*denom(
      1/4*s12^2)*mt^8*s24 - 1/2*denom(1/4*s12^2)*mt^8*s23 - 1/2*denom(1/4*
      s12^2)*mt^8*s14 - 1/2*denom(1/4*s12^2)*mt^8*s13 - 1/2*denom(1/4*s12^2)*
      mt^8*s12 + 1/2*denom(1/4*s12^2)*mt^8*mh^2;
 
 .sort
id KMatrix(4,3) =  mt^2*s24^2 + 2*mt^2*s23*s24 + mt^2*s23^2 + 2*mt^2*s14*s24
       + 2*mt^2*s14*s23 + mt^2*s14^2 + 2*mt^2*s13*s24 + 2*mt^2*s13*s23 + 2*
      mt^2*s13*s14 + mt^2*s13^2 + 2*mt^2*s12*s24 + 2*mt^2*s12*s23 + 2*mt^2*s12
      *s14 + 2*mt^2*s12*s13 + mt^2*s12^2 - 2*mt^2*mh^2*s24 - 2*mt^2*mh^2*s23
       - 2*mt^2*mh^2*s14 - 2*mt^2*mh^2*s13 - 2*mt^2*mh^2*s12 + mt^2*mh^4 - 2*
      mt^4*s24 - 2*mt^4*s23 - 2*mt^4*s14 - 2*mt^4*s13 - 2*mt^4*s12 + 2*mt^4*
      mh^2 - 1/2*denom(1/2*s12)*s14*s24^3 - denom(1/2*s12)*s14*s23*s24^2 - 1/2
      *denom(1/2*s12)*s14*s23^2*s24 - denom(1/2*s12)*s14^2*s24^2 - denom(1/2*
      s12)*s14^2*s23*s24 - 1/2*denom(1/2*s12)*s14^3*s24 - denom(1/2*s12)*s13*
      s14*s24^2 - denom(1/2*s12)*s13*s14*s23*s24 - denom(1/2*s12)*s13*s14^2*
      s24 - 1/2*denom(1/2*s12)*s13^2*s14*s24 - denom(1/2*s12)*s12*s14*s24^2 - 
      denom(1/2*s12)*s12*s14*s23*s24 - denom(1/2*s12)*s12*s14^2*s24 - denom(1/
      2*s12)*s12*s13*s14*s24 - 1/2*denom(1/2*s12)*s12^2*s14*s24 + denom(1/2*
      s12)*mh^2*s14*s24^2 + denom(1/2*s12)*mh^2*s14*s23*s24 + denom(1/2*s12)*
      mh^2*s14^2*s24 + denom(1/2*s12)*mh^2*s13*s14*s24 + denom(1/2*s12)*mh^2*
      s12*s14*s24 - 1/2*denom(1/2*s12)*mh^4*s14*s24 + 1/2*denom(1/2*s12)*mt^2*
      s24^3 + denom(1/2*s12)*mt^2*s23*s24^2 + 1/2*denom(1/2*s12)*mt^2*s23^2*
      s24 + 5/2*denom(1/2*s12)*mt^2*s14*s24^2 + 7/2*denom(1/2*s12)*mt^2*s14*
      s23*s24 + denom(1/2*s12)*mt^2*s14*s23^2 + 5/2*denom(1/2*s12)*mt^2*s14^2*
      s24 + 3/2*denom(1/2*s12)*mt^2*s14^2*s23 + 1/2*denom(1/2*s12)*mt^2*s14^3
       + 3/2*denom(1/2*s12)*mt^2*s13*s24^2 + 3/2*denom(1/2*s12)*mt^2*s13*s23*
      s24 + 7/2*denom(1/2*s12)*mt^2*s13*s14*s24 + 3/2*denom(1/2*s12)*mt^2*s13*
      s14*s23 + denom(1/2*s12)*mt^2*s13*s14^2 + denom(1/2*s12)*mt^2*s13^2*s24
       + 1/2*denom(1/2*s12)*mt^2*s13^2*s14 + denom(1/2*s12)*mt^2*s12*s24^2 + 
      denom(1/2*s12)*mt^2*s12*s23*s24 + 3*denom(1/2*s12)*mt^2*s12*s14*s24 + 3/
      2*denom(1/2*s12)*mt^2*s12*s14*s23 + denom(1/2*s12)*mt^2*s12*s14^2 + 3/2*
      denom(1/2*s12)*mt^2*s12*s13*s24 + denom(1/2*s12)*mt^2*s12*s13*s14 + 1/2*
      denom(1/2*s12)*mt^2*s12^2*s24 + 1/2*denom(1/2*s12)*mt^2*s12^2*s14 - 
      denom(1/2*s12)*mt^2*mh^2*s24^2 - denom(1/2*s12)*mt^2*mh^2*s23*s24 - 3*
      denom(1/2*s12)*mt^2*mh^2*s14*s24 - 3/2*denom(1/2*s12)*mt^2*mh^2*s14*s23
       - denom(1/2*s12)*mt^2*mh^2*s14^2 - 3/2*denom(1/2*s12)*mt^2*mh^2*s13*s24
       - denom(1/2*s12)*mt^2*mh^2*s13*s14 - denom(1/2*s12)*mt^2*mh^2*s12*s24
       - denom(1/2*s12)*mt^2*mh^2*s12*s14 + 1/2*denom(1/2*s12)*mt^2*mh^4*s24
       + 1/2*denom(1/2*s12)*mt^2*mh^4*s14 - 2*denom(1/2*s12)*mt^4*s24^2 - 3*
      denom(1/2*s12)*mt^4*s23*s24 - denom(1/2*s12)*mt^4*s23^2 - 4*denom(1/2*
      s12)*mt^4*s14*s24 - 3*denom(1/2*s12)*mt^4*s14*s23 - 2*denom(1/2*s12)*
      mt^4*s14^2 - 3*denom(1/2*s12)*mt^4*s13*s24 - 2*denom(1/2*s12)*mt^4*s13*
      s23 - 3*denom(1/2*s12)*mt^4*s13*s14 - denom(1/2*s12)*mt^4*s13^2 - 5/2*
      denom(1/2*s12)*mt^4*s12*s24 - 3/2*denom(1/2*s12)*mt^4*s12*s23 - 5/2*
      denom(1/2*s12)*mt^4*s12*s14 - 3/2*denom(1/2*s12)*mt^4*s12*s13 - 1/2*
      denom(1/2*s12)*mt^4*s12^2 + 5/2*denom(1/2*s12)*mt^4*mh^2*s24 + 3/2*
      denom(1/2*s12)*mt^4*mh^2*s23 + 5/2*denom(1/2*s12)*mt^4*mh^2*s14 + 3/2*
      denom(1/2*s12)*mt^4*mh^2*s13 + denom(1/2*s12)*mt^4*mh^2*s12 - 1/2*denom(
      1/2*s12)*mt^4*mh^4 + 2*denom(1/2*s12)*mt^6*s24 + 2*denom(1/2*s12)*mt^6*
      s23 + 2*denom(1/2*s12)*mt^6*s14 + 2*denom(1/2*s12)*mt^6*s13 + 2*denom(1/
      2*s12)*mt^6*s12 - 2*denom(1/2*s12)*mt^6*mh^2 - 1/4*denom(1/4*s12^2)*
      s14^2*s23*s24^2 - 1/4*denom(1/4*s12^2)*s14^2*s23^2*s24 - 1/4*denom(1/4*
      s12^2)*s14^3*s23*s24 - 1/4*denom(1/4*s12^2)*s13*s14*s24^3 - 1/4*denom(1/
      4*s12^2)*s13*s14*s23*s24^2 - 1/4*denom(1/4*s12^2)*s13*s14^2*s24^2 - 1/4*
      denom(1/4*s12^2)*s13*s14^2*s23*s24 - 1/4*denom(1/4*s12^2)*s13^2*s14*
      s24^2 - 1/4*denom(1/4*s12^2)*s12*s14^2*s23*s24 - 1/4*denom(1/4*s12^2)*
      s12*s13*s14*s24^2 + 1/4*denom(1/4*s12^2)*mh^2*s14^2*s23*s24 + 1/4*denom(
      1/4*s12^2)*mh^2*s13*s14*s24^2 + 1/4*denom(1/4*s12^2)*mt^2*s14*s24^3 + 3/
      4*denom(1/4*s12^2)*mt^2*s14*s23*s24^2 + 1/2*denom(1/4*s12^2)*mt^2*s14*
      s23^2*s24 + 1/2*denom(1/4*s12^2)*mt^2*s14^2*s24^2 + denom(1/4*s12^2)*
      mt^2*s14^2*s23*s24 + 1/4*denom(1/4*s12^2)*mt^2*s14^2*s23^2 + 1/4*denom(1/
      4*s12^2)*mt^2*s14^3*s24 + 1/4*denom(1/4*s12^2)*mt^2*s14^3*s23 + 1/4*
      denom(1/4*s12^2)*mt^2*s13*s24^3 + 1/4*denom(1/4*s12^2)*mt^2*s13*s23*
      s24^2 + denom(1/4*s12^2)*mt^2*s13*s14*s24^2 + denom(1/4*s12^2)*mt^2*s13*
      s14*s23*s24 + 3/4*denom(1/4*s12^2)*mt^2*s13*s14^2*s24 + 1/4*denom(1/4*
      s12^2)*mt^2*s13*s14^2*s23 + 1/4*denom(1/4*s12^2)*mt^2*s13^2*s24^2 + 1/2*
      denom(1/4*s12^2)*mt^2*s13^2*s14*s24 + 1/4*denom(1/4*s12^2)*mt^2*s12*s14*
      s24^2 + 1/2*denom(1/4*s12^2)*mt^2*s12*s14*s23*s24 + 1/4*denom(1/4*s12^2)
      *mt^2*s12*s14^2*s24 + 1/4*denom(1/4*s12^2)*mt^2*s12*s14^2*s23 + 1/4*
      denom(1/4*s12^2)*mt^2*s12*s13*s24^2 + 1/2*denom(1/4*s12^2)*mt^2*s12*s13*
      s14*s24 - 1/4*denom(1/4*s12^2)*mt^2*mh^2*s14*s24^2 - 1/2*denom(1/4*s12^2
      )*mt^2*mh^2*s14*s23*s24 - 1/4*denom(1/4*s12^2)*mt^2*mh^2*s14^2*s24 - 1/4
      *denom(1/4*s12^2)*mt^2*mh^2*s14^2*s23 - 1/4*denom(1/4*s12^2)*mt^2*mh^2*
      s13*s24^2 - 1/2*denom(1/4*s12^2)*mt^2*mh^2*s13*s14*s24 - 1/4*denom(1/4*
      s12^2)*mt^4*s24^3 - 1/2*denom(1/4*s12^2)*mt^4*s23*s24^2 - 1/4*denom(1/4*
      s12^2)*mt^4*s23^2*s24 - 5/4*denom(1/4*s12^2)*mt^4*s14*s24^2 - 7/4*denom(
      1/4*s12^2)*mt^4*s14*s23*s24 - 1/2*denom(1/4*s12^2)*mt^4*s14*s23^2 - 5/4*
      denom(1/4*s12^2)*mt^4*s14^2*s24 - 3/4*denom(1/4*s12^2)*mt^4*s14^2*s23 - 
      1/4*denom(1/4*s12^2)*mt^4*s14^3 - 3/4*denom(1/4*s12^2)*mt^4*s13*s24^2 - 
      3/4*denom(1/4*s12^2)*mt^4*s13*s23*s24 - 7/4*denom(1/4*s12^2)*mt^4*s13*
      s14*s24 - 3/4*denom(1/4*s12^2)*mt^4*s13*s14*s23 - 1/2*denom(1/4*s12^2)*
      mt^4*s13*s14^2 - 1/2*denom(1/4*s12^2)*mt^4*s13^2*s24 - 1/4*denom(1/4*
      s12^2)*mt^4*s13^2*s14 - 1/4*denom(1/4*s12^2)*mt^4*s12*s24^2 - 1/4*denom(
      1/4*s12^2)*mt^4*s12*s23*s24 - denom(1/4*s12^2)*mt^4*s12*s14*s24 - 1/2*
      denom(1/4*s12^2)*mt^4*s12*s14*s23 - 1/4*denom(1/4*s12^2)*mt^4*s12*s14^2
       - 1/2*denom(1/4*s12^2)*mt^4*s12*s13*s24 - 1/4*denom(1/4*s12^2)*mt^4*s12
      *s13*s14 + 1/4*denom(1/4*s12^2)*mt^4*mh^2*s24^2 + 1/4*denom(1/4*s12^2)*
      mt^4*mh^2*s23*s24 + denom(1/4*s12^2)*mt^4*mh^2*s14*s24 + 1/2*denom(1/4*
      s12^2)*mt^4*mh^2*s14*s23 + 1/4*denom(1/4*s12^2)*mt^4*mh^2*s14^2 + 1/2*
      denom(1/4*s12^2)*mt^4*mh^2*s13*s24 + 1/4*denom(1/4*s12^2)*mt^4*mh^2*s13*
      s14 + 3/4*denom(1/4*s12^2)*mt^6*s24^2 + denom(1/4*s12^2)*mt^6*s23*s24 + 
      1/4*denom(1/4*s12^2)*mt^6*s23^2 + 3/2*denom(1/4*s12^2)*mt^6*s14*s24 + 
      denom(1/4*s12^2)*mt^6*s14*s23 + 3/4*denom(1/4*s12^2)*mt^6*s14^2 + denom(
      1/4*s12^2)*mt^6*s13*s24 + 1/2*denom(1/4*s12^2)*mt^6*s13*s23 + denom(1/4*
      s12^2)*mt^6*s13*s14 + 1/4*denom(1/4*s12^2)*mt^6*s13^2 + 3/4*denom(1/4*
      s12^2)*mt^6*s12*s24 + 1/4*denom(1/4*s12^2)*mt^6*s12*s23 + 3/4*denom(1/4*
      s12^2)*mt^6*s12*s14 + 1/4*denom(1/4*s12^2)*mt^6*s12*s13 - 3/4*denom(1/4*
      s12^2)*mt^6*mh^2*s24 - 1/4*denom(1/4*s12^2)*mt^6*mh^2*s23 - 3/4*denom(1/
      4*s12^2)*mt^6*mh^2*s14 - 1/4*denom(1/4*s12^2)*mt^6*mh^2*s13 - 1/2*denom(
      1/4*s12^2)*mt^8*s24 - 1/2*denom(1/4*s12^2)*mt^8*s23 - 1/2*denom(1/4*
      s12^2)*mt^8*s14 - 1/2*denom(1/4*s12^2)*mt^8*s13 - 1/2*denom(1/4*s12^2)*
      mt^8*s12 + 1/2*denom(1/4*s12^2)*mt^8*mh^2;
 
 .sort
id KMatrix(4,4) =   - 2*mt^4*s24 - 2*mt^4*s23 - 2*mt^4*s14 - 2*mt^4*s13 - 2*
      mt^4*s12 + 2*mt^4*mh^2 + 2*denom(1/2*s12)*mt^2*s14*s24^2 + 2*denom(1/2*
      s12)*mt^2*s14*s23*s24 + 2*denom(1/2*s12)*mt^2*s14^2*s24 + 2*denom(1/2*
      s12)*mt^2*s13*s14*s24 + 2*denom(1/2*s12)*mt^2*s12*s14*s24 - 2*denom(1/2*
      s12)*mt^2*mh^2*s14*s24 - 2*denom(1/2*s12)*mt^4*s24^2 - 2*denom(1/2*s12)*
      mt^4*s23*s24 - 4*denom(1/2*s12)*mt^4*s14*s24 - 2*denom(1/2*s12)*mt^4*s14
      *s23 - 2*denom(1/2*s12)*mt^4*s14^2 - 2*denom(1/2*s12)*mt^4*s13*s24 - 2*
      denom(1/2*s12)*mt^4*s13*s14 - 2*denom(1/2*s12)*mt^4*s12*s24 - 2*denom(1/
      2*s12)*mt^4*s12*s14 + 2*denom(1/2*s12)*mt^4*mh^2*s24 + 2*denom(1/2*s12)*
      mt^4*mh^2*s14 + 2*denom(1/2*s12)*mt^6*s24 + 2*denom(1/2*s12)*mt^6*s23 + 
      2*denom(1/2*s12)*mt^6*s14 + 2*denom(1/2*s12)*mt^6*s13 + 2*denom(1/2*s12)
      *mt^6*s12 - 2*denom(1/2*s12)*mt^6*mh^2 - 1/2*denom(1/4*s12^2)*s14^2*
      s24^3 - 1/2*denom(1/4*s12^2)*s14^2*s23*s24^2 - 1/2*denom(1/4*s12^2)*
      s14^3*s24^2 - 1/2*denom(1/4*s12^2)*s13*s14^2*s24^2 - 1/2*denom(1/4*s12^2
      )*s12*s14^2*s24^2 + 1/2*denom(1/4*s12^2)*mh^2*s14^2*s24^2 + denom(1/4*
      s12^2)*mt^2*s14*s24^3 + denom(1/4*s12^2)*mt^2*s14*s23*s24^2 + 2*denom(1/
      4*s12^2)*mt^2*s14^2*s24^2 + denom(1/4*s12^2)*mt^2*s14^2*s23*s24 + denom(
      1/4*s12^2)*mt^2*s14^3*s24 + denom(1/4*s12^2)*mt^2*s13*s14*s24^2 + denom(
      1/4*s12^2)*mt^2*s13*s14^2*s24 + denom(1/4*s12^2)*mt^2*s12*s14*s24^2 + 
      denom(1/4*s12^2)*mt^2*s12*s14^2*s24 - denom(1/4*s12^2)*mt^2*mh^2*s14*
      s24^2 - denom(1/4*s12^2)*mt^2*mh^2*s14^2*s24 - 1/2*denom(1/4*s12^2)*mt^4
      *s24^3 - 1/2*denom(1/4*s12^2)*mt^4*s23*s24^2 - 5/2*denom(1/4*s12^2)*mt^4
      *s14*s24^2 - 2*denom(1/4*s12^2)*mt^4*s14*s23*s24 - 5/2*denom(1/4*s12^2)*
      mt^4*s14^2*s24 - 1/2*denom(1/4*s12^2)*mt^4*s14^2*s23 - 1/2*denom(1/4*
      s12^2)*mt^4*s14^3 - 1/2*denom(1/4*s12^2)*mt^4*s13*s24^2 - 2*denom(1/4*
      s12^2)*mt^4*s13*s14*s24 - 1/2*denom(1/4*s12^2)*mt^4*s13*s14^2 - 1/2*
      denom(1/4*s12^2)*mt^4*s12*s24^2 - 2*denom(1/4*s12^2)*mt^4*s12*s14*s24 - 
      1/2*denom(1/4*s12^2)*mt^4*s12*s14^2 + 1/2*denom(1/4*s12^2)*mt^4*mh^2*
      s24^2 + 2*denom(1/4*s12^2)*mt^4*mh^2*s14*s24 + 1/2*denom(1/4*s12^2)*mt^4
      *mh^2*s14^2 + denom(1/4*s12^2)*mt^6*s24^2 + denom(1/4*s12^2)*mt^6*s23*
      s24 + 2*denom(1/4*s12^2)*mt^6*s14*s24 + denom(1/4*s12^2)*mt^6*s14*s23 + 
      denom(1/4*s12^2)*mt^6*s14^2 + denom(1/4*s12^2)*mt^6*s13*s24 + denom(1/4*
      s12^2)*mt^6*s13*s14 + denom(1/4*s12^2)*mt^6*s12*s24 + denom(1/4*s12^2)*
      mt^6*s12*s14 - denom(1/4*s12^2)*mt^6*mh^2*s24 - denom(1/4*s12^2)*mt^6*
      mh^2*s14 - 1/2*denom(1/4*s12^2)*mt^8*s24 - 1/2*denom(1/4*s12^2)*mt^8*s23
       - 1/2*denom(1/4*s12^2)*mt^8*s14 - 1/2*denom(1/4*s12^2)*mt^8*s13 - 1/2*
      denom(1/4*s12^2)*mt^8*s12 + 1/2*denom(1/4*s12^2)*mt^8*mh^2;
 
 .sort
id KMatrix(4,5) =  1/2*mt*s14*s24^2 + mt*s14*s23*s24 + 1/2*mt*s14*s23^2 + mt*
      s14^2*s24 + mt*s14^2*s23 + 1/2*mt*s14^3 - 1/2*mt*s13*s24^2 - mt*s13*s23*
      s24 - 1/2*mt*s13*s23^2 + 1/2*mt*s13*s14^2 - mt*s13^2*s24 - mt*s13^2*s23
       - 1/2*mt*s13^2*s14 - 1/2*mt*s13^3 + mt*s12*s14*s24 + mt*s12*s14*s23 + 
      mt*s12*s14^2 - mt*s12*s13*s24 - mt*s12*s13*s23 - mt*s12*s13^2 + 1/2*mt*
      s12^2*s14 - 1/2*mt*s12^2*s13 - mt*mh^2*s14*s24 - mt*mh^2*s14*s23 - mt*
      mh^2*s14^2 + mt*mh^2*s13*s24 + mt*mh^2*s13*s23 + mt*mh^2*s13^2 - mt*mh^2
      *s12*s14 + mt*mh^2*s12*s13 + 1/2*mt*mh^4*s14 - 1/2*mt*mh^4*s13 - 2*mt^3*
      s14*s24 - 2*mt^3*s14*s23 - 2*mt^3*s14^2 + 2*mt^3*s13*s24 + 2*mt^3*s13*
      s23 + 2*mt^3*s13^2 - 2*mt^3*s12*s14 + 2*mt^3*s12*s13 + 2*mt^3*mh^2*s14
       - 2*mt^3*mh^2*s13 + 2*mt^5*s14 - 2*mt^5*s13 + 1/2*denom(1/2*s12)*mt*
      s14^2*s23*s24 + 1/2*denom(1/2*s12)*mt*s14^2*s23^2 + 1/2*denom(1/2*s12)*
      mt*s14^3*s23 + 1/2*denom(1/2*s12)*mt*s13*s14*s24^2 - 1/2*denom(1/2*s12)*
      mt*s13*s14*s23^2 + 1/2*denom(1/2*s12)*mt*s13*s14^2*s24 - 1/2*denom(1/2*
      s12)*mt*s13^2*s24^2 - 1/2*denom(1/2*s12)*mt*s13^2*s23*s24 - 1/2*denom(1/
      2*s12)*mt*s13^2*s14*s23 - 1/2*denom(1/2*s12)*mt*s13^3*s24 + 1/2*denom(1/
      2*s12)*mt*s12*s14^2*s23 + 1/2*denom(1/2*s12)*mt*s12*s13*s14*s24 - 1/2*
      denom(1/2*s12)*mt*s12*s13*s14*s23 - 1/2*denom(1/2*s12)*mt*s12*s13^2*s24
       - 1/2*denom(1/2*s12)*mt*mh^2*s14^2*s23 - 1/2*denom(1/2*s12)*mt*mh^2*s13
      *s14*s24 + 1/2*denom(1/2*s12)*mt*mh^2*s13*s14*s23 + 1/2*denom(1/2*s12)*
      mt*mh^2*s13^2*s24 - 1/2*denom(1/2*s12)*mt^3*s14*s24^2 - denom(1/2*s12)*
      mt^3*s14*s23*s24 - 1/2*denom(1/2*s12)*mt^3*s14*s23^2 - denom(1/2*s12)*
      mt^3*s14^2*s24 - 2*denom(1/2*s12)*mt^3*s14^2*s23 - 1/2*denom(1/2*s12)*
      mt^3*s14^3 + 1/2*denom(1/2*s12)*mt^3*s13*s24^2 + denom(1/2*s12)*mt^3*s13
      *s23*s24 + 1/2*denom(1/2*s12)*mt^3*s13*s23^2 - denom(1/2*s12)*mt^3*s13*
      s14*s24 + denom(1/2*s12)*mt^3*s13*s14*s23 - 1/2*denom(1/2*s12)*mt^3*s13*
      s14^2 + 2*denom(1/2*s12)*mt^3*s13^2*s24 + denom(1/2*s12)*mt^3*s13^2*s23
       + 1/2*denom(1/2*s12)*mt^3*s13^2*s14 + 1/2*denom(1/2*s12)*mt^3*s13^3 - 1/
      2*denom(1/2*s12)*mt^3*s12*s14*s24 - 1/2*denom(1/2*s12)*mt^3*s12*s14*s23
       - 1/2*denom(1/2*s12)*mt^3*s12*s14^2 + 1/2*denom(1/2*s12)*mt^3*s12*s13*
      s24 + 1/2*denom(1/2*s12)*mt^3*s12*s13*s23 + 1/2*denom(1/2*s12)*mt^3*s12*
      s13^2 + 1/2*denom(1/2*s12)*mt^3*mh^2*s14*s24 + 1/2*denom(1/2*s12)*mt^3*
      mh^2*s14*s23 + 1/2*denom(1/2*s12)*mt^3*mh^2*s14^2 - 1/2*denom(1/2*s12)*
      mt^3*mh^2*s13*s24 - 1/2*denom(1/2*s12)*mt^3*mh^2*s13*s23 - 1/2*denom(1/2
      *s12)*mt^3*mh^2*s13^2 + 2*denom(1/2*s12)*mt^5*s14*s24 + 2*denom(1/2*s12)
      *mt^5*s14*s23 + 2*denom(1/2*s12)*mt^5*s14^2 - 2*denom(1/2*s12)*mt^5*s13*
      s24 - 2*denom(1/2*s12)*mt^5*s13*s23 - 2*denom(1/2*s12)*mt^5*s13^2 + 
      denom(1/2*s12)*mt^5*s12*s14 - denom(1/2*s12)*mt^5*s12*s13 - denom(1/2*
      s12)*mt^5*mh^2*s14 + denom(1/2*s12)*mt^5*mh^2*s13 - 2*denom(1/2*s12)*
      mt^7*s14 + 2*denom(1/2*s12)*mt^7*s13 + 1/8*denom(1/4*s12^2)*mt*s14^3*
      s23^2 + 1/4*denom(1/4*s12^2)*mt*s13*s14^2*s23*s24 - 1/8*denom(1/4*s12^2)
      *mt*s13*s14^2*s23^2 + 1/8*denom(1/4*s12^2)*mt*s13^2*s14*s24^2 - 1/4*
      denom(1/4*s12^2)*mt*s13^2*s14*s23*s24 - 1/8*denom(1/4*s12^2)*mt*s13^3*
      s24^2 - 1/4*denom(1/4*s12^2)*mt^3*s14^2*s23*s24 - 1/4*denom(1/4*s12^2)*
      mt^3*s14^2*s23^2 - 1/4*denom(1/4*s12^2)*mt^3*s14^3*s23 - 1/4*denom(1/4*
      s12^2)*mt^3*s13*s14*s24^2 + 1/4*denom(1/4*s12^2)*mt^3*s13*s14*s23^2 - 1/
      4*denom(1/4*s12^2)*mt^3*s13*s14^2*s24 + 1/4*denom(1/4*s12^2)*mt^3*s13^2*
      s24^2 + 1/4*denom(1/4*s12^2)*mt^3*s13^2*s23*s24 + 1/4*denom(1/4*s12^2)*
      mt^3*s13^2*s14*s23 + 1/4*denom(1/4*s12^2)*mt^3*s13^3*s24 + 1/8*denom(1/4
      *s12^2)*mt^5*s14*s24^2 + 1/4*denom(1/4*s12^2)*mt^5*s14*s23*s24 + 1/8*
      denom(1/4*s12^2)*mt^5*s14*s23^2 + 1/4*denom(1/4*s12^2)*mt^5*s14^2*s24 + 
      3/4*denom(1/4*s12^2)*mt^5*s14^2*s23 + 1/8*denom(1/4*s12^2)*mt^5*s14^3 - 
      1/8*denom(1/4*s12^2)*mt^5*s13*s24^2 - 1/4*denom(1/4*s12^2)*mt^5*s13*s23*
      s24 - 1/8*denom(1/4*s12^2)*mt^5*s13*s23^2 + 1/2*denom(1/4*s12^2)*mt^5*
      s13*s14*s24 - 1/2*denom(1/4*s12^2)*mt^5*s13*s14*s23 + 1/8*denom(1/4*
      s12^2)*mt^5*s13*s14^2 - 3/4*denom(1/4*s12^2)*mt^5*s13^2*s24 - 1/4*denom(
      1/4*s12^2)*mt^5*s13^2*s23 - 1/8*denom(1/4*s12^2)*mt^5*s13^2*s14 - 1/8*
      denom(1/4*s12^2)*mt^5*s13^3 - 1/2*denom(1/4*s12^2)*mt^7*s14*s24 - 1/2*
      denom(1/4*s12^2)*mt^7*s14*s23 - 1/2*denom(1/4*s12^2)*mt^7*s14^2 + 1/2*
      denom(1/4*s12^2)*mt^7*s13*s24 + 1/2*denom(1/4*s12^2)*mt^7*s13*s23 + 1/2*
      denom(1/4*s12^2)*mt^7*s13^2 + 1/2*denom(1/4*s12^2)*mt^9*s14 - 1/2*denom(
      1/4*s12^2)*mt^9*s13;
 
 .sort
id KMatrix(4,6) =   - mt^3*s14*s24 - mt^3*s14*s23 - mt^3*s14^2 + mt^3*s13*s24
       + mt^3*s13*s23 + mt^3*s13^2 - mt^3*s12*s14 + mt^3*s12*s13 + mt^3*mh^2*
      s14 - mt^3*mh^2*s13 + 2*mt^5*s14 - 2*mt^5*s13 + 1/2*denom(1/2*s12)*mt*
      s14^2*s24^2 + 1/2*denom(1/2*s12)*mt*s14^2*s23*s24 + 1/2*denom(1/2*s12)*
      mt*s14^3*s24 - 1/2*denom(1/2*s12)*mt*s13*s14*s24^2 - 1/2*denom(1/2*s12)*
      mt*s13*s14*s23*s24 - 1/2*denom(1/2*s12)*mt*s13^2*s14*s24 + 1/2*denom(1/2
      *s12)*mt*s12*s14^2*s24 - 1/2*denom(1/2*s12)*mt*s12*s13*s14*s24 - 1/2*
      denom(1/2*s12)*mt*mh^2*s14^2*s24 + 1/2*denom(1/2*s12)*mt*mh^2*s13*s14*
      s24 - 1/2*denom(1/2*s12)*mt^3*s14*s24^2 - 1/2*denom(1/2*s12)*mt^3*s14*
      s23*s24 - 2*denom(1/2*s12)*mt^3*s14^2*s24 - denom(1/2*s12)*mt^3*s14^2*
      s23 - 1/2*denom(1/2*s12)*mt^3*s14^3 + 1/2*denom(1/2*s12)*mt^3*s13*s24^2
       + 1/2*denom(1/2*s12)*mt^3*s13*s23*s24 + denom(1/2*s12)*mt^3*s13*s14*s24
       + denom(1/2*s12)*mt^3*s13*s14*s23 + denom(1/2*s12)*mt^3*s13^2*s24 + 1/2
      *denom(1/2*s12)*mt^3*s13^2*s14 - 1/2*denom(1/2*s12)*mt^3*s12*s14*s24 - 1/
      2*denom(1/2*s12)*mt^3*s12*s14^2 + 1/2*denom(1/2*s12)*mt^3*s12*s13*s24 + 
      1/2*denom(1/2*s12)*mt^3*s12*s13*s14 + 1/2*denom(1/2*s12)*mt^3*mh^2*s14*
      s24 + 1/2*denom(1/2*s12)*mt^3*mh^2*s14^2 - 1/2*denom(1/2*s12)*mt^3*mh^2*
      s13*s24 - 1/2*denom(1/2*s12)*mt^3*mh^2*s13*s14 + 2*denom(1/2*s12)*mt^5*
      s14*s24 + denom(1/2*s12)*mt^5*s14*s23 + 2*denom(1/2*s12)*mt^5*s14^2 - 2*
      denom(1/2*s12)*mt^5*s13*s24 - denom(1/2*s12)*mt^5*s13*s23 - denom(1/2*
      s12)*mt^5*s13*s14 - denom(1/2*s12)*mt^5*s13^2 + 1/2*denom(1/2*s12)*mt^5*
      s12*s14 - 1/2*denom(1/2*s12)*mt^5*s12*s13 - 1/2*denom(1/2*s12)*mt^5*mh^2
      *s14 + 1/2*denom(1/2*s12)*mt^5*mh^2*s13 - 2*denom(1/2*s12)*mt^7*s14 + 2*
      denom(1/2*s12)*mt^7*s13 + 1/4*denom(1/4*s12^2)*mt*s14^3*s23*s24 + 1/4*
      denom(1/4*s12^2)*mt*s13*s14^2*s24^2 - 1/4*denom(1/4*s12^2)*mt*s13*s14^2*
      s23*s24 - 1/4*denom(1/4*s12^2)*mt*s13^2*s14*s24^2 - 1/4*denom(1/4*s12^2)
      *mt^3*s14^2*s24^2 - 1/2*denom(1/4*s12^2)*mt^3*s14^2*s23*s24 - 1/4*denom(
      1/4*s12^2)*mt^3*s14^3*s24 - 1/4*denom(1/4*s12^2)*mt^3*s14^3*s23 + 1/2*
      denom(1/4*s12^2)*mt^3*s13*s14*s23*s24 - 1/4*denom(1/4*s12^2)*mt^3*s13*
      s14^2*s24 + 1/4*denom(1/4*s12^2)*mt^3*s13*s14^2*s23 + 1/4*denom(1/4*
      s12^2)*mt^3*s13^2*s24^2 + 1/2*denom(1/4*s12^2)*mt^3*s13^2*s14*s24 + 1/4*
      denom(1/4*s12^2)*mt^5*s14*s24^2 + 1/4*denom(1/4*s12^2)*mt^5*s14*s23*s24
       + denom(1/4*s12^2)*mt^5*s14^2*s24 + 1/2*denom(1/4*s12^2)*mt^5*s14^2*s23
       + 1/4*denom(1/4*s12^2)*mt^5*s14^3 - 1/4*denom(1/4*s12^2)*mt^5*s13*s24^2
       - 1/4*denom(1/4*s12^2)*mt^5*s13*s23*s24 - 1/2*denom(1/4*s12^2)*mt^5*s13
      *s14*s24 - 1/2*denom(1/4*s12^2)*mt^5*s13*s14*s23 - 1/2*denom(1/4*s12^2)*
      mt^5*s13^2*s24 - 1/4*denom(1/4*s12^2)*mt^5*s13^2*s14 - 3/4*denom(1/4*
      s12^2)*mt^7*s14*s24 - 1/4*denom(1/4*s12^2)*mt^7*s14*s23 - 3/4*denom(1/4*
      s12^2)*mt^7*s14^2 + 3/4*denom(1/4*s12^2)*mt^7*s13*s24 + 1/4*denom(1/4*
      s12^2)*mt^7*s13*s23 + 1/2*denom(1/4*s12^2)*mt^7*s13*s14 + 1/4*denom(1/4*
      s12^2)*mt^7*s13^2 + 1/2*denom(1/4*s12^2)*mt^9*s14 - 1/2*denom(1/4*s12^2)
      *mt^9*s13;
 
 .sort
id KMatrix(4,7) =   - mt^3*s14*s24 - mt^3*s14*s23 - mt^3*s14^2 + mt^3*s13*s24
       + mt^3*s13*s23 + mt^3*s13^2 - mt^3*s12*s14 + mt^3*s12*s13 + mt^3*mh^2*
      s14 - mt^3*mh^2*s13 + 2*mt^5*s14 - 2*mt^5*s13 + 1/2*denom(1/2*s12)*mt*
      s14^2*s24^2 + 1/2*denom(1/2*s12)*mt*s14^2*s23*s24 + 1/2*denom(1/2*s12)*
      mt*s14^3*s24 - 1/2*denom(1/2*s12)*mt*s13*s14*s24^2 - 1/2*denom(1/2*s12)*
      mt*s13*s14*s23*s24 - 1/2*denom(1/2*s12)*mt*s13^2*s14*s24 + 1/2*denom(1/2
      *s12)*mt*s12*s14^2*s24 - 1/2*denom(1/2*s12)*mt*s12*s13*s14*s24 - 1/2*
      denom(1/2*s12)*mt*mh^2*s14^2*s24 + 1/2*denom(1/2*s12)*mt*mh^2*s13*s14*
      s24 - 1/2*denom(1/2*s12)*mt^3*s14*s24^2 - 1/2*denom(1/2*s12)*mt^3*s14*
      s23*s24 - 2*denom(1/2*s12)*mt^3*s14^2*s24 - denom(1/2*s12)*mt^3*s14^2*
      s23 - 1/2*denom(1/2*s12)*mt^3*s14^3 + 1/2*denom(1/2*s12)*mt^3*s13*s24^2
       + 1/2*denom(1/2*s12)*mt^3*s13*s23*s24 + denom(1/2*s12)*mt^3*s13*s14*s24
       + denom(1/2*s12)*mt^3*s13*s14*s23 + denom(1/2*s12)*mt^3*s13^2*s24 + 1/2
      *denom(1/2*s12)*mt^3*s13^2*s14 - 1/2*denom(1/2*s12)*mt^3*s12*s14*s24 - 1/
      2*denom(1/2*s12)*mt^3*s12*s14^2 + 1/2*denom(1/2*s12)*mt^3*s12*s13*s24 + 
      1/2*denom(1/2*s12)*mt^3*s12*s13*s14 + 1/2*denom(1/2*s12)*mt^3*mh^2*s14*
      s24 + 1/2*denom(1/2*s12)*mt^3*mh^2*s14^2 - 1/2*denom(1/2*s12)*mt^3*mh^2*
      s13*s24 - 1/2*denom(1/2*s12)*mt^3*mh^2*s13*s14 + 2*denom(1/2*s12)*mt^5*
      s14*s24 + denom(1/2*s12)*mt^5*s14*s23 + 2*denom(1/2*s12)*mt^5*s14^2 - 2*
      denom(1/2*s12)*mt^5*s13*s24 - denom(1/2*s12)*mt^5*s13*s23 - denom(1/2*
      s12)*mt^5*s13*s14 - denom(1/2*s12)*mt^5*s13^2 + 1/2*denom(1/2*s12)*mt^5*
      s12*s14 - 1/2*denom(1/2*s12)*mt^5*s12*s13 - 1/2*denom(1/2*s12)*mt^5*mh^2
      *s14 + 1/2*denom(1/2*s12)*mt^5*mh^2*s13 - 2*denom(1/2*s12)*mt^7*s14 + 2*
      denom(1/2*s12)*mt^7*s13 + 1/4*denom(1/4*s12^2)*mt*s14^3*s23*s24 + 1/4*
      denom(1/4*s12^2)*mt*s13*s14^2*s24^2 - 1/4*denom(1/4*s12^2)*mt*s13*s14^2*
      s23*s24 - 1/4*denom(1/4*s12^2)*mt*s13^2*s14*s24^2 - 1/4*denom(1/4*s12^2)
      *mt^3*s14^2*s24^2 - 1/2*denom(1/4*s12^2)*mt^3*s14^2*s23*s24 - 1/4*denom(
      1/4*s12^2)*mt^3*s14^3*s24 - 1/4*denom(1/4*s12^2)*mt^3*s14^3*s23 + 1/2*
      denom(1/4*s12^2)*mt^3*s13*s14*s23*s24 - 1/4*denom(1/4*s12^2)*mt^3*s13*
      s14^2*s24 + 1/4*denom(1/4*s12^2)*mt^3*s13*s14^2*s23 + 1/4*denom(1/4*
      s12^2)*mt^3*s13^2*s24^2 + 1/2*denom(1/4*s12^2)*mt^3*s13^2*s14*s24 + 1/4*
      denom(1/4*s12^2)*mt^5*s14*s24^2 + 1/4*denom(1/4*s12^2)*mt^5*s14*s23*s24
       + denom(1/4*s12^2)*mt^5*s14^2*s24 + 1/2*denom(1/4*s12^2)*mt^5*s14^2*s23
       + 1/4*denom(1/4*s12^2)*mt^5*s14^3 - 1/4*denom(1/4*s12^2)*mt^5*s13*s24^2
       - 1/4*denom(1/4*s12^2)*mt^5*s13*s23*s24 - 1/2*denom(1/4*s12^2)*mt^5*s13
      *s14*s24 - 1/2*denom(1/4*s12^2)*mt^5*s13*s14*s23 - 1/2*denom(1/4*s12^2)*
      mt^5*s13^2*s24 - 1/4*denom(1/4*s12^2)*mt^5*s13^2*s14 - 3/4*denom(1/4*
      s12^2)*mt^7*s14*s24 - 1/4*denom(1/4*s12^2)*mt^7*s14*s23 - 3/4*denom(1/4*
      s12^2)*mt^7*s14^2 + 3/4*denom(1/4*s12^2)*mt^7*s13*s24 + 1/4*denom(1/4*
      s12^2)*mt^7*s13*s23 + 1/2*denom(1/4*s12^2)*mt^7*s13*s14 + 1/4*denom(1/4*
      s12^2)*mt^7*s13^2 + 1/2*denom(1/4*s12^2)*mt^9*s14 - 1/2*denom(1/4*s12^2)
      *mt^9*s13;
 
 .sort
id KMatrix(4,8) =  2*mt^5*s14 - 2*mt^5*s13 - 2*denom(1/2*s12)*mt^3*s14^2*s24
       + 2*denom(1/2*s12)*mt^3*s13*s14*s24 + 2*denom(1/2*s12)*mt^5*s14*s24 + 2
      *denom(1/2*s12)*mt^5*s14^2 - 2*denom(1/2*s12)*mt^5*s13*s24 - 2*denom(1/2
      *s12)*mt^5*s13*s14 - 2*denom(1/2*s12)*mt^7*s14 + 2*denom(1/2*s12)*mt^7*
      s13 + 1/2*denom(1/4*s12^2)*mt*s14^3*s24^2 - 1/2*denom(1/4*s12^2)*mt*s13*
      s14^2*s24^2 - denom(1/4*s12^2)*mt^3*s14^2*s24^2 - denom(1/4*s12^2)*mt^3*
      s14^3*s24 + denom(1/4*s12^2)*mt^3*s13*s14*s24^2 + denom(1/4*s12^2)*mt^3*
      s13*s14^2*s24 + 1/2*denom(1/4*s12^2)*mt^5*s14*s24^2 + 2*denom(1/4*s12^2)
      *mt^5*s14^2*s24 + 1/2*denom(1/4*s12^2)*mt^5*s14^3 - 1/2*denom(1/4*s12^2)
      *mt^5*s13*s24^2 - 2*denom(1/4*s12^2)*mt^5*s13*s14*s24 - 1/2*denom(1/4*
      s12^2)*mt^5*s13*s14^2 - denom(1/4*s12^2)*mt^7*s14*s24 - denom(1/4*s12^2)
      *mt^7*s14^2 + denom(1/4*s12^2)*mt^7*s13*s24 + denom(1/4*s12^2)*mt^7*s13*
      s14 + 1/2*denom(1/4*s12^2)*mt^9*s14 - 1/2*denom(1/4*s12^2)*mt^9*s13;
 
 .sort
id KMatrix(4,9) =  1/2*mt*s24^3 + 1/2*mt*s23*s24^2 - 1/2*mt*s23^2*s24 - 1/2*mt
      *s23^3 + mt*s14*s24^2 - mt*s14*s23^2 + 1/2*mt*s14^2*s24 - 1/2*mt*s14^2*
      s23 + mt*s13*s24^2 - mt*s13*s23^2 + mt*s13*s14*s24 - mt*s13*s14*s23 + 1/
      2*mt*s13^2*s24 - 1/2*mt*s13^2*s23 + mt*s12*s24^2 - mt*s12*s23^2 + mt*s12
      *s14*s24 - mt*s12*s14*s23 + mt*s12*s13*s24 - mt*s12*s13*s23 + 1/2*mt*
      s12^2*s24 - 1/2*mt*s12^2*s23 - mt*mh^2*s24^2 + mt*mh^2*s23^2 - mt*mh^2*
      s14*s24 + mt*mh^2*s14*s23 - mt*mh^2*s13*s24 + mt*mh^2*s13*s23 - mt*mh^2*
      s12*s24 + mt*mh^2*s12*s23 + 1/2*mt*mh^4*s24 - 1/2*mt*mh^4*s23 - 2*mt^3*
      s24^2 + 2*mt^3*s23^2 - 2*mt^3*s14*s24 + 2*mt^3*s14*s23 - 2*mt^3*s13*s24
       + 2*mt^3*s13*s23 - 2*mt^3*s12*s24 + 2*mt^3*s12*s23 + 2*mt^3*mh^2*s24 - 
      2*mt^3*mh^2*s23 + 2*mt^5*s24 - 2*mt^5*s23 + 1/2*denom(1/2*s12)*mt*s14*
      s23*s24^2 - 1/2*denom(1/2*s12)*mt*s14*s23^3 + 1/2*denom(1/2*s12)*mt*
      s14^2*s23*s24 - 1/2*denom(1/2*s12)*mt*s14^2*s23^2 + 1/2*denom(1/2*s12)*
      mt*s13*s24^3 - 1/2*denom(1/2*s12)*mt*s13*s23^2*s24 + 1/2*denom(1/2*s12)*
      mt*s13*s14*s24^2 - 1/2*denom(1/2*s12)*mt*s13*s14*s23^2 + 1/2*denom(1/2*
      s12)*mt*s13^2*s24^2 - 1/2*denom(1/2*s12)*mt*s13^2*s23*s24 + 1/2*denom(1/
      2*s12)*mt*s12*s14*s23*s24 - 1/2*denom(1/2*s12)*mt*s12*s14*s23^2 + 1/2*
      denom(1/2*s12)*mt*s12*s13*s24^2 - 1/2*denom(1/2*s12)*mt*s12*s13*s23*s24
       - 1/2*denom(1/2*s12)*mt*mh^2*s14*s23*s24 + 1/2*denom(1/2*s12)*mt*mh^2*
      s14*s23^2 - 1/2*denom(1/2*s12)*mt*mh^2*s13*s24^2 + 1/2*denom(1/2*s12)*mt
      *mh^2*s13*s23*s24 - 1/2*denom(1/2*s12)*mt^3*s24^3 - 1/2*denom(1/2*s12)*
      mt^3*s23*s24^2 + 1/2*denom(1/2*s12)*mt^3*s23^2*s24 + 1/2*denom(1/2*s12)*
      mt^3*s23^3 - denom(1/2*s12)*mt^3*s14*s24^2 - denom(1/2*s12)*mt^3*s14*s23
      *s24 + 2*denom(1/2*s12)*mt^3*s14*s23^2 - 1/2*denom(1/2*s12)*mt^3*s14^2*
      s24 + 1/2*denom(1/2*s12)*mt^3*s14^2*s23 - 2*denom(1/2*s12)*mt^3*s13*
      s24^2 + denom(1/2*s12)*mt^3*s13*s23*s24 + denom(1/2*s12)*mt^3*s13*s23^2
       - denom(1/2*s12)*mt^3*s13*s14*s24 + denom(1/2*s12)*mt^3*s13*s14*s23 - 1/
      2*denom(1/2*s12)*mt^3*s13^2*s24 + 1/2*denom(1/2*s12)*mt^3*s13^2*s23 - 1/
      2*denom(1/2*s12)*mt^3*s12*s24^2 + 1/2*denom(1/2*s12)*mt^3*s12*s23^2 - 1/
      2*denom(1/2*s12)*mt^3*s12*s14*s24 + 1/2*denom(1/2*s12)*mt^3*s12*s14*s23
       - 1/2*denom(1/2*s12)*mt^3*s12*s13*s24 + 1/2*denom(1/2*s12)*mt^3*s12*s13
      *s23 + 1/2*denom(1/2*s12)*mt^3*mh^2*s24^2 - 1/2*denom(1/2*s12)*mt^3*mh^2
      *s23^2 + 1/2*denom(1/2*s12)*mt^3*mh^2*s14*s24 - 1/2*denom(1/2*s12)*mt^3*
      mh^2*s14*s23 + 1/2*denom(1/2*s12)*mt^3*mh^2*s13*s24 - 1/2*denom(1/2*s12)
      *mt^3*mh^2*s13*s23 + 2*denom(1/2*s12)*mt^5*s24^2 - 2*denom(1/2*s12)*mt^5
      *s23^2 + 2*denom(1/2*s12)*mt^5*s14*s24 - 2*denom(1/2*s12)*mt^5*s14*s23
       + 2*denom(1/2*s12)*mt^5*s13*s24 - 2*denom(1/2*s12)*mt^5*s13*s23 + 
      denom(1/2*s12)*mt^5*s12*s24 - denom(1/2*s12)*mt^5*s12*s23 - denom(1/2*
      s12)*mt^5*mh^2*s24 + denom(1/2*s12)*mt^5*mh^2*s23 - 2*denom(1/2*s12)*
      mt^7*s24 + 2*denom(1/2*s12)*mt^7*s23 + 1/8*denom(1/4*s12^2)*mt*s14^2*
      s23^2*s24 - 1/8*denom(1/4*s12^2)*mt*s14^2*s23^3 + 1/4*denom(1/4*s12^2)*
      mt*s13*s14*s23*s24^2 - 1/4*denom(1/4*s12^2)*mt*s13*s14*s23^2*s24 + 1/8*
      denom(1/4*s12^2)*mt*s13^2*s24^3 - 1/8*denom(1/4*s12^2)*mt*s13^2*s23*
      s24^2 - 1/4*denom(1/4*s12^2)*mt^3*s14*s23*s24^2 + 1/4*denom(1/4*s12^2)*
      mt^3*s14*s23^3 - 1/4*denom(1/4*s12^2)*mt^3*s14^2*s23*s24 + 1/4*denom(1/4
      *s12^2)*mt^3*s14^2*s23^2 - 1/4*denom(1/4*s12^2)*mt^3*s13*s24^3 + 1/4*
      denom(1/4*s12^2)*mt^3*s13*s23^2*s24 - 1/4*denom(1/4*s12^2)*mt^3*s13*s14*
      s24^2 + 1/4*denom(1/4*s12^2)*mt^3*s13*s14*s23^2 - 1/4*denom(1/4*s12^2)*
      mt^3*s13^2*s24^2 + 1/4*denom(1/4*s12^2)*mt^3*s13^2*s23*s24 + 1/8*denom(1/
      4*s12^2)*mt^5*s24^3 + 1/8*denom(1/4*s12^2)*mt^5*s23*s24^2 - 1/8*denom(1/
      4*s12^2)*mt^5*s23^2*s24 - 1/8*denom(1/4*s12^2)*mt^5*s23^3 + 1/4*denom(1/
      4*s12^2)*mt^5*s14*s24^2 + 1/2*denom(1/4*s12^2)*mt^5*s14*s23*s24 - 3/4*
      denom(1/4*s12^2)*mt^5*s14*s23^2 + 1/8*denom(1/4*s12^2)*mt^5*s14^2*s24 - 
      1/8*denom(1/4*s12^2)*mt^5*s14^2*s23 + 3/4*denom(1/4*s12^2)*mt^5*s13*
      s24^2 - 1/2*denom(1/4*s12^2)*mt^5*s13*s23*s24 - 1/4*denom(1/4*s12^2)*
      mt^5*s13*s23^2 + 1/4*denom(1/4*s12^2)*mt^5*s13*s14*s24 - 1/4*denom(1/4*
      s12^2)*mt^5*s13*s14*s23 + 1/8*denom(1/4*s12^2)*mt^5*s13^2*s24 - 1/8*
      denom(1/4*s12^2)*mt^5*s13^2*s23 - 1/2*denom(1/4*s12^2)*mt^7*s24^2 + 1/2*
      denom(1/4*s12^2)*mt^7*s23^2 - 1/2*denom(1/4*s12^2)*mt^7*s14*s24 + 1/2*
      denom(1/4*s12^2)*mt^7*s14*s23 - 1/2*denom(1/4*s12^2)*mt^7*s13*s24 + 1/2*
      denom(1/4*s12^2)*mt^7*s13*s23 + 1/2*denom(1/4*s12^2)*mt^9*s24 - 1/2*
      denom(1/4*s12^2)*mt^9*s23;
 
 .sort
id KMatrix(4,10) =   - mt^3*s24^2 + mt^3*s23^2 - mt^3*s14*s24 + mt^3*s14*s23
       - mt^3*s13*s24 + mt^3*s13*s23 - mt^3*s12*s24 + mt^3*s12*s23 + mt^3*mh^2
      *s24 - mt^3*mh^2*s23 + 2*mt^5*s24 - 2*mt^5*s23 + 1/2*denom(1/2*s12)*mt*
      s14*s24^3 - 1/2*denom(1/2*s12)*mt*s14*s23^2*s24 + 1/2*denom(1/2*s12)*mt*
      s14^2*s24^2 - 1/2*denom(1/2*s12)*mt*s14^2*s23*s24 + 1/2*denom(1/2*s12)*
      mt*s13*s14*s24^2 - 1/2*denom(1/2*s12)*mt*s13*s14*s23*s24 + 1/2*denom(1/2
      *s12)*mt*s12*s14*s24^2 - 1/2*denom(1/2*s12)*mt*s12*s14*s23*s24 - 1/2*
      denom(1/2*s12)*mt*mh^2*s14*s24^2 + 1/2*denom(1/2*s12)*mt*mh^2*s14*s23*
      s24 - 1/2*denom(1/2*s12)*mt^3*s24^3 + 1/2*denom(1/2*s12)*mt^3*s23^2*s24
       - 2*denom(1/2*s12)*mt^3*s14*s24^2 + denom(1/2*s12)*mt^3*s14*s23*s24 + 
      denom(1/2*s12)*mt^3*s14*s23^2 - 1/2*denom(1/2*s12)*mt^3*s14^2*s24 + 1/2*
      denom(1/2*s12)*mt^3*s14^2*s23 - denom(1/2*s12)*mt^3*s13*s24^2 + denom(1/
      2*s12)*mt^3*s13*s23*s24 - 1/2*denom(1/2*s12)*mt^3*s13*s14*s24 + 1/2*
      denom(1/2*s12)*mt^3*s13*s14*s23 - 1/2*denom(1/2*s12)*mt^3*s12*s24^2 + 1/
      2*denom(1/2*s12)*mt^3*s12*s23*s24 - 1/2*denom(1/2*s12)*mt^3*s12*s14*s24
       + 1/2*denom(1/2*s12)*mt^3*s12*s14*s23 + 1/2*denom(1/2*s12)*mt^3*mh^2*
      s24^2 - 1/2*denom(1/2*s12)*mt^3*mh^2*s23*s24 + 1/2*denom(1/2*s12)*mt^3*
      mh^2*s14*s24 - 1/2*denom(1/2*s12)*mt^3*mh^2*s14*s23 + 2*denom(1/2*s12)*
      mt^5*s24^2 - denom(1/2*s12)*mt^5*s23*s24 - denom(1/2*s12)*mt^5*s23^2 + 2
      *denom(1/2*s12)*mt^5*s14*s24 - 2*denom(1/2*s12)*mt^5*s14*s23 + denom(1/2
      *s12)*mt^5*s13*s24 - denom(1/2*s12)*mt^5*s13*s23 + 1/2*denom(1/2*s12)*
      mt^5*s12*s24 - 1/2*denom(1/2*s12)*mt^5*s12*s23 - 1/2*denom(1/2*s12)*mt^5
      *mh^2*s24 + 1/2*denom(1/2*s12)*mt^5*mh^2*s23 - 2*denom(1/2*s12)*mt^7*s24
       + 2*denom(1/2*s12)*mt^7*s23 + 1/4*denom(1/4*s12^2)*mt*s14^2*s23*s24^2
       - 1/4*denom(1/4*s12^2)*mt*s14^2*s23^2*s24 + 1/4*denom(1/4*s12^2)*mt*s13
      *s14*s24^3 - 1/4*denom(1/4*s12^2)*mt*s13*s14*s23*s24^2 - 1/4*denom(1/4*
      s12^2)*mt^3*s14*s24^3 - 1/4*denom(1/4*s12^2)*mt^3*s14*s23*s24^2 + 1/2*
      denom(1/4*s12^2)*mt^3*s14*s23^2*s24 - 1/4*denom(1/4*s12^2)*mt^3*s14^2*
      s24^2 + 1/4*denom(1/4*s12^2)*mt^3*s14^2*s23^2 - 1/4*denom(1/4*s12^2)*
      mt^3*s13*s24^3 + 1/4*denom(1/4*s12^2)*mt^3*s13*s23*s24^2 - 1/2*denom(1/4
      *s12^2)*mt^3*s13*s14*s24^2 + 1/2*denom(1/4*s12^2)*mt^3*s13*s14*s23*s24
       + 1/4*denom(1/4*s12^2)*mt^5*s24^3 - 1/4*denom(1/4*s12^2)*mt^5*s23^2*s24
       + denom(1/4*s12^2)*mt^5*s14*s24^2 - 1/2*denom(1/4*s12^2)*mt^5*s14*s23*
      s24 - 1/2*denom(1/4*s12^2)*mt^5*s14*s23^2 + 1/4*denom(1/4*s12^2)*mt^5*
      s14^2*s24 - 1/4*denom(1/4*s12^2)*mt^5*s14^2*s23 + 1/2*denom(1/4*s12^2)*
      mt^5*s13*s24^2 - 1/2*denom(1/4*s12^2)*mt^5*s13*s23*s24 + 1/4*denom(1/4*
      s12^2)*mt^5*s13*s14*s24 - 1/4*denom(1/4*s12^2)*mt^5*s13*s14*s23 - 3/4*
      denom(1/4*s12^2)*mt^7*s24^2 + 1/2*denom(1/4*s12^2)*mt^7*s23*s24 + 1/4*
      denom(1/4*s12^2)*mt^7*s23^2 - 3/4*denom(1/4*s12^2)*mt^7*s14*s24 + 3/4*
      denom(1/4*s12^2)*mt^7*s14*s23 - 1/4*denom(1/4*s12^2)*mt^7*s13*s24 + 1/4*
      denom(1/4*s12^2)*mt^7*s13*s23 + 1/2*denom(1/4*s12^2)*mt^9*s24 - 1/2*
      denom(1/4*s12^2)*mt^9*s23;
 
 .sort
id KMatrix(4,11) =   - mt^3*s24^2 + mt^3*s23^2 - mt^3*s14*s24 + mt^3*s14*s23
       - mt^3*s13*s24 + mt^3*s13*s23 - mt^3*s12*s24 + mt^3*s12*s23 + mt^3*mh^2
      *s24 - mt^3*mh^2*s23 + 2*mt^5*s24 - 2*mt^5*s23 + 1/2*denom(1/2*s12)*mt*
      s14*s24^3 - 1/2*denom(1/2*s12)*mt*s14*s23^2*s24 + 1/2*denom(1/2*s12)*mt*
      s14^2*s24^2 - 1/2*denom(1/2*s12)*mt*s14^2*s23*s24 + 1/2*denom(1/2*s12)*
      mt*s13*s14*s24^2 - 1/2*denom(1/2*s12)*mt*s13*s14*s23*s24 + 1/2*denom(1/2
      *s12)*mt*s12*s14*s24^2 - 1/2*denom(1/2*s12)*mt*s12*s14*s23*s24 - 1/2*
      denom(1/2*s12)*mt*mh^2*s14*s24^2 + 1/2*denom(1/2*s12)*mt*mh^2*s14*s23*
      s24 - 1/2*denom(1/2*s12)*mt^3*s24^3 + 1/2*denom(1/2*s12)*mt^3*s23^2*s24
       - 2*denom(1/2*s12)*mt^3*s14*s24^2 + denom(1/2*s12)*mt^3*s14*s23*s24 + 
      denom(1/2*s12)*mt^3*s14*s23^2 - 1/2*denom(1/2*s12)*mt^3*s14^2*s24 + 1/2*
      denom(1/2*s12)*mt^3*s14^2*s23 - denom(1/2*s12)*mt^3*s13*s24^2 + denom(1/
      2*s12)*mt^3*s13*s23*s24 - 1/2*denom(1/2*s12)*mt^3*s13*s14*s24 + 1/2*
      denom(1/2*s12)*mt^3*s13*s14*s23 - 1/2*denom(1/2*s12)*mt^3*s12*s24^2 + 1/
      2*denom(1/2*s12)*mt^3*s12*s23*s24 - 1/2*denom(1/2*s12)*mt^3*s12*s14*s24
       + 1/2*denom(1/2*s12)*mt^3*s12*s14*s23 + 1/2*denom(1/2*s12)*mt^3*mh^2*
      s24^2 - 1/2*denom(1/2*s12)*mt^3*mh^2*s23*s24 + 1/2*denom(1/2*s12)*mt^3*
      mh^2*s14*s24 - 1/2*denom(1/2*s12)*mt^3*mh^2*s14*s23 + 2*denom(1/2*s12)*
      mt^5*s24^2 - denom(1/2*s12)*mt^5*s23*s24 - denom(1/2*s12)*mt^5*s23^2 + 2
      *denom(1/2*s12)*mt^5*s14*s24 - 2*denom(1/2*s12)*mt^5*s14*s23 + denom(1/2
      *s12)*mt^5*s13*s24 - denom(1/2*s12)*mt^5*s13*s23 + 1/2*denom(1/2*s12)*
      mt^5*s12*s24 - 1/2*denom(1/2*s12)*mt^5*s12*s23 - 1/2*denom(1/2*s12)*mt^5
      *mh^2*s24 + 1/2*denom(1/2*s12)*mt^5*mh^2*s23 - 2*denom(1/2*s12)*mt^7*s24
       + 2*denom(1/2*s12)*mt^7*s23 + 1/4*denom(1/4*s12^2)*mt*s14^2*s23*s24^2
       - 1/4*denom(1/4*s12^2)*mt*s14^2*s23^2*s24 + 1/4*denom(1/4*s12^2)*mt*s13
      *s14*s24^3 - 1/4*denom(1/4*s12^2)*mt*s13*s14*s23*s24^2 - 1/4*denom(1/4*
      s12^2)*mt^3*s14*s24^3 - 1/4*denom(1/4*s12^2)*mt^3*s14*s23*s24^2 + 1/2*
      denom(1/4*s12^2)*mt^3*s14*s23^2*s24 - 1/4*denom(1/4*s12^2)*mt^3*s14^2*
      s24^2 + 1/4*denom(1/4*s12^2)*mt^3*s14^2*s23^2 - 1/4*denom(1/4*s12^2)*
      mt^3*s13*s24^3 + 1/4*denom(1/4*s12^2)*mt^3*s13*s23*s24^2 - 1/2*denom(1/4
      *s12^2)*mt^3*s13*s14*s24^2 + 1/2*denom(1/4*s12^2)*mt^3*s13*s14*s23*s24
       + 1/4*denom(1/4*s12^2)*mt^5*s24^3 - 1/4*denom(1/4*s12^2)*mt^5*s23^2*s24
       + denom(1/4*s12^2)*mt^5*s14*s24^2 - 1/2*denom(1/4*s12^2)*mt^5*s14*s23*
      s24 - 1/2*denom(1/4*s12^2)*mt^5*s14*s23^2 + 1/4*denom(1/4*s12^2)*mt^5*
      s14^2*s24 - 1/4*denom(1/4*s12^2)*mt^5*s14^2*s23 + 1/2*denom(1/4*s12^2)*
      mt^5*s13*s24^2 - 1/2*denom(1/4*s12^2)*mt^5*s13*s23*s24 + 1/4*denom(1/4*
      s12^2)*mt^5*s13*s14*s24 - 1/4*denom(1/4*s12^2)*mt^5*s13*s14*s23 - 3/4*
      denom(1/4*s12^2)*mt^7*s24^2 + 1/2*denom(1/4*s12^2)*mt^7*s23*s24 + 1/4*
      denom(1/4*s12^2)*mt^7*s23^2 - 3/4*denom(1/4*s12^2)*mt^7*s14*s24 + 3/4*
      denom(1/4*s12^2)*mt^7*s14*s23 - 1/4*denom(1/4*s12^2)*mt^7*s13*s24 + 1/4*
      denom(1/4*s12^2)*mt^7*s13*s23 + 1/2*denom(1/4*s12^2)*mt^9*s24 - 1/2*
      denom(1/4*s12^2)*mt^9*s23;
 
 .sort
id KMatrix(4,12) =  2*mt^5*s24 - 2*mt^5*s23 - 2*denom(1/2*s12)*mt^3*s14*s24^2
       + 2*denom(1/2*s12)*mt^3*s14*s23*s24 + 2*denom(1/2*s12)*mt^5*s24^2 - 2*
      denom(1/2*s12)*mt^5*s23*s24 + 2*denom(1/2*s12)*mt^5*s14*s24 - 2*denom(1/
      2*s12)*mt^5*s14*s23 - 2*denom(1/2*s12)*mt^7*s24 + 2*denom(1/2*s12)*mt^7*
      s23 + 1/2*denom(1/4*s12^2)*mt*s14^2*s24^3 - 1/2*denom(1/4*s12^2)*mt*
      s14^2*s23*s24^2 - denom(1/4*s12^2)*mt^3*s14*s24^3 + denom(1/4*s12^2)*
      mt^3*s14*s23*s24^2 - denom(1/4*s12^2)*mt^3*s14^2*s24^2 + denom(1/4*s12^2
      )*mt^3*s14^2*s23*s24 + 1/2*denom(1/4*s12^2)*mt^5*s24^3 - 1/2*denom(1/4*
      s12^2)*mt^5*s23*s24^2 + 2*denom(1/4*s12^2)*mt^5*s14*s24^2 - 2*denom(1/4*
      s12^2)*mt^5*s14*s23*s24 + 1/2*denom(1/4*s12^2)*mt^5*s14^2*s24 - 1/2*
      denom(1/4*s12^2)*mt^5*s14^2*s23 - denom(1/4*s12^2)*mt^7*s24^2 + denom(1/
      4*s12^2)*mt^7*s23*s24 - denom(1/4*s12^2)*mt^7*s14*s24 + denom(1/4*s12^2)
      *mt^7*s14*s23 + 1/2*denom(1/4*s12^2)*mt^9*s24 - 1/2*denom(1/4*s12^2)*
      mt^9*s23;
 
 .sort
id KMatrix(4,13) =  1/4*s14*s23*s24^2 + 1/2*s14*s23^2*s24 + 1/4*s14*s23^3 + 1/
      2*s14^2*s23*s24 + 1/2*s14^2*s23^2 + 1/4*s14^3*s23 - 1/4*s13*s24^3 - 1/2*
      s13*s23*s24^2 - 1/4*s13*s23^2*s24 - 1/2*s13*s14*s24^2 + 1/2*s13*s14*
      s23^2 - 1/4*s13*s14^2*s24 + 1/2*s13*s14^2*s23 - 1/2*s13^2*s24^2 - 1/2*
      s13^2*s23*s24 - 1/2*s13^2*s14*s24 + 1/4*s13^2*s14*s23 - 1/4*s13^3*s24 - 
      1/4*s12*s24^3 - 3/4*s12*s23*s24^2 - 3/4*s12*s23^2*s24 - 1/4*s12*s23^3 - 
      3/4*s12*s14*s24^2 - s12*s14*s23*s24 - 1/4*s12*s14*s23^2 - 3/4*s12*s14^2*
      s24 - 1/4*s12*s14^2*s23 - 1/4*s12*s14^3 - 5/4*s12*s13*s24^2 - 2*s12*s13*
      s23*s24 - 3/4*s12*s13*s23^2 - 2*s12*s13*s14*s24 - s12*s13*s14*s23 - 3/4*
      s12*s13*s14^2 - 5/4*s12*s13^2*s24 - 3/4*s12*s13^2*s23 - 3/4*s12*s13^2*
      s14 - 1/4*s12*s13^3 - 3/4*s12^2*s24^2 - 3/2*s12^2*s23*s24 - 3/4*s12^2*
      s23^2 - 3/2*s12^2*s14*s24 - 5/4*s12^2*s14*s23 - 3/4*s12^2*s14^2 - 7/4*
      s12^2*s13*s24 - 3/2*s12^2*s13*s23 - 3/2*s12^2*s13*s14 - 3/4*s12^2*s13^2
       - 3/4*s12^3*s24 - 3/4*s12^3*s23 - 3/4*s12^3*s14 - 3/4*s12^3*s13 - 1/4*
      s12^4 - 1/2*mh^2*s14*s23*s24 - 1/2*mh^2*s14*s23^2 - 1/2*mh^2*s14^2*s23
       + 1/2*mh^2*s13*s24^2 + 1/2*mh^2*s13*s23*s24 + 1/2*mh^2*s13*s14*s24 - 1/
      2*mh^2*s13*s14*s23 + 1/2*mh^2*s13^2*s24 + 3/4*mh^2*s12*s24^2 + 3/2*mh^2*
      s12*s23*s24 + 3/4*mh^2*s12*s23^2 + 3/2*mh^2*s12*s14*s24 + mh^2*s12*s14*
      s23 + 3/4*mh^2*s12*s14^2 + 2*mh^2*s12*s13*s24 + 3/2*mh^2*s12*s13*s23 + 3/
      2*mh^2*s12*s13*s14 + 3/4*mh^2*s12*s13^2 + 3/2*mh^2*s12^2*s24 + 3/2*mh^2*
      s12^2*s23 + 3/2*mh^2*s12^2*s14 + 3/2*mh^2*s12^2*s13 + 3/4*mh^2*s12^3 + 1/
      4*mh^4*s14*s23 - 1/4*mh^4*s13*s24 - 3/4*mh^4*s12*s24 - 3/4*mh^4*s12*s23
       - 3/4*mh^4*s12*s14 - 3/4*mh^4*s12*s13 - 3/4*mh^4*s12^2 + 1/4*mh^6*s12
       + 1/4*mt^2*s24^3 + 1/4*mt^2*s23*s24^2 - 1/4*mt^2*s23^2*s24 - 1/4*mt^2*
      s23^3 + 1/4*mt^2*s14*s24^2 - 3/2*mt^2*s14*s23*s24 - 7/4*mt^2*s14*s23^2
       - 1/4*mt^2*s14^2*s24 - 7/4*mt^2*s14^2*s23 - 1/4*mt^2*s14^3 + 7/4*mt^2*
      s13*s24^2 + 3/2*mt^2*s13*s23*s24 - 1/4*mt^2*s13*s23^2 + 3/2*mt^2*s13*s14
      *s24 - 3/2*mt^2*s13*s14*s23 - 1/4*mt^2*s13*s14^2 + 7/4*mt^2*s13^2*s24 + 
      1/4*mt^2*s13^2*s23 + 1/4*mt^2*s13^2*s14 + 1/4*mt^2*s13^3 + 3/2*mt^2*s12*
      s24^2 + 2*mt^2*s12*s23*s24 + 1/2*mt^2*s12*s23^2 + 2*mt^2*s12*s14*s24 + 1/
      2*mt^2*s12*s14^2 + 4*mt^2*s12*s13*s24 + 2*mt^2*s12*s13*s23 + 2*mt^2*s12*
      s13*s14 + 3/2*mt^2*s12*s13^2 + 9/4*mt^2*s12^2*s24 + 7/4*mt^2*s12^2*s23
       + 7/4*mt^2*s12^2*s14 + 9/4*mt^2*s12^2*s13 + mt^2*s12^3 - 1/2*mt^2*mh^2*
      s24^2 + 1/2*mt^2*mh^2*s23^2 + 2*mt^2*mh^2*s14*s23 + 1/2*mt^2*mh^2*s14^2
       - 2*mt^2*mh^2*s13*s24 - 1/2*mt^2*mh^2*s13^2 - 5/2*mt^2*mh^2*s12*s24 - 3/
      2*mt^2*mh^2*s12*s23 - 3/2*mt^2*mh^2*s12*s14 - 5/2*mt^2*mh^2*s12*s13 - 2*
      mt^2*mh^2*s12^2 + 1/4*mt^2*mh^4*s24 - 1/4*mt^2*mh^4*s23 - 1/4*mt^2*mh^4*
      s14 + 1/4*mt^2*mh^4*s13 + mt^2*mh^4*s12 - mt^4*s24^2 + mt^4*s23^2 + 3*
      mt^4*s14*s23 + mt^4*s14^2 - 3*mt^4*s13*s24 - mt^4*s13^2 - 2*mt^4*s12*s24
       - 2*mt^4*s12*s13 - mt^4*s12^2 + mt^4*mh^2*s24 - mt^4*mh^2*s23 - mt^4*
      mh^2*s14 + mt^4*mh^2*s13 + mt^4*mh^2*s12 + mt^6*s24 - mt^6*s23 - mt^6*
      s14 + mt^6*s13 + 1/4*denom(1/2*s12)*s14^2*s23^2*s24 + 1/4*denom(1/2*s12)
      *s14^2*s23^3 + 1/4*denom(1/2*s12)*s14^3*s23^2 + 1/4*denom(1/2*s12)*s13*
      s14^2*s23^2 - 1/4*denom(1/2*s12)*s13^2*s24^3 - 1/4*denom(1/2*s12)*s13^2*
      s23*s24^2 - 1/4*denom(1/2*s12)*s13^2*s14*s24^2 - 1/4*denom(1/2*s12)*
      s13^3*s24^2 - 1/4*denom(1/2*s12)*s12*s14*s23*s24^2 - 1/2*denom(1/2*s12)*
      s12*s14*s23^2*s24 - 1/4*denom(1/2*s12)*s12*s14*s23^3 - 1/2*denom(1/2*s12
      )*s12*s14^2*s23*s24 - 1/4*denom(1/2*s12)*s12*s14^2*s23^2 - 1/4*denom(1/2
      *s12)*s12*s14^3*s23 - 1/4*denom(1/2*s12)*s12*s13*s24^3 - 1/2*denom(1/2*
      s12)*s12*s13*s23*s24^2 - 1/4*denom(1/2*s12)*s12*s13*s23^2*s24 - 1/2*
      denom(1/2*s12)*s12*s13*s14*s24^2 - denom(1/2*s12)*s12*s13*s14*s23*s24 - 
      1/2*denom(1/2*s12)*s12*s13*s14*s23^2 - 1/4*denom(1/2*s12)*s12*s13*s14^2*
      s24 - 1/2*denom(1/2*s12)*s12*s13*s14^2*s23 - 3/4*denom(1/2*s12)*s12*
      s13^2*s24^2 - 1/2*denom(1/2*s12)*s12*s13^2*s23*s24 - 1/2*denom(1/2*s12)*
      s12*s13^2*s14*s24 - 1/4*denom(1/2*s12)*s12*s13^2*s14*s23 - 1/4*denom(1/2
      *s12)*s12*s13^3*s24 - 1/2*denom(1/2*s12)*s12^2*s14*s23*s24 - 1/2*denom(1/
      2*s12)*s12^2*s14*s23^2 - 1/2*denom(1/2*s12)*s12^2*s14^2*s23 - 1/2*denom(
      1/2*s12)*s12^2*s13*s24^2 - 1/2*denom(1/2*s12)*s12^2*s13*s23*s24 - 1/2*
      denom(1/2*s12)*s12^2*s13*s14*s24 - 1/2*denom(1/2*s12)*s12^2*s13*s14*s23
       - 1/2*denom(1/2*s12)*s12^2*s13^2*s24 - 1/4*denom(1/2*s12)*s12^3*s14*s23
       - 1/4*denom(1/2*s12)*s12^3*s13*s24 - 1/4*denom(1/2*s12)*mh^2*s14^2*
      s23^2 + 1/4*denom(1/2*s12)*mh^2*s13^2*s24^2 + 1/2*denom(1/2*s12)*mh^2*
      s12*s14*s23*s24 + 1/2*denom(1/2*s12)*mh^2*s12*s14*s23^2 + 1/2*denom(1/2*
      s12)*mh^2*s12*s14^2*s23 + 1/2*denom(1/2*s12)*mh^2*s12*s13*s24^2 + 1/2*
      denom(1/2*s12)*mh^2*s12*s13*s23*s24 + 1/2*denom(1/2*s12)*mh^2*s12*s13*
      s14*s24 + 1/2*denom(1/2*s12)*mh^2*s12*s13*s14*s23 + 1/2*denom(1/2*s12)*
      mh^2*s12*s13^2*s24 + 1/2*denom(1/2*s12)*mh^2*s12^2*s14*s23 + 1/2*denom(1/
      2*s12)*mh^2*s12^2*s13*s24 - 1/4*denom(1/2*s12)*mh^4*s12*s14*s23 - 1/4*
      denom(1/2*s12)*mh^4*s12*s13*s24 - 1/2*denom(1/2*s12)*mt^2*s14*s23^2*s24
       - 1/2*denom(1/2*s12)*mt^2*s14*s23^3 - 1/2*denom(1/2*s12)*mt^2*s14^2*s23
      *s24 - 3/2*denom(1/2*s12)*mt^2*s14^2*s23^2 - 1/2*denom(1/2*s12)*mt^2*
      s14^3*s23 + 1/2*denom(1/2*s12)*mt^2*s13*s24^3 + 1/2*denom(1/2*s12)*mt^2*
      s13*s23*s24^2 + 1/2*denom(1/2*s12)*mt^2*s13*s14*s24^2 - 1/2*denom(1/2*
      s12)*mt^2*s13*s14*s23^2 - 1/2*denom(1/2*s12)*mt^2*s13*s14^2*s23 + 3/2*
      denom(1/2*s12)*mt^2*s13^2*s24^2 + 1/2*denom(1/2*s12)*mt^2*s13^2*s23*s24
       + 1/2*denom(1/2*s12)*mt^2*s13^2*s14*s24 + 1/2*denom(1/2*s12)*mt^2*s13^3
      *s24 + 1/4*denom(1/2*s12)*mt^2*s12*s24^3 + 3/4*denom(1/2*s12)*mt^2*s12*
      s23*s24^2 + 3/4*denom(1/2*s12)*mt^2*s12*s23^2*s24 + 1/4*denom(1/2*s12)*
      mt^2*s12*s23^3 + 3/4*denom(1/2*s12)*mt^2*s12*s14*s24^2 + 2*denom(1/2*s12
      )*mt^2*s12*s14*s23*s24 + 3/4*denom(1/2*s12)*mt^2*s12*s14*s23^2 + 3/4*
      denom(1/2*s12)*mt^2*s12*s14^2*s24 + 3/4*denom(1/2*s12)*mt^2*s12*s14^2*
      s23 + 1/4*denom(1/2*s12)*mt^2*s12*s14^3 + 7/4*denom(1/2*s12)*mt^2*s12*
      s13*s24^2 + 2*denom(1/2*s12)*mt^2*s12*s13*s23*s24 + 3/4*denom(1/2*s12)*
      mt^2*s12*s13*s23^2 + 2*denom(1/2*s12)*mt^2*s12*s13*s14*s24 + 2*denom(1/2
      *s12)*mt^2*s12*s13*s14*s23 + 3/4*denom(1/2*s12)*mt^2*s12*s13*s14^2 + 7/4
      *denom(1/2*s12)*mt^2*s12*s13^2*s24 + 3/4*denom(1/2*s12)*mt^2*s12*s13^2*
      s23 + 3/4*denom(1/2*s12)*mt^2*s12*s13^2*s14 + 1/4*denom(1/2*s12)*mt^2*
      s12*s13^3 + 1/2*denom(1/2*s12)*mt^2*s12^2*s24^2 + denom(1/2*s12)*mt^2*
      s12^2*s23*s24 + 1/2*denom(1/2*s12)*mt^2*s12^2*s23^2 + denom(1/2*s12)*
      mt^2*s12^2*s14*s24 + 3/2*denom(1/2*s12)*mt^2*s12^2*s14*s23 + 1/2*denom(1/
      2*s12)*mt^2*s12^2*s14^2 + 3/2*denom(1/2*s12)*mt^2*s12^2*s13*s24 + denom(
      1/2*s12)*mt^2*s12^2*s13*s23 + denom(1/2*s12)*mt^2*s12^2*s13*s14 + 1/2*
      denom(1/2*s12)*mt^2*s12^2*s13^2 + 1/4*denom(1/2*s12)*mt^2*s12^3*s24 + 1/
      4*denom(1/2*s12)*mt^2*s12^3*s23 + 1/4*denom(1/2*s12)*mt^2*s12^3*s14 + 1/
      4*denom(1/2*s12)*mt^2*s12^3*s13 + 1/2*denom(1/2*s12)*mt^2*mh^2*s14*s23^2
       + 1/2*denom(1/2*s12)*mt^2*mh^2*s14^2*s23 - 1/2*denom(1/2*s12)*mt^2*mh^2
      *s13*s24^2 - 1/2*denom(1/2*s12)*mt^2*mh^2*s13^2*s24 - 1/2*denom(1/2*s12)
      *mt^2*mh^2*s12*s24^2 - denom(1/2*s12)*mt^2*mh^2*s12*s23*s24 - 1/2*denom(
      1/2*s12)*mt^2*mh^2*s12*s23^2 - denom(1/2*s12)*mt^2*mh^2*s12*s14*s24 - 3/
      2*denom(1/2*s12)*mt^2*mh^2*s12*s14*s23 - 1/2*denom(1/2*s12)*mt^2*mh^2*
      s12*s14^2 - 3/2*denom(1/2*s12)*mt^2*mh^2*s12*s13*s24 - denom(1/2*s12)*
      mt^2*mh^2*s12*s13*s23 - denom(1/2*s12)*mt^2*mh^2*s12*s13*s14 - 1/2*
      denom(1/2*s12)*mt^2*mh^2*s12*s13^2 - 1/2*denom(1/2*s12)*mt^2*mh^2*s12^2*
      s24 - 1/2*denom(1/2*s12)*mt^2*mh^2*s12^2*s23 - 1/2*denom(1/2*s12)*mt^2*
      mh^2*s12^2*s14 - 1/2*denom(1/2*s12)*mt^2*mh^2*s12^2*s13 + 1/4*denom(1/2*
      s12)*mt^2*mh^4*s12*s24 + 1/4*denom(1/2*s12)*mt^2*mh^4*s12*s23 + 1/4*
      denom(1/2*s12)*mt^2*mh^4*s12*s14 + 1/4*denom(1/2*s12)*mt^2*mh^4*s12*s13
       - 1/4*denom(1/2*s12)*mt^4*s24^3 - 1/4*denom(1/2*s12)*mt^4*s23*s24^2 + 1/
      4*denom(1/2*s12)*mt^4*s23^2*s24 + 1/4*denom(1/2*s12)*mt^4*s23^3 - 1/4*
      denom(1/2*s12)*mt^4*s14*s24^2 + denom(1/2*s12)*mt^4*s14*s23*s24 + 9/4*
      denom(1/2*s12)*mt^4*s14*s23^2 + 1/4*denom(1/2*s12)*mt^4*s14^2*s24 + 9/4*
      denom(1/2*s12)*mt^4*s14^2*s23 + 1/4*denom(1/2*s12)*mt^4*s14^3 - 9/4*
      denom(1/2*s12)*mt^4*s13*s24^2 - denom(1/2*s12)*mt^4*s13*s23*s24 + 1/4*
      denom(1/2*s12)*mt^4*s13*s23^2 - denom(1/2*s12)*mt^4*s13*s14*s24 + denom(
      1/2*s12)*mt^4*s13*s14*s23 + 1/4*denom(1/2*s12)*mt^4*s13*s14^2 - 9/4*
      denom(1/2*s12)*mt^4*s13^2*s24 - 1/4*denom(1/2*s12)*mt^4*s13^2*s23 - 1/4*
      denom(1/2*s12)*mt^4*s13^2*s14 - 1/4*denom(1/2*s12)*mt^4*s13^3 - 5/4*
      denom(1/2*s12)*mt^4*s12*s24^2 - 2*denom(1/2*s12)*mt^4*s12*s23*s24 - 3/4*
      denom(1/2*s12)*mt^4*s12*s23^2 - 2*denom(1/2*s12)*mt^4*s12*s14*s24 - 
      denom(1/2*s12)*mt^4*s12*s14*s23 - 3/4*denom(1/2*s12)*mt^4*s12*s14^2 - 3*
      denom(1/2*s12)*mt^4*s12*s13*s24 - 2*denom(1/2*s12)*mt^4*s12*s13*s23 - 2*
      denom(1/2*s12)*mt^4*s12*s13*s14 - 5/4*denom(1/2*s12)*mt^4*s12*s13^2 - 3/
      2*denom(1/2*s12)*mt^4*s12^2*s24 - 3/2*denom(1/2*s12)*mt^4*s12^2*s23 - 3/
      2*denom(1/2*s12)*mt^4*s12^2*s14 - 3/2*denom(1/2*s12)*mt^4*s12^2*s13 - 1/
      2*denom(1/2*s12)*mt^4*s12^3 + 1/4*denom(1/2*s12)*mt^4*mh^2*s24^2 - 1/4*
      denom(1/2*s12)*mt^4*mh^2*s23^2 - denom(1/2*s12)*mt^4*mh^2*s14*s23 - 1/4*
      denom(1/2*s12)*mt^4*mh^2*s14^2 + denom(1/2*s12)*mt^4*mh^2*s13*s24 + 1/4*
      denom(1/2*s12)*mt^4*mh^2*s13^2 + 3/2*denom(1/2*s12)*mt^4*mh^2*s12*s24 + 
      3/2*denom(1/2*s12)*mt^4*mh^2*s12*s23 + 3/2*denom(1/2*s12)*mt^4*mh^2*s12*
      s14 + 3/2*denom(1/2*s12)*mt^4*mh^2*s12*s13 + denom(1/2*s12)*mt^4*mh^2*
      s12^2 - 1/2*denom(1/2*s12)*mt^4*mh^4*s12 + denom(1/2*s12)*mt^6*s24^2 - 
      denom(1/2*s12)*mt^6*s23^2 - 3*denom(1/2*s12)*mt^6*s14*s23 - denom(1/2*
      s12)*mt^6*s14^2 + 3*denom(1/2*s12)*mt^6*s13*s24 + denom(1/2*s12)*mt^6*
      s13^2 + 3/2*denom(1/2*s12)*mt^6*s12*s24 + 1/2*denom(1/2*s12)*mt^6*s12*
      s23 + 1/2*denom(1/2*s12)*mt^6*s12*s14 + 3/2*denom(1/2*s12)*mt^6*s12*s13
       + denom(1/2*s12)*mt^6*s12^2 - 1/2*denom(1/2*s12)*mt^6*mh^2*s24 + 1/2*
      denom(1/2*s12)*mt^6*mh^2*s23 + 1/2*denom(1/2*s12)*mt^6*mh^2*s14 - 1/2*
      denom(1/2*s12)*mt^6*mh^2*s13 - denom(1/2*s12)*mt^6*mh^2*s12 - denom(1/2*
      s12)*mt^8*s24 + denom(1/2*s12)*mt^8*s23 + denom(1/2*s12)*mt^8*s14 - 
      denom(1/2*s12)*mt^8*s13 + 1/16*denom(1/4*s12^2)*s14^3*s23^3 + 1/16*
      denom(1/4*s12^2)*s13*s14^2*s23^2*s24 - 1/16*denom(1/4*s12^2)*s13^2*s14*
      s23*s24^2 - 1/16*denom(1/4*s12^2)*s13^3*s24^3 - 1/16*denom(1/4*s12^2)*
      s12*s14^2*s23^2*s24 - 1/16*denom(1/4*s12^2)*s12*s14^2*s23^3 - 1/16*
      denom(1/4*s12^2)*s12*s14^3*s23^2 - 1/8*denom(1/4*s12^2)*s12*s13*s14*s23*
      s24^2 - 1/8*denom(1/4*s12^2)*s12*s13*s14*s23^2*s24 - 1/8*denom(1/4*s12^2
      )*s12*s13*s14^2*s23*s24 - 1/16*denom(1/4*s12^2)*s12*s13*s14^2*s23^2 - 1/
      16*denom(1/4*s12^2)*s12*s13^2*s24^3 - 1/16*denom(1/4*s12^2)*s12*s13^2*
      s23*s24^2 - 1/16*denom(1/4*s12^2)*s12*s13^2*s14*s24^2 - 1/8*denom(1/4*
      s12^2)*s12*s13^2*s14*s23*s24 - 1/16*denom(1/4*s12^2)*s12*s13^3*s24^2 - 1/
      16*denom(1/4*s12^2)*s12^2*s14^2*s23^2 - 1/8*denom(1/4*s12^2)*s12^2*s13*
      s14*s23*s24 - 1/16*denom(1/4*s12^2)*s12^2*s13^2*s24^2 + 1/16*denom(1/4*
      s12^2)*mh^2*s12*s14^2*s23^2 + 1/8*denom(1/4*s12^2)*mh^2*s12*s13*s14*s23*
      s24 + 1/16*denom(1/4*s12^2)*mh^2*s12*s13^2*s24^2 - 1/16*denom(1/4*s12^2)
      *mt^2*s14^2*s23^2*s24 - 3/16*denom(1/4*s12^2)*mt^2*s14^2*s23^3 - 3/16*
      denom(1/4*s12^2)*mt^2*s14^3*s23^2 + 1/8*denom(1/4*s12^2)*mt^2*s13*s14*
      s23*s24^2 - 1/8*denom(1/4*s12^2)*mt^2*s13*s14*s23^2*s24 - 1/8*denom(1/4*
      s12^2)*mt^2*s13*s14^2*s23*s24 - 1/16*denom(1/4*s12^2)*mt^2*s13*s14^2*
      s23^2 + 3/16*denom(1/4*s12^2)*mt^2*s13^2*s24^3 + 1/16*denom(1/4*s12^2)*
      mt^2*s13^2*s23*s24^2 + 1/16*denom(1/4*s12^2)*mt^2*s13^2*s14*s24^2 + 1/8*
      denom(1/4*s12^2)*mt^2*s13^2*s14*s23*s24 + 3/16*denom(1/4*s12^2)*mt^2*
      s13^3*s24^2 + 1/8*denom(1/4*s12^2)*mt^2*s12*s14*s23*s24^2 + 1/4*denom(1/
      4*s12^2)*mt^2*s12*s14*s23^2*s24 + 1/8*denom(1/4*s12^2)*mt^2*s12*s14*
      s23^3 + 1/4*denom(1/4*s12^2)*mt^2*s12*s14^2*s23*s24 + 1/4*denom(1/4*
      s12^2)*mt^2*s12*s14^2*s23^2 + 1/8*denom(1/4*s12^2)*mt^2*s12*s14^3*s23 + 
      1/8*denom(1/4*s12^2)*mt^2*s12*s13*s24^3 + 1/4*denom(1/4*s12^2)*mt^2*s12*
      s13*s23*s24^2 + 1/8*denom(1/4*s12^2)*mt^2*s12*s13*s23^2*s24 + 1/4*denom(
      1/4*s12^2)*mt^2*s12*s13*s14*s24^2 + 1/2*denom(1/4*s12^2)*mt^2*s12*s13*
      s14*s23*s24 + 1/4*denom(1/4*s12^2)*mt^2*s12*s13*s14*s23^2 + 1/8*denom(1/
      4*s12^2)*mt^2*s12*s13*s14^2*s24 + 1/4*denom(1/4*s12^2)*mt^2*s12*s13*
      s14^2*s23 + 1/4*denom(1/4*s12^2)*mt^2*s12*s13^2*s24^2 + 1/4*denom(1/4*
      s12^2)*mt^2*s12*s13^2*s23*s24 + 1/4*denom(1/4*s12^2)*mt^2*s12*s13^2*s14*
      s24 + 1/8*denom(1/4*s12^2)*mt^2*s12*s13^2*s14*s23 + 1/8*denom(1/4*s12^2)
      *mt^2*s12*s13^3*s24 + 1/8*denom(1/4*s12^2)*mt^2*s12^2*s14*s23*s24 + 1/8*
      denom(1/4*s12^2)*mt^2*s12^2*s14*s23^2 + 1/8*denom(1/4*s12^2)*mt^2*s12^2*
      s14^2*s23 + 1/8*denom(1/4*s12^2)*mt^2*s12^2*s13*s24^2 + 1/8*denom(1/4*
      s12^2)*mt^2*s12^2*s13*s23*s24 + 1/8*denom(1/4*s12^2)*mt^2*s12^2*s13*s14*
      s24 + 1/8*denom(1/4*s12^2)*mt^2*s12^2*s13*s14*s23 + 1/8*denom(1/4*s12^2)
      *mt^2*s12^2*s13^2*s24 - 1/8*denom(1/4*s12^2)*mt^2*mh^2*s12*s14*s23*s24
       - 1/8*denom(1/4*s12^2)*mt^2*mh^2*s12*s14*s23^2 - 1/8*denom(1/4*s12^2)*
      mt^2*mh^2*s12*s14^2*s23 - 1/8*denom(1/4*s12^2)*mt^2*mh^2*s12*s13*s24^2
       - 1/8*denom(1/4*s12^2)*mt^2*mh^2*s12*s13*s23*s24 - 1/8*denom(1/4*s12^2)
      *mt^2*mh^2*s12*s13*s14*s24 - 1/8*denom(1/4*s12^2)*mt^2*mh^2*s12*s13*s14*
      s23 - 1/8*denom(1/4*s12^2)*mt^2*mh^2*s12*s13^2*s24 - 1/16*denom(1/4*
      s12^2)*mt^4*s14*s23*s24^2 + 1/8*denom(1/4*s12^2)*mt^4*s14*s23^2*s24 + 3/
      16*denom(1/4*s12^2)*mt^4*s14*s23^3 + 1/8*denom(1/4*s12^2)*mt^4*s14^2*s23
      *s24 + 5/8*denom(1/4*s12^2)*mt^4*s14^2*s23^2 + 3/16*denom(1/4*s12^2)*
      mt^4*s14^3*s23 - 3/16*denom(1/4*s12^2)*mt^4*s13*s24^3 - 1/8*denom(1/4*
      s12^2)*mt^4*s13*s23*s24^2 + 1/16*denom(1/4*s12^2)*mt^4*s13*s23^2*s24 - 1/
      8*denom(1/4*s12^2)*mt^4*s13*s14*s24^2 + 1/8*denom(1/4*s12^2)*mt^4*s13*
      s14*s23^2 + 1/16*denom(1/4*s12^2)*mt^4*s13*s14^2*s24 + 1/8*denom(1/4*
      s12^2)*mt^4*s13*s14^2*s23 - 5/8*denom(1/4*s12^2)*mt^4*s13^2*s24^2 - 1/8*
      denom(1/4*s12^2)*mt^4*s13^2*s23*s24 - 1/8*denom(1/4*s12^2)*mt^4*s13^2*
      s14*s24 - 1/16*denom(1/4*s12^2)*mt^4*s13^2*s14*s23 - 3/16*denom(1/4*
      s12^2)*mt^4*s13^3*s24 - 1/16*denom(1/4*s12^2)*mt^4*s12*s24^3 - 3/16*
      denom(1/4*s12^2)*mt^4*s12*s23*s24^2 - 3/16*denom(1/4*s12^2)*mt^4*s12*
      s23^2*s24 - 1/16*denom(1/4*s12^2)*mt^4*s12*s23^3 - 3/16*denom(1/4*s12^2)
      *mt^4*s12*s14*s24^2 - 5/8*denom(1/4*s12^2)*mt^4*s12*s14*s23*s24 - 7/16*
      denom(1/4*s12^2)*mt^4*s12*s14*s23^2 - 3/16*denom(1/4*s12^2)*mt^4*s12*
      s14^2*s24 - 7/16*denom(1/4*s12^2)*mt^4*s12*s14^2*s23 - 1/16*denom(1/4*
      s12^2)*mt^4*s12*s14^3 - 7/16*denom(1/4*s12^2)*mt^4*s12*s13*s24^2 - 5/8*
      denom(1/4*s12^2)*mt^4*s12*s13*s23*s24 - 3/16*denom(1/4*s12^2)*mt^4*s12*
      s13*s23^2 - 5/8*denom(1/4*s12^2)*mt^4*s12*s13*s14*s24 - 5/8*denom(1/4*
      s12^2)*mt^4*s12*s13*s14*s23 - 3/16*denom(1/4*s12^2)*mt^4*s12*s13*s14^2
       - 7/16*denom(1/4*s12^2)*mt^4*s12*s13^2*s24 - 3/16*denom(1/4*s12^2)*mt^4
      *s12*s13^2*s23 - 3/16*denom(1/4*s12^2)*mt^4*s12*s13^2*s14 - 1/16*denom(1/
      4*s12^2)*mt^4*s12*s13^3 - 1/16*denom(1/4*s12^2)*mt^4*s12^2*s24^2 - 1/8*
      denom(1/4*s12^2)*mt^4*s12^2*s23*s24 - 1/16*denom(1/4*s12^2)*mt^4*s12^2*
      s23^2 - 1/8*denom(1/4*s12^2)*mt^4*s12^2*s14*s24 - 3/8*denom(1/4*s12^2)*
      mt^4*s12^2*s14*s23 - 1/16*denom(1/4*s12^2)*mt^4*s12^2*s14^2 - 3/8*denom(
      1/4*s12^2)*mt^4*s12^2*s13*s24 - 1/8*denom(1/4*s12^2)*mt^4*s12^2*s13*s23
       - 1/8*denom(1/4*s12^2)*mt^4*s12^2*s13*s14 - 1/16*denom(1/4*s12^2)*mt^4*
      s12^2*s13^2 + 1/16*denom(1/4*s12^2)*mt^4*mh^2*s12*s24^2 + 1/8*denom(1/4*
      s12^2)*mt^4*mh^2*s12*s23*s24 + 1/16*denom(1/4*s12^2)*mt^4*mh^2*s12*s23^2
       + 1/8*denom(1/4*s12^2)*mt^4*mh^2*s12*s14*s24 + 3/8*denom(1/4*s12^2)*
      mt^4*mh^2*s12*s14*s23 + 1/16*denom(1/4*s12^2)*mt^4*mh^2*s12*s14^2 + 3/8*
      denom(1/4*s12^2)*mt^4*mh^2*s12*s13*s24 + 1/8*denom(1/4*s12^2)*mt^4*mh^2*
      s12*s13*s23 + 1/8*denom(1/4*s12^2)*mt^4*mh^2*s12*s13*s14 + 1/16*denom(1/
      4*s12^2)*mt^4*mh^2*s12*s13^2 + 1/16*denom(1/4*s12^2)*mt^6*s24^3 + 1/16*
      denom(1/4*s12^2)*mt^6*s23*s24^2 - 1/16*denom(1/4*s12^2)*mt^6*s23^2*s24
       - 1/16*denom(1/4*s12^2)*mt^6*s23^3 + 1/16*denom(1/4*s12^2)*mt^6*s14*
      s24^2 - 1/8*denom(1/4*s12^2)*mt^6*s14*s23*s24 - 11/16*denom(1/4*s12^2)*
      mt^6*s14*s23^2 - 1/16*denom(1/4*s12^2)*mt^6*s14^2*s24 - 11/16*denom(1/4*
      s12^2)*mt^6*s14^2*s23 - 1/16*denom(1/4*s12^2)*mt^6*s14^3 + 11/16*denom(1/
      4*s12^2)*mt^6*s13*s24^2 + 1/8*denom(1/4*s12^2)*mt^6*s13*s23*s24 - 1/16*
      denom(1/4*s12^2)*mt^6*s13*s23^2 + 1/8*denom(1/4*s12^2)*mt^6*s13*s14*s24
       - 1/8*denom(1/4*s12^2)*mt^6*s13*s14*s23 - 1/16*denom(1/4*s12^2)*mt^6*
      s13*s14^2 + 11/16*denom(1/4*s12^2)*mt^6*s13^2*s24 + 1/16*denom(1/4*s12^2
      )*mt^6*s13^2*s23 + 1/16*denom(1/4*s12^2)*mt^6*s13^2*s14 + 1/16*denom(1/4
      *s12^2)*mt^6*s13^3 + 1/4*denom(1/4*s12^2)*mt^6*s12*s24^2 + 1/2*denom(1/4
      *s12^2)*mt^6*s12*s23*s24 + 1/4*denom(1/4*s12^2)*mt^6*s12*s23^2 + 1/2*
      denom(1/4*s12^2)*mt^6*s12*s14*s24 + 1/2*denom(1/4*s12^2)*mt^6*s12*s14*
      s23 + 1/4*denom(1/4*s12^2)*mt^6*s12*s14^2 + 1/2*denom(1/4*s12^2)*mt^6*
      s12*s13*s24 + 1/2*denom(1/4*s12^2)*mt^6*s12*s13*s23 + 1/2*denom(1/4*
      s12^2)*mt^6*s12*s13*s14 + 1/4*denom(1/4*s12^2)*mt^6*s12*s13^2 + 1/4*
      denom(1/4*s12^2)*mt^6*s12^2*s24 + 1/4*denom(1/4*s12^2)*mt^6*s12^2*s23 + 
      1/4*denom(1/4*s12^2)*mt^6*s12^2*s14 + 1/4*denom(1/4*s12^2)*mt^6*s12^2*
      s13 - 1/4*denom(1/4*s12^2)*mt^6*mh^2*s12*s24 - 1/4*denom(1/4*s12^2)*mt^6
      *mh^2*s12*s23 - 1/4*denom(1/4*s12^2)*mt^6*mh^2*s12*s14 - 1/4*denom(1/4*
      s12^2)*mt^6*mh^2*s12*s13 - 1/4*denom(1/4*s12^2)*mt^8*s24^2 + 1/4*denom(1/
      4*s12^2)*mt^8*s23^2 + 3/4*denom(1/4*s12^2)*mt^8*s14*s23 + 1/4*denom(1/4*
      s12^2)*mt^8*s14^2 - 3/4*denom(1/4*s12^2)*mt^8*s13*s24 - 1/4*denom(1/4*
      s12^2)*mt^8*s13^2 - 1/4*denom(1/4*s12^2)*mt^8*s12*s24 - 1/4*denom(1/4*
      s12^2)*mt^8*s12*s23 - 1/4*denom(1/4*s12^2)*mt^8*s12*s14 - 1/4*denom(1/4*
      s12^2)*mt^8*s12*s13 - 1/4*denom(1/4*s12^2)*mt^8*s12^2 + 1/4*denom(1/4*
      s12^2)*mt^8*mh^2*s12 + 1/4*denom(1/4*s12^2)*mt^10*s24 - 1/4*denom(1/4*
      s12^2)*mt^10*s23 - 1/4*denom(1/4*s12^2)*mt^10*s14 + 1/4*denom(1/4*s12^2)
      *mt^10*s13;
 
 .sort
id KMatrix(4,14) =   - 1/2*mt^2*s14*s23*s24 - 1/2*mt^2*s14*s23^2 - 1/2*mt^2*
      s14^2*s23 + 1/2*mt^2*s13*s24^2 + 1/2*mt^2*s13*s23*s24 + 1/2*mt^2*s13*s14
      *s24 - 1/2*mt^2*s13*s14*s23 + 1/2*mt^2*s13^2*s24 + 1/2*mt^2*s12*s24^2 + 
      mt^2*s12*s23*s24 + 1/2*mt^2*s12*s23^2 + mt^2*s12*s14*s24 + 1/2*mt^2*s12*
      s14*s23 + 1/2*mt^2*s12*s14^2 + 3/2*mt^2*s12*s13*s24 + mt^2*s12*s13*s23
       + mt^2*s12*s13*s14 + 1/2*mt^2*s12*s13^2 + mt^2*s12^2*s24 + mt^2*s12^2*
      s23 + mt^2*s12^2*s14 + mt^2*s12^2*s13 + 1/2*mt^2*s12^3 + 1/2*mt^2*mh^2*
      s14*s23 - 1/2*mt^2*mh^2*s13*s24 - mt^2*mh^2*s12*s24 - mt^2*mh^2*s12*s23
       - mt^2*mh^2*s12*s14 - mt^2*mh^2*s12*s13 - mt^2*mh^2*s12^2 + 1/2*mt^2*
      mh^4*s12 - 1/2*mt^4*s24^2 + 1/2*mt^4*s23^2 + 2*mt^4*s14*s23 + 1/2*mt^4*
      s14^2 - 2*mt^4*s13*s24 - 1/2*mt^4*s13^2 - 3/2*mt^4*s12*s24 - 1/2*mt^4*
      s12*s23 - 1/2*mt^4*s12*s14 - 3/2*mt^4*s12*s13 - mt^4*s12^2 + 1/2*mt^4*
      mh^2*s24 - 1/2*mt^4*mh^2*s23 - 1/2*mt^4*mh^2*s14 + 1/2*mt^4*mh^2*s13 + 
      mt^4*mh^2*s12 + mt^6*s24 - mt^6*s23 - mt^6*s14 + mt^6*s13 + 1/4*denom(1/
      2*s12)*s14^2*s23*s24^2 + 1/4*denom(1/2*s12)*s14^2*s23^2*s24 + 1/4*denom(
      1/2*s12)*s14^3*s23*s24 - 1/4*denom(1/2*s12)*s13*s14*s24^3 - 1/4*denom(1/
      2*s12)*s13*s14*s23*s24^2 - 1/4*denom(1/2*s12)*s13*s14^2*s24^2 + 1/4*
      denom(1/2*s12)*s13*s14^2*s23*s24 - 1/4*denom(1/2*s12)*s13^2*s14*s24^2 - 
      1/4*denom(1/2*s12)*s12*s14*s24^3 - 1/2*denom(1/2*s12)*s12*s14*s23*s24^2
       - 1/4*denom(1/2*s12)*s12*s14*s23^2*s24 - 1/2*denom(1/2*s12)*s12*s14^2*
      s24^2 - 1/4*denom(1/2*s12)*s12*s14^2*s23*s24 - 1/4*denom(1/2*s12)*s12*
      s14^3*s24 - 3/4*denom(1/2*s12)*s12*s13*s14*s24^2 - 1/2*denom(1/2*s12)*
      s12*s13*s14*s23*s24 - 1/2*denom(1/2*s12)*s12*s13*s14^2*s24 - 1/4*denom(1/
      2*s12)*s12*s13^2*s14*s24 - 1/2*denom(1/2*s12)*s12^2*s14*s24^2 - 1/2*
      denom(1/2*s12)*s12^2*s14*s23*s24 - 1/2*denom(1/2*s12)*s12^2*s14^2*s24 - 
      1/2*denom(1/2*s12)*s12^2*s13*s14*s24 - 1/4*denom(1/2*s12)*s12^3*s14*s24
       - 1/4*denom(1/2*s12)*mh^2*s14^2*s23*s24 + 1/4*denom(1/2*s12)*mh^2*s13*
      s14*s24^2 + 1/2*denom(1/2*s12)*mh^2*s12*s14*s24^2 + 1/2*denom(1/2*s12)*
      mh^2*s12*s14*s23*s24 + 1/2*denom(1/2*s12)*mh^2*s12*s14^2*s24 + 1/2*
      denom(1/2*s12)*mh^2*s12*s13*s14*s24 + 1/2*denom(1/2*s12)*mh^2*s12^2*s14*
      s24 - 1/4*denom(1/2*s12)*mh^4*s12*s14*s24 + 1/4*denom(1/2*s12)*mt^2*s14*
      s24^3 - 1/4*denom(1/2*s12)*mt^2*s14*s23*s24^2 - 1/2*denom(1/2*s12)*mt^2*
      s14*s23^2*s24 - 3/2*denom(1/2*s12)*mt^2*s14^2*s23*s24 - 1/2*denom(1/2*
      s12)*mt^2*s14^2*s23^2 - 1/4*denom(1/2*s12)*mt^2*s14^3*s24 - 1/4*denom(1/
      2*s12)*mt^2*s14^3*s23 + 1/4*denom(1/2*s12)*mt^2*s13*s24^3 + 1/4*denom(1/
      2*s12)*mt^2*s13*s23*s24^2 + 3/2*denom(1/2*s12)*mt^2*s13*s14*s24^2 + 1/4*
      denom(1/2*s12)*mt^2*s13*s14^2*s24 - 1/4*denom(1/2*s12)*mt^2*s13*s14^2*
      s23 + 1/2*denom(1/2*s12)*mt^2*s13^2*s24^2 + 1/2*denom(1/2*s12)*mt^2*
      s13^2*s14*s24 + 1/4*denom(1/2*s12)*mt^2*s12*s24^3 + 1/2*denom(1/2*s12)*
      mt^2*s12*s23*s24^2 + 1/4*denom(1/2*s12)*mt^2*s12*s23^2*s24 + 3/2*denom(1/
      2*s12)*mt^2*s12*s14*s24^2 + 5/4*denom(1/2*s12)*mt^2*s12*s14*s23*s24 + 1/
      2*denom(1/2*s12)*mt^2*s12*s14*s23^2 + denom(1/2*s12)*mt^2*s12*s14^2*s24
       + 1/2*denom(1/2*s12)*mt^2*s12*s14^2*s23 + 1/4*denom(1/2*s12)*mt^2*s12*
      s14^3 + denom(1/2*s12)*mt^2*s12*s13*s24^2 + 3/4*denom(1/2*s12)*mt^2*s12*
      s13*s23*s24 + 9/4*denom(1/2*s12)*mt^2*s12*s13*s14*s24 + 3/4*denom(1/2*
      s12)*mt^2*s12*s13*s14*s23 + 1/2*denom(1/2*s12)*mt^2*s12*s13*s14^2 + 1/2*
      denom(1/2*s12)*mt^2*s12*s13^2*s24 + 1/4*denom(1/2*s12)*mt^2*s12*s13^2*
      s14 + 1/2*denom(1/2*s12)*mt^2*s12^2*s24^2 + 1/2*denom(1/2*s12)*mt^2*
      s12^2*s23*s24 + 3/2*denom(1/2*s12)*mt^2*s12^2*s14*s24 + 3/4*denom(1/2*
      s12)*mt^2*s12^2*s14*s23 + 1/2*denom(1/2*s12)*mt^2*s12^2*s14^2 + 3/4*
      denom(1/2*s12)*mt^2*s12^2*s13*s24 + 1/2*denom(1/2*s12)*mt^2*s12^2*s13*
      s14 + 1/4*denom(1/2*s12)*mt^2*s12^3*s24 + 1/4*denom(1/2*s12)*mt^2*s12^3*
      s14 - 1/4*denom(1/2*s12)*mt^2*mh^2*s14*s24^2 + 1/2*denom(1/2*s12)*mt^2*
      mh^2*s14*s23*s24 + 1/4*denom(1/2*s12)*mt^2*mh^2*s14^2*s24 + 1/4*denom(1/
      2*s12)*mt^2*mh^2*s14^2*s23 - 1/4*denom(1/2*s12)*mt^2*mh^2*s13*s24^2 - 1/
      2*denom(1/2*s12)*mt^2*mh^2*s13*s14*s24 - 1/2*denom(1/2*s12)*mt^2*mh^2*
      s12*s24^2 - 1/2*denom(1/2*s12)*mt^2*mh^2*s12*s23*s24 - 3/2*denom(1/2*s12
      )*mt^2*mh^2*s12*s14*s24 - 3/4*denom(1/2*s12)*mt^2*mh^2*s12*s14*s23 - 1/2
      *denom(1/2*s12)*mt^2*mh^2*s12*s14^2 - 3/4*denom(1/2*s12)*mt^2*mh^2*s12*
      s13*s24 - 1/2*denom(1/2*s12)*mt^2*mh^2*s12*s13*s14 - 1/2*denom(1/2*s12)*
      mt^2*mh^2*s12^2*s24 - 1/2*denom(1/2*s12)*mt^2*mh^2*s12^2*s14 + 1/4*
      denom(1/2*s12)*mt^2*mh^4*s12*s24 + 1/4*denom(1/2*s12)*mt^2*mh^4*s12*s14
       - 1/4*denom(1/2*s12)*mt^4*s24^3 + 1/4*denom(1/2*s12)*mt^4*s23^2*s24 - 3/
      4*denom(1/2*s12)*mt^4*s14*s24^2 + 7/4*denom(1/2*s12)*mt^4*s14*s23*s24 + 
      denom(1/2*s12)*mt^4*s14*s23^2 + 3/4*denom(1/2*s12)*mt^4*s14^2*s24 + 7/4*
      denom(1/2*s12)*mt^4*s14^2*s23 + 1/4*denom(1/2*s12)*mt^4*s14^3 - 7/4*
      denom(1/2*s12)*mt^4*s13*s24^2 - 1/4*denom(1/2*s12)*mt^4*s13*s23*s24 - 7/
      4*denom(1/2*s12)*mt^4*s13*s14*s24 + 1/4*denom(1/2*s12)*mt^4*s13*s14*s23
       - denom(1/2*s12)*mt^4*s13^2*s24 - 1/4*denom(1/2*s12)*mt^4*s13^2*s14 - 5/
      4*denom(1/2*s12)*mt^4*s12*s24^2 - 5/4*denom(1/2*s12)*mt^4*s12*s23*s24 - 
      1/2*denom(1/2*s12)*mt^4*s12*s23^2 - 2*denom(1/2*s12)*mt^4*s12*s14*s24 - 
      denom(1/2*s12)*mt^4*s12*s14*s23 - 3/4*denom(1/2*s12)*mt^4*s12*s14^2 - 2*
      denom(1/2*s12)*mt^4*s12*s13*s24 - denom(1/2*s12)*mt^4*s12*s13*s23 - 7/4*
      denom(1/2*s12)*mt^4*s12*s13*s14 - 1/2*denom(1/2*s12)*mt^4*s12*s13^2 - 5/
      4*denom(1/2*s12)*mt^4*s12^2*s24 - 3/4*denom(1/2*s12)*mt^4*s12^2*s23 - 5/
      4*denom(1/2*s12)*mt^4*s12^2*s14 - 3/4*denom(1/2*s12)*mt^4*s12^2*s13 - 1/
      4*denom(1/2*s12)*mt^4*s12^3 + 1/4*denom(1/2*s12)*mt^4*mh^2*s24^2 - 1/4*
      denom(1/2*s12)*mt^4*mh^2*s23*s24 - 1/2*denom(1/2*s12)*mt^4*mh^2*s14*s23
       - 1/4*denom(1/2*s12)*mt^4*mh^2*s14^2 + 1/2*denom(1/2*s12)*mt^4*mh^2*s13
      *s24 + 1/4*denom(1/2*s12)*mt^4*mh^2*s13*s14 + 5/4*denom(1/2*s12)*mt^4*
      mh^2*s12*s24 + 3/4*denom(1/2*s12)*mt^4*mh^2*s12*s23 + 5/4*denom(1/2*s12)
      *mt^4*mh^2*s12*s14 + 3/4*denom(1/2*s12)*mt^4*mh^2*s12*s13 + 1/2*denom(1/
      2*s12)*mt^4*mh^2*s12^2 - 1/4*denom(1/2*s12)*mt^4*mh^4*s12 + denom(1/2*
      s12)*mt^6*s24^2 - 1/2*denom(1/2*s12)*mt^6*s23*s24 - 1/2*denom(1/2*s12)*
      mt^6*s23^2 - 5/2*denom(1/2*s12)*mt^6*s14*s23 - denom(1/2*s12)*mt^6*s14^2
       + 5/2*denom(1/2*s12)*mt^6*s13*s24 + 1/2*denom(1/2*s12)*mt^6*s13*s14 + 1/
      2*denom(1/2*s12)*mt^6*s13^2 + 5/4*denom(1/2*s12)*mt^6*s12*s24 + 3/4*
      denom(1/2*s12)*mt^6*s12*s23 + 3/4*denom(1/2*s12)*mt^6*s12*s14 + 5/4*
      denom(1/2*s12)*mt^6*s12*s13 + denom(1/2*s12)*mt^6*s12^2 - 1/4*denom(1/2*
      s12)*mt^6*mh^2*s24 + 1/4*denom(1/2*s12)*mt^6*mh^2*s23 + 1/4*denom(1/2*
      s12)*mt^6*mh^2*s14 - 1/4*denom(1/2*s12)*mt^6*mh^2*s13 - denom(1/2*s12)*
      mt^6*mh^2*s12 - denom(1/2*s12)*mt^8*s24 + denom(1/2*s12)*mt^8*s23 + 
      denom(1/2*s12)*mt^8*s14 - denom(1/2*s12)*mt^8*s13 + 1/8*denom(1/4*s12^2)
      *s14^3*s23^2*s24 - 1/8*denom(1/4*s12^2)*s13^2*s14*s24^3 - 1/8*denom(1/4*
      s12^2)*s12*s14^2*s23*s24^2 - 1/8*denom(1/4*s12^2)*s12*s14^2*s23^2*s24 - 
      1/8*denom(1/4*s12^2)*s12*s14^3*s23*s24 - 1/8*denom(1/4*s12^2)*s12*s13*
      s14*s24^3 - 1/8*denom(1/4*s12^2)*s12*s13*s14*s23*s24^2 - 1/8*denom(1/4*
      s12^2)*s12*s13*s14^2*s24^2 - 1/8*denom(1/4*s12^2)*s12*s13*s14^2*s23*s24
       - 1/8*denom(1/4*s12^2)*s12*s13^2*s14*s24^2 - 1/8*denom(1/4*s12^2)*s12^2
      *s14^2*s23*s24 - 1/8*denom(1/4*s12^2)*s12^2*s13*s14*s24^2 + 1/8*denom(1/
      4*s12^2)*mh^2*s12*s14^2*s23*s24 + 1/8*denom(1/4*s12^2)*mh^2*s12*s13*s14*
      s24^2 - 3/8*denom(1/4*s12^2)*mt^2*s14^2*s23^2*s24 - 1/4*denom(1/4*s12^2)
      *mt^2*s14^3*s23*s24 - 1/8*denom(1/4*s12^2)*mt^2*s14^3*s23^2 + 1/4*denom(
      1/4*s12^2)*mt^2*s13*s14*s24^3 + 1/8*denom(1/4*s12^2)*mt^2*s13^2*s24^3 + 
      3/8*denom(1/4*s12^2)*mt^2*s13^2*s14*s24^2 + 1/8*denom(1/4*s12^2)*mt^2*
      s12*s14*s24^3 + 3/8*denom(1/4*s12^2)*mt^2*s12*s14*s23*s24^2 + 1/4*denom(
      1/4*s12^2)*mt^2*s12*s14*s23^2*s24 + 1/4*denom(1/4*s12^2)*mt^2*s12*s14^2*
      s24^2 + 1/2*denom(1/4*s12^2)*mt^2*s12*s14^2*s23*s24 + 1/8*denom(1/4*
      s12^2)*mt^2*s12*s14^2*s23^2 + 1/8*denom(1/4*s12^2)*mt^2*s12*s14^3*s24 + 
      1/8*denom(1/4*s12^2)*mt^2*s12*s14^3*s23 + 1/8*denom(1/4*s12^2)*mt^2*s12*
      s13*s24^3 + 1/8*denom(1/4*s12^2)*mt^2*s12*s13*s23*s24^2 + 1/2*denom(1/4*
      s12^2)*mt^2*s12*s13*s14*s24^2 + 1/2*denom(1/4*s12^2)*mt^2*s12*s13*s14*
      s23*s24 + 3/8*denom(1/4*s12^2)*mt^2*s12*s13*s14^2*s24 + 1/8*denom(1/4*
      s12^2)*mt^2*s12*s13*s14^2*s23 + 1/8*denom(1/4*s12^2)*mt^2*s12*s13^2*
      s24^2 + 1/4*denom(1/4*s12^2)*mt^2*s12*s13^2*s14*s24 + 1/8*denom(1/4*
      s12^2)*mt^2*s12^2*s14*s24^2 + 1/4*denom(1/4*s12^2)*mt^2*s12^2*s14*s23*
      s24 + 1/8*denom(1/4*s12^2)*mt^2*s12^2*s14^2*s24 + 1/8*denom(1/4*s12^2)*
      mt^2*s12^2*s14^2*s23 + 1/8*denom(1/4*s12^2)*mt^2*s12^2*s13*s24^2 + 1/4*
      denom(1/4*s12^2)*mt^2*s12^2*s13*s14*s24 - 1/8*denom(1/4*s12^2)*mt^2*mh^2
      *s12*s14*s24^2 - 1/4*denom(1/4*s12^2)*mt^2*mh^2*s12*s14*s23*s24 - 1/8*
      denom(1/4*s12^2)*mt^2*mh^2*s12*s14^2*s24 - 1/8*denom(1/4*s12^2)*mt^2*
      mh^2*s12*s14^2*s23 - 1/8*denom(1/4*s12^2)*mt^2*mh^2*s12*s13*s24^2 - 1/4*
      denom(1/4*s12^2)*mt^2*mh^2*s12*s13*s14*s24 - 1/8*denom(1/4*s12^2)*mt^4*
      s14*s24^3 + 3/8*denom(1/4*s12^2)*mt^4*s14*s23^2*s24 + 3/4*denom(1/4*
      s12^2)*mt^4*s14^2*s23*s24 + 3/8*denom(1/4*s12^2)*mt^4*s14^2*s23^2 + 1/8*
      denom(1/4*s12^2)*mt^4*s14^3*s24 + 1/4*denom(1/4*s12^2)*mt^4*s14^3*s23 - 
      1/4*denom(1/4*s12^2)*mt^4*s13*s24^3 - 3/4*denom(1/4*s12^2)*mt^4*s13*s14*
      s24^2 - 3/8*denom(1/4*s12^2)*mt^4*s13^2*s24^2 - 3/8*denom(1/4*s12^2)*
      mt^4*s13^2*s14*s24 - 1/8*denom(1/4*s12^2)*mt^4*s12*s24^3 - 1/4*denom(1/4
      *s12^2)*mt^4*s12*s23*s24^2 - 1/8*denom(1/4*s12^2)*mt^4*s12*s23^2*s24 - 5/
      8*denom(1/4*s12^2)*mt^4*s12*s14*s24^2 - 7/8*denom(1/4*s12^2)*mt^4*s12*
      s14*s23*s24 - 1/4*denom(1/4*s12^2)*mt^4*s12*s14*s23^2 - 5/8*denom(1/4*
      s12^2)*mt^4*s12*s14^2*s24 - 3/8*denom(1/4*s12^2)*mt^4*s12*s14^2*s23 - 1/
      8*denom(1/4*s12^2)*mt^4*s12*s14^3 - 3/8*denom(1/4*s12^2)*mt^4*s12*s13*
      s24^2 - 3/8*denom(1/4*s12^2)*mt^4*s12*s13*s23*s24 - 7/8*denom(1/4*s12^2)
      *mt^4*s12*s13*s14*s24 - 3/8*denom(1/4*s12^2)*mt^4*s12*s13*s14*s23 - 1/4*
      denom(1/4*s12^2)*mt^4*s12*s13*s14^2 - 1/4*denom(1/4*s12^2)*mt^4*s12*
      s13^2*s24 - 1/8*denom(1/4*s12^2)*mt^4*s12*s13^2*s14 - 1/8*denom(1/4*
      s12^2)*mt^4*s12^2*s24^2 - 1/8*denom(1/4*s12^2)*mt^4*s12^2*s23*s24 - 1/2*
      denom(1/4*s12^2)*mt^4*s12^2*s14*s24 - 1/4*denom(1/4*s12^2)*mt^4*s12^2*
      s14*s23 - 1/8*denom(1/4*s12^2)*mt^4*s12^2*s14^2 - 1/4*denom(1/4*s12^2)*
      mt^4*s12^2*s13*s24 - 1/8*denom(1/4*s12^2)*mt^4*s12^2*s13*s14 + 1/8*
      denom(1/4*s12^2)*mt^4*mh^2*s12*s24^2 + 1/8*denom(1/4*s12^2)*mt^4*mh^2*
      s12*s23*s24 + 1/2*denom(1/4*s12^2)*mt^4*mh^2*s12*s14*s24 + 1/4*denom(1/4
      *s12^2)*mt^4*mh^2*s12*s14*s23 + 1/8*denom(1/4*s12^2)*mt^4*mh^2*s12*s14^2
       + 1/4*denom(1/4*s12^2)*mt^4*mh^2*s12*s13*s24 + 1/8*denom(1/4*s12^2)*
      mt^4*mh^2*s12*s13*s14 + 1/8*denom(1/4*s12^2)*mt^6*s24^3 - 1/8*denom(1/4*
      s12^2)*mt^6*s23^2*s24 + 3/8*denom(1/4*s12^2)*mt^6*s14*s24^2 - 3/4*denom(
      1/4*s12^2)*mt^6*s14*s23*s24 - 3/8*denom(1/4*s12^2)*mt^6*s14*s23^2 - 3/8*
      denom(1/4*s12^2)*mt^6*s14^2*s24 - 3/4*denom(1/4*s12^2)*mt^6*s14^2*s23 - 
      1/8*denom(1/4*s12^2)*mt^6*s14^3 + 3/4*denom(1/4*s12^2)*mt^6*s13*s24^2 + 
      3/4*denom(1/4*s12^2)*mt^6*s13*s14*s24 + 3/8*denom(1/4*s12^2)*mt^6*s13^2*
      s24 + 1/8*denom(1/4*s12^2)*mt^6*s13^2*s14 + 3/8*denom(1/4*s12^2)*mt^6*
      s12*s24^2 + 1/2*denom(1/4*s12^2)*mt^6*s12*s23*s24 + 1/8*denom(1/4*s12^2)
      *mt^6*s12*s23^2 + 3/4*denom(1/4*s12^2)*mt^6*s12*s14*s24 + 1/2*denom(1/4*
      s12^2)*mt^6*s12*s14*s23 + 3/8*denom(1/4*s12^2)*mt^6*s12*s14^2 + 1/2*
      denom(1/4*s12^2)*mt^6*s12*s13*s24 + 1/4*denom(1/4*s12^2)*mt^6*s12*s13*
      s23 + 1/2*denom(1/4*s12^2)*mt^6*s12*s13*s14 + 1/8*denom(1/4*s12^2)*mt^6*
      s12*s13^2 + 3/8*denom(1/4*s12^2)*mt^6*s12^2*s24 + 1/8*denom(1/4*s12^2)*
      mt^6*s12^2*s23 + 3/8*denom(1/4*s12^2)*mt^6*s12^2*s14 + 1/8*denom(1/4*
      s12^2)*mt^6*s12^2*s13 - 3/8*denom(1/4*s12^2)*mt^6*mh^2*s12*s24 - 1/8*
      denom(1/4*s12^2)*mt^6*mh^2*s12*s23 - 3/8*denom(1/4*s12^2)*mt^6*mh^2*s12*
      s14 - 1/8*denom(1/4*s12^2)*mt^6*mh^2*s12*s13 - 3/8*denom(1/4*s12^2)*mt^8
      *s24^2 + 1/4*denom(1/4*s12^2)*mt^8*s23*s24 + 1/8*denom(1/4*s12^2)*mt^8*
      s23^2 + 3/4*denom(1/4*s12^2)*mt^8*s14*s23 + 3/8*denom(1/4*s12^2)*mt^8*
      s14^2 - 3/4*denom(1/4*s12^2)*mt^8*s13*s24 - 1/4*denom(1/4*s12^2)*mt^8*
      s13*s14 - 1/8*denom(1/4*s12^2)*mt^8*s13^2 - 1/4*denom(1/4*s12^2)*mt^8*
      s12*s24 - 1/4*denom(1/4*s12^2)*mt^8*s12*s23 - 1/4*denom(1/4*s12^2)*mt^8*
      s12*s14 - 1/4*denom(1/4*s12^2)*mt^8*s12*s13 - 1/4*denom(1/4*s12^2)*mt^8*
      s12^2 + 1/4*denom(1/4*s12^2)*mt^8*mh^2*s12 + 1/4*denom(1/4*s12^2)*mt^10*
      s24 - 1/4*denom(1/4*s12^2)*mt^10*s23 - 1/4*denom(1/4*s12^2)*mt^10*s14 + 
      1/4*denom(1/4*s12^2)*mt^10*s13;
 
 .sort
id KMatrix(4,15) =   - 1/2*mt^2*s14*s23*s24 - 1/2*mt^2*s14*s23^2 - 1/2*mt^2*
      s14^2*s23 + 1/2*mt^2*s13*s24^2 + 1/2*mt^2*s13*s23*s24 + 1/2*mt^2*s13*s14
      *s24 - 1/2*mt^2*s13*s14*s23 + 1/2*mt^2*s13^2*s24 + 1/2*mt^2*s12*s24^2 + 
      mt^2*s12*s23*s24 + 1/2*mt^2*s12*s23^2 + mt^2*s12*s14*s24 + 1/2*mt^2*s12*
      s14*s23 + 1/2*mt^2*s12*s14^2 + 3/2*mt^2*s12*s13*s24 + mt^2*s12*s13*s23
       + mt^2*s12*s13*s14 + 1/2*mt^2*s12*s13^2 + mt^2*s12^2*s24 + mt^2*s12^2*
      s23 + mt^2*s12^2*s14 + mt^2*s12^2*s13 + 1/2*mt^2*s12^3 + 1/2*mt^2*mh^2*
      s14*s23 - 1/2*mt^2*mh^2*s13*s24 - mt^2*mh^2*s12*s24 - mt^2*mh^2*s12*s23
       - mt^2*mh^2*s12*s14 - mt^2*mh^2*s12*s13 - mt^2*mh^2*s12^2 + 1/2*mt^2*
      mh^4*s12 - 1/2*mt^4*s24^2 + 1/2*mt^4*s23^2 + 2*mt^4*s14*s23 + 1/2*mt^4*
      s14^2 - 2*mt^4*s13*s24 - 1/2*mt^4*s13^2 - 3/2*mt^4*s12*s24 - 1/2*mt^4*
      s12*s23 - 1/2*mt^4*s12*s14 - 3/2*mt^4*s12*s13 - mt^4*s12^2 + 1/2*mt^4*
      mh^2*s24 - 1/2*mt^4*mh^2*s23 - 1/2*mt^4*mh^2*s14 + 1/2*mt^4*mh^2*s13 + 
      mt^4*mh^2*s12 + mt^6*s24 - mt^6*s23 - mt^6*s14 + mt^6*s13 + 1/4*denom(1/
      2*s12)*s14^2*s23*s24^2 + 1/4*denom(1/2*s12)*s14^2*s23^2*s24 + 1/4*denom(
      1/2*s12)*s14^3*s23*s24 - 1/4*denom(1/2*s12)*s13*s14*s24^3 - 1/4*denom(1/
      2*s12)*s13*s14*s23*s24^2 - 1/4*denom(1/2*s12)*s13*s14^2*s24^2 + 1/4*
      denom(1/2*s12)*s13*s14^2*s23*s24 - 1/4*denom(1/2*s12)*s13^2*s14*s24^2 - 
      1/4*denom(1/2*s12)*s12*s14*s24^3 - 1/2*denom(1/2*s12)*s12*s14*s23*s24^2
       - 1/4*denom(1/2*s12)*s12*s14*s23^2*s24 - 1/2*denom(1/2*s12)*s12*s14^2*
      s24^2 - 1/4*denom(1/2*s12)*s12*s14^2*s23*s24 - 1/4*denom(1/2*s12)*s12*
      s14^3*s24 - 3/4*denom(1/2*s12)*s12*s13*s14*s24^2 - 1/2*denom(1/2*s12)*
      s12*s13*s14*s23*s24 - 1/2*denom(1/2*s12)*s12*s13*s14^2*s24 - 1/4*denom(1/
      2*s12)*s12*s13^2*s14*s24 - 1/2*denom(1/2*s12)*s12^2*s14*s24^2 - 1/2*
      denom(1/2*s12)*s12^2*s14*s23*s24 - 1/2*denom(1/2*s12)*s12^2*s14^2*s24 - 
      1/2*denom(1/2*s12)*s12^2*s13*s14*s24 - 1/4*denom(1/2*s12)*s12^3*s14*s24
       - 1/4*denom(1/2*s12)*mh^2*s14^2*s23*s24 + 1/4*denom(1/2*s12)*mh^2*s13*
      s14*s24^2 + 1/2*denom(1/2*s12)*mh^2*s12*s14*s24^2 + 1/2*denom(1/2*s12)*
      mh^2*s12*s14*s23*s24 + 1/2*denom(1/2*s12)*mh^2*s12*s14^2*s24 + 1/2*
      denom(1/2*s12)*mh^2*s12*s13*s14*s24 + 1/2*denom(1/2*s12)*mh^2*s12^2*s14*
      s24 - 1/4*denom(1/2*s12)*mh^4*s12*s14*s24 + 1/4*denom(1/2*s12)*mt^2*s14*
      s24^3 - 1/4*denom(1/2*s12)*mt^2*s14*s23*s24^2 - 1/2*denom(1/2*s12)*mt^2*
      s14*s23^2*s24 - 3/2*denom(1/2*s12)*mt^2*s14^2*s23*s24 - 1/2*denom(1/2*
      s12)*mt^2*s14^2*s23^2 - 1/4*denom(1/2*s12)*mt^2*s14^3*s24 - 1/4*denom(1/
      2*s12)*mt^2*s14^3*s23 + 1/4*denom(1/2*s12)*mt^2*s13*s24^3 + 1/4*denom(1/
      2*s12)*mt^2*s13*s23*s24^2 + 3/2*denom(1/2*s12)*mt^2*s13*s14*s24^2 + 1/4*
      denom(1/2*s12)*mt^2*s13*s14^2*s24 - 1/4*denom(1/2*s12)*mt^2*s13*s14^2*
      s23 + 1/2*denom(1/2*s12)*mt^2*s13^2*s24^2 + 1/2*denom(1/2*s12)*mt^2*
      s13^2*s14*s24 + 1/4*denom(1/2*s12)*mt^2*s12*s24^3 + 1/2*denom(1/2*s12)*
      mt^2*s12*s23*s24^2 + 1/4*denom(1/2*s12)*mt^2*s12*s23^2*s24 + 3/2*denom(1/
      2*s12)*mt^2*s12*s14*s24^2 + 5/4*denom(1/2*s12)*mt^2*s12*s14*s23*s24 + 1/
      2*denom(1/2*s12)*mt^2*s12*s14*s23^2 + denom(1/2*s12)*mt^2*s12*s14^2*s24
       + 1/2*denom(1/2*s12)*mt^2*s12*s14^2*s23 + 1/4*denom(1/2*s12)*mt^2*s12*
      s14^3 + denom(1/2*s12)*mt^2*s12*s13*s24^2 + 3/4*denom(1/2*s12)*mt^2*s12*
      s13*s23*s24 + 9/4*denom(1/2*s12)*mt^2*s12*s13*s14*s24 + 3/4*denom(1/2*
      s12)*mt^2*s12*s13*s14*s23 + 1/2*denom(1/2*s12)*mt^2*s12*s13*s14^2 + 1/2*
      denom(1/2*s12)*mt^2*s12*s13^2*s24 + 1/4*denom(1/2*s12)*mt^2*s12*s13^2*
      s14 + 1/2*denom(1/2*s12)*mt^2*s12^2*s24^2 + 1/2*denom(1/2*s12)*mt^2*
      s12^2*s23*s24 + 3/2*denom(1/2*s12)*mt^2*s12^2*s14*s24 + 3/4*denom(1/2*
      s12)*mt^2*s12^2*s14*s23 + 1/2*denom(1/2*s12)*mt^2*s12^2*s14^2 + 3/4*
      denom(1/2*s12)*mt^2*s12^2*s13*s24 + 1/2*denom(1/2*s12)*mt^2*s12^2*s13*
      s14 + 1/4*denom(1/2*s12)*mt^2*s12^3*s24 + 1/4*denom(1/2*s12)*mt^2*s12^3*
      s14 - 1/4*denom(1/2*s12)*mt^2*mh^2*s14*s24^2 + 1/2*denom(1/2*s12)*mt^2*
      mh^2*s14*s23*s24 + 1/4*denom(1/2*s12)*mt^2*mh^2*s14^2*s24 + 1/4*denom(1/
      2*s12)*mt^2*mh^2*s14^2*s23 - 1/4*denom(1/2*s12)*mt^2*mh^2*s13*s24^2 - 1/
      2*denom(1/2*s12)*mt^2*mh^2*s13*s14*s24 - 1/2*denom(1/2*s12)*mt^2*mh^2*
      s12*s24^2 - 1/2*denom(1/2*s12)*mt^2*mh^2*s12*s23*s24 - 3/2*denom(1/2*s12
      )*mt^2*mh^2*s12*s14*s24 - 3/4*denom(1/2*s12)*mt^2*mh^2*s12*s14*s23 - 1/2
      *denom(1/2*s12)*mt^2*mh^2*s12*s14^2 - 3/4*denom(1/2*s12)*mt^2*mh^2*s12*
      s13*s24 - 1/2*denom(1/2*s12)*mt^2*mh^2*s12*s13*s14 - 1/2*denom(1/2*s12)*
      mt^2*mh^2*s12^2*s24 - 1/2*denom(1/2*s12)*mt^2*mh^2*s12^2*s14 + 1/4*
      denom(1/2*s12)*mt^2*mh^4*s12*s24 + 1/4*denom(1/2*s12)*mt^2*mh^4*s12*s14
       - 1/4*denom(1/2*s12)*mt^4*s24^3 + 1/4*denom(1/2*s12)*mt^4*s23^2*s24 - 3/
      4*denom(1/2*s12)*mt^4*s14*s24^2 + 7/4*denom(1/2*s12)*mt^4*s14*s23*s24 + 
      denom(1/2*s12)*mt^4*s14*s23^2 + 3/4*denom(1/2*s12)*mt^4*s14^2*s24 + 7/4*
      denom(1/2*s12)*mt^4*s14^2*s23 + 1/4*denom(1/2*s12)*mt^4*s14^3 - 7/4*
      denom(1/2*s12)*mt^4*s13*s24^2 - 1/4*denom(1/2*s12)*mt^4*s13*s23*s24 - 7/
      4*denom(1/2*s12)*mt^4*s13*s14*s24 + 1/4*denom(1/2*s12)*mt^4*s13*s14*s23
       - denom(1/2*s12)*mt^4*s13^2*s24 - 1/4*denom(1/2*s12)*mt^4*s13^2*s14 - 5/
      4*denom(1/2*s12)*mt^4*s12*s24^2 - 5/4*denom(1/2*s12)*mt^4*s12*s23*s24 - 
      1/2*denom(1/2*s12)*mt^4*s12*s23^2 - 2*denom(1/2*s12)*mt^4*s12*s14*s24 - 
      denom(1/2*s12)*mt^4*s12*s14*s23 - 3/4*denom(1/2*s12)*mt^4*s12*s14^2 - 2*
      denom(1/2*s12)*mt^4*s12*s13*s24 - denom(1/2*s12)*mt^4*s12*s13*s23 - 7/4*
      denom(1/2*s12)*mt^4*s12*s13*s14 - 1/2*denom(1/2*s12)*mt^4*s12*s13^2 - 5/
      4*denom(1/2*s12)*mt^4*s12^2*s24 - 3/4*denom(1/2*s12)*mt^4*s12^2*s23 - 5/
      4*denom(1/2*s12)*mt^4*s12^2*s14 - 3/4*denom(1/2*s12)*mt^4*s12^2*s13 - 1/
      4*denom(1/2*s12)*mt^4*s12^3 + 1/4*denom(1/2*s12)*mt^4*mh^2*s24^2 - 1/4*
      denom(1/2*s12)*mt^4*mh^2*s23*s24 - 1/2*denom(1/2*s12)*mt^4*mh^2*s14*s23
       - 1/4*denom(1/2*s12)*mt^4*mh^2*s14^2 + 1/2*denom(1/2*s12)*mt^4*mh^2*s13
      *s24 + 1/4*denom(1/2*s12)*mt^4*mh^2*s13*s14 + 5/4*denom(1/2*s12)*mt^4*
      mh^2*s12*s24 + 3/4*denom(1/2*s12)*mt^4*mh^2*s12*s23 + 5/4*denom(1/2*s12)
      *mt^4*mh^2*s12*s14 + 3/4*denom(1/2*s12)*mt^4*mh^2*s12*s13 + 1/2*denom(1/
      2*s12)*mt^4*mh^2*s12^2 - 1/4*denom(1/2*s12)*mt^4*mh^4*s12 + denom(1/2*
      s12)*mt^6*s24^2 - 1/2*denom(1/2*s12)*mt^6*s23*s24 - 1/2*denom(1/2*s12)*
      mt^6*s23^2 - 5/2*denom(1/2*s12)*mt^6*s14*s23 - denom(1/2*s12)*mt^6*s14^2
       + 5/2*denom(1/2*s12)*mt^6*s13*s24 + 1/2*denom(1/2*s12)*mt^6*s13*s14 + 1/
      2*denom(1/2*s12)*mt^6*s13^2 + 5/4*denom(1/2*s12)*mt^6*s12*s24 + 3/4*
      denom(1/2*s12)*mt^6*s12*s23 + 3/4*denom(1/2*s12)*mt^6*s12*s14 + 5/4*
      denom(1/2*s12)*mt^6*s12*s13 + denom(1/2*s12)*mt^6*s12^2 - 1/4*denom(1/2*
      s12)*mt^6*mh^2*s24 + 1/4*denom(1/2*s12)*mt^6*mh^2*s23 + 1/4*denom(1/2*
      s12)*mt^6*mh^2*s14 - 1/4*denom(1/2*s12)*mt^6*mh^2*s13 - denom(1/2*s12)*
      mt^6*mh^2*s12 - denom(1/2*s12)*mt^8*s24 + denom(1/2*s12)*mt^8*s23 + 
      denom(1/2*s12)*mt^8*s14 - denom(1/2*s12)*mt^8*s13 + 1/8*denom(1/4*s12^2)
      *s14^3*s23^2*s24 - 1/8*denom(1/4*s12^2)*s13^2*s14*s24^3 - 1/8*denom(1/4*
      s12^2)*s12*s14^2*s23*s24^2 - 1/8*denom(1/4*s12^2)*s12*s14^2*s23^2*s24 - 
      1/8*denom(1/4*s12^2)*s12*s14^3*s23*s24 - 1/8*denom(1/4*s12^2)*s12*s13*
      s14*s24^3 - 1/8*denom(1/4*s12^2)*s12*s13*s14*s23*s24^2 - 1/8*denom(1/4*
      s12^2)*s12*s13*s14^2*s24^2 - 1/8*denom(1/4*s12^2)*s12*s13*s14^2*s23*s24
       - 1/8*denom(1/4*s12^2)*s12*s13^2*s14*s24^2 - 1/8*denom(1/4*s12^2)*s12^2
      *s14^2*s23*s24 - 1/8*denom(1/4*s12^2)*s12^2*s13*s14*s24^2 + 1/8*denom(1/
      4*s12^2)*mh^2*s12*s14^2*s23*s24 + 1/8*denom(1/4*s12^2)*mh^2*s12*s13*s14*
      s24^2 - 3/8*denom(1/4*s12^2)*mt^2*s14^2*s23^2*s24 - 1/4*denom(1/4*s12^2)
      *mt^2*s14^3*s23*s24 - 1/8*denom(1/4*s12^2)*mt^2*s14^3*s23^2 + 1/4*denom(
      1/4*s12^2)*mt^2*s13*s14*s24^3 + 1/8*denom(1/4*s12^2)*mt^2*s13^2*s24^3 + 
      3/8*denom(1/4*s12^2)*mt^2*s13^2*s14*s24^2 + 1/8*denom(1/4*s12^2)*mt^2*
      s12*s14*s24^3 + 3/8*denom(1/4*s12^2)*mt^2*s12*s14*s23*s24^2 + 1/4*denom(
      1/4*s12^2)*mt^2*s12*s14*s23^2*s24 + 1/4*denom(1/4*s12^2)*mt^2*s12*s14^2*
      s24^2 + 1/2*denom(1/4*s12^2)*mt^2*s12*s14^2*s23*s24 + 1/8*denom(1/4*
      s12^2)*mt^2*s12*s14^2*s23^2 + 1/8*denom(1/4*s12^2)*mt^2*s12*s14^3*s24 + 
      1/8*denom(1/4*s12^2)*mt^2*s12*s14^3*s23 + 1/8*denom(1/4*s12^2)*mt^2*s12*
      s13*s24^3 + 1/8*denom(1/4*s12^2)*mt^2*s12*s13*s23*s24^2 + 1/2*denom(1/4*
      s12^2)*mt^2*s12*s13*s14*s24^2 + 1/2*denom(1/4*s12^2)*mt^2*s12*s13*s14*
      s23*s24 + 3/8*denom(1/4*s12^2)*mt^2*s12*s13*s14^2*s24 + 1/8*denom(1/4*
      s12^2)*mt^2*s12*s13*s14^2*s23 + 1/8*denom(1/4*s12^2)*mt^2*s12*s13^2*
      s24^2 + 1/4*denom(1/4*s12^2)*mt^2*s12*s13^2*s14*s24 + 1/8*denom(1/4*
      s12^2)*mt^2*s12^2*s14*s24^2 + 1/4*denom(1/4*s12^2)*mt^2*s12^2*s14*s23*
      s24 + 1/8*denom(1/4*s12^2)*mt^2*s12^2*s14^2*s24 + 1/8*denom(1/4*s12^2)*
      mt^2*s12^2*s14^2*s23 + 1/8*denom(1/4*s12^2)*mt^2*s12^2*s13*s24^2 + 1/4*
      denom(1/4*s12^2)*mt^2*s12^2*s13*s14*s24 - 1/8*denom(1/4*s12^2)*mt^2*mh^2
      *s12*s14*s24^2 - 1/4*denom(1/4*s12^2)*mt^2*mh^2*s12*s14*s23*s24 - 1/8*
      denom(1/4*s12^2)*mt^2*mh^2*s12*s14^2*s24 - 1/8*denom(1/4*s12^2)*mt^2*
      mh^2*s12*s14^2*s23 - 1/8*denom(1/4*s12^2)*mt^2*mh^2*s12*s13*s24^2 - 1/4*
      denom(1/4*s12^2)*mt^2*mh^2*s12*s13*s14*s24 - 1/8*denom(1/4*s12^2)*mt^4*
      s14*s24^3 + 3/8*denom(1/4*s12^2)*mt^4*s14*s23^2*s24 + 3/4*denom(1/4*
      s12^2)*mt^4*s14^2*s23*s24 + 3/8*denom(1/4*s12^2)*mt^4*s14^2*s23^2 + 1/8*
      denom(1/4*s12^2)*mt^4*s14^3*s24 + 1/4*denom(1/4*s12^2)*mt^4*s14^3*s23 - 
      1/4*denom(1/4*s12^2)*mt^4*s13*s24^3 - 3/4*denom(1/4*s12^2)*mt^4*s13*s14*
      s24^2 - 3/8*denom(1/4*s12^2)*mt^4*s13^2*s24^2 - 3/8*denom(1/4*s12^2)*
      mt^4*s13^2*s14*s24 - 1/8*denom(1/4*s12^2)*mt^4*s12*s24^3 - 1/4*denom(1/4
      *s12^2)*mt^4*s12*s23*s24^2 - 1/8*denom(1/4*s12^2)*mt^4*s12*s23^2*s24 - 5/
      8*denom(1/4*s12^2)*mt^4*s12*s14*s24^2 - 7/8*denom(1/4*s12^2)*mt^4*s12*
      s14*s23*s24 - 1/4*denom(1/4*s12^2)*mt^4*s12*s14*s23^2 - 5/8*denom(1/4*
      s12^2)*mt^4*s12*s14^2*s24 - 3/8*denom(1/4*s12^2)*mt^4*s12*s14^2*s23 - 1/
      8*denom(1/4*s12^2)*mt^4*s12*s14^3 - 3/8*denom(1/4*s12^2)*mt^4*s12*s13*
      s24^2 - 3/8*denom(1/4*s12^2)*mt^4*s12*s13*s23*s24 - 7/8*denom(1/4*s12^2)
      *mt^4*s12*s13*s14*s24 - 3/8*denom(1/4*s12^2)*mt^4*s12*s13*s14*s23 - 1/4*
      denom(1/4*s12^2)*mt^4*s12*s13*s14^2 - 1/4*denom(1/4*s12^2)*mt^4*s12*
      s13^2*s24 - 1/8*denom(1/4*s12^2)*mt^4*s12*s13^2*s14 - 1/8*denom(1/4*
      s12^2)*mt^4*s12^2*s24^2 - 1/8*denom(1/4*s12^2)*mt^4*s12^2*s23*s24 - 1/2*
      denom(1/4*s12^2)*mt^4*s12^2*s14*s24 - 1/4*denom(1/4*s12^2)*mt^4*s12^2*
      s14*s23 - 1/8*denom(1/4*s12^2)*mt^4*s12^2*s14^2 - 1/4*denom(1/4*s12^2)*
      mt^4*s12^2*s13*s24 - 1/8*denom(1/4*s12^2)*mt^4*s12^2*s13*s14 + 1/8*
      denom(1/4*s12^2)*mt^4*mh^2*s12*s24^2 + 1/8*denom(1/4*s12^2)*mt^4*mh^2*
      s12*s23*s24 + 1/2*denom(1/4*s12^2)*mt^4*mh^2*s12*s14*s24 + 1/4*denom(1/4
      *s12^2)*mt^4*mh^2*s12*s14*s23 + 1/8*denom(1/4*s12^2)*mt^4*mh^2*s12*s14^2
       + 1/4*denom(1/4*s12^2)*mt^4*mh^2*s12*s13*s24 + 1/8*denom(1/4*s12^2)*
      mt^4*mh^2*s12*s13*s14 + 1/8*denom(1/4*s12^2)*mt^6*s24^3 - 1/8*denom(1/4*
      s12^2)*mt^6*s23^2*s24 + 3/8*denom(1/4*s12^2)*mt^6*s14*s24^2 - 3/4*denom(
      1/4*s12^2)*mt^6*s14*s23*s24 - 3/8*denom(1/4*s12^2)*mt^6*s14*s23^2 - 3/8*
      denom(1/4*s12^2)*mt^6*s14^2*s24 - 3/4*denom(1/4*s12^2)*mt^6*s14^2*s23 - 
      1/8*denom(1/4*s12^2)*mt^6*s14^3 + 3/4*denom(1/4*s12^2)*mt^6*s13*s24^2 + 
      3/4*denom(1/4*s12^2)*mt^6*s13*s14*s24 + 3/8*denom(1/4*s12^2)*mt^6*s13^2*
      s24 + 1/8*denom(1/4*s12^2)*mt^6*s13^2*s14 + 3/8*denom(1/4*s12^2)*mt^6*
      s12*s24^2 + 1/2*denom(1/4*s12^2)*mt^6*s12*s23*s24 + 1/8*denom(1/4*s12^2)
      *mt^6*s12*s23^2 + 3/4*denom(1/4*s12^2)*mt^6*s12*s14*s24 + 1/2*denom(1/4*
      s12^2)*mt^6*s12*s14*s23 + 3/8*denom(1/4*s12^2)*mt^6*s12*s14^2 + 1/2*
      denom(1/4*s12^2)*mt^6*s12*s13*s24 + 1/4*denom(1/4*s12^2)*mt^6*s12*s13*
      s23 + 1/2*denom(1/4*s12^2)*mt^6*s12*s13*s14 + 1/8*denom(1/4*s12^2)*mt^6*
      s12*s13^2 + 3/8*denom(1/4*s12^2)*mt^6*s12^2*s24 + 1/8*denom(1/4*s12^2)*
      mt^6*s12^2*s23 + 3/8*denom(1/4*s12^2)*mt^6*s12^2*s14 + 1/8*denom(1/4*
      s12^2)*mt^6*s12^2*s13 - 3/8*denom(1/4*s12^2)*mt^6*mh^2*s12*s24 - 1/8*
      denom(1/4*s12^2)*mt^6*mh^2*s12*s23 - 3/8*denom(1/4*s12^2)*mt^6*mh^2*s12*
      s14 - 1/8*denom(1/4*s12^2)*mt^6*mh^2*s12*s13 - 3/8*denom(1/4*s12^2)*mt^8
      *s24^2 + 1/4*denom(1/4*s12^2)*mt^8*s23*s24 + 1/8*denom(1/4*s12^2)*mt^8*
      s23^2 + 3/4*denom(1/4*s12^2)*mt^8*s14*s23 + 3/8*denom(1/4*s12^2)*mt^8*
      s14^2 - 3/4*denom(1/4*s12^2)*mt^8*s13*s24 - 1/4*denom(1/4*s12^2)*mt^8*
      s13*s14 - 1/8*denom(1/4*s12^2)*mt^8*s13^2 - 1/4*denom(1/4*s12^2)*mt^8*
      s12*s24 - 1/4*denom(1/4*s12^2)*mt^8*s12*s23 - 1/4*denom(1/4*s12^2)*mt^8*
      s12*s14 - 1/4*denom(1/4*s12^2)*mt^8*s12*s13 - 1/4*denom(1/4*s12^2)*mt^8*
      s12^2 + 1/4*denom(1/4*s12^2)*mt^8*mh^2*s12 + 1/4*denom(1/4*s12^2)*mt^10*
      s24 - 1/4*denom(1/4*s12^2)*mt^10*s23 - 1/4*denom(1/4*s12^2)*mt^10*s14 + 
      1/4*denom(1/4*s12^2)*mt^10*s13;
 
 .sort
id KMatrix(4,16) =  mt^4*s14*s23 - mt^4*s13*s24 - mt^4*s12*s24 - mt^4*s12*s23
       - mt^4*s12*s14 - mt^4*s12*s13 - mt^4*s12^2 + mt^4*mh^2*s12 + mt^6*s24
       - mt^6*s23 - mt^6*s14 + mt^6*s13 - denom(1/2*s12)*mt^2*s14^2*s23*s24 + 
      denom(1/2*s12)*mt^2*s13*s14*s24^2 + denom(1/2*s12)*mt^2*s12*s14*s24^2 + 
      denom(1/2*s12)*mt^2*s12*s14*s23*s24 + denom(1/2*s12)*mt^2*s12*s14^2*s24
       + denom(1/2*s12)*mt^2*s12*s13*s14*s24 + denom(1/2*s12)*mt^2*s12^2*s14*
      s24 - denom(1/2*s12)*mt^2*mh^2*s12*s14*s24 - denom(1/2*s12)*mt^4*s14*
      s24^2 + 2*denom(1/2*s12)*mt^4*s14*s23*s24 + denom(1/2*s12)*mt^4*s14^2*
      s24 + denom(1/2*s12)*mt^4*s14^2*s23 - denom(1/2*s12)*mt^4*s13*s24^2 - 2*
      denom(1/2*s12)*mt^4*s13*s14*s24 - denom(1/2*s12)*mt^4*s12*s24^2 - denom(
      1/2*s12)*mt^4*s12*s23*s24 - 2*denom(1/2*s12)*mt^4*s12*s14*s24 - denom(1/
      2*s12)*mt^4*s12*s14*s23 - denom(1/2*s12)*mt^4*s12*s14^2 - denom(1/2*s12)
      *mt^4*s12*s13*s24 - denom(1/2*s12)*mt^4*s12*s13*s14 - denom(1/2*s12)*
      mt^4*s12^2*s24 - denom(1/2*s12)*mt^4*s12^2*s14 + denom(1/2*s12)*mt^4*
      mh^2*s12*s24 + denom(1/2*s12)*mt^4*mh^2*s12*s14 + denom(1/2*s12)*mt^6*
      s24^2 - denom(1/2*s12)*mt^6*s23*s24 - 2*denom(1/2*s12)*mt^6*s14*s23 - 
      denom(1/2*s12)*mt^6*s14^2 + 2*denom(1/2*s12)*mt^6*s13*s24 + denom(1/2*
      s12)*mt^6*s13*s14 + denom(1/2*s12)*mt^6*s12*s24 + denom(1/2*s12)*mt^6*
      s12*s23 + denom(1/2*s12)*mt^6*s12*s14 + denom(1/2*s12)*mt^6*s12*s13 + 
      denom(1/2*s12)*mt^6*s12^2 - denom(1/2*s12)*mt^6*mh^2*s12 - denom(1/2*s12
      )*mt^8*s24 + denom(1/2*s12)*mt^8*s23 + denom(1/2*s12)*mt^8*s14 - denom(1/
      2*s12)*mt^8*s13 + 1/4*denom(1/4*s12^2)*s14^3*s23*s24^2 - 1/4*denom(1/4*
      s12^2)*s13*s14^2*s24^3 - 1/4*denom(1/4*s12^2)*s12*s14^2*s24^3 - 1/4*
      denom(1/4*s12^2)*s12*s14^2*s23*s24^2 - 1/4*denom(1/4*s12^2)*s12*s14^3*
      s24^2 - 1/4*denom(1/4*s12^2)*s12*s13*s14^2*s24^2 - 1/4*denom(1/4*s12^2)*
      s12^2*s14^2*s24^2 + 1/4*denom(1/4*s12^2)*mh^2*s12*s14^2*s24^2 + 1/4*
      denom(1/4*s12^2)*mt^2*s14^2*s24^3 - 3/4*denom(1/4*s12^2)*mt^2*s14^2*s23*
      s24^2 - 1/4*denom(1/4*s12^2)*mt^2*s14^3*s24^2 - 1/2*denom(1/4*s12^2)*
      mt^2*s14^3*s23*s24 + 1/2*denom(1/4*s12^2)*mt^2*s13*s14*s24^3 + 3/4*
      denom(1/4*s12^2)*mt^2*s13*s14^2*s24^2 + 1/2*denom(1/4*s12^2)*mt^2*s12*
      s14*s24^3 + 1/2*denom(1/4*s12^2)*mt^2*s12*s14*s23*s24^2 + denom(1/4*
      s12^2)*mt^2*s12*s14^2*s24^2 + 1/2*denom(1/4*s12^2)*mt^2*s12*s14^2*s23*
      s24 + 1/2*denom(1/4*s12^2)*mt^2*s12*s14^3*s24 + 1/2*denom(1/4*s12^2)*
      mt^2*s12*s13*s14*s24^2 + 1/2*denom(1/4*s12^2)*mt^2*s12*s13*s14^2*s24 + 1/
      2*denom(1/4*s12^2)*mt^2*s12^2*s14*s24^2 + 1/2*denom(1/4*s12^2)*mt^2*
      s12^2*s14^2*s24 - 1/2*denom(1/4*s12^2)*mt^2*mh^2*s12*s14*s24^2 - 1/2*
      denom(1/4*s12^2)*mt^2*mh^2*s12*s14^2*s24 - 1/2*denom(1/4*s12^2)*mt^4*s14
      *s24^3 + 3/4*denom(1/4*s12^2)*mt^4*s14*s23*s24^2 + 3/2*denom(1/4*s12^2)*
      mt^4*s14^2*s23*s24 + 1/2*denom(1/4*s12^2)*mt^4*s14^3*s24 + 1/4*denom(1/4
      *s12^2)*mt^4*s14^3*s23 - 1/4*denom(1/4*s12^2)*mt^4*s13*s24^3 - 3/2*
      denom(1/4*s12^2)*mt^4*s13*s14*s24^2 - 3/4*denom(1/4*s12^2)*mt^4*s13*
      s14^2*s24 - 1/4*denom(1/4*s12^2)*mt^4*s12*s24^3 - 1/4*denom(1/4*s12^2)*
      mt^4*s12*s23*s24^2 - 5/4*denom(1/4*s12^2)*mt^4*s12*s14*s24^2 - denom(1/4
      *s12^2)*mt^4*s12*s14*s23*s24 - 5/4*denom(1/4*s12^2)*mt^4*s12*s14^2*s24
       - 1/4*denom(1/4*s12^2)*mt^4*s12*s14^2*s23 - 1/4*denom(1/4*s12^2)*mt^4*
      s12*s14^3 - 1/4*denom(1/4*s12^2)*mt^4*s12*s13*s24^2 - denom(1/4*s12^2)*
      mt^4*s12*s13*s14*s24 - 1/4*denom(1/4*s12^2)*mt^4*s12*s13*s14^2 - 1/4*
      denom(1/4*s12^2)*mt^4*s12^2*s24^2 - denom(1/4*s12^2)*mt^4*s12^2*s14*s24
       - 1/4*denom(1/4*s12^2)*mt^4*s12^2*s14^2 + 1/4*denom(1/4*s12^2)*mt^4*
      mh^2*s12*s24^2 + denom(1/4*s12^2)*mt^4*mh^2*s12*s14*s24 + 1/4*denom(1/4*
      s12^2)*mt^4*mh^2*s12*s14^2 + 1/4*denom(1/4*s12^2)*mt^6*s24^3 - 1/4*
      denom(1/4*s12^2)*mt^6*s23*s24^2 + 3/4*denom(1/4*s12^2)*mt^6*s14*s24^2 - 
      3/2*denom(1/4*s12^2)*mt^6*s14*s23*s24 - 3/4*denom(1/4*s12^2)*mt^6*s14^2*
      s24 - 3/4*denom(1/4*s12^2)*mt^6*s14^2*s23 - 1/4*denom(1/4*s12^2)*mt^6*
      s14^3 + 3/4*denom(1/4*s12^2)*mt^6*s13*s24^2 + 3/2*denom(1/4*s12^2)*mt^6*
      s13*s14*s24 + 1/4*denom(1/4*s12^2)*mt^6*s13*s14^2 + 1/2*denom(1/4*s12^2)
      *mt^6*s12*s24^2 + 1/2*denom(1/4*s12^2)*mt^6*s12*s23*s24 + denom(1/4*
      s12^2)*mt^6*s12*s14*s24 + 1/2*denom(1/4*s12^2)*mt^6*s12*s14*s23 + 1/2*
      denom(1/4*s12^2)*mt^6*s12*s14^2 + 1/2*denom(1/4*s12^2)*mt^6*s12*s13*s24
       + 1/2*denom(1/4*s12^2)*mt^6*s12*s13*s14 + 1/2*denom(1/4*s12^2)*mt^6*
      s12^2*s24 + 1/2*denom(1/4*s12^2)*mt^6*s12^2*s14 - 1/2*denom(1/4*s12^2)*
      mt^6*mh^2*s12*s24 - 1/2*denom(1/4*s12^2)*mt^6*mh^2*s12*s14 - 1/2*denom(1/
      4*s12^2)*mt^8*s24^2 + 1/2*denom(1/4*s12^2)*mt^8*s23*s24 + 3/4*denom(1/4*
      s12^2)*mt^8*s14*s23 + 1/2*denom(1/4*s12^2)*mt^8*s14^2 - 3/4*denom(1/4*
      s12^2)*mt^8*s13*s24 - 1/2*denom(1/4*s12^2)*mt^8*s13*s14 - 1/4*denom(1/4*
      s12^2)*mt^8*s12*s24 - 1/4*denom(1/4*s12^2)*mt^8*s12*s23 - 1/4*denom(1/4*
      s12^2)*mt^8*s12*s14 - 1/4*denom(1/4*s12^2)*mt^8*s12*s13 - 1/4*denom(1/4*
      s12^2)*mt^8*s12^2 + 1/4*denom(1/4*s12^2)*mt^8*mh^2*s12 + 1/4*denom(1/4*
      s12^2)*mt^10*s24 - 1/4*denom(1/4*s12^2)*mt^10*s23 - 1/4*denom(1/4*s12^2)
      *mt^10*s14 + 1/4*denom(1/4*s12^2)*mt^10*s13;
 
 .sort
id KMatrix(4,17) =   - 2*mt^2*s24 - 2*mt^2*s23 - 2*mt^2*s14 - 2*mt^2*s13 - 2*
      mt^2*s12 + 2*mt^2*mh^2 + 2*denom(1/2*s12)*s14*s24^2 + 2*denom(1/2*s12)*
      s14*s23*s24 + 2*denom(1/2*s12)*s14^2*s24 + 2*denom(1/2*s12)*s13*s14*s24
       + 2*denom(1/2*s12)*s12*s14*s24 - 2*denom(1/2*s12)*mh^2*s14*s24 - 2*
      denom(1/2*s12)*mt^2*s24^2 - 2*denom(1/2*s12)*mt^2*s23*s24 - 4*denom(1/2*
      s12)*mt^2*s14*s24 - 2*denom(1/2*s12)*mt^2*s14*s23 - 2*denom(1/2*s12)*
      mt^2*s14^2 - 2*denom(1/2*s12)*mt^2*s13*s24 - 2*denom(1/2*s12)*mt^2*s13*
      s14 - 2*denom(1/2*s12)*mt^2*s12*s24 - 2*denom(1/2*s12)*mt^2*s12*s14 + 2*
      denom(1/2*s12)*mt^2*mh^2*s24 + 2*denom(1/2*s12)*mt^2*mh^2*s14 + 2*denom(
      1/2*s12)*mt^4*s24 + 2*denom(1/2*s12)*mt^4*s23 + 2*denom(1/2*s12)*mt^4*
      s14 + 2*denom(1/2*s12)*mt^4*s13 + 2*denom(1/2*s12)*mt^4*s12 - 2*denom(1/
      2*s12)*mt^4*mh^2 - 1/2*denom(1/4*s12^2)*s12*s14*s24^2 - 1/2*denom(1/4*
      s12^2)*s12*s14*s23*s24 - 1/2*denom(1/4*s12^2)*s12*s14^2*s24 - 1/2*denom(
      1/4*s12^2)*s12*s13*s14*s24 - 1/2*denom(1/4*s12^2)*s12^2*s14*s24 + 1/2*
      denom(1/4*s12^2)*mh^2*s12*s14*s24 + 1/2*denom(1/4*s12^2)*mt^2*s12*s24^2
       + 1/2*denom(1/4*s12^2)*mt^2*s12*s23*s24 + denom(1/4*s12^2)*mt^2*s12*s14
      *s24 + 1/2*denom(1/4*s12^2)*mt^2*s12*s14*s23 + 1/2*denom(1/4*s12^2)*mt^2
      *s12*s14^2 + 1/2*denom(1/4*s12^2)*mt^2*s12*s13*s24 + 1/2*denom(1/4*s12^2
      )*mt^2*s12*s13*s14 + 1/2*denom(1/4*s12^2)*mt^2*s12^2*s24 + 1/2*denom(1/4
      *s12^2)*mt^2*s12^2*s14 - 1/2*denom(1/4*s12^2)*mt^2*mh^2*s12*s24 - 1/2*
      denom(1/4*s12^2)*mt^2*mh^2*s12*s14 - 1/2*denom(1/4*s12^2)*mt^4*s12*s24
       - 1/2*denom(1/4*s12^2)*mt^4*s12*s23 - 1/2*denom(1/4*s12^2)*mt^4*s12*s14
       - 1/2*denom(1/4*s12^2)*mt^4*s12*s13 - 1/2*denom(1/4*s12^2)*mt^4*s12^2
       + 1/2*denom(1/4*s12^2)*mt^4*mh^2*s12;
 
 .sort
id KMatrix(4,18) =  2*mt^3*s14 - 2*mt^3*s13 - 2*denom(1/2*s12)*mt*s14^2*s24 + 
      2*denom(1/2*s12)*mt*s13*s14*s24 + 2*denom(1/2*s12)*mt^3*s14*s24 + 2*
      denom(1/2*s12)*mt^3*s14^2 - 2*denom(1/2*s12)*mt^3*s13*s24 - 2*denom(1/2*
      s12)*mt^3*s13*s14 - 2*denom(1/2*s12)*mt^5*s14 + 2*denom(1/2*s12)*mt^5*
      s13 + 1/2*denom(1/4*s12^2)*mt*s12*s14^2*s24 - 1/2*denom(1/4*s12^2)*mt*
      s12*s13*s14*s24 - 1/2*denom(1/4*s12^2)*mt^3*s12*s14*s24 - 1/2*denom(1/4*
      s12^2)*mt^3*s12*s14^2 + 1/2*denom(1/4*s12^2)*mt^3*s12*s13*s24 + 1/2*
      denom(1/4*s12^2)*mt^3*s12*s13*s14 + 1/2*denom(1/4*s12^2)*mt^5*s12*s14 - 
      1/2*denom(1/4*s12^2)*mt^5*s12*s13;
 
 .sort
id KMatrix(4,19) =  2*mt^3*s24 - 2*mt^3*s23 - 2*denom(1/2*s12)*mt*s14*s24^2 + 
      2*denom(1/2*s12)*mt*s14*s23*s24 + 2*denom(1/2*s12)*mt^3*s24^2 - 2*denom(
      1/2*s12)*mt^3*s23*s24 + 2*denom(1/2*s12)*mt^3*s14*s24 - 2*denom(1/2*s12)
      *mt^3*s14*s23 - 2*denom(1/2*s12)*mt^5*s24 + 2*denom(1/2*s12)*mt^5*s23 + 
      1/2*denom(1/4*s12^2)*mt*s12*s14*s24^2 - 1/2*denom(1/4*s12^2)*mt*s12*s14*
      s23*s24 - 1/2*denom(1/4*s12^2)*mt^3*s12*s24^2 + 1/2*denom(1/4*s12^2)*
      mt^3*s12*s23*s24 - 1/2*denom(1/4*s12^2)*mt^3*s12*s14*s24 + 1/2*denom(1/4
      *s12^2)*mt^3*s12*s14*s23 + 1/2*denom(1/4*s12^2)*mt^5*s12*s24 - 1/2*
      denom(1/4*s12^2)*mt^5*s12*s23;
 
 .sort
id KMatrix(4,20) =   - mt*s24^2 - 2*mt*s23*s24 - mt*s23^2 - 2*mt*s14*s24 - 2*
      mt*s14*s23 - mt*s14^2 - 2*mt*s13*s24 - 2*mt*s13*s23 - 2*mt*s13*s14 - mt*
      s13^2 - 2*mt*s12*s24 - 2*mt*s12*s23 - 2*mt*s12*s14 - 2*mt*s12*s13 - mt*
      s12^2 + 2*mt*mh^2*s24 + 2*mt*mh^2*s23 + 2*mt*mh^2*s14 + 2*mt*mh^2*s13 + 
      2*mt*mh^2*s12 - mt*mh^4 + 2*mt^3*s24 + 2*mt^3*s23 + 2*mt^3*s14 + 2*mt^3*
      s13 + 2*mt^3*s12 - 2*mt^3*mh^2 + denom(1/2*s12)*mt*s14*s24^2 - denom(1/2
      *s12)*mt*s14*s23^2 + denom(1/2*s12)*mt*s14^2*s24 - denom(1/2*s12)*mt*
      s14^2*s23 - denom(1/2*s12)*mt*s13*s24^2 - denom(1/2*s12)*mt*s13*s23*s24
       - denom(1/2*s12)*mt*s13*s14*s23 - denom(1/2*s12)*mt*s13^2*s24 + denom(1/
      2*s12)*mt*s12*s14*s24 - denom(1/2*s12)*mt*s12*s14*s23 - denom(1/2*s12)*
      mt*s12*s13*s24 - denom(1/2*s12)*mt*mh^2*s14*s24 + denom(1/2*s12)*mt*mh^2
      *s14*s23 + denom(1/2*s12)*mt*mh^2*s13*s24 + denom(1/2*s12)*mt^3*s23*s24
       + denom(1/2*s12)*mt^3*s23^2 - 2*denom(1/2*s12)*mt^3*s14*s24 + 2*denom(1/
      2*s12)*mt^3*s14*s23 + 2*denom(1/2*s12)*mt^3*s13*s24 + 2*denom(1/2*s12)*
      mt^3*s13*s23 + denom(1/2*s12)*mt^3*s13*s14 + denom(1/2*s12)*mt^3*s13^2
       + denom(1/2*s12)*mt^3*s12*s23 + denom(1/2*s12)*mt^3*s12*s13 - denom(1/2
      *s12)*mt^3*mh^2*s23 - denom(1/2*s12)*mt^3*mh^2*s13 - 2*denom(1/2*s12)*
      mt^5*s23 - 2*denom(1/2*s12)*mt^5*s13 - denom(1/2*s12)*mt^5*s12 + denom(1/
      2*s12)*mt^5*mh^2 + 1/2*denom(1/4*s12^2)*mt*s14^2*s23*s24 - 1/4*denom(1/4
      *s12^2)*mt*s14^2*s23^2 + 1/2*denom(1/4*s12^2)*mt*s13*s14*s24^2 - 1/2*
      denom(1/4*s12^2)*mt*s13*s14*s23*s24 - 1/4*denom(1/4*s12^2)*mt*s13^2*
      s24^2 - 1/2*denom(1/4*s12^2)*mt^3*s14*s24^2 - 1/2*denom(1/4*s12^2)*mt^3*
      s14*s23*s24 + 1/2*denom(1/4*s12^2)*mt^3*s14*s23^2 - 1/2*denom(1/4*s12^2)
      *mt^3*s14^2*s24 + 1/2*denom(1/4*s12^2)*mt^3*s13*s23*s24 - 1/2*denom(1/4*
      s12^2)*mt^3*s13*s14*s24 + 1/2*denom(1/4*s12^2)*mt^3*s13*s14*s23 + 1/2*
      denom(1/4*s12^2)*mt^3*s13^2*s24 + 1/4*denom(1/4*s12^2)*mt^5*s24^2 - 1/4*
      denom(1/4*s12^2)*mt^5*s23^2 + 3/2*denom(1/4*s12^2)*mt^5*s14*s24 - 1/2*
      denom(1/4*s12^2)*mt^5*s14*s23 + 1/4*denom(1/4*s12^2)*mt^5*s14^2 - 1/2*
      denom(1/4*s12^2)*mt^5*s13*s24 - 1/2*denom(1/4*s12^2)*mt^5*s13*s23 - 1/4*
      denom(1/4*s12^2)*mt^5*s13^2 - 1/2*denom(1/4*s12^2)*mt^7*s24 + 1/2*denom(
      1/4*s12^2)*mt^7*s23 - 1/2*denom(1/4*s12^2)*mt^7*s14 + 1/2*denom(1/4*
      s12^2)*mt^7*s13;
 
 .sort
id KMatrix(4,21) =  2*mt^3*s24 + 2*mt^3*s23 + 2*mt^3*s14 + 2*mt^3*s13 + 2*mt^3
      *s12 - 2*mt^3*mh^2 - denom(1/2*s12)*mt*s14*s24^2 - denom(1/2*s12)*mt*s14
      *s23*s24 - denom(1/2*s12)*mt*s14^2*s24 - denom(1/2*s12)*mt*s13*s14*s24
       - denom(1/2*s12)*mt*s12*s14*s24 + denom(1/2*s12)*mt*mh^2*s14*s24 + 
      denom(1/2*s12)*mt^3*s24^2 + denom(1/2*s12)*mt^3*s23*s24 + 2*denom(1/2*
      s12)*mt^3*s14*s23 + denom(1/2*s12)*mt^3*s14^2 + 2*denom(1/2*s12)*mt^3*
      s13*s24 + denom(1/2*s12)*mt^3*s13*s14 + denom(1/2*s12)*mt^3*s12*s24 + 
      denom(1/2*s12)*mt^3*s12*s14 - denom(1/2*s12)*mt^3*mh^2*s24 - denom(1/2*
      s12)*mt^3*mh^2*s14 - 2*denom(1/2*s12)*mt^5*s23 - 2*denom(1/2*s12)*mt^5*
      s13 - denom(1/2*s12)*mt^5*s12 + denom(1/2*s12)*mt^5*mh^2 + denom(1/4*
      s12^2)*mt*s14^2*s24^2 - 1/2*denom(1/4*s12^2)*mt*s14^2*s23*s24 - 1/2*
      denom(1/4*s12^2)*mt*s13*s14*s24^2 - 3/2*denom(1/4*s12^2)*mt^3*s14*s24^2
       + denom(1/4*s12^2)*mt^3*s14*s23*s24 - 3/2*denom(1/4*s12^2)*mt^3*s14^2*
      s24 + 1/2*denom(1/4*s12^2)*mt^3*s14^2*s23 + 1/2*denom(1/4*s12^2)*mt^3*
      s13*s24^2 + denom(1/4*s12^2)*mt^3*s13*s14*s24 + 1/2*denom(1/4*s12^2)*
      mt^5*s24^2 - 1/2*denom(1/4*s12^2)*mt^5*s23*s24 + 2*denom(1/4*s12^2)*mt^5
      *s14*s24 - denom(1/4*s12^2)*mt^5*s14*s23 + 1/2*denom(1/4*s12^2)*mt^5*
      s14^2 - denom(1/4*s12^2)*mt^5*s13*s24 - 1/2*denom(1/4*s12^2)*mt^5*s13*
      s14 - 1/2*denom(1/4*s12^2)*mt^7*s24 + 1/2*denom(1/4*s12^2)*mt^7*s23 - 1/
      2*denom(1/4*s12^2)*mt^7*s14 + 1/2*denom(1/4*s12^2)*mt^7*s13;
 
 .sort
id KMatrix(4,22) =   - mt*s24^2 - 2*mt*s23*s24 - mt*s23^2 - 2*mt*s14*s24 - 2*
      mt*s14*s23 - mt*s14^2 - 2*mt*s13*s24 - 2*mt*s13*s23 - 2*mt*s13*s14 - mt*
      s13^2 - 2*mt*s12*s24 - 2*mt*s12*s23 - 2*mt*s12*s14 - 2*mt*s12*s13 - mt*
      s12^2 + 2*mt*mh^2*s24 + 2*mt*mh^2*s23 + 2*mt*mh^2*s14 + 2*mt*mh^2*s13 + 
      2*mt*mh^2*s12 - mt*mh^4 + 2*mt^3*s24 + 2*mt^3*s23 + 2*mt^3*s14 + 2*mt^3*
      s13 + 2*mt^3*s12 - 2*mt^3*mh^2 + denom(1/2*s12)*mt*s14*s24^2 - denom(1/2
      *s12)*mt*s14*s23^2 + denom(1/2*s12)*mt*s14^2*s24 - denom(1/2*s12)*mt*
      s14^2*s23 - denom(1/2*s12)*mt*s13*s24^2 - denom(1/2*s12)*mt*s13*s23*s24
       - denom(1/2*s12)*mt*s13*s14*s23 - denom(1/2*s12)*mt*s13^2*s24 + denom(1/
      2*s12)*mt*s12*s14*s24 - denom(1/2*s12)*mt*s12*s14*s23 - denom(1/2*s12)*
      mt*s12*s13*s24 - denom(1/2*s12)*mt*mh^2*s14*s24 + denom(1/2*s12)*mt*mh^2
      *s14*s23 + denom(1/2*s12)*mt*mh^2*s13*s24 + denom(1/2*s12)*mt^3*s23*s24
       + denom(1/2*s12)*mt^3*s23^2 - 2*denom(1/2*s12)*mt^3*s14*s24 + 2*denom(1/
      2*s12)*mt^3*s14*s23 + 2*denom(1/2*s12)*mt^3*s13*s24 + 2*denom(1/2*s12)*
      mt^3*s13*s23 + denom(1/2*s12)*mt^3*s13*s14 + denom(1/2*s12)*mt^3*s13^2
       + denom(1/2*s12)*mt^3*s12*s23 + denom(1/2*s12)*mt^3*s12*s13 - denom(1/2
      *s12)*mt^3*mh^2*s23 - denom(1/2*s12)*mt^3*mh^2*s13 - 2*denom(1/2*s12)*
      mt^5*s23 - 2*denom(1/2*s12)*mt^5*s13 - denom(1/2*s12)*mt^5*s12 + denom(1/
      2*s12)*mt^5*mh^2 + 1/2*denom(1/4*s12^2)*mt*s14^2*s23*s24 - 1/4*denom(1/4
      *s12^2)*mt*s14^2*s23^2 + 1/2*denom(1/4*s12^2)*mt*s13*s14*s24^2 - 1/2*
      denom(1/4*s12^2)*mt*s13*s14*s23*s24 - 1/4*denom(1/4*s12^2)*mt*s13^2*
      s24^2 - 1/2*denom(1/4*s12^2)*mt^3*s14*s24^2 - 1/2*denom(1/4*s12^2)*mt^3*
      s14*s23*s24 + 1/2*denom(1/4*s12^2)*mt^3*s14*s23^2 - 1/2*denom(1/4*s12^2)
      *mt^3*s14^2*s24 + 1/2*denom(1/4*s12^2)*mt^3*s13*s23*s24 - 1/2*denom(1/4*
      s12^2)*mt^3*s13*s14*s24 + 1/2*denom(1/4*s12^2)*mt^3*s13*s14*s23 + 1/2*
      denom(1/4*s12^2)*mt^3*s13^2*s24 + 1/4*denom(1/4*s12^2)*mt^5*s24^2 - 1/4*
      denom(1/4*s12^2)*mt^5*s23^2 + 3/2*denom(1/4*s12^2)*mt^5*s14*s24 - 1/2*
      denom(1/4*s12^2)*mt^5*s14*s23 + 1/4*denom(1/4*s12^2)*mt^5*s14^2 - 1/2*
      denom(1/4*s12^2)*mt^5*s13*s24 - 1/2*denom(1/4*s12^2)*mt^5*s13*s23 - 1/4*
      denom(1/4*s12^2)*mt^5*s13^2 - 1/2*denom(1/4*s12^2)*mt^7*s24 + 1/2*denom(
      1/4*s12^2)*mt^7*s23 - 1/2*denom(1/4*s12^2)*mt^7*s14 + 1/2*denom(1/4*
      s12^2)*mt^7*s13;
 
 .sort
id KMatrix(4,23) =  2*mt^3*s24 + 2*mt^3*s23 + 2*mt^3*s14 + 2*mt^3*s13 + 2*mt^3
      *s12 - 2*mt^3*mh^2 - denom(1/2*s12)*mt*s14*s24^2 - denom(1/2*s12)*mt*s14
      *s23*s24 - denom(1/2*s12)*mt*s14^2*s24 - denom(1/2*s12)*mt*s13*s14*s24
       - denom(1/2*s12)*mt*s12*s14*s24 + denom(1/2*s12)*mt*mh^2*s14*s24 + 
      denom(1/2*s12)*mt^3*s24^2 + denom(1/2*s12)*mt^3*s23*s24 + 2*denom(1/2*
      s12)*mt^3*s14*s23 + denom(1/2*s12)*mt^3*s14^2 + 2*denom(1/2*s12)*mt^3*
      s13*s24 + denom(1/2*s12)*mt^3*s13*s14 + denom(1/2*s12)*mt^3*s12*s24 + 
      denom(1/2*s12)*mt^3*s12*s14 - denom(1/2*s12)*mt^3*mh^2*s24 - denom(1/2*
      s12)*mt^3*mh^2*s14 - 2*denom(1/2*s12)*mt^5*s23 - 2*denom(1/2*s12)*mt^5*
      s13 - denom(1/2*s12)*mt^5*s12 + denom(1/2*s12)*mt^5*mh^2 + denom(1/4*
      s12^2)*mt*s14^2*s24^2 - 1/2*denom(1/4*s12^2)*mt*s14^2*s23*s24 - 1/2*
      denom(1/4*s12^2)*mt*s13*s14*s24^2 - 3/2*denom(1/4*s12^2)*mt^3*s14*s24^2
       + denom(1/4*s12^2)*mt^3*s14*s23*s24 - 3/2*denom(1/4*s12^2)*mt^3*s14^2*
      s24 + 1/2*denom(1/4*s12^2)*mt^3*s14^2*s23 + 1/2*denom(1/4*s12^2)*mt^3*
      s13*s24^2 + denom(1/4*s12^2)*mt^3*s13*s14*s24 + 1/2*denom(1/4*s12^2)*
      mt^5*s24^2 - 1/2*denom(1/4*s12^2)*mt^5*s23*s24 + 2*denom(1/4*s12^2)*mt^5
      *s14*s24 - denom(1/4*s12^2)*mt^5*s14*s23 + 1/2*denom(1/4*s12^2)*mt^5*
      s14^2 - denom(1/4*s12^2)*mt^5*s13*s24 - 1/2*denom(1/4*s12^2)*mt^5*s13*
      s14 - 1/2*denom(1/4*s12^2)*mt^7*s24 + 1/2*denom(1/4*s12^2)*mt^7*s23 - 1/
      2*denom(1/4*s12^2)*mt^7*s14 + 1/2*denom(1/4*s12^2)*mt^7*s13;
 
 .sort
id KMatrix(4,24) =  mt^2*s14*s23 - mt^2*s13*s24 - mt^2*s12*s24 - mt^2*s12*s23
       - mt^2*s12*s14 - mt^2*s12*s13 - mt^2*s12^2 + mt^2*mh^2*s12 + mt^4*s24
       - mt^4*s23 - mt^4*s14 + mt^4*s13 - denom(1/2*s12)*s14^2*s23*s24 + 
      denom(1/2*s12)*s13*s14*s24^2 + denom(1/2*s12)*s12*s14*s24^2 + denom(1/2*
      s12)*s12*s14*s23*s24 + denom(1/2*s12)*s12*s14^2*s24 + denom(1/2*s12)*s12
      *s13*s14*s24 + denom(1/2*s12)*s12^2*s14*s24 - denom(1/2*s12)*mh^2*s12*
      s14*s24 - denom(1/2*s12)*mt^2*s14*s24^2 + 2*denom(1/2*s12)*mt^2*s14*s23*
      s24 + denom(1/2*s12)*mt^2*s14^2*s24 + denom(1/2*s12)*mt^2*s14^2*s23 - 
      denom(1/2*s12)*mt^2*s13*s24^2 - 2*denom(1/2*s12)*mt^2*s13*s14*s24 - 
      denom(1/2*s12)*mt^2*s12*s24^2 - denom(1/2*s12)*mt^2*s12*s23*s24 - 2*
      denom(1/2*s12)*mt^2*s12*s14*s24 - denom(1/2*s12)*mt^2*s12*s14*s23 - 
      denom(1/2*s12)*mt^2*s12*s14^2 - denom(1/2*s12)*mt^2*s12*s13*s24 - denom(
      1/2*s12)*mt^2*s12*s13*s14 - denom(1/2*s12)*mt^2*s12^2*s24 - denom(1/2*
      s12)*mt^2*s12^2*s14 + denom(1/2*s12)*mt^2*mh^2*s12*s24 + denom(1/2*s12)*
      mt^2*mh^2*s12*s14 + denom(1/2*s12)*mt^4*s24^2 - denom(1/2*s12)*mt^4*s23*
      s24 - 2*denom(1/2*s12)*mt^4*s14*s23 - denom(1/2*s12)*mt^4*s14^2 + 2*
      denom(1/2*s12)*mt^4*s13*s24 + denom(1/2*s12)*mt^4*s13*s14 + denom(1/2*
      s12)*mt^4*s12*s24 + denom(1/2*s12)*mt^4*s12*s23 + denom(1/2*s12)*mt^4*
      s12*s14 + denom(1/2*s12)*mt^4*s12*s13 + denom(1/2*s12)*mt^4*s12^2 - 
      denom(1/2*s12)*mt^4*mh^2*s12 - denom(1/2*s12)*mt^6*s24 + denom(1/2*s12)*
      mt^6*s23 + denom(1/2*s12)*mt^6*s14 - denom(1/2*s12)*mt^6*s13 + 1/4*
      denom(1/4*s12^2)*s12*s14^2*s23*s24 - 1/4*denom(1/4*s12^2)*s12*s13*s14*
      s24^2 - 1/4*denom(1/4*s12^2)*s12^2*s14*s24^2 - 1/4*denom(1/4*s12^2)*
      s12^2*s14*s23*s24 - 1/4*denom(1/4*s12^2)*s12^2*s14^2*s24 - 1/4*denom(1/4
      *s12^2)*s12^2*s13*s14*s24 - 1/4*denom(1/4*s12^2)*s12^3*s14*s24 + 1/4*
      denom(1/4*s12^2)*mh^2*s12^2*s14*s24 + 1/4*denom(1/4*s12^2)*mt^2*s12*s14*
      s24^2 - 1/2*denom(1/4*s12^2)*mt^2*s12*s14*s23*s24 - 1/4*denom(1/4*s12^2)
      *mt^2*s12*s14^2*s24 - 1/4*denom(1/4*s12^2)*mt^2*s12*s14^2*s23 + 1/4*
      denom(1/4*s12^2)*mt^2*s12*s13*s24^2 + 1/2*denom(1/4*s12^2)*mt^2*s12*s13*
      s14*s24 + 1/4*denom(1/4*s12^2)*mt^2*s12^2*s24^2 + 1/4*denom(1/4*s12^2)*
      mt^2*s12^2*s23*s24 + 1/2*denom(1/4*s12^2)*mt^2*s12^2*s14*s24 + 1/4*
      denom(1/4*s12^2)*mt^2*s12^2*s14*s23 + 1/4*denom(1/4*s12^2)*mt^2*s12^2*
      s14^2 + 1/4*denom(1/4*s12^2)*mt^2*s12^2*s13*s24 + 1/4*denom(1/4*s12^2)*
      mt^2*s12^2*s13*s14 + 1/4*denom(1/4*s12^2)*mt^2*s12^3*s24 + 1/4*denom(1/4
      *s12^2)*mt^2*s12^3*s14 - 1/4*denom(1/4*s12^2)*mt^2*mh^2*s12^2*s24 - 1/4*
      denom(1/4*s12^2)*mt^2*mh^2*s12^2*s14 - 1/4*denom(1/4*s12^2)*mt^4*s12*
      s24^2 + 1/4*denom(1/4*s12^2)*mt^4*s12*s23*s24 + 1/2*denom(1/4*s12^2)*
      mt^4*s12*s14*s23 + 1/4*denom(1/4*s12^2)*mt^4*s12*s14^2 - 1/2*denom(1/4*
      s12^2)*mt^4*s12*s13*s24 - 1/4*denom(1/4*s12^2)*mt^4*s12*s13*s14 - 1/4*
      denom(1/4*s12^2)*mt^4*s12^2*s24 - 1/4*denom(1/4*s12^2)*mt^4*s12^2*s23 - 
      1/4*denom(1/4*s12^2)*mt^4*s12^2*s14 - 1/4*denom(1/4*s12^2)*mt^4*s12^2*
      s13 - 1/4*denom(1/4*s12^2)*mt^4*s12^3 + 1/4*denom(1/4*s12^2)*mt^4*mh^2*
      s12^2 + 1/4*denom(1/4*s12^2)*mt^6*s12*s24 - 1/4*denom(1/4*s12^2)*mt^6*
      s12*s23 - 1/4*denom(1/4*s12^2)*mt^6*s12*s14 + 1/4*denom(1/4*s12^2)*mt^6*
      s12*s13;
 
 .sort
id KMatrix(4,25) =   - 2*mt^2*s24 - 2*mt^2*s23 - 2*mt^2*s14 - 2*mt^2*s13 - 2*
      mt^2*s12 + 2*mt^2*mh^2 + 2*denom(1/2*s12)*s14*s24^2 + 2*denom(1/2*s12)*
      s14*s23*s24 + 2*denom(1/2*s12)*s14^2*s24 + 2*denom(1/2*s12)*s13*s14*s24
       + 2*denom(1/2*s12)*s12*s14*s24 - 2*denom(1/2*s12)*mh^2*s14*s24 - 2*
      denom(1/2*s12)*mt^2*s24^2 - 2*denom(1/2*s12)*mt^2*s23*s24 - 4*denom(1/2*
      s12)*mt^2*s14*s24 - 2*denom(1/2*s12)*mt^2*s14*s23 - 2*denom(1/2*s12)*
      mt^2*s14^2 - 2*denom(1/2*s12)*mt^2*s13*s24 - 2*denom(1/2*s12)*mt^2*s13*
      s14 - 2*denom(1/2*s12)*mt^2*s12*s24 - 2*denom(1/2*s12)*mt^2*s12*s14 + 2*
      denom(1/2*s12)*mt^2*mh^2*s24 + 2*denom(1/2*s12)*mt^2*mh^2*s14 + 2*denom(
      1/2*s12)*mt^4*s24 + 2*denom(1/2*s12)*mt^4*s23 + 2*denom(1/2*s12)*mt^4*
      s14 + 2*denom(1/2*s12)*mt^4*s13 + 2*denom(1/2*s12)*mt^4*s12 - 2*denom(1/
      2*s12)*mt^4*mh^2 - 1/2*denom(1/4*s12^2)*s12*s14*s24^2 - 1/2*denom(1/4*
      s12^2)*s12*s14*s23*s24 - 1/2*denom(1/4*s12^2)*s12*s14^2*s24 - 1/2*denom(
      1/4*s12^2)*s12*s13*s14*s24 - 1/2*denom(1/4*s12^2)*s12^2*s14*s24 + 1/2*
      denom(1/4*s12^2)*mh^2*s12*s14*s24 + 1/2*denom(1/4*s12^2)*mt^2*s12*s24^2
       + 1/2*denom(1/4*s12^2)*mt^2*s12*s23*s24 + denom(1/4*s12^2)*mt^2*s12*s14
      *s24 + 1/2*denom(1/4*s12^2)*mt^2*s12*s14*s23 + 1/2*denom(1/4*s12^2)*mt^2
      *s12*s14^2 + 1/2*denom(1/4*s12^2)*mt^2*s12*s13*s24 + 1/2*denom(1/4*s12^2
      )*mt^2*s12*s13*s14 + 1/2*denom(1/4*s12^2)*mt^2*s12^2*s24 + 1/2*denom(1/4
      *s12^2)*mt^2*s12^2*s14 - 1/2*denom(1/4*s12^2)*mt^2*mh^2*s12*s24 - 1/2*
      denom(1/4*s12^2)*mt^2*mh^2*s12*s14 - 1/2*denom(1/4*s12^2)*mt^4*s12*s24
       - 1/2*denom(1/4*s12^2)*mt^4*s12*s23 - 1/2*denom(1/4*s12^2)*mt^4*s12*s14
       - 1/2*denom(1/4*s12^2)*mt^4*s12*s13 - 1/2*denom(1/4*s12^2)*mt^4*s12^2
       + 1/2*denom(1/4*s12^2)*mt^4*mh^2*s12;
 
 .sort
id KMatrix(4,26) =   - 1/2*s14*s24^2 - s14*s23*s24 - 1/2*s14*s23^2 - s14^2*s24
       - s14^2*s23 - 1/2*s14^3 - s13*s14*s24 - s13*s14*s23 - s13*s14^2 - 1/2*
      s13^2*s14 - s12*s14*s24 - s12*s14*s23 - s12*s14^2 - s12*s13*s14 - 1/2*
      s12^2*s14 + mh^2*s14*s24 + mh^2*s14*s23 + mh^2*s14^2 + mh^2*s13*s14 + 
      mh^2*s12*s14 - 1/2*mh^4*s14 + 1/2*mt^2*s24^2 + mt^2*s23*s24 + 1/2*mt^2*
      s23^2 + 3*mt^2*s14*s24 + 3*mt^2*s14*s23 + 5/2*mt^2*s14^2 + 2*mt^2*s13*
      s14 - 1/2*mt^2*s13^2 + mt^2*s12*s24 + mt^2*s12*s23 + 3*mt^2*s12*s14 + 1/
      2*mt^2*s12^2 - mt^2*mh^2*s24 - mt^2*mh^2*s23 - 3*mt^2*mh^2*s14 - mt^2*
      mh^2*s12 + 1/2*mt^2*mh^4 - mt^4*s24 - mt^4*s23 - 3*mt^4*s14 + mt^4*s13
       - mt^4*s12 + mt^4*mh^2 - 1/2*denom(1/2*s12)*s14^2*s23*s24 - 1/2*denom(1/
      2*s12)*s14^2*s23^2 - 1/2*denom(1/2*s12)*s14^3*s23 - 1/2*denom(1/2*s12)*
      s13*s14^2*s23 - 1/2*denom(1/2*s12)*s12*s14^2*s23 + 1/2*denom(1/2*s12)*
      mh^2*s14^2*s23 + denom(1/2*s12)*mt^2*s14*s23*s24 + denom(1/2*s12)*mt^2*
      s14*s23^2 + 1/2*denom(1/2*s12)*mt^2*s14^2*s24 + 5/2*denom(1/2*s12)*mt^2*
      s14^2*s23 + 1/2*denom(1/2*s12)*mt^2*s14^3 + 1/2*denom(1/2*s12)*mt^2*s13*
      s14*s23 + 1/2*denom(1/2*s12)*mt^2*s13*s14^2 - 1/2*denom(1/2*s12)*mt^2*
      s13^2*s24 + denom(1/2*s12)*mt^2*s12*s14*s23 + 1/2*denom(1/2*s12)*mt^2*
      s12*s14^2 - denom(1/2*s12)*mt^2*mh^2*s14*s23 - 1/2*denom(1/2*s12)*mt^2*
      mh^2*s14^2 - 1/2*denom(1/2*s12)*mt^4*s23*s24 - 1/2*denom(1/2*s12)*mt^4*
      s23^2 - denom(1/2*s12)*mt^4*s14*s24 - 3*denom(1/2*s12)*mt^4*s14*s23 - 2*
      denom(1/2*s12)*mt^4*s14^2 + denom(1/2*s12)*mt^4*s13*s24 - 1/2*denom(1/2*
      s12)*mt^4*s13*s14 + 1/2*denom(1/2*s12)*mt^4*s13^2 - 1/2*denom(1/2*s12)*
      mt^4*s12*s23 - denom(1/2*s12)*mt^4*s12*s14 + 1/2*denom(1/2*s12)*mt^4*
      mh^2*s23 + denom(1/2*s12)*mt^4*mh^2*s14 + denom(1/2*s12)*mt^6*s23 + 2*
      denom(1/2*s12)*mt^6*s14 - denom(1/2*s12)*mt^6*s13 + 1/2*denom(1/2*s12)*
      mt^6*s12 - 1/2*denom(1/2*s12)*mt^6*mh^2 - 1/8*denom(1/4*s12^2)*s14^3*
      s23^2 + 1/8*denom(1/4*s12^2)*s13^2*s14*s24^2 + 3/8*denom(1/4*s12^2)*mt^2
      *s14^2*s23^2 + 1/4*denom(1/4*s12^2)*mt^2*s14^3*s23 - 1/4*denom(1/4*s12^2
      )*mt^2*s13*s14*s24^2 - 1/8*denom(1/4*s12^2)*mt^2*s13^2*s24^2 - 1/4*
      denom(1/4*s12^2)*mt^2*s13^2*s14*s24 + 1/8*denom(1/4*s12^2)*mt^4*s14*
      s24^2 - 3/8*denom(1/4*s12^2)*mt^4*s14*s23^2 - 3/4*denom(1/4*s12^2)*mt^4*
      s14^2*s23 - 1/8*denom(1/4*s12^2)*mt^4*s14^3 + 1/4*denom(1/4*s12^2)*mt^4*
      s13*s24^2 + 1/2*denom(1/4*s12^2)*mt^4*s13*s14*s24 + 1/4*denom(1/4*s12^2)
      *mt^4*s13^2*s24 + 1/8*denom(1/4*s12^2)*mt^4*s13^2*s14 - 1/8*denom(1/4*
      s12^2)*mt^6*s24^2 + 1/8*denom(1/4*s12^2)*mt^6*s23^2 - 1/4*denom(1/4*
      s12^2)*mt^6*s14*s24 + 3/4*denom(1/4*s12^2)*mt^6*s14*s23 + 3/8*denom(1/4*
      s12^2)*mt^6*s14^2 - 1/2*denom(1/4*s12^2)*mt^6*s13*s24 - 1/4*denom(1/4*
      s12^2)*mt^6*s13*s14 - 1/8*denom(1/4*s12^2)*mt^6*s13^2 + 1/4*denom(1/4*
      s12^2)*mt^8*s24 - 1/4*denom(1/4*s12^2)*mt^8*s23 - 1/4*denom(1/4*s12^2)*
      mt^8*s14 + 1/4*denom(1/4*s12^2)*mt^8*s13;
 
 .sort
id KMatrix(4,27) =   - 1/2*s24^3 - s23*s24^2 - 1/2*s23^2*s24 - s14*s24^2 - s14
      *s23*s24 - 1/2*s14^2*s24 - s13*s24^2 - s13*s23*s24 - s13*s14*s24 - 1/2*
      s13^2*s24 - s12*s24^2 - s12*s23*s24 - s12*s14*s24 - s12*s13*s24 - 1/2*
      s12^2*s24 + mh^2*s24^2 + mh^2*s23*s24 + mh^2*s14*s24 + mh^2*s13*s24 + 
      mh^2*s12*s24 - 1/2*mh^4*s24 + 5/2*mt^2*s24^2 + 2*mt^2*s23*s24 - 1/2*mt^2
      *s23^2 + 3*mt^2*s14*s24 + 1/2*mt^2*s14^2 + 3*mt^2*s13*s24 + mt^2*s13*s14
       + 1/2*mt^2*s13^2 + 3*mt^2*s12*s24 + mt^2*s12*s14 + mt^2*s12*s13 + 1/2*
      mt^2*s12^2 - 3*mt^2*mh^2*s24 - mt^2*mh^2*s14 - mt^2*mh^2*s13 - mt^2*mh^2
      *s12 + 1/2*mt^2*mh^4 - 3*mt^4*s24 + mt^4*s23 - mt^4*s14 - mt^4*s13 - 
      mt^4*s12 + mt^4*mh^2 - 1/2*denom(1/2*s12)*s13*s24^3 - 1/2*denom(1/2*s12)
      *s13*s23*s24^2 - 1/2*denom(1/2*s12)*s13*s14*s24^2 - 1/2*denom(1/2*s12)*
      s13^2*s24^2 - 1/2*denom(1/2*s12)*s12*s13*s24^2 + 1/2*denom(1/2*s12)*mh^2
      *s13*s24^2 + 1/2*denom(1/2*s12)*mt^2*s24^3 + 1/2*denom(1/2*s12)*mt^2*s23
      *s24^2 + 1/2*denom(1/2*s12)*mt^2*s14*s24^2 - 1/2*denom(1/2*s12)*mt^2*s14
      *s23^2 + 5/2*denom(1/2*s12)*mt^2*s13*s24^2 + 1/2*denom(1/2*s12)*mt^2*s13
      *s23*s24 + denom(1/2*s12)*mt^2*s13*s14*s24 + denom(1/2*s12)*mt^2*s13^2*
      s24 + 1/2*denom(1/2*s12)*mt^2*s12*s24^2 + denom(1/2*s12)*mt^2*s12*s13*
      s24 - 1/2*denom(1/2*s12)*mt^2*mh^2*s24^2 - denom(1/2*s12)*mt^2*mh^2*s13*
      s24 - 2*denom(1/2*s12)*mt^4*s24^2 - 1/2*denom(1/2*s12)*mt^4*s23*s24 + 1/
      2*denom(1/2*s12)*mt^4*s23^2 - denom(1/2*s12)*mt^4*s14*s24 + denom(1/2*
      s12)*mt^4*s14*s23 - 3*denom(1/2*s12)*mt^4*s13*s24 - 1/2*denom(1/2*s12)*
      mt^4*s13*s14 - 1/2*denom(1/2*s12)*mt^4*s13^2 - denom(1/2*s12)*mt^4*s12*
      s24 - 1/2*denom(1/2*s12)*mt^4*s12*s13 + denom(1/2*s12)*mt^4*mh^2*s24 + 1/
      2*denom(1/2*s12)*mt^4*mh^2*s13 + 2*denom(1/2*s12)*mt^6*s24 - denom(1/2*
      s12)*mt^6*s23 + denom(1/2*s12)*mt^6*s13 + 1/2*denom(1/2*s12)*mt^6*s12 - 
      1/2*denom(1/2*s12)*mt^6*mh^2 + 1/8*denom(1/4*s12^2)*s14^2*s23^2*s24 - 1/
      8*denom(1/4*s12^2)*s13^2*s24^3 - 1/4*denom(1/4*s12^2)*mt^2*s14*s23^2*s24
       - 1/4*denom(1/4*s12^2)*mt^2*s14^2*s23*s24 - 1/8*denom(1/4*s12^2)*mt^2*
      s14^2*s23^2 + 1/4*denom(1/4*s12^2)*mt^2*s13*s24^3 + 3/8*denom(1/4*s12^2)
      *mt^2*s13^2*s24^2 - 1/8*denom(1/4*s12^2)*mt^4*s24^3 + 1/8*denom(1/4*
      s12^2)*mt^4*s23^2*s24 + 1/2*denom(1/4*s12^2)*mt^4*s14*s23*s24 + 1/4*
      denom(1/4*s12^2)*mt^4*s14*s23^2 + 1/8*denom(1/4*s12^2)*mt^4*s14^2*s24 + 
      1/4*denom(1/4*s12^2)*mt^4*s14^2*s23 - 3/4*denom(1/4*s12^2)*mt^4*s13*
      s24^2 - 3/8*denom(1/4*s12^2)*mt^4*s13^2*s24 + 3/8*denom(1/4*s12^2)*mt^6*
      s24^2 - 1/4*denom(1/4*s12^2)*mt^6*s23*s24 - 1/8*denom(1/4*s12^2)*mt^6*
      s23^2 - 1/4*denom(1/4*s12^2)*mt^6*s14*s24 - 1/2*denom(1/4*s12^2)*mt^6*
      s14*s23 - 1/8*denom(1/4*s12^2)*mt^6*s14^2 + 3/4*denom(1/4*s12^2)*mt^6*
      s13*s24 + 1/8*denom(1/4*s12^2)*mt^6*s13^2 - 1/4*denom(1/4*s12^2)*mt^8*
      s24 + 1/4*denom(1/4*s12^2)*mt^8*s23 + 1/4*denom(1/4*s12^2)*mt^8*s14 - 1/
      4*denom(1/4*s12^2)*mt^8*s13;
 
 .sort
id KMatrix(4,28) =  mt^2*s14*s24 + mt^2*s14*s23 + mt^2*s14^2 + mt^2*s13*s14 + 
      mt^2*s12*s14 - mt^2*mh^2*s14 - mt^4*s24 - mt^4*s23 - 3*mt^4*s14 + mt^4*
      s13 - mt^4*s12 + mt^4*mh^2 - 1/2*denom(1/2*s12)*s14^2*s24^2 - 1/2*denom(
      1/2*s12)*s14^2*s23*s24 - 1/2*denom(1/2*s12)*s14^3*s24 - 1/2*denom(1/2*
      s12)*s13*s14^2*s24 - 1/2*denom(1/2*s12)*s12*s14^2*s24 + 1/2*denom(1/2*
      s12)*mh^2*s14^2*s24 + denom(1/2*s12)*mt^2*s14*s24^2 + denom(1/2*s12)*
      mt^2*s14*s23*s24 + 5/2*denom(1/2*s12)*mt^2*s14^2*s24 + denom(1/2*s12)*
      mt^2*s14^2*s23 + 1/2*denom(1/2*s12)*mt^2*s14^3 - 1/2*denom(1/2*s12)*mt^2
      *s13*s14*s24 + 1/2*denom(1/2*s12)*mt^2*s13*s14^2 + denom(1/2*s12)*mt^2*
      s12*s14*s24 + 1/2*denom(1/2*s12)*mt^2*s12*s14^2 - denom(1/2*s12)*mt^2*
      mh^2*s14*s24 - 1/2*denom(1/2*s12)*mt^2*mh^2*s14^2 - 1/2*denom(1/2*s12)*
      mt^4*s24^2 - 1/2*denom(1/2*s12)*mt^4*s23*s24 - 2*denom(1/2*s12)*mt^4*s14
      *s24 - 2*denom(1/2*s12)*mt^4*s14*s23 - 5/2*denom(1/2*s12)*mt^4*s14^2 + 
      denom(1/2*s12)*mt^4*s13*s24 + 1/2*denom(1/2*s12)*mt^4*s13*s14 - 1/2*
      denom(1/2*s12)*mt^4*s12*s24 - denom(1/2*s12)*mt^4*s12*s14 + 1/2*denom(1/
      2*s12)*mt^4*mh^2*s24 + denom(1/2*s12)*mt^4*mh^2*s14 + denom(1/2*s12)*
      mt^6*s23 + 2*denom(1/2*s12)*mt^6*s14 - denom(1/2*s12)*mt^6*s13 + 1/2*
      denom(1/2*s12)*mt^6*s12 - 1/2*denom(1/2*s12)*mt^6*mh^2 - 1/4*denom(1/4*
      s12^2)*s14^3*s23*s24 + 1/4*denom(1/4*s12^2)*s13*s14^2*s24^2 - 1/4*denom(
      1/4*s12^2)*mt^2*s14^2*s24^2 + 3/4*denom(1/4*s12^2)*mt^2*s14^2*s23*s24 + 
      1/4*denom(1/4*s12^2)*mt^2*s14^3*s24 + 1/4*denom(1/4*s12^2)*mt^2*s14^3*
      s23 - 1/2*denom(1/4*s12^2)*mt^2*s13*s14*s24^2 - 1/2*denom(1/4*s12^2)*
      mt^2*s13*s14^2*s24 + 1/2*denom(1/4*s12^2)*mt^4*s14*s24^2 - 3/4*denom(1/4
      *s12^2)*mt^4*s14*s23*s24 - 1/4*denom(1/4*s12^2)*mt^4*s14^2*s24 - 3/4*
      denom(1/4*s12^2)*mt^4*s14^2*s23 - 1/4*denom(1/4*s12^2)*mt^4*s14^3 + 1/4*
      denom(1/4*s12^2)*mt^4*s13*s24^2 + denom(1/4*s12^2)*mt^4*s13*s14*s24 + 1/
      4*denom(1/4*s12^2)*mt^4*s13*s14^2 - 1/4*denom(1/4*s12^2)*mt^6*s24^2 + 1/
      4*denom(1/4*s12^2)*mt^6*s23*s24 - 1/4*denom(1/4*s12^2)*mt^6*s14*s24 + 3/
      4*denom(1/4*s12^2)*mt^6*s14*s23 + 1/2*denom(1/4*s12^2)*mt^6*s14^2 - 1/2*
      denom(1/4*s12^2)*mt^6*s13*s24 - 1/2*denom(1/4*s12^2)*mt^6*s13*s14 + 1/4*
      denom(1/4*s12^2)*mt^8*s24 - 1/4*denom(1/4*s12^2)*mt^8*s23 - 1/4*denom(1/
      4*s12^2)*mt^8*s14 + 1/4*denom(1/4*s12^2)*mt^8*s13;
 
 .sort
id KMatrix(4,29) =  mt^2*s24^2 + mt^2*s23*s24 + mt^2*s14*s24 + mt^2*s13*s24 + 
      mt^2*s12*s24 - mt^2*mh^2*s24 - 3*mt^4*s24 + mt^4*s23 - mt^4*s14 - mt^4*
      s13 - mt^4*s12 + mt^4*mh^2 - 1/2*denom(1/2*s12)*s14*s24^3 - 1/2*denom(1/
      2*s12)*s14*s23*s24^2 - 1/2*denom(1/2*s12)*s14^2*s24^2 - 1/2*denom(1/2*
      s12)*s13*s14*s24^2 - 1/2*denom(1/2*s12)*s12*s14*s24^2 + 1/2*denom(1/2*
      s12)*mh^2*s14*s24^2 + 1/2*denom(1/2*s12)*mt^2*s24^3 + 1/2*denom(1/2*s12)
      *mt^2*s23*s24^2 + 5/2*denom(1/2*s12)*mt^2*s14*s24^2 - 1/2*denom(1/2*s12)
      *mt^2*s14*s23*s24 + denom(1/2*s12)*mt^2*s14^2*s24 + denom(1/2*s12)*mt^2*
      s13*s24^2 + denom(1/2*s12)*mt^2*s13*s14*s24 + 1/2*denom(1/2*s12)*mt^2*
      s12*s24^2 + denom(1/2*s12)*mt^2*s12*s14*s24 - 1/2*denom(1/2*s12)*mt^2*
      mh^2*s24^2 - denom(1/2*s12)*mt^2*mh^2*s14*s24 - 5/2*denom(1/2*s12)*mt^4*
      s24^2 + 1/2*denom(1/2*s12)*mt^4*s23*s24 - 2*denom(1/2*s12)*mt^4*s14*s24
       + denom(1/2*s12)*mt^4*s14*s23 - 1/2*denom(1/2*s12)*mt^4*s14^2 - 2*
      denom(1/2*s12)*mt^4*s13*s24 - 1/2*denom(1/2*s12)*mt^4*s13*s14 - denom(1/
      2*s12)*mt^4*s12*s24 - 1/2*denom(1/2*s12)*mt^4*s12*s14 + denom(1/2*s12)*
      mt^4*mh^2*s24 + 1/2*denom(1/2*s12)*mt^4*mh^2*s14 + 2*denom(1/2*s12)*mt^6
      *s24 - denom(1/2*s12)*mt^6*s23 + denom(1/2*s12)*mt^6*s13 + 1/2*denom(1/2
      *s12)*mt^6*s12 - 1/2*denom(1/2*s12)*mt^6*mh^2 + 1/4*denom(1/4*s12^2)*
      s14^2*s23*s24^2 - 1/4*denom(1/4*s12^2)*s13*s14*s24^3 + 1/4*denom(1/4*
      s12^2)*mt^2*s14*s24^3 - 1/2*denom(1/4*s12^2)*mt^2*s14*s23*s24^2 - 1/4*
      denom(1/4*s12^2)*mt^2*s14^2*s24^2 - 1/2*denom(1/4*s12^2)*mt^2*s14^2*s23*
      s24 + 1/4*denom(1/4*s12^2)*mt^2*s13*s24^3 + 3/4*denom(1/4*s12^2)*mt^2*
      s13*s14*s24^2 - 1/4*denom(1/4*s12^2)*mt^4*s24^3 + 1/4*denom(1/4*s12^2)*
      mt^4*s23*s24^2 - 1/4*denom(1/4*s12^2)*mt^4*s14*s24^2 + denom(1/4*s12^2)*
      mt^4*s14*s23*s24 + 1/2*denom(1/4*s12^2)*mt^4*s14^2*s24 + 1/4*denom(1/4*
      s12^2)*mt^4*s14^2*s23 - 3/4*denom(1/4*s12^2)*mt^4*s13*s24^2 - 3/4*denom(
      1/4*s12^2)*mt^4*s13*s14*s24 + 1/2*denom(1/4*s12^2)*mt^6*s24^2 - 1/2*
      denom(1/4*s12^2)*mt^6*s23*s24 - 1/4*denom(1/4*s12^2)*mt^6*s14*s24 - 1/2*
      denom(1/4*s12^2)*mt^6*s14*s23 - 1/4*denom(1/4*s12^2)*mt^6*s14^2 + 3/4*
      denom(1/4*s12^2)*mt^6*s13*s24 + 1/4*denom(1/4*s12^2)*mt^6*s13*s14 - 1/4*
      denom(1/4*s12^2)*mt^8*s24 + 1/4*denom(1/4*s12^2)*mt^8*s23 + 1/4*denom(1/
      4*s12^2)*mt^8*s14 - 1/4*denom(1/4*s12^2)*mt^8*s13;
 
 .sort
id KMatrix(4,30) =   - 1/2*s14*s24^2 - s14*s23*s24 - 1/2*s14*s23^2 - s14^2*s24
       - s14^2*s23 - 1/2*s14^3 - s13*s14*s24 - s13*s14*s23 - s13*s14^2 - 1/2*
      s13^2*s14 - s12*s14*s24 - s12*s14*s23 - s12*s14^2 - s12*s13*s14 - 1/2*
      s12^2*s14 + mh^2*s14*s24 + mh^2*s14*s23 + mh^2*s14^2 + mh^2*s13*s14 + 
      mh^2*s12*s14 - 1/2*mh^4*s14 + 1/2*mt^2*s24^2 + mt^2*s23*s24 + 1/2*mt^2*
      s23^2 + 3*mt^2*s14*s24 + 3*mt^2*s14*s23 + 5/2*mt^2*s14^2 + 2*mt^2*s13*
      s14 - 1/2*mt^2*s13^2 + mt^2*s12*s24 + mt^2*s12*s23 + 3*mt^2*s12*s14 + 1/
      2*mt^2*s12^2 - mt^2*mh^2*s24 - mt^2*mh^2*s23 - 3*mt^2*mh^2*s14 - mt^2*
      mh^2*s12 + 1/2*mt^2*mh^4 - mt^4*s24 - mt^4*s23 - 3*mt^4*s14 + mt^4*s13
       - mt^4*s12 + mt^4*mh^2 - 1/2*denom(1/2*s12)*s14^2*s23*s24 - 1/2*denom(1/
      2*s12)*s14^2*s23^2 - 1/2*denom(1/2*s12)*s14^3*s23 - 1/2*denom(1/2*s12)*
      s13*s14^2*s23 - 1/2*denom(1/2*s12)*s12*s14^2*s23 + 1/2*denom(1/2*s12)*
      mh^2*s14^2*s23 + denom(1/2*s12)*mt^2*s14*s23*s24 + denom(1/2*s12)*mt^2*
      s14*s23^2 + 1/2*denom(1/2*s12)*mt^2*s14^2*s24 + 5/2*denom(1/2*s12)*mt^2*
      s14^2*s23 + 1/2*denom(1/2*s12)*mt^2*s14^3 + 1/2*denom(1/2*s12)*mt^2*s13*
      s14*s23 + 1/2*denom(1/2*s12)*mt^2*s13*s14^2 - 1/2*denom(1/2*s12)*mt^2*
      s13^2*s24 + denom(1/2*s12)*mt^2*s12*s14*s23 + 1/2*denom(1/2*s12)*mt^2*
      s12*s14^2 - denom(1/2*s12)*mt^2*mh^2*s14*s23 - 1/2*denom(1/2*s12)*mt^2*
      mh^2*s14^2 - 1/2*denom(1/2*s12)*mt^4*s23*s24 - 1/2*denom(1/2*s12)*mt^4*
      s23^2 - denom(1/2*s12)*mt^4*s14*s24 - 3*denom(1/2*s12)*mt^4*s14*s23 - 2*
      denom(1/2*s12)*mt^4*s14^2 + denom(1/2*s12)*mt^4*s13*s24 - 1/2*denom(1/2*
      s12)*mt^4*s13*s14 + 1/2*denom(1/2*s12)*mt^4*s13^2 - 1/2*denom(1/2*s12)*
      mt^4*s12*s23 - denom(1/2*s12)*mt^4*s12*s14 + 1/2*denom(1/2*s12)*mt^4*
      mh^2*s23 + denom(1/2*s12)*mt^4*mh^2*s14 + denom(1/2*s12)*mt^6*s23 + 2*
      denom(1/2*s12)*mt^6*s14 - denom(1/2*s12)*mt^6*s13 + 1/2*denom(1/2*s12)*
      mt^6*s12 - 1/2*denom(1/2*s12)*mt^6*mh^2 - 1/8*denom(1/4*s12^2)*s14^3*
      s23^2 + 1/8*denom(1/4*s12^2)*s13^2*s14*s24^2 + 3/8*denom(1/4*s12^2)*mt^2
      *s14^2*s23^2 + 1/4*denom(1/4*s12^2)*mt^2*s14^3*s23 - 1/4*denom(1/4*s12^2
      )*mt^2*s13*s14*s24^2 - 1/8*denom(1/4*s12^2)*mt^2*s13^2*s24^2 - 1/4*
      denom(1/4*s12^2)*mt^2*s13^2*s14*s24 + 1/8*denom(1/4*s12^2)*mt^4*s14*
      s24^2 - 3/8*denom(1/4*s12^2)*mt^4*s14*s23^2 - 3/4*denom(1/4*s12^2)*mt^4*
      s14^2*s23 - 1/8*denom(1/4*s12^2)*mt^4*s14^3 + 1/4*denom(1/4*s12^2)*mt^4*
      s13*s24^2 + 1/2*denom(1/4*s12^2)*mt^4*s13*s14*s24 + 1/4*denom(1/4*s12^2)
      *mt^4*s13^2*s24 + 1/8*denom(1/4*s12^2)*mt^4*s13^2*s14 - 1/8*denom(1/4*
      s12^2)*mt^6*s24^2 + 1/8*denom(1/4*s12^2)*mt^6*s23^2 - 1/4*denom(1/4*
      s12^2)*mt^6*s14*s24 + 3/4*denom(1/4*s12^2)*mt^6*s14*s23 + 3/8*denom(1/4*
      s12^2)*mt^6*s14^2 - 1/2*denom(1/4*s12^2)*mt^6*s13*s24 - 1/4*denom(1/4*
      s12^2)*mt^6*s13*s14 - 1/8*denom(1/4*s12^2)*mt^6*s13^2 + 1/4*denom(1/4*
      s12^2)*mt^8*s24 - 1/4*denom(1/4*s12^2)*mt^8*s23 - 1/4*denom(1/4*s12^2)*
      mt^8*s14 + 1/4*denom(1/4*s12^2)*mt^8*s13;
 
 .sort
id KMatrix(4,31) =   - 1/2*s24^3 - s23*s24^2 - 1/2*s23^2*s24 - s14*s24^2 - s14
      *s23*s24 - 1/2*s14^2*s24 - s13*s24^2 - s13*s23*s24 - s13*s14*s24 - 1/2*
      s13^2*s24 - s12*s24^2 - s12*s23*s24 - s12*s14*s24 - s12*s13*s24 - 1/2*
      s12^2*s24 + mh^2*s24^2 + mh^2*s23*s24 + mh^2*s14*s24 + mh^2*s13*s24 + 
      mh^2*s12*s24 - 1/2*mh^4*s24 + 5/2*mt^2*s24^2 + 2*mt^2*s23*s24 - 1/2*mt^2
      *s23^2 + 3*mt^2*s14*s24 + 1/2*mt^2*s14^2 + 3*mt^2*s13*s24 + mt^2*s13*s14
       + 1/2*mt^2*s13^2 + 3*mt^2*s12*s24 + mt^2*s12*s14 + mt^2*s12*s13 + 1/2*
      mt^2*s12^2 - 3*mt^2*mh^2*s24 - mt^2*mh^2*s14 - mt^2*mh^2*s13 - mt^2*mh^2
      *s12 + 1/2*mt^2*mh^4 - 3*mt^4*s24 + mt^4*s23 - mt^4*s14 - mt^4*s13 - 
      mt^4*s12 + mt^4*mh^2 - 1/2*denom(1/2*s12)*s13*s24^3 - 1/2*denom(1/2*s12)
      *s13*s23*s24^2 - 1/2*denom(1/2*s12)*s13*s14*s24^2 - 1/2*denom(1/2*s12)*
      s13^2*s24^2 - 1/2*denom(1/2*s12)*s12*s13*s24^2 + 1/2*denom(1/2*s12)*mh^2
      *s13*s24^2 + 1/2*denom(1/2*s12)*mt^2*s24^3 + 1/2*denom(1/2*s12)*mt^2*s23
      *s24^2 + 1/2*denom(1/2*s12)*mt^2*s14*s24^2 - 1/2*denom(1/2*s12)*mt^2*s14
      *s23^2 + 5/2*denom(1/2*s12)*mt^2*s13*s24^2 + 1/2*denom(1/2*s12)*mt^2*s13
      *s23*s24 + denom(1/2*s12)*mt^2*s13*s14*s24 + denom(1/2*s12)*mt^2*s13^2*
      s24 + 1/2*denom(1/2*s12)*mt^2*s12*s24^2 + denom(1/2*s12)*mt^2*s12*s13*
      s24 - 1/2*denom(1/2*s12)*mt^2*mh^2*s24^2 - denom(1/2*s12)*mt^2*mh^2*s13*
      s24 - 2*denom(1/2*s12)*mt^4*s24^2 - 1/2*denom(1/2*s12)*mt^4*s23*s24 + 1/
      2*denom(1/2*s12)*mt^4*s23^2 - denom(1/2*s12)*mt^4*s14*s24 + denom(1/2*
      s12)*mt^4*s14*s23 - 3*denom(1/2*s12)*mt^4*s13*s24 - 1/2*denom(1/2*s12)*
      mt^4*s13*s14 - 1/2*denom(1/2*s12)*mt^4*s13^2 - denom(1/2*s12)*mt^4*s12*
      s24 - 1/2*denom(1/2*s12)*mt^4*s12*s13 + denom(1/2*s12)*mt^4*mh^2*s24 + 1/
      2*denom(1/2*s12)*mt^4*mh^2*s13 + 2*denom(1/2*s12)*mt^6*s24 - denom(1/2*
      s12)*mt^6*s23 + denom(1/2*s12)*mt^6*s13 + 1/2*denom(1/2*s12)*mt^6*s12 - 
      1/2*denom(1/2*s12)*mt^6*mh^2 + 1/8*denom(1/4*s12^2)*s14^2*s23^2*s24 - 1/
      8*denom(1/4*s12^2)*s13^2*s24^3 - 1/4*denom(1/4*s12^2)*mt^2*s14*s23^2*s24
       - 1/4*denom(1/4*s12^2)*mt^2*s14^2*s23*s24 - 1/8*denom(1/4*s12^2)*mt^2*
      s14^2*s23^2 + 1/4*denom(1/4*s12^2)*mt^2*s13*s24^3 + 3/8*denom(1/4*s12^2)
      *mt^2*s13^2*s24^2 - 1/8*denom(1/4*s12^2)*mt^4*s24^3 + 1/8*denom(1/4*
      s12^2)*mt^4*s23^2*s24 + 1/2*denom(1/4*s12^2)*mt^4*s14*s23*s24 + 1/4*
      denom(1/4*s12^2)*mt^4*s14*s23^2 + 1/8*denom(1/4*s12^2)*mt^4*s14^2*s24 + 
      1/4*denom(1/4*s12^2)*mt^4*s14^2*s23 - 3/4*denom(1/4*s12^2)*mt^4*s13*
      s24^2 - 3/8*denom(1/4*s12^2)*mt^4*s13^2*s24 + 3/8*denom(1/4*s12^2)*mt^6*
      s24^2 - 1/4*denom(1/4*s12^2)*mt^6*s23*s24 - 1/8*denom(1/4*s12^2)*mt^6*
      s23^2 - 1/4*denom(1/4*s12^2)*mt^6*s14*s24 - 1/2*denom(1/4*s12^2)*mt^6*
      s14*s23 - 1/8*denom(1/4*s12^2)*mt^6*s14^2 + 3/4*denom(1/4*s12^2)*mt^6*
      s13*s24 + 1/8*denom(1/4*s12^2)*mt^6*s13^2 - 1/4*denom(1/4*s12^2)*mt^8*
      s24 + 1/4*denom(1/4*s12^2)*mt^8*s23 + 1/4*denom(1/4*s12^2)*mt^8*s14 - 1/
      4*denom(1/4*s12^2)*mt^8*s13;
 
 .sort
id KMatrix(4,32) =  mt^2*s14*s24 + mt^2*s14*s23 + mt^2*s14^2 + mt^2*s13*s14 + 
      mt^2*s12*s14 - mt^2*mh^2*s14 - mt^4*s24 - mt^4*s23 - 3*mt^4*s14 + mt^4*
      s13 - mt^4*s12 + mt^4*mh^2 - 1/2*denom(1/2*s12)*s14^2*s24^2 - 1/2*denom(
      1/2*s12)*s14^2*s23*s24 - 1/2*denom(1/2*s12)*s14^3*s24 - 1/2*denom(1/2*
      s12)*s13*s14^2*s24 - 1/2*denom(1/2*s12)*s12*s14^2*s24 + 1/2*denom(1/2*
      s12)*mh^2*s14^2*s24 + denom(1/2*s12)*mt^2*s14*s24^2 + denom(1/2*s12)*
      mt^2*s14*s23*s24 + 5/2*denom(1/2*s12)*mt^2*s14^2*s24 + denom(1/2*s12)*
      mt^2*s14^2*s23 + 1/2*denom(1/2*s12)*mt^2*s14^3 - 1/2*denom(1/2*s12)*mt^2
      *s13*s14*s24 + 1/2*denom(1/2*s12)*mt^2*s13*s14^2 + denom(1/2*s12)*mt^2*
      s12*s14*s24 + 1/2*denom(1/2*s12)*mt^2*s12*s14^2 - denom(1/2*s12)*mt^2*
      mh^2*s14*s24 - 1/2*denom(1/2*s12)*mt^2*mh^2*s14^2 - 1/2*denom(1/2*s12)*
      mt^4*s24^2 - 1/2*denom(1/2*s12)*mt^4*s23*s24 - 2*denom(1/2*s12)*mt^4*s14
      *s24 - 2*denom(1/2*s12)*mt^4*s14*s23 - 5/2*denom(1/2*s12)*mt^4*s14^2 + 
      denom(1/2*s12)*mt^4*s13*s24 + 1/2*denom(1/2*s12)*mt^4*s13*s14 - 1/2*
      denom(1/2*s12)*mt^4*s12*s24 - denom(1/2*s12)*mt^4*s12*s14 + 1/2*denom(1/
      2*s12)*mt^4*mh^2*s24 + denom(1/2*s12)*mt^4*mh^2*s14 + denom(1/2*s12)*
      mt^6*s23 + 2*denom(1/2*s12)*mt^6*s14 - denom(1/2*s12)*mt^6*s13 + 1/2*
      denom(1/2*s12)*mt^6*s12 - 1/2*denom(1/2*s12)*mt^6*mh^2 - 1/4*denom(1/4*
      s12^2)*s14^3*s23*s24 + 1/4*denom(1/4*s12^2)*s13*s14^2*s24^2 - 1/4*denom(
      1/4*s12^2)*mt^2*s14^2*s24^2 + 3/4*denom(1/4*s12^2)*mt^2*s14^2*s23*s24 + 
      1/4*denom(1/4*s12^2)*mt^2*s14^3*s24 + 1/4*denom(1/4*s12^2)*mt^2*s14^3*
      s23 - 1/2*denom(1/4*s12^2)*mt^2*s13*s14*s24^2 - 1/2*denom(1/4*s12^2)*
      mt^2*s13*s14^2*s24 + 1/2*denom(1/4*s12^2)*mt^4*s14*s24^2 - 3/4*denom(1/4
      *s12^2)*mt^4*s14*s23*s24 - 1/4*denom(1/4*s12^2)*mt^4*s14^2*s24 - 3/4*
      denom(1/4*s12^2)*mt^4*s14^2*s23 - 1/4*denom(1/4*s12^2)*mt^4*s14^3 + 1/4*
      denom(1/4*s12^2)*mt^4*s13*s24^2 + denom(1/4*s12^2)*mt^4*s13*s14*s24 + 1/
      4*denom(1/4*s12^2)*mt^4*s13*s14^2 - 1/4*denom(1/4*s12^2)*mt^6*s24^2 + 1/
      4*denom(1/4*s12^2)*mt^6*s23*s24 - 1/4*denom(1/4*s12^2)*mt^6*s14*s24 + 3/
      4*denom(1/4*s12^2)*mt^6*s14*s23 + 1/2*denom(1/4*s12^2)*mt^6*s14^2 - 1/2*
      denom(1/4*s12^2)*mt^6*s13*s24 - 1/2*denom(1/4*s12^2)*mt^6*s13*s14 + 1/4*
      denom(1/4*s12^2)*mt^8*s24 - 1/4*denom(1/4*s12^2)*mt^8*s23 - 1/4*denom(1/
      4*s12^2)*mt^8*s14 + 1/4*denom(1/4*s12^2)*mt^8*s13;
 
 .sort
id KMatrix(4,33) =  mt^2*s24^2 + mt^2*s23*s24 + mt^2*s14*s24 + mt^2*s13*s24 + 
      mt^2*s12*s24 - mt^2*mh^2*s24 - 3*mt^4*s24 + mt^4*s23 - mt^4*s14 - mt^4*
      s13 - mt^4*s12 + mt^4*mh^2 - 1/2*denom(1/2*s12)*s14*s24^3 - 1/2*denom(1/
      2*s12)*s14*s23*s24^2 - 1/2*denom(1/2*s12)*s14^2*s24^2 - 1/2*denom(1/2*
      s12)*s13*s14*s24^2 - 1/2*denom(1/2*s12)*s12*s14*s24^2 + 1/2*denom(1/2*
      s12)*mh^2*s14*s24^2 + 1/2*denom(1/2*s12)*mt^2*s24^3 + 1/2*denom(1/2*s12)
      *mt^2*s23*s24^2 + 5/2*denom(1/2*s12)*mt^2*s14*s24^2 - 1/2*denom(1/2*s12)
      *mt^2*s14*s23*s24 + denom(1/2*s12)*mt^2*s14^2*s24 + denom(1/2*s12)*mt^2*
      s13*s24^2 + denom(1/2*s12)*mt^2*s13*s14*s24 + 1/2*denom(1/2*s12)*mt^2*
      s12*s24^2 + denom(1/2*s12)*mt^2*s12*s14*s24 - 1/2*denom(1/2*s12)*mt^2*
      mh^2*s24^2 - denom(1/2*s12)*mt^2*mh^2*s14*s24 - 5/2*denom(1/2*s12)*mt^4*
      s24^2 + 1/2*denom(1/2*s12)*mt^4*s23*s24 - 2*denom(1/2*s12)*mt^4*s14*s24
       + denom(1/2*s12)*mt^4*s14*s23 - 1/2*denom(1/2*s12)*mt^4*s14^2 - 2*
      denom(1/2*s12)*mt^4*s13*s24 - 1/2*denom(1/2*s12)*mt^4*s13*s14 - denom(1/
      2*s12)*mt^4*s12*s24 - 1/2*denom(1/2*s12)*mt^4*s12*s14 + denom(1/2*s12)*
      mt^4*mh^2*s24 + 1/2*denom(1/2*s12)*mt^4*mh^2*s14 + 2*denom(1/2*s12)*mt^6
      *s24 - denom(1/2*s12)*mt^6*s23 + denom(1/2*s12)*mt^6*s13 + 1/2*denom(1/2
      *s12)*mt^6*s12 - 1/2*denom(1/2*s12)*mt^6*mh^2 + 1/4*denom(1/4*s12^2)*
      s14^2*s23*s24^2 - 1/4*denom(1/4*s12^2)*s13*s14*s24^3 + 1/4*denom(1/4*
      s12^2)*mt^2*s14*s24^3 - 1/2*denom(1/4*s12^2)*mt^2*s14*s23*s24^2 - 1/4*
      denom(1/4*s12^2)*mt^2*s14^2*s24^2 - 1/2*denom(1/4*s12^2)*mt^2*s14^2*s23*
      s24 + 1/4*denom(1/4*s12^2)*mt^2*s13*s24^3 + 3/4*denom(1/4*s12^2)*mt^2*
      s13*s14*s24^2 - 1/4*denom(1/4*s12^2)*mt^4*s24^3 + 1/4*denom(1/4*s12^2)*
      mt^4*s23*s24^2 - 1/4*denom(1/4*s12^2)*mt^4*s14*s24^2 + denom(1/4*s12^2)*
      mt^4*s14*s23*s24 + 1/2*denom(1/4*s12^2)*mt^4*s14^2*s24 + 1/4*denom(1/4*
      s12^2)*mt^4*s14^2*s23 - 3/4*denom(1/4*s12^2)*mt^4*s13*s24^2 - 3/4*denom(
      1/4*s12^2)*mt^4*s13*s14*s24 + 1/2*denom(1/4*s12^2)*mt^6*s24^2 - 1/2*
      denom(1/4*s12^2)*mt^6*s23*s24 - 1/4*denom(1/4*s12^2)*mt^6*s14*s24 - 1/2*
      denom(1/4*s12^2)*mt^6*s14*s23 - 1/4*denom(1/4*s12^2)*mt^6*s14^2 + 3/4*
      denom(1/4*s12^2)*mt^6*s13*s24 + 1/4*denom(1/4*s12^2)*mt^6*s13*s14 - 1/4*
      denom(1/4*s12^2)*mt^8*s24 + 1/4*denom(1/4*s12^2)*mt^8*s23 + 1/4*denom(1/
      4*s12^2)*mt^8*s14 - 1/4*denom(1/4*s12^2)*mt^8*s13;
 
 .sort
id KMatrix(4,34) =  2*mt^3*s14 - 2*mt^3*s13 - 2*denom(1/2*s12)*mt*s14^2*s24 + 
      2*denom(1/2*s12)*mt*s13*s14*s24 + 2*denom(1/2*s12)*mt^3*s14*s24 + 2*
      denom(1/2*s12)*mt^3*s14^2 - 2*denom(1/2*s12)*mt^3*s13*s24 - 2*denom(1/2*
      s12)*mt^3*s13*s14 - 2*denom(1/2*s12)*mt^5*s14 + 2*denom(1/2*s12)*mt^5*
      s13 + 1/2*denom(1/4*s12^2)*mt*s12*s14^2*s24 - 1/2*denom(1/4*s12^2)*mt*
      s12*s13*s14*s24 - 1/2*denom(1/4*s12^2)*mt^3*s12*s14*s24 - 1/2*denom(1/4*
      s12^2)*mt^3*s12*s14^2 + 1/2*denom(1/4*s12^2)*mt^3*s12*s13*s24 + 1/2*
      denom(1/4*s12^2)*mt^3*s12*s13*s14 + 1/2*denom(1/4*s12^2)*mt^5*s12*s14 - 
      1/2*denom(1/4*s12^2)*mt^5*s12*s13;
 
 .sort
id KMatrix(4,35) =  2*mt^3*s24 - 2*mt^3*s23 - 2*denom(1/2*s12)*mt*s14*s24^2 + 
      2*denom(1/2*s12)*mt*s14*s23*s24 + 2*denom(1/2*s12)*mt^3*s24^2 - 2*denom(
      1/2*s12)*mt^3*s23*s24 + 2*denom(1/2*s12)*mt^3*s14*s24 - 2*denom(1/2*s12)
      *mt^3*s14*s23 - 2*denom(1/2*s12)*mt^5*s24 + 2*denom(1/2*s12)*mt^5*s23 + 
      1/2*denom(1/4*s12^2)*mt*s12*s14*s24^2 - 1/2*denom(1/4*s12^2)*mt*s12*s14*
      s23*s24 - 1/2*denom(1/4*s12^2)*mt^3*s12*s24^2 + 1/2*denom(1/4*s12^2)*
      mt^3*s12*s23*s24 - 1/2*denom(1/4*s12^2)*mt^3*s12*s14*s24 + 1/2*denom(1/4
      *s12^2)*mt^3*s12*s14*s23 + 1/2*denom(1/4*s12^2)*mt^5*s12*s24 - 1/2*
      denom(1/4*s12^2)*mt^5*s12*s23;
 
 .sort
id KMatrix(4,36) =  mt^2*s14*s23 - mt^2*s13*s24 - mt^2*s12*s24 - mt^2*s12*s23
       - mt^2*s12*s14 - mt^2*s12*s13 - mt^2*s12^2 + mt^2*mh^2*s12 + mt^4*s24
       - mt^4*s23 - mt^4*s14 + mt^4*s13 - denom(1/2*s12)*s14^2*s23*s24 + 
      denom(1/2*s12)*s13*s14*s24^2 + denom(1/2*s12)*s12*s14*s24^2 + denom(1/2*
      s12)*s12*s14*s23*s24 + denom(1/2*s12)*s12*s14^2*s24 + denom(1/2*s12)*s12
      *s13*s14*s24 + denom(1/2*s12)*s12^2*s14*s24 - denom(1/2*s12)*mh^2*s12*
      s14*s24 - denom(1/2*s12)*mt^2*s14*s24^2 + 2*denom(1/2*s12)*mt^2*s14*s23*
      s24 + denom(1/2*s12)*mt^2*s14^2*s24 + denom(1/2*s12)*mt^2*s14^2*s23 - 
      denom(1/2*s12)*mt^2*s13*s24^2 - 2*denom(1/2*s12)*mt^2*s13*s14*s24 - 
      denom(1/2*s12)*mt^2*s12*s24^2 - denom(1/2*s12)*mt^2*s12*s23*s24 - 2*
      denom(1/2*s12)*mt^2*s12*s14*s24 - denom(1/2*s12)*mt^2*s12*s14*s23 - 
      denom(1/2*s12)*mt^2*s12*s14^2 - denom(1/2*s12)*mt^2*s12*s13*s24 - denom(
      1/2*s12)*mt^2*s12*s13*s14 - denom(1/2*s12)*mt^2*s12^2*s24 - denom(1/2*
      s12)*mt^2*s12^2*s14 + denom(1/2*s12)*mt^2*mh^2*s12*s24 + denom(1/2*s12)*
      mt^2*mh^2*s12*s14 + denom(1/2*s12)*mt^4*s24^2 - denom(1/2*s12)*mt^4*s23*
      s24 - 2*denom(1/2*s12)*mt^4*s14*s23 - denom(1/2*s12)*mt^4*s14^2 + 2*
      denom(1/2*s12)*mt^4*s13*s24 + denom(1/2*s12)*mt^4*s13*s14 + denom(1/2*
      s12)*mt^4*s12*s24 + denom(1/2*s12)*mt^4*s12*s23 + denom(1/2*s12)*mt^4*
      s12*s14 + denom(1/2*s12)*mt^4*s12*s13 + denom(1/2*s12)*mt^4*s12^2 - 
      denom(1/2*s12)*mt^4*mh^2*s12 - denom(1/2*s12)*mt^6*s24 + denom(1/2*s12)*
      mt^6*s23 + denom(1/2*s12)*mt^6*s14 - denom(1/2*s12)*mt^6*s13 + 1/4*
      denom(1/4*s12^2)*s12*s14^2*s23*s24 - 1/4*denom(1/4*s12^2)*s12*s13*s14*
      s24^2 - 1/4*denom(1/4*s12^2)*s12^2*s14*s24^2 - 1/4*denom(1/4*s12^2)*
      s12^2*s14*s23*s24 - 1/4*denom(1/4*s12^2)*s12^2*s14^2*s24 - 1/4*denom(1/4
      *s12^2)*s12^2*s13*s14*s24 - 1/4*denom(1/4*s12^2)*s12^3*s14*s24 + 1/4*
      denom(1/4*s12^2)*mh^2*s12^2*s14*s24 + 1/4*denom(1/4*s12^2)*mt^2*s12*s14*
      s24^2 - 1/2*denom(1/4*s12^2)*mt^2*s12*s14*s23*s24 - 1/4*denom(1/4*s12^2)
      *mt^2*s12*s14^2*s24 - 1/4*denom(1/4*s12^2)*mt^2*s12*s14^2*s23 + 1/4*
      denom(1/4*s12^2)*mt^2*s12*s13*s24^2 + 1/2*denom(1/4*s12^2)*mt^2*s12*s13*
      s14*s24 + 1/4*denom(1/4*s12^2)*mt^2*s12^2*s24^2 + 1/4*denom(1/4*s12^2)*
      mt^2*s12^2*s23*s24 + 1/2*denom(1/4*s12^2)*mt^2*s12^2*s14*s24 + 1/4*
      denom(1/4*s12^2)*mt^2*s12^2*s14*s23 + 1/4*denom(1/4*s12^2)*mt^2*s12^2*
      s14^2 + 1/4*denom(1/4*s12^2)*mt^2*s12^2*s13*s24 + 1/4*denom(1/4*s12^2)*
      mt^2*s12^2*s13*s14 + 1/4*denom(1/4*s12^2)*mt^2*s12^3*s24 + 1/4*denom(1/4
      *s12^2)*mt^2*s12^3*s14 - 1/4*denom(1/4*s12^2)*mt^2*mh^2*s12^2*s24 - 1/4*
      denom(1/4*s12^2)*mt^2*mh^2*s12^2*s14 - 1/4*denom(1/4*s12^2)*mt^4*s12*
      s24^2 + 1/4*denom(1/4*s12^2)*mt^4*s12*s23*s24 + 1/2*denom(1/4*s12^2)*
      mt^4*s12*s14*s23 + 1/4*denom(1/4*s12^2)*mt^4*s12*s14^2 - 1/2*denom(1/4*
      s12^2)*mt^4*s12*s13*s24 - 1/4*denom(1/4*s12^2)*mt^4*s12*s13*s14 - 1/4*
      denom(1/4*s12^2)*mt^4*s12^2*s24 - 1/4*denom(1/4*s12^2)*mt^4*s12^2*s23 - 
      1/4*denom(1/4*s12^2)*mt^4*s12^2*s14 - 1/4*denom(1/4*s12^2)*mt^4*s12^2*
      s13 - 1/4*denom(1/4*s12^2)*mt^4*s12^3 + 1/4*denom(1/4*s12^2)*mt^4*mh^2*
      s12^2 + 1/4*denom(1/4*s12^2)*mt^6*s12*s24 - 1/4*denom(1/4*s12^2)*mt^6*
      s12*s23 - 1/4*denom(1/4*s12^2)*mt^6*s12*s14 + 1/4*denom(1/4*s12^2)*mt^6*
      s12*s13;
 
 .sort
id KMatrix(5,1) =  2*mt^5*s14 - 2*mt^5*s13 - 2*denom(1/2*s12)*mt^3*s13*s14*s23
       + 2*denom(1/2*s12)*mt^3*s13^2*s23 + 2*denom(1/2*s12)*mt^5*s14*s23 - 2*
      denom(1/2*s12)*mt^5*s13*s23 + 2*denom(1/2*s12)*mt^5*s13*s14 - 2*denom(1/
      2*s12)*mt^5*s13^2 - 2*denom(1/2*s12)*mt^7*s14 + 2*denom(1/2*s12)*mt^7*
      s13 + 1/2*denom(1/4*s12^2)*mt*s13^2*s14*s23^2 - 1/2*denom(1/4*s12^2)*mt*
      s13^3*s23^2 - denom(1/4*s12^2)*mt^3*s13*s14*s23^2 + denom(1/4*s12^2)*
      mt^3*s13^2*s23^2 - denom(1/4*s12^2)*mt^3*s13^2*s14*s23 + denom(1/4*s12^2
      )*mt^3*s13^3*s23 + 1/2*denom(1/4*s12^2)*mt^5*s14*s23^2 - 1/2*denom(1/4*
      s12^2)*mt^5*s13*s23^2 + 2*denom(1/4*s12^2)*mt^5*s13*s14*s23 - 2*denom(1/
      4*s12^2)*mt^5*s13^2*s23 + 1/2*denom(1/4*s12^2)*mt^5*s13^2*s14 - 1/2*
      denom(1/4*s12^2)*mt^5*s13^3 - denom(1/4*s12^2)*mt^7*s14*s23 + denom(1/4*
      s12^2)*mt^7*s13*s23 - denom(1/4*s12^2)*mt^7*s13*s14 + denom(1/4*s12^2)*
      mt^7*s13^2 + 1/2*denom(1/4*s12^2)*mt^9*s14 - 1/2*denom(1/4*s12^2)*mt^9*
      s13;
 
 .sort
id KMatrix(5,2) =   - mt^3*s14*s24 - mt^3*s14*s23 - mt^3*s14^2 + mt^3*s13*s24
       + mt^3*s13*s23 + mt^3*s13^2 - mt^3*s12*s14 + mt^3*s12*s13 + mt^3*mh^2*
      s14 - mt^3*mh^2*s13 + 2*mt^5*s14 - 2*mt^5*s13 + 1/2*denom(1/2*s12)*mt*
      s13*s14*s23*s24 + 1/2*denom(1/2*s12)*mt*s13*s14*s23^2 + 1/2*denom(1/2*
      s12)*mt*s13*s14^2*s23 - 1/2*denom(1/2*s12)*mt*s13^2*s23*s24 - 1/2*denom(
      1/2*s12)*mt*s13^2*s23^2 - 1/2*denom(1/2*s12)*mt*s13^3*s23 + 1/2*denom(1/
      2*s12)*mt*s12*s13*s14*s23 - 1/2*denom(1/2*s12)*mt*s12*s13^2*s23 - 1/2*
      denom(1/2*s12)*mt*mh^2*s13*s14*s23 + 1/2*denom(1/2*s12)*mt*mh^2*s13^2*
      s23 - 1/2*denom(1/2*s12)*mt^3*s14*s23*s24 - 1/2*denom(1/2*s12)*mt^3*s14*
      s23^2 - denom(1/2*s12)*mt^3*s14^2*s23 + 1/2*denom(1/2*s12)*mt^3*s13*s23*
      s24 + 1/2*denom(1/2*s12)*mt^3*s13*s23^2 - denom(1/2*s12)*mt^3*s13*s14*
      s24 - denom(1/2*s12)*mt^3*s13*s14*s23 - 1/2*denom(1/2*s12)*mt^3*s13*
      s14^2 + denom(1/2*s12)*mt^3*s13^2*s24 + 2*denom(1/2*s12)*mt^3*s13^2*s23
       + 1/2*denom(1/2*s12)*mt^3*s13^3 - 1/2*denom(1/2*s12)*mt^3*s12*s14*s23
       + 1/2*denom(1/2*s12)*mt^3*s12*s13*s23 - 1/2*denom(1/2*s12)*mt^3*s12*s13
      *s14 + 1/2*denom(1/2*s12)*mt^3*s12*s13^2 + 1/2*denom(1/2*s12)*mt^3*mh^2*
      s14*s23 - 1/2*denom(1/2*s12)*mt^3*mh^2*s13*s23 + 1/2*denom(1/2*s12)*mt^3
      *mh^2*s13*s14 - 1/2*denom(1/2*s12)*mt^3*mh^2*s13^2 + denom(1/2*s12)*mt^5
      *s14*s24 + 2*denom(1/2*s12)*mt^5*s14*s23 + denom(1/2*s12)*mt^5*s14^2 - 
      denom(1/2*s12)*mt^5*s13*s24 - 2*denom(1/2*s12)*mt^5*s13*s23 + denom(1/2*
      s12)*mt^5*s13*s14 - 2*denom(1/2*s12)*mt^5*s13^2 + 1/2*denom(1/2*s12)*
      mt^5*s12*s14 - 1/2*denom(1/2*s12)*mt^5*s12*s13 - 1/2*denom(1/2*s12)*mt^5
      *mh^2*s14 + 1/2*denom(1/2*s12)*mt^5*mh^2*s13 - 2*denom(1/2*s12)*mt^7*s14
       + 2*denom(1/2*s12)*mt^7*s13 + 1/4*denom(1/4*s12^2)*mt*s13*s14^2*s23^2
       + 1/4*denom(1/4*s12^2)*mt*s13^2*s14*s23*s24 - 1/4*denom(1/4*s12^2)*mt*
      s13^2*s14*s23^2 - 1/4*denom(1/4*s12^2)*mt*s13^3*s23*s24 - 1/4*denom(1/4*
      s12^2)*mt^3*s14^2*s23^2 - 1/2*denom(1/4*s12^2)*mt^3*s13*s14*s23*s24 - 1/
      2*denom(1/4*s12^2)*mt^3*s13*s14^2*s23 + 1/2*denom(1/4*s12^2)*mt^3*s13^2*
      s23*s24 + 1/4*denom(1/4*s12^2)*mt^3*s13^2*s23^2 - 1/4*denom(1/4*s12^2)*
      mt^3*s13^2*s14*s24 + 1/4*denom(1/4*s12^2)*mt^3*s13^2*s14*s23 + 1/4*
      denom(1/4*s12^2)*mt^3*s13^3*s24 + 1/4*denom(1/4*s12^2)*mt^3*s13^3*s23 + 
      1/4*denom(1/4*s12^2)*mt^5*s14*s23*s24 + 1/4*denom(1/4*s12^2)*mt^5*s14*
      s23^2 + 1/2*denom(1/4*s12^2)*mt^5*s14^2*s23 - 1/4*denom(1/4*s12^2)*mt^5*
      s13*s23*s24 - 1/4*denom(1/4*s12^2)*mt^5*s13*s23^2 + 1/2*denom(1/4*s12^2)
      *mt^5*s13*s14*s24 + 1/2*denom(1/4*s12^2)*mt^5*s13*s14*s23 + 1/4*denom(1/
      4*s12^2)*mt^5*s13*s14^2 - 1/2*denom(1/4*s12^2)*mt^5*s13^2*s24 - denom(1/
      4*s12^2)*mt^5*s13^2*s23 - 1/4*denom(1/4*s12^2)*mt^5*s13^3 - 1/4*denom(1/
      4*s12^2)*mt^7*s14*s24 - 3/4*denom(1/4*s12^2)*mt^7*s14*s23 - 1/4*denom(1/
      4*s12^2)*mt^7*s14^2 + 1/4*denom(1/4*s12^2)*mt^7*s13*s24 + 3/4*denom(1/4*
      s12^2)*mt^7*s13*s23 - 1/2*denom(1/4*s12^2)*mt^7*s13*s14 + 3/4*denom(1/4*
      s12^2)*mt^7*s13^2 + 1/2*denom(1/4*s12^2)*mt^9*s14 - 1/2*denom(1/4*s12^2)
      *mt^9*s13;
 
 .sort
id KMatrix(5,3) =   - mt^3*s14*s24 - mt^3*s14*s23 - mt^3*s14^2 + mt^3*s13*s24
       + mt^3*s13*s23 + mt^3*s13^2 - mt^3*s12*s14 + mt^3*s12*s13 + mt^3*mh^2*
      s14 - mt^3*mh^2*s13 + 2*mt^5*s14 - 2*mt^5*s13 + 1/2*denom(1/2*s12)*mt*
      s13*s14*s23*s24 + 1/2*denom(1/2*s12)*mt*s13*s14*s23^2 + 1/2*denom(1/2*
      s12)*mt*s13*s14^2*s23 - 1/2*denom(1/2*s12)*mt*s13^2*s23*s24 - 1/2*denom(
      1/2*s12)*mt*s13^2*s23^2 - 1/2*denom(1/2*s12)*mt*s13^3*s23 + 1/2*denom(1/
      2*s12)*mt*s12*s13*s14*s23 - 1/2*denom(1/2*s12)*mt*s12*s13^2*s23 - 1/2*
      denom(1/2*s12)*mt*mh^2*s13*s14*s23 + 1/2*denom(1/2*s12)*mt*mh^2*s13^2*
      s23 - 1/2*denom(1/2*s12)*mt^3*s14*s23*s24 - 1/2*denom(1/2*s12)*mt^3*s14*
      s23^2 - denom(1/2*s12)*mt^3*s14^2*s23 + 1/2*denom(1/2*s12)*mt^3*s13*s23*
      s24 + 1/2*denom(1/2*s12)*mt^3*s13*s23^2 - denom(1/2*s12)*mt^3*s13*s14*
      s24 - denom(1/2*s12)*mt^3*s13*s14*s23 - 1/2*denom(1/2*s12)*mt^3*s13*
      s14^2 + denom(1/2*s12)*mt^3*s13^2*s24 + 2*denom(1/2*s12)*mt^3*s13^2*s23
       + 1/2*denom(1/2*s12)*mt^3*s13^3 - 1/2*denom(1/2*s12)*mt^3*s12*s14*s23
       + 1/2*denom(1/2*s12)*mt^3*s12*s13*s23 - 1/2*denom(1/2*s12)*mt^3*s12*s13
      *s14 + 1/2*denom(1/2*s12)*mt^3*s12*s13^2 + 1/2*denom(1/2*s12)*mt^3*mh^2*
      s14*s23 - 1/2*denom(1/2*s12)*mt^3*mh^2*s13*s23 + 1/2*denom(1/2*s12)*mt^3
      *mh^2*s13*s14 - 1/2*denom(1/2*s12)*mt^3*mh^2*s13^2 + denom(1/2*s12)*mt^5
      *s14*s24 + 2*denom(1/2*s12)*mt^5*s14*s23 + denom(1/2*s12)*mt^5*s14^2 - 
      denom(1/2*s12)*mt^5*s13*s24 - 2*denom(1/2*s12)*mt^5*s13*s23 + denom(1/2*
      s12)*mt^5*s13*s14 - 2*denom(1/2*s12)*mt^5*s13^2 + 1/2*denom(1/2*s12)*
      mt^5*s12*s14 - 1/2*denom(1/2*s12)*mt^5*s12*s13 - 1/2*denom(1/2*s12)*mt^5
      *mh^2*s14 + 1/2*denom(1/2*s12)*mt^5*mh^2*s13 - 2*denom(1/2*s12)*mt^7*s14
       + 2*denom(1/2*s12)*mt^7*s13 + 1/4*denom(1/4*s12^2)*mt*s13*s14^2*s23^2
       + 1/4*denom(1/4*s12^2)*mt*s13^2*s14*s23*s24 - 1/4*denom(1/4*s12^2)*mt*
      s13^2*s14*s23^2 - 1/4*denom(1/4*s12^2)*mt*s13^3*s23*s24 - 1/4*denom(1/4*
      s12^2)*mt^3*s14^2*s23^2 - 1/2*denom(1/4*s12^2)*mt^3*s13*s14*s23*s24 - 1/
      2*denom(1/4*s12^2)*mt^3*s13*s14^2*s23 + 1/2*denom(1/4*s12^2)*mt^3*s13^2*
      s23*s24 + 1/4*denom(1/4*s12^2)*mt^3*s13^2*s23^2 - 1/4*denom(1/4*s12^2)*
      mt^3*s13^2*s14*s24 + 1/4*denom(1/4*s12^2)*mt^3*s13^2*s14*s23 + 1/4*
      denom(1/4*s12^2)*mt^3*s13^3*s24 + 1/4*denom(1/4*s12^2)*mt^3*s13^3*s23 + 
      1/4*denom(1/4*s12^2)*mt^5*s14*s23*s24 + 1/4*denom(1/4*s12^2)*mt^5*s14*
      s23^2 + 1/2*denom(1/4*s12^2)*mt^5*s14^2*s23 - 1/4*denom(1/4*s12^2)*mt^5*
      s13*s23*s24 - 1/4*denom(1/4*s12^2)*mt^5*s13*s23^2 + 1/2*denom(1/4*s12^2)
      *mt^5*s13*s14*s24 + 1/2*denom(1/4*s12^2)*mt^5*s13*s14*s23 + 1/4*denom(1/
      4*s12^2)*mt^5*s13*s14^2 - 1/2*denom(1/4*s12^2)*mt^5*s13^2*s24 - denom(1/
      4*s12^2)*mt^5*s13^2*s23 - 1/4*denom(1/4*s12^2)*mt^5*s13^3 - 1/4*denom(1/
      4*s12^2)*mt^7*s14*s24 - 3/4*denom(1/4*s12^2)*mt^7*s14*s23 - 1/4*denom(1/
      4*s12^2)*mt^7*s14^2 + 1/4*denom(1/4*s12^2)*mt^7*s13*s24 + 3/4*denom(1/4*
      s12^2)*mt^7*s13*s23 - 1/2*denom(1/4*s12^2)*mt^7*s13*s14 + 3/4*denom(1/4*
      s12^2)*mt^7*s13^2 + 1/2*denom(1/4*s12^2)*mt^9*s14 - 1/2*denom(1/4*s12^2)
      *mt^9*s13;
 
 .sort
id KMatrix(5,4) =  1/2*mt*s14*s24^2 + mt*s14*s23*s24 + 1/2*mt*s14*s23^2 + mt*
      s14^2*s24 + mt*s14^2*s23 + 1/2*mt*s14^3 - 1/2*mt*s13*s24^2 - mt*s13*s23*
      s24 - 1/2*mt*s13*s23^2 + 1/2*mt*s13*s14^2 - mt*s13^2*s24 - mt*s13^2*s23
       - 1/2*mt*s13^2*s14 - 1/2*mt*s13^3 + mt*s12*s14*s24 + mt*s12*s14*s23 + 
      mt*s12*s14^2 - mt*s12*s13*s24 - mt*s12*s13*s23 - mt*s12*s13^2 + 1/2*mt*
      s12^2*s14 - 1/2*mt*s12^2*s13 - mt*mh^2*s14*s24 - mt*mh^2*s14*s23 - mt*
      mh^2*s14^2 + mt*mh^2*s13*s24 + mt*mh^2*s13*s23 + mt*mh^2*s13^2 - mt*mh^2
      *s12*s14 + mt*mh^2*s12*s13 + 1/2*mt*mh^4*s14 - 1/2*mt*mh^4*s13 - 2*mt^3*
      s14*s24 - 2*mt^3*s14*s23 - 2*mt^3*s14^2 + 2*mt^3*s13*s24 + 2*mt^3*s13*
      s23 + 2*mt^3*s13^2 - 2*mt^3*s12*s14 + 2*mt^3*s12*s13 + 2*mt^3*mh^2*s14
       - 2*mt^3*mh^2*s13 + 2*mt^5*s14 - 2*mt^5*s13 + 1/2*denom(1/2*s12)*mt*
      s14^2*s23*s24 + 1/2*denom(1/2*s12)*mt*s14^2*s23^2 + 1/2*denom(1/2*s12)*
      mt*s14^3*s23 + 1/2*denom(1/2*s12)*mt*s13*s14*s24^2 - 1/2*denom(1/2*s12)*
      mt*s13*s14*s23^2 + 1/2*denom(1/2*s12)*mt*s13*s14^2*s24 - 1/2*denom(1/2*
      s12)*mt*s13^2*s24^2 - 1/2*denom(1/2*s12)*mt*s13^2*s23*s24 - 1/2*denom(1/
      2*s12)*mt*s13^2*s14*s23 - 1/2*denom(1/2*s12)*mt*s13^3*s24 + 1/2*denom(1/
      2*s12)*mt*s12*s14^2*s23 + 1/2*denom(1/2*s12)*mt*s12*s13*s14*s24 - 1/2*
      denom(1/2*s12)*mt*s12*s13*s14*s23 - 1/2*denom(1/2*s12)*mt*s12*s13^2*s24
       - 1/2*denom(1/2*s12)*mt*mh^2*s14^2*s23 - 1/2*denom(1/2*s12)*mt*mh^2*s13
      *s14*s24 + 1/2*denom(1/2*s12)*mt*mh^2*s13*s14*s23 + 1/2*denom(1/2*s12)*
      mt*mh^2*s13^2*s24 - 1/2*denom(1/2*s12)*mt^3*s14*s24^2 - denom(1/2*s12)*
      mt^3*s14*s23*s24 - 1/2*denom(1/2*s12)*mt^3*s14*s23^2 - denom(1/2*s12)*
      mt^3*s14^2*s24 - 2*denom(1/2*s12)*mt^3*s14^2*s23 - 1/2*denom(1/2*s12)*
      mt^3*s14^3 + 1/2*denom(1/2*s12)*mt^3*s13*s24^2 + denom(1/2*s12)*mt^3*s13
      *s23*s24 + 1/2*denom(1/2*s12)*mt^3*s13*s23^2 - denom(1/2*s12)*mt^3*s13*
      s14*s24 + denom(1/2*s12)*mt^3*s13*s14*s23 - 1/2*denom(1/2*s12)*mt^3*s13*
      s14^2 + 2*denom(1/2*s12)*mt^3*s13^2*s24 + denom(1/2*s12)*mt^3*s13^2*s23
       + 1/2*denom(1/2*s12)*mt^3*s13^2*s14 + 1/2*denom(1/2*s12)*mt^3*s13^3 - 1/
      2*denom(1/2*s12)*mt^3*s12*s14*s24 - 1/2*denom(1/2*s12)*mt^3*s12*s14*s23
       - 1/2*denom(1/2*s12)*mt^3*s12*s14^2 + 1/2*denom(1/2*s12)*mt^3*s12*s13*
      s24 + 1/2*denom(1/2*s12)*mt^3*s12*s13*s23 + 1/2*denom(1/2*s12)*mt^3*s12*
      s13^2 + 1/2*denom(1/2*s12)*mt^3*mh^2*s14*s24 + 1/2*denom(1/2*s12)*mt^3*
      mh^2*s14*s23 + 1/2*denom(1/2*s12)*mt^3*mh^2*s14^2 - 1/2*denom(1/2*s12)*
      mt^3*mh^2*s13*s24 - 1/2*denom(1/2*s12)*mt^3*mh^2*s13*s23 - 1/2*denom(1/2
      *s12)*mt^3*mh^2*s13^2 + 2*denom(1/2*s12)*mt^5*s14*s24 + 2*denom(1/2*s12)
      *mt^5*s14*s23 + 2*denom(1/2*s12)*mt^5*s14^2 - 2*denom(1/2*s12)*mt^5*s13*
      s24 - 2*denom(1/2*s12)*mt^5*s13*s23 - 2*denom(1/2*s12)*mt^5*s13^2 + 
      denom(1/2*s12)*mt^5*s12*s14 - denom(1/2*s12)*mt^5*s12*s13 - denom(1/2*
      s12)*mt^5*mh^2*s14 + denom(1/2*s12)*mt^5*mh^2*s13 - 2*denom(1/2*s12)*
      mt^7*s14 + 2*denom(1/2*s12)*mt^7*s13 + 1/8*denom(1/4*s12^2)*mt*s14^3*
      s23^2 + 1/4*denom(1/4*s12^2)*mt*s13*s14^2*s23*s24 - 1/8*denom(1/4*s12^2)
      *mt*s13*s14^2*s23^2 + 1/8*denom(1/4*s12^2)*mt*s13^2*s14*s24^2 - 1/4*
      denom(1/4*s12^2)*mt*s13^2*s14*s23*s24 - 1/8*denom(1/4*s12^2)*mt*s13^3*
      s24^2 - 1/4*denom(1/4*s12^2)*mt^3*s14^2*s23*s24 - 1/4*denom(1/4*s12^2)*
      mt^3*s14^2*s23^2 - 1/4*denom(1/4*s12^2)*mt^3*s14^3*s23 - 1/4*denom(1/4*
      s12^2)*mt^3*s13*s14*s24^2 + 1/4*denom(1/4*s12^2)*mt^3*s13*s14*s23^2 - 1/
      4*denom(1/4*s12^2)*mt^3*s13*s14^2*s24 + 1/4*denom(1/4*s12^2)*mt^3*s13^2*
      s24^2 + 1/4*denom(1/4*s12^2)*mt^3*s13^2*s23*s24 + 1/4*denom(1/4*s12^2)*
      mt^3*s13^2*s14*s23 + 1/4*denom(1/4*s12^2)*mt^3*s13^3*s24 + 1/8*denom(1/4
      *s12^2)*mt^5*s14*s24^2 + 1/4*denom(1/4*s12^2)*mt^5*s14*s23*s24 + 1/8*
      denom(1/4*s12^2)*mt^5*s14*s23^2 + 1/4*denom(1/4*s12^2)*mt^5*s14^2*s24 + 
      3/4*denom(1/4*s12^2)*mt^5*s14^2*s23 + 1/8*denom(1/4*s12^2)*mt^5*s14^3 - 
      1/8*denom(1/4*s12^2)*mt^5*s13*s24^2 - 1/4*denom(1/4*s12^2)*mt^5*s13*s23*
      s24 - 1/8*denom(1/4*s12^2)*mt^5*s13*s23^2 + 1/2*denom(1/4*s12^2)*mt^5*
      s13*s14*s24 - 1/2*denom(1/4*s12^2)*mt^5*s13*s14*s23 + 1/8*denom(1/4*
      s12^2)*mt^5*s13*s14^2 - 3/4*denom(1/4*s12^2)*mt^5*s13^2*s24 - 1/4*denom(
      1/4*s12^2)*mt^5*s13^2*s23 - 1/8*denom(1/4*s12^2)*mt^5*s13^2*s14 - 1/8*
      denom(1/4*s12^2)*mt^5*s13^3 - 1/2*denom(1/4*s12^2)*mt^7*s14*s24 - 1/2*
      denom(1/4*s12^2)*mt^7*s14*s23 - 1/2*denom(1/4*s12^2)*mt^7*s14^2 + 1/2*
      denom(1/4*s12^2)*mt^7*s13*s24 + 1/2*denom(1/4*s12^2)*mt^7*s13*s23 + 1/2*
      denom(1/4*s12^2)*mt^7*s13^2 + 1/2*denom(1/4*s12^2)*mt^9*s14 - 1/2*denom(
      1/4*s12^2)*mt^9*s13;
 
 .sort
id KMatrix(5,5) =  2*mt^4*s13*s14 - 2*mt^6*s14 - 2*mt^6*s13 + 2*mt^8 - 2*
      denom(1/2*s12)*mt^2*s13^2*s14*s23 + 4*denom(1/2*s12)*mt^4*s13*s14*s23 + 
      2*denom(1/2*s12)*mt^4*s13^2*s23 + 2*denom(1/2*s12)*mt^4*s13^2*s14 - 2*
      denom(1/2*s12)*mt^6*s14*s23 - 4*denom(1/2*s12)*mt^6*s13*s23 - 4*denom(1/
      2*s12)*mt^6*s13*s14 - 2*denom(1/2*s12)*mt^6*s13^2 + 2*denom(1/2*s12)*
      mt^8*s23 + 2*denom(1/2*s12)*mt^8*s14 + 4*denom(1/2*s12)*mt^8*s13 - 2*
      denom(1/2*s12)*mt^10 + 1/2*denom(1/4*s12^2)*s13^3*s14*s23^2 - 3/2*denom(
      1/4*s12^2)*mt^2*s13^2*s14*s23^2 - 1/2*denom(1/4*s12^2)*mt^2*s13^3*s23^2
       - denom(1/4*s12^2)*mt^2*s13^3*s14*s23 + 3/2*denom(1/4*s12^2)*mt^4*s13*
      s14*s23^2 + 3/2*denom(1/4*s12^2)*mt^4*s13^2*s23^2 + 3*denom(1/4*s12^2)*
      mt^4*s13^2*s14*s23 + denom(1/4*s12^2)*mt^4*s13^3*s23 + 1/2*denom(1/4*
      s12^2)*mt^4*s13^3*s14 - 1/2*denom(1/4*s12^2)*mt^6*s14*s23^2 - 3/2*denom(
      1/4*s12^2)*mt^6*s13*s23^2 - 3*denom(1/4*s12^2)*mt^6*s13*s14*s23 - 3*
      denom(1/4*s12^2)*mt^6*s13^2*s23 - 3/2*denom(1/4*s12^2)*mt^6*s13^2*s14 - 
      1/2*denom(1/4*s12^2)*mt^6*s13^3 + 1/2*denom(1/4*s12^2)*mt^8*s23^2 + 
      denom(1/4*s12^2)*mt^8*s14*s23 + 3*denom(1/4*s12^2)*mt^8*s13*s23 + 3/2*
      denom(1/4*s12^2)*mt^8*s13*s14 + 3/2*denom(1/4*s12^2)*mt^8*s13^2 - denom(
      1/4*s12^2)*mt^10*s23 - 1/2*denom(1/4*s12^2)*mt^10*s14 - 3/2*denom(1/4*
      s12^2)*mt^10*s13 + 1/2*denom(1/4*s12^2)*mt^12;
 
 .sort
id KMatrix(5,6) =   - mt^2*s13*s14*s24 - mt^2*s13*s14*s23 - mt^2*s13*s14^2 - 
      mt^2*s13^2*s14 - mt^2*s12*s13*s14 + mt^2*mh^2*s13*s14 + mt^4*s14*s24 + 
      mt^4*s14*s23 + mt^4*s14^2 + mt^4*s13*s24 + mt^4*s13*s23 + 4*mt^4*s13*s14
       + mt^4*s13^2 + mt^4*s12*s14 + mt^4*s12*s13 - mt^4*mh^2*s14 - mt^4*mh^2*
      s13 - mt^6*s24 - mt^6*s23 - 3*mt^6*s14 - 3*mt^6*s13 - mt^6*s12 + mt^6*
      mh^2 + 2*mt^8 + 1/2*denom(1/2*s12)*s13^2*s14*s23*s24 + 1/2*denom(1/2*s12
      )*s13^2*s14*s23^2 + 1/2*denom(1/2*s12)*s13^2*s14^2*s23 + 1/2*denom(1/2*
      s12)*s13^3*s14*s23 + 1/2*denom(1/2*s12)*s12*s13^2*s14*s23 - 1/2*denom(1/
      2*s12)*mh^2*s13^2*s14*s23 - denom(1/2*s12)*mt^2*s13*s14*s23*s24 - denom(
      1/2*s12)*mt^2*s13*s14*s23^2 - 3/2*denom(1/2*s12)*mt^2*s13*s14^2*s23 - 1/
      2*denom(1/2*s12)*mt^2*s13^2*s23*s24 - 1/2*denom(1/2*s12)*mt^2*s13^2*
      s23^2 - denom(1/2*s12)*mt^2*s13^2*s14*s24 - 3*denom(1/2*s12)*mt^2*s13^2*
      s14*s23 - 1/2*denom(1/2*s12)*mt^2*s13^2*s14^2 - 1/2*denom(1/2*s12)*mt^2*
      s13^3*s23 - 1/2*denom(1/2*s12)*mt^2*s13^3*s14 - denom(1/2*s12)*mt^2*s12*
      s13*s14*s23 - 1/2*denom(1/2*s12)*mt^2*s12*s13^2*s23 - 1/2*denom(1/2*s12)
      *mt^2*s12*s13^2*s14 + denom(1/2*s12)*mt^2*mh^2*s13*s14*s23 + 1/2*denom(1/
      2*s12)*mt^2*mh^2*s13^2*s23 + 1/2*denom(1/2*s12)*mt^2*mh^2*s13^2*s14 + 1/
      2*denom(1/2*s12)*mt^4*s14*s23*s24 + 1/2*denom(1/2*s12)*mt^4*s14*s23^2 + 
      denom(1/2*s12)*mt^4*s14^2*s23 + denom(1/2*s12)*mt^4*s13*s23*s24 + denom(
      1/2*s12)*mt^4*s13*s23^2 + 2*denom(1/2*s12)*mt^4*s13*s14*s24 + 11/2*
      denom(1/2*s12)*mt^4*s13*s14*s23 + 3/2*denom(1/2*s12)*mt^4*s13*s14^2 + 
      denom(1/2*s12)*mt^4*s13^2*s24 + 5/2*denom(1/2*s12)*mt^4*s13^2*s23 + 3*
      denom(1/2*s12)*mt^4*s13^2*s14 + 1/2*denom(1/2*s12)*mt^4*s13^3 + 1/2*
      denom(1/2*s12)*mt^4*s12*s14*s23 + denom(1/2*s12)*mt^4*s12*s13*s23 + 
      denom(1/2*s12)*mt^4*s12*s13*s14 + 1/2*denom(1/2*s12)*mt^4*s12*s13^2 - 1/
      2*denom(1/2*s12)*mt^4*mh^2*s14*s23 - denom(1/2*s12)*mt^4*mh^2*s13*s23 - 
      denom(1/2*s12)*mt^4*mh^2*s13*s14 - 1/2*denom(1/2*s12)*mt^4*mh^2*s13^2 - 
      1/2*denom(1/2*s12)*mt^6*s23*s24 - 1/2*denom(1/2*s12)*mt^6*s23^2 - denom(
      1/2*s12)*mt^6*s14*s24 - 3*denom(1/2*s12)*mt^6*s14*s23 - denom(1/2*s12)*
      mt^6*s14^2 - 2*denom(1/2*s12)*mt^6*s13*s24 - 4*denom(1/2*s12)*mt^6*s13*
      s23 - 11/2*denom(1/2*s12)*mt^6*s13*s14 - 5/2*denom(1/2*s12)*mt^6*s13^2
       - 1/2*denom(1/2*s12)*mt^6*s12*s23 - 1/2*denom(1/2*s12)*mt^6*s12*s14 - 
      denom(1/2*s12)*mt^6*s12*s13 + 1/2*denom(1/2*s12)*mt^6*mh^2*s23 + 1/2*
      denom(1/2*s12)*mt^6*mh^2*s14 + denom(1/2*s12)*mt^6*mh^2*s13 + denom(1/2*
      s12)*mt^8*s24 + 2*denom(1/2*s12)*mt^8*s23 + 3*denom(1/2*s12)*mt^8*s14 + 
      4*denom(1/2*s12)*mt^8*s13 + 1/2*denom(1/2*s12)*mt^8*s12 - 1/2*denom(1/2*
      s12)*mt^8*mh^2 - 2*denom(1/2*s12)*mt^10 + 1/4*denom(1/4*s12^2)*s13^2*
      s14^2*s23^2 + 1/4*denom(1/4*s12^2)*s13^3*s14*s23*s24 - 1/2*denom(1/4*
      s12^2)*mt^2*s13*s14^2*s23^2 - 3/4*denom(1/4*s12^2)*mt^2*s13^2*s14*s23*
      s24 - 1/2*denom(1/4*s12^2)*mt^2*s13^2*s14*s23^2 - 1/2*denom(1/4*s12^2)*
      mt^2*s13^2*s14^2*s23 - 1/4*denom(1/4*s12^2)*mt^2*s13^3*s23*s24 - 1/4*
      denom(1/4*s12^2)*mt^2*s13^3*s14*s24 - 1/4*denom(1/4*s12^2)*mt^2*s13^3*
      s14*s23 + 1/4*denom(1/4*s12^2)*mt^4*s14^2*s23^2 + 3/4*denom(1/4*s12^2)*
      mt^4*s13*s14*s23*s24 + denom(1/4*s12^2)*mt^4*s13*s14*s23^2 + denom(1/4*
      s12^2)*mt^4*s13*s14^2*s23 + 3/4*denom(1/4*s12^2)*mt^4*s13^2*s23*s24 + 1/
      4*denom(1/4*s12^2)*mt^4*s13^2*s23^2 + 3/4*denom(1/4*s12^2)*mt^4*s13^2*
      s14*s24 + 7/4*denom(1/4*s12^2)*mt^4*s13^2*s14*s23 + 1/4*denom(1/4*s12^2)
      *mt^4*s13^2*s14^2 + 1/4*denom(1/4*s12^2)*mt^4*s13^3*s24 + 1/4*denom(1/4*
      s12^2)*mt^4*s13^3*s23 + 1/4*denom(1/4*s12^2)*mt^4*s13^3*s14 - 1/4*denom(
      1/4*s12^2)*mt^6*s14*s23*s24 - 1/2*denom(1/4*s12^2)*mt^6*s14*s23^2 - 1/2*
      denom(1/4*s12^2)*mt^6*s14^2*s23 - 3/4*denom(1/4*s12^2)*mt^6*s13*s23*s24
       - 1/2*denom(1/4*s12^2)*mt^6*s13*s23^2 - 3/4*denom(1/4*s12^2)*mt^6*s13*
      s14*s24 - 11/4*denom(1/4*s12^2)*mt^6*s13*s14*s23 - 1/2*denom(1/4*s12^2)*
      mt^6*s13*s14^2 - 3/4*denom(1/4*s12^2)*mt^6*s13^2*s24 - 5/4*denom(1/4*
      s12^2)*mt^6*s13^2*s23 - 5/4*denom(1/4*s12^2)*mt^6*s13^2*s14 - 1/4*denom(
      1/4*s12^2)*mt^6*s13^3 + 1/4*denom(1/4*s12^2)*mt^8*s23*s24 + 1/4*denom(1/
      4*s12^2)*mt^8*s23^2 + 1/4*denom(1/4*s12^2)*mt^8*s14*s24 + 5/4*denom(1/4*
      s12^2)*mt^8*s14*s23 + 1/4*denom(1/4*s12^2)*mt^8*s14^2 + 3/4*denom(1/4*
      s12^2)*mt^8*s13*s24 + 7/4*denom(1/4*s12^2)*mt^8*s13*s23 + 7/4*denom(1/4*
      s12^2)*mt^8*s13*s14 + denom(1/4*s12^2)*mt^8*s13^2 - 1/4*denom(1/4*s12^2)
      *mt^10*s24 - 3/4*denom(1/4*s12^2)*mt^10*s23 - 3/4*denom(1/4*s12^2)*mt^10
      *s14 - 5/4*denom(1/4*s12^2)*mt^10*s13 + 1/2*denom(1/4*s12^2)*mt^12;
 
 .sort
id KMatrix(5,7) =   - mt^2*s13*s14*s24 - mt^2*s13*s14*s23 - mt^2*s13*s14^2 - 
      mt^2*s13^2*s14 - mt^2*s12*s13*s14 + mt^2*mh^2*s13*s14 + mt^4*s14*s24 + 
      mt^4*s14*s23 + mt^4*s14^2 + mt^4*s13*s24 + mt^4*s13*s23 + 4*mt^4*s13*s14
       + mt^4*s13^2 + mt^4*s12*s14 + mt^4*s12*s13 - mt^4*mh^2*s14 - mt^4*mh^2*
      s13 - mt^6*s24 - mt^6*s23 - 3*mt^6*s14 - 3*mt^6*s13 - mt^6*s12 + mt^6*
      mh^2 + 2*mt^8 + 1/2*denom(1/2*s12)*s13^2*s14*s23*s24 + 1/2*denom(1/2*s12
      )*s13^2*s14*s23^2 + 1/2*denom(1/2*s12)*s13^2*s14^2*s23 + 1/2*denom(1/2*
      s12)*s13^3*s14*s23 + 1/2*denom(1/2*s12)*s12*s13^2*s14*s23 - 1/2*denom(1/
      2*s12)*mh^2*s13^2*s14*s23 - denom(1/2*s12)*mt^2*s13*s14*s23*s24 - denom(
      1/2*s12)*mt^2*s13*s14*s23^2 - 3/2*denom(1/2*s12)*mt^2*s13*s14^2*s23 - 1/
      2*denom(1/2*s12)*mt^2*s13^2*s23*s24 - 1/2*denom(1/2*s12)*mt^2*s13^2*
      s23^2 - denom(1/2*s12)*mt^2*s13^2*s14*s24 - 3*denom(1/2*s12)*mt^2*s13^2*
      s14*s23 - 1/2*denom(1/2*s12)*mt^2*s13^2*s14^2 - 1/2*denom(1/2*s12)*mt^2*
      s13^3*s23 - 1/2*denom(1/2*s12)*mt^2*s13^3*s14 - denom(1/2*s12)*mt^2*s12*
      s13*s14*s23 - 1/2*denom(1/2*s12)*mt^2*s12*s13^2*s23 - 1/2*denom(1/2*s12)
      *mt^2*s12*s13^2*s14 + denom(1/2*s12)*mt^2*mh^2*s13*s14*s23 + 1/2*denom(1/
      2*s12)*mt^2*mh^2*s13^2*s23 + 1/2*denom(1/2*s12)*mt^2*mh^2*s13^2*s14 + 1/
      2*denom(1/2*s12)*mt^4*s14*s23*s24 + 1/2*denom(1/2*s12)*mt^4*s14*s23^2 + 
      denom(1/2*s12)*mt^4*s14^2*s23 + denom(1/2*s12)*mt^4*s13*s23*s24 + denom(
      1/2*s12)*mt^4*s13*s23^2 + 2*denom(1/2*s12)*mt^4*s13*s14*s24 + 11/2*
      denom(1/2*s12)*mt^4*s13*s14*s23 + 3/2*denom(1/2*s12)*mt^4*s13*s14^2 + 
      denom(1/2*s12)*mt^4*s13^2*s24 + 5/2*denom(1/2*s12)*mt^4*s13^2*s23 + 3*
      denom(1/2*s12)*mt^4*s13^2*s14 + 1/2*denom(1/2*s12)*mt^4*s13^3 + 1/2*
      denom(1/2*s12)*mt^4*s12*s14*s23 + denom(1/2*s12)*mt^4*s12*s13*s23 + 
      denom(1/2*s12)*mt^4*s12*s13*s14 + 1/2*denom(1/2*s12)*mt^4*s12*s13^2 - 1/
      2*denom(1/2*s12)*mt^4*mh^2*s14*s23 - denom(1/2*s12)*mt^4*mh^2*s13*s23 - 
      denom(1/2*s12)*mt^4*mh^2*s13*s14 - 1/2*denom(1/2*s12)*mt^4*mh^2*s13^2 - 
      1/2*denom(1/2*s12)*mt^6*s23*s24 - 1/2*denom(1/2*s12)*mt^6*s23^2 - denom(
      1/2*s12)*mt^6*s14*s24 - 3*denom(1/2*s12)*mt^6*s14*s23 - denom(1/2*s12)*
      mt^6*s14^2 - 2*denom(1/2*s12)*mt^6*s13*s24 - 4*denom(1/2*s12)*mt^6*s13*
      s23 - 11/2*denom(1/2*s12)*mt^6*s13*s14 - 5/2*denom(1/2*s12)*mt^6*s13^2
       - 1/2*denom(1/2*s12)*mt^6*s12*s23 - 1/2*denom(1/2*s12)*mt^6*s12*s14 - 
      denom(1/2*s12)*mt^6*s12*s13 + 1/2*denom(1/2*s12)*mt^6*mh^2*s23 + 1/2*
      denom(1/2*s12)*mt^6*mh^2*s14 + denom(1/2*s12)*mt^6*mh^2*s13 + denom(1/2*
      s12)*mt^8*s24 + 2*denom(1/2*s12)*mt^8*s23 + 3*denom(1/2*s12)*mt^8*s14 + 
      4*denom(1/2*s12)*mt^8*s13 + 1/2*denom(1/2*s12)*mt^8*s12 - 1/2*denom(1/2*
      s12)*mt^8*mh^2 - 2*denom(1/2*s12)*mt^10 + 1/4*denom(1/4*s12^2)*s13^2*
      s14^2*s23^2 + 1/4*denom(1/4*s12^2)*s13^3*s14*s23*s24 - 1/2*denom(1/4*
      s12^2)*mt^2*s13*s14^2*s23^2 - 3/4*denom(1/4*s12^2)*mt^2*s13^2*s14*s23*
      s24 - 1/2*denom(1/4*s12^2)*mt^2*s13^2*s14*s23^2 - 1/2*denom(1/4*s12^2)*
      mt^2*s13^2*s14^2*s23 - 1/4*denom(1/4*s12^2)*mt^2*s13^3*s23*s24 - 1/4*
      denom(1/4*s12^2)*mt^2*s13^3*s14*s24 - 1/4*denom(1/4*s12^2)*mt^2*s13^3*
      s14*s23 + 1/4*denom(1/4*s12^2)*mt^4*s14^2*s23^2 + 3/4*denom(1/4*s12^2)*
      mt^4*s13*s14*s23*s24 + denom(1/4*s12^2)*mt^4*s13*s14*s23^2 + denom(1/4*
      s12^2)*mt^4*s13*s14^2*s23 + 3/4*denom(1/4*s12^2)*mt^4*s13^2*s23*s24 + 1/
      4*denom(1/4*s12^2)*mt^4*s13^2*s23^2 + 3/4*denom(1/4*s12^2)*mt^4*s13^2*
      s14*s24 + 7/4*denom(1/4*s12^2)*mt^4*s13^2*s14*s23 + 1/4*denom(1/4*s12^2)
      *mt^4*s13^2*s14^2 + 1/4*denom(1/4*s12^2)*mt^4*s13^3*s24 + 1/4*denom(1/4*
      s12^2)*mt^4*s13^3*s23 + 1/4*denom(1/4*s12^2)*mt^4*s13^3*s14 - 1/4*denom(
      1/4*s12^2)*mt^6*s14*s23*s24 - 1/2*denom(1/4*s12^2)*mt^6*s14*s23^2 - 1/2*
      denom(1/4*s12^2)*mt^6*s14^2*s23 - 3/4*denom(1/4*s12^2)*mt^6*s13*s23*s24
       - 1/2*denom(1/4*s12^2)*mt^6*s13*s23^2 - 3/4*denom(1/4*s12^2)*mt^6*s13*
      s14*s24 - 11/4*denom(1/4*s12^2)*mt^6*s13*s14*s23 - 1/2*denom(1/4*s12^2)*
      mt^6*s13*s14^2 - 3/4*denom(1/4*s12^2)*mt^6*s13^2*s24 - 5/4*denom(1/4*
      s12^2)*mt^6*s13^2*s23 - 5/4*denom(1/4*s12^2)*mt^6*s13^2*s14 - 1/4*denom(
      1/4*s12^2)*mt^6*s13^3 + 1/4*denom(1/4*s12^2)*mt^8*s23*s24 + 1/4*denom(1/
      4*s12^2)*mt^8*s23^2 + 1/4*denom(1/4*s12^2)*mt^8*s14*s24 + 5/4*denom(1/4*
      s12^2)*mt^8*s14*s23 + 1/4*denom(1/4*s12^2)*mt^8*s14^2 + 3/4*denom(1/4*
      s12^2)*mt^8*s13*s24 + 7/4*denom(1/4*s12^2)*mt^8*s13*s23 + 7/4*denom(1/4*
      s12^2)*mt^8*s13*s14 + denom(1/4*s12^2)*mt^8*s13^2 - 1/4*denom(1/4*s12^2)
      *mt^10*s24 - 3/4*denom(1/4*s12^2)*mt^10*s23 - 3/4*denom(1/4*s12^2)*mt^10
      *s14 - 5/4*denom(1/4*s12^2)*mt^10*s13 + 1/2*denom(1/4*s12^2)*mt^12;
 
 .sort
id KMatrix(5,8) =  1/2*s13*s14*s24^2 + s13*s14*s23*s24 + 1/2*s13*s14*s23^2 + 
      s13*s14^2*s24 + s13*s14^2*s23 + 1/2*s13*s14^3 + s13^2*s14*s24 + s13^2*
      s14*s23 + s13^2*s14^2 + 1/2*s13^3*s14 + s12*s13*s14*s24 + s12*s13*s14*
      s23 + s12*s13*s14^2 + s12*s13^2*s14 + 1/2*s12^2*s13*s14 - mh^2*s13*s14*
      s24 - mh^2*s13*s14*s23 - mh^2*s13*s14^2 - mh^2*s13^2*s14 - mh^2*s12*s13*
      s14 + 1/2*mh^4*s13*s14 - 1/2*mt^2*s14*s24^2 - mt^2*s14*s23*s24 - 1/2*
      mt^2*s14*s23^2 - mt^2*s14^2*s24 - mt^2*s14^2*s23 - 1/2*mt^2*s14^3 - 1/2*
      mt^2*s13*s24^2 - mt^2*s13*s23*s24 - 1/2*mt^2*s13*s23^2 - 4*mt^2*s13*s14*
      s24 - 4*mt^2*s13*s14*s23 - 7/2*mt^2*s13*s14^2 - mt^2*s13^2*s24 - mt^2*
      s13^2*s23 - 7/2*mt^2*s13^2*s14 - 1/2*mt^2*s13^3 - mt^2*s12*s14*s24 - 
      mt^2*s12*s14*s23 - mt^2*s12*s14^2 - mt^2*s12*s13*s24 - mt^2*s12*s13*s23
       - 4*mt^2*s12*s13*s14 - mt^2*s12*s13^2 - 1/2*mt^2*s12^2*s14 - 1/2*mt^2*
      s12^2*s13 + mt^2*mh^2*s14*s24 + mt^2*mh^2*s14*s23 + mt^2*mh^2*s14^2 + 
      mt^2*mh^2*s13*s24 + mt^2*mh^2*s13*s23 + 4*mt^2*mh^2*s13*s14 + mt^2*mh^2*
      s13^2 + mt^2*mh^2*s12*s14 + mt^2*mh^2*s12*s13 - 1/2*mt^2*mh^4*s14 - 1/2*
      mt^2*mh^4*s13 + 1/2*mt^4*s24^2 + mt^4*s23*s24 + 1/2*mt^4*s23^2 + 3*mt^4*
      s14*s24 + 3*mt^4*s14*s23 + 5/2*mt^4*s14^2 + 3*mt^4*s13*s24 + 3*mt^4*s13*
      s23 + 7*mt^4*s13*s14 + 5/2*mt^4*s13^2 + mt^4*s12*s24 + mt^4*s12*s23 + 3*
      mt^4*s12*s14 + 3*mt^4*s12*s13 + 1/2*mt^4*s12^2 - mt^4*mh^2*s24 - mt^4*
      mh^2*s23 - 3*mt^4*mh^2*s14 - 3*mt^4*mh^2*s13 - mt^4*mh^2*s12 + 1/2*mt^4*
      mh^4 - 2*mt^6*s24 - 2*mt^6*s23 - 4*mt^6*s14 - 4*mt^6*s13 - 2*mt^6*s12 + 
      2*mt^6*mh^2 + 2*mt^8 + 1/2*denom(1/2*s12)*s13*s14^2*s23*s24 + 1/2*denom(
      1/2*s12)*s13*s14^2*s23^2 + 1/2*denom(1/2*s12)*s13*s14^3*s23 + 1/2*denom(
      1/2*s12)*s13^2*s14*s24^2 + 1/2*denom(1/2*s12)*s13^2*s14*s23*s24 + 1/2*
      denom(1/2*s12)*s13^2*s14^2*s24 + 1/2*denom(1/2*s12)*s13^2*s14^2*s23 + 1/
      2*denom(1/2*s12)*s13^3*s14*s24 + 1/2*denom(1/2*s12)*s12*s13*s14^2*s23 + 
      1/2*denom(1/2*s12)*s12*s13^2*s14*s24 - 1/2*denom(1/2*s12)*mh^2*s13*s14^2
      *s23 - 1/2*denom(1/2*s12)*mh^2*s13^2*s14*s24 - 1/2*denom(1/2*s12)*mt^2*
      s14^2*s23*s24 - 1/2*denom(1/2*s12)*mt^2*s14^2*s23^2 - 1/2*denom(1/2*s12)
      *mt^2*s14^3*s23 - denom(1/2*s12)*mt^2*s13*s14*s24^2 - 2*denom(1/2*s12)*
      mt^2*s13*s14*s23*s24 - denom(1/2*s12)*mt^2*s13*s14*s23^2 - 3/2*denom(1/2
      *s12)*mt^2*s13*s14^2*s24 - 3*denom(1/2*s12)*mt^2*s13*s14^2*s23 - 1/2*
      denom(1/2*s12)*mt^2*s13*s14^3 - 1/2*denom(1/2*s12)*mt^2*s13^2*s24^2 - 1/
      2*denom(1/2*s12)*mt^2*s13^2*s23*s24 - 3*denom(1/2*s12)*mt^2*s13^2*s14*
      s24 - 3/2*denom(1/2*s12)*mt^2*s13^2*s14*s23 - denom(1/2*s12)*mt^2*s13^2*
      s14^2 - 1/2*denom(1/2*s12)*mt^2*s13^3*s24 - 1/2*denom(1/2*s12)*mt^2*
      s13^3*s14 - 1/2*denom(1/2*s12)*mt^2*s12*s14^2*s23 - denom(1/2*s12)*mt^2*
      s12*s13*s14*s24 - denom(1/2*s12)*mt^2*s12*s13*s14*s23 - 1/2*denom(1/2*
      s12)*mt^2*s12*s13*s14^2 - 1/2*denom(1/2*s12)*mt^2*s12*s13^2*s24 - 1/2*
      denom(1/2*s12)*mt^2*s12*s13^2*s14 + 1/2*denom(1/2*s12)*mt^2*mh^2*s14^2*
      s23 + denom(1/2*s12)*mt^2*mh^2*s13*s14*s24 + denom(1/2*s12)*mt^2*mh^2*
      s13*s14*s23 + 1/2*denom(1/2*s12)*mt^2*mh^2*s13*s14^2 + 1/2*denom(1/2*s12
      )*mt^2*mh^2*s13^2*s24 + 1/2*denom(1/2*s12)*mt^2*mh^2*s13^2*s14 + 1/2*
      denom(1/2*s12)*mt^4*s14*s24^2 + 3/2*denom(1/2*s12)*mt^4*s14*s23*s24 + 
      denom(1/2*s12)*mt^4*s14*s23^2 + denom(1/2*s12)*mt^4*s14^2*s24 + 5/2*
      denom(1/2*s12)*mt^4*s14^2*s23 + 1/2*denom(1/2*s12)*mt^4*s14^3 + denom(1/
      2*s12)*mt^4*s13*s24^2 + 3/2*denom(1/2*s12)*mt^4*s13*s23*s24 + 1/2*denom(
      1/2*s12)*mt^4*s13*s23^2 + 11/2*denom(1/2*s12)*mt^4*s13*s14*s24 + 11/2*
      denom(1/2*s12)*mt^4*s13*s14*s23 + 7/2*denom(1/2*s12)*mt^4*s13*s14^2 + 5/
      2*denom(1/2*s12)*mt^4*s13^2*s24 + denom(1/2*s12)*mt^4*s13^2*s23 + 7/2*
      denom(1/2*s12)*mt^4*s13^2*s14 + 1/2*denom(1/2*s12)*mt^4*s13^3 + 1/2*
      denom(1/2*s12)*mt^4*s12*s14*s24 + denom(1/2*s12)*mt^4*s12*s14*s23 + 1/2*
      denom(1/2*s12)*mt^4*s12*s14^2 + denom(1/2*s12)*mt^4*s12*s13*s24 + 1/2*
      denom(1/2*s12)*mt^4*s12*s13*s23 + 2*denom(1/2*s12)*mt^4*s12*s13*s14 + 1/
      2*denom(1/2*s12)*mt^4*s12*s13^2 - 1/2*denom(1/2*s12)*mt^4*mh^2*s14*s24
       - denom(1/2*s12)*mt^4*mh^2*s14*s23 - 1/2*denom(1/2*s12)*mt^4*mh^2*s14^2
       - denom(1/2*s12)*mt^4*mh^2*s13*s24 - 1/2*denom(1/2*s12)*mt^4*mh^2*s13*
      s23 - 2*denom(1/2*s12)*mt^4*mh^2*s13*s14 - 1/2*denom(1/2*s12)*mt^4*mh^2*
      s13^2 - 1/2*denom(1/2*s12)*mt^6*s24^2 - denom(1/2*s12)*mt^6*s23*s24 - 1/
      2*denom(1/2*s12)*mt^6*s23^2 - 3*denom(1/2*s12)*mt^6*s14*s24 - 4*denom(1/
      2*s12)*mt^6*s14*s23 - 5/2*denom(1/2*s12)*mt^6*s14^2 - 4*denom(1/2*s12)*
      mt^6*s13*s24 - 3*denom(1/2*s12)*mt^6*s13*s23 - 7*denom(1/2*s12)*mt^6*s13
      *s14 - 5/2*denom(1/2*s12)*mt^6*s13^2 - 1/2*denom(1/2*s12)*mt^6*s12*s24
       - 1/2*denom(1/2*s12)*mt^6*s12*s23 - 3/2*denom(1/2*s12)*mt^6*s12*s14 - 3/
      2*denom(1/2*s12)*mt^6*s12*s13 + 1/2*denom(1/2*s12)*mt^6*mh^2*s24 + 1/2*
      denom(1/2*s12)*mt^6*mh^2*s23 + 3/2*denom(1/2*s12)*mt^6*mh^2*s14 + 3/2*
      denom(1/2*s12)*mt^6*mh^2*s13 + 2*denom(1/2*s12)*mt^8*s24 + 2*denom(1/2*
      s12)*mt^8*s23 + 4*denom(1/2*s12)*mt^8*s14 + 4*denom(1/2*s12)*mt^8*s13 + 
      denom(1/2*s12)*mt^8*s12 - denom(1/2*s12)*mt^8*mh^2 - 2*denom(1/2*s12)*
      mt^10 + 1/8*denom(1/4*s12^2)*s13*s14^3*s23^2 + 1/4*denom(1/4*s12^2)*
      s13^2*s14^2*s23*s24 + 1/8*denom(1/4*s12^2)*s13^3*s14*s24^2 - 1/8*denom(1/
      4*s12^2)*mt^2*s14^3*s23^2 - 1/2*denom(1/4*s12^2)*mt^2*s13*s14^2*s23*s24
       - 3/8*denom(1/4*s12^2)*mt^2*s13*s14^2*s23^2 - 1/4*denom(1/4*s12^2)*mt^2
      *s13*s14^3*s23 - 3/8*denom(1/4*s12^2)*mt^2*s13^2*s14*s24^2 - 1/2*denom(1/
      4*s12^2)*mt^2*s13^2*s14*s23*s24 - 1/4*denom(1/4*s12^2)*mt^2*s13^2*s14^2*
      s24 - 1/4*denom(1/4*s12^2)*mt^2*s13^2*s14^2*s23 - 1/8*denom(1/4*s12^2)*
      mt^2*s13^3*s24^2 - 1/4*denom(1/4*s12^2)*mt^2*s13^3*s14*s24 + 1/4*denom(1/
      4*s12^2)*mt^4*s14^2*s23*s24 + 3/8*denom(1/4*s12^2)*mt^4*s14^2*s23^2 + 1/
      4*denom(1/4*s12^2)*mt^4*s14^3*s23 + 3/8*denom(1/4*s12^2)*mt^4*s13*s14*
      s24^2 + denom(1/4*s12^2)*mt^4*s13*s14*s23*s24 + 3/8*denom(1/4*s12^2)*
      mt^4*s13*s14*s23^2 + 1/2*denom(1/4*s12^2)*mt^4*s13*s14^2*s24 + 5/4*
      denom(1/4*s12^2)*mt^4*s13*s14^2*s23 + 1/8*denom(1/4*s12^2)*mt^4*s13*
      s14^3 + 3/8*denom(1/4*s12^2)*mt^4*s13^2*s24^2 + 1/4*denom(1/4*s12^2)*
      mt^4*s13^2*s23*s24 + 5/4*denom(1/4*s12^2)*mt^4*s13^2*s14*s24 + 1/2*
      denom(1/4*s12^2)*mt^4*s13^2*s14*s23 + 1/4*denom(1/4*s12^2)*mt^4*s13^2*
      s14^2 + 1/4*denom(1/4*s12^2)*mt^4*s13^3*s24 + 1/8*denom(1/4*s12^2)*mt^4*
      s13^3*s14 - 1/8*denom(1/4*s12^2)*mt^6*s14*s24^2 - 1/2*denom(1/4*s12^2)*
      mt^6*s14*s23*s24 - 3/8*denom(1/4*s12^2)*mt^6*s14*s23^2 - 1/4*denom(1/4*
      s12^2)*mt^6*s14^2*s24 - denom(1/4*s12^2)*mt^6*s14^2*s23 - 1/8*denom(1/4*
      s12^2)*mt^6*s14^3 - 3/8*denom(1/4*s12^2)*mt^6*s13*s24^2 - 1/2*denom(1/4*
      s12^2)*mt^6*s13*s23*s24 - 1/8*denom(1/4*s12^2)*mt^6*s13*s23^2 - 7/4*
      denom(1/4*s12^2)*mt^6*s13*s14*s24 - 7/4*denom(1/4*s12^2)*mt^6*s13*s14*
      s23 - 7/8*denom(1/4*s12^2)*mt^6*s13*s14^2 - denom(1/4*s12^2)*mt^6*s13^2*
      s24 - 1/4*denom(1/4*s12^2)*mt^6*s13^2*s23 - 7/8*denom(1/4*s12^2)*mt^6*
      s13^2*s14 - 1/8*denom(1/4*s12^2)*mt^6*s13^3 + 1/8*denom(1/4*s12^2)*mt^8*
      s24^2 + 1/4*denom(1/4*s12^2)*mt^8*s23*s24 + 1/8*denom(1/4*s12^2)*mt^8*
      s23^2 + 3/4*denom(1/4*s12^2)*mt^8*s14*s24 + 5/4*denom(1/4*s12^2)*mt^8*
      s14*s23 + 5/8*denom(1/4*s12^2)*mt^8*s14^2 + 5/4*denom(1/4*s12^2)*mt^8*
      s13*s24 + 3/4*denom(1/4*s12^2)*mt^8*s13*s23 + 7/4*denom(1/4*s12^2)*mt^8*
      s13*s14 + 5/8*denom(1/4*s12^2)*mt^8*s13^2 - 1/2*denom(1/4*s12^2)*mt^10*
      s24 - 1/2*denom(1/4*s12^2)*mt^10*s23 - denom(1/4*s12^2)*mt^10*s14 - 
      denom(1/4*s12^2)*mt^10*s13 + 1/2*denom(1/4*s12^2)*mt^12;
 
 .sort
id KMatrix(5,9) =  mt^4*s14*s23 + mt^4*s13*s24 + mt^4*s12*s24 + mt^4*s12*s23
       + mt^4*s12*s14 + mt^4*s12*s13 + mt^4*s12^2 - mt^4*mh^2*s12 - mt^6*s24
       - mt^6*s23 - mt^6*s14 - mt^6*s13 - 4*mt^6*s12 + 2*mt^8 - denom(1/2*s12)
      *mt^2*s13*s14*s23^2 - denom(1/2*s12)*mt^2*s13^2*s23*s24 - denom(1/2*s12)
      *mt^2*s12*s13*s23*s24 - denom(1/2*s12)*mt^2*s12*s13*s23^2 - denom(1/2*
      s12)*mt^2*s12*s13*s14*s23 - denom(1/2*s12)*mt^2*s12*s13^2*s23 - denom(1/
      2*s12)*mt^2*s12^2*s13*s23 + denom(1/2*s12)*mt^2*mh^2*s12*s13*s23 + 
      denom(1/2*s12)*mt^4*s14*s23^2 + 2*denom(1/2*s12)*mt^4*s13*s23*s24 + 
      denom(1/2*s12)*mt^4*s13*s23^2 + 2*denom(1/2*s12)*mt^4*s13*s14*s23 + 
      denom(1/2*s12)*mt^4*s13^2*s24 + denom(1/2*s12)*mt^4*s13^2*s23 + denom(1/
      2*s12)*mt^4*s12*s23*s24 + denom(1/2*s12)*mt^4*s12*s23^2 + denom(1/2*s12)
      *mt^4*s12*s14*s23 + denom(1/2*s12)*mt^4*s12*s13*s24 + 6*denom(1/2*s12)*
      mt^4*s12*s13*s23 + denom(1/2*s12)*mt^4*s12*s13*s14 + denom(1/2*s12)*mt^4
      *s12*s13^2 + denom(1/2*s12)*mt^4*s12^2*s23 + denom(1/2*s12)*mt^4*s12^2*
      s13 - denom(1/2*s12)*mt^4*mh^2*s12*s23 - denom(1/2*s12)*mt^4*mh^2*s12*
      s13 - denom(1/2*s12)*mt^6*s23*s24 - denom(1/2*s12)*mt^6*s23^2 - 2*denom(
      1/2*s12)*mt^6*s14*s23 - 2*denom(1/2*s12)*mt^6*s13*s24 - 4*denom(1/2*s12)
      *mt^6*s13*s23 - denom(1/2*s12)*mt^6*s13*s14 - denom(1/2*s12)*mt^6*s13^2
       - denom(1/2*s12)*mt^6*s12*s24 - 5*denom(1/2*s12)*mt^6*s12*s23 - denom(1/
      2*s12)*mt^6*s12*s14 - 5*denom(1/2*s12)*mt^6*s12*s13 - denom(1/2*s12)*
      mt^6*s12^2 + denom(1/2*s12)*mt^6*mh^2*s12 + denom(1/2*s12)*mt^8*s24 + 3*
      denom(1/2*s12)*mt^8*s23 + denom(1/2*s12)*mt^8*s14 + 3*denom(1/2*s12)*
      mt^8*s13 + 4*denom(1/2*s12)*mt^8*s12 - 2*denom(1/2*s12)*mt^10 + 1/4*
      denom(1/4*s12^2)*s13^2*s14*s23^3 + 1/4*denom(1/4*s12^2)*s13^3*s23^2*s24
       + 1/4*denom(1/4*s12^2)*s12*s13^2*s23^2*s24 + 1/4*denom(1/4*s12^2)*s12*
      s13^2*s23^3 + 1/4*denom(1/4*s12^2)*s12*s13^2*s14*s23^2 + 1/4*denom(1/4*
      s12^2)*s12*s13^3*s23^2 + 1/4*denom(1/4*s12^2)*s12^2*s13^2*s23^2 - 1/4*
      denom(1/4*s12^2)*mh^2*s12*s13^2*s23^2 - 1/2*denom(1/4*s12^2)*mt^2*s13*
      s14*s23^3 - 3/4*denom(1/4*s12^2)*mt^2*s13^2*s23^2*s24 - 1/4*denom(1/4*
      s12^2)*mt^2*s13^2*s23^3 - 3/4*denom(1/4*s12^2)*mt^2*s13^2*s14*s23^2 - 1/
      2*denom(1/4*s12^2)*mt^2*s13^3*s23*s24 - 1/4*denom(1/4*s12^2)*mt^2*s13^3*
      s23^2 - 1/2*denom(1/4*s12^2)*mt^2*s12*s13*s23^2*s24 - 1/2*denom(1/4*
      s12^2)*mt^2*s12*s13*s23^3 - 1/2*denom(1/4*s12^2)*mt^2*s12*s13*s14*s23^2
       - 1/2*denom(1/4*s12^2)*mt^2*s12*s13^2*s23*s24 - 2*denom(1/4*s12^2)*mt^2
      *s12*s13^2*s23^2 - 1/2*denom(1/4*s12^2)*mt^2*s12*s13^2*s14*s23 - 1/2*
      denom(1/4*s12^2)*mt^2*s12*s13^3*s23 - 1/2*denom(1/4*s12^2)*mt^2*s12^2*
      s13*s23^2 - 1/2*denom(1/4*s12^2)*mt^2*s12^2*s13^2*s23 + 1/2*denom(1/4*
      s12^2)*mt^2*mh^2*s12*s13*s23^2 + 1/2*denom(1/4*s12^2)*mt^2*mh^2*s12*
      s13^2*s23 + 1/4*denom(1/4*s12^2)*mt^4*s14*s23^3 + 3/4*denom(1/4*s12^2)*
      mt^4*s13*s23^2*s24 + 1/2*denom(1/4*s12^2)*mt^4*s13*s23^3 + 3/2*denom(1/4
      *s12^2)*mt^4*s13*s14*s23^2 + 3/2*denom(1/4*s12^2)*mt^4*s13^2*s23*s24 + 3/
      2*denom(1/4*s12^2)*mt^4*s13^2*s23^2 + 3/4*denom(1/4*s12^2)*mt^4*s13^2*
      s14*s23 + 1/4*denom(1/4*s12^2)*mt^4*s13^3*s24 + 1/2*denom(1/4*s12^2)*
      mt^4*s13^3*s23 + 1/4*denom(1/4*s12^2)*mt^4*s12*s23^2*s24 + 1/4*denom(1/4
      *s12^2)*mt^4*s12*s23^3 + 1/4*denom(1/4*s12^2)*mt^4*s12*s14*s23^2 + 
      denom(1/4*s12^2)*mt^4*s12*s13*s23*s24 + 13/4*denom(1/4*s12^2)*mt^4*s12*
      s13*s23^2 + denom(1/4*s12^2)*mt^4*s12*s13*s14*s23 + 1/4*denom(1/4*s12^2)
      *mt^4*s12*s13^2*s24 + 13/4*denom(1/4*s12^2)*mt^4*s12*s13^2*s23 + 1/4*
      denom(1/4*s12^2)*mt^4*s12*s13^2*s14 + 1/4*denom(1/4*s12^2)*mt^4*s12*
      s13^3 + 1/4*denom(1/4*s12^2)*mt^4*s12^2*s23^2 + denom(1/4*s12^2)*mt^4*
      s12^2*s13*s23 + 1/4*denom(1/4*s12^2)*mt^4*s12^2*s13^2 - 1/4*denom(1/4*
      s12^2)*mt^4*mh^2*s12*s23^2 - denom(1/4*s12^2)*mt^4*mh^2*s12*s13*s23 - 1/
      4*denom(1/4*s12^2)*mt^4*mh^2*s12*s13^2 - 1/4*denom(1/4*s12^2)*mt^6*s23^2
      *s24 - 1/4*denom(1/4*s12^2)*mt^6*s23^3 - 3/4*denom(1/4*s12^2)*mt^6*s14*
      s23^2 - 3/2*denom(1/4*s12^2)*mt^6*s13*s23*s24 - 9/4*denom(1/4*s12^2)*
      mt^6*s13*s23^2 - 3/2*denom(1/4*s12^2)*mt^6*s13*s14*s23 - 3/4*denom(1/4*
      s12^2)*mt^6*s13^2*s24 - 9/4*denom(1/4*s12^2)*mt^6*s13^2*s23 - 1/4*denom(
      1/4*s12^2)*mt^6*s13^2*s14 - 1/4*denom(1/4*s12^2)*mt^6*s13^3 - 1/2*denom(
      1/4*s12^2)*mt^6*s12*s23*s24 - 3/2*denom(1/4*s12^2)*mt^6*s12*s23^2 - 1/2*
      denom(1/4*s12^2)*mt^6*s12*s14*s23 - 1/2*denom(1/4*s12^2)*mt^6*s12*s13*
      s24 - 5*denom(1/4*s12^2)*mt^6*s12*s13*s23 - 1/2*denom(1/4*s12^2)*mt^6*
      s12*s13*s14 - 3/2*denom(1/4*s12^2)*mt^6*s12*s13^2 - 1/2*denom(1/4*s12^2)
      *mt^6*s12^2*s23 - 1/2*denom(1/4*s12^2)*mt^6*s12^2*s13 + 1/2*denom(1/4*
      s12^2)*mt^6*mh^2*s12*s23 + 1/2*denom(1/4*s12^2)*mt^6*mh^2*s12*s13 + 1/2*
      denom(1/4*s12^2)*mt^8*s23*s24 + denom(1/4*s12^2)*mt^8*s23^2 + 3/4*denom(
      1/4*s12^2)*mt^8*s14*s23 + 3/4*denom(1/4*s12^2)*mt^8*s13*s24 + 3*denom(1/
      4*s12^2)*mt^8*s13*s23 + 1/2*denom(1/4*s12^2)*mt^8*s13*s14 + denom(1/4*
      s12^2)*mt^8*s13^2 + 1/4*denom(1/4*s12^2)*mt^8*s12*s24 + 9/4*denom(1/4*
      s12^2)*mt^8*s12*s23 + 1/4*denom(1/4*s12^2)*mt^8*s12*s14 + 9/4*denom(1/4*
      s12^2)*mt^8*s12*s13 + 1/4*denom(1/4*s12^2)*mt^8*s12^2 - 1/4*denom(1/4*
      s12^2)*mt^8*mh^2*s12 - 1/4*denom(1/4*s12^2)*mt^10*s24 - 5/4*denom(1/4*
      s12^2)*mt^10*s23 - 1/4*denom(1/4*s12^2)*mt^10*s14 - 5/4*denom(1/4*s12^2)
      *mt^10*s13 - denom(1/4*s12^2)*mt^10*s12 + 1/2*denom(1/4*s12^2)*mt^12;
 
 .sort
id KMatrix(5,10) =   - 1/2*mt^2*s14*s23*s24 - 1/2*mt^2*s14*s23^2 - 1/2*mt^2*
      s14^2*s23 - 1/2*mt^2*s13*s24^2 - 1/2*mt^2*s13*s23*s24 - 1/2*mt^2*s13*s14
      *s24 - 1/2*mt^2*s13*s14*s23 - 1/2*mt^2*s13^2*s24 - 1/2*mt^2*s12*s24^2 - 
      mt^2*s12*s23*s24 - 1/2*mt^2*s12*s23^2 - mt^2*s12*s14*s24 - 3/2*mt^2*s12*
      s14*s23 - 1/2*mt^2*s12*s14^2 - 3/2*mt^2*s12*s13*s24 - mt^2*s12*s13*s23
       - mt^2*s12*s13*s14 - 1/2*mt^2*s12*s13^2 - mt^2*s12^2*s24 - mt^2*s12^2*
      s23 - mt^2*s12^2*s14 - mt^2*s12^2*s13 - 1/2*mt^2*s12^3 + 1/2*mt^2*mh^2*
      s14*s23 + 1/2*mt^2*mh^2*s13*s24 + mt^2*mh^2*s12*s24 + mt^2*mh^2*s12*s23
       + mt^2*mh^2*s12*s14 + mt^2*mh^2*s12*s13 + mt^2*mh^2*s12^2 - 1/2*mt^2*
      mh^4*s12 + 1/2*mt^4*s24^2 + mt^4*s23*s24 + 1/2*mt^4*s23^2 + mt^4*s14*s24
       + 2*mt^4*s14*s23 + 1/2*mt^4*s14^2 + 2*mt^4*s13*s24 + mt^4*s13*s23 + 
      mt^4*s13*s14 + 1/2*mt^4*s13^2 + 7/2*mt^4*s12*s24 + 7/2*mt^4*s12*s23 + 7/
      2*mt^4*s12*s14 + 7/2*mt^4*s12*s13 + 3*mt^4*s12^2 - 1/2*mt^4*mh^2*s24 - 1/
      2*mt^4*mh^2*s23 - 1/2*mt^4*mh^2*s14 - 1/2*mt^4*mh^2*s13 - 3*mt^4*mh^2*
      s12 - 2*mt^6*s24 - 2*mt^6*s23 - 2*mt^6*s14 - 2*mt^6*s13 - 5*mt^6*s12 + 
      mt^6*mh^2 + 2*mt^8 + 1/4*denom(1/2*s12)*s13*s14*s23^2*s24 + 1/4*denom(1/
      2*s12)*s13*s14*s23^3 + 1/4*denom(1/2*s12)*s13*s14^2*s23^2 + 1/4*denom(1/
      2*s12)*s13^2*s23*s24^2 + 1/4*denom(1/2*s12)*s13^2*s23^2*s24 + 1/4*denom(
      1/2*s12)*s13^2*s14*s23*s24 + 1/4*denom(1/2*s12)*s13^2*s14*s23^2 + 1/4*
      denom(1/2*s12)*s13^3*s23*s24 + 1/4*denom(1/2*s12)*s12*s13*s23*s24^2 + 1/
      2*denom(1/2*s12)*s12*s13*s23^2*s24 + 1/4*denom(1/2*s12)*s12*s13*s23^3 + 
      1/2*denom(1/2*s12)*s12*s13*s14*s23*s24 + 3/4*denom(1/2*s12)*s12*s13*s14*
      s23^2 + 1/4*denom(1/2*s12)*s12*s13*s14^2*s23 + 3/4*denom(1/2*s12)*s12*
      s13^2*s23*s24 + 1/2*denom(1/2*s12)*s12*s13^2*s23^2 + 1/2*denom(1/2*s12)*
      s12*s13^2*s14*s23 + 1/4*denom(1/2*s12)*s12*s13^3*s23 + 1/2*denom(1/2*s12
      )*s12^2*s13*s23*s24 + 1/2*denom(1/2*s12)*s12^2*s13*s23^2 + 1/2*denom(1/2
      *s12)*s12^2*s13*s14*s23 + 1/2*denom(1/2*s12)*s12^2*s13^2*s23 + 1/4*
      denom(1/2*s12)*s12^3*s13*s23 - 1/4*denom(1/2*s12)*mh^2*s13*s14*s23^2 - 1/
      4*denom(1/2*s12)*mh^2*s13^2*s23*s24 - 1/2*denom(1/2*s12)*mh^2*s12*s13*
      s23*s24 - 1/2*denom(1/2*s12)*mh^2*s12*s13*s23^2 - 1/2*denom(1/2*s12)*
      mh^2*s12*s13*s14*s23 - 1/2*denom(1/2*s12)*mh^2*s12*s13^2*s23 - 1/2*
      denom(1/2*s12)*mh^2*s12^2*s13*s23 + 1/4*denom(1/2*s12)*mh^4*s12*s13*s23
       - 1/4*denom(1/2*s12)*mt^2*s14*s23^2*s24 - 1/4*denom(1/2*s12)*mt^2*s14*
      s23^3 - 1/2*denom(1/2*s12)*mt^2*s14^2*s23^2 - 1/2*denom(1/2*s12)*mt^2*
      s13*s23*s24^2 - 3/4*denom(1/2*s12)*mt^2*s13*s23^2*s24 - 1/4*denom(1/2*
      s12)*mt^2*s13*s23^3 - 3/2*denom(1/2*s12)*mt^2*s13*s14*s23*s24 - 3/2*
      denom(1/2*s12)*mt^2*s13*s14*s23^2 - 1/2*denom(1/2*s12)*mt^2*s13*s14^2*
      s23 - 1/2*denom(1/2*s12)*mt^2*s13^2*s24^2 - 3/2*denom(1/2*s12)*mt^2*
      s13^2*s23*s24 - 1/2*denom(1/2*s12)*mt^2*s13^2*s23^2 - 1/4*denom(1/2*s12)
      *mt^2*s13^2*s14*s24 - 3/4*denom(1/2*s12)*mt^2*s13^2*s14*s23 - 1/4*denom(
      1/2*s12)*mt^2*s13^3*s24 - 1/4*denom(1/2*s12)*mt^2*s13^3*s23 - 1/4*denom(
      1/2*s12)*mt^2*s12*s23*s24^2 - 1/2*denom(1/2*s12)*mt^2*s12*s23^2*s24 - 1/
      4*denom(1/2*s12)*mt^2*s12*s23^3 - 3/4*denom(1/2*s12)*mt^2*s12*s14*s23*
      s24 - denom(1/2*s12)*mt^2*s12*s14*s23^2 - 1/2*denom(1/2*s12)*mt^2*s12*
      s14^2*s23 - 1/2*denom(1/2*s12)*mt^2*s12*s13*s24^2 - 13/4*denom(1/2*s12)*
      mt^2*s12*s13*s23*s24 - 5/2*denom(1/2*s12)*mt^2*s12*s13*s23^2 - 3/4*
      denom(1/2*s12)*mt^2*s12*s13*s14*s24 - 13/4*denom(1/2*s12)*mt^2*s12*s13*
      s14*s23 - 1/4*denom(1/2*s12)*mt^2*s12*s13*s14^2 - denom(1/2*s12)*mt^2*
      s12*s13^2*s24 - 5/2*denom(1/2*s12)*mt^2*s12*s13^2*s23 - 1/2*denom(1/2*
      s12)*mt^2*s12*s13^2*s14 - 1/4*denom(1/2*s12)*mt^2*s12*s13^3 - 1/2*denom(
      1/2*s12)*mt^2*s12^2*s23*s24 - 1/2*denom(1/2*s12)*mt^2*s12^2*s23^2 - 3/4*
      denom(1/2*s12)*mt^2*s12^2*s14*s23 - 3/4*denom(1/2*s12)*mt^2*s12^2*s13*
      s24 - 5/2*denom(1/2*s12)*mt^2*s12^2*s13*s23 - 1/2*denom(1/2*s12)*mt^2*
      s12^2*s13*s14 - 1/2*denom(1/2*s12)*mt^2*s12^2*s13^2 - 1/4*denom(1/2*s12)
      *mt^2*s12^3*s23 - 1/4*denom(1/2*s12)*mt^2*s12^3*s13 + 1/4*denom(1/2*s12)
      *mt^2*mh^2*s14*s23^2 + 1/2*denom(1/2*s12)*mt^2*mh^2*s13*s23*s24 + 1/4*
      denom(1/2*s12)*mt^2*mh^2*s13*s23^2 + 1/2*denom(1/2*s12)*mt^2*mh^2*s13*
      s14*s23 + 1/4*denom(1/2*s12)*mt^2*mh^2*s13^2*s24 + 1/4*denom(1/2*s12)*
      mt^2*mh^2*s13^2*s23 + 1/2*denom(1/2*s12)*mt^2*mh^2*s12*s23*s24 + 1/2*
      denom(1/2*s12)*mt^2*mh^2*s12*s23^2 + 3/4*denom(1/2*s12)*mt^2*mh^2*s12*
      s14*s23 + 3/4*denom(1/2*s12)*mt^2*mh^2*s12*s13*s24 + 5/2*denom(1/2*s12)*
      mt^2*mh^2*s12*s13*s23 + 1/2*denom(1/2*s12)*mt^2*mh^2*s12*s13*s14 + 1/2*
      denom(1/2*s12)*mt^2*mh^2*s12*s13^2 + 1/2*denom(1/2*s12)*mt^2*mh^2*s12^2*
      s23 + 1/2*denom(1/2*s12)*mt^2*mh^2*s12^2*s13 - 1/4*denom(1/2*s12)*mt^2*
      mh^4*s12*s23 - 1/4*denom(1/2*s12)*mt^2*mh^4*s12*s13 + 1/4*denom(1/2*s12)
      *mt^4*s23*s24^2 + 1/2*denom(1/2*s12)*mt^4*s23^2*s24 + 1/4*denom(1/2*s12)
      *mt^4*s23^3 + 5/4*denom(1/2*s12)*mt^4*s14*s23*s24 + 7/4*denom(1/2*s12)*
      mt^4*s14*s23^2 + denom(1/2*s12)*mt^4*s14^2*s23 + denom(1/2*s12)*mt^4*s13
      *s24^2 + 13/4*denom(1/2*s12)*mt^4*s13*s23*s24 + 7/4*denom(1/2*s12)*mt^4*
      s13*s23^2 + 5/4*denom(1/2*s12)*mt^4*s13*s14*s24 + 13/4*denom(1/2*s12)*
      mt^4*s13*s14*s23 + 1/4*denom(1/2*s12)*mt^4*s13*s14^2 + 7/4*denom(1/2*s12
      )*mt^4*s13^2*s24 + 7/4*denom(1/2*s12)*mt^4*s13^2*s23 + 1/2*denom(1/2*s12
      )*mt^4*s13^2*s14 + 1/4*denom(1/2*s12)*mt^4*s13^3 + 1/2*denom(1/2*s12)*
      mt^4*s12*s24^2 + 11/4*denom(1/2*s12)*mt^4*s12*s23*s24 + 9/4*denom(1/2*
      s12)*mt^4*s12*s23^2 + denom(1/2*s12)*mt^4*s12*s14*s24 + 4*denom(1/2*s12)
      *mt^4*s12*s14*s23 + 1/2*denom(1/2*s12)*mt^4*s12*s14^2 + 4*denom(1/2*s12)
      *mt^4*s12*s13*s24 + 7*denom(1/2*s12)*mt^4*s12*s13*s23 + 11/4*denom(1/2*
      s12)*mt^4*s12*s13*s14 + 9/4*denom(1/2*s12)*mt^4*s12*s13^2 + 3/4*denom(1/
      2*s12)*mt^4*s12^2*s24 + 9/4*denom(1/2*s12)*mt^4*s12^2*s23 + 3/4*denom(1/
      2*s12)*mt^4*s12^2*s14 + 9/4*denom(1/2*s12)*mt^4*s12^2*s13 + 1/4*denom(1/
      2*s12)*mt^4*s12^3 - 1/4*denom(1/2*s12)*mt^4*mh^2*s23*s24 - 1/4*denom(1/2
      *s12)*mt^4*mh^2*s23^2 - 1/2*denom(1/2*s12)*mt^4*mh^2*s14*s23 - 1/2*
      denom(1/2*s12)*mt^4*mh^2*s13*s24 - denom(1/2*s12)*mt^4*mh^2*s13*s23 - 1/
      4*denom(1/2*s12)*mt^4*mh^2*s13*s14 - 1/4*denom(1/2*s12)*mt^4*mh^2*s13^2
       - 3/4*denom(1/2*s12)*mt^4*mh^2*s12*s24 - 9/4*denom(1/2*s12)*mt^4*mh^2*
      s12*s23 - 3/4*denom(1/2*s12)*mt^4*mh^2*s12*s14 - 9/4*denom(1/2*s12)*mt^4
      *mh^2*s12*s13 - 1/2*denom(1/2*s12)*mt^4*mh^2*s12^2 + 1/4*denom(1/2*s12)*
      mt^4*mh^4*s12 - 1/2*denom(1/2*s12)*mt^6*s24^2 - 2*denom(1/2*s12)*mt^6*
      s23*s24 - 3/2*denom(1/2*s12)*mt^6*s23^2 - denom(1/2*s12)*mt^6*s14*s24 - 
      7/2*denom(1/2*s12)*mt^6*s14*s23 - 1/2*denom(1/2*s12)*mt^6*s14^2 - 7/2*
      denom(1/2*s12)*mt^6*s13*s24 - 4*denom(1/2*s12)*mt^6*s13*s23 - 2*denom(1/
      2*s12)*mt^6*s13*s14 - 3/2*denom(1/2*s12)*mt^6*s13^2 - 13/4*denom(1/2*s12
      )*mt^6*s12*s24 - 23/4*denom(1/2*s12)*mt^6*s12*s23 - 13/4*denom(1/2*s12)*
      mt^6*s12*s14 - 23/4*denom(1/2*s12)*mt^6*s12*s13 - 2*denom(1/2*s12)*mt^6*
      s12^2 + 1/4*denom(1/2*s12)*mt^6*mh^2*s24 + 3/4*denom(1/2*s12)*mt^6*mh^2*
      s23 + 1/4*denom(1/2*s12)*mt^6*mh^2*s14 + 3/4*denom(1/2*s12)*mt^6*mh^2*
      s13 + 2*denom(1/2*s12)*mt^6*mh^2*s12 + 2*denom(1/2*s12)*mt^8*s24 + 3*
      denom(1/2*s12)*mt^8*s23 + 2*denom(1/2*s12)*mt^8*s14 + 3*denom(1/2*s12)*
      mt^8*s13 + 9/2*denom(1/2*s12)*mt^8*s12 - 1/2*denom(1/2*s12)*mt^8*mh^2 - 
      2*denom(1/2*s12)*mt^10 + 1/8*denom(1/4*s12^2)*s13*s14^2*s23^3 + 1/4*
      denom(1/4*s12^2)*s13^2*s14*s23^2*s24 + 1/8*denom(1/4*s12^2)*s13^3*s23*
      s24^2 + 1/8*denom(1/4*s12^2)*s12*s13*s14*s23^2*s24 + 1/8*denom(1/4*s12^2
      )*s12*s13*s14*s23^3 + 1/8*denom(1/4*s12^2)*s12*s13*s14^2*s23^2 + 1/8*
      denom(1/4*s12^2)*s12*s13^2*s23*s24^2 + 1/8*denom(1/4*s12^2)*s12*s13^2*
      s23^2*s24 + 1/8*denom(1/4*s12^2)*s12*s13^2*s14*s23*s24 + 1/8*denom(1/4*
      s12^2)*s12*s13^2*s14*s23^2 + 1/8*denom(1/4*s12^2)*s12*s13^3*s23*s24 + 1/
      8*denom(1/4*s12^2)*s12^2*s13*s14*s23^2 + 1/8*denom(1/4*s12^2)*s12^2*
      s13^2*s23*s24 - 1/8*denom(1/4*s12^2)*mh^2*s12*s13*s14*s23^2 - 1/8*denom(
      1/4*s12^2)*mh^2*s12*s13^2*s23*s24 - 1/8*denom(1/4*s12^2)*mt^2*s14^2*
      s23^3 - 1/2*denom(1/4*s12^2)*mt^2*s13*s14*s23^2*s24 - 1/4*denom(1/4*
      s12^2)*mt^2*s13*s14*s23^3 - 3/8*denom(1/4*s12^2)*mt^2*s13*s14^2*s23^2 - 
      3/8*denom(1/4*s12^2)*mt^2*s13^2*s23*s24^2 - 1/4*denom(1/4*s12^2)*mt^2*
      s13^2*s23^2*s24 - 1/2*denom(1/4*s12^2)*mt^2*s13^2*s14*s23*s24 - 1/4*
      denom(1/4*s12^2)*mt^2*s13^2*s14*s23^2 - 1/8*denom(1/4*s12^2)*mt^2*s13^3*
      s24^2 - 1/4*denom(1/4*s12^2)*mt^2*s13^3*s23*s24 - 1/8*denom(1/4*s12^2)*
      mt^2*s12*s14*s23^2*s24 - 1/8*denom(1/4*s12^2)*mt^2*s12*s14*s23^3 - 1/8*
      denom(1/4*s12^2)*mt^2*s12*s14^2*s23^2 - 1/4*denom(1/4*s12^2)*mt^2*s12*
      s13*s23*s24^2 - 3/8*denom(1/4*s12^2)*mt^2*s12*s13*s23^2*s24 - 1/8*denom(
      1/4*s12^2)*mt^2*s12*s13*s23^3 - 1/2*denom(1/4*s12^2)*mt^2*s12*s13*s14*
      s23*s24 - denom(1/4*s12^2)*mt^2*s12*s13*s14*s23^2 - 1/4*denom(1/4*s12^2)
      *mt^2*s12*s13*s14^2*s23 - 1/8*denom(1/4*s12^2)*mt^2*s12*s13^2*s24^2 - 
      denom(1/4*s12^2)*mt^2*s12*s13^2*s23*s24 - 1/4*denom(1/4*s12^2)*mt^2*s12*
      s13^2*s23^2 - 1/8*denom(1/4*s12^2)*mt^2*s12*s13^2*s14*s24 - 3/8*denom(1/
      4*s12^2)*mt^2*s12*s13^2*s14*s23 - 1/8*denom(1/4*s12^2)*mt^2*s12*s13^3*
      s24 - 1/8*denom(1/4*s12^2)*mt^2*s12*s13^3*s23 - 1/8*denom(1/4*s12^2)*
      mt^2*s12^2*s14*s23^2 - 1/4*denom(1/4*s12^2)*mt^2*s12^2*s13*s23*s24 - 1/8
      *denom(1/4*s12^2)*mt^2*s12^2*s13*s23^2 - 1/4*denom(1/4*s12^2)*mt^2*s12^2
      *s13*s14*s23 - 1/8*denom(1/4*s12^2)*mt^2*s12^2*s13^2*s24 - 1/8*denom(1/4
      *s12^2)*mt^2*s12^2*s13^2*s23 + 1/8*denom(1/4*s12^2)*mt^2*mh^2*s12*s14*
      s23^2 + 1/4*denom(1/4*s12^2)*mt^2*mh^2*s12*s13*s23*s24 + 1/8*denom(1/4*
      s12^2)*mt^2*mh^2*s12*s13*s23^2 + 1/4*denom(1/4*s12^2)*mt^2*mh^2*s12*s13*
      s14*s23 + 1/8*denom(1/4*s12^2)*mt^2*mh^2*s12*s13^2*s24 + 1/8*denom(1/4*
      s12^2)*mt^2*mh^2*s12*s13^2*s23 + 1/4*denom(1/4*s12^2)*mt^4*s14*s23^2*s24
       + 1/4*denom(1/4*s12^2)*mt^4*s14*s23^3 + 3/8*denom(1/4*s12^2)*mt^4*s14^2
      *s23^2 + 3/8*denom(1/4*s12^2)*mt^4*s13*s23*s24^2 + 1/2*denom(1/4*s12^2)*
      mt^4*s13*s23^2*s24 + 1/8*denom(1/4*s12^2)*mt^4*s13*s23^3 + denom(1/4*
      s12^2)*mt^4*s13*s14*s23*s24 + 5/4*denom(1/4*s12^2)*mt^4*s13*s14*s23^2 + 
      3/8*denom(1/4*s12^2)*mt^4*s13*s14^2*s23 + 3/8*denom(1/4*s12^2)*mt^4*
      s13^2*s24^2 + 5/4*denom(1/4*s12^2)*mt^4*s13^2*s23*s24 + 1/4*denom(1/4*
      s12^2)*mt^4*s13^2*s23^2 + 1/4*denom(1/4*s12^2)*mt^4*s13^2*s14*s24 + 1/2*
      denom(1/4*s12^2)*mt^4*s13^2*s14*s23 + 1/4*denom(1/4*s12^2)*mt^4*s13^3*
      s24 + 1/8*denom(1/4*s12^2)*mt^4*s13^3*s23 + 1/8*denom(1/4*s12^2)*mt^4*
      s12*s23*s24^2 + 1/4*denom(1/4*s12^2)*mt^4*s12*s23^2*s24 + 1/8*denom(1/4*
      s12^2)*mt^4*s12*s23^3 + 3/8*denom(1/4*s12^2)*mt^4*s12*s14*s23*s24 + 7/8*
      denom(1/4*s12^2)*mt^4*s12*s14*s23^2 + 1/4*denom(1/4*s12^2)*mt^4*s12*
      s14^2*s23 + 1/4*denom(1/4*s12^2)*mt^4*s12*s13*s24^2 + 15/8*denom(1/4*
      s12^2)*mt^4*s12*s13*s23*s24 + 9/8*denom(1/4*s12^2)*mt^4*s12*s13*s23^2 + 
      3/8*denom(1/4*s12^2)*mt^4*s12*s13*s14*s24 + 15/8*denom(1/4*s12^2)*mt^4*
      s12*s13*s14*s23 + 1/8*denom(1/4*s12^2)*mt^4*s12*s13*s14^2 + 7/8*denom(1/
      4*s12^2)*mt^4*s12*s13^2*s24 + 9/8*denom(1/4*s12^2)*mt^4*s12*s13^2*s23 + 
      1/4*denom(1/4*s12^2)*mt^4*s12*s13^2*s14 + 1/8*denom(1/4*s12^2)*mt^4*s12*
      s13^3 + 1/8*denom(1/4*s12^2)*mt^4*s12^2*s23*s24 + 1/8*denom(1/4*s12^2)*
      mt^4*s12^2*s23^2 + 1/4*denom(1/4*s12^2)*mt^4*s12^2*s14*s23 + 1/4*denom(1/
      4*s12^2)*mt^4*s12^2*s13*s24 + 1/2*denom(1/4*s12^2)*mt^4*s12^2*s13*s23 + 
      1/8*denom(1/4*s12^2)*mt^4*s12^2*s13*s14 + 1/8*denom(1/4*s12^2)*mt^4*
      s12^2*s13^2 - 1/8*denom(1/4*s12^2)*mt^4*mh^2*s12*s23*s24 - 1/8*denom(1/4
      *s12^2)*mt^4*mh^2*s12*s23^2 - 1/4*denom(1/4*s12^2)*mt^4*mh^2*s12*s14*s23
       - 1/4*denom(1/4*s12^2)*mt^4*mh^2*s12*s13*s24 - 1/2*denom(1/4*s12^2)*
      mt^4*mh^2*s12*s13*s23 - 1/8*denom(1/4*s12^2)*mt^4*mh^2*s12*s13*s14 - 1/8
      *denom(1/4*s12^2)*mt^4*mh^2*s12*s13^2 - 1/8*denom(1/4*s12^2)*mt^6*s23*
      s24^2 - 1/4*denom(1/4*s12^2)*mt^6*s23^2*s24 - 1/8*denom(1/4*s12^2)*mt^6*
      s23^3 - 1/2*denom(1/4*s12^2)*mt^6*s14*s23*s24 - denom(1/4*s12^2)*mt^6*
      s14*s23^2 - 3/8*denom(1/4*s12^2)*mt^6*s14^2*s23 - 3/8*denom(1/4*s12^2)*
      mt^6*s13*s24^2 - 7/4*denom(1/4*s12^2)*mt^6*s13*s23*s24 - 7/8*denom(1/4*
      s12^2)*mt^6*s13*s23^2 - 1/2*denom(1/4*s12^2)*mt^6*s13*s14*s24 - 7/4*
      denom(1/4*s12^2)*mt^6*s13*s14*s23 - 1/8*denom(1/4*s12^2)*mt^6*s13*s14^2
       - denom(1/4*s12^2)*mt^6*s13^2*s24 - 7/8*denom(1/4*s12^2)*mt^6*s13^2*s23
       - 1/4*denom(1/4*s12^2)*mt^6*s13^2*s14 - 1/8*denom(1/4*s12^2)*mt^6*s13^3
       - 1/8*denom(1/4*s12^2)*mt^6*s12*s24^2 - denom(1/4*s12^2)*mt^6*s12*s23*
      s24 - 7/8*denom(1/4*s12^2)*mt^6*s12*s23^2 - 1/4*denom(1/4*s12^2)*mt^6*
      s12*s14*s24 - 3/2*denom(1/4*s12^2)*mt^6*s12*s14*s23 - 1/8*denom(1/4*
      s12^2)*mt^6*s12*s14^2 - 3/2*denom(1/4*s12^2)*mt^6*s12*s13*s24 - 11/4*
      denom(1/4*s12^2)*mt^6*s12*s13*s23 - denom(1/4*s12^2)*mt^6*s12*s13*s14 - 
      7/8*denom(1/4*s12^2)*mt^6*s12*s13^2 - 1/8*denom(1/4*s12^2)*mt^6*s12^2*
      s24 - 3/8*denom(1/4*s12^2)*mt^6*s12^2*s23 - 1/8*denom(1/4*s12^2)*mt^6*
      s12^2*s14 - 3/8*denom(1/4*s12^2)*mt^6*s12^2*s13 + 1/8*denom(1/4*s12^2)*
      mt^6*mh^2*s12*s24 + 3/8*denom(1/4*s12^2)*mt^6*mh^2*s12*s23 + 1/8*denom(1/
      4*s12^2)*mt^6*mh^2*s12*s14 + 3/8*denom(1/4*s12^2)*mt^6*mh^2*s12*s13 + 1/
      8*denom(1/4*s12^2)*mt^8*s24^2 + 3/4*denom(1/4*s12^2)*mt^8*s23*s24 + 5/8*
      denom(1/4*s12^2)*mt^8*s23^2 + 1/4*denom(1/4*s12^2)*mt^8*s14*s24 + 5/4*
      denom(1/4*s12^2)*mt^8*s14*s23 + 1/8*denom(1/4*s12^2)*mt^8*s14^2 + 5/4*
      denom(1/4*s12^2)*mt^8*s13*s24 + 7/4*denom(1/4*s12^2)*mt^8*s13*s23 + 3/4*
      denom(1/4*s12^2)*mt^8*s13*s14 + 5/8*denom(1/4*s12^2)*mt^8*s13^2 + 3/4*
      denom(1/4*s12^2)*mt^8*s12*s24 + 7/4*denom(1/4*s12^2)*mt^8*s12*s23 + 3/4*
      denom(1/4*s12^2)*mt^8*s12*s14 + 7/4*denom(1/4*s12^2)*mt^8*s12*s13 + 1/4*
      denom(1/4*s12^2)*mt^8*s12^2 - 1/4*denom(1/4*s12^2)*mt^8*mh^2*s12 - 1/2*
      denom(1/4*s12^2)*mt^10*s24 - denom(1/4*s12^2)*mt^10*s23 - 1/2*denom(1/4*
      s12^2)*mt^10*s14 - denom(1/4*s12^2)*mt^10*s13 - denom(1/4*s12^2)*mt^10*
      s12 + 1/2*denom(1/4*s12^2)*mt^12;
 
 .sort
id KMatrix(5,11) =   - 1/2*mt^2*s14*s23*s24 - 1/2*mt^2*s14*s23^2 - 1/2*mt^2*
      s14^2*s23 - 1/2*mt^2*s13*s24^2 - 1/2*mt^2*s13*s23*s24 - 1/2*mt^2*s13*s14
      *s24 - 1/2*mt^2*s13*s14*s23 - 1/2*mt^2*s13^2*s24 - 1/2*mt^2*s12*s24^2 - 
      mt^2*s12*s23*s24 - 1/2*mt^2*s12*s23^2 - mt^2*s12*s14*s24 - 3/2*mt^2*s12*
      s14*s23 - 1/2*mt^2*s12*s14^2 - 3/2*mt^2*s12*s13*s24 - mt^2*s12*s13*s23
       - mt^2*s12*s13*s14 - 1/2*mt^2*s12*s13^2 - mt^2*s12^2*s24 - mt^2*s12^2*
      s23 - mt^2*s12^2*s14 - mt^2*s12^2*s13 - 1/2*mt^2*s12^3 + 1/2*mt^2*mh^2*
      s14*s23 + 1/2*mt^2*mh^2*s13*s24 + mt^2*mh^2*s12*s24 + mt^2*mh^2*s12*s23
       + mt^2*mh^2*s12*s14 + mt^2*mh^2*s12*s13 + mt^2*mh^2*s12^2 - 1/2*mt^2*
      mh^4*s12 + 1/2*mt^4*s24^2 + mt^4*s23*s24 + 1/2*mt^4*s23^2 + mt^4*s14*s24
       + 2*mt^4*s14*s23 + 1/2*mt^4*s14^2 + 2*mt^4*s13*s24 + mt^4*s13*s23 + 
      mt^4*s13*s14 + 1/2*mt^4*s13^2 + 7/2*mt^4*s12*s24 + 7/2*mt^4*s12*s23 + 7/
      2*mt^4*s12*s14 + 7/2*mt^4*s12*s13 + 3*mt^4*s12^2 - 1/2*mt^4*mh^2*s24 - 1/
      2*mt^4*mh^2*s23 - 1/2*mt^4*mh^2*s14 - 1/2*mt^4*mh^2*s13 - 3*mt^4*mh^2*
      s12 - 2*mt^6*s24 - 2*mt^6*s23 - 2*mt^6*s14 - 2*mt^6*s13 - 5*mt^6*s12 + 
      mt^6*mh^2 + 2*mt^8 + 1/4*denom(1/2*s12)*s13*s14*s23^2*s24 + 1/4*denom(1/
      2*s12)*s13*s14*s23^3 + 1/4*denom(1/2*s12)*s13*s14^2*s23^2 + 1/4*denom(1/
      2*s12)*s13^2*s23*s24^2 + 1/4*denom(1/2*s12)*s13^2*s23^2*s24 + 1/4*denom(
      1/2*s12)*s13^2*s14*s23*s24 + 1/4*denom(1/2*s12)*s13^2*s14*s23^2 + 1/4*
      denom(1/2*s12)*s13^3*s23*s24 + 1/4*denom(1/2*s12)*s12*s13*s23*s24^2 + 1/
      2*denom(1/2*s12)*s12*s13*s23^2*s24 + 1/4*denom(1/2*s12)*s12*s13*s23^3 + 
      1/2*denom(1/2*s12)*s12*s13*s14*s23*s24 + 3/4*denom(1/2*s12)*s12*s13*s14*
      s23^2 + 1/4*denom(1/2*s12)*s12*s13*s14^2*s23 + 3/4*denom(1/2*s12)*s12*
      s13^2*s23*s24 + 1/2*denom(1/2*s12)*s12*s13^2*s23^2 + 1/2*denom(1/2*s12)*
      s12*s13^2*s14*s23 + 1/4*denom(1/2*s12)*s12*s13^3*s23 + 1/2*denom(1/2*s12
      )*s12^2*s13*s23*s24 + 1/2*denom(1/2*s12)*s12^2*s13*s23^2 + 1/2*denom(1/2
      *s12)*s12^2*s13*s14*s23 + 1/2*denom(1/2*s12)*s12^2*s13^2*s23 + 1/4*
      denom(1/2*s12)*s12^3*s13*s23 - 1/4*denom(1/2*s12)*mh^2*s13*s14*s23^2 - 1/
      4*denom(1/2*s12)*mh^2*s13^2*s23*s24 - 1/2*denom(1/2*s12)*mh^2*s12*s13*
      s23*s24 - 1/2*denom(1/2*s12)*mh^2*s12*s13*s23^2 - 1/2*denom(1/2*s12)*
      mh^2*s12*s13*s14*s23 - 1/2*denom(1/2*s12)*mh^2*s12*s13^2*s23 - 1/2*
      denom(1/2*s12)*mh^2*s12^2*s13*s23 + 1/4*denom(1/2*s12)*mh^4*s12*s13*s23
       - 1/4*denom(1/2*s12)*mt^2*s14*s23^2*s24 - 1/4*denom(1/2*s12)*mt^2*s14*
      s23^3 - 1/2*denom(1/2*s12)*mt^2*s14^2*s23^2 - 1/2*denom(1/2*s12)*mt^2*
      s13*s23*s24^2 - 3/4*denom(1/2*s12)*mt^2*s13*s23^2*s24 - 1/4*denom(1/2*
      s12)*mt^2*s13*s23^3 - 3/2*denom(1/2*s12)*mt^2*s13*s14*s23*s24 - 3/2*
      denom(1/2*s12)*mt^2*s13*s14*s23^2 - 1/2*denom(1/2*s12)*mt^2*s13*s14^2*
      s23 - 1/2*denom(1/2*s12)*mt^2*s13^2*s24^2 - 3/2*denom(1/2*s12)*mt^2*
      s13^2*s23*s24 - 1/2*denom(1/2*s12)*mt^2*s13^2*s23^2 - 1/4*denom(1/2*s12)
      *mt^2*s13^2*s14*s24 - 3/4*denom(1/2*s12)*mt^2*s13^2*s14*s23 - 1/4*denom(
      1/2*s12)*mt^2*s13^3*s24 - 1/4*denom(1/2*s12)*mt^2*s13^3*s23 - 1/4*denom(
      1/2*s12)*mt^2*s12*s23*s24^2 - 1/2*denom(1/2*s12)*mt^2*s12*s23^2*s24 - 1/
      4*denom(1/2*s12)*mt^2*s12*s23^3 - 3/4*denom(1/2*s12)*mt^2*s12*s14*s23*
      s24 - denom(1/2*s12)*mt^2*s12*s14*s23^2 - 1/2*denom(1/2*s12)*mt^2*s12*
      s14^2*s23 - 1/2*denom(1/2*s12)*mt^2*s12*s13*s24^2 - 13/4*denom(1/2*s12)*
      mt^2*s12*s13*s23*s24 - 5/2*denom(1/2*s12)*mt^2*s12*s13*s23^2 - 3/4*
      denom(1/2*s12)*mt^2*s12*s13*s14*s24 - 13/4*denom(1/2*s12)*mt^2*s12*s13*
      s14*s23 - 1/4*denom(1/2*s12)*mt^2*s12*s13*s14^2 - denom(1/2*s12)*mt^2*
      s12*s13^2*s24 - 5/2*denom(1/2*s12)*mt^2*s12*s13^2*s23 - 1/2*denom(1/2*
      s12)*mt^2*s12*s13^2*s14 - 1/4*denom(1/2*s12)*mt^2*s12*s13^3 - 1/2*denom(
      1/2*s12)*mt^2*s12^2*s23*s24 - 1/2*denom(1/2*s12)*mt^2*s12^2*s23^2 - 3/4*
      denom(1/2*s12)*mt^2*s12^2*s14*s23 - 3/4*denom(1/2*s12)*mt^2*s12^2*s13*
      s24 - 5/2*denom(1/2*s12)*mt^2*s12^2*s13*s23 - 1/2*denom(1/2*s12)*mt^2*
      s12^2*s13*s14 - 1/2*denom(1/2*s12)*mt^2*s12^2*s13^2 - 1/4*denom(1/2*s12)
      *mt^2*s12^3*s23 - 1/4*denom(1/2*s12)*mt^2*s12^3*s13 + 1/4*denom(1/2*s12)
      *mt^2*mh^2*s14*s23^2 + 1/2*denom(1/2*s12)*mt^2*mh^2*s13*s23*s24 + 1/4*
      denom(1/2*s12)*mt^2*mh^2*s13*s23^2 + 1/2*denom(1/2*s12)*mt^2*mh^2*s13*
      s14*s23 + 1/4*denom(1/2*s12)*mt^2*mh^2*s13^2*s24 + 1/4*denom(1/2*s12)*
      mt^2*mh^2*s13^2*s23 + 1/2*denom(1/2*s12)*mt^2*mh^2*s12*s23*s24 + 1/2*
      denom(1/2*s12)*mt^2*mh^2*s12*s23^2 + 3/4*denom(1/2*s12)*mt^2*mh^2*s12*
      s14*s23 + 3/4*denom(1/2*s12)*mt^2*mh^2*s12*s13*s24 + 5/2*denom(1/2*s12)*
      mt^2*mh^2*s12*s13*s23 + 1/2*denom(1/2*s12)*mt^2*mh^2*s12*s13*s14 + 1/2*
      denom(1/2*s12)*mt^2*mh^2*s12*s13^2 + 1/2*denom(1/2*s12)*mt^2*mh^2*s12^2*
      s23 + 1/2*denom(1/2*s12)*mt^2*mh^2*s12^2*s13 - 1/4*denom(1/2*s12)*mt^2*
      mh^4*s12*s23 - 1/4*denom(1/2*s12)*mt^2*mh^4*s12*s13 + 1/4*denom(1/2*s12)
      *mt^4*s23*s24^2 + 1/2*denom(1/2*s12)*mt^4*s23^2*s24 + 1/4*denom(1/2*s12)
      *mt^4*s23^3 + 5/4*denom(1/2*s12)*mt^4*s14*s23*s24 + 7/4*denom(1/2*s12)*
      mt^4*s14*s23^2 + denom(1/2*s12)*mt^4*s14^2*s23 + denom(1/2*s12)*mt^4*s13
      *s24^2 + 13/4*denom(1/2*s12)*mt^4*s13*s23*s24 + 7/4*denom(1/2*s12)*mt^4*
      s13*s23^2 + 5/4*denom(1/2*s12)*mt^4*s13*s14*s24 + 13/4*denom(1/2*s12)*
      mt^4*s13*s14*s23 + 1/4*denom(1/2*s12)*mt^4*s13*s14^2 + 7/4*denom(1/2*s12
      )*mt^4*s13^2*s24 + 7/4*denom(1/2*s12)*mt^4*s13^2*s23 + 1/2*denom(1/2*s12
      )*mt^4*s13^2*s14 + 1/4*denom(1/2*s12)*mt^4*s13^3 + 1/2*denom(1/2*s12)*
      mt^4*s12*s24^2 + 11/4*denom(1/2*s12)*mt^4*s12*s23*s24 + 9/4*denom(1/2*
      s12)*mt^4*s12*s23^2 + denom(1/2*s12)*mt^4*s12*s14*s24 + 4*denom(1/2*s12)
      *mt^4*s12*s14*s23 + 1/2*denom(1/2*s12)*mt^4*s12*s14^2 + 4*denom(1/2*s12)
      *mt^4*s12*s13*s24 + 7*denom(1/2*s12)*mt^4*s12*s13*s23 + 11/4*denom(1/2*
      s12)*mt^4*s12*s13*s14 + 9/4*denom(1/2*s12)*mt^4*s12*s13^2 + 3/4*denom(1/
      2*s12)*mt^4*s12^2*s24 + 9/4*denom(1/2*s12)*mt^4*s12^2*s23 + 3/4*denom(1/
      2*s12)*mt^4*s12^2*s14 + 9/4*denom(1/2*s12)*mt^4*s12^2*s13 + 1/4*denom(1/
      2*s12)*mt^4*s12^3 - 1/4*denom(1/2*s12)*mt^4*mh^2*s23*s24 - 1/4*denom(1/2
      *s12)*mt^4*mh^2*s23^2 - 1/2*denom(1/2*s12)*mt^4*mh^2*s14*s23 - 1/2*
      denom(1/2*s12)*mt^4*mh^2*s13*s24 - denom(1/2*s12)*mt^4*mh^2*s13*s23 - 1/
      4*denom(1/2*s12)*mt^4*mh^2*s13*s14 - 1/4*denom(1/2*s12)*mt^4*mh^2*s13^2
       - 3/4*denom(1/2*s12)*mt^4*mh^2*s12*s24 - 9/4*denom(1/2*s12)*mt^4*mh^2*
      s12*s23 - 3/4*denom(1/2*s12)*mt^4*mh^2*s12*s14 - 9/4*denom(1/2*s12)*mt^4
      *mh^2*s12*s13 - 1/2*denom(1/2*s12)*mt^4*mh^2*s12^2 + 1/4*denom(1/2*s12)*
      mt^4*mh^4*s12 - 1/2*denom(1/2*s12)*mt^6*s24^2 - 2*denom(1/2*s12)*mt^6*
      s23*s24 - 3/2*denom(1/2*s12)*mt^6*s23^2 - denom(1/2*s12)*mt^6*s14*s24 - 
      7/2*denom(1/2*s12)*mt^6*s14*s23 - 1/2*denom(1/2*s12)*mt^6*s14^2 - 7/2*
      denom(1/2*s12)*mt^6*s13*s24 - 4*denom(1/2*s12)*mt^6*s13*s23 - 2*denom(1/
      2*s12)*mt^6*s13*s14 - 3/2*denom(1/2*s12)*mt^6*s13^2 - 13/4*denom(1/2*s12
      )*mt^6*s12*s24 - 23/4*denom(1/2*s12)*mt^6*s12*s23 - 13/4*denom(1/2*s12)*
      mt^6*s12*s14 - 23/4*denom(1/2*s12)*mt^6*s12*s13 - 2*denom(1/2*s12)*mt^6*
      s12^2 + 1/4*denom(1/2*s12)*mt^6*mh^2*s24 + 3/4*denom(1/2*s12)*mt^6*mh^2*
      s23 + 1/4*denom(1/2*s12)*mt^6*mh^2*s14 + 3/4*denom(1/2*s12)*mt^6*mh^2*
      s13 + 2*denom(1/2*s12)*mt^6*mh^2*s12 + 2*denom(1/2*s12)*mt^8*s24 + 3*
      denom(1/2*s12)*mt^8*s23 + 2*denom(1/2*s12)*mt^8*s14 + 3*denom(1/2*s12)*
      mt^8*s13 + 9/2*denom(1/2*s12)*mt^8*s12 - 1/2*denom(1/2*s12)*mt^8*mh^2 - 
      2*denom(1/2*s12)*mt^10 + 1/8*denom(1/4*s12^2)*s13*s14^2*s23^3 + 1/4*
      denom(1/4*s12^2)*s13^2*s14*s23^2*s24 + 1/8*denom(1/4*s12^2)*s13^3*s23*
      s24^2 + 1/8*denom(1/4*s12^2)*s12*s13*s14*s23^2*s24 + 1/8*denom(1/4*s12^2
      )*s12*s13*s14*s23^3 + 1/8*denom(1/4*s12^2)*s12*s13*s14^2*s23^2 + 1/8*
      denom(1/4*s12^2)*s12*s13^2*s23*s24^2 + 1/8*denom(1/4*s12^2)*s12*s13^2*
      s23^2*s24 + 1/8*denom(1/4*s12^2)*s12*s13^2*s14*s23*s24 + 1/8*denom(1/4*
      s12^2)*s12*s13^2*s14*s23^2 + 1/8*denom(1/4*s12^2)*s12*s13^3*s23*s24 + 1/
      8*denom(1/4*s12^2)*s12^2*s13*s14*s23^2 + 1/8*denom(1/4*s12^2)*s12^2*
      s13^2*s23*s24 - 1/8*denom(1/4*s12^2)*mh^2*s12*s13*s14*s23^2 - 1/8*denom(
      1/4*s12^2)*mh^2*s12*s13^2*s23*s24 - 1/8*denom(1/4*s12^2)*mt^2*s14^2*
      s23^3 - 1/2*denom(1/4*s12^2)*mt^2*s13*s14*s23^2*s24 - 1/4*denom(1/4*
      s12^2)*mt^2*s13*s14*s23^3 - 3/8*denom(1/4*s12^2)*mt^2*s13*s14^2*s23^2 - 
      3/8*denom(1/4*s12^2)*mt^2*s13^2*s23*s24^2 - 1/4*denom(1/4*s12^2)*mt^2*
      s13^2*s23^2*s24 - 1/2*denom(1/4*s12^2)*mt^2*s13^2*s14*s23*s24 - 1/4*
      denom(1/4*s12^2)*mt^2*s13^2*s14*s23^2 - 1/8*denom(1/4*s12^2)*mt^2*s13^3*
      s24^2 - 1/4*denom(1/4*s12^2)*mt^2*s13^3*s23*s24 - 1/8*denom(1/4*s12^2)*
      mt^2*s12*s14*s23^2*s24 - 1/8*denom(1/4*s12^2)*mt^2*s12*s14*s23^3 - 1/8*
      denom(1/4*s12^2)*mt^2*s12*s14^2*s23^2 - 1/4*denom(1/4*s12^2)*mt^2*s12*
      s13*s23*s24^2 - 3/8*denom(1/4*s12^2)*mt^2*s12*s13*s23^2*s24 - 1/8*denom(
      1/4*s12^2)*mt^2*s12*s13*s23^3 - 1/2*denom(1/4*s12^2)*mt^2*s12*s13*s14*
      s23*s24 - denom(1/4*s12^2)*mt^2*s12*s13*s14*s23^2 - 1/4*denom(1/4*s12^2)
      *mt^2*s12*s13*s14^2*s23 - 1/8*denom(1/4*s12^2)*mt^2*s12*s13^2*s24^2 - 
      denom(1/4*s12^2)*mt^2*s12*s13^2*s23*s24 - 1/4*denom(1/4*s12^2)*mt^2*s12*
      s13^2*s23^2 - 1/8*denom(1/4*s12^2)*mt^2*s12*s13^2*s14*s24 - 3/8*denom(1/
      4*s12^2)*mt^2*s12*s13^2*s14*s23 - 1/8*denom(1/4*s12^2)*mt^2*s12*s13^3*
      s24 - 1/8*denom(1/4*s12^2)*mt^2*s12*s13^3*s23 - 1/8*denom(1/4*s12^2)*
      mt^2*s12^2*s14*s23^2 - 1/4*denom(1/4*s12^2)*mt^2*s12^2*s13*s23*s24 - 1/8
      *denom(1/4*s12^2)*mt^2*s12^2*s13*s23^2 - 1/4*denom(1/4*s12^2)*mt^2*s12^2
      *s13*s14*s23 - 1/8*denom(1/4*s12^2)*mt^2*s12^2*s13^2*s24 - 1/8*denom(1/4
      *s12^2)*mt^2*s12^2*s13^2*s23 + 1/8*denom(1/4*s12^2)*mt^2*mh^2*s12*s14*
      s23^2 + 1/4*denom(1/4*s12^2)*mt^2*mh^2*s12*s13*s23*s24 + 1/8*denom(1/4*
      s12^2)*mt^2*mh^2*s12*s13*s23^2 + 1/4*denom(1/4*s12^2)*mt^2*mh^2*s12*s13*
      s14*s23 + 1/8*denom(1/4*s12^2)*mt^2*mh^2*s12*s13^2*s24 + 1/8*denom(1/4*
      s12^2)*mt^2*mh^2*s12*s13^2*s23 + 1/4*denom(1/4*s12^2)*mt^4*s14*s23^2*s24
       + 1/4*denom(1/4*s12^2)*mt^4*s14*s23^3 + 3/8*denom(1/4*s12^2)*mt^4*s14^2
      *s23^2 + 3/8*denom(1/4*s12^2)*mt^4*s13*s23*s24^2 + 1/2*denom(1/4*s12^2)*
      mt^4*s13*s23^2*s24 + 1/8*denom(1/4*s12^2)*mt^4*s13*s23^3 + denom(1/4*
      s12^2)*mt^4*s13*s14*s23*s24 + 5/4*denom(1/4*s12^2)*mt^4*s13*s14*s23^2 + 
      3/8*denom(1/4*s12^2)*mt^4*s13*s14^2*s23 + 3/8*denom(1/4*s12^2)*mt^4*
      s13^2*s24^2 + 5/4*denom(1/4*s12^2)*mt^4*s13^2*s23*s24 + 1/4*denom(1/4*
      s12^2)*mt^4*s13^2*s23^2 + 1/4*denom(1/4*s12^2)*mt^4*s13^2*s14*s24 + 1/2*
      denom(1/4*s12^2)*mt^4*s13^2*s14*s23 + 1/4*denom(1/4*s12^2)*mt^4*s13^3*
      s24 + 1/8*denom(1/4*s12^2)*mt^4*s13^3*s23 + 1/8*denom(1/4*s12^2)*mt^4*
      s12*s23*s24^2 + 1/4*denom(1/4*s12^2)*mt^4*s12*s23^2*s24 + 1/8*denom(1/4*
      s12^2)*mt^4*s12*s23^3 + 3/8*denom(1/4*s12^2)*mt^4*s12*s14*s23*s24 + 7/8*
      denom(1/4*s12^2)*mt^4*s12*s14*s23^2 + 1/4*denom(1/4*s12^2)*mt^4*s12*
      s14^2*s23 + 1/4*denom(1/4*s12^2)*mt^4*s12*s13*s24^2 + 15/8*denom(1/4*
      s12^2)*mt^4*s12*s13*s23*s24 + 9/8*denom(1/4*s12^2)*mt^4*s12*s13*s23^2 + 
      3/8*denom(1/4*s12^2)*mt^4*s12*s13*s14*s24 + 15/8*denom(1/4*s12^2)*mt^4*
      s12*s13*s14*s23 + 1/8*denom(1/4*s12^2)*mt^4*s12*s13*s14^2 + 7/8*denom(1/
      4*s12^2)*mt^4*s12*s13^2*s24 + 9/8*denom(1/4*s12^2)*mt^4*s12*s13^2*s23 + 
      1/4*denom(1/4*s12^2)*mt^4*s12*s13^2*s14 + 1/8*denom(1/4*s12^2)*mt^4*s12*
      s13^3 + 1/8*denom(1/4*s12^2)*mt^4*s12^2*s23*s24 + 1/8*denom(1/4*s12^2)*
      mt^4*s12^2*s23^2 + 1/4*denom(1/4*s12^2)*mt^4*s12^2*s14*s23 + 1/4*denom(1/
      4*s12^2)*mt^4*s12^2*s13*s24 + 1/2*denom(1/4*s12^2)*mt^4*s12^2*s13*s23 + 
      1/8*denom(1/4*s12^2)*mt^4*s12^2*s13*s14 + 1/8*denom(1/4*s12^2)*mt^4*
      s12^2*s13^2 - 1/8*denom(1/4*s12^2)*mt^4*mh^2*s12*s23*s24 - 1/8*denom(1/4
      *s12^2)*mt^4*mh^2*s12*s23^2 - 1/4*denom(1/4*s12^2)*mt^4*mh^2*s12*s14*s23
       - 1/4*denom(1/4*s12^2)*mt^4*mh^2*s12*s13*s24 - 1/2*denom(1/4*s12^2)*
      mt^4*mh^2*s12*s13*s23 - 1/8*denom(1/4*s12^2)*mt^4*mh^2*s12*s13*s14 - 1/8
      *denom(1/4*s12^2)*mt^4*mh^2*s12*s13^2 - 1/8*denom(1/4*s12^2)*mt^6*s23*
      s24^2 - 1/4*denom(1/4*s12^2)*mt^6*s23^2*s24 - 1/8*denom(1/4*s12^2)*mt^6*
      s23^3 - 1/2*denom(1/4*s12^2)*mt^6*s14*s23*s24 - denom(1/4*s12^2)*mt^6*
      s14*s23^2 - 3/8*denom(1/4*s12^2)*mt^6*s14^2*s23 - 3/8*denom(1/4*s12^2)*
      mt^6*s13*s24^2 - 7/4*denom(1/4*s12^2)*mt^6*s13*s23*s24 - 7/8*denom(1/4*
      s12^2)*mt^6*s13*s23^2 - 1/2*denom(1/4*s12^2)*mt^6*s13*s14*s24 - 7/4*
      denom(1/4*s12^2)*mt^6*s13*s14*s23 - 1/8*denom(1/4*s12^2)*mt^6*s13*s14^2
       - denom(1/4*s12^2)*mt^6*s13^2*s24 - 7/8*denom(1/4*s12^2)*mt^6*s13^2*s23
       - 1/4*denom(1/4*s12^2)*mt^6*s13^2*s14 - 1/8*denom(1/4*s12^2)*mt^6*s13^3
       - 1/8*denom(1/4*s12^2)*mt^6*s12*s24^2 - denom(1/4*s12^2)*mt^6*s12*s23*
      s24 - 7/8*denom(1/4*s12^2)*mt^6*s12*s23^2 - 1/4*denom(1/4*s12^2)*mt^6*
      s12*s14*s24 - 3/2*denom(1/4*s12^2)*mt^6*s12*s14*s23 - 1/8*denom(1/4*
      s12^2)*mt^6*s12*s14^2 - 3/2*denom(1/4*s12^2)*mt^6*s12*s13*s24 - 11/4*
      denom(1/4*s12^2)*mt^6*s12*s13*s23 - denom(1/4*s12^2)*mt^6*s12*s13*s14 - 
      7/8*denom(1/4*s12^2)*mt^6*s12*s13^2 - 1/8*denom(1/4*s12^2)*mt^6*s12^2*
      s24 - 3/8*denom(1/4*s12^2)*mt^6*s12^2*s23 - 1/8*denom(1/4*s12^2)*mt^6*
      s12^2*s14 - 3/8*denom(1/4*s12^2)*mt^6*s12^2*s13 + 1/8*denom(1/4*s12^2)*
      mt^6*mh^2*s12*s24 + 3/8*denom(1/4*s12^2)*mt^6*mh^2*s12*s23 + 1/8*denom(1/
      4*s12^2)*mt^6*mh^2*s12*s14 + 3/8*denom(1/4*s12^2)*mt^6*mh^2*s12*s13 + 1/
      8*denom(1/4*s12^2)*mt^8*s24^2 + 3/4*denom(1/4*s12^2)*mt^8*s23*s24 + 5/8*
      denom(1/4*s12^2)*mt^8*s23^2 + 1/4*denom(1/4*s12^2)*mt^8*s14*s24 + 5/4*
      denom(1/4*s12^2)*mt^8*s14*s23 + 1/8*denom(1/4*s12^2)*mt^8*s14^2 + 5/4*
      denom(1/4*s12^2)*mt^8*s13*s24 + 7/4*denom(1/4*s12^2)*mt^8*s13*s23 + 3/4*
      denom(1/4*s12^2)*mt^8*s13*s14 + 5/8*denom(1/4*s12^2)*mt^8*s13^2 + 3/4*
      denom(1/4*s12^2)*mt^8*s12*s24 + 7/4*denom(1/4*s12^2)*mt^8*s12*s23 + 3/4*
      denom(1/4*s12^2)*mt^8*s12*s14 + 7/4*denom(1/4*s12^2)*mt^8*s12*s13 + 1/4*
      denom(1/4*s12^2)*mt^8*s12^2 - 1/4*denom(1/4*s12^2)*mt^8*mh^2*s12 - 1/2*
      denom(1/4*s12^2)*mt^10*s24 - denom(1/4*s12^2)*mt^10*s23 - 1/2*denom(1/4*
      s12^2)*mt^10*s14 - denom(1/4*s12^2)*mt^10*s13 - denom(1/4*s12^2)*mt^10*
      s12 + 1/2*denom(1/4*s12^2)*mt^12;
 
 .sort
id KMatrix(5,12) =  1/4*s14*s23*s24^2 + 1/2*s14*s23^2*s24 + 1/4*s14*s23^3 + 1/
      2*s14^2*s23*s24 + 1/2*s14^2*s23^2 + 1/4*s14^3*s23 + 1/4*s13*s24^3 + 1/2*
      s13*s23*s24^2 + 1/4*s13*s23^2*s24 + 1/2*s13*s14*s24^2 + s13*s14*s23*s24
       + 1/2*s13*s14*s23^2 + 1/4*s13*s14^2*s24 + 1/2*s13*s14^2*s23 + 1/2*s13^2
      *s24^2 + 1/2*s13^2*s23*s24 + 1/2*s13^2*s14*s24 + 1/4*s13^2*s14*s23 + 1/4
      *s13^3*s24 + 1/4*s12*s24^3 + 3/4*s12*s23*s24^2 + 3/4*s12*s23^2*s24 + 1/4
      *s12*s23^3 + 3/4*s12*s14*s24^2 + 2*s12*s14*s23*s24 + 5/4*s12*s14*s23^2
       + 3/4*s12*s14^2*s24 + 5/4*s12*s14^2*s23 + 1/4*s12*s14^3 + 5/4*s12*s13*
      s24^2 + 2*s12*s13*s23*s24 + 3/4*s12*s13*s23^2 + 2*s12*s13*s14*s24 + 2*
      s12*s13*s14*s23 + 3/4*s12*s13*s14^2 + 5/4*s12*s13^2*s24 + 3/4*s12*s13^2*
      s23 + 3/4*s12*s13^2*s14 + 1/4*s12*s13^3 + 3/4*s12^2*s24^2 + 3/2*s12^2*
      s23*s24 + 3/4*s12^2*s23^2 + 3/2*s12^2*s14*s24 + 7/4*s12^2*s14*s23 + 3/4*
      s12^2*s14^2 + 7/4*s12^2*s13*s24 + 3/2*s12^2*s13*s23 + 3/2*s12^2*s13*s14
       + 3/4*s12^2*s13^2 + 3/4*s12^3*s24 + 3/4*s12^3*s23 + 3/4*s12^3*s14 + 3/4
      *s12^3*s13 + 1/4*s12^4 - 1/2*mh^2*s14*s23*s24 - 1/2*mh^2*s14*s23^2 - 1/2
      *mh^2*s14^2*s23 - 1/2*mh^2*s13*s24^2 - 1/2*mh^2*s13*s23*s24 - 1/2*mh^2*
      s13*s14*s24 - 1/2*mh^2*s13*s14*s23 - 1/2*mh^2*s13^2*s24 - 3/4*mh^2*s12*
      s24^2 - 3/2*mh^2*s12*s23*s24 - 3/4*mh^2*s12*s23^2 - 3/2*mh^2*s12*s14*s24
       - 2*mh^2*s12*s14*s23 - 3/4*mh^2*s12*s14^2 - 2*mh^2*s12*s13*s24 - 3/2*
      mh^2*s12*s13*s23 - 3/2*mh^2*s12*s13*s14 - 3/4*mh^2*s12*s13^2 - 3/2*mh^2*
      s12^2*s24 - 3/2*mh^2*s12^2*s23 - 3/2*mh^2*s12^2*s14 - 3/2*mh^2*s12^2*s13
       - 3/4*mh^2*s12^3 + 1/4*mh^4*s14*s23 + 1/4*mh^4*s13*s24 + 3/4*mh^4*s12*
      s24 + 3/4*mh^4*s12*s23 + 3/4*mh^4*s12*s14 + 3/4*mh^4*s12*s13 + 3/4*mh^4*
      s12^2 - 1/4*mh^6*s12 - 1/4*mt^2*s24^3 - 3/4*mt^2*s23*s24^2 - 3/4*mt^2*
      s23^2*s24 - 1/4*mt^2*s23^3 - 3/4*mt^2*s14*s24^2 - 5/2*mt^2*s14*s23*s24
       - 7/4*mt^2*s14*s23^2 - 3/4*mt^2*s14^2*s24 - 7/4*mt^2*s14^2*s23 - 1/4*
      mt^2*s14^3 - 7/4*mt^2*s13*s24^2 - 5/2*mt^2*s13*s23*s24 - 3/4*mt^2*s13*
      s23^2 - 5/2*mt^2*s13*s14*s24 - 5/2*mt^2*s13*s14*s23 - 3/4*mt^2*s13*s14^2
       - 7/4*mt^2*s13^2*s24 - 3/4*mt^2*s13^2*s23 - 3/4*mt^2*s13^2*s14 - 1/4*
      mt^2*s13^3 - 5/2*mt^2*s12*s24^2 - 5*mt^2*s12*s23*s24 - 5/2*mt^2*s12*
      s23^2 - 5*mt^2*s12*s14*s24 - 6*mt^2*s12*s14*s23 - 5/2*mt^2*s12*s14^2 - 6
      *mt^2*s12*s13*s24 - 5*mt^2*s12*s13*s23 - 5*mt^2*s12*s13*s14 - 5/2*mt^2*
      s12*s13^2 - 17/4*mt^2*s12^2*s24 - 17/4*mt^2*s12^2*s23 - 17/4*mt^2*s12^2*
      s14 - 17/4*mt^2*s12^2*s13 - 2*mt^2*s12^3 + 1/2*mt^2*mh^2*s24^2 + mt^2*
      mh^2*s23*s24 + 1/2*mt^2*mh^2*s23^2 + mt^2*mh^2*s14*s24 + 2*mt^2*mh^2*s14
      *s23 + 1/2*mt^2*mh^2*s14^2 + 2*mt^2*mh^2*s13*s24 + mt^2*mh^2*s13*s23 + 
      mt^2*mh^2*s13*s14 + 1/2*mt^2*mh^2*s13^2 + 9/2*mt^2*mh^2*s12*s24 + 9/2*
      mt^2*mh^2*s12*s23 + 9/2*mt^2*mh^2*s12*s14 + 9/2*mt^2*mh^2*s12*s13 + 4*
      mt^2*mh^2*s12^2 - 1/4*mt^2*mh^4*s24 - 1/4*mt^2*mh^4*s23 - 1/4*mt^2*mh^4*
      s14 - 1/4*mt^2*mh^4*s13 - 2*mt^2*mh^4*s12 + 3/2*mt^4*s24^2 + 3*mt^4*s23*
      s24 + 3/2*mt^4*s23^2 + 3*mt^4*s14*s24 + 4*mt^4*s14*s23 + 3/2*mt^4*s14^2
       + 4*mt^4*s13*s24 + 3*mt^4*s13*s23 + 3*mt^4*s13*s14 + 3/2*mt^4*s13^2 + 7
      *mt^4*s12*s24 + 7*mt^4*s12*s23 + 7*mt^4*s12*s14 + 7*mt^4*s12*s13 + 11/2*
      mt^4*s12^2 - 2*mt^4*mh^2*s24 - 2*mt^4*mh^2*s23 - 2*mt^4*mh^2*s14 - 2*
      mt^4*mh^2*s13 - 6*mt^4*mh^2*s12 + 1/2*mt^4*mh^4 - 3*mt^6*s24 - 3*mt^6*
      s23 - 3*mt^6*s14 - 3*mt^6*s13 - 6*mt^6*s12 + 2*mt^6*mh^2 + 2*mt^8 + 1/4*
      denom(1/2*s12)*s14^2*s23^2*s24 + 1/4*denom(1/2*s12)*s14^2*s23^3 + 1/4*
      denom(1/2*s12)*s14^3*s23^2 + 1/2*denom(1/2*s12)*s13*s14*s23*s24^2 + 1/2*
      denom(1/2*s12)*s13*s14*s23^2*s24 + 1/2*denom(1/2*s12)*s13*s14^2*s23*s24
       + 1/4*denom(1/2*s12)*s13*s14^2*s23^2 + 1/4*denom(1/2*s12)*s13^2*s24^3
       + 1/4*denom(1/2*s12)*s13^2*s23*s24^2 + 1/4*denom(1/2*s12)*s13^2*s14*
      s24^2 + 1/2*denom(1/2*s12)*s13^2*s14*s23*s24 + 1/4*denom(1/2*s12)*s13^3*
      s24^2 + 1/4*denom(1/2*s12)*s12*s14*s23*s24^2 + 1/2*denom(1/2*s12)*s12*
      s14*s23^2*s24 + 1/4*denom(1/2*s12)*s12*s14*s23^3 + 1/2*denom(1/2*s12)*
      s12*s14^2*s23*s24 + 3/4*denom(1/2*s12)*s12*s14^2*s23^2 + 1/4*denom(1/2*
      s12)*s12*s14^3*s23 + 1/4*denom(1/2*s12)*s12*s13*s24^3 + 1/2*denom(1/2*
      s12)*s12*s13*s23*s24^2 + 1/4*denom(1/2*s12)*s12*s13*s23^2*s24 + 1/2*
      denom(1/2*s12)*s12*s13*s14*s24^2 + 3/2*denom(1/2*s12)*s12*s13*s14*s23*
      s24 + 1/2*denom(1/2*s12)*s12*s13*s14*s23^2 + 1/4*denom(1/2*s12)*s12*s13*
      s14^2*s24 + 1/2*denom(1/2*s12)*s12*s13*s14^2*s23 + 3/4*denom(1/2*s12)*
      s12*s13^2*s24^2 + 1/2*denom(1/2*s12)*s12*s13^2*s23*s24 + 1/2*denom(1/2*
      s12)*s12*s13^2*s14*s24 + 1/4*denom(1/2*s12)*s12*s13^2*s14*s23 + 1/4*
      denom(1/2*s12)*s12*s13^3*s24 + 1/2*denom(1/2*s12)*s12^2*s14*s23*s24 + 1/
      2*denom(1/2*s12)*s12^2*s14*s23^2 + 1/2*denom(1/2*s12)*s12^2*s14^2*s23 + 
      1/2*denom(1/2*s12)*s12^2*s13*s24^2 + 1/2*denom(1/2*s12)*s12^2*s13*s23*
      s24 + 1/2*denom(1/2*s12)*s12^2*s13*s14*s24 + 1/2*denom(1/2*s12)*s12^2*
      s13*s14*s23 + 1/2*denom(1/2*s12)*s12^2*s13^2*s24 + 1/4*denom(1/2*s12)*
      s12^3*s14*s23 + 1/4*denom(1/2*s12)*s12^3*s13*s24 - 1/4*denom(1/2*s12)*
      mh^2*s14^2*s23^2 - 1/2*denom(1/2*s12)*mh^2*s13*s14*s23*s24 - 1/4*denom(1/
      2*s12)*mh^2*s13^2*s24^2 - 1/2*denom(1/2*s12)*mh^2*s12*s14*s23*s24 - 1/2*
      denom(1/2*s12)*mh^2*s12*s14*s23^2 - 1/2*denom(1/2*s12)*mh^2*s12*s14^2*
      s23 - 1/2*denom(1/2*s12)*mh^2*s12*s13*s24^2 - 1/2*denom(1/2*s12)*mh^2*
      s12*s13*s23*s24 - 1/2*denom(1/2*s12)*mh^2*s12*s13*s14*s24 - 1/2*denom(1/
      2*s12)*mh^2*s12*s13*s14*s23 - 1/2*denom(1/2*s12)*mh^2*s12*s13^2*s24 - 1/
      2*denom(1/2*s12)*mh^2*s12^2*s14*s23 - 1/2*denom(1/2*s12)*mh^2*s12^2*s13*
      s24 + 1/4*denom(1/2*s12)*mh^4*s12*s14*s23 + 1/4*denom(1/2*s12)*mh^4*s12*
      s13*s24 - 1/2*denom(1/2*s12)*mt^2*s14*s23*s24^2 - denom(1/2*s12)*mt^2*
      s14*s23^2*s24 - 1/2*denom(1/2*s12)*mt^2*s14*s23^3 - denom(1/2*s12)*mt^2*
      s14^2*s23*s24 - 3/2*denom(1/2*s12)*mt^2*s14^2*s23^2 - 1/2*denom(1/2*s12)
      *mt^2*s14^3*s23 - 1/2*denom(1/2*s12)*mt^2*s13*s24^3 - denom(1/2*s12)*
      mt^2*s13*s23*s24^2 - 1/2*denom(1/2*s12)*mt^2*s13*s23^2*s24 - denom(1/2*
      s12)*mt^2*s13*s14*s24^2 - 3*denom(1/2*s12)*mt^2*s13*s14*s23*s24 - denom(
      1/2*s12)*mt^2*s13*s14*s23^2 - 1/2*denom(1/2*s12)*mt^2*s13*s14^2*s24 - 
      denom(1/2*s12)*mt^2*s13*s14^2*s23 - 3/2*denom(1/2*s12)*mt^2*s13^2*s24^2
       - denom(1/2*s12)*mt^2*s13^2*s23*s24 - denom(1/2*s12)*mt^2*s13^2*s14*s24
       - 1/2*denom(1/2*s12)*mt^2*s13^2*s14*s23 - 1/2*denom(1/2*s12)*mt^2*s13^3
      *s24 - 1/4*denom(1/2*s12)*mt^2*s12*s24^3 - 3/4*denom(1/2*s12)*mt^2*s12*
      s23*s24^2 - 3/4*denom(1/2*s12)*mt^2*s12*s23^2*s24 - 1/4*denom(1/2*s12)*
      mt^2*s12*s23^3 - 3/4*denom(1/2*s12)*mt^2*s12*s14*s24^2 - 7/2*denom(1/2*
      s12)*mt^2*s12*s14*s23*s24 - 11/4*denom(1/2*s12)*mt^2*s12*s14*s23^2 - 3/4
      *denom(1/2*s12)*mt^2*s12*s14^2*s24 - 11/4*denom(1/2*s12)*mt^2*s12*s14^2*
      s23 - 1/4*denom(1/2*s12)*mt^2*s12*s14^3 - 11/4*denom(1/2*s12)*mt^2*s12*
      s13*s24^2 - 7/2*denom(1/2*s12)*mt^2*s12*s13*s23*s24 - 3/4*denom(1/2*s12)
      *mt^2*s12*s13*s23^2 - 7/2*denom(1/2*s12)*mt^2*s12*s13*s14*s24 - 7/2*
      denom(1/2*s12)*mt^2*s12*s13*s14*s23 - 3/4*denom(1/2*s12)*mt^2*s12*s13*
      s14^2 - 11/4*denom(1/2*s12)*mt^2*s12*s13^2*s24 - 3/4*denom(1/2*s12)*mt^2
      *s12*s13^2*s23 - 3/4*denom(1/2*s12)*mt^2*s12*s13^2*s14 - 1/4*denom(1/2*
      s12)*mt^2*s12*s13^3 - 1/2*denom(1/2*s12)*mt^2*s12^2*s24^2 - denom(1/2*
      s12)*mt^2*s12^2*s23*s24 - 1/2*denom(1/2*s12)*mt^2*s12^2*s23^2 - denom(1/
      2*s12)*mt^2*s12^2*s14*s24 - 5/2*denom(1/2*s12)*mt^2*s12^2*s14*s23 - 1/2*
      denom(1/2*s12)*mt^2*s12^2*s14^2 - 5/2*denom(1/2*s12)*mt^2*s12^2*s13*s24
       - denom(1/2*s12)*mt^2*s12^2*s13*s23 - denom(1/2*s12)*mt^2*s12^2*s13*s14
       - 1/2*denom(1/2*s12)*mt^2*s12^2*s13^2 - 1/4*denom(1/2*s12)*mt^2*s12^3*
      s24 - 1/4*denom(1/2*s12)*mt^2*s12^3*s23 - 1/4*denom(1/2*s12)*mt^2*s12^3*
      s14 - 1/4*denom(1/2*s12)*mt^2*s12^3*s13 + 1/2*denom(1/2*s12)*mt^2*mh^2*
      s14*s23*s24 + 1/2*denom(1/2*s12)*mt^2*mh^2*s14*s23^2 + 1/2*denom(1/2*s12
      )*mt^2*mh^2*s14^2*s23 + 1/2*denom(1/2*s12)*mt^2*mh^2*s13*s24^2 + 1/2*
      denom(1/2*s12)*mt^2*mh^2*s13*s23*s24 + 1/2*denom(1/2*s12)*mt^2*mh^2*s13*
      s14*s24 + 1/2*denom(1/2*s12)*mt^2*mh^2*s13*s14*s23 + 1/2*denom(1/2*s12)*
      mt^2*mh^2*s13^2*s24 + 1/2*denom(1/2*s12)*mt^2*mh^2*s12*s24^2 + denom(1/2
      *s12)*mt^2*mh^2*s12*s23*s24 + 1/2*denom(1/2*s12)*mt^2*mh^2*s12*s23^2 + 
      denom(1/2*s12)*mt^2*mh^2*s12*s14*s24 + 5/2*denom(1/2*s12)*mt^2*mh^2*s12*
      s14*s23 + 1/2*denom(1/2*s12)*mt^2*mh^2*s12*s14^2 + 5/2*denom(1/2*s12)*
      mt^2*mh^2*s12*s13*s24 + denom(1/2*s12)*mt^2*mh^2*s12*s13*s23 + denom(1/2
      *s12)*mt^2*mh^2*s12*s13*s14 + 1/2*denom(1/2*s12)*mt^2*mh^2*s12*s13^2 + 1/
      2*denom(1/2*s12)*mt^2*mh^2*s12^2*s24 + 1/2*denom(1/2*s12)*mt^2*mh^2*
      s12^2*s23 + 1/2*denom(1/2*s12)*mt^2*mh^2*s12^2*s14 + 1/2*denom(1/2*s12)*
      mt^2*mh^2*s12^2*s13 - 1/4*denom(1/2*s12)*mt^2*mh^4*s12*s24 - 1/4*denom(1/
      2*s12)*mt^2*mh^4*s12*s23 - 1/4*denom(1/2*s12)*mt^2*mh^4*s12*s14 - 1/4*
      denom(1/2*s12)*mt^2*mh^4*s12*s13 + 1/4*denom(1/2*s12)*mt^4*s24^3 + 3/4*
      denom(1/2*s12)*mt^4*s23*s24^2 + 3/4*denom(1/2*s12)*mt^4*s23^2*s24 + 1/4*
      denom(1/2*s12)*mt^4*s23^3 + 3/4*denom(1/2*s12)*mt^4*s14*s24^2 + 7/2*
      denom(1/2*s12)*mt^4*s14*s23*s24 + 11/4*denom(1/2*s12)*mt^4*s14*s23^2 + 3/
      4*denom(1/2*s12)*mt^4*s14^2*s24 + 11/4*denom(1/2*s12)*mt^4*s14^2*s23 + 1/
      4*denom(1/2*s12)*mt^4*s14^3 + 11/4*denom(1/2*s12)*mt^4*s13*s24^2 + 7/2*
      denom(1/2*s12)*mt^4*s13*s23*s24 + 3/4*denom(1/2*s12)*mt^4*s13*s23^2 + 7/
      2*denom(1/2*s12)*mt^4*s13*s14*s24 + 7/2*denom(1/2*s12)*mt^4*s13*s14*s23
       + 3/4*denom(1/2*s12)*mt^4*s13*s14^2 + 11/4*denom(1/2*s12)*mt^4*s13^2*
      s24 + 3/4*denom(1/2*s12)*mt^4*s13^2*s23 + 3/4*denom(1/2*s12)*mt^4*s13^2*
      s14 + 1/4*denom(1/2*s12)*mt^4*s13^3 + 9/4*denom(1/2*s12)*mt^4*s12*s24^2
       + 9/2*denom(1/2*s12)*mt^4*s12*s23*s24 + 9/4*denom(1/2*s12)*mt^4*s12*
      s23^2 + 9/2*denom(1/2*s12)*mt^4*s12*s14*s24 + 15/2*denom(1/2*s12)*mt^4*
      s12*s14*s23 + 9/4*denom(1/2*s12)*mt^4*s12*s14^2 + 15/2*denom(1/2*s12)*
      mt^4*s12*s13*s24 + 9/2*denom(1/2*s12)*mt^4*s12*s13*s23 + 9/2*denom(1/2*
      s12)*mt^4*s12*s13*s14 + 9/4*denom(1/2*s12)*mt^4*s12*s13^2 + 5/2*denom(1/
      2*s12)*mt^4*s12^2*s24 + 5/2*denom(1/2*s12)*mt^4*s12^2*s23 + 5/2*denom(1/
      2*s12)*mt^4*s12^2*s14 + 5/2*denom(1/2*s12)*mt^4*s12^2*s13 + 1/2*denom(1/
      2*s12)*mt^4*s12^3 - 1/4*denom(1/2*s12)*mt^4*mh^2*s24^2 - 1/2*denom(1/2*
      s12)*mt^4*mh^2*s23*s24 - 1/4*denom(1/2*s12)*mt^4*mh^2*s23^2 - 1/2*denom(
      1/2*s12)*mt^4*mh^2*s14*s24 - 3/2*denom(1/2*s12)*mt^4*mh^2*s14*s23 - 1/4*
      denom(1/2*s12)*mt^4*mh^2*s14^2 - 3/2*denom(1/2*s12)*mt^4*mh^2*s13*s24 - 
      1/2*denom(1/2*s12)*mt^4*mh^2*s13*s23 - 1/2*denom(1/2*s12)*mt^4*mh^2*s13*
      s14 - 1/4*denom(1/2*s12)*mt^4*mh^2*s13^2 - 5/2*denom(1/2*s12)*mt^4*mh^2*
      s12*s24 - 5/2*denom(1/2*s12)*mt^4*mh^2*s12*s23 - 5/2*denom(1/2*s12)*mt^4
      *mh^2*s12*s14 - 5/2*denom(1/2*s12)*mt^4*mh^2*s12*s13 - denom(1/2*s12)*
      mt^4*mh^2*s12^2 + 1/2*denom(1/2*s12)*mt^4*mh^4*s12 - 3/2*denom(1/2*s12)*
      mt^6*s24^2 - 3*denom(1/2*s12)*mt^6*s23*s24 - 3/2*denom(1/2*s12)*mt^6*
      s23^2 - 3*denom(1/2*s12)*mt^6*s14*s24 - 5*denom(1/2*s12)*mt^6*s14*s23 - 
      3/2*denom(1/2*s12)*mt^6*s14^2 - 5*denom(1/2*s12)*mt^6*s13*s24 - 3*denom(
      1/2*s12)*mt^6*s13*s23 - 3*denom(1/2*s12)*mt^6*s13*s14 - 3/2*denom(1/2*
      s12)*mt^6*s13^2 - 6*denom(1/2*s12)*mt^6*s12*s24 - 6*denom(1/2*s12)*mt^6*
      s12*s23 - 6*denom(1/2*s12)*mt^6*s12*s14 - 6*denom(1/2*s12)*mt^6*s12*s13
       - 3*denom(1/2*s12)*mt^6*s12^2 + denom(1/2*s12)*mt^6*mh^2*s24 + denom(1/
      2*s12)*mt^6*mh^2*s23 + denom(1/2*s12)*mt^6*mh^2*s14 + denom(1/2*s12)*
      mt^6*mh^2*s13 + 3*denom(1/2*s12)*mt^6*mh^2*s12 + 3*denom(1/2*s12)*mt^8*
      s24 + 3*denom(1/2*s12)*mt^8*s23 + 3*denom(1/2*s12)*mt^8*s14 + 3*denom(1/
      2*s12)*mt^8*s13 + 5*denom(1/2*s12)*mt^8*s12 - denom(1/2*s12)*mt^8*mh^2
       - 2*denom(1/2*s12)*mt^10 + 1/16*denom(1/4*s12^2)*s14^3*s23^3 + 3/16*
      denom(1/4*s12^2)*s13*s14^2*s23^2*s24 + 3/16*denom(1/4*s12^2)*s13^2*s14*
      s23*s24^2 + 1/16*denom(1/4*s12^2)*s13^3*s24^3 + 1/16*denom(1/4*s12^2)*
      s12*s14^2*s23^2*s24 + 1/16*denom(1/4*s12^2)*s12*s14^2*s23^3 + 1/16*
      denom(1/4*s12^2)*s12*s14^3*s23^2 + 1/8*denom(1/4*s12^2)*s12*s13*s14*s23*
      s24^2 + 1/8*denom(1/4*s12^2)*s12*s13*s14*s23^2*s24 + 1/8*denom(1/4*s12^2
      )*s12*s13*s14^2*s23*s24 + 1/16*denom(1/4*s12^2)*s12*s13*s14^2*s23^2 + 1/
      16*denom(1/4*s12^2)*s12*s13^2*s24^3 + 1/16*denom(1/4*s12^2)*s12*s13^2*
      s23*s24^2 + 1/16*denom(1/4*s12^2)*s12*s13^2*s14*s24^2 + 1/8*denom(1/4*
      s12^2)*s12*s13^2*s14*s23*s24 + 1/16*denom(1/4*s12^2)*s12*s13^3*s24^2 + 1/
      16*denom(1/4*s12^2)*s12^2*s14^2*s23^2 + 1/8*denom(1/4*s12^2)*s12^2*s13*
      s14*s23*s24 + 1/16*denom(1/4*s12^2)*s12^2*s13^2*s24^2 - 1/16*denom(1/4*
      s12^2)*mh^2*s12*s14^2*s23^2 - 1/8*denom(1/4*s12^2)*mh^2*s12*s13*s14*s23*
      s24 - 1/16*denom(1/4*s12^2)*mh^2*s12*s13^2*s24^2 - 3/16*denom(1/4*s12^2)
      *mt^2*s14^2*s23^2*s24 - 3/16*denom(1/4*s12^2)*mt^2*s14^2*s23^3 - 3/16*
      denom(1/4*s12^2)*mt^2*s14^3*s23^2 - 3/8*denom(1/4*s12^2)*mt^2*s13*s14*
      s23*s24^2 - 3/8*denom(1/4*s12^2)*mt^2*s13*s14*s23^2*s24 - 3/8*denom(1/4*
      s12^2)*mt^2*s13*s14^2*s23*s24 - 3/16*denom(1/4*s12^2)*mt^2*s13*s14^2*
      s23^2 - 3/16*denom(1/4*s12^2)*mt^2*s13^2*s24^3 - 3/16*denom(1/4*s12^2)*
      mt^2*s13^2*s23*s24^2 - 3/16*denom(1/4*s12^2)*mt^2*s13^2*s14*s24^2 - 3/8*
      denom(1/4*s12^2)*mt^2*s13^2*s14*s23*s24 - 3/16*denom(1/4*s12^2)*mt^2*
      s13^3*s24^2 - 1/8*denom(1/4*s12^2)*mt^2*s12*s14*s23*s24^2 - 1/4*denom(1/
      4*s12^2)*mt^2*s12*s14*s23^2*s24 - 1/8*denom(1/4*s12^2)*mt^2*s12*s14*
      s23^3 - 1/4*denom(1/4*s12^2)*mt^2*s12*s14^2*s23*s24 - 1/2*denom(1/4*
      s12^2)*mt^2*s12*s14^2*s23^2 - 1/8*denom(1/4*s12^2)*mt^2*s12*s14^3*s23 - 
      1/8*denom(1/4*s12^2)*mt^2*s12*s13*s24^3 - 1/4*denom(1/4*s12^2)*mt^2*s12*
      s13*s23*s24^2 - 1/8*denom(1/4*s12^2)*mt^2*s12*s13*s23^2*s24 - 1/4*denom(
      1/4*s12^2)*mt^2*s12*s13*s14*s24^2 - denom(1/4*s12^2)*mt^2*s12*s13*s14*
      s23*s24 - 1/4*denom(1/4*s12^2)*mt^2*s12*s13*s14*s23^2 - 1/8*denom(1/4*
      s12^2)*mt^2*s12*s13*s14^2*s24 - 1/4*denom(1/4*s12^2)*mt^2*s12*s13*s14^2*
      s23 - 1/2*denom(1/4*s12^2)*mt^2*s12*s13^2*s24^2 - 1/4*denom(1/4*s12^2)*
      mt^2*s12*s13^2*s23*s24 - 1/4*denom(1/4*s12^2)*mt^2*s12*s13^2*s14*s24 - 1/
      8*denom(1/4*s12^2)*mt^2*s12*s13^2*s14*s23 - 1/8*denom(1/4*s12^2)*mt^2*
      s12*s13^3*s24 - 1/8*denom(1/4*s12^2)*mt^2*s12^2*s14*s23*s24 - 1/8*denom(
      1/4*s12^2)*mt^2*s12^2*s14*s23^2 - 1/8*denom(1/4*s12^2)*mt^2*s12^2*s14^2*
      s23 - 1/8*denom(1/4*s12^2)*mt^2*s12^2*s13*s24^2 - 1/8*denom(1/4*s12^2)*
      mt^2*s12^2*s13*s23*s24 - 1/8*denom(1/4*s12^2)*mt^2*s12^2*s13*s14*s24 - 1/
      8*denom(1/4*s12^2)*mt^2*s12^2*s13*s14*s23 - 1/8*denom(1/4*s12^2)*mt^2*
      s12^2*s13^2*s24 + 1/8*denom(1/4*s12^2)*mt^2*mh^2*s12*s14*s23*s24 + 1/8*
      denom(1/4*s12^2)*mt^2*mh^2*s12*s14*s23^2 + 1/8*denom(1/4*s12^2)*mt^2*
      mh^2*s12*s14^2*s23 + 1/8*denom(1/4*s12^2)*mt^2*mh^2*s12*s13*s24^2 + 1/8*
      denom(1/4*s12^2)*mt^2*mh^2*s12*s13*s23*s24 + 1/8*denom(1/4*s12^2)*mt^2*
      mh^2*s12*s13*s14*s24 + 1/8*denom(1/4*s12^2)*mt^2*mh^2*s12*s13*s14*s23 + 
      1/8*denom(1/4*s12^2)*mt^2*mh^2*s12*s13^2*s24 + 3/16*denom(1/4*s12^2)*
      mt^4*s14*s23*s24^2 + 3/8*denom(1/4*s12^2)*mt^4*s14*s23^2*s24 + 3/16*
      denom(1/4*s12^2)*mt^4*s14*s23^3 + 3/8*denom(1/4*s12^2)*mt^4*s14^2*s23*
      s24 + 3/4*denom(1/4*s12^2)*mt^4*s14^2*s23^2 + 3/16*denom(1/4*s12^2)*mt^4
      *s14^3*s23 + 3/16*denom(1/4*s12^2)*mt^4*s13*s24^3 + 3/8*denom(1/4*s12^2)
      *mt^4*s13*s23*s24^2 + 3/16*denom(1/4*s12^2)*mt^4*s13*s23^2*s24 + 3/8*
      denom(1/4*s12^2)*mt^4*s13*s14*s24^2 + 3/2*denom(1/4*s12^2)*mt^4*s13*s14*
      s23*s24 + 3/8*denom(1/4*s12^2)*mt^4*s13*s14*s23^2 + 3/16*denom(1/4*s12^2
      )*mt^4*s13*s14^2*s24 + 3/8*denom(1/4*s12^2)*mt^4*s13*s14^2*s23 + 3/4*
      denom(1/4*s12^2)*mt^4*s13^2*s24^2 + 3/8*denom(1/4*s12^2)*mt^4*s13^2*s23*
      s24 + 3/8*denom(1/4*s12^2)*mt^4*s13^2*s14*s24 + 3/16*denom(1/4*s12^2)*
      mt^4*s13^2*s14*s23 + 3/16*denom(1/4*s12^2)*mt^4*s13^3*s24 + 1/16*denom(1/
      4*s12^2)*mt^4*s12*s24^3 + 3/16*denom(1/4*s12^2)*mt^4*s12*s23*s24^2 + 3/
      16*denom(1/4*s12^2)*mt^4*s12*s23^2*s24 + 1/16*denom(1/4*s12^2)*mt^4*s12*
      s23^3 + 3/16*denom(1/4*s12^2)*mt^4*s12*s14*s24^2 + 9/8*denom(1/4*s12^2)*
      mt^4*s12*s14*s23*s24 + 15/16*denom(1/4*s12^2)*mt^4*s12*s14*s23^2 + 3/16*
      denom(1/4*s12^2)*mt^4*s12*s14^2*s24 + 15/16*denom(1/4*s12^2)*mt^4*s12*
      s14^2*s23 + 1/16*denom(1/4*s12^2)*mt^4*s12*s14^3 + 15/16*denom(1/4*s12^2
      )*mt^4*s12*s13*s24^2 + 9/8*denom(1/4*s12^2)*mt^4*s12*s13*s23*s24 + 3/16*
      denom(1/4*s12^2)*mt^4*s12*s13*s23^2 + 9/8*denom(1/4*s12^2)*mt^4*s12*s13*
      s14*s24 + 9/8*denom(1/4*s12^2)*mt^4*s12*s13*s14*s23 + 3/16*denom(1/4*
      s12^2)*mt^4*s12*s13*s14^2 + 15/16*denom(1/4*s12^2)*mt^4*s12*s13^2*s24 + 
      3/16*denom(1/4*s12^2)*mt^4*s12*s13^2*s23 + 3/16*denom(1/4*s12^2)*mt^4*
      s12*s13^2*s14 + 1/16*denom(1/4*s12^2)*mt^4*s12*s13^3 + 1/16*denom(1/4*
      s12^2)*mt^4*s12^2*s24^2 + 1/8*denom(1/4*s12^2)*mt^4*s12^2*s23*s24 + 1/16
      *denom(1/4*s12^2)*mt^4*s12^2*s23^2 + 1/8*denom(1/4*s12^2)*mt^4*s12^2*s14
      *s24 + 3/8*denom(1/4*s12^2)*mt^4*s12^2*s14*s23 + 1/16*denom(1/4*s12^2)*
      mt^4*s12^2*s14^2 + 3/8*denom(1/4*s12^2)*mt^4*s12^2*s13*s24 + 1/8*denom(1/
      4*s12^2)*mt^4*s12^2*s13*s23 + 1/8*denom(1/4*s12^2)*mt^4*s12^2*s13*s14 + 
      1/16*denom(1/4*s12^2)*mt^4*s12^2*s13^2 - 1/16*denom(1/4*s12^2)*mt^4*mh^2
      *s12*s24^2 - 1/8*denom(1/4*s12^2)*mt^4*mh^2*s12*s23*s24 - 1/16*denom(1/4
      *s12^2)*mt^4*mh^2*s12*s23^2 - 1/8*denom(1/4*s12^2)*mt^4*mh^2*s12*s14*s24
       - 3/8*denom(1/4*s12^2)*mt^4*mh^2*s12*s14*s23 - 1/16*denom(1/4*s12^2)*
      mt^4*mh^2*s12*s14^2 - 3/8*denom(1/4*s12^2)*mt^4*mh^2*s12*s13*s24 - 1/8*
      denom(1/4*s12^2)*mt^4*mh^2*s12*s13*s23 - 1/8*denom(1/4*s12^2)*mt^4*mh^2*
      s12*s13*s14 - 1/16*denom(1/4*s12^2)*mt^4*mh^2*s12*s13^2 - 1/16*denom(1/4
      *s12^2)*mt^6*s24^3 - 3/16*denom(1/4*s12^2)*mt^6*s23*s24^2 - 3/16*denom(1/
      4*s12^2)*mt^6*s23^2*s24 - 1/16*denom(1/4*s12^2)*mt^6*s23^3 - 3/16*denom(
      1/4*s12^2)*mt^6*s14*s24^2 - 9/8*denom(1/4*s12^2)*mt^6*s14*s23*s24 - 15/
      16*denom(1/4*s12^2)*mt^6*s14*s23^2 - 3/16*denom(1/4*s12^2)*mt^6*s14^2*
      s24 - 15/16*denom(1/4*s12^2)*mt^6*s14^2*s23 - 1/16*denom(1/4*s12^2)*mt^6
      *s14^3 - 15/16*denom(1/4*s12^2)*mt^6*s13*s24^2 - 9/8*denom(1/4*s12^2)*
      mt^6*s13*s23*s24 - 3/16*denom(1/4*s12^2)*mt^6*s13*s23^2 - 9/8*denom(1/4*
      s12^2)*mt^6*s13*s14*s24 - 9/8*denom(1/4*s12^2)*mt^6*s13*s14*s23 - 3/16*
      denom(1/4*s12^2)*mt^6*s13*s14^2 - 15/16*denom(1/4*s12^2)*mt^6*s13^2*s24
       - 3/16*denom(1/4*s12^2)*mt^6*s13^2*s23 - 3/16*denom(1/4*s12^2)*mt^6*
      s13^2*s14 - 1/16*denom(1/4*s12^2)*mt^6*s13^3 - 1/2*denom(1/4*s12^2)*mt^6
      *s12*s24^2 - denom(1/4*s12^2)*mt^6*s12*s23*s24 - 1/2*denom(1/4*s12^2)*
      mt^6*s12*s23^2 - denom(1/4*s12^2)*mt^6*s12*s14*s24 - 2*denom(1/4*s12^2)*
      mt^6*s12*s14*s23 - 1/2*denom(1/4*s12^2)*mt^6*s12*s14^2 - 2*denom(1/4*
      s12^2)*mt^6*s12*s13*s24 - denom(1/4*s12^2)*mt^6*s12*s13*s23 - denom(1/4*
      s12^2)*mt^6*s12*s13*s14 - 1/2*denom(1/4*s12^2)*mt^6*s12*s13^2 - 1/4*
      denom(1/4*s12^2)*mt^6*s12^2*s24 - 1/4*denom(1/4*s12^2)*mt^6*s12^2*s23 - 
      1/4*denom(1/4*s12^2)*mt^6*s12^2*s14 - 1/4*denom(1/4*s12^2)*mt^6*s12^2*
      s13 + 1/4*denom(1/4*s12^2)*mt^6*mh^2*s12*s24 + 1/4*denom(1/4*s12^2)*mt^6
      *mh^2*s12*s23 + 1/4*denom(1/4*s12^2)*mt^6*mh^2*s12*s14 + 1/4*denom(1/4*
      s12^2)*mt^6*mh^2*s12*s13 + 3/8*denom(1/4*s12^2)*mt^8*s24^2 + 3/4*denom(1/
      4*s12^2)*mt^8*s23*s24 + 3/8*denom(1/4*s12^2)*mt^8*s23^2 + 3/4*denom(1/4*
      s12^2)*mt^8*s14*s24 + 3/2*denom(1/4*s12^2)*mt^8*s14*s23 + 3/8*denom(1/4*
      s12^2)*mt^8*s14^2 + 3/2*denom(1/4*s12^2)*mt^8*s13*s24 + 3/4*denom(1/4*
      s12^2)*mt^8*s13*s23 + 3/4*denom(1/4*s12^2)*mt^8*s13*s14 + 3/8*denom(1/4*
      s12^2)*mt^8*s13^2 + 5/4*denom(1/4*s12^2)*mt^8*s12*s24 + 5/4*denom(1/4*
      s12^2)*mt^8*s12*s23 + 5/4*denom(1/4*s12^2)*mt^8*s12*s14 + 5/4*denom(1/4*
      s12^2)*mt^8*s12*s13 + 1/4*denom(1/4*s12^2)*mt^8*s12^2 - 1/4*denom(1/4*
      s12^2)*mt^8*mh^2*s12 - 3/4*denom(1/4*s12^2)*mt^10*s24 - 3/4*denom(1/4*
      s12^2)*mt^10*s23 - 3/4*denom(1/4*s12^2)*mt^10*s14 - 3/4*denom(1/4*s12^2)
      *mt^10*s13 - denom(1/4*s12^2)*mt^10*s12 + 1/2*denom(1/4*s12^2)*mt^12;
 
 .sort
id KMatrix(5,13) =  2*mt^5*s12*s14 - 2*mt^7*s12 - 2*denom(1/2*s12)*mt^3*s12*
      s13*s14*s23 + 2*denom(1/2*s12)*mt^5*s12*s14*s23 + 2*denom(1/2*s12)*mt^5*
      s12*s13*s23 + 2*denom(1/2*s12)*mt^5*s12*s13*s14 - 2*denom(1/2*s12)*mt^7*
      s12*s23 - 2*denom(1/2*s12)*mt^7*s12*s14 - 2*denom(1/2*s12)*mt^7*s12*s13
       + 2*denom(1/2*s12)*mt^9*s12 + 1/2*denom(1/4*s12^2)*mt*s12*s13^2*s14*
      s23^2 - denom(1/4*s12^2)*mt^3*s12*s13*s14*s23^2 - 1/2*denom(1/4*s12^2)*
      mt^3*s12*s13^2*s23^2 - denom(1/4*s12^2)*mt^3*s12*s13^2*s14*s23 + 1/2*
      denom(1/4*s12^2)*mt^5*s12*s14*s23^2 + denom(1/4*s12^2)*mt^5*s12*s13*
      s23^2 + 2*denom(1/4*s12^2)*mt^5*s12*s13*s14*s23 + denom(1/4*s12^2)*mt^5*
      s12*s13^2*s23 + 1/2*denom(1/4*s12^2)*mt^5*s12*s13^2*s14 - 1/2*denom(1/4*
      s12^2)*mt^7*s12*s23^2 - denom(1/4*s12^2)*mt^7*s12*s14*s23 - 2*denom(1/4*
      s12^2)*mt^7*s12*s13*s23 - denom(1/4*s12^2)*mt^7*s12*s13*s14 - 1/2*denom(
      1/4*s12^2)*mt^7*s12*s13^2 + denom(1/4*s12^2)*mt^9*s12*s23 + 1/2*denom(1/
      4*s12^2)*mt^9*s12*s14 + denom(1/4*s12^2)*mt^9*s12*s13 - 1/2*denom(1/4*
      s12^2)*mt^11*s12;
 
 .sort
id KMatrix(5,14) =   - mt^3*s12*s14*s24 - mt^3*s12*s14*s23 - mt^3*s12*s14^2 - 
      mt^3*s12*s13*s14 - mt^3*s12^2*s14 + mt^3*mh^2*s12*s14 + mt^5*s12*s24 + 
      mt^5*s12*s23 + 3*mt^5*s12*s14 + mt^5*s12*s13 + mt^5*s12^2 - mt^5*mh^2*
      s12 - 2*mt^7*s12 + 1/2*denom(1/2*s12)*mt*s12*s13*s14*s23*s24 + 1/2*
      denom(1/2*s12)*mt*s12*s13*s14*s23^2 + 1/2*denom(1/2*s12)*mt*s12*s13*
      s14^2*s23 + 1/2*denom(1/2*s12)*mt*s12*s13^2*s14*s23 + 1/2*denom(1/2*s12)
      *mt*s12^2*s13*s14*s23 - 1/2*denom(1/2*s12)*mt*mh^2*s12*s13*s14*s23 - 1/2
      *denom(1/2*s12)*mt^3*s12*s14*s23*s24 - 1/2*denom(1/2*s12)*mt^3*s12*s14*
      s23^2 - denom(1/2*s12)*mt^3*s12*s14^2*s23 - 1/2*denom(1/2*s12)*mt^3*s12*
      s13*s23*s24 - 1/2*denom(1/2*s12)*mt^3*s12*s13*s23^2 - denom(1/2*s12)*
      mt^3*s12*s13*s14*s24 - 5/2*denom(1/2*s12)*mt^3*s12*s13*s14*s23 - 1/2*
      denom(1/2*s12)*mt^3*s12*s13*s14^2 - 1/2*denom(1/2*s12)*mt^3*s12*s13^2*
      s23 - 1/2*denom(1/2*s12)*mt^3*s12*s13^2*s14 - 1/2*denom(1/2*s12)*mt^3*
      s12^2*s14*s23 - 1/2*denom(1/2*s12)*mt^3*s12^2*s13*s23 - 1/2*denom(1/2*
      s12)*mt^3*s12^2*s13*s14 + 1/2*denom(1/2*s12)*mt^3*mh^2*s12*s14*s23 + 1/2
      *denom(1/2*s12)*mt^3*mh^2*s12*s13*s23 + 1/2*denom(1/2*s12)*mt^3*mh^2*s12
      *s13*s14 + 1/2*denom(1/2*s12)*mt^5*s12*s23*s24 + 1/2*denom(1/2*s12)*mt^5
      *s12*s23^2 + denom(1/2*s12)*mt^5*s12*s14*s24 + 3*denom(1/2*s12)*mt^5*s12
      *s14*s23 + denom(1/2*s12)*mt^5*s12*s14^2 + denom(1/2*s12)*mt^5*s12*s13*
      s24 + 2*denom(1/2*s12)*mt^5*s12*s13*s23 + 5/2*denom(1/2*s12)*mt^5*s12*
      s13*s14 + 1/2*denom(1/2*s12)*mt^5*s12*s13^2 + 1/2*denom(1/2*s12)*mt^5*
      s12^2*s23 + 1/2*denom(1/2*s12)*mt^5*s12^2*s14 + 1/2*denom(1/2*s12)*mt^5*
      s12^2*s13 - 1/2*denom(1/2*s12)*mt^5*mh^2*s12*s23 - 1/2*denom(1/2*s12)*
      mt^5*mh^2*s12*s14 - 1/2*denom(1/2*s12)*mt^5*mh^2*s12*s13 - denom(1/2*s12
      )*mt^7*s12*s24 - 2*denom(1/2*s12)*mt^7*s12*s23 - 3*denom(1/2*s12)*mt^7*
      s12*s14 - 2*denom(1/2*s12)*mt^7*s12*s13 - 1/2*denom(1/2*s12)*mt^7*s12^2
       + 1/2*denom(1/2*s12)*mt^7*mh^2*s12 + 2*denom(1/2*s12)*mt^9*s12 + 1/4*
      denom(1/4*s12^2)*mt*s12*s13*s14^2*s23^2 + 1/4*denom(1/4*s12^2)*mt*s12*
      s13^2*s14*s23*s24 - 1/4*denom(1/4*s12^2)*mt^3*s12*s14^2*s23^2 - 1/2*
      denom(1/4*s12^2)*mt^3*s12*s13*s14*s23*s24 - 1/2*denom(1/4*s12^2)*mt^3*
      s12*s13*s14*s23^2 - 1/2*denom(1/4*s12^2)*mt^3*s12*s13*s14^2*s23 - 1/4*
      denom(1/4*s12^2)*mt^3*s12*s13^2*s23*s24 - 1/4*denom(1/4*s12^2)*mt^3*s12*
      s13^2*s14*s24 - 1/4*denom(1/4*s12^2)*mt^3*s12*s13^2*s14*s23 + 1/4*denom(
      1/4*s12^2)*mt^5*s12*s14*s23*s24 + 1/2*denom(1/4*s12^2)*mt^5*s12*s14*
      s23^2 + 1/2*denom(1/4*s12^2)*mt^5*s12*s14^2*s23 + 1/2*denom(1/4*s12^2)*
      mt^5*s12*s13*s23*s24 + 1/4*denom(1/4*s12^2)*mt^5*s12*s13*s23^2 + 1/2*
      denom(1/4*s12^2)*mt^5*s12*s13*s14*s24 + 3/2*denom(1/4*s12^2)*mt^5*s12*
      s13*s14*s23 + 1/4*denom(1/4*s12^2)*mt^5*s12*s13*s14^2 + 1/4*denom(1/4*
      s12^2)*mt^5*s12*s13^2*s24 + 1/4*denom(1/4*s12^2)*mt^5*s12*s13^2*s23 + 1/
      4*denom(1/4*s12^2)*mt^5*s12*s13^2*s14 - 1/4*denom(1/4*s12^2)*mt^7*s12*
      s23*s24 - 1/4*denom(1/4*s12^2)*mt^7*s12*s23^2 - 1/4*denom(1/4*s12^2)*
      mt^7*s12*s14*s24 - 5/4*denom(1/4*s12^2)*mt^7*s12*s14*s23 - 1/4*denom(1/4
      *s12^2)*mt^7*s12*s14^2 - 1/2*denom(1/4*s12^2)*mt^7*s12*s13*s24 - denom(1/
      4*s12^2)*mt^7*s12*s13*s23 - denom(1/4*s12^2)*mt^7*s12*s13*s14 - 1/4*
      denom(1/4*s12^2)*mt^7*s12*s13^2 + 1/4*denom(1/4*s12^2)*mt^9*s12*s24 + 3/
      4*denom(1/4*s12^2)*mt^9*s12*s23 + 3/4*denom(1/4*s12^2)*mt^9*s12*s14 + 3/
      4*denom(1/4*s12^2)*mt^9*s12*s13 - 1/2*denom(1/4*s12^2)*mt^11*s12;
 
 .sort
id KMatrix(5,15) =   - mt^3*s12*s14*s24 - mt^3*s12*s14*s23 - mt^3*s12*s14^2 - 
      mt^3*s12*s13*s14 - mt^3*s12^2*s14 + mt^3*mh^2*s12*s14 + mt^5*s12*s24 + 
      mt^5*s12*s23 + 3*mt^5*s12*s14 + mt^5*s12*s13 + mt^5*s12^2 - mt^5*mh^2*
      s12 - 2*mt^7*s12 + 1/2*denom(1/2*s12)*mt*s12*s13*s14*s23*s24 + 1/2*
      denom(1/2*s12)*mt*s12*s13*s14*s23^2 + 1/2*denom(1/2*s12)*mt*s12*s13*
      s14^2*s23 + 1/2*denom(1/2*s12)*mt*s12*s13^2*s14*s23 + 1/2*denom(1/2*s12)
      *mt*s12^2*s13*s14*s23 - 1/2*denom(1/2*s12)*mt*mh^2*s12*s13*s14*s23 - 1/2
      *denom(1/2*s12)*mt^3*s12*s14*s23*s24 - 1/2*denom(1/2*s12)*mt^3*s12*s14*
      s23^2 - denom(1/2*s12)*mt^3*s12*s14^2*s23 - 1/2*denom(1/2*s12)*mt^3*s12*
      s13*s23*s24 - 1/2*denom(1/2*s12)*mt^3*s12*s13*s23^2 - denom(1/2*s12)*
      mt^3*s12*s13*s14*s24 - 5/2*denom(1/2*s12)*mt^3*s12*s13*s14*s23 - 1/2*
      denom(1/2*s12)*mt^3*s12*s13*s14^2 - 1/2*denom(1/2*s12)*mt^3*s12*s13^2*
      s23 - 1/2*denom(1/2*s12)*mt^3*s12*s13^2*s14 - 1/2*denom(1/2*s12)*mt^3*
      s12^2*s14*s23 - 1/2*denom(1/2*s12)*mt^3*s12^2*s13*s23 - 1/2*denom(1/2*
      s12)*mt^3*s12^2*s13*s14 + 1/2*denom(1/2*s12)*mt^3*mh^2*s12*s14*s23 + 1/2
      *denom(1/2*s12)*mt^3*mh^2*s12*s13*s23 + 1/2*denom(1/2*s12)*mt^3*mh^2*s12
      *s13*s14 + 1/2*denom(1/2*s12)*mt^5*s12*s23*s24 + 1/2*denom(1/2*s12)*mt^5
      *s12*s23^2 + denom(1/2*s12)*mt^5*s12*s14*s24 + 3*denom(1/2*s12)*mt^5*s12
      *s14*s23 + denom(1/2*s12)*mt^5*s12*s14^2 + denom(1/2*s12)*mt^5*s12*s13*
      s24 + 2*denom(1/2*s12)*mt^5*s12*s13*s23 + 5/2*denom(1/2*s12)*mt^5*s12*
      s13*s14 + 1/2*denom(1/2*s12)*mt^5*s12*s13^2 + 1/2*denom(1/2*s12)*mt^5*
      s12^2*s23 + 1/2*denom(1/2*s12)*mt^5*s12^2*s14 + 1/2*denom(1/2*s12)*mt^5*
      s12^2*s13 - 1/2*denom(1/2*s12)*mt^5*mh^2*s12*s23 - 1/2*denom(1/2*s12)*
      mt^5*mh^2*s12*s14 - 1/2*denom(1/2*s12)*mt^5*mh^2*s12*s13 - denom(1/2*s12
      )*mt^7*s12*s24 - 2*denom(1/2*s12)*mt^7*s12*s23 - 3*denom(1/2*s12)*mt^7*
      s12*s14 - 2*denom(1/2*s12)*mt^7*s12*s13 - 1/2*denom(1/2*s12)*mt^7*s12^2
       + 1/2*denom(1/2*s12)*mt^7*mh^2*s12 + 2*denom(1/2*s12)*mt^9*s12 + 1/4*
      denom(1/4*s12^2)*mt*s12*s13*s14^2*s23^2 + 1/4*denom(1/4*s12^2)*mt*s12*
      s13^2*s14*s23*s24 - 1/4*denom(1/4*s12^2)*mt^3*s12*s14^2*s23^2 - 1/2*
      denom(1/4*s12^2)*mt^3*s12*s13*s14*s23*s24 - 1/2*denom(1/4*s12^2)*mt^3*
      s12*s13*s14*s23^2 - 1/2*denom(1/4*s12^2)*mt^3*s12*s13*s14^2*s23 - 1/4*
      denom(1/4*s12^2)*mt^3*s12*s13^2*s23*s24 - 1/4*denom(1/4*s12^2)*mt^3*s12*
      s13^2*s14*s24 - 1/4*denom(1/4*s12^2)*mt^3*s12*s13^2*s14*s23 + 1/4*denom(
      1/4*s12^2)*mt^5*s12*s14*s23*s24 + 1/2*denom(1/4*s12^2)*mt^5*s12*s14*
      s23^2 + 1/2*denom(1/4*s12^2)*mt^5*s12*s14^2*s23 + 1/2*denom(1/4*s12^2)*
      mt^5*s12*s13*s23*s24 + 1/4*denom(1/4*s12^2)*mt^5*s12*s13*s23^2 + 1/2*
      denom(1/4*s12^2)*mt^5*s12*s13*s14*s24 + 3/2*denom(1/4*s12^2)*mt^5*s12*
      s13*s14*s23 + 1/4*denom(1/4*s12^2)*mt^5*s12*s13*s14^2 + 1/4*denom(1/4*
      s12^2)*mt^5*s12*s13^2*s24 + 1/4*denom(1/4*s12^2)*mt^5*s12*s13^2*s23 + 1/
      4*denom(1/4*s12^2)*mt^5*s12*s13^2*s14 - 1/4*denom(1/4*s12^2)*mt^7*s12*
      s23*s24 - 1/4*denom(1/4*s12^2)*mt^7*s12*s23^2 - 1/4*denom(1/4*s12^2)*
      mt^7*s12*s14*s24 - 5/4*denom(1/4*s12^2)*mt^7*s12*s14*s23 - 1/4*denom(1/4
      *s12^2)*mt^7*s12*s14^2 - 1/2*denom(1/4*s12^2)*mt^7*s12*s13*s24 - denom(1/
      4*s12^2)*mt^7*s12*s13*s23 - denom(1/4*s12^2)*mt^7*s12*s13*s14 - 1/4*
      denom(1/4*s12^2)*mt^7*s12*s13^2 + 1/4*denom(1/4*s12^2)*mt^9*s12*s24 + 3/
      4*denom(1/4*s12^2)*mt^9*s12*s23 + 3/4*denom(1/4*s12^2)*mt^9*s12*s14 + 3/
      4*denom(1/4*s12^2)*mt^9*s12*s13 - 1/2*denom(1/4*s12^2)*mt^11*s12;
 
 .sort
id KMatrix(5,16) =  1/2*mt*s12*s14*s24^2 + mt*s12*s14*s23*s24 + 1/2*mt*s12*s14
      *s23^2 + mt*s12*s14^2*s24 + mt*s12*s14^2*s23 + 1/2*mt*s12*s14^3 + mt*s12
      *s13*s14*s24 + mt*s12*s13*s14*s23 + mt*s12*s13*s14^2 + 1/2*mt*s12*s13^2*
      s14 + mt*s12^2*s14*s24 + mt*s12^2*s14*s23 + mt*s12^2*s14^2 + mt*s12^2*
      s13*s14 + 1/2*mt*s12^3*s14 - mt*mh^2*s12*s14*s24 - mt*mh^2*s12*s14*s23
       - mt*mh^2*s12*s14^2 - mt*mh^2*s12*s13*s14 - mt*mh^2*s12^2*s14 + 1/2*mt*
      mh^4*s12*s14 - 1/2*mt^3*s12*s24^2 - mt^3*s12*s23*s24 - 1/2*mt^3*s12*
      s23^2 - 3*mt^3*s12*s14*s24 - 3*mt^3*s12*s14*s23 - 5/2*mt^3*s12*s14^2 - 
      mt^3*s12*s13*s24 - mt^3*s12*s13*s23 - 3*mt^3*s12*s13*s14 - 1/2*mt^3*s12*
      s13^2 - mt^3*s12^2*s24 - mt^3*s12^2*s23 - 3*mt^3*s12^2*s14 - mt^3*s12^2*
      s13 - 1/2*mt^3*s12^3 + mt^3*mh^2*s12*s24 + mt^3*mh^2*s12*s23 + 3*mt^3*
      mh^2*s12*s14 + mt^3*mh^2*s12*s13 + mt^3*mh^2*s12^2 - 1/2*mt^3*mh^4*s12
       + 2*mt^5*s12*s24 + 2*mt^5*s12*s23 + 4*mt^5*s12*s14 + 2*mt^5*s12*s13 + 2
      *mt^5*s12^2 - 2*mt^5*mh^2*s12 - 2*mt^7*s12 + 1/2*denom(1/2*s12)*mt*s12*
      s14^2*s23*s24 + 1/2*denom(1/2*s12)*mt*s12*s14^2*s23^2 + 1/2*denom(1/2*
      s12)*mt*s12*s14^3*s23 + 1/2*denom(1/2*s12)*mt*s12*s13*s14*s24^2 + 1/2*
      denom(1/2*s12)*mt*s12*s13*s14*s23*s24 + 1/2*denom(1/2*s12)*mt*s12*s13*
      s14^2*s24 + 1/2*denom(1/2*s12)*mt*s12*s13*s14^2*s23 + 1/2*denom(1/2*s12)
      *mt*s12*s13^2*s14*s24 + 1/2*denom(1/2*s12)*mt*s12^2*s14^2*s23 + 1/2*
      denom(1/2*s12)*mt*s12^2*s13*s14*s24 - 1/2*denom(1/2*s12)*mt*mh^2*s12*
      s14^2*s23 - 1/2*denom(1/2*s12)*mt*mh^2*s12*s13*s14*s24 - 1/2*denom(1/2*
      s12)*mt^3*s12*s14*s24^2 - 3/2*denom(1/2*s12)*mt^3*s12*s14*s23*s24 - 
      denom(1/2*s12)*mt^3*s12*s14*s23^2 - denom(1/2*s12)*mt^3*s12*s14^2*s24 - 
      5/2*denom(1/2*s12)*mt^3*s12*s14^2*s23 - 1/2*denom(1/2*s12)*mt^3*s12*
      s14^3 - 1/2*denom(1/2*s12)*mt^3*s12*s13*s24^2 - 1/2*denom(1/2*s12)*mt^3*
      s12*s13*s23*s24 - 5/2*denom(1/2*s12)*mt^3*s12*s13*s14*s24 - 3/2*denom(1/
      2*s12)*mt^3*s12*s13*s14*s23 - denom(1/2*s12)*mt^3*s12*s13*s14^2 - 1/2*
      denom(1/2*s12)*mt^3*s12*s13^2*s24 - 1/2*denom(1/2*s12)*mt^3*s12*s13^2*
      s14 - 1/2*denom(1/2*s12)*mt^3*s12^2*s14*s24 - denom(1/2*s12)*mt^3*s12^2*
      s14*s23 - 1/2*denom(1/2*s12)*mt^3*s12^2*s14^2 - 1/2*denom(1/2*s12)*mt^3*
      s12^2*s13*s24 - 1/2*denom(1/2*s12)*mt^3*s12^2*s13*s14 + 1/2*denom(1/2*
      s12)*mt^3*mh^2*s12*s14*s24 + denom(1/2*s12)*mt^3*mh^2*s12*s14*s23 + 1/2*
      denom(1/2*s12)*mt^3*mh^2*s12*s14^2 + 1/2*denom(1/2*s12)*mt^3*mh^2*s12*
      s13*s24 + 1/2*denom(1/2*s12)*mt^3*mh^2*s12*s13*s14 + 1/2*denom(1/2*s12)*
      mt^5*s12*s24^2 + denom(1/2*s12)*mt^5*s12*s23*s24 + 1/2*denom(1/2*s12)*
      mt^5*s12*s23^2 + 3*denom(1/2*s12)*mt^5*s12*s14*s24 + 4*denom(1/2*s12)*
      mt^5*s12*s14*s23 + 5/2*denom(1/2*s12)*mt^5*s12*s14^2 + 2*denom(1/2*s12)*
      mt^5*s12*s13*s24 + denom(1/2*s12)*mt^5*s12*s13*s23 + 3*denom(1/2*s12)*
      mt^5*s12*s13*s14 + 1/2*denom(1/2*s12)*mt^5*s12*s13^2 + 1/2*denom(1/2*s12
      )*mt^5*s12^2*s24 + 1/2*denom(1/2*s12)*mt^5*s12^2*s23 + 3/2*denom(1/2*s12
      )*mt^5*s12^2*s14 + 1/2*denom(1/2*s12)*mt^5*s12^2*s13 - 1/2*denom(1/2*s12
      )*mt^5*mh^2*s12*s24 - 1/2*denom(1/2*s12)*mt^5*mh^2*s12*s23 - 3/2*denom(1/
      2*s12)*mt^5*mh^2*s12*s14 - 1/2*denom(1/2*s12)*mt^5*mh^2*s12*s13 - 2*
      denom(1/2*s12)*mt^7*s12*s24 - 2*denom(1/2*s12)*mt^7*s12*s23 - 4*denom(1/
      2*s12)*mt^7*s12*s14 - 2*denom(1/2*s12)*mt^7*s12*s13 - denom(1/2*s12)*
      mt^7*s12^2 + denom(1/2*s12)*mt^7*mh^2*s12 + 2*denom(1/2*s12)*mt^9*s12 + 
      1/8*denom(1/4*s12^2)*mt*s12*s14^3*s23^2 + 1/4*denom(1/4*s12^2)*mt*s12*
      s13*s14^2*s23*s24 + 1/8*denom(1/4*s12^2)*mt*s12*s13^2*s14*s24^2 - 1/4*
      denom(1/4*s12^2)*mt^3*s12*s14^2*s23*s24 - 3/8*denom(1/4*s12^2)*mt^3*s12*
      s14^2*s23^2 - 1/4*denom(1/4*s12^2)*mt^3*s12*s14^3*s23 - 1/4*denom(1/4*
      s12^2)*mt^3*s12*s13*s14*s24^2 - 1/2*denom(1/4*s12^2)*mt^3*s12*s13*s14*
      s23*s24 - 1/4*denom(1/4*s12^2)*mt^3*s12*s13*s14^2*s24 - 1/4*denom(1/4*
      s12^2)*mt^3*s12*s13*s14^2*s23 - 1/8*denom(1/4*s12^2)*mt^3*s12*s13^2*
      s24^2 - 1/4*denom(1/4*s12^2)*mt^3*s12*s13^2*s14*s24 + 1/8*denom(1/4*
      s12^2)*mt^5*s12*s14*s24^2 + 1/2*denom(1/4*s12^2)*mt^5*s12*s14*s23*s24 + 
      3/8*denom(1/4*s12^2)*mt^5*s12*s14*s23^2 + 1/4*denom(1/4*s12^2)*mt^5*s12*
      s14^2*s24 + denom(1/4*s12^2)*mt^5*s12*s14^2*s23 + 1/8*denom(1/4*s12^2)*
      mt^5*s12*s14^3 + 1/4*denom(1/4*s12^2)*mt^5*s12*s13*s24^2 + 1/4*denom(1/4
      *s12^2)*mt^5*s12*s13*s23*s24 + denom(1/4*s12^2)*mt^5*s12*s13*s14*s24 + 1/
      2*denom(1/4*s12^2)*mt^5*s12*s13*s14*s23 + 1/4*denom(1/4*s12^2)*mt^5*s12*
      s13*s14^2 + 1/4*denom(1/4*s12^2)*mt^5*s12*s13^2*s24 + 1/8*denom(1/4*
      s12^2)*mt^5*s12*s13^2*s14 - 1/8*denom(1/4*s12^2)*mt^7*s12*s24^2 - 1/4*
      denom(1/4*s12^2)*mt^7*s12*s23*s24 - 1/8*denom(1/4*s12^2)*mt^7*s12*s23^2
       - 3/4*denom(1/4*s12^2)*mt^7*s12*s14*s24 - 5/4*denom(1/4*s12^2)*mt^7*s12
      *s14*s23 - 5/8*denom(1/4*s12^2)*mt^7*s12*s14^2 - 3/4*denom(1/4*s12^2)*
      mt^7*s12*s13*s24 - 1/4*denom(1/4*s12^2)*mt^7*s12*s13*s23 - 3/4*denom(1/4
      *s12^2)*mt^7*s12*s13*s14 - 1/8*denom(1/4*s12^2)*mt^7*s12*s13^2 + 1/2*
      denom(1/4*s12^2)*mt^9*s12*s24 + 1/2*denom(1/4*s12^2)*mt^9*s12*s23 + 
      denom(1/4*s12^2)*mt^9*s12*s14 + 1/2*denom(1/4*s12^2)*mt^9*s12*s13 - 1/2*
      denom(1/4*s12^2)*mt^11*s12;
 
 .sort
id KMatrix(5,17) =  2*mt^3*s14 - 2*mt^3*s13 - 2*denom(1/2*s12)*mt*s13*s14*s23
       + 2*denom(1/2*s12)*mt*s13^2*s23 + 2*denom(1/2*s12)*mt^3*s14*s23 - 2*
      denom(1/2*s12)*mt^3*s13*s23 + 2*denom(1/2*s12)*mt^3*s13*s14 - 2*denom(1/
      2*s12)*mt^3*s13^2 - 2*denom(1/2*s12)*mt^5*s14 + 2*denom(1/2*s12)*mt^5*
      s13 + 1/2*denom(1/4*s12^2)*mt*s12*s13*s14*s23 - 1/2*denom(1/4*s12^2)*mt*
      s12*s13^2*s23 - 1/2*denom(1/4*s12^2)*mt^3*s12*s14*s23 + 1/2*denom(1/4*
      s12^2)*mt^3*s12*s13*s23 - 1/2*denom(1/4*s12^2)*mt^3*s12*s13*s14 + 1/2*
      denom(1/4*s12^2)*mt^3*s12*s13^2 + 1/2*denom(1/4*s12^2)*mt^5*s12*s14 - 1/
      2*denom(1/4*s12^2)*mt^5*s12*s13;
 
 .sort
id KMatrix(5,18) =  2*mt^2*s13*s14 - 2*mt^4*s14 - 2*mt^4*s13 + 2*mt^6 - 2*
      denom(1/2*s12)*s13^2*s14*s23 + 4*denom(1/2*s12)*mt^2*s13*s14*s23 + 2*
      denom(1/2*s12)*mt^2*s13^2*s23 + 2*denom(1/2*s12)*mt^2*s13^2*s14 - 2*
      denom(1/2*s12)*mt^4*s14*s23 - 4*denom(1/2*s12)*mt^4*s13*s23 - 4*denom(1/
      2*s12)*mt^4*s13*s14 - 2*denom(1/2*s12)*mt^4*s13^2 + 2*denom(1/2*s12)*
      mt^6*s23 + 2*denom(1/2*s12)*mt^6*s14 + 4*denom(1/2*s12)*mt^6*s13 - 2*
      denom(1/2*s12)*mt^8 + 1/2*denom(1/4*s12^2)*s12*s13^2*s14*s23 - denom(1/4
      *s12^2)*mt^2*s12*s13*s14*s23 - 1/2*denom(1/4*s12^2)*mt^2*s12*s13^2*s23
       - 1/2*denom(1/4*s12^2)*mt^2*s12*s13^2*s14 + 1/2*denom(1/4*s12^2)*mt^4*
      s12*s14*s23 + denom(1/4*s12^2)*mt^4*s12*s13*s23 + denom(1/4*s12^2)*mt^4*
      s12*s13*s14 + 1/2*denom(1/4*s12^2)*mt^4*s12*s13^2 - 1/2*denom(1/4*s12^2)
      *mt^6*s12*s23 - 1/2*denom(1/4*s12^2)*mt^6*s12*s14 - denom(1/4*s12^2)*
      mt^6*s12*s13 + 1/2*denom(1/4*s12^2)*mt^8*s12;
 
 .sort
id KMatrix(5,19) =  mt^2*s14*s23 + mt^2*s13*s24 + mt^2*s12*s24 + mt^2*s12*s23
       + mt^2*s12*s14 + mt^2*s12*s13 + mt^2*s12^2 - mt^2*mh^2*s12 - mt^4*s24
       - mt^4*s23 - mt^4*s14 - mt^4*s13 - 4*mt^4*s12 + 2*mt^6 - denom(1/2*s12)
      *s13*s14*s23^2 - denom(1/2*s12)*s13^2*s23*s24 - denom(1/2*s12)*s12*s13*
      s23*s24 - denom(1/2*s12)*s12*s13*s23^2 - denom(1/2*s12)*s12*s13*s14*s23
       - denom(1/2*s12)*s12*s13^2*s23 - denom(1/2*s12)*s12^2*s13*s23 + denom(1/
      2*s12)*mh^2*s12*s13*s23 + denom(1/2*s12)*mt^2*s14*s23^2 + 2*denom(1/2*
      s12)*mt^2*s13*s23*s24 + denom(1/2*s12)*mt^2*s13*s23^2 + 2*denom(1/2*s12)
      *mt^2*s13*s14*s23 + denom(1/2*s12)*mt^2*s13^2*s24 + denom(1/2*s12)*mt^2*
      s13^2*s23 + denom(1/2*s12)*mt^2*s12*s23*s24 + denom(1/2*s12)*mt^2*s12*
      s23^2 + denom(1/2*s12)*mt^2*s12*s14*s23 + denom(1/2*s12)*mt^2*s12*s13*
      s24 + 6*denom(1/2*s12)*mt^2*s12*s13*s23 + denom(1/2*s12)*mt^2*s12*s13*
      s14 + denom(1/2*s12)*mt^2*s12*s13^2 + denom(1/2*s12)*mt^2*s12^2*s23 + 
      denom(1/2*s12)*mt^2*s12^2*s13 - denom(1/2*s12)*mt^2*mh^2*s12*s23 - 
      denom(1/2*s12)*mt^2*mh^2*s12*s13 - denom(1/2*s12)*mt^4*s23*s24 - denom(1/
      2*s12)*mt^4*s23^2 - 2*denom(1/2*s12)*mt^4*s14*s23 - 2*denom(1/2*s12)*
      mt^4*s13*s24 - 4*denom(1/2*s12)*mt^4*s13*s23 - denom(1/2*s12)*mt^4*s13*
      s14 - denom(1/2*s12)*mt^4*s13^2 - denom(1/2*s12)*mt^4*s12*s24 - 5*denom(
      1/2*s12)*mt^4*s12*s23 - denom(1/2*s12)*mt^4*s12*s14 - 5*denom(1/2*s12)*
      mt^4*s12*s13 - denom(1/2*s12)*mt^4*s12^2 + denom(1/2*s12)*mt^4*mh^2*s12
       + denom(1/2*s12)*mt^6*s24 + 3*denom(1/2*s12)*mt^6*s23 + denom(1/2*s12)*
      mt^6*s14 + 3*denom(1/2*s12)*mt^6*s13 + 4*denom(1/2*s12)*mt^6*s12 - 2*
      denom(1/2*s12)*mt^8 + 1/4*denom(1/4*s12^2)*s12*s13*s14*s23^2 + 1/4*
      denom(1/4*s12^2)*s12*s13^2*s23*s24 + 1/4*denom(1/4*s12^2)*s12^2*s13*s23*
      s24 + 1/4*denom(1/4*s12^2)*s12^2*s13*s23^2 + 1/4*denom(1/4*s12^2)*s12^2*
      s13*s14*s23 + 1/4*denom(1/4*s12^2)*s12^2*s13^2*s23 + 1/4*denom(1/4*s12^2
      )*s12^3*s13*s23 - 1/4*denom(1/4*s12^2)*mh^2*s12^2*s13*s23 - 1/4*denom(1/
      4*s12^2)*mt^2*s12*s14*s23^2 - 1/2*denom(1/4*s12^2)*mt^2*s12*s13*s23*s24
       - 1/4*denom(1/4*s12^2)*mt^2*s12*s13*s23^2 - 1/2*denom(1/4*s12^2)*mt^2*
      s12*s13*s14*s23 - 1/4*denom(1/4*s12^2)*mt^2*s12*s13^2*s24 - 1/4*denom(1/
      4*s12^2)*mt^2*s12*s13^2*s23 - 1/4*denom(1/4*s12^2)*mt^2*s12^2*s23*s24 - 
      1/4*denom(1/4*s12^2)*mt^2*s12^2*s23^2 - 1/4*denom(1/4*s12^2)*mt^2*s12^2*
      s14*s23 - 1/4*denom(1/4*s12^2)*mt^2*s12^2*s13*s24 - 3/2*denom(1/4*s12^2)
      *mt^2*s12^2*s13*s23 - 1/4*denom(1/4*s12^2)*mt^2*s12^2*s13*s14 - 1/4*
      denom(1/4*s12^2)*mt^2*s12^2*s13^2 - 1/4*denom(1/4*s12^2)*mt^2*s12^3*s23
       - 1/4*denom(1/4*s12^2)*mt^2*s12^3*s13 + 1/4*denom(1/4*s12^2)*mt^2*mh^2*
      s12^2*s23 + 1/4*denom(1/4*s12^2)*mt^2*mh^2*s12^2*s13 + 1/4*denom(1/4*
      s12^2)*mt^4*s12*s23*s24 + 1/4*denom(1/4*s12^2)*mt^4*s12*s23^2 + 1/2*
      denom(1/4*s12^2)*mt^4*s12*s14*s23 + 1/2*denom(1/4*s12^2)*mt^4*s12*s13*
      s24 + denom(1/4*s12^2)*mt^4*s12*s13*s23 + 1/4*denom(1/4*s12^2)*mt^4*s12*
      s13*s14 + 1/4*denom(1/4*s12^2)*mt^4*s12*s13^2 + 1/4*denom(1/4*s12^2)*
      mt^4*s12^2*s24 + 5/4*denom(1/4*s12^2)*mt^4*s12^2*s23 + 1/4*denom(1/4*
      s12^2)*mt^4*s12^2*s14 + 5/4*denom(1/4*s12^2)*mt^4*s12^2*s13 + 1/4*denom(
      1/4*s12^2)*mt^4*s12^3 - 1/4*denom(1/4*s12^2)*mt^4*mh^2*s12^2 - 1/4*
      denom(1/4*s12^2)*mt^6*s12*s24 - 3/4*denom(1/4*s12^2)*mt^6*s12*s23 - 1/4*
      denom(1/4*s12^2)*mt^6*s12*s14 - 3/4*denom(1/4*s12^2)*mt^6*s12*s13 - 
      denom(1/4*s12^2)*mt^6*s12^2 + 1/2*denom(1/4*s12^2)*mt^8*s12;
 
 .sort
id KMatrix(5,20) =   - mt^2*s13*s24 - mt^2*s13*s23 - mt^2*s13*s14 - mt^2*s13^2
       - mt^2*s12*s13 + mt^2*mh^2*s13 + mt^4*s24 + mt^4*s23 + 3*mt^4*s14 + 3*
      mt^4*s13 + mt^4*s12 - mt^4*mh^2 - 4*mt^6 + 1/2*denom(1/2*s12)*s13^2*s23*
      s24 + 1/2*denom(1/2*s12)*s13^2*s23^2 + 1/2*denom(1/2*s12)*s13^2*s14*s23
       + 1/2*denom(1/2*s12)*s13^3*s23 + 1/2*denom(1/2*s12)*s12*s13^2*s23 - 1/2
      *denom(1/2*s12)*mh^2*s13^2*s23 - denom(1/2*s12)*mt^2*s13*s23*s24 - 
      denom(1/2*s12)*mt^2*s13*s23^2 - 7/2*denom(1/2*s12)*mt^2*s13*s14*s23 - 
      denom(1/2*s12)*mt^2*s13^2*s24 - 5/2*denom(1/2*s12)*mt^2*s13^2*s23 - 1/2*
      denom(1/2*s12)*mt^2*s13^2*s14 - 1/2*denom(1/2*s12)*mt^2*s13^3 - denom(1/
      2*s12)*mt^2*s12*s13*s23 - 1/2*denom(1/2*s12)*mt^2*s12*s13^2 + denom(1/2*
      s12)*mt^2*mh^2*s13*s23 + 1/2*denom(1/2*s12)*mt^2*mh^2*s13^2 + 1/2*denom(
      1/2*s12)*mt^4*s23*s24 + 1/2*denom(1/2*s12)*mt^4*s23^2 + 3*denom(1/2*s12)
      *mt^4*s14*s23 + 2*denom(1/2*s12)*mt^4*s13*s24 + 6*denom(1/2*s12)*mt^4*
      s13*s23 + 7/2*denom(1/2*s12)*mt^4*s13*s14 + 5/2*denom(1/2*s12)*mt^4*
      s13^2 + 1/2*denom(1/2*s12)*mt^4*s12*s23 + denom(1/2*s12)*mt^4*s12*s13 - 
      1/2*denom(1/2*s12)*mt^4*mh^2*s23 - denom(1/2*s12)*mt^4*mh^2*s13 - denom(
      1/2*s12)*mt^6*s24 - 4*denom(1/2*s12)*mt^6*s23 - 3*denom(1/2*s12)*mt^6*
      s14 - 6*denom(1/2*s12)*mt^6*s13 - 1/2*denom(1/2*s12)*mt^6*s12 + 1/2*
      denom(1/2*s12)*mt^6*mh^2 + 4*denom(1/2*s12)*mt^8 + 3/4*denom(1/4*s12^2)*
      s13^2*s14*s23^2 + 1/4*denom(1/4*s12^2)*s13^3*s23*s24 - 3/2*denom(1/4*
      s12^2)*mt^2*s13*s14*s23^2 - 3/4*denom(1/4*s12^2)*mt^2*s13^2*s23*s24 - 3/
      4*denom(1/4*s12^2)*mt^2*s13^2*s23^2 - 3/2*denom(1/4*s12^2)*mt^2*s13^2*
      s14*s23 - 1/4*denom(1/4*s12^2)*mt^2*s13^3*s24 - 1/4*denom(1/4*s12^2)*
      mt^2*s13^3*s23 + 3/4*denom(1/4*s12^2)*mt^4*s14*s23^2 + 3/4*denom(1/4*
      s12^2)*mt^4*s13*s23*s24 + 3/2*denom(1/4*s12^2)*mt^4*s13*s23^2 + 3*denom(
      1/4*s12^2)*mt^4*s13*s14*s23 + 3/4*denom(1/4*s12^2)*mt^4*s13^2*s24 + 9/4*
      denom(1/4*s12^2)*mt^4*s13^2*s23 + 3/4*denom(1/4*s12^2)*mt^4*s13^2*s14 + 
      1/4*denom(1/4*s12^2)*mt^4*s13^3 - 1/4*denom(1/4*s12^2)*mt^6*s23*s24 - 3/
      4*denom(1/4*s12^2)*mt^6*s23^2 - 3/2*denom(1/4*s12^2)*mt^6*s14*s23 - 3/4*
      denom(1/4*s12^2)*mt^6*s13*s24 - 15/4*denom(1/4*s12^2)*mt^6*s13*s23 - 3/2
      *denom(1/4*s12^2)*mt^6*s13*s14 - 3/2*denom(1/4*s12^2)*mt^6*s13^2 + 1/4*
      denom(1/4*s12^2)*mt^8*s24 + 7/4*denom(1/4*s12^2)*mt^8*s23 + 3/4*denom(1/
      4*s12^2)*mt^8*s14 + 9/4*denom(1/4*s12^2)*mt^8*s13 - denom(1/4*s12^2)*
      mt^10;
 
 .sort
id KMatrix(5,21) =  1/2*s13*s24^2 + s13*s23*s24 + 1/2*s13*s23^2 + s13*s14*s24
       + s13*s14*s23 + 1/2*s13*s14^2 + s13^2*s24 + s13^2*s23 + s13^2*s14 + 1/2
      *s13^3 + s12*s13*s24 + s12*s13*s23 + s12*s13*s14 + s12*s13^2 + 1/2*s12^2
      *s13 - mh^2*s13*s24 - mh^2*s13*s23 - mh^2*s13*s14 - mh^2*s13^2 - mh^2*
      s12*s13 + 1/2*mh^4*s13 - 1/2*mt^2*s24^2 - mt^2*s23*s24 - 1/2*mt^2*s23^2
       - 2*mt^2*s14*s24 - 2*mt^2*s14*s23 - 3/2*mt^2*s14^2 - 3*mt^2*s13*s24 - 3
      *mt^2*s13*s23 - 4*mt^2*s13*s14 - 5/2*mt^2*s13^2 - mt^2*s12*s24 - mt^2*
      s12*s23 - 2*mt^2*s12*s14 - 3*mt^2*s12*s13 - 1/2*mt^2*s12^2 + mt^2*mh^2*
      s24 + mt^2*mh^2*s23 + 2*mt^2*mh^2*s14 + 3*mt^2*mh^2*s13 + mt^2*mh^2*s12
       - 1/2*mt^2*mh^4 + 3*mt^4*s24 + 3*mt^4*s23 + 5*mt^4*s14 + 5*mt^4*s13 + 3
      *mt^4*s12 - 3*mt^4*mh^2 - 4*mt^6 + denom(1/2*s12)*s13*s14*s23*s24 + 
      denom(1/2*s12)*s13*s14*s23^2 + denom(1/2*s12)*s13*s14^2*s23 + 1/2*denom(
      1/2*s12)*s13^2*s24^2 + 1/2*denom(1/2*s12)*s13^2*s23*s24 + 1/2*denom(1/2*
      s12)*s13^2*s14*s24 + denom(1/2*s12)*s13^2*s14*s23 + 1/2*denom(1/2*s12)*
      s13^3*s24 + denom(1/2*s12)*s12*s13*s14*s23 + 1/2*denom(1/2*s12)*s12*
      s13^2*s24 - denom(1/2*s12)*mh^2*s13*s14*s23 - 1/2*denom(1/2*s12)*mh^2*
      s13^2*s24 - denom(1/2*s12)*mt^2*s14*s23*s24 - denom(1/2*s12)*mt^2*s14*
      s23^2 - 3/2*denom(1/2*s12)*mt^2*s14^2*s23 - denom(1/2*s12)*mt^2*s13*
      s24^2 - 2*denom(1/2*s12)*mt^2*s13*s23*s24 - denom(1/2*s12)*mt^2*s13*
      s23^2 - 5/2*denom(1/2*s12)*mt^2*s13*s14*s24 - 5*denom(1/2*s12)*mt^2*s13*
      s14*s23 - denom(1/2*s12)*mt^2*s13*s14^2 - 5/2*denom(1/2*s12)*mt^2*s13^2*
      s24 - 3/2*denom(1/2*s12)*mt^2*s13^2*s23 - 3/2*denom(1/2*s12)*mt^2*s13^2*
      s14 - 1/2*denom(1/2*s12)*mt^2*s13^3 - denom(1/2*s12)*mt^2*s12*s14*s23 - 
      denom(1/2*s12)*mt^2*s12*s13*s24 - denom(1/2*s12)*mt^2*s12*s13*s23 - 
      denom(1/2*s12)*mt^2*s12*s13*s14 - 1/2*denom(1/2*s12)*mt^2*s12*s13^2 + 
      denom(1/2*s12)*mt^2*mh^2*s14*s23 + denom(1/2*s12)*mt^2*mh^2*s13*s24 + 
      denom(1/2*s12)*mt^2*mh^2*s13*s23 + denom(1/2*s12)*mt^2*mh^2*s13*s14 + 1/
      2*denom(1/2*s12)*mt^2*mh^2*s13^2 + 1/2*denom(1/2*s12)*mt^4*s24^2 + 3/2*
      denom(1/2*s12)*mt^4*s23*s24 + denom(1/2*s12)*mt^4*s23^2 + 2*denom(1/2*
      s12)*mt^4*s14*s24 + 5*denom(1/2*s12)*mt^4*s14*s23 + 3/2*denom(1/2*s12)*
      mt^4*s14^2 + 5*denom(1/2*s12)*mt^4*s13*s24 + 5*denom(1/2*s12)*mt^4*s13*
      s23 + 11/2*denom(1/2*s12)*mt^4*s13*s14 + 3*denom(1/2*s12)*mt^4*s13^2 + 1/
      2*denom(1/2*s12)*mt^4*s12*s24 + denom(1/2*s12)*mt^4*s12*s23 + denom(1/2*
      s12)*mt^4*s12*s14 + 2*denom(1/2*s12)*mt^4*s12*s13 - 1/2*denom(1/2*s12)*
      mt^4*mh^2*s24 - denom(1/2*s12)*mt^4*mh^2*s23 - denom(1/2*s12)*mt^4*mh^2*
      s14 - 2*denom(1/2*s12)*mt^4*mh^2*s13 - 3*denom(1/2*s12)*mt^6*s24 - 4*
      denom(1/2*s12)*mt^6*s23 - 5*denom(1/2*s12)*mt^6*s14 - 6*denom(1/2*s12)*
      mt^6*s13 - 3/2*denom(1/2*s12)*mt^6*s12 + 3/2*denom(1/2*s12)*mt^6*mh^2 + 
      4*denom(1/2*s12)*mt^8 + 3/8*denom(1/4*s12^2)*s13*s14^2*s23^2 + 1/2*
      denom(1/4*s12^2)*s13^2*s14*s23*s24 + 1/8*denom(1/4*s12^2)*s13^3*s24^2 - 
      3/8*denom(1/4*s12^2)*mt^2*s14^2*s23^2 - denom(1/4*s12^2)*mt^2*s13*s14*
      s23*s24 - 3/4*denom(1/4*s12^2)*mt^2*s13*s14*s23^2 - 3/4*denom(1/4*s12^2)
      *mt^2*s13*s14^2*s23 - 3/8*denom(1/4*s12^2)*mt^2*s13^2*s24^2 - 1/2*denom(
      1/4*s12^2)*mt^2*s13^2*s23*s24 - 1/2*denom(1/4*s12^2)*mt^2*s13^2*s14*s24
       - 1/2*denom(1/4*s12^2)*mt^2*s13^2*s14*s23 - 1/4*denom(1/4*s12^2)*mt^2*
      s13^3*s24 + 1/2*denom(1/4*s12^2)*mt^4*s14*s23*s24 + 3/4*denom(1/4*s12^2)
      *mt^4*s14*s23^2 + 3/4*denom(1/4*s12^2)*mt^4*s14^2*s23 + 3/8*denom(1/4*
      s12^2)*mt^4*s13*s24^2 + denom(1/4*s12^2)*mt^4*s13*s23*s24 + 3/8*denom(1/
      4*s12^2)*mt^4*s13*s23^2 + denom(1/4*s12^2)*mt^4*s13*s14*s24 + 5/2*denom(
      1/4*s12^2)*mt^4*s13*s14*s23 + 3/8*denom(1/4*s12^2)*mt^4*s13*s14^2 + 5/4*
      denom(1/4*s12^2)*mt^4*s13^2*s24 + 1/2*denom(1/4*s12^2)*mt^4*s13^2*s23 + 
      1/2*denom(1/4*s12^2)*mt^4*s13^2*s14 + 1/8*denom(1/4*s12^2)*mt^4*s13^3 - 
      1/8*denom(1/4*s12^2)*mt^6*s24^2 - 1/2*denom(1/4*s12^2)*mt^6*s23*s24 - 3/
      8*denom(1/4*s12^2)*mt^6*s23^2 - 1/2*denom(1/4*s12^2)*mt^6*s14*s24 - 2*
      denom(1/4*s12^2)*mt^6*s14*s23 - 3/8*denom(1/4*s12^2)*mt^6*s14^2 - 7/4*
      denom(1/4*s12^2)*mt^6*s13*s24 - 7/4*denom(1/4*s12^2)*mt^6*s13*s23 - 7/4*
      denom(1/4*s12^2)*mt^6*s13*s14 - 7/8*denom(1/4*s12^2)*mt^6*s13^2 + 3/4*
      denom(1/4*s12^2)*mt^8*s24 + 5/4*denom(1/4*s12^2)*mt^8*s23 + 5/4*denom(1/
      4*s12^2)*mt^8*s14 + 7/4*denom(1/4*s12^2)*mt^8*s13 - denom(1/4*s12^2)*
      mt^10;
 
 .sort
id KMatrix(5,22) =   - mt^2*s13*s24 - mt^2*s13*s23 - mt^2*s13*s14 - mt^2*s13^2
       - mt^2*s12*s13 + mt^2*mh^2*s13 + mt^4*s24 + mt^4*s23 + 3*mt^4*s14 + 3*
      mt^4*s13 + mt^4*s12 - mt^4*mh^2 - 4*mt^6 + 1/2*denom(1/2*s12)*s13^2*s23*
      s24 + 1/2*denom(1/2*s12)*s13^2*s23^2 + 1/2*denom(1/2*s12)*s13^2*s14*s23
       + 1/2*denom(1/2*s12)*s13^3*s23 + 1/2*denom(1/2*s12)*s12*s13^2*s23 - 1/2
      *denom(1/2*s12)*mh^2*s13^2*s23 - denom(1/2*s12)*mt^2*s13*s23*s24 - 
      denom(1/2*s12)*mt^2*s13*s23^2 - 7/2*denom(1/2*s12)*mt^2*s13*s14*s23 - 
      denom(1/2*s12)*mt^2*s13^2*s24 - 5/2*denom(1/2*s12)*mt^2*s13^2*s23 - 1/2*
      denom(1/2*s12)*mt^2*s13^2*s14 - 1/2*denom(1/2*s12)*mt^2*s13^3 - denom(1/
      2*s12)*mt^2*s12*s13*s23 - 1/2*denom(1/2*s12)*mt^2*s12*s13^2 + denom(1/2*
      s12)*mt^2*mh^2*s13*s23 + 1/2*denom(1/2*s12)*mt^2*mh^2*s13^2 + 1/2*denom(
      1/2*s12)*mt^4*s23*s24 + 1/2*denom(1/2*s12)*mt^4*s23^2 + 3*denom(1/2*s12)
      *mt^4*s14*s23 + 2*denom(1/2*s12)*mt^4*s13*s24 + 6*denom(1/2*s12)*mt^4*
      s13*s23 + 7/2*denom(1/2*s12)*mt^4*s13*s14 + 5/2*denom(1/2*s12)*mt^4*
      s13^2 + 1/2*denom(1/2*s12)*mt^4*s12*s23 + denom(1/2*s12)*mt^4*s12*s13 - 
      1/2*denom(1/2*s12)*mt^4*mh^2*s23 - denom(1/2*s12)*mt^4*mh^2*s13 - denom(
      1/2*s12)*mt^6*s24 - 4*denom(1/2*s12)*mt^6*s23 - 3*denom(1/2*s12)*mt^6*
      s14 - 6*denom(1/2*s12)*mt^6*s13 - 1/2*denom(1/2*s12)*mt^6*s12 + 1/2*
      denom(1/2*s12)*mt^6*mh^2 + 4*denom(1/2*s12)*mt^8 + 3/4*denom(1/4*s12^2)*
      s13^2*s14*s23^2 + 1/4*denom(1/4*s12^2)*s13^3*s23*s24 - 3/2*denom(1/4*
      s12^2)*mt^2*s13*s14*s23^2 - 3/4*denom(1/4*s12^2)*mt^2*s13^2*s23*s24 - 3/
      4*denom(1/4*s12^2)*mt^2*s13^2*s23^2 - 3/2*denom(1/4*s12^2)*mt^2*s13^2*
      s14*s23 - 1/4*denom(1/4*s12^2)*mt^2*s13^3*s24 - 1/4*denom(1/4*s12^2)*
      mt^2*s13^3*s23 + 3/4*denom(1/4*s12^2)*mt^4*s14*s23^2 + 3/4*denom(1/4*
      s12^2)*mt^4*s13*s23*s24 + 3/2*denom(1/4*s12^2)*mt^4*s13*s23^2 + 3*denom(
      1/4*s12^2)*mt^4*s13*s14*s23 + 3/4*denom(1/4*s12^2)*mt^4*s13^2*s24 + 9/4*
      denom(1/4*s12^2)*mt^4*s13^2*s23 + 3/4*denom(1/4*s12^2)*mt^4*s13^2*s14 + 
      1/4*denom(1/4*s12^2)*mt^4*s13^3 - 1/4*denom(1/4*s12^2)*mt^6*s23*s24 - 3/
      4*denom(1/4*s12^2)*mt^6*s23^2 - 3/2*denom(1/4*s12^2)*mt^6*s14*s23 - 3/4*
      denom(1/4*s12^2)*mt^6*s13*s24 - 15/4*denom(1/4*s12^2)*mt^6*s13*s23 - 3/2
      *denom(1/4*s12^2)*mt^6*s13*s14 - 3/2*denom(1/4*s12^2)*mt^6*s13^2 + 1/4*
      denom(1/4*s12^2)*mt^8*s24 + 7/4*denom(1/4*s12^2)*mt^8*s23 + 3/4*denom(1/
      4*s12^2)*mt^8*s14 + 9/4*denom(1/4*s12^2)*mt^8*s13 - denom(1/4*s12^2)*
      mt^10;
 
 .sort
id KMatrix(5,23) =  1/2*s13*s24^2 + s13*s23*s24 + 1/2*s13*s23^2 + s13*s14*s24
       + s13*s14*s23 + 1/2*s13*s14^2 + s13^2*s24 + s13^2*s23 + s13^2*s14 + 1/2
      *s13^3 + s12*s13*s24 + s12*s13*s23 + s12*s13*s14 + s12*s13^2 + 1/2*s12^2
      *s13 - mh^2*s13*s24 - mh^2*s13*s23 - mh^2*s13*s14 - mh^2*s13^2 - mh^2*
      s12*s13 + 1/2*mh^4*s13 - 1/2*mt^2*s24^2 - mt^2*s23*s24 - 1/2*mt^2*s23^2
       - 2*mt^2*s14*s24 - 2*mt^2*s14*s23 - 3/2*mt^2*s14^2 - 3*mt^2*s13*s24 - 3
      *mt^2*s13*s23 - 4*mt^2*s13*s14 - 5/2*mt^2*s13^2 - mt^2*s12*s24 - mt^2*
      s12*s23 - 2*mt^2*s12*s14 - 3*mt^2*s12*s13 - 1/2*mt^2*s12^2 + mt^2*mh^2*
      s24 + mt^2*mh^2*s23 + 2*mt^2*mh^2*s14 + 3*mt^2*mh^2*s13 + mt^2*mh^2*s12
       - 1/2*mt^2*mh^4 + 3*mt^4*s24 + 3*mt^4*s23 + 5*mt^4*s14 + 5*mt^4*s13 + 3
      *mt^4*s12 - 3*mt^4*mh^2 - 4*mt^6 + denom(1/2*s12)*s13*s14*s23*s24 + 
      denom(1/2*s12)*s13*s14*s23^2 + denom(1/2*s12)*s13*s14^2*s23 + 1/2*denom(
      1/2*s12)*s13^2*s24^2 + 1/2*denom(1/2*s12)*s13^2*s23*s24 + 1/2*denom(1/2*
      s12)*s13^2*s14*s24 + denom(1/2*s12)*s13^2*s14*s23 + 1/2*denom(1/2*s12)*
      s13^3*s24 + denom(1/2*s12)*s12*s13*s14*s23 + 1/2*denom(1/2*s12)*s12*
      s13^2*s24 - denom(1/2*s12)*mh^2*s13*s14*s23 - 1/2*denom(1/2*s12)*mh^2*
      s13^2*s24 - denom(1/2*s12)*mt^2*s14*s23*s24 - denom(1/2*s12)*mt^2*s14*
      s23^2 - 3/2*denom(1/2*s12)*mt^2*s14^2*s23 - denom(1/2*s12)*mt^2*s13*
      s24^2 - 2*denom(1/2*s12)*mt^2*s13*s23*s24 - denom(1/2*s12)*mt^2*s13*
      s23^2 - 5/2*denom(1/2*s12)*mt^2*s13*s14*s24 - 5*denom(1/2*s12)*mt^2*s13*
      s14*s23 - denom(1/2*s12)*mt^2*s13*s14^2 - 5/2*denom(1/2*s12)*mt^2*s13^2*
      s24 - 3/2*denom(1/2*s12)*mt^2*s13^2*s23 - 3/2*denom(1/2*s12)*mt^2*s13^2*
      s14 - 1/2*denom(1/2*s12)*mt^2*s13^3 - denom(1/2*s12)*mt^2*s12*s14*s23 - 
      denom(1/2*s12)*mt^2*s12*s13*s24 - denom(1/2*s12)*mt^2*s12*s13*s23 - 
      denom(1/2*s12)*mt^2*s12*s13*s14 - 1/2*denom(1/2*s12)*mt^2*s12*s13^2 + 
      denom(1/2*s12)*mt^2*mh^2*s14*s23 + denom(1/2*s12)*mt^2*mh^2*s13*s24 + 
      denom(1/2*s12)*mt^2*mh^2*s13*s23 + denom(1/2*s12)*mt^2*mh^2*s13*s14 + 1/
      2*denom(1/2*s12)*mt^2*mh^2*s13^2 + 1/2*denom(1/2*s12)*mt^4*s24^2 + 3/2*
      denom(1/2*s12)*mt^4*s23*s24 + denom(1/2*s12)*mt^4*s23^2 + 2*denom(1/2*
      s12)*mt^4*s14*s24 + 5*denom(1/2*s12)*mt^4*s14*s23 + 3/2*denom(1/2*s12)*
      mt^4*s14^2 + 5*denom(1/2*s12)*mt^4*s13*s24 + 5*denom(1/2*s12)*mt^4*s13*
      s23 + 11/2*denom(1/2*s12)*mt^4*s13*s14 + 3*denom(1/2*s12)*mt^4*s13^2 + 1/
      2*denom(1/2*s12)*mt^4*s12*s24 + denom(1/2*s12)*mt^4*s12*s23 + denom(1/2*
      s12)*mt^4*s12*s14 + 2*denom(1/2*s12)*mt^4*s12*s13 - 1/2*denom(1/2*s12)*
      mt^4*mh^2*s24 - denom(1/2*s12)*mt^4*mh^2*s23 - denom(1/2*s12)*mt^4*mh^2*
      s14 - 2*denom(1/2*s12)*mt^4*mh^2*s13 - 3*denom(1/2*s12)*mt^6*s24 - 4*
      denom(1/2*s12)*mt^6*s23 - 5*denom(1/2*s12)*mt^6*s14 - 6*denom(1/2*s12)*
      mt^6*s13 - 3/2*denom(1/2*s12)*mt^6*s12 + 3/2*denom(1/2*s12)*mt^6*mh^2 + 
      4*denom(1/2*s12)*mt^8 + 3/8*denom(1/4*s12^2)*s13*s14^2*s23^2 + 1/2*
      denom(1/4*s12^2)*s13^2*s14*s23*s24 + 1/8*denom(1/4*s12^2)*s13^3*s24^2 - 
      3/8*denom(1/4*s12^2)*mt^2*s14^2*s23^2 - denom(1/4*s12^2)*mt^2*s13*s14*
      s23*s24 - 3/4*denom(1/4*s12^2)*mt^2*s13*s14*s23^2 - 3/4*denom(1/4*s12^2)
      *mt^2*s13*s14^2*s23 - 3/8*denom(1/4*s12^2)*mt^2*s13^2*s24^2 - 1/2*denom(
      1/4*s12^2)*mt^2*s13^2*s23*s24 - 1/2*denom(1/4*s12^2)*mt^2*s13^2*s14*s24
       - 1/2*denom(1/4*s12^2)*mt^2*s13^2*s14*s23 - 1/4*denom(1/4*s12^2)*mt^2*
      s13^3*s24 + 1/2*denom(1/4*s12^2)*mt^4*s14*s23*s24 + 3/4*denom(1/4*s12^2)
      *mt^4*s14*s23^2 + 3/4*denom(1/4*s12^2)*mt^4*s14^2*s23 + 3/8*denom(1/4*
      s12^2)*mt^4*s13*s24^2 + denom(1/4*s12^2)*mt^4*s13*s23*s24 + 3/8*denom(1/
      4*s12^2)*mt^4*s13*s23^2 + denom(1/4*s12^2)*mt^4*s13*s14*s24 + 5/2*denom(
      1/4*s12^2)*mt^4*s13*s14*s23 + 3/8*denom(1/4*s12^2)*mt^4*s13*s14^2 + 5/4*
      denom(1/4*s12^2)*mt^4*s13^2*s24 + 1/2*denom(1/4*s12^2)*mt^4*s13^2*s23 + 
      1/2*denom(1/4*s12^2)*mt^4*s13^2*s14 + 1/8*denom(1/4*s12^2)*mt^4*s13^3 - 
      1/8*denom(1/4*s12^2)*mt^6*s24^2 - 1/2*denom(1/4*s12^2)*mt^6*s23*s24 - 3/
      8*denom(1/4*s12^2)*mt^6*s23^2 - 1/2*denom(1/4*s12^2)*mt^6*s14*s24 - 2*
      denom(1/4*s12^2)*mt^6*s14*s23 - 3/8*denom(1/4*s12^2)*mt^6*s14^2 - 7/4*
      denom(1/4*s12^2)*mt^6*s13*s24 - 7/4*denom(1/4*s12^2)*mt^6*s13*s23 - 7/4*
      denom(1/4*s12^2)*mt^6*s13*s14 - 7/8*denom(1/4*s12^2)*mt^6*s13^2 + 3/4*
      denom(1/4*s12^2)*mt^8*s24 + 5/4*denom(1/4*s12^2)*mt^8*s23 + 5/4*denom(1/
      4*s12^2)*mt^8*s14 + 7/4*denom(1/4*s12^2)*mt^8*s13 - denom(1/4*s12^2)*
      mt^10;
 
 .sort
id KMatrix(5,24) =  2*mt^3*s12*s14 - 2*mt^5*s12 - 2*denom(1/2*s12)*mt*s12*s13*
      s14*s23 + 2*denom(1/2*s12)*mt^3*s12*s14*s23 + 2*denom(1/2*s12)*mt^3*s12*
      s13*s23 + 2*denom(1/2*s12)*mt^3*s12*s13*s14 - 2*denom(1/2*s12)*mt^5*s12*
      s23 - 2*denom(1/2*s12)*mt^5*s12*s14 - 2*denom(1/2*s12)*mt^5*s12*s13 + 2*
      denom(1/2*s12)*mt^7*s12 + 1/2*denom(1/4*s12^2)*mt*s12^2*s13*s14*s23 - 1/
      2*denom(1/4*s12^2)*mt^3*s12^2*s14*s23 - 1/2*denom(1/4*s12^2)*mt^3*s12^2*
      s13*s23 - 1/2*denom(1/4*s12^2)*mt^3*s12^2*s13*s14 + 1/2*denom(1/4*s12^2)
      *mt^5*s12^2*s23 + 1/2*denom(1/4*s12^2)*mt^5*s12^2*s14 + 1/2*denom(1/4*
      s12^2)*mt^5*s12^2*s13 - 1/2*denom(1/4*s12^2)*mt^7*s12^2;
 
 .sort
id KMatrix(5,25) =  2*mt^3*s14 - 2*mt^3*s13 - 2*denom(1/2*s12)*mt*s13*s14*s23
       + 2*denom(1/2*s12)*mt*s13^2*s23 + 2*denom(1/2*s12)*mt^3*s14*s23 - 2*
      denom(1/2*s12)*mt^3*s13*s23 + 2*denom(1/2*s12)*mt^3*s13*s14 - 2*denom(1/
      2*s12)*mt^3*s13^2 - 2*denom(1/2*s12)*mt^5*s14 + 2*denom(1/2*s12)*mt^5*
      s13 + 1/2*denom(1/4*s12^2)*mt*s12*s13*s14*s23 - 1/2*denom(1/4*s12^2)*mt*
      s12*s13^2*s23 - 1/2*denom(1/4*s12^2)*mt^3*s12*s14*s23 + 1/2*denom(1/4*
      s12^2)*mt^3*s12*s13*s23 - 1/2*denom(1/4*s12^2)*mt^3*s12*s13*s14 + 1/2*
      denom(1/4*s12^2)*mt^3*s12*s13^2 + 1/2*denom(1/4*s12^2)*mt^5*s12*s14 - 1/
      2*denom(1/4*s12^2)*mt^5*s12*s13;
 
 .sort
id KMatrix(5,26) =   0;
 
 .sort
id KMatrix(5,27) =   - mt^3*s12*s24 - mt^3*s12*s23 - mt^3*s12*s14 - mt^3*s12*
      s13 - mt^3*s12^2 + mt^3*mh^2*s12 + 4*mt^5*s12 + 1/2*denom(1/2*s12)*mt*
      s12*s13*s23*s24 + 1/2*denom(1/2*s12)*mt*s12*s13*s23^2 + 1/2*denom(1/2*
      s12)*mt*s12*s13*s14*s23 + 1/2*denom(1/2*s12)*mt*s12*s13^2*s23 + 1/2*
      denom(1/2*s12)*mt*s12^2*s13*s23 - 1/2*denom(1/2*s12)*mt*mh^2*s12*s13*s23
       - 1/2*denom(1/2*s12)*mt^3*s12*s23*s24 - 1/2*denom(1/2*s12)*mt^3*s12*
      s23^2 - denom(1/2*s12)*mt^3*s12*s14*s23 - denom(1/2*s12)*mt^3*s12*s13*
      s24 - 4*denom(1/2*s12)*mt^3*s12*s13*s23 - 1/2*denom(1/2*s12)*mt^3*s12*
      s13*s14 - 1/2*denom(1/2*s12)*mt^3*s12*s13^2 - 1/2*denom(1/2*s12)*mt^3*
      s12^2*s23 - 1/2*denom(1/2*s12)*mt^3*s12^2*s13 + 1/2*denom(1/2*s12)*mt^3*
      mh^2*s12*s23 + 1/2*denom(1/2*s12)*mt^3*mh^2*s12*s13 + denom(1/2*s12)*
      mt^5*s12*s24 + 4*denom(1/2*s12)*mt^5*s12*s23 + denom(1/2*s12)*mt^5*s12*
      s14 + 4*denom(1/2*s12)*mt^5*s12*s13 + 1/2*denom(1/2*s12)*mt^5*s12^2 - 1/
      2*denom(1/2*s12)*mt^5*mh^2*s12 - 4*denom(1/2*s12)*mt^7*s12 + 1/4*denom(1/
      4*s12^2)*mt*s12*s13*s14*s23^2 + 1/4*denom(1/4*s12^2)*mt*s12*s13^2*s23*
      s24 + 1/2*denom(1/4*s12^2)*mt*s12*s13^2*s23^2 - 1/4*denom(1/4*s12^2)*
      mt^3*s12*s14*s23^2 - 1/2*denom(1/4*s12^2)*mt^3*s12*s13*s23*s24 - 5/4*
      denom(1/4*s12^2)*mt^3*s12*s13*s23^2 - 1/2*denom(1/4*s12^2)*mt^3*s12*s13*
      s14*s23 - 1/4*denom(1/4*s12^2)*mt^3*s12*s13^2*s24 - 5/4*denom(1/4*s12^2)
      *mt^3*s12*s13^2*s23 + 1/4*denom(1/4*s12^2)*mt^5*s12*s23*s24 + 3/4*denom(
      1/4*s12^2)*mt^5*s12*s23^2 + 1/2*denom(1/4*s12^2)*mt^5*s12*s14*s23 + 1/2*
      denom(1/4*s12^2)*mt^5*s12*s13*s24 + 3*denom(1/4*s12^2)*mt^5*s12*s13*s23
       + 1/4*denom(1/4*s12^2)*mt^5*s12*s13*s14 + 3/4*denom(1/4*s12^2)*mt^5*s12
      *s13^2 - 1/4*denom(1/4*s12^2)*mt^7*s12*s24 - 7/4*denom(1/4*s12^2)*mt^7*
      s12*s23 - 1/4*denom(1/4*s12^2)*mt^7*s12*s14 - 7/4*denom(1/4*s12^2)*mt^7*
      s12*s13 + denom(1/4*s12^2)*mt^9*s12;
 
 .sort
id KMatrix(5,28) =   0;
 
 .sort
id KMatrix(5,29) =  1/2*mt*s12*s24^2 + mt*s12*s23*s24 + 1/2*mt*s12*s23^2 + mt*
      s12*s14*s24 + mt*s12*s14*s23 + 1/2*mt*s12*s14^2 + mt*s12*s13*s24 + mt*
      s12*s13*s23 + mt*s12*s13*s14 + 1/2*mt*s12*s13^2 + mt*s12^2*s24 + mt*
      s12^2*s23 + mt*s12^2*s14 + mt*s12^2*s13 + 1/2*mt*s12^3 - mt*mh^2*s12*s24
       - mt*mh^2*s12*s23 - mt*mh^2*s12*s14 - mt*mh^2*s12*s13 - mt*mh^2*s12^2
       + 1/2*mt*mh^4*s12 - 3*mt^3*s12*s24 - 3*mt^3*s12*s23 - 3*mt^3*s12*s14 - 
      3*mt^3*s12*s13 - 3*mt^3*s12^2 + 3*mt^3*mh^2*s12 + 4*mt^5*s12 + 1/2*
      denom(1/2*s12)*mt*s12*s14*s23*s24 + 1/2*denom(1/2*s12)*mt*s12*s14*s23^2
       + 1/2*denom(1/2*s12)*mt*s12*s14^2*s23 + 1/2*denom(1/2*s12)*mt*s12*s13*
      s24^2 + denom(1/2*s12)*mt*s12*s13*s23*s24 + 1/2*denom(1/2*s12)*mt*s12*
      s13*s23^2 + 1/2*denom(1/2*s12)*mt*s12*s13*s14*s24 + denom(1/2*s12)*mt*
      s12*s13*s14*s23 + 1/2*denom(1/2*s12)*mt*s12*s13^2*s24 + 1/2*denom(1/2*
      s12)*mt*s12*s13^2*s23 + 1/2*denom(1/2*s12)*mt*s12^2*s14*s23 + 1/2*denom(
      1/2*s12)*mt*s12^2*s13*s24 + 1/2*denom(1/2*s12)*mt*s12^2*s13*s23 - 1/2*
      denom(1/2*s12)*mt*mh^2*s12*s14*s23 - 1/2*denom(1/2*s12)*mt*mh^2*s12*s13*
      s24 - 1/2*denom(1/2*s12)*mt*mh^2*s12*s13*s23 - 1/2*denom(1/2*s12)*mt^3*
      s12*s24^2 - 3/2*denom(1/2*s12)*mt^3*s12*s23*s24 - denom(1/2*s12)*mt^3*
      s12*s23^2 - denom(1/2*s12)*mt^3*s12*s14*s24 - 3*denom(1/2*s12)*mt^3*s12*
      s14*s23 - 1/2*denom(1/2*s12)*mt^3*s12*s14^2 - 3*denom(1/2*s12)*mt^3*s12*
      s13*s24 - 3*denom(1/2*s12)*mt^3*s12*s13*s23 - 3/2*denom(1/2*s12)*mt^3*
      s12*s13*s14 - denom(1/2*s12)*mt^3*s12*s13^2 - 1/2*denom(1/2*s12)*mt^3*
      s12^2*s24 - denom(1/2*s12)*mt^3*s12^2*s23 - 1/2*denom(1/2*s12)*mt^3*
      s12^2*s14 - denom(1/2*s12)*mt^3*s12^2*s13 + 1/2*denom(1/2*s12)*mt^3*mh^2
      *s12*s24 + denom(1/2*s12)*mt^3*mh^2*s12*s23 + 1/2*denom(1/2*s12)*mt^3*
      mh^2*s12*s14 + denom(1/2*s12)*mt^3*mh^2*s12*s13 + 3*denom(1/2*s12)*mt^5*
      s12*s24 + 4*denom(1/2*s12)*mt^5*s12*s23 + 3*denom(1/2*s12)*mt^5*s12*s14
       + 4*denom(1/2*s12)*mt^5*s12*s13 + 3/2*denom(1/2*s12)*mt^5*s12^2 - 3/2*
      denom(1/2*s12)*mt^5*mh^2*s12 - 4*denom(1/2*s12)*mt^7*s12 + 1/8*denom(1/4
      *s12^2)*mt*s12*s14^2*s23^2 + 1/4*denom(1/4*s12^2)*mt*s12*s13*s14*s23*s24
       + 1/4*denom(1/4*s12^2)*mt*s12*s13*s14*s23^2 + 1/8*denom(1/4*s12^2)*mt*
      s12*s13^2*s24^2 + 1/4*denom(1/4*s12^2)*mt*s12*s13^2*s23*s24 - 1/4*denom(
      1/4*s12^2)*mt^3*s12*s14*s23*s24 - 1/2*denom(1/4*s12^2)*mt^3*s12*s14*
      s23^2 - 1/4*denom(1/4*s12^2)*mt^3*s12*s14^2*s23 - 1/4*denom(1/4*s12^2)*
      mt^3*s12*s13*s24^2 - 3/4*denom(1/4*s12^2)*mt^3*s12*s13*s23*s24 - 1/4*
      denom(1/4*s12^2)*mt^3*s12*s13*s23^2 - 1/4*denom(1/4*s12^2)*mt^3*s12*s13*
      s14*s24 - 3/4*denom(1/4*s12^2)*mt^3*s12*s13*s14*s23 - 1/2*denom(1/4*
      s12^2)*mt^3*s12*s13^2*s24 - 1/4*denom(1/4*s12^2)*mt^3*s12*s13^2*s23 + 1/
      8*denom(1/4*s12^2)*mt^5*s12*s24^2 + 1/2*denom(1/4*s12^2)*mt^5*s12*s23*
      s24 + 3/8*denom(1/4*s12^2)*mt^5*s12*s23^2 + 1/4*denom(1/4*s12^2)*mt^5*
      s12*s14*s24 + 5/4*denom(1/4*s12^2)*mt^5*s12*s14*s23 + 1/8*denom(1/4*
      s12^2)*mt^5*s12*s14^2 + 5/4*denom(1/4*s12^2)*mt^5*s12*s13*s24 + 5/4*
      denom(1/4*s12^2)*mt^5*s12*s13*s23 + 1/2*denom(1/4*s12^2)*mt^5*s12*s13*
      s14 + 3/8*denom(1/4*s12^2)*mt^5*s12*s13^2 - 3/4*denom(1/4*s12^2)*mt^7*
      s12*s24 - 5/4*denom(1/4*s12^2)*mt^7*s12*s23 - 3/4*denom(1/4*s12^2)*mt^7*
      s12*s14 - 5/4*denom(1/4*s12^2)*mt^7*s12*s13 + denom(1/4*s12^2)*mt^9*s12;
 
 .sort
id KMatrix(5,30) =   0;
 
 .sort
id KMatrix(5,31) =   - mt^3*s12*s24 - mt^3*s12*s23 - mt^3*s12*s14 - mt^3*s12*
      s13 - mt^3*s12^2 + mt^3*mh^2*s12 + 4*mt^5*s12 + 1/2*denom(1/2*s12)*mt*
      s12*s13*s23*s24 + 1/2*denom(1/2*s12)*mt*s12*s13*s23^2 + 1/2*denom(1/2*
      s12)*mt*s12*s13*s14*s23 + 1/2*denom(1/2*s12)*mt*s12*s13^2*s23 + 1/2*
      denom(1/2*s12)*mt*s12^2*s13*s23 - 1/2*denom(1/2*s12)*mt*mh^2*s12*s13*s23
       - 1/2*denom(1/2*s12)*mt^3*s12*s23*s24 - 1/2*denom(1/2*s12)*mt^3*s12*
      s23^2 - denom(1/2*s12)*mt^3*s12*s14*s23 - denom(1/2*s12)*mt^3*s12*s13*
      s24 - 4*denom(1/2*s12)*mt^3*s12*s13*s23 - 1/2*denom(1/2*s12)*mt^3*s12*
      s13*s14 - 1/2*denom(1/2*s12)*mt^3*s12*s13^2 - 1/2*denom(1/2*s12)*mt^3*
      s12^2*s23 - 1/2*denom(1/2*s12)*mt^3*s12^2*s13 + 1/2*denom(1/2*s12)*mt^3*
      mh^2*s12*s23 + 1/2*denom(1/2*s12)*mt^3*mh^2*s12*s13 + denom(1/2*s12)*
      mt^5*s12*s24 + 4*denom(1/2*s12)*mt^5*s12*s23 + denom(1/2*s12)*mt^5*s12*
      s14 + 4*denom(1/2*s12)*mt^5*s12*s13 + 1/2*denom(1/2*s12)*mt^5*s12^2 - 1/
      2*denom(1/2*s12)*mt^5*mh^2*s12 - 4*denom(1/2*s12)*mt^7*s12 + 1/4*denom(1/
      4*s12^2)*mt*s12*s13*s14*s23^2 + 1/4*denom(1/4*s12^2)*mt*s12*s13^2*s23*
      s24 + 1/2*denom(1/4*s12^2)*mt*s12*s13^2*s23^2 - 1/4*denom(1/4*s12^2)*
      mt^3*s12*s14*s23^2 - 1/2*denom(1/4*s12^2)*mt^3*s12*s13*s23*s24 - 5/4*
      denom(1/4*s12^2)*mt^3*s12*s13*s23^2 - 1/2*denom(1/4*s12^2)*mt^3*s12*s13*
      s14*s23 - 1/4*denom(1/4*s12^2)*mt^3*s12*s13^2*s24 - 5/4*denom(1/4*s12^2)
      *mt^3*s12*s13^2*s23 + 1/4*denom(1/4*s12^2)*mt^5*s12*s23*s24 + 3/4*denom(
      1/4*s12^2)*mt^5*s12*s23^2 + 1/2*denom(1/4*s12^2)*mt^5*s12*s14*s23 + 1/2*
      denom(1/4*s12^2)*mt^5*s12*s13*s24 + 3*denom(1/4*s12^2)*mt^5*s12*s13*s23
       + 1/4*denom(1/4*s12^2)*mt^5*s12*s13*s14 + 3/4*denom(1/4*s12^2)*mt^5*s12
      *s13^2 - 1/4*denom(1/4*s12^2)*mt^7*s12*s24 - 7/4*denom(1/4*s12^2)*mt^7*
      s12*s23 - 1/4*denom(1/4*s12^2)*mt^7*s12*s14 - 7/4*denom(1/4*s12^2)*mt^7*
      s12*s13 + denom(1/4*s12^2)*mt^9*s12;
 
 .sort
id KMatrix(5,32) =   0;
 
 .sort
id KMatrix(5,33) =  1/2*mt*s12*s24^2 + mt*s12*s23*s24 + 1/2*mt*s12*s23^2 + mt*
      s12*s14*s24 + mt*s12*s14*s23 + 1/2*mt*s12*s14^2 + mt*s12*s13*s24 + mt*
      s12*s13*s23 + mt*s12*s13*s14 + 1/2*mt*s12*s13^2 + mt*s12^2*s24 + mt*
      s12^2*s23 + mt*s12^2*s14 + mt*s12^2*s13 + 1/2*mt*s12^3 - mt*mh^2*s12*s24
       - mt*mh^2*s12*s23 - mt*mh^2*s12*s14 - mt*mh^2*s12*s13 - mt*mh^2*s12^2
       + 1/2*mt*mh^4*s12 - 3*mt^3*s12*s24 - 3*mt^3*s12*s23 - 3*mt^3*s12*s14 - 
      3*mt^3*s12*s13 - 3*mt^3*s12^2 + 3*mt^3*mh^2*s12 + 4*mt^5*s12 + 1/2*
      denom(1/2*s12)*mt*s12*s14*s23*s24 + 1/2*denom(1/2*s12)*mt*s12*s14*s23^2
       + 1/2*denom(1/2*s12)*mt*s12*s14^2*s23 + 1/2*denom(1/2*s12)*mt*s12*s13*
      s24^2 + denom(1/2*s12)*mt*s12*s13*s23*s24 + 1/2*denom(1/2*s12)*mt*s12*
      s13*s23^2 + 1/2*denom(1/2*s12)*mt*s12*s13*s14*s24 + denom(1/2*s12)*mt*
      s12*s13*s14*s23 + 1/2*denom(1/2*s12)*mt*s12*s13^2*s24 + 1/2*denom(1/2*
      s12)*mt*s12*s13^2*s23 + 1/2*denom(1/2*s12)*mt*s12^2*s14*s23 + 1/2*denom(
      1/2*s12)*mt*s12^2*s13*s24 + 1/2*denom(1/2*s12)*mt*s12^2*s13*s23 - 1/2*
      denom(1/2*s12)*mt*mh^2*s12*s14*s23 - 1/2*denom(1/2*s12)*mt*mh^2*s12*s13*
      s24 - 1/2*denom(1/2*s12)*mt*mh^2*s12*s13*s23 - 1/2*denom(1/2*s12)*mt^3*
      s12*s24^2 - 3/2*denom(1/2*s12)*mt^3*s12*s23*s24 - denom(1/2*s12)*mt^3*
      s12*s23^2 - denom(1/2*s12)*mt^3*s12*s14*s24 - 3*denom(1/2*s12)*mt^3*s12*
      s14*s23 - 1/2*denom(1/2*s12)*mt^3*s12*s14^2 - 3*denom(1/2*s12)*mt^3*s12*
      s13*s24 - 3*denom(1/2*s12)*mt^3*s12*s13*s23 - 3/2*denom(1/2*s12)*mt^3*
      s12*s13*s14 - denom(1/2*s12)*mt^3*s12*s13^2 - 1/2*denom(1/2*s12)*mt^3*
      s12^2*s24 - denom(1/2*s12)*mt^3*s12^2*s23 - 1/2*denom(1/2*s12)*mt^3*
      s12^2*s14 - denom(1/2*s12)*mt^3*s12^2*s13 + 1/2*denom(1/2*s12)*mt^3*mh^2
      *s12*s24 + denom(1/2*s12)*mt^3*mh^2*s12*s23 + 1/2*denom(1/2*s12)*mt^3*
      mh^2*s12*s14 + denom(1/2*s12)*mt^3*mh^2*s12*s13 + 3*denom(1/2*s12)*mt^5*
      s12*s24 + 4*denom(1/2*s12)*mt^5*s12*s23 + 3*denom(1/2*s12)*mt^5*s12*s14
       + 4*denom(1/2*s12)*mt^5*s12*s13 + 3/2*denom(1/2*s12)*mt^5*s12^2 - 3/2*
      denom(1/2*s12)*mt^5*mh^2*s12 - 4*denom(1/2*s12)*mt^7*s12 + 1/8*denom(1/4
      *s12^2)*mt*s12*s14^2*s23^2 + 1/4*denom(1/4*s12^2)*mt*s12*s13*s14*s23*s24
       + 1/4*denom(1/4*s12^2)*mt*s12*s13*s14*s23^2 + 1/8*denom(1/4*s12^2)*mt*
      s12*s13^2*s24^2 + 1/4*denom(1/4*s12^2)*mt*s12*s13^2*s23*s24 - 1/4*denom(
      1/4*s12^2)*mt^3*s12*s14*s23*s24 - 1/2*denom(1/4*s12^2)*mt^3*s12*s14*
      s23^2 - 1/4*denom(1/4*s12^2)*mt^3*s12*s14^2*s23 - 1/4*denom(1/4*s12^2)*
      mt^3*s12*s13*s24^2 - 3/4*denom(1/4*s12^2)*mt^3*s12*s13*s23*s24 - 1/4*
      denom(1/4*s12^2)*mt^3*s12*s13*s23^2 - 1/4*denom(1/4*s12^2)*mt^3*s12*s13*
      s14*s24 - 3/4*denom(1/4*s12^2)*mt^3*s12*s13*s14*s23 - 1/2*denom(1/4*
      s12^2)*mt^3*s12*s13^2*s24 - 1/4*denom(1/4*s12^2)*mt^3*s12*s13^2*s23 + 1/
      8*denom(1/4*s12^2)*mt^5*s12*s24^2 + 1/2*denom(1/4*s12^2)*mt^5*s12*s23*
      s24 + 3/8*denom(1/4*s12^2)*mt^5*s12*s23^2 + 1/4*denom(1/4*s12^2)*mt^5*
      s12*s14*s24 + 5/4*denom(1/4*s12^2)*mt^5*s12*s14*s23 + 1/8*denom(1/4*
      s12^2)*mt^5*s12*s14^2 + 5/4*denom(1/4*s12^2)*mt^5*s12*s13*s24 + 5/4*
      denom(1/4*s12^2)*mt^5*s12*s13*s23 + 1/2*denom(1/4*s12^2)*mt^5*s12*s13*
      s14 + 3/8*denom(1/4*s12^2)*mt^5*s12*s13^2 - 3/4*denom(1/4*s12^2)*mt^7*
      s12*s24 - 5/4*denom(1/4*s12^2)*mt^7*s12*s23 - 3/4*denom(1/4*s12^2)*mt^7*
      s12*s14 - 5/4*denom(1/4*s12^2)*mt^7*s12*s13 + denom(1/4*s12^2)*mt^9*s12;
 
 .sort
id KMatrix(5,34) =  2*mt^2*s13*s14 - 2*mt^4*s14 - 2*mt^4*s13 + 2*mt^6 - 2*
      denom(1/2*s12)*s13^2*s14*s23 + 4*denom(1/2*s12)*mt^2*s13*s14*s23 + 2*
      denom(1/2*s12)*mt^2*s13^2*s23 + 2*denom(1/2*s12)*mt^2*s13^2*s14 - 2*
      denom(1/2*s12)*mt^4*s14*s23 - 4*denom(1/2*s12)*mt^4*s13*s23 - 4*denom(1/
      2*s12)*mt^4*s13*s14 - 2*denom(1/2*s12)*mt^4*s13^2 + 2*denom(1/2*s12)*
      mt^6*s23 + 2*denom(1/2*s12)*mt^6*s14 + 4*denom(1/2*s12)*mt^6*s13 - 2*
      denom(1/2*s12)*mt^8 + 1/2*denom(1/4*s12^2)*s12*s13^2*s14*s23 - denom(1/4
      *s12^2)*mt^2*s12*s13*s14*s23 - 1/2*denom(1/4*s12^2)*mt^2*s12*s13^2*s23
       - 1/2*denom(1/4*s12^2)*mt^2*s12*s13^2*s14 + 1/2*denom(1/4*s12^2)*mt^4*
      s12*s14*s23 + denom(1/4*s12^2)*mt^4*s12*s13*s23 + denom(1/4*s12^2)*mt^4*
      s12*s13*s14 + 1/2*denom(1/4*s12^2)*mt^4*s12*s13^2 - 1/2*denom(1/4*s12^2)
      *mt^6*s12*s23 - 1/2*denom(1/4*s12^2)*mt^6*s12*s14 - denom(1/4*s12^2)*
      mt^6*s12*s13 + 1/2*denom(1/4*s12^2)*mt^8*s12;
 
 .sort
id KMatrix(5,35) =  mt^2*s14*s23 + mt^2*s13*s24 + mt^2*s12*s24 + mt^2*s12*s23
       + mt^2*s12*s14 + mt^2*s12*s13 + mt^2*s12^2 - mt^2*mh^2*s12 - mt^4*s24
       - mt^4*s23 - mt^4*s14 - mt^4*s13 - 4*mt^4*s12 + 2*mt^6 - denom(1/2*s12)
      *s13*s14*s23^2 - denom(1/2*s12)*s13^2*s23*s24 - denom(1/2*s12)*s12*s13*
      s23*s24 - denom(1/2*s12)*s12*s13*s23^2 - denom(1/2*s12)*s12*s13*s14*s23
       - denom(1/2*s12)*s12*s13^2*s23 - denom(1/2*s12)*s12^2*s13*s23 + denom(1/
      2*s12)*mh^2*s12*s13*s23 + denom(1/2*s12)*mt^2*s14*s23^2 + 2*denom(1/2*
      s12)*mt^2*s13*s23*s24 + denom(1/2*s12)*mt^2*s13*s23^2 + 2*denom(1/2*s12)
      *mt^2*s13*s14*s23 + denom(1/2*s12)*mt^2*s13^2*s24 + denom(1/2*s12)*mt^2*
      s13^2*s23 + denom(1/2*s12)*mt^2*s12*s23*s24 + denom(1/2*s12)*mt^2*s12*
      s23^2 + denom(1/2*s12)*mt^2*s12*s14*s23 + denom(1/2*s12)*mt^2*s12*s13*
      s24 + 6*denom(1/2*s12)*mt^2*s12*s13*s23 + denom(1/2*s12)*mt^2*s12*s13*
      s14 + denom(1/2*s12)*mt^2*s12*s13^2 + denom(1/2*s12)*mt^2*s12^2*s23 + 
      denom(1/2*s12)*mt^2*s12^2*s13 - denom(1/2*s12)*mt^2*mh^2*s12*s23 - 
      denom(1/2*s12)*mt^2*mh^2*s12*s13 - denom(1/2*s12)*mt^4*s23*s24 - denom(1/
      2*s12)*mt^4*s23^2 - 2*denom(1/2*s12)*mt^4*s14*s23 - 2*denom(1/2*s12)*
      mt^4*s13*s24 - 4*denom(1/2*s12)*mt^4*s13*s23 - denom(1/2*s12)*mt^4*s13*
      s14 - denom(1/2*s12)*mt^4*s13^2 - denom(1/2*s12)*mt^4*s12*s24 - 5*denom(
      1/2*s12)*mt^4*s12*s23 - denom(1/2*s12)*mt^4*s12*s14 - 5*denom(1/2*s12)*
      mt^4*s12*s13 - denom(1/2*s12)*mt^4*s12^2 + denom(1/2*s12)*mt^4*mh^2*s12
       + denom(1/2*s12)*mt^6*s24 + 3*denom(1/2*s12)*mt^6*s23 + denom(1/2*s12)*
      mt^6*s14 + 3*denom(1/2*s12)*mt^6*s13 + 4*denom(1/2*s12)*mt^6*s12 - 2*
      denom(1/2*s12)*mt^8 + 1/4*denom(1/4*s12^2)*s12*s13*s14*s23^2 + 1/4*
      denom(1/4*s12^2)*s12*s13^2*s23*s24 + 1/4*denom(1/4*s12^2)*s12^2*s13*s23*
      s24 + 1/4*denom(1/4*s12^2)*s12^2*s13*s23^2 + 1/4*denom(1/4*s12^2)*s12^2*
      s13*s14*s23 + 1/4*denom(1/4*s12^2)*s12^2*s13^2*s23 + 1/4*denom(1/4*s12^2
      )*s12^3*s13*s23 - 1/4*denom(1/4*s12^2)*mh^2*s12^2*s13*s23 - 1/4*denom(1/
      4*s12^2)*mt^2*s12*s14*s23^2 - 1/2*denom(1/4*s12^2)*mt^2*s12*s13*s23*s24
       - 1/4*denom(1/4*s12^2)*mt^2*s12*s13*s23^2 - 1/2*denom(1/4*s12^2)*mt^2*
      s12*s13*s14*s23 - 1/4*denom(1/4*s12^2)*mt^2*s12*s13^2*s24 - 1/4*denom(1/
      4*s12^2)*mt^2*s12*s13^2*s23 - 1/4*denom(1/4*s12^2)*mt^2*s12^2*s23*s24 - 
      1/4*denom(1/4*s12^2)*mt^2*s12^2*s23^2 - 1/4*denom(1/4*s12^2)*mt^2*s12^2*
      s14*s23 - 1/4*denom(1/4*s12^2)*mt^2*s12^2*s13*s24 - 3/2*denom(1/4*s12^2)
      *mt^2*s12^2*s13*s23 - 1/4*denom(1/4*s12^2)*mt^2*s12^2*s13*s14 - 1/4*
      denom(1/4*s12^2)*mt^2*s12^2*s13^2 - 1/4*denom(1/4*s12^2)*mt^2*s12^3*s23
       - 1/4*denom(1/4*s12^2)*mt^2*s12^3*s13 + 1/4*denom(1/4*s12^2)*mt^2*mh^2*
      s12^2*s23 + 1/4*denom(1/4*s12^2)*mt^2*mh^2*s12^2*s13 + 1/4*denom(1/4*
      s12^2)*mt^4*s12*s23*s24 + 1/4*denom(1/4*s12^2)*mt^4*s12*s23^2 + 1/2*
      denom(1/4*s12^2)*mt^4*s12*s14*s23 + 1/2*denom(1/4*s12^2)*mt^4*s12*s13*
      s24 + denom(1/4*s12^2)*mt^4*s12*s13*s23 + 1/4*denom(1/4*s12^2)*mt^4*s12*
      s13*s14 + 1/4*denom(1/4*s12^2)*mt^4*s12*s13^2 + 1/4*denom(1/4*s12^2)*
      mt^4*s12^2*s24 + 5/4*denom(1/4*s12^2)*mt^4*s12^2*s23 + 1/4*denom(1/4*
      s12^2)*mt^4*s12^2*s14 + 5/4*denom(1/4*s12^2)*mt^4*s12^2*s13 + 1/4*denom(
      1/4*s12^2)*mt^4*s12^3 - 1/4*denom(1/4*s12^2)*mt^4*mh^2*s12^2 - 1/4*
      denom(1/4*s12^2)*mt^6*s12*s24 - 3/4*denom(1/4*s12^2)*mt^6*s12*s23 - 1/4*
      denom(1/4*s12^2)*mt^6*s12*s14 - 3/4*denom(1/4*s12^2)*mt^6*s12*s13 - 
      denom(1/4*s12^2)*mt^6*s12^2 + 1/2*denom(1/4*s12^2)*mt^8*s12;
 
 .sort
id KMatrix(5,36) =  2*mt^3*s12*s14 - 2*mt^5*s12 - 2*denom(1/2*s12)*mt*s12*s13*
      s14*s23 + 2*denom(1/2*s12)*mt^3*s12*s14*s23 + 2*denom(1/2*s12)*mt^3*s12*
      s13*s23 + 2*denom(1/2*s12)*mt^3*s12*s13*s14 - 2*denom(1/2*s12)*mt^5*s12*
      s23 - 2*denom(1/2*s12)*mt^5*s12*s14 - 2*denom(1/2*s12)*mt^5*s12*s13 + 2*
      denom(1/2*s12)*mt^7*s12 + 1/2*denom(1/4*s12^2)*mt*s12^2*s13*s14*s23 - 1/
      2*denom(1/4*s12^2)*mt^3*s12^2*s14*s23 - 1/2*denom(1/4*s12^2)*mt^3*s12^2*
      s13*s23 - 1/2*denom(1/4*s12^2)*mt^3*s12^2*s13*s14 + 1/2*denom(1/4*s12^2)
      *mt^5*s12^2*s23 + 1/2*denom(1/4*s12^2)*mt^5*s12^2*s14 + 1/2*denom(1/4*
      s12^2)*mt^5*s12^2*s13 - 1/2*denom(1/4*s12^2)*mt^7*s12^2;
 
 .sort
id KMatrix(6,1) =   - mt^3*s14*s24 - mt^3*s14*s23 - mt^3*s14^2 + mt^3*s13*s24
       + mt^3*s13*s23 + mt^3*s13^2 - mt^3*s12*s14 + mt^3*s12*s13 + mt^3*mh^2*
      s14 - mt^3*mh^2*s13 + 2*mt^5*s14 - 2*mt^5*s13 + 1/2*denom(1/2*s12)*mt*
      s13*s14*s23*s24 + 1/2*denom(1/2*s12)*mt*s13*s14*s23^2 + 1/2*denom(1/2*
      s12)*mt*s13*s14^2*s23 - 1/2*denom(1/2*s12)*mt*s13^2*s23*s24 - 1/2*denom(
      1/2*s12)*mt*s13^2*s23^2 - 1/2*denom(1/2*s12)*mt*s13^3*s23 + 1/2*denom(1/
      2*s12)*mt*s12*s13*s14*s23 - 1/2*denom(1/2*s12)*mt*s12*s13^2*s23 - 1/2*
      denom(1/2*s12)*mt*mh^2*s13*s14*s23 + 1/2*denom(1/2*s12)*mt*mh^2*s13^2*
      s23 - 1/2*denom(1/2*s12)*mt^3*s14*s23*s24 - 1/2*denom(1/2*s12)*mt^3*s14*
      s23^2 - denom(1/2*s12)*mt^3*s14^2*s23 + 1/2*denom(1/2*s12)*mt^3*s13*s23*
      s24 + 1/2*denom(1/2*s12)*mt^3*s13*s23^2 - denom(1/2*s12)*mt^3*s13*s14*
      s24 - denom(1/2*s12)*mt^3*s13*s14*s23 - 1/2*denom(1/2*s12)*mt^3*s13*
      s14^2 + denom(1/2*s12)*mt^3*s13^2*s24 + 2*denom(1/2*s12)*mt^3*s13^2*s23
       + 1/2*denom(1/2*s12)*mt^3*s13^3 - 1/2*denom(1/2*s12)*mt^3*s12*s14*s23
       + 1/2*denom(1/2*s12)*mt^3*s12*s13*s23 - 1/2*denom(1/2*s12)*mt^3*s12*s13
      *s14 + 1/2*denom(1/2*s12)*mt^3*s12*s13^2 + 1/2*denom(1/2*s12)*mt^3*mh^2*
      s14*s23 - 1/2*denom(1/2*s12)*mt^3*mh^2*s13*s23 + 1/2*denom(1/2*s12)*mt^3
      *mh^2*s13*s14 - 1/2*denom(1/2*s12)*mt^3*mh^2*s13^2 + denom(1/2*s12)*mt^5
      *s14*s24 + 2*denom(1/2*s12)*mt^5*s14*s23 + denom(1/2*s12)*mt^5*s14^2 - 
      denom(1/2*s12)*mt^5*s13*s24 - 2*denom(1/2*s12)*mt^5*s13*s23 + denom(1/2*
      s12)*mt^5*s13*s14 - 2*denom(1/2*s12)*mt^5*s13^2 + 1/2*denom(1/2*s12)*
      mt^5*s12*s14 - 1/2*denom(1/2*s12)*mt^5*s12*s13 - 1/2*denom(1/2*s12)*mt^5
      *mh^2*s14 + 1/2*denom(1/2*s12)*mt^5*mh^2*s13 - 2*denom(1/2*s12)*mt^7*s14
       + 2*denom(1/2*s12)*mt^7*s13 + 1/4*denom(1/4*s12^2)*mt*s13*s14^2*s23^2
       + 1/4*denom(1/4*s12^2)*mt*s13^2*s14*s23*s24 - 1/4*denom(1/4*s12^2)*mt*
      s13^2*s14*s23^2 - 1/4*denom(1/4*s12^2)*mt*s13^3*s23*s24 - 1/4*denom(1/4*
      s12^2)*mt^3*s14^2*s23^2 - 1/2*denom(1/4*s12^2)*mt^3*s13*s14*s23*s24 - 1/
      2*denom(1/4*s12^2)*mt^3*s13*s14^2*s23 + 1/2*denom(1/4*s12^2)*mt^3*s13^2*
      s23*s24 + 1/4*denom(1/4*s12^2)*mt^3*s13^2*s23^2 - 1/4*denom(1/4*s12^2)*
      mt^3*s13^2*s14*s24 + 1/4*denom(1/4*s12^2)*mt^3*s13^2*s14*s23 + 1/4*
      denom(1/4*s12^2)*mt^3*s13^3*s24 + 1/4*denom(1/4*s12^2)*mt^3*s13^3*s23 + 
      1/4*denom(1/4*s12^2)*mt^5*s14*s23*s24 + 1/4*denom(1/4*s12^2)*mt^5*s14*
      s23^2 + 1/2*denom(1/4*s12^2)*mt^5*s14^2*s23 - 1/4*denom(1/4*s12^2)*mt^5*
      s13*s23*s24 - 1/4*denom(1/4*s12^2)*mt^5*s13*s23^2 + 1/2*denom(1/4*s12^2)
      *mt^5*s13*s14*s24 + 1/2*denom(1/4*s12^2)*mt^5*s13*s14*s23 + 1/4*denom(1/
      4*s12^2)*mt^5*s13*s14^2 - 1/2*denom(1/4*s12^2)*mt^5*s13^2*s24 - denom(1/
      4*s12^2)*mt^5*s13^2*s23 - 1/4*denom(1/4*s12^2)*mt^5*s13^3 - 1/4*denom(1/
      4*s12^2)*mt^7*s14*s24 - 3/4*denom(1/4*s12^2)*mt^7*s14*s23 - 1/4*denom(1/
      4*s12^2)*mt^7*s14^2 + 1/4*denom(1/4*s12^2)*mt^7*s13*s24 + 3/4*denom(1/4*
      s12^2)*mt^7*s13*s23 - 1/2*denom(1/4*s12^2)*mt^7*s13*s14 + 3/4*denom(1/4*
      s12^2)*mt^7*s13^2 + 1/2*denom(1/4*s12^2)*mt^9*s14 - 1/2*denom(1/4*s12^2)
      *mt^9*s13;
 
 .sort
id KMatrix(6,2) =  2*mt^5*s14 - 2*mt^5*s13 - denom(1/2*s12)*mt^3*s14^2*s24 + 
      denom(1/2*s12)*mt^3*s13*s14*s24 - denom(1/2*s12)*mt^3*s13*s14*s23 + 
      denom(1/2*s12)*mt^3*s13^2*s23 + denom(1/2*s12)*mt^5*s14*s24 + denom(1/2*
      s12)*mt^5*s14*s23 + denom(1/2*s12)*mt^5*s14^2 - denom(1/2*s12)*mt^5*s13*
      s24 - denom(1/2*s12)*mt^5*s13*s23 - denom(1/2*s12)*mt^5*s13^2 - 2*denom(
      1/2*s12)*mt^7*s14 + 2*denom(1/2*s12)*mt^7*s13 + 1/2*denom(1/4*s12^2)*mt*
      s13*s14^2*s23*s24 - 1/2*denom(1/4*s12^2)*mt*s13^2*s14*s23*s24 - 1/2*
      denom(1/4*s12^2)*mt^3*s14^2*s23*s24 - 1/2*denom(1/4*s12^2)*mt^3*s13*
      s14^2*s24 - 1/2*denom(1/4*s12^2)*mt^3*s13*s14^2*s23 + 1/2*denom(1/4*
      s12^2)*mt^3*s13^2*s23*s24 + 1/2*denom(1/4*s12^2)*mt^3*s13^2*s14*s24 + 1/
      2*denom(1/4*s12^2)*mt^3*s13^2*s14*s23 + 1/2*denom(1/4*s12^2)*mt^5*s14*
      s23*s24 + 1/2*denom(1/4*s12^2)*mt^5*s14^2*s24 + 1/2*denom(1/4*s12^2)*
      mt^5*s14^2*s23 - 1/2*denom(1/4*s12^2)*mt^5*s13*s23*s24 + 1/2*denom(1/4*
      s12^2)*mt^5*s13*s14^2 - 1/2*denom(1/4*s12^2)*mt^5*s13^2*s24 - 1/2*denom(
      1/4*s12^2)*mt^5*s13^2*s23 - 1/2*denom(1/4*s12^2)*mt^5*s13^2*s14 - 1/2*
      denom(1/4*s12^2)*mt^7*s14*s24 - 1/2*denom(1/4*s12^2)*mt^7*s14*s23 - 1/2*
      denom(1/4*s12^2)*mt^7*s14^2 + 1/2*denom(1/4*s12^2)*mt^7*s13*s24 + 1/2*
      denom(1/4*s12^2)*mt^7*s13*s23 + 1/2*denom(1/4*s12^2)*mt^7*s13^2 + 1/2*
      denom(1/4*s12^2)*mt^9*s14 - 1/2*denom(1/4*s12^2)*mt^9*s13;
 
 .sort
id KMatrix(6,3) =  1/2*mt*s14*s24^2 + mt*s14*s23*s24 + 1/2*mt*s14*s23^2 + mt*
      s14^2*s24 + mt*s14^2*s23 + 1/2*mt*s14^3 - 1/2*mt*s13*s24^2 - mt*s13*s23*
      s24 - 1/2*mt*s13*s23^2 + 1/2*mt*s13*s14^2 - mt*s13^2*s24 - mt*s13^2*s23
       - 1/2*mt*s13^2*s14 - 1/2*mt*s13^3 + mt*s12*s14*s24 + mt*s12*s14*s23 + 
      mt*s12*s14^2 - mt*s12*s13*s24 - mt*s12*s13*s23 - mt*s12*s13^2 + 1/2*mt*
      s12^2*s14 - 1/2*mt*s12^2*s13 - mt*mh^2*s14*s24 - mt*mh^2*s14*s23 - mt*
      mh^2*s14^2 + mt*mh^2*s13*s24 + mt*mh^2*s13*s23 + mt*mh^2*s13^2 - mt*mh^2
      *s12*s14 + mt*mh^2*s12*s13 + 1/2*mt*mh^4*s14 - 1/2*mt*mh^4*s13 - 2*mt^3*
      s14*s24 - 2*mt^3*s14*s23 - 2*mt^3*s14^2 + 2*mt^3*s13*s24 + 2*mt^3*s13*
      s23 + 2*mt^3*s13^2 - 2*mt^3*s12*s14 + 2*mt^3*s12*s13 + 2*mt^3*mh^2*s14
       - 2*mt^3*mh^2*s13 + 2*mt^5*s14 - 2*mt^5*s13 + 1/2*denom(1/2*s12)*mt*
      s14^2*s23*s24 + 1/2*denom(1/2*s12)*mt*s14^2*s23^2 + 1/2*denom(1/2*s12)*
      mt*s14^3*s23 + 1/2*denom(1/2*s12)*mt*s13*s14*s24^2 - 1/2*denom(1/2*s12)*
      mt*s13*s14*s23^2 + 1/2*denom(1/2*s12)*mt*s13*s14^2*s24 - 1/2*denom(1/2*
      s12)*mt*s13^2*s24^2 - 1/2*denom(1/2*s12)*mt*s13^2*s23*s24 - 1/2*denom(1/
      2*s12)*mt*s13^2*s14*s23 - 1/2*denom(1/2*s12)*mt*s13^3*s24 + 1/2*denom(1/
      2*s12)*mt*s12*s14^2*s23 + 1/2*denom(1/2*s12)*mt*s12*s13*s14*s24 - 1/2*
      denom(1/2*s12)*mt*s12*s13*s14*s23 - 1/2*denom(1/2*s12)*mt*s12*s13^2*s24
       - 1/2*denom(1/2*s12)*mt*mh^2*s14^2*s23 - 1/2*denom(1/2*s12)*mt*mh^2*s13
      *s14*s24 + 1/2*denom(1/2*s12)*mt*mh^2*s13*s14*s23 + 1/2*denom(1/2*s12)*
      mt*mh^2*s13^2*s24 - 1/2*denom(1/2*s12)*mt^3*s14*s24^2 - denom(1/2*s12)*
      mt^3*s14*s23*s24 - 1/2*denom(1/2*s12)*mt^3*s14*s23^2 - denom(1/2*s12)*
      mt^3*s14^2*s24 - 2*denom(1/2*s12)*mt^3*s14^2*s23 - 1/2*denom(1/2*s12)*
      mt^3*s14^3 + 1/2*denom(1/2*s12)*mt^3*s13*s24^2 + denom(1/2*s12)*mt^3*s13
      *s23*s24 + 1/2*denom(1/2*s12)*mt^3*s13*s23^2 - denom(1/2*s12)*mt^3*s13*
      s14*s24 + denom(1/2*s12)*mt^3*s13*s14*s23 - 1/2*denom(1/2*s12)*mt^3*s13*
      s14^2 + 2*denom(1/2*s12)*mt^3*s13^2*s24 + denom(1/2*s12)*mt^3*s13^2*s23
       + 1/2*denom(1/2*s12)*mt^3*s13^2*s14 + 1/2*denom(1/2*s12)*mt^3*s13^3 - 1/
      2*denom(1/2*s12)*mt^3*s12*s14*s24 - 1/2*denom(1/2*s12)*mt^3*s12*s14*s23
       - 1/2*denom(1/2*s12)*mt^3*s12*s14^2 + 1/2*denom(1/2*s12)*mt^3*s12*s13*
      s24 + 1/2*denom(1/2*s12)*mt^3*s12*s13*s23 + 1/2*denom(1/2*s12)*mt^3*s12*
      s13^2 + 1/2*denom(1/2*s12)*mt^3*mh^2*s14*s24 + 1/2*denom(1/2*s12)*mt^3*
      mh^2*s14*s23 + 1/2*denom(1/2*s12)*mt^3*mh^2*s14^2 - 1/2*denom(1/2*s12)*
      mt^3*mh^2*s13*s24 - 1/2*denom(1/2*s12)*mt^3*mh^2*s13*s23 - 1/2*denom(1/2
      *s12)*mt^3*mh^2*s13^2 + 2*denom(1/2*s12)*mt^5*s14*s24 + 2*denom(1/2*s12)
      *mt^5*s14*s23 + 2*denom(1/2*s12)*mt^5*s14^2 - 2*denom(1/2*s12)*mt^5*s13*
      s24 - 2*denom(1/2*s12)*mt^5*s13*s23 - 2*denom(1/2*s12)*mt^5*s13^2 + 
      denom(1/2*s12)*mt^5*s12*s14 - denom(1/2*s12)*mt^5*s12*s13 - denom(1/2*
      s12)*mt^5*mh^2*s14 + denom(1/2*s12)*mt^5*mh^2*s13 - 2*denom(1/2*s12)*
      mt^7*s14 + 2*denom(1/2*s12)*mt^7*s13 + 1/8*denom(1/4*s12^2)*mt*s14^3*
      s23^2 + 1/4*denom(1/4*s12^2)*mt*s13*s14^2*s23*s24 - 1/8*denom(1/4*s12^2)
      *mt*s13*s14^2*s23^2 + 1/8*denom(1/4*s12^2)*mt*s13^2*s14*s24^2 - 1/4*
      denom(1/4*s12^2)*mt*s13^2*s14*s23*s24 - 1/8*denom(1/4*s12^2)*mt*s13^3*
      s24^2 - 1/4*denom(1/4*s12^2)*mt^3*s14^2*s23*s24 - 1/4*denom(1/4*s12^2)*
      mt^3*s14^2*s23^2 - 1/4*denom(1/4*s12^2)*mt^3*s14^3*s23 - 1/4*denom(1/4*
      s12^2)*mt^3*s13*s14*s24^2 + 1/4*denom(1/4*s12^2)*mt^3*s13*s14*s23^2 - 1/
      4*denom(1/4*s12^2)*mt^3*s13*s14^2*s24 + 1/4*denom(1/4*s12^2)*mt^3*s13^2*
      s24^2 + 1/4*denom(1/4*s12^2)*mt^3*s13^2*s23*s24 + 1/4*denom(1/4*s12^2)*
      mt^3*s13^2*s14*s23 + 1/4*denom(1/4*s12^2)*mt^3*s13^3*s24 + 1/8*denom(1/4
      *s12^2)*mt^5*s14*s24^2 + 1/4*denom(1/4*s12^2)*mt^5*s14*s23*s24 + 1/8*
      denom(1/4*s12^2)*mt^5*s14*s23^2 + 1/4*denom(1/4*s12^2)*mt^5*s14^2*s24 + 
      3/4*denom(1/4*s12^2)*mt^5*s14^2*s23 + 1/8*denom(1/4*s12^2)*mt^5*s14^3 - 
      1/8*denom(1/4*s12^2)*mt^5*s13*s24^2 - 1/4*denom(1/4*s12^2)*mt^5*s13*s23*
      s24 - 1/8*denom(1/4*s12^2)*mt^5*s13*s23^2 + 1/2*denom(1/4*s12^2)*mt^5*
      s13*s14*s24 - 1/2*denom(1/4*s12^2)*mt^5*s13*s14*s23 + 1/8*denom(1/4*
      s12^2)*mt^5*s13*s14^2 - 3/4*denom(1/4*s12^2)*mt^5*s13^2*s24 - 1/4*denom(
      1/4*s12^2)*mt^5*s13^2*s23 - 1/8*denom(1/4*s12^2)*mt^5*s13^2*s14 - 1/8*
      denom(1/4*s12^2)*mt^5*s13^3 - 1/2*denom(1/4*s12^2)*mt^7*s14*s24 - 1/2*
      denom(1/4*s12^2)*mt^7*s14*s23 - 1/2*denom(1/4*s12^2)*mt^7*s14^2 + 1/2*
      denom(1/4*s12^2)*mt^7*s13*s24 + 1/2*denom(1/4*s12^2)*mt^7*s13*s23 + 1/2*
      denom(1/4*s12^2)*mt^7*s13^2 + 1/2*denom(1/4*s12^2)*mt^9*s14 - 1/2*denom(
      1/4*s12^2)*mt^9*s13;
 
 .sort
id KMatrix(6,4) =   - mt^3*s14*s24 - mt^3*s14*s23 - mt^3*s14^2 + mt^3*s13*s24
       + mt^3*s13*s23 + mt^3*s13^2 - mt^3*s12*s14 + mt^3*s12*s13 + mt^3*mh^2*
      s14 - mt^3*mh^2*s13 + 2*mt^5*s14 - 2*mt^5*s13 + 1/2*denom(1/2*s12)*mt*
      s14^2*s24^2 + 1/2*denom(1/2*s12)*mt*s14^2*s23*s24 + 1/2*denom(1/2*s12)*
      mt*s14^3*s24 - 1/2*denom(1/2*s12)*mt*s13*s14*s24^2 - 1/2*denom(1/2*s12)*
      mt*s13*s14*s23*s24 - 1/2*denom(1/2*s12)*mt*s13^2*s14*s24 + 1/2*denom(1/2
      *s12)*mt*s12*s14^2*s24 - 1/2*denom(1/2*s12)*mt*s12*s13*s14*s24 - 1/2*
      denom(1/2*s12)*mt*mh^2*s14^2*s24 + 1/2*denom(1/2*s12)*mt*mh^2*s13*s14*
      s24 - 1/2*denom(1/2*s12)*mt^3*s14*s24^2 - 1/2*denom(1/2*s12)*mt^3*s14*
      s23*s24 - 2*denom(1/2*s12)*mt^3*s14^2*s24 - denom(1/2*s12)*mt^3*s14^2*
      s23 - 1/2*denom(1/2*s12)*mt^3*s14^3 + 1/2*denom(1/2*s12)*mt^3*s13*s24^2
       + 1/2*denom(1/2*s12)*mt^3*s13*s23*s24 + denom(1/2*s12)*mt^3*s13*s14*s24
       + denom(1/2*s12)*mt^3*s13*s14*s23 + denom(1/2*s12)*mt^3*s13^2*s24 + 1/2
      *denom(1/2*s12)*mt^3*s13^2*s14 - 1/2*denom(1/2*s12)*mt^3*s12*s14*s24 - 1/
      2*denom(1/2*s12)*mt^3*s12*s14^2 + 1/2*denom(1/2*s12)*mt^3*s12*s13*s24 + 
      1/2*denom(1/2*s12)*mt^3*s12*s13*s14 + 1/2*denom(1/2*s12)*mt^3*mh^2*s14*
      s24 + 1/2*denom(1/2*s12)*mt^3*mh^2*s14^2 - 1/2*denom(1/2*s12)*mt^3*mh^2*
      s13*s24 - 1/2*denom(1/2*s12)*mt^3*mh^2*s13*s14 + 2*denom(1/2*s12)*mt^5*
      s14*s24 + denom(1/2*s12)*mt^5*s14*s23 + 2*denom(1/2*s12)*mt^5*s14^2 - 2*
      denom(1/2*s12)*mt^5*s13*s24 - denom(1/2*s12)*mt^5*s13*s23 - denom(1/2*
      s12)*mt^5*s13*s14 - denom(1/2*s12)*mt^5*s13^2 + 1/2*denom(1/2*s12)*mt^5*
      s12*s14 - 1/2*denom(1/2*s12)*mt^5*s12*s13 - 1/2*denom(1/2*s12)*mt^5*mh^2
      *s14 + 1/2*denom(1/2*s12)*mt^5*mh^2*s13 - 2*denom(1/2*s12)*mt^7*s14 + 2*
      denom(1/2*s12)*mt^7*s13 + 1/4*denom(1/4*s12^2)*mt*s14^3*s23*s24 + 1/4*
      denom(1/4*s12^2)*mt*s13*s14^2*s24^2 - 1/4*denom(1/4*s12^2)*mt*s13*s14^2*
      s23*s24 - 1/4*denom(1/4*s12^2)*mt*s13^2*s14*s24^2 - 1/4*denom(1/4*s12^2)
      *mt^3*s14^2*s24^2 - 1/2*denom(1/4*s12^2)*mt^3*s14^2*s23*s24 - 1/4*denom(
      1/4*s12^2)*mt^3*s14^3*s24 - 1/4*denom(1/4*s12^2)*mt^3*s14^3*s23 + 1/2*
      denom(1/4*s12^2)*mt^3*s13*s14*s23*s24 - 1/4*denom(1/4*s12^2)*mt^3*s13*
      s14^2*s24 + 1/4*denom(1/4*s12^2)*mt^3*s13*s14^2*s23 + 1/4*denom(1/4*
      s12^2)*mt^3*s13^2*s24^2 + 1/2*denom(1/4*s12^2)*mt^3*s13^2*s14*s24 + 1/4*
      denom(1/4*s12^2)*mt^5*s14*s24^2 + 1/4*denom(1/4*s12^2)*mt^5*s14*s23*s24
       + denom(1/4*s12^2)*mt^5*s14^2*s24 + 1/2*denom(1/4*s12^2)*mt^5*s14^2*s23
       + 1/4*denom(1/4*s12^2)*mt^5*s14^3 - 1/4*denom(1/4*s12^2)*mt^5*s13*s24^2
       - 1/4*denom(1/4*s12^2)*mt^5*s13*s23*s24 - 1/2*denom(1/4*s12^2)*mt^5*s13
      *s14*s24 - 1/2*denom(1/4*s12^2)*mt^5*s13*s14*s23 - 1/2*denom(1/4*s12^2)*
      mt^5*s13^2*s24 - 1/4*denom(1/4*s12^2)*mt^5*s13^2*s14 - 3/4*denom(1/4*
      s12^2)*mt^7*s14*s24 - 1/4*denom(1/4*s12^2)*mt^7*s14*s23 - 3/4*denom(1/4*
      s12^2)*mt^7*s14^2 + 3/4*denom(1/4*s12^2)*mt^7*s13*s24 + 1/4*denom(1/4*
      s12^2)*mt^7*s13*s23 + 1/2*denom(1/4*s12^2)*mt^7*s13*s14 + 1/4*denom(1/4*
      s12^2)*mt^7*s13^2 + 1/2*denom(1/4*s12^2)*mt^9*s14 - 1/2*denom(1/4*s12^2)
      *mt^9*s13;
 
 .sort
id KMatrix(6,5) =   - mt^2*s13*s14*s24 - mt^2*s13*s14*s23 - mt^2*s13*s14^2 - 
      mt^2*s13^2*s14 - mt^2*s12*s13*s14 + mt^2*mh^2*s13*s14 + mt^4*s14*s24 + 
      mt^4*s14*s23 + mt^4*s14^2 + mt^4*s13*s24 + mt^4*s13*s23 + 4*mt^4*s13*s14
       + mt^4*s13^2 + mt^4*s12*s14 + mt^4*s12*s13 - mt^4*mh^2*s14 - mt^4*mh^2*
      s13 - mt^6*s24 - mt^6*s23 - 3*mt^6*s14 - 3*mt^6*s13 - mt^6*s12 + mt^6*
      mh^2 + 2*mt^8 + 1/2*denom(1/2*s12)*s13^2*s14*s23*s24 + 1/2*denom(1/2*s12
      )*s13^2*s14*s23^2 + 1/2*denom(1/2*s12)*s13^2*s14^2*s23 + 1/2*denom(1/2*
      s12)*s13^3*s14*s23 + 1/2*denom(1/2*s12)*s12*s13^2*s14*s23 - 1/2*denom(1/
      2*s12)*mh^2*s13^2*s14*s23 - denom(1/2*s12)*mt^2*s13*s14*s23*s24 - denom(
      1/2*s12)*mt^2*s13*s14*s23^2 - 3/2*denom(1/2*s12)*mt^2*s13*s14^2*s23 - 1/
      2*denom(1/2*s12)*mt^2*s13^2*s23*s24 - 1/2*denom(1/2*s12)*mt^2*s13^2*
      s23^2 - denom(1/2*s12)*mt^2*s13^2*s14*s24 - 3*denom(1/2*s12)*mt^2*s13^2*
      s14*s23 - 1/2*denom(1/2*s12)*mt^2*s13^2*s14^2 - 1/2*denom(1/2*s12)*mt^2*
      s13^3*s23 - 1/2*denom(1/2*s12)*mt^2*s13^3*s14 - denom(1/2*s12)*mt^2*s12*
      s13*s14*s23 - 1/2*denom(1/2*s12)*mt^2*s12*s13^2*s23 - 1/2*denom(1/2*s12)
      *mt^2*s12*s13^2*s14 + denom(1/2*s12)*mt^2*mh^2*s13*s14*s23 + 1/2*denom(1/
      2*s12)*mt^2*mh^2*s13^2*s23 + 1/2*denom(1/2*s12)*mt^2*mh^2*s13^2*s14 + 1/
      2*denom(1/2*s12)*mt^4*s14*s23*s24 + 1/2*denom(1/2*s12)*mt^4*s14*s23^2 + 
      denom(1/2*s12)*mt^4*s14^2*s23 + denom(1/2*s12)*mt^4*s13*s23*s24 + denom(
      1/2*s12)*mt^4*s13*s23^2 + 2*denom(1/2*s12)*mt^4*s13*s14*s24 + 11/2*
      denom(1/2*s12)*mt^4*s13*s14*s23 + 3/2*denom(1/2*s12)*mt^4*s13*s14^2 + 
      denom(1/2*s12)*mt^4*s13^2*s24 + 5/2*denom(1/2*s12)*mt^4*s13^2*s23 + 3*
      denom(1/2*s12)*mt^4*s13^2*s14 + 1/2*denom(1/2*s12)*mt^4*s13^3 + 1/2*
      denom(1/2*s12)*mt^4*s12*s14*s23 + denom(1/2*s12)*mt^4*s12*s13*s23 + 
      denom(1/2*s12)*mt^4*s12*s13*s14 + 1/2*denom(1/2*s12)*mt^4*s12*s13^2 - 1/
      2*denom(1/2*s12)*mt^4*mh^2*s14*s23 - denom(1/2*s12)*mt^4*mh^2*s13*s23 - 
      denom(1/2*s12)*mt^4*mh^2*s13*s14 - 1/2*denom(1/2*s12)*mt^4*mh^2*s13^2 - 
      1/2*denom(1/2*s12)*mt^6*s23*s24 - 1/2*denom(1/2*s12)*mt^6*s23^2 - denom(
      1/2*s12)*mt^6*s14*s24 - 3*denom(1/2*s12)*mt^6*s14*s23 - denom(1/2*s12)*
      mt^6*s14^2 - 2*denom(1/2*s12)*mt^6*s13*s24 - 4*denom(1/2*s12)*mt^6*s13*
      s23 - 11/2*denom(1/2*s12)*mt^6*s13*s14 - 5/2*denom(1/2*s12)*mt^6*s13^2
       - 1/2*denom(1/2*s12)*mt^6*s12*s23 - 1/2*denom(1/2*s12)*mt^6*s12*s14 - 
      denom(1/2*s12)*mt^6*s12*s13 + 1/2*denom(1/2*s12)*mt^6*mh^2*s23 + 1/2*
      denom(1/2*s12)*mt^6*mh^2*s14 + denom(1/2*s12)*mt^6*mh^2*s13 + denom(1/2*
      s12)*mt^8*s24 + 2*denom(1/2*s12)*mt^8*s23 + 3*denom(1/2*s12)*mt^8*s14 + 
      4*denom(1/2*s12)*mt^8*s13 + 1/2*denom(1/2*s12)*mt^8*s12 - 1/2*denom(1/2*
      s12)*mt^8*mh^2 - 2*denom(1/2*s12)*mt^10 + 1/4*denom(1/4*s12^2)*s13^2*
      s14^2*s23^2 + 1/4*denom(1/4*s12^2)*s13^3*s14*s23*s24 - 1/2*denom(1/4*
      s12^2)*mt^2*s13*s14^2*s23^2 - 3/4*denom(1/4*s12^2)*mt^2*s13^2*s14*s23*
      s24 - 1/2*denom(1/4*s12^2)*mt^2*s13^2*s14*s23^2 - 1/2*denom(1/4*s12^2)*
      mt^2*s13^2*s14^2*s23 - 1/4*denom(1/4*s12^2)*mt^2*s13^3*s23*s24 - 1/4*
      denom(1/4*s12^2)*mt^2*s13^3*s14*s24 - 1/4*denom(1/4*s12^2)*mt^2*s13^3*
      s14*s23 + 1/4*denom(1/4*s12^2)*mt^4*s14^2*s23^2 + 3/4*denom(1/4*s12^2)*
      mt^4*s13*s14*s23*s24 + denom(1/4*s12^2)*mt^4*s13*s14*s23^2 + denom(1/4*
      s12^2)*mt^4*s13*s14^2*s23 + 3/4*denom(1/4*s12^2)*mt^4*s13^2*s23*s24 + 1/
      4*denom(1/4*s12^2)*mt^4*s13^2*s23^2 + 3/4*denom(1/4*s12^2)*mt^4*s13^2*
      s14*s24 + 7/4*denom(1/4*s12^2)*mt^4*s13^2*s14*s23 + 1/4*denom(1/4*s12^2)
      *mt^4*s13^2*s14^2 + 1/4*denom(1/4*s12^2)*mt^4*s13^3*s24 + 1/4*denom(1/4*
      s12^2)*mt^4*s13^3*s23 + 1/4*denom(1/4*s12^2)*mt^4*s13^3*s14 - 1/4*denom(
      1/4*s12^2)*mt^6*s14*s23*s24 - 1/2*denom(1/4*s12^2)*mt^6*s14*s23^2 - 1/2*
      denom(1/4*s12^2)*mt^6*s14^2*s23 - 3/4*denom(1/4*s12^2)*mt^6*s13*s23*s24
       - 1/2*denom(1/4*s12^2)*mt^6*s13*s23^2 - 3/4*denom(1/4*s12^2)*mt^6*s13*
      s14*s24 - 11/4*denom(1/4*s12^2)*mt^6*s13*s14*s23 - 1/2*denom(1/4*s12^2)*
      mt^6*s13*s14^2 - 3/4*denom(1/4*s12^2)*mt^6*s13^2*s24 - 5/4*denom(1/4*
      s12^2)*mt^6*s13^2*s23 - 5/4*denom(1/4*s12^2)*mt^6*s13^2*s14 - 1/4*denom(
      1/4*s12^2)*mt^6*s13^3 + 1/4*denom(1/4*s12^2)*mt^8*s23*s24 + 1/4*denom(1/
      4*s12^2)*mt^8*s23^2 + 1/4*denom(1/4*s12^2)*mt^8*s14*s24 + 5/4*denom(1/4*
      s12^2)*mt^8*s14*s23 + 1/4*denom(1/4*s12^2)*mt^8*s14^2 + 3/4*denom(1/4*
      s12^2)*mt^8*s13*s24 + 7/4*denom(1/4*s12^2)*mt^8*s13*s23 + 7/4*denom(1/4*
      s12^2)*mt^8*s13*s14 + denom(1/4*s12^2)*mt^8*s13^2 - 1/4*denom(1/4*s12^2)
      *mt^10*s24 - 3/4*denom(1/4*s12^2)*mt^10*s23 - 3/4*denom(1/4*s12^2)*mt^10
      *s14 - 5/4*denom(1/4*s12^2)*mt^10*s13 + 1/2*denom(1/4*s12^2)*mt^12;
 
 .sort
id KMatrix(6,6) =  2*mt^4*s13*s14 - 2*mt^6*s14 - 2*mt^6*s13 + 2*mt^8 - denom(1/
      2*s12)*mt^2*s13*s14^2*s24 - denom(1/2*s12)*mt^2*s13^2*s14*s23 + denom(1/
      2*s12)*mt^4*s14^2*s24 + 2*denom(1/2*s12)*mt^4*s13*s14*s24 + 2*denom(1/2*
      s12)*mt^4*s13*s14*s23 + denom(1/2*s12)*mt^4*s13*s14^2 + denom(1/2*s12)*
      mt^4*s13^2*s23 + denom(1/2*s12)*mt^4*s13^2*s14 - 2*denom(1/2*s12)*mt^6*
      s14*s24 - denom(1/2*s12)*mt^6*s14*s23 - denom(1/2*s12)*mt^6*s14^2 - 
      denom(1/2*s12)*mt^6*s13*s24 - 2*denom(1/2*s12)*mt^6*s13*s23 - 4*denom(1/
      2*s12)*mt^6*s13*s14 - denom(1/2*s12)*mt^6*s13^2 + denom(1/2*s12)*mt^8*
      s24 + denom(1/2*s12)*mt^8*s23 + 3*denom(1/2*s12)*mt^8*s14 + 3*denom(1/2*
      s12)*mt^8*s13 - 2*denom(1/2*s12)*mt^10 + 1/2*denom(1/4*s12^2)*s13^2*
      s14^2*s23*s24 - denom(1/4*s12^2)*mt^2*s13*s14^2*s23*s24 - denom(1/4*
      s12^2)*mt^2*s13^2*s14*s23*s24 - 1/2*denom(1/4*s12^2)*mt^2*s13^2*s14^2*
      s24 - 1/2*denom(1/4*s12^2)*mt^2*s13^2*s14^2*s23 + 1/2*denom(1/4*s12^2)*
      mt^4*s14^2*s23*s24 + 2*denom(1/4*s12^2)*mt^4*s13*s14*s23*s24 + denom(1/4
      *s12^2)*mt^4*s13*s14^2*s24 + denom(1/4*s12^2)*mt^4*s13*s14^2*s23 + 1/2*
      denom(1/4*s12^2)*mt^4*s13^2*s23*s24 + denom(1/4*s12^2)*mt^4*s13^2*s14*
      s24 + denom(1/4*s12^2)*mt^4*s13^2*s14*s23 + 1/2*denom(1/4*s12^2)*mt^4*
      s13^2*s14^2 - denom(1/4*s12^2)*mt^6*s14*s23*s24 - 1/2*denom(1/4*s12^2)*
      mt^6*s14^2*s24 - 1/2*denom(1/4*s12^2)*mt^6*s14^2*s23 - denom(1/4*s12^2)*
      mt^6*s13*s23*s24 - 2*denom(1/4*s12^2)*mt^6*s13*s14*s24 - 2*denom(1/4*
      s12^2)*mt^6*s13*s14*s23 - denom(1/4*s12^2)*mt^6*s13*s14^2 - 1/2*denom(1/
      4*s12^2)*mt^6*s13^2*s24 - 1/2*denom(1/4*s12^2)*mt^6*s13^2*s23 - denom(1/
      4*s12^2)*mt^6*s13^2*s14 + 1/2*denom(1/4*s12^2)*mt^8*s23*s24 + denom(1/4*
      s12^2)*mt^8*s14*s24 + denom(1/4*s12^2)*mt^8*s14*s23 + 1/2*denom(1/4*
      s12^2)*mt^8*s14^2 + denom(1/4*s12^2)*mt^8*s13*s24 + denom(1/4*s12^2)*
      mt^8*s13*s23 + 2*denom(1/4*s12^2)*mt^8*s13*s14 + 1/2*denom(1/4*s12^2)*
      mt^8*s13^2 - 1/2*denom(1/4*s12^2)*mt^10*s24 - 1/2*denom(1/4*s12^2)*mt^10
      *s23 - denom(1/4*s12^2)*mt^10*s14 - denom(1/4*s12^2)*mt^10*s13 + 1/2*
      denom(1/4*s12^2)*mt^12;
 
 .sort
id KMatrix(6,7) =  1/2*s13*s14*s24^2 + s13*s14*s23*s24 + 1/2*s13*s14*s23^2 + 
      s13*s14^2*s24 + s13*s14^2*s23 + 1/2*s13*s14^3 + s13^2*s14*s24 + s13^2*
      s14*s23 + s13^2*s14^2 + 1/2*s13^3*s14 + s12*s13*s14*s24 + s12*s13*s14*
      s23 + s12*s13*s14^2 + s12*s13^2*s14 + 1/2*s12^2*s13*s14 - mh^2*s13*s14*
      s24 - mh^2*s13*s14*s23 - mh^2*s13*s14^2 - mh^2*s13^2*s14 - mh^2*s12*s13*
      s14 + 1/2*mh^4*s13*s14 - 1/2*mt^2*s14*s24^2 - mt^2*s14*s23*s24 - 1/2*
      mt^2*s14*s23^2 - mt^2*s14^2*s24 - mt^2*s14^2*s23 - 1/2*mt^2*s14^3 - 1/2*
      mt^2*s13*s24^2 - mt^2*s13*s23*s24 - 1/2*mt^2*s13*s23^2 - 4*mt^2*s13*s14*
      s24 - 4*mt^2*s13*s14*s23 - 7/2*mt^2*s13*s14^2 - mt^2*s13^2*s24 - mt^2*
      s13^2*s23 - 7/2*mt^2*s13^2*s14 - 1/2*mt^2*s13^3 - mt^2*s12*s14*s24 - 
      mt^2*s12*s14*s23 - mt^2*s12*s14^2 - mt^2*s12*s13*s24 - mt^2*s12*s13*s23
       - 4*mt^2*s12*s13*s14 - mt^2*s12*s13^2 - 1/2*mt^2*s12^2*s14 - 1/2*mt^2*
      s12^2*s13 + mt^2*mh^2*s14*s24 + mt^2*mh^2*s14*s23 + mt^2*mh^2*s14^2 + 
      mt^2*mh^2*s13*s24 + mt^2*mh^2*s13*s23 + 4*mt^2*mh^2*s13*s14 + mt^2*mh^2*
      s13^2 + mt^2*mh^2*s12*s14 + mt^2*mh^2*s12*s13 - 1/2*mt^2*mh^4*s14 - 1/2*
      mt^2*mh^4*s13 + 1/2*mt^4*s24^2 + mt^4*s23*s24 + 1/2*mt^4*s23^2 + 3*mt^4*
      s14*s24 + 3*mt^4*s14*s23 + 5/2*mt^4*s14^2 + 3*mt^4*s13*s24 + 3*mt^4*s13*
      s23 + 7*mt^4*s13*s14 + 5/2*mt^4*s13^2 + mt^4*s12*s24 + mt^4*s12*s23 + 3*
      mt^4*s12*s14 + 3*mt^4*s12*s13 + 1/2*mt^4*s12^2 - mt^4*mh^2*s24 - mt^4*
      mh^2*s23 - 3*mt^4*mh^2*s14 - 3*mt^4*mh^2*s13 - mt^4*mh^2*s12 + 1/2*mt^4*
      mh^4 - 2*mt^6*s24 - 2*mt^6*s23 - 4*mt^6*s14 - 4*mt^6*s13 - 2*mt^6*s12 + 
      2*mt^6*mh^2 + 2*mt^8 + 1/2*denom(1/2*s12)*s13*s14^2*s23*s24 + 1/2*denom(
      1/2*s12)*s13*s14^2*s23^2 + 1/2*denom(1/2*s12)*s13*s14^3*s23 + 1/2*denom(
      1/2*s12)*s13^2*s14*s24^2 + 1/2*denom(1/2*s12)*s13^2*s14*s23*s24 + 1/2*
      denom(1/2*s12)*s13^2*s14^2*s24 + 1/2*denom(1/2*s12)*s13^2*s14^2*s23 + 1/
      2*denom(1/2*s12)*s13^3*s14*s24 + 1/2*denom(1/2*s12)*s12*s13*s14^2*s23 + 
      1/2*denom(1/2*s12)*s12*s13^2*s14*s24 - 1/2*denom(1/2*s12)*mh^2*s13*s14^2
      *s23 - 1/2*denom(1/2*s12)*mh^2*s13^2*s14*s24 - 1/2*denom(1/2*s12)*mt^2*
      s14^2*s23*s24 - 1/2*denom(1/2*s12)*mt^2*s14^2*s23^2 - 1/2*denom(1/2*s12)
      *mt^2*s14^3*s23 - denom(1/2*s12)*mt^2*s13*s14*s24^2 - 2*denom(1/2*s12)*
      mt^2*s13*s14*s23*s24 - denom(1/2*s12)*mt^2*s13*s14*s23^2 - 3/2*denom(1/2
      *s12)*mt^2*s13*s14^2*s24 - 3*denom(1/2*s12)*mt^2*s13*s14^2*s23 - 1/2*
      denom(1/2*s12)*mt^2*s13*s14^3 - 1/2*denom(1/2*s12)*mt^2*s13^2*s24^2 - 1/
      2*denom(1/2*s12)*mt^2*s13^2*s23*s24 - 3*denom(1/2*s12)*mt^2*s13^2*s14*
      s24 - 3/2*denom(1/2*s12)*mt^2*s13^2*s14*s23 - denom(1/2*s12)*mt^2*s13^2*
      s14^2 - 1/2*denom(1/2*s12)*mt^2*s13^3*s24 - 1/2*denom(1/2*s12)*mt^2*
      s13^3*s14 - 1/2*denom(1/2*s12)*mt^2*s12*s14^2*s23 - denom(1/2*s12)*mt^2*
      s12*s13*s14*s24 - denom(1/2*s12)*mt^2*s12*s13*s14*s23 - 1/2*denom(1/2*
      s12)*mt^2*s12*s13*s14^2 - 1/2*denom(1/2*s12)*mt^2*s12*s13^2*s24 - 1/2*
      denom(1/2*s12)*mt^2*s12*s13^2*s14 + 1/2*denom(1/2*s12)*mt^2*mh^2*s14^2*
      s23 + denom(1/2*s12)*mt^2*mh^2*s13*s14*s24 + denom(1/2*s12)*mt^2*mh^2*
      s13*s14*s23 + 1/2*denom(1/2*s12)*mt^2*mh^2*s13*s14^2 + 1/2*denom(1/2*s12
      )*mt^2*mh^2*s13^2*s24 + 1/2*denom(1/2*s12)*mt^2*mh^2*s13^2*s14 + 1/2*
      denom(1/2*s12)*mt^4*s14*s24^2 + 3/2*denom(1/2*s12)*mt^4*s14*s23*s24 + 
      denom(1/2*s12)*mt^4*s14*s23^2 + denom(1/2*s12)*mt^4*s14^2*s24 + 5/2*
      denom(1/2*s12)*mt^4*s14^2*s23 + 1/2*denom(1/2*s12)*mt^4*s14^3 + denom(1/
      2*s12)*mt^4*s13*s24^2 + 3/2*denom(1/2*s12)*mt^4*s13*s23*s24 + 1/2*denom(
      1/2*s12)*mt^4*s13*s23^2 + 11/2*denom(1/2*s12)*mt^4*s13*s14*s24 + 11/2*
      denom(1/2*s12)*mt^4*s13*s14*s23 + 7/2*denom(1/2*s12)*mt^4*s13*s14^2 + 5/
      2*denom(1/2*s12)*mt^4*s13^2*s24 + denom(1/2*s12)*mt^4*s13^2*s23 + 7/2*
      denom(1/2*s12)*mt^4*s13^2*s14 + 1/2*denom(1/2*s12)*mt^4*s13^3 + 1/2*
      denom(1/2*s12)*mt^4*s12*s14*s24 + denom(1/2*s12)*mt^4*s12*s14*s23 + 1/2*
      denom(1/2*s12)*mt^4*s12*s14^2 + denom(1/2*s12)*mt^4*s12*s13*s24 + 1/2*
      denom(1/2*s12)*mt^4*s12*s13*s23 + 2*denom(1/2*s12)*mt^4*s12*s13*s14 + 1/
      2*denom(1/2*s12)*mt^4*s12*s13^2 - 1/2*denom(1/2*s12)*mt^4*mh^2*s14*s24
       - denom(1/2*s12)*mt^4*mh^2*s14*s23 - 1/2*denom(1/2*s12)*mt^4*mh^2*s14^2
       - denom(1/2*s12)*mt^4*mh^2*s13*s24 - 1/2*denom(1/2*s12)*mt^4*mh^2*s13*
      s23 - 2*denom(1/2*s12)*mt^4*mh^2*s13*s14 - 1/2*denom(1/2*s12)*mt^4*mh^2*
      s13^2 - 1/2*denom(1/2*s12)*mt^6*s24^2 - denom(1/2*s12)*mt^6*s23*s24 - 1/
      2*denom(1/2*s12)*mt^6*s23^2 - 3*denom(1/2*s12)*mt^6*s14*s24 - 4*denom(1/
      2*s12)*mt^6*s14*s23 - 5/2*denom(1/2*s12)*mt^6*s14^2 - 4*denom(1/2*s12)*
      mt^6*s13*s24 - 3*denom(1/2*s12)*mt^6*s13*s23 - 7*denom(1/2*s12)*mt^6*s13
      *s14 - 5/2*denom(1/2*s12)*mt^6*s13^2 - 1/2*denom(1/2*s12)*mt^6*s12*s24
       - 1/2*denom(1/2*s12)*mt^6*s12*s23 - 3/2*denom(1/2*s12)*mt^6*s12*s14 - 3/
      2*denom(1/2*s12)*mt^6*s12*s13 + 1/2*denom(1/2*s12)*mt^6*mh^2*s24 + 1/2*
      denom(1/2*s12)*mt^6*mh^2*s23 + 3/2*denom(1/2*s12)*mt^6*mh^2*s14 + 3/2*
      denom(1/2*s12)*mt^6*mh^2*s13 + 2*denom(1/2*s12)*mt^8*s24 + 2*denom(1/2*
      s12)*mt^8*s23 + 4*denom(1/2*s12)*mt^8*s14 + 4*denom(1/2*s12)*mt^8*s13 + 
      denom(1/2*s12)*mt^8*s12 - denom(1/2*s12)*mt^8*mh^2 - 2*denom(1/2*s12)*
      mt^10 + 1/8*denom(1/4*s12^2)*s13*s14^3*s23^2 + 1/4*denom(1/4*s12^2)*
      s13^2*s14^2*s23*s24 + 1/8*denom(1/4*s12^2)*s13^3*s14*s24^2 - 1/8*denom(1/
      4*s12^2)*mt^2*s14^3*s23^2 - 1/2*denom(1/4*s12^2)*mt^2*s13*s14^2*s23*s24
       - 3/8*denom(1/4*s12^2)*mt^2*s13*s14^2*s23^2 - 1/4*denom(1/4*s12^2)*mt^2
      *s13*s14^3*s23 - 3/8*denom(1/4*s12^2)*mt^2*s13^2*s14*s24^2 - 1/2*denom(1/
      4*s12^2)*mt^2*s13^2*s14*s23*s24 - 1/4*denom(1/4*s12^2)*mt^2*s13^2*s14^2*
      s24 - 1/4*denom(1/4*s12^2)*mt^2*s13^2*s14^2*s23 - 1/8*denom(1/4*s12^2)*
      mt^2*s13^3*s24^2 - 1/4*denom(1/4*s12^2)*mt^2*s13^3*s14*s24 + 1/4*denom(1/
      4*s12^2)*mt^4*s14^2*s23*s24 + 3/8*denom(1/4*s12^2)*mt^4*s14^2*s23^2 + 1/
      4*denom(1/4*s12^2)*mt^4*s14^3*s23 + 3/8*denom(1/4*s12^2)*mt^4*s13*s14*
      s24^2 + denom(1/4*s12^2)*mt^4*s13*s14*s23*s24 + 3/8*denom(1/4*s12^2)*
      mt^4*s13*s14*s23^2 + 1/2*denom(1/4*s12^2)*mt^4*s13*s14^2*s24 + 5/4*
      denom(1/4*s12^2)*mt^4*s13*s14^2*s23 + 1/8*denom(1/4*s12^2)*mt^4*s13*
      s14^3 + 3/8*denom(1/4*s12^2)*mt^4*s13^2*s24^2 + 1/4*denom(1/4*s12^2)*
      mt^4*s13^2*s23*s24 + 5/4*denom(1/4*s12^2)*mt^4*s13^2*s14*s24 + 1/2*
      denom(1/4*s12^2)*mt^4*s13^2*s14*s23 + 1/4*denom(1/4*s12^2)*mt^4*s13^2*
      s14^2 + 1/4*denom(1/4*s12^2)*mt^4*s13^3*s24 + 1/8*denom(1/4*s12^2)*mt^4*
      s13^3*s14 - 1/8*denom(1/4*s12^2)*mt^6*s14*s24^2 - 1/2*denom(1/4*s12^2)*
      mt^6*s14*s23*s24 - 3/8*denom(1/4*s12^2)*mt^6*s14*s23^2 - 1/4*denom(1/4*
      s12^2)*mt^6*s14^2*s24 - denom(1/4*s12^2)*mt^6*s14^2*s23 - 1/8*denom(1/4*
      s12^2)*mt^6*s14^3 - 3/8*denom(1/4*s12^2)*mt^6*s13*s24^2 - 1/2*denom(1/4*
      s12^2)*mt^6*s13*s23*s24 - 1/8*denom(1/4*s12^2)*mt^6*s13*s23^2 - 7/4*
      denom(1/4*s12^2)*mt^6*s13*s14*s24 - 7/4*denom(1/4*s12^2)*mt^6*s13*s14*
      s23 - 7/8*denom(1/4*s12^2)*mt^6*s13*s14^2 - denom(1/4*s12^2)*mt^6*s13^2*
      s24 - 1/4*denom(1/4*s12^2)*mt^6*s13^2*s23 - 7/8*denom(1/4*s12^2)*mt^6*
      s13^2*s14 - 1/8*denom(1/4*s12^2)*mt^6*s13^3 + 1/8*denom(1/4*s12^2)*mt^8*
      s24^2 + 1/4*denom(1/4*s12^2)*mt^8*s23*s24 + 1/8*denom(1/4*s12^2)*mt^8*
      s23^2 + 3/4*denom(1/4*s12^2)*mt^8*s14*s24 + 5/4*denom(1/4*s12^2)*mt^8*
      s14*s23 + 5/8*denom(1/4*s12^2)*mt^8*s14^2 + 5/4*denom(1/4*s12^2)*mt^8*
      s13*s24 + 3/4*denom(1/4*s12^2)*mt^8*s13*s23 + 7/4*denom(1/4*s12^2)*mt^8*
      s13*s14 + 5/8*denom(1/4*s12^2)*mt^8*s13^2 - 1/2*denom(1/4*s12^2)*mt^10*
      s24 - 1/2*denom(1/4*s12^2)*mt^10*s23 - denom(1/4*s12^2)*mt^10*s14 - 
      denom(1/4*s12^2)*mt^10*s13 + 1/2*denom(1/4*s12^2)*mt^12;
 
 .sort
id KMatrix(6,8) =   - mt^2*s13*s14*s24 - mt^2*s13*s14*s23 - mt^2*s13*s14^2 - 
      mt^2*s13^2*s14 - mt^2*s12*s13*s14 + mt^2*mh^2*s13*s14 + mt^4*s14*s24 + 
      mt^4*s14*s23 + mt^4*s14^2 + mt^4*s13*s24 + mt^4*s13*s23 + 4*mt^4*s13*s14
       + mt^4*s13^2 + mt^4*s12*s14 + mt^4*s12*s13 - mt^4*mh^2*s14 - mt^4*mh^2*
      s13 - mt^6*s24 - mt^6*s23 - 3*mt^6*s14 - 3*mt^6*s13 - mt^6*s12 + mt^6*
      mh^2 + 2*mt^8 + 1/2*denom(1/2*s12)*s13*s14^2*s24^2 + 1/2*denom(1/2*s12)*
      s13*s14^2*s23*s24 + 1/2*denom(1/2*s12)*s13*s14^3*s24 + 1/2*denom(1/2*s12
      )*s13^2*s14^2*s24 + 1/2*denom(1/2*s12)*s12*s13*s14^2*s24 - 1/2*denom(1/2
      *s12)*mh^2*s13*s14^2*s24 - 1/2*denom(1/2*s12)*mt^2*s14^2*s24^2 - 1/2*
      denom(1/2*s12)*mt^2*s14^2*s23*s24 - 1/2*denom(1/2*s12)*mt^2*s14^3*s24 - 
      denom(1/2*s12)*mt^2*s13*s14*s24^2 - denom(1/2*s12)*mt^2*s13*s14*s23*s24
       - 3*denom(1/2*s12)*mt^2*s13*s14^2*s24 - denom(1/2*s12)*mt^2*s13*s14^2*
      s23 - 1/2*denom(1/2*s12)*mt^2*s13*s14^3 - 3/2*denom(1/2*s12)*mt^2*s13^2*
      s14*s24 - 1/2*denom(1/2*s12)*mt^2*s13^2*s14^2 - 1/2*denom(1/2*s12)*mt^2*
      s12*s14^2*s24 - denom(1/2*s12)*mt^2*s12*s13*s14*s24 - 1/2*denom(1/2*s12)
      *mt^2*s12*s13*s14^2 + 1/2*denom(1/2*s12)*mt^2*mh^2*s14^2*s24 + denom(1/2
      *s12)*mt^2*mh^2*s13*s14*s24 + 1/2*denom(1/2*s12)*mt^2*mh^2*s13*s14^2 + 
      denom(1/2*s12)*mt^4*s14*s24^2 + denom(1/2*s12)*mt^4*s14*s23*s24 + 5/2*
      denom(1/2*s12)*mt^4*s14^2*s24 + denom(1/2*s12)*mt^4*s14^2*s23 + 1/2*
      denom(1/2*s12)*mt^4*s14^3 + 1/2*denom(1/2*s12)*mt^4*s13*s24^2 + 1/2*
      denom(1/2*s12)*mt^4*s13*s23*s24 + 11/2*denom(1/2*s12)*mt^4*s13*s14*s24
       + 2*denom(1/2*s12)*mt^4*s13*s14*s23 + 3*denom(1/2*s12)*mt^4*s13*s14^2
       + denom(1/2*s12)*mt^4*s13^2*s24 + 3/2*denom(1/2*s12)*mt^4*s13^2*s14 + 
      denom(1/2*s12)*mt^4*s12*s14*s24 + 1/2*denom(1/2*s12)*mt^4*s12*s14^2 + 1/
      2*denom(1/2*s12)*mt^4*s12*s13*s24 + denom(1/2*s12)*mt^4*s12*s13*s14 - 
      denom(1/2*s12)*mt^4*mh^2*s14*s24 - 1/2*denom(1/2*s12)*mt^4*mh^2*s14^2 - 
      1/2*denom(1/2*s12)*mt^4*mh^2*s13*s24 - denom(1/2*s12)*mt^4*mh^2*s13*s14
       - 1/2*denom(1/2*s12)*mt^6*s24^2 - 1/2*denom(1/2*s12)*mt^6*s23*s24 - 4*
      denom(1/2*s12)*mt^6*s14*s24 - 2*denom(1/2*s12)*mt^6*s14*s23 - 5/2*denom(
      1/2*s12)*mt^6*s14^2 - 3*denom(1/2*s12)*mt^6*s13*s24 - denom(1/2*s12)*
      mt^6*s13*s23 - 11/2*denom(1/2*s12)*mt^6*s13*s14 - denom(1/2*s12)*mt^6*
      s13^2 - 1/2*denom(1/2*s12)*mt^6*s12*s24 - denom(1/2*s12)*mt^6*s12*s14 - 
      1/2*denom(1/2*s12)*mt^6*s12*s13 + 1/2*denom(1/2*s12)*mt^6*mh^2*s24 + 
      denom(1/2*s12)*mt^6*mh^2*s14 + 1/2*denom(1/2*s12)*mt^6*mh^2*s13 + 2*
      denom(1/2*s12)*mt^8*s24 + denom(1/2*s12)*mt^8*s23 + 4*denom(1/2*s12)*
      mt^8*s14 + 3*denom(1/2*s12)*mt^8*s13 + 1/2*denom(1/2*s12)*mt^8*s12 - 1/2
      *denom(1/2*s12)*mt^8*mh^2 - 2*denom(1/2*s12)*mt^10 + 1/4*denom(1/4*s12^2
      )*s13*s14^3*s23*s24 + 1/4*denom(1/4*s12^2)*s13^2*s14^2*s24^2 - 1/4*
      denom(1/4*s12^2)*mt^2*s14^3*s23*s24 - 1/2*denom(1/4*s12^2)*mt^2*s13*
      s14^2*s24^2 - 3/4*denom(1/4*s12^2)*mt^2*s13*s14^2*s23*s24 - 1/4*denom(1/
      4*s12^2)*mt^2*s13*s14^3*s24 - 1/4*denom(1/4*s12^2)*mt^2*s13*s14^3*s23 - 
      1/2*denom(1/4*s12^2)*mt^2*s13^2*s14*s24^2 - 1/2*denom(1/4*s12^2)*mt^2*
      s13^2*s14^2*s24 + 1/4*denom(1/4*s12^2)*mt^4*s14^2*s24^2 + 3/4*denom(1/4*
      s12^2)*mt^4*s14^2*s23*s24 + 1/4*denom(1/4*s12^2)*mt^4*s14^3*s24 + 1/4*
      denom(1/4*s12^2)*mt^4*s14^3*s23 + denom(1/4*s12^2)*mt^4*s13*s14*s24^2 + 
      3/4*denom(1/4*s12^2)*mt^4*s13*s14*s23*s24 + 7/4*denom(1/4*s12^2)*mt^4*
      s13*s14^2*s24 + 3/4*denom(1/4*s12^2)*mt^4*s13*s14^2*s23 + 1/4*denom(1/4*
      s12^2)*mt^4*s13*s14^3 + 1/4*denom(1/4*s12^2)*mt^4*s13^2*s24^2 + denom(1/
      4*s12^2)*mt^4*s13^2*s14*s24 + 1/4*denom(1/4*s12^2)*mt^4*s13^2*s14^2 - 1/
      2*denom(1/4*s12^2)*mt^6*s14*s24^2 - 3/4*denom(1/4*s12^2)*mt^6*s14*s23*
      s24 - 5/4*denom(1/4*s12^2)*mt^6*s14^2*s24 - 3/4*denom(1/4*s12^2)*mt^6*
      s14^2*s23 - 1/4*denom(1/4*s12^2)*mt^6*s14^3 - 1/2*denom(1/4*s12^2)*mt^6*
      s13*s24^2 - 1/4*denom(1/4*s12^2)*mt^6*s13*s23*s24 - 11/4*denom(1/4*s12^2
      )*mt^6*s13*s14*s24 - 3/4*denom(1/4*s12^2)*mt^6*s13*s14*s23 - 5/4*denom(1/
      4*s12^2)*mt^6*s13*s14^2 - 1/2*denom(1/4*s12^2)*mt^6*s13^2*s24 - 1/2*
      denom(1/4*s12^2)*mt^6*s13^2*s14 + 1/4*denom(1/4*s12^2)*mt^8*s24^2 + 1/4*
      denom(1/4*s12^2)*mt^8*s23*s24 + 7/4*denom(1/4*s12^2)*mt^8*s14*s24 + 3/4*
      denom(1/4*s12^2)*mt^8*s14*s23 + denom(1/4*s12^2)*mt^8*s14^2 + 5/4*denom(
      1/4*s12^2)*mt^8*s13*s24 + 1/4*denom(1/4*s12^2)*mt^8*s13*s23 + 7/4*denom(
      1/4*s12^2)*mt^8*s13*s14 + 1/4*denom(1/4*s12^2)*mt^8*s13^2 - 3/4*denom(1/
      4*s12^2)*mt^10*s24 - 1/4*denom(1/4*s12^2)*mt^10*s23 - 5/4*denom(1/4*
      s12^2)*mt^10*s14 - 3/4*denom(1/4*s12^2)*mt^10*s13 + 1/2*denom(1/4*s12^2)
      *mt^12;
 
 .sort
id KMatrix(6,9) =   - 1/2*mt^2*s14*s23*s24 - 1/2*mt^2*s14*s23^2 - 1/2*mt^2*
      s14^2*s23 - 1/2*mt^2*s13*s24^2 - 1/2*mt^2*s13*s23*s24 - 1/2*mt^2*s13*s14
      *s24 - 1/2*mt^2*s13*s14*s23 - 1/2*mt^2*s13^2*s24 - 1/2*mt^2*s12*s24^2 - 
      mt^2*s12*s23*s24 - 1/2*mt^2*s12*s23^2 - mt^2*s12*s14*s24 - 3/2*mt^2*s12*
      s14*s23 - 1/2*mt^2*s12*s14^2 - 3/2*mt^2*s12*s13*s24 - mt^2*s12*s13*s23
       - mt^2*s12*s13*s14 - 1/2*mt^2*s12*s13^2 - mt^2*s12^2*s24 - mt^2*s12^2*
      s23 - mt^2*s12^2*s14 - mt^2*s12^2*s13 - 1/2*mt^2*s12^3 + 1/2*mt^2*mh^2*
      s14*s23 + 1/2*mt^2*mh^2*s13*s24 + mt^2*mh^2*s12*s24 + mt^2*mh^2*s12*s23
       + mt^2*mh^2*s12*s14 + mt^2*mh^2*s12*s13 + mt^2*mh^2*s12^2 - 1/2*mt^2*
      mh^4*s12 + 1/2*mt^4*s24^2 + mt^4*s23*s24 + 1/2*mt^4*s23^2 + mt^4*s14*s24
       + 2*mt^4*s14*s23 + 1/2*mt^4*s14^2 + 2*mt^4*s13*s24 + mt^4*s13*s23 + 
      mt^4*s13*s14 + 1/2*mt^4*s13^2 + 7/2*mt^4*s12*s24 + 7/2*mt^4*s12*s23 + 7/
      2*mt^4*s12*s14 + 7/2*mt^4*s12*s13 + 3*mt^4*s12^2 - 1/2*mt^4*mh^2*s24 - 1/
      2*mt^4*mh^2*s23 - 1/2*mt^4*mh^2*s14 - 1/2*mt^4*mh^2*s13 - 3*mt^4*mh^2*
      s12 - 2*mt^6*s24 - 2*mt^6*s23 - 2*mt^6*s14 - 2*mt^6*s13 - 5*mt^6*s12 + 
      mt^6*mh^2 + 2*mt^8 + 1/4*denom(1/2*s12)*s13*s14*s23^2*s24 + 1/4*denom(1/
      2*s12)*s13*s14*s23^3 + 1/4*denom(1/2*s12)*s13*s14^2*s23^2 + 1/4*denom(1/
      2*s12)*s13^2*s23*s24^2 + 1/4*denom(1/2*s12)*s13^2*s23^2*s24 + 1/4*denom(
      1/2*s12)*s13^2*s14*s23*s24 + 1/4*denom(1/2*s12)*s13^2*s14*s23^2 + 1/4*
      denom(1/2*s12)*s13^3*s23*s24 + 1/4*denom(1/2*s12)*s12*s13*s23*s24^2 + 1/
      2*denom(1/2*s12)*s12*s13*s23^2*s24 + 1/4*denom(1/2*s12)*s12*s13*s23^3 + 
      1/2*denom(1/2*s12)*s12*s13*s14*s23*s24 + 3/4*denom(1/2*s12)*s12*s13*s14*
      s23^2 + 1/4*denom(1/2*s12)*s12*s13*s14^2*s23 + 3/4*denom(1/2*s12)*s12*
      s13^2*s23*s24 + 1/2*denom(1/2*s12)*s12*s13^2*s23^2 + 1/2*denom(1/2*s12)*
      s12*s13^2*s14*s23 + 1/4*denom(1/2*s12)*s12*s13^3*s23 + 1/2*denom(1/2*s12
      )*s12^2*s13*s23*s24 + 1/2*denom(1/2*s12)*s12^2*s13*s23^2 + 1/2*denom(1/2
      *s12)*s12^2*s13*s14*s23 + 1/2*denom(1/2*s12)*s12^2*s13^2*s23 + 1/4*
      denom(1/2*s12)*s12^3*s13*s23 - 1/4*denom(1/2*s12)*mh^2*s13*s14*s23^2 - 1/
      4*denom(1/2*s12)*mh^2*s13^2*s23*s24 - 1/2*denom(1/2*s12)*mh^2*s12*s13*
      s23*s24 - 1/2*denom(1/2*s12)*mh^2*s12*s13*s23^2 - 1/2*denom(1/2*s12)*
      mh^2*s12*s13*s14*s23 - 1/2*denom(1/2*s12)*mh^2*s12*s13^2*s23 - 1/2*
      denom(1/2*s12)*mh^2*s12^2*s13*s23 + 1/4*denom(1/2*s12)*mh^4*s12*s13*s23
       - 1/4*denom(1/2*s12)*mt^2*s14*s23^2*s24 - 1/4*denom(1/2*s12)*mt^2*s14*
      s23^3 - 1/2*denom(1/2*s12)*mt^2*s14^2*s23^2 - 1/2*denom(1/2*s12)*mt^2*
      s13*s23*s24^2 - 3/4*denom(1/2*s12)*mt^2*s13*s23^2*s24 - 1/4*denom(1/2*
      s12)*mt^2*s13*s23^3 - 3/2*denom(1/2*s12)*mt^2*s13*s14*s23*s24 - 3/2*
      denom(1/2*s12)*mt^2*s13*s14*s23^2 - 1/2*denom(1/2*s12)*mt^2*s13*s14^2*
      s23 - 1/2*denom(1/2*s12)*mt^2*s13^2*s24^2 - 3/2*denom(1/2*s12)*mt^2*
      s13^2*s23*s24 - 1/2*denom(1/2*s12)*mt^2*s13^2*s23^2 - 1/4*denom(1/2*s12)
      *mt^2*s13^2*s14*s24 - 3/4*denom(1/2*s12)*mt^2*s13^2*s14*s23 - 1/4*denom(
      1/2*s12)*mt^2*s13^3*s24 - 1/4*denom(1/2*s12)*mt^2*s13^3*s23 - 1/4*denom(
      1/2*s12)*mt^2*s12*s23*s24^2 - 1/2*denom(1/2*s12)*mt^2*s12*s23^2*s24 - 1/
      4*denom(1/2*s12)*mt^2*s12*s23^3 - 3/4*denom(1/2*s12)*mt^2*s12*s14*s23*
      s24 - denom(1/2*s12)*mt^2*s12*s14*s23^2 - 1/2*denom(1/2*s12)*mt^2*s12*
      s14^2*s23 - 1/2*denom(1/2*s12)*mt^2*s12*s13*s24^2 - 13/4*denom(1/2*s12)*
      mt^2*s12*s13*s23*s24 - 5/2*denom(1/2*s12)*mt^2*s12*s13*s23^2 - 3/4*
      denom(1/2*s12)*mt^2*s12*s13*s14*s24 - 13/4*denom(1/2*s12)*mt^2*s12*s13*
      s14*s23 - 1/4*denom(1/2*s12)*mt^2*s12*s13*s14^2 - denom(1/2*s12)*mt^2*
      s12*s13^2*s24 - 5/2*denom(1/2*s12)*mt^2*s12*s13^2*s23 - 1/2*denom(1/2*
      s12)*mt^2*s12*s13^2*s14 - 1/4*denom(1/2*s12)*mt^2*s12*s13^3 - 1/2*denom(
      1/2*s12)*mt^2*s12^2*s23*s24 - 1/2*denom(1/2*s12)*mt^2*s12^2*s23^2 - 3/4*
      denom(1/2*s12)*mt^2*s12^2*s14*s23 - 3/4*denom(1/2*s12)*mt^2*s12^2*s13*
      s24 - 5/2*denom(1/2*s12)*mt^2*s12^2*s13*s23 - 1/2*denom(1/2*s12)*mt^2*
      s12^2*s13*s14 - 1/2*denom(1/2*s12)*mt^2*s12^2*s13^2 - 1/4*denom(1/2*s12)
      *mt^2*s12^3*s23 - 1/4*denom(1/2*s12)*mt^2*s12^3*s13 + 1/4*denom(1/2*s12)
      *mt^2*mh^2*s14*s23^2 + 1/2*denom(1/2*s12)*mt^2*mh^2*s13*s23*s24 + 1/4*
      denom(1/2*s12)*mt^2*mh^2*s13*s23^2 + 1/2*denom(1/2*s12)*mt^2*mh^2*s13*
      s14*s23 + 1/4*denom(1/2*s12)*mt^2*mh^2*s13^2*s24 + 1/4*denom(1/2*s12)*
      mt^2*mh^2*s13^2*s23 + 1/2*denom(1/2*s12)*mt^2*mh^2*s12*s23*s24 + 1/2*
      denom(1/2*s12)*mt^2*mh^2*s12*s23^2 + 3/4*denom(1/2*s12)*mt^2*mh^2*s12*
      s14*s23 + 3/4*denom(1/2*s12)*mt^2*mh^2*s12*s13*s24 + 5/2*denom(1/2*s12)*
      mt^2*mh^2*s12*s13*s23 + 1/2*denom(1/2*s12)*mt^2*mh^2*s12*s13*s14 + 1/2*
      denom(1/2*s12)*mt^2*mh^2*s12*s13^2 + 1/2*denom(1/2*s12)*mt^2*mh^2*s12^2*
      s23 + 1/2*denom(1/2*s12)*mt^2*mh^2*s12^2*s13 - 1/4*denom(1/2*s12)*mt^2*
      mh^4*s12*s23 - 1/4*denom(1/2*s12)*mt^2*mh^4*s12*s13 + 1/4*denom(1/2*s12)
      *mt^4*s23*s24^2 + 1/2*denom(1/2*s12)*mt^4*s23^2*s24 + 1/4*denom(1/2*s12)
      *mt^4*s23^3 + 5/4*denom(1/2*s12)*mt^4*s14*s23*s24 + 7/4*denom(1/2*s12)*
      mt^4*s14*s23^2 + denom(1/2*s12)*mt^4*s14^2*s23 + denom(1/2*s12)*mt^4*s13
      *s24^2 + 13/4*denom(1/2*s12)*mt^4*s13*s23*s24 + 7/4*denom(1/2*s12)*mt^4*
      s13*s23^2 + 5/4*denom(1/2*s12)*mt^4*s13*s14*s24 + 13/4*denom(1/2*s12)*
      mt^4*s13*s14*s23 + 1/4*denom(1/2*s12)*mt^4*s13*s14^2 + 7/4*denom(1/2*s12
      )*mt^4*s13^2*s24 + 7/4*denom(1/2*s12)*mt^4*s13^2*s23 + 1/2*denom(1/2*s12
      )*mt^4*s13^2*s14 + 1/4*denom(1/2*s12)*mt^4*s13^3 + 1/2*denom(1/2*s12)*
      mt^4*s12*s24^2 + 11/4*denom(1/2*s12)*mt^4*s12*s23*s24 + 9/4*denom(1/2*
      s12)*mt^4*s12*s23^2 + denom(1/2*s12)*mt^4*s12*s14*s24 + 4*denom(1/2*s12)
      *mt^4*s12*s14*s23 + 1/2*denom(1/2*s12)*mt^4*s12*s14^2 + 4*denom(1/2*s12)
      *mt^4*s12*s13*s24 + 7*denom(1/2*s12)*mt^4*s12*s13*s23 + 11/4*denom(1/2*
      s12)*mt^4*s12*s13*s14 + 9/4*denom(1/2*s12)*mt^4*s12*s13^2 + 3/4*denom(1/
      2*s12)*mt^4*s12^2*s24 + 9/4*denom(1/2*s12)*mt^4*s12^2*s23 + 3/4*denom(1/
      2*s12)*mt^4*s12^2*s14 + 9/4*denom(1/2*s12)*mt^4*s12^2*s13 + 1/4*denom(1/
      2*s12)*mt^4*s12^3 - 1/4*denom(1/2*s12)*mt^4*mh^2*s23*s24 - 1/4*denom(1/2
      *s12)*mt^4*mh^2*s23^2 - 1/2*denom(1/2*s12)*mt^4*mh^2*s14*s23 - 1/2*
      denom(1/2*s12)*mt^4*mh^2*s13*s24 - denom(1/2*s12)*mt^4*mh^2*s13*s23 - 1/
      4*denom(1/2*s12)*mt^4*mh^2*s13*s14 - 1/4*denom(1/2*s12)*mt^4*mh^2*s13^2
       - 3/4*denom(1/2*s12)*mt^4*mh^2*s12*s24 - 9/4*denom(1/2*s12)*mt^4*mh^2*
      s12*s23 - 3/4*denom(1/2*s12)*mt^4*mh^2*s12*s14 - 9/4*denom(1/2*s12)*mt^4
      *mh^2*s12*s13 - 1/2*denom(1/2*s12)*mt^4*mh^2*s12^2 + 1/4*denom(1/2*s12)*
      mt^4*mh^4*s12 - 1/2*denom(1/2*s12)*mt^6*s24^2 - 2*denom(1/2*s12)*mt^6*
      s23*s24 - 3/2*denom(1/2*s12)*mt^6*s23^2 - denom(1/2*s12)*mt^6*s14*s24 - 
      7/2*denom(1/2*s12)*mt^6*s14*s23 - 1/2*denom(1/2*s12)*mt^6*s14^2 - 7/2*
      denom(1/2*s12)*mt^6*s13*s24 - 4*denom(1/2*s12)*mt^6*s13*s23 - 2*denom(1/
      2*s12)*mt^6*s13*s14 - 3/2*denom(1/2*s12)*mt^6*s13^2 - 13/4*denom(1/2*s12
      )*mt^6*s12*s24 - 23/4*denom(1/2*s12)*mt^6*s12*s23 - 13/4*denom(1/2*s12)*
      mt^6*s12*s14 - 23/4*denom(1/2*s12)*mt^6*s12*s13 - 2*denom(1/2*s12)*mt^6*
      s12^2 + 1/4*denom(1/2*s12)*mt^6*mh^2*s24 + 3/4*denom(1/2*s12)*mt^6*mh^2*
      s23 + 1/4*denom(1/2*s12)*mt^6*mh^2*s14 + 3/4*denom(1/2*s12)*mt^6*mh^2*
      s13 + 2*denom(1/2*s12)*mt^6*mh^2*s12 + 2*denom(1/2*s12)*mt^8*s24 + 3*
      denom(1/2*s12)*mt^8*s23 + 2*denom(1/2*s12)*mt^8*s14 + 3*denom(1/2*s12)*
      mt^8*s13 + 9/2*denom(1/2*s12)*mt^8*s12 - 1/2*denom(1/2*s12)*mt^8*mh^2 - 
      2*denom(1/2*s12)*mt^10 + 1/8*denom(1/4*s12^2)*s13*s14^2*s23^3 + 1/4*
      denom(1/4*s12^2)*s13^2*s14*s23^2*s24 + 1/8*denom(1/4*s12^2)*s13^3*s23*
      s24^2 + 1/8*denom(1/4*s12^2)*s12*s13*s14*s23^2*s24 + 1/8*denom(1/4*s12^2
      )*s12*s13*s14*s23^3 + 1/8*denom(1/4*s12^2)*s12*s13*s14^2*s23^2 + 1/8*
      denom(1/4*s12^2)*s12*s13^2*s23*s24^2 + 1/8*denom(1/4*s12^2)*s12*s13^2*
      s23^2*s24 + 1/8*denom(1/4*s12^2)*s12*s13^2*s14*s23*s24 + 1/8*denom(1/4*
      s12^2)*s12*s13^2*s14*s23^2 + 1/8*denom(1/4*s12^2)*s12*s13^3*s23*s24 + 1/
      8*denom(1/4*s12^2)*s12^2*s13*s14*s23^2 + 1/8*denom(1/4*s12^2)*s12^2*
      s13^2*s23*s24 - 1/8*denom(1/4*s12^2)*mh^2*s12*s13*s14*s23^2 - 1/8*denom(
      1/4*s12^2)*mh^2*s12*s13^2*s23*s24 - 1/8*denom(1/4*s12^2)*mt^2*s14^2*
      s23^3 - 1/2*denom(1/4*s12^2)*mt^2*s13*s14*s23^2*s24 - 1/4*denom(1/4*
      s12^2)*mt^2*s13*s14*s23^3 - 3/8*denom(1/4*s12^2)*mt^2*s13*s14^2*s23^2 - 
      3/8*denom(1/4*s12^2)*mt^2*s13^2*s23*s24^2 - 1/4*denom(1/4*s12^2)*mt^2*
      s13^2*s23^2*s24 - 1/2*denom(1/4*s12^2)*mt^2*s13^2*s14*s23*s24 - 1/4*
      denom(1/4*s12^2)*mt^2*s13^2*s14*s23^2 - 1/8*denom(1/4*s12^2)*mt^2*s13^3*
      s24^2 - 1/4*denom(1/4*s12^2)*mt^2*s13^3*s23*s24 - 1/8*denom(1/4*s12^2)*
      mt^2*s12*s14*s23^2*s24 - 1/8*denom(1/4*s12^2)*mt^2*s12*s14*s23^3 - 1/8*
      denom(1/4*s12^2)*mt^2*s12*s14^2*s23^2 - 1/4*denom(1/4*s12^2)*mt^2*s12*
      s13*s23*s24^2 - 3/8*denom(1/4*s12^2)*mt^2*s12*s13*s23^2*s24 - 1/8*denom(
      1/4*s12^2)*mt^2*s12*s13*s23^3 - 1/2*denom(1/4*s12^2)*mt^2*s12*s13*s14*
      s23*s24 - denom(1/4*s12^2)*mt^2*s12*s13*s14*s23^2 - 1/4*denom(1/4*s12^2)
      *mt^2*s12*s13*s14^2*s23 - 1/8*denom(1/4*s12^2)*mt^2*s12*s13^2*s24^2 - 
      denom(1/4*s12^2)*mt^2*s12*s13^2*s23*s24 - 1/4*denom(1/4*s12^2)*mt^2*s12*
      s13^2*s23^2 - 1/8*denom(1/4*s12^2)*mt^2*s12*s13^2*s14*s24 - 3/8*denom(1/
      4*s12^2)*mt^2*s12*s13^2*s14*s23 - 1/8*denom(1/4*s12^2)*mt^2*s12*s13^3*
      s24 - 1/8*denom(1/4*s12^2)*mt^2*s12*s13^3*s23 - 1/8*denom(1/4*s12^2)*
      mt^2*s12^2*s14*s23^2 - 1/4*denom(1/4*s12^2)*mt^2*s12^2*s13*s23*s24 - 1/8
      *denom(1/4*s12^2)*mt^2*s12^2*s13*s23^2 - 1/4*denom(1/4*s12^2)*mt^2*s12^2
      *s13*s14*s23 - 1/8*denom(1/4*s12^2)*mt^2*s12^2*s13^2*s24 - 1/8*denom(1/4
      *s12^2)*mt^2*s12^2*s13^2*s23 + 1/8*denom(1/4*s12^2)*mt^2*mh^2*s12*s14*
      s23^2 + 1/4*denom(1/4*s12^2)*mt^2*mh^2*s12*s13*s23*s24 + 1/8*denom(1/4*
      s12^2)*mt^2*mh^2*s12*s13*s23^2 + 1/4*denom(1/4*s12^2)*mt^2*mh^2*s12*s13*
      s14*s23 + 1/8*denom(1/4*s12^2)*mt^2*mh^2*s12*s13^2*s24 + 1/8*denom(1/4*
      s12^2)*mt^2*mh^2*s12*s13^2*s23 + 1/4*denom(1/4*s12^2)*mt^4*s14*s23^2*s24
       + 1/4*denom(1/4*s12^2)*mt^4*s14*s23^3 + 3/8*denom(1/4*s12^2)*mt^4*s14^2
      *s23^2 + 3/8*denom(1/4*s12^2)*mt^4*s13*s23*s24^2 + 1/2*denom(1/4*s12^2)*
      mt^4*s13*s23^2*s24 + 1/8*denom(1/4*s12^2)*mt^4*s13*s23^3 + denom(1/4*
      s12^2)*mt^4*s13*s14*s23*s24 + 5/4*denom(1/4*s12^2)*mt^4*s13*s14*s23^2 + 
      3/8*denom(1/4*s12^2)*mt^4*s13*s14^2*s23 + 3/8*denom(1/4*s12^2)*mt^4*
      s13^2*s24^2 + 5/4*denom(1/4*s12^2)*mt^4*s13^2*s23*s24 + 1/4*denom(1/4*
      s12^2)*mt^4*s13^2*s23^2 + 1/4*denom(1/4*s12^2)*mt^4*s13^2*s14*s24 + 1/2*
      denom(1/4*s12^2)*mt^4*s13^2*s14*s23 + 1/4*denom(1/4*s12^2)*mt^4*s13^3*
      s24 + 1/8*denom(1/4*s12^2)*mt^4*s13^3*s23 + 1/8*denom(1/4*s12^2)*mt^4*
      s12*s23*s24^2 + 1/4*denom(1/4*s12^2)*mt^4*s12*s23^2*s24 + 1/8*denom(1/4*
      s12^2)*mt^4*s12*s23^3 + 3/8*denom(1/4*s12^2)*mt^4*s12*s14*s23*s24 + 7/8*
      denom(1/4*s12^2)*mt^4*s12*s14*s23^2 + 1/4*denom(1/4*s12^2)*mt^4*s12*
      s14^2*s23 + 1/4*denom(1/4*s12^2)*mt^4*s12*s13*s24^2 + 15/8*denom(1/4*
      s12^2)*mt^4*s12*s13*s23*s24 + 9/8*denom(1/4*s12^2)*mt^4*s12*s13*s23^2 + 
      3/8*denom(1/4*s12^2)*mt^4*s12*s13*s14*s24 + 15/8*denom(1/4*s12^2)*mt^4*
      s12*s13*s14*s23 + 1/8*denom(1/4*s12^2)*mt^4*s12*s13*s14^2 + 7/8*denom(1/
      4*s12^2)*mt^4*s12*s13^2*s24 + 9/8*denom(1/4*s12^2)*mt^4*s12*s13^2*s23 + 
      1/4*denom(1/4*s12^2)*mt^4*s12*s13^2*s14 + 1/8*denom(1/4*s12^2)*mt^4*s12*
      s13^3 + 1/8*denom(1/4*s12^2)*mt^4*s12^2*s23*s24 + 1/8*denom(1/4*s12^2)*
      mt^4*s12^2*s23^2 + 1/4*denom(1/4*s12^2)*mt^4*s12^2*s14*s23 + 1/4*denom(1/
      4*s12^2)*mt^4*s12^2*s13*s24 + 1/2*denom(1/4*s12^2)*mt^4*s12^2*s13*s23 + 
      1/8*denom(1/4*s12^2)*mt^4*s12^2*s13*s14 + 1/8*denom(1/4*s12^2)*mt^4*
      s12^2*s13^2 - 1/8*denom(1/4*s12^2)*mt^4*mh^2*s12*s23*s24 - 1/8*denom(1/4
      *s12^2)*mt^4*mh^2*s12*s23^2 - 1/4*denom(1/4*s12^2)*mt^4*mh^2*s12*s14*s23
       - 1/4*denom(1/4*s12^2)*mt^4*mh^2*s12*s13*s24 - 1/2*denom(1/4*s12^2)*
      mt^4*mh^2*s12*s13*s23 - 1/8*denom(1/4*s12^2)*mt^4*mh^2*s12*s13*s14 - 1/8
      *denom(1/4*s12^2)*mt^4*mh^2*s12*s13^2 - 1/8*denom(1/4*s12^2)*mt^6*s23*
      s24^2 - 1/4*denom(1/4*s12^2)*mt^6*s23^2*s24 - 1/8*denom(1/4*s12^2)*mt^6*
      s23^3 - 1/2*denom(1/4*s12^2)*mt^6*s14*s23*s24 - denom(1/4*s12^2)*mt^6*
      s14*s23^2 - 3/8*denom(1/4*s12^2)*mt^6*s14^2*s23 - 3/8*denom(1/4*s12^2)*
      mt^6*s13*s24^2 - 7/4*denom(1/4*s12^2)*mt^6*s13*s23*s24 - 7/8*denom(1/4*
      s12^2)*mt^6*s13*s23^2 - 1/2*denom(1/4*s12^2)*mt^6*s13*s14*s24 - 7/4*
      denom(1/4*s12^2)*mt^6*s13*s14*s23 - 1/8*denom(1/4*s12^2)*mt^6*s13*s14^2
       - denom(1/4*s12^2)*mt^6*s13^2*s24 - 7/8*denom(1/4*s12^2)*mt^6*s13^2*s23
       - 1/4*denom(1/4*s12^2)*mt^6*s13^2*s14 - 1/8*denom(1/4*s12^2)*mt^6*s13^3
       - 1/8*denom(1/4*s12^2)*mt^6*s12*s24^2 - denom(1/4*s12^2)*mt^6*s12*s23*
      s24 - 7/8*denom(1/4*s12^2)*mt^6*s12*s23^2 - 1/4*denom(1/4*s12^2)*mt^6*
      s12*s14*s24 - 3/2*denom(1/4*s12^2)*mt^6*s12*s14*s23 - 1/8*denom(1/4*
      s12^2)*mt^6*s12*s14^2 - 3/2*denom(1/4*s12^2)*mt^6*s12*s13*s24 - 11/4*
      denom(1/4*s12^2)*mt^6*s12*s13*s23 - denom(1/4*s12^2)*mt^6*s12*s13*s14 - 
      7/8*denom(1/4*s12^2)*mt^6*s12*s13^2 - 1/8*denom(1/4*s12^2)*mt^6*s12^2*
      s24 - 3/8*denom(1/4*s12^2)*mt^6*s12^2*s23 - 1/8*denom(1/4*s12^2)*mt^6*
      s12^2*s14 - 3/8*denom(1/4*s12^2)*mt^6*s12^2*s13 + 1/8*denom(1/4*s12^2)*
      mt^6*mh^2*s12*s24 + 3/8*denom(1/4*s12^2)*mt^6*mh^2*s12*s23 + 1/8*denom(1/
      4*s12^2)*mt^6*mh^2*s12*s14 + 3/8*denom(1/4*s12^2)*mt^6*mh^2*s12*s13 + 1/
      8*denom(1/4*s12^2)*mt^8*s24^2 + 3/4*denom(1/4*s12^2)*mt^8*s23*s24 + 5/8*
      denom(1/4*s12^2)*mt^8*s23^2 + 1/4*denom(1/4*s12^2)*mt^8*s14*s24 + 5/4*
      denom(1/4*s12^2)*mt^8*s14*s23 + 1/8*denom(1/4*s12^2)*mt^8*s14^2 + 5/4*
      denom(1/4*s12^2)*mt^8*s13*s24 + 7/4*denom(1/4*s12^2)*mt^8*s13*s23 + 3/4*
      denom(1/4*s12^2)*mt^8*s13*s14 + 5/8*denom(1/4*s12^2)*mt^8*s13^2 + 3/4*
      denom(1/4*s12^2)*mt^8*s12*s24 + 7/4*denom(1/4*s12^2)*mt^8*s12*s23 + 3/4*
      denom(1/4*s12^2)*mt^8*s12*s14 + 7/4*denom(1/4*s12^2)*mt^8*s12*s13 + 1/4*
      denom(1/4*s12^2)*mt^8*s12^2 - 1/4*denom(1/4*s12^2)*mt^8*mh^2*s12 - 1/2*
      denom(1/4*s12^2)*mt^10*s24 - denom(1/4*s12^2)*mt^10*s23 - 1/2*denom(1/4*
      s12^2)*mt^10*s14 - denom(1/4*s12^2)*mt^10*s13 - denom(1/4*s12^2)*mt^10*
      s12 + 1/2*denom(1/4*s12^2)*mt^12;
 
 .sort
id KMatrix(6,10) =  mt^4*s14*s23 + mt^4*s13*s24 + mt^4*s12*s24 + mt^4*s12*s23
       + mt^4*s12*s14 + mt^4*s12*s13 + mt^4*s12^2 - mt^4*mh^2*s12 - mt^6*s24
       - mt^6*s23 - mt^6*s14 - mt^6*s13 - 4*mt^6*s12 + 2*mt^8 - 1/2*denom(1/2*
      s12)*mt^2*s14^2*s23*s24 - 1/2*denom(1/2*s12)*mt^2*s13*s14*s24^2 - 1/2*
      denom(1/2*s12)*mt^2*s13*s14*s23^2 - 1/2*denom(1/2*s12)*mt^2*s13^2*s23*
      s24 - 1/2*denom(1/2*s12)*mt^2*s12*s14*s24^2 - 1/2*denom(1/2*s12)*mt^2*
      s12*s14*s23*s24 - 1/2*denom(1/2*s12)*mt^2*s12*s14^2*s24 - 1/2*denom(1/2*
      s12)*mt^2*s12*s13*s23*s24 - 1/2*denom(1/2*s12)*mt^2*s12*s13*s23^2 - 1/2*
      denom(1/2*s12)*mt^2*s12*s13*s14*s24 - 1/2*denom(1/2*s12)*mt^2*s12*s13*
      s14*s23 - 1/2*denom(1/2*s12)*mt^2*s12*s13^2*s23 - 1/2*denom(1/2*s12)*
      mt^2*s12^2*s14*s24 - 1/2*denom(1/2*s12)*mt^2*s12^2*s13*s23 + 1/2*denom(1/
      2*s12)*mt^2*mh^2*s12*s14*s24 + 1/2*denom(1/2*s12)*mt^2*mh^2*s12*s13*s23
       + 1/2*denom(1/2*s12)*mt^4*s14*s24^2 + denom(1/2*s12)*mt^4*s14*s23*s24
       + 1/2*denom(1/2*s12)*mt^4*s14*s23^2 + 1/2*denom(1/2*s12)*mt^4*s14^2*s24
       + 1/2*denom(1/2*s12)*mt^4*s14^2*s23 + 1/2*denom(1/2*s12)*mt^4*s13*s24^2
       + denom(1/2*s12)*mt^4*s13*s23*s24 + 1/2*denom(1/2*s12)*mt^4*s13*s23^2
       + denom(1/2*s12)*mt^4*s13*s14*s24 + denom(1/2*s12)*mt^4*s13*s14*s23 + 1/
      2*denom(1/2*s12)*mt^4*s13^2*s24 + 1/2*denom(1/2*s12)*mt^4*s13^2*s23 + 1/
      2*denom(1/2*s12)*mt^4*s12*s24^2 + denom(1/2*s12)*mt^4*s12*s23*s24 + 1/2*
      denom(1/2*s12)*mt^4*s12*s23^2 + 3*denom(1/2*s12)*mt^4*s12*s14*s24 + 
      denom(1/2*s12)*mt^4*s12*s14*s23 + 1/2*denom(1/2*s12)*mt^4*s12*s14^2 + 
      denom(1/2*s12)*mt^4*s12*s13*s24 + 3*denom(1/2*s12)*mt^4*s12*s13*s23 + 
      denom(1/2*s12)*mt^4*s12*s13*s14 + 1/2*denom(1/2*s12)*mt^4*s12*s13^2 + 1/
      2*denom(1/2*s12)*mt^4*s12^2*s24 + 1/2*denom(1/2*s12)*mt^4*s12^2*s23 + 1/
      2*denom(1/2*s12)*mt^4*s12^2*s14 + 1/2*denom(1/2*s12)*mt^4*s12^2*s13 - 1/
      2*denom(1/2*s12)*mt^4*mh^2*s12*s24 - 1/2*denom(1/2*s12)*mt^4*mh^2*s12*
      s23 - 1/2*denom(1/2*s12)*mt^4*mh^2*s12*s14 - 1/2*denom(1/2*s12)*mt^4*
      mh^2*s12*s13 - 1/2*denom(1/2*s12)*mt^6*s24^2 - denom(1/2*s12)*mt^6*s23*
      s24 - 1/2*denom(1/2*s12)*mt^6*s23^2 - 2*denom(1/2*s12)*mt^6*s14*s24 - 2*
      denom(1/2*s12)*mt^6*s14*s23 - 1/2*denom(1/2*s12)*mt^6*s14^2 - 2*denom(1/
      2*s12)*mt^6*s13*s24 - 2*denom(1/2*s12)*mt^6*s13*s23 - denom(1/2*s12)*
      mt^6*s13*s14 - 1/2*denom(1/2*s12)*mt^6*s13^2 - 3*denom(1/2*s12)*mt^6*s12
      *s24 - 3*denom(1/2*s12)*mt^6*s12*s23 - 3*denom(1/2*s12)*mt^6*s12*s14 - 3
      *denom(1/2*s12)*mt^6*s12*s13 - denom(1/2*s12)*mt^6*s12^2 + denom(1/2*s12
      )*mt^6*mh^2*s12 + 2*denom(1/2*s12)*mt^8*s24 + 2*denom(1/2*s12)*mt^8*s23
       + 2*denom(1/2*s12)*mt^8*s14 + 2*denom(1/2*s12)*mt^8*s13 + 4*denom(1/2*
      s12)*mt^8*s12 - 2*denom(1/2*s12)*mt^10 + 1/4*denom(1/4*s12^2)*s13*s14^2*
      s23^2*s24 + 1/4*denom(1/4*s12^2)*s13^2*s14*s23*s24^2 + 1/4*denom(1/4*
      s12^2)*s12*s13*s14*s23*s24^2 + 1/4*denom(1/4*s12^2)*s12*s13*s14*s23^2*
      s24 + 1/4*denom(1/4*s12^2)*s12*s13*s14^2*s23*s24 + 1/4*denom(1/4*s12^2)*
      s12*s13^2*s14*s23*s24 + 1/4*denom(1/4*s12^2)*s12^2*s13*s14*s23*s24 - 1/4
      *denom(1/4*s12^2)*mh^2*s12*s13*s14*s23*s24 - 1/4*denom(1/4*s12^2)*mt^2*
      s14^2*s23^2*s24 - 1/2*denom(1/4*s12^2)*mt^2*s13*s14*s23*s24^2 - 1/2*
      denom(1/4*s12^2)*mt^2*s13*s14*s23^2*s24 - 1/2*denom(1/4*s12^2)*mt^2*s13*
      s14^2*s23*s24 - 1/4*denom(1/4*s12^2)*mt^2*s13*s14^2*s23^2 - 1/4*denom(1/
      4*s12^2)*mt^2*s13^2*s23*s24^2 - 1/4*denom(1/4*s12^2)*mt^2*s13^2*s14*
      s24^2 - 1/2*denom(1/4*s12^2)*mt^2*s13^2*s14*s23*s24 - 1/4*denom(1/4*
      s12^2)*mt^2*s12*s14*s23*s24^2 - 1/4*denom(1/4*s12^2)*mt^2*s12*s14*s23^2*
      s24 - 1/4*denom(1/4*s12^2)*mt^2*s12*s14^2*s23*s24 - 1/4*denom(1/4*s12^2)
      *mt^2*s12*s13*s23*s24^2 - 1/4*denom(1/4*s12^2)*mt^2*s12*s13*s23^2*s24 - 
      1/4*denom(1/4*s12^2)*mt^2*s12*s13*s14*s24^2 - 2*denom(1/4*s12^2)*mt^2*
      s12*s13*s14*s23*s24 - 1/4*denom(1/4*s12^2)*mt^2*s12*s13*s14*s23^2 - 1/4*
      denom(1/4*s12^2)*mt^2*s12*s13*s14^2*s24 - 1/4*denom(1/4*s12^2)*mt^2*s12*
      s13*s14^2*s23 - 1/4*denom(1/4*s12^2)*mt^2*s12*s13^2*s23*s24 - 1/4*denom(
      1/4*s12^2)*mt^2*s12*s13^2*s14*s24 - 1/4*denom(1/4*s12^2)*mt^2*s12*s13^2*
      s14*s23 - 1/4*denom(1/4*s12^2)*mt^2*s12^2*s14*s23*s24 - 1/4*denom(1/4*
      s12^2)*mt^2*s12^2*s13*s23*s24 - 1/4*denom(1/4*s12^2)*mt^2*s12^2*s13*s14*
      s24 - 1/4*denom(1/4*s12^2)*mt^2*s12^2*s13*s14*s23 + 1/4*denom(1/4*s12^2)
      *mt^2*mh^2*s12*s14*s23*s24 + 1/4*denom(1/4*s12^2)*mt^2*mh^2*s12*s13*s23*
      s24 + 1/4*denom(1/4*s12^2)*mt^2*mh^2*s12*s13*s14*s24 + 1/4*denom(1/4*
      s12^2)*mt^2*mh^2*s12*s13*s14*s23 + 1/4*denom(1/4*s12^2)*mt^4*s14*s23*
      s24^2 + 1/2*denom(1/4*s12^2)*mt^4*s14*s23^2*s24 + 1/2*denom(1/4*s12^2)*
      mt^4*s14^2*s23*s24 + 1/4*denom(1/4*s12^2)*mt^4*s14^2*s23^2 + 1/2*denom(1/
      4*s12^2)*mt^4*s13*s23*s24^2 + 1/4*denom(1/4*s12^2)*mt^4*s13*s23^2*s24 + 
      1/2*denom(1/4*s12^2)*mt^4*s13*s14*s24^2 + 2*denom(1/4*s12^2)*mt^4*s13*
      s14*s23*s24 + 1/2*denom(1/4*s12^2)*mt^4*s13*s14*s23^2 + 1/4*denom(1/4*
      s12^2)*mt^4*s13*s14^2*s24 + 1/2*denom(1/4*s12^2)*mt^4*s13*s14^2*s23 + 1/
      4*denom(1/4*s12^2)*mt^4*s13^2*s24^2 + 1/2*denom(1/4*s12^2)*mt^4*s13^2*
      s23*s24 + 1/2*denom(1/4*s12^2)*mt^4*s13^2*s14*s24 + 1/4*denom(1/4*s12^2)
      *mt^4*s13^2*s14*s23 + 1/4*denom(1/4*s12^2)*mt^4*s12*s23*s24^2 + 1/4*
      denom(1/4*s12^2)*mt^4*s12*s23^2*s24 + 1/4*denom(1/4*s12^2)*mt^4*s12*s14*
      s24^2 + 7/4*denom(1/4*s12^2)*mt^4*s12*s14*s23*s24 + 1/4*denom(1/4*s12^2)
      *mt^4*s12*s14*s23^2 + 1/4*denom(1/4*s12^2)*mt^4*s12*s14^2*s24 + 1/4*
      denom(1/4*s12^2)*mt^4*s12*s14^2*s23 + 1/4*denom(1/4*s12^2)*mt^4*s12*s13*
      s24^2 + 7/4*denom(1/4*s12^2)*mt^4*s12*s13*s23*s24 + 1/4*denom(1/4*s12^2)
      *mt^4*s12*s13*s23^2 + 7/4*denom(1/4*s12^2)*mt^4*s12*s13*s14*s24 + 7/4*
      denom(1/4*s12^2)*mt^4*s12*s13*s14*s23 + 1/4*denom(1/4*s12^2)*mt^4*s12*
      s13*s14^2 + 1/4*denom(1/4*s12^2)*mt^4*s12*s13^2*s24 + 1/4*denom(1/4*
      s12^2)*mt^4*s12*s13^2*s23 + 1/4*denom(1/4*s12^2)*mt^4*s12*s13^2*s14 + 1/
      4*denom(1/4*s12^2)*mt^4*s12^2*s23*s24 + 1/4*denom(1/4*s12^2)*mt^4*s12^2*
      s14*s24 + 1/4*denom(1/4*s12^2)*mt^4*s12^2*s14*s23 + 1/4*denom(1/4*s12^2)
      *mt^4*s12^2*s13*s24 + 1/4*denom(1/4*s12^2)*mt^4*s12^2*s13*s23 + 1/4*
      denom(1/4*s12^2)*mt^4*s12^2*s13*s14 - 1/4*denom(1/4*s12^2)*mt^4*mh^2*s12
      *s23*s24 - 1/4*denom(1/4*s12^2)*mt^4*mh^2*s12*s14*s24 - 1/4*denom(1/4*
      s12^2)*mt^4*mh^2*s12*s14*s23 - 1/4*denom(1/4*s12^2)*mt^4*mh^2*s12*s13*
      s24 - 1/4*denom(1/4*s12^2)*mt^4*mh^2*s12*s13*s23 - 1/4*denom(1/4*s12^2)*
      mt^4*mh^2*s12*s13*s14 - 1/4*denom(1/4*s12^2)*mt^6*s23*s24^2 - 1/4*denom(
      1/4*s12^2)*mt^6*s23^2*s24 - 1/4*denom(1/4*s12^2)*mt^6*s14*s24^2 - 3/2*
      denom(1/4*s12^2)*mt^6*s14*s23*s24 - 1/2*denom(1/4*s12^2)*mt^6*s14*s23^2
       - 1/4*denom(1/4*s12^2)*mt^6*s14^2*s24 - 1/2*denom(1/4*s12^2)*mt^6*s14^2
      *s23 - 1/2*denom(1/4*s12^2)*mt^6*s13*s24^2 - 3/2*denom(1/4*s12^2)*mt^6*
      s13*s23*s24 - 1/4*denom(1/4*s12^2)*mt^6*s13*s23^2 - 3/2*denom(1/4*s12^2)
      *mt^6*s13*s14*s24 - 3/2*denom(1/4*s12^2)*mt^6*s13*s14*s23 - 1/4*denom(1/
      4*s12^2)*mt^6*s13*s14^2 - 1/2*denom(1/4*s12^2)*mt^6*s13^2*s24 - 1/4*
      denom(1/4*s12^2)*mt^6*s13^2*s23 - 1/4*denom(1/4*s12^2)*mt^6*s13^2*s14 - 
      1/4*denom(1/4*s12^2)*mt^6*s12*s24^2 - 3/2*denom(1/4*s12^2)*mt^6*s12*s23*
      s24 - 1/4*denom(1/4*s12^2)*mt^6*s12*s23^2 - 3/2*denom(1/4*s12^2)*mt^6*
      s12*s14*s24 - 3/2*denom(1/4*s12^2)*mt^6*s12*s14*s23 - 1/4*denom(1/4*
      s12^2)*mt^6*s12*s14^2 - 3/2*denom(1/4*s12^2)*mt^6*s12*s13*s24 - 3/2*
      denom(1/4*s12^2)*mt^6*s12*s13*s23 - 3/2*denom(1/4*s12^2)*mt^6*s12*s13*
      s14 - 1/4*denom(1/4*s12^2)*mt^6*s12*s13^2 - 1/4*denom(1/4*s12^2)*mt^6*
      s12^2*s24 - 1/4*denom(1/4*s12^2)*mt^6*s12^2*s23 - 1/4*denom(1/4*s12^2)*
      mt^6*s12^2*s14 - 1/4*denom(1/4*s12^2)*mt^6*s12^2*s13 + 1/4*denom(1/4*
      s12^2)*mt^6*mh^2*s12*s24 + 1/4*denom(1/4*s12^2)*mt^6*mh^2*s12*s23 + 1/4*
      denom(1/4*s12^2)*mt^6*mh^2*s12*s14 + 1/4*denom(1/4*s12^2)*mt^6*mh^2*s12*
      s13 + 1/4*denom(1/4*s12^2)*mt^8*s24^2 + denom(1/4*s12^2)*mt^8*s23*s24 + 
      1/4*denom(1/4*s12^2)*mt^8*s23^2 + denom(1/4*s12^2)*mt^8*s14*s24 + 5/4*
      denom(1/4*s12^2)*mt^8*s14*s23 + 1/4*denom(1/4*s12^2)*mt^8*s14^2 + 5/4*
      denom(1/4*s12^2)*mt^8*s13*s24 + denom(1/4*s12^2)*mt^8*s13*s23 + denom(1/
      4*s12^2)*mt^8*s13*s14 + 1/4*denom(1/4*s12^2)*mt^8*s13^2 + 5/4*denom(1/4*
      s12^2)*mt^8*s12*s24 + 5/4*denom(1/4*s12^2)*mt^8*s12*s23 + 5/4*denom(1/4*
      s12^2)*mt^8*s12*s14 + 5/4*denom(1/4*s12^2)*mt^8*s12*s13 + 1/4*denom(1/4*
      s12^2)*mt^8*s12^2 - 1/4*denom(1/4*s12^2)*mt^8*mh^2*s12 - 3/4*denom(1/4*
      s12^2)*mt^10*s24 - 3/4*denom(1/4*s12^2)*mt^10*s23 - 3/4*denom(1/4*s12^2)
      *mt^10*s14 - 3/4*denom(1/4*s12^2)*mt^10*s13 - denom(1/4*s12^2)*mt^10*s12
       + 1/2*denom(1/4*s12^2)*mt^12;
 
 .sort
id KMatrix(6,11) =  1/4*s14*s23*s24^2 + 1/2*s14*s23^2*s24 + 1/4*s14*s23^3 + 1/
      2*s14^2*s23*s24 + 1/2*s14^2*s23^2 + 1/4*s14^3*s23 + 1/4*s13*s24^3 + 1/2*
      s13*s23*s24^2 + 1/4*s13*s23^2*s24 + 1/2*s13*s14*s24^2 + s13*s14*s23*s24
       + 1/2*s13*s14*s23^2 + 1/4*s13*s14^2*s24 + 1/2*s13*s14^2*s23 + 1/2*s13^2
      *s24^2 + 1/2*s13^2*s23*s24 + 1/2*s13^2*s14*s24 + 1/4*s13^2*s14*s23 + 1/4
      *s13^3*s24 + 1/4*s12*s24^3 + 3/4*s12*s23*s24^2 + 3/4*s12*s23^2*s24 + 1/4
      *s12*s23^3 + 3/4*s12*s14*s24^2 + 2*s12*s14*s23*s24 + 5/4*s12*s14*s23^2
       + 3/4*s12*s14^2*s24 + 5/4*s12*s14^2*s23 + 1/4*s12*s14^3 + 5/4*s12*s13*
      s24^2 + 2*s12*s13*s23*s24 + 3/4*s12*s13*s23^2 + 2*s12*s13*s14*s24 + 2*
      s12*s13*s14*s23 + 3/4*s12*s13*s14^2 + 5/4*s12*s13^2*s24 + 3/4*s12*s13^2*
      s23 + 3/4*s12*s13^2*s14 + 1/4*s12*s13^3 + 3/4*s12^2*s24^2 + 3/2*s12^2*
      s23*s24 + 3/4*s12^2*s23^2 + 3/2*s12^2*s14*s24 + 7/4*s12^2*s14*s23 + 3/4*
      s12^2*s14^2 + 7/4*s12^2*s13*s24 + 3/2*s12^2*s13*s23 + 3/2*s12^2*s13*s14
       + 3/4*s12^2*s13^2 + 3/4*s12^3*s24 + 3/4*s12^3*s23 + 3/4*s12^3*s14 + 3/4
      *s12^3*s13 + 1/4*s12^4 - 1/2*mh^2*s14*s23*s24 - 1/2*mh^2*s14*s23^2 - 1/2
      *mh^2*s14^2*s23 - 1/2*mh^2*s13*s24^2 - 1/2*mh^2*s13*s23*s24 - 1/2*mh^2*
      s13*s14*s24 - 1/2*mh^2*s13*s14*s23 - 1/2*mh^2*s13^2*s24 - 3/4*mh^2*s12*
      s24^2 - 3/2*mh^2*s12*s23*s24 - 3/4*mh^2*s12*s23^2 - 3/2*mh^2*s12*s14*s24
       - 2*mh^2*s12*s14*s23 - 3/4*mh^2*s12*s14^2 - 2*mh^2*s12*s13*s24 - 3/2*
      mh^2*s12*s13*s23 - 3/2*mh^2*s12*s13*s14 - 3/4*mh^2*s12*s13^2 - 3/2*mh^2*
      s12^2*s24 - 3/2*mh^2*s12^2*s23 - 3/2*mh^2*s12^2*s14 - 3/2*mh^2*s12^2*s13
       - 3/4*mh^2*s12^3 + 1/4*mh^4*s14*s23 + 1/4*mh^4*s13*s24 + 3/4*mh^4*s12*
      s24 + 3/4*mh^4*s12*s23 + 3/4*mh^4*s12*s14 + 3/4*mh^4*s12*s13 + 3/4*mh^4*
      s12^2 - 1/4*mh^6*s12 - 1/4*mt^2*s24^3 - 3/4*mt^2*s23*s24^2 - 3/4*mt^2*
      s23^2*s24 - 1/4*mt^2*s23^3 - 3/4*mt^2*s14*s24^2 - 5/2*mt^2*s14*s23*s24
       - 7/4*mt^2*s14*s23^2 - 3/4*mt^2*s14^2*s24 - 7/4*mt^2*s14^2*s23 - 1/4*
      mt^2*s14^3 - 7/4*mt^2*s13*s24^2 - 5/2*mt^2*s13*s23*s24 - 3/4*mt^2*s13*
      s23^2 - 5/2*mt^2*s13*s14*s24 - 5/2*mt^2*s13*s14*s23 - 3/4*mt^2*s13*s14^2
       - 7/4*mt^2*s13^2*s24 - 3/4*mt^2*s13^2*s23 - 3/4*mt^2*s13^2*s14 - 1/4*
      mt^2*s13^3 - 5/2*mt^2*s12*s24^2 - 5*mt^2*s12*s23*s24 - 5/2*mt^2*s12*
      s23^2 - 5*mt^2*s12*s14*s24 - 6*mt^2*s12*s14*s23 - 5/2*mt^2*s12*s14^2 - 6
      *mt^2*s12*s13*s24 - 5*mt^2*s12*s13*s23 - 5*mt^2*s12*s13*s14 - 5/2*mt^2*
      s12*s13^2 - 17/4*mt^2*s12^2*s24 - 17/4*mt^2*s12^2*s23 - 17/4*mt^2*s12^2*
      s14 - 17/4*mt^2*s12^2*s13 - 2*mt^2*s12^3 + 1/2*mt^2*mh^2*s24^2 + mt^2*
      mh^2*s23*s24 + 1/2*mt^2*mh^2*s23^2 + mt^2*mh^2*s14*s24 + 2*mt^2*mh^2*s14
      *s23 + 1/2*mt^2*mh^2*s14^2 + 2*mt^2*mh^2*s13*s24 + mt^2*mh^2*s13*s23 + 
      mt^2*mh^2*s13*s14 + 1/2*mt^2*mh^2*s13^2 + 9/2*mt^2*mh^2*s12*s24 + 9/2*
      mt^2*mh^2*s12*s23 + 9/2*mt^2*mh^2*s12*s14 + 9/2*mt^2*mh^2*s12*s13 + 4*
      mt^2*mh^2*s12^2 - 1/4*mt^2*mh^4*s24 - 1/4*mt^2*mh^4*s23 - 1/4*mt^2*mh^4*
      s14 - 1/4*mt^2*mh^4*s13 - 2*mt^2*mh^4*s12 + 3/2*mt^4*s24^2 + 3*mt^4*s23*
      s24 + 3/2*mt^4*s23^2 + 3*mt^4*s14*s24 + 4*mt^4*s14*s23 + 3/2*mt^4*s14^2
       + 4*mt^4*s13*s24 + 3*mt^4*s13*s23 + 3*mt^4*s13*s14 + 3/2*mt^4*s13^2 + 7
      *mt^4*s12*s24 + 7*mt^4*s12*s23 + 7*mt^4*s12*s14 + 7*mt^4*s12*s13 + 11/2*
      mt^4*s12^2 - 2*mt^4*mh^2*s24 - 2*mt^4*mh^2*s23 - 2*mt^4*mh^2*s14 - 2*
      mt^4*mh^2*s13 - 6*mt^4*mh^2*s12 + 1/2*mt^4*mh^4 - 3*mt^6*s24 - 3*mt^6*
      s23 - 3*mt^6*s14 - 3*mt^6*s13 - 6*mt^6*s12 + 2*mt^6*mh^2 + 2*mt^8 + 1/4*
      denom(1/2*s12)*s14^2*s23^2*s24 + 1/4*denom(1/2*s12)*s14^2*s23^3 + 1/4*
      denom(1/2*s12)*s14^3*s23^2 + 1/2*denom(1/2*s12)*s13*s14*s23*s24^2 + 1/2*
      denom(1/2*s12)*s13*s14*s23^2*s24 + 1/2*denom(1/2*s12)*s13*s14^2*s23*s24
       + 1/4*denom(1/2*s12)*s13*s14^2*s23^2 + 1/4*denom(1/2*s12)*s13^2*s24^3
       + 1/4*denom(1/2*s12)*s13^2*s23*s24^2 + 1/4*denom(1/2*s12)*s13^2*s14*
      s24^2 + 1/2*denom(1/2*s12)*s13^2*s14*s23*s24 + 1/4*denom(1/2*s12)*s13^3*
      s24^2 + 1/4*denom(1/2*s12)*s12*s14*s23*s24^2 + 1/2*denom(1/2*s12)*s12*
      s14*s23^2*s24 + 1/4*denom(1/2*s12)*s12*s14*s23^3 + 1/2*denom(1/2*s12)*
      s12*s14^2*s23*s24 + 3/4*denom(1/2*s12)*s12*s14^2*s23^2 + 1/4*denom(1/2*
      s12)*s12*s14^3*s23 + 1/4*denom(1/2*s12)*s12*s13*s24^3 + 1/2*denom(1/2*
      s12)*s12*s13*s23*s24^2 + 1/4*denom(1/2*s12)*s12*s13*s23^2*s24 + 1/2*
      denom(1/2*s12)*s12*s13*s14*s24^2 + 3/2*denom(1/2*s12)*s12*s13*s14*s23*
      s24 + 1/2*denom(1/2*s12)*s12*s13*s14*s23^2 + 1/4*denom(1/2*s12)*s12*s13*
      s14^2*s24 + 1/2*denom(1/2*s12)*s12*s13*s14^2*s23 + 3/4*denom(1/2*s12)*
      s12*s13^2*s24^2 + 1/2*denom(1/2*s12)*s12*s13^2*s23*s24 + 1/2*denom(1/2*
      s12)*s12*s13^2*s14*s24 + 1/4*denom(1/2*s12)*s12*s13^2*s14*s23 + 1/4*
      denom(1/2*s12)*s12*s13^3*s24 + 1/2*denom(1/2*s12)*s12^2*s14*s23*s24 + 1/
      2*denom(1/2*s12)*s12^2*s14*s23^2 + 1/2*denom(1/2*s12)*s12^2*s14^2*s23 + 
      1/2*denom(1/2*s12)*s12^2*s13*s24^2 + 1/2*denom(1/2*s12)*s12^2*s13*s23*
      s24 + 1/2*denom(1/2*s12)*s12^2*s13*s14*s24 + 1/2*denom(1/2*s12)*s12^2*
      s13*s14*s23 + 1/2*denom(1/2*s12)*s12^2*s13^2*s24 + 1/4*denom(1/2*s12)*
      s12^3*s14*s23 + 1/4*denom(1/2*s12)*s12^3*s13*s24 - 1/4*denom(1/2*s12)*
      mh^2*s14^2*s23^2 - 1/2*denom(1/2*s12)*mh^2*s13*s14*s23*s24 - 1/4*denom(1/
      2*s12)*mh^2*s13^2*s24^2 - 1/2*denom(1/2*s12)*mh^2*s12*s14*s23*s24 - 1/2*
      denom(1/2*s12)*mh^2*s12*s14*s23^2 - 1/2*denom(1/2*s12)*mh^2*s12*s14^2*
      s23 - 1/2*denom(1/2*s12)*mh^2*s12*s13*s24^2 - 1/2*denom(1/2*s12)*mh^2*
      s12*s13*s23*s24 - 1/2*denom(1/2*s12)*mh^2*s12*s13*s14*s24 - 1/2*denom(1/
      2*s12)*mh^2*s12*s13*s14*s23 - 1/2*denom(1/2*s12)*mh^2*s12*s13^2*s24 - 1/
      2*denom(1/2*s12)*mh^2*s12^2*s14*s23 - 1/2*denom(1/2*s12)*mh^2*s12^2*s13*
      s24 + 1/4*denom(1/2*s12)*mh^4*s12*s14*s23 + 1/4*denom(1/2*s12)*mh^4*s12*
      s13*s24 - 1/2*denom(1/2*s12)*mt^2*s14*s23*s24^2 - denom(1/2*s12)*mt^2*
      s14*s23^2*s24 - 1/2*denom(1/2*s12)*mt^2*s14*s23^3 - denom(1/2*s12)*mt^2*
      s14^2*s23*s24 - 3/2*denom(1/2*s12)*mt^2*s14^2*s23^2 - 1/2*denom(1/2*s12)
      *mt^2*s14^3*s23 - 1/2*denom(1/2*s12)*mt^2*s13*s24^3 - denom(1/2*s12)*
      mt^2*s13*s23*s24^2 - 1/2*denom(1/2*s12)*mt^2*s13*s23^2*s24 - denom(1/2*
      s12)*mt^2*s13*s14*s24^2 - 3*denom(1/2*s12)*mt^2*s13*s14*s23*s24 - denom(
      1/2*s12)*mt^2*s13*s14*s23^2 - 1/2*denom(1/2*s12)*mt^2*s13*s14^2*s24 - 
      denom(1/2*s12)*mt^2*s13*s14^2*s23 - 3/2*denom(1/2*s12)*mt^2*s13^2*s24^2
       - denom(1/2*s12)*mt^2*s13^2*s23*s24 - denom(1/2*s12)*mt^2*s13^2*s14*s24
       - 1/2*denom(1/2*s12)*mt^2*s13^2*s14*s23 - 1/2*denom(1/2*s12)*mt^2*s13^3
      *s24 - 1/4*denom(1/2*s12)*mt^2*s12*s24^3 - 3/4*denom(1/2*s12)*mt^2*s12*
      s23*s24^2 - 3/4*denom(1/2*s12)*mt^2*s12*s23^2*s24 - 1/4*denom(1/2*s12)*
      mt^2*s12*s23^3 - 3/4*denom(1/2*s12)*mt^2*s12*s14*s24^2 - 7/2*denom(1/2*
      s12)*mt^2*s12*s14*s23*s24 - 11/4*denom(1/2*s12)*mt^2*s12*s14*s23^2 - 3/4
      *denom(1/2*s12)*mt^2*s12*s14^2*s24 - 11/4*denom(1/2*s12)*mt^2*s12*s14^2*
      s23 - 1/4*denom(1/2*s12)*mt^2*s12*s14^3 - 11/4*denom(1/2*s12)*mt^2*s12*
      s13*s24^2 - 7/2*denom(1/2*s12)*mt^2*s12*s13*s23*s24 - 3/4*denom(1/2*s12)
      *mt^2*s12*s13*s23^2 - 7/2*denom(1/2*s12)*mt^2*s12*s13*s14*s24 - 7/2*
      denom(1/2*s12)*mt^2*s12*s13*s14*s23 - 3/4*denom(1/2*s12)*mt^2*s12*s13*
      s14^2 - 11/4*denom(1/2*s12)*mt^2*s12*s13^2*s24 - 3/4*denom(1/2*s12)*mt^2
      *s12*s13^2*s23 - 3/4*denom(1/2*s12)*mt^2*s12*s13^2*s14 - 1/4*denom(1/2*
      s12)*mt^2*s12*s13^3 - 1/2*denom(1/2*s12)*mt^2*s12^2*s24^2 - denom(1/2*
      s12)*mt^2*s12^2*s23*s24 - 1/2*denom(1/2*s12)*mt^2*s12^2*s23^2 - denom(1/
      2*s12)*mt^2*s12^2*s14*s24 - 5/2*denom(1/2*s12)*mt^2*s12^2*s14*s23 - 1/2*
      denom(1/2*s12)*mt^2*s12^2*s14^2 - 5/2*denom(1/2*s12)*mt^2*s12^2*s13*s24
       - denom(1/2*s12)*mt^2*s12^2*s13*s23 - denom(1/2*s12)*mt^2*s12^2*s13*s14
       - 1/2*denom(1/2*s12)*mt^2*s12^2*s13^2 - 1/4*denom(1/2*s12)*mt^2*s12^3*
      s24 - 1/4*denom(1/2*s12)*mt^2*s12^3*s23 - 1/4*denom(1/2*s12)*mt^2*s12^3*
      s14 - 1/4*denom(1/2*s12)*mt^2*s12^3*s13 + 1/2*denom(1/2*s12)*mt^2*mh^2*
      s14*s23*s24 + 1/2*denom(1/2*s12)*mt^2*mh^2*s14*s23^2 + 1/2*denom(1/2*s12
      )*mt^2*mh^2*s14^2*s23 + 1/2*denom(1/2*s12)*mt^2*mh^2*s13*s24^2 + 1/2*
      denom(1/2*s12)*mt^2*mh^2*s13*s23*s24 + 1/2*denom(1/2*s12)*mt^2*mh^2*s13*
      s14*s24 + 1/2*denom(1/2*s12)*mt^2*mh^2*s13*s14*s23 + 1/2*denom(1/2*s12)*
      mt^2*mh^2*s13^2*s24 + 1/2*denom(1/2*s12)*mt^2*mh^2*s12*s24^2 + denom(1/2
      *s12)*mt^2*mh^2*s12*s23*s24 + 1/2*denom(1/2*s12)*mt^2*mh^2*s12*s23^2 + 
      denom(1/2*s12)*mt^2*mh^2*s12*s14*s24 + 5/2*denom(1/2*s12)*mt^2*mh^2*s12*
      s14*s23 + 1/2*denom(1/2*s12)*mt^2*mh^2*s12*s14^2 + 5/2*denom(1/2*s12)*
      mt^2*mh^2*s12*s13*s24 + denom(1/2*s12)*mt^2*mh^2*s12*s13*s23 + denom(1/2
      *s12)*mt^2*mh^2*s12*s13*s14 + 1/2*denom(1/2*s12)*mt^2*mh^2*s12*s13^2 + 1/
      2*denom(1/2*s12)*mt^2*mh^2*s12^2*s24 + 1/2*denom(1/2*s12)*mt^2*mh^2*
      s12^2*s23 + 1/2*denom(1/2*s12)*mt^2*mh^2*s12^2*s14 + 1/2*denom(1/2*s12)*
      mt^2*mh^2*s12^2*s13 - 1/4*denom(1/2*s12)*mt^2*mh^4*s12*s24 - 1/4*denom(1/
      2*s12)*mt^2*mh^4*s12*s23 - 1/4*denom(1/2*s12)*mt^2*mh^4*s12*s14 - 1/4*
      denom(1/2*s12)*mt^2*mh^4*s12*s13 + 1/4*denom(1/2*s12)*mt^4*s24^3 + 3/4*
      denom(1/2*s12)*mt^4*s23*s24^2 + 3/4*denom(1/2*s12)*mt^4*s23^2*s24 + 1/4*
      denom(1/2*s12)*mt^4*s23^3 + 3/4*denom(1/2*s12)*mt^4*s14*s24^2 + 7/2*
      denom(1/2*s12)*mt^4*s14*s23*s24 + 11/4*denom(1/2*s12)*mt^4*s14*s23^2 + 3/
      4*denom(1/2*s12)*mt^4*s14^2*s24 + 11/4*denom(1/2*s12)*mt^4*s14^2*s23 + 1/
      4*denom(1/2*s12)*mt^4*s14^3 + 11/4*denom(1/2*s12)*mt^4*s13*s24^2 + 7/2*
      denom(1/2*s12)*mt^4*s13*s23*s24 + 3/4*denom(1/2*s12)*mt^4*s13*s23^2 + 7/
      2*denom(1/2*s12)*mt^4*s13*s14*s24 + 7/2*denom(1/2*s12)*mt^4*s13*s14*s23
       + 3/4*denom(1/2*s12)*mt^4*s13*s14^2 + 11/4*denom(1/2*s12)*mt^4*s13^2*
      s24 + 3/4*denom(1/2*s12)*mt^4*s13^2*s23 + 3/4*denom(1/2*s12)*mt^4*s13^2*
      s14 + 1/4*denom(1/2*s12)*mt^4*s13^3 + 9/4*denom(1/2*s12)*mt^4*s12*s24^2
       + 9/2*denom(1/2*s12)*mt^4*s12*s23*s24 + 9/4*denom(1/2*s12)*mt^4*s12*
      s23^2 + 9/2*denom(1/2*s12)*mt^4*s12*s14*s24 + 15/2*denom(1/2*s12)*mt^4*
      s12*s14*s23 + 9/4*denom(1/2*s12)*mt^4*s12*s14^2 + 15/2*denom(1/2*s12)*
      mt^4*s12*s13*s24 + 9/2*denom(1/2*s12)*mt^4*s12*s13*s23 + 9/2*denom(1/2*
      s12)*mt^4*s12*s13*s14 + 9/4*denom(1/2*s12)*mt^4*s12*s13^2 + 5/2*denom(1/
      2*s12)*mt^4*s12^2*s24 + 5/2*denom(1/2*s12)*mt^4*s12^2*s23 + 5/2*denom(1/
      2*s12)*mt^4*s12^2*s14 + 5/2*denom(1/2*s12)*mt^4*s12^2*s13 + 1/2*denom(1/
      2*s12)*mt^4*s12^3 - 1/4*denom(1/2*s12)*mt^4*mh^2*s24^2 - 1/2*denom(1/2*
      s12)*mt^4*mh^2*s23*s24 - 1/4*denom(1/2*s12)*mt^4*mh^2*s23^2 - 1/2*denom(
      1/2*s12)*mt^4*mh^2*s14*s24 - 3/2*denom(1/2*s12)*mt^4*mh^2*s14*s23 - 1/4*
      denom(1/2*s12)*mt^4*mh^2*s14^2 - 3/2*denom(1/2*s12)*mt^4*mh^2*s13*s24 - 
      1/2*denom(1/2*s12)*mt^4*mh^2*s13*s23 - 1/2*denom(1/2*s12)*mt^4*mh^2*s13*
      s14 - 1/4*denom(1/2*s12)*mt^4*mh^2*s13^2 - 5/2*denom(1/2*s12)*mt^4*mh^2*
      s12*s24 - 5/2*denom(1/2*s12)*mt^4*mh^2*s12*s23 - 5/2*denom(1/2*s12)*mt^4
      *mh^2*s12*s14 - 5/2*denom(1/2*s12)*mt^4*mh^2*s12*s13 - denom(1/2*s12)*
      mt^4*mh^2*s12^2 + 1/2*denom(1/2*s12)*mt^4*mh^4*s12 - 3/2*denom(1/2*s12)*
      mt^6*s24^2 - 3*denom(1/2*s12)*mt^6*s23*s24 - 3/2*denom(1/2*s12)*mt^6*
      s23^2 - 3*denom(1/2*s12)*mt^6*s14*s24 - 5*denom(1/2*s12)*mt^6*s14*s23 - 
      3/2*denom(1/2*s12)*mt^6*s14^2 - 5*denom(1/2*s12)*mt^6*s13*s24 - 3*denom(
      1/2*s12)*mt^6*s13*s23 - 3*denom(1/2*s12)*mt^6*s13*s14 - 3/2*denom(1/2*
      s12)*mt^6*s13^2 - 6*denom(1/2*s12)*mt^6*s12*s24 - 6*denom(1/2*s12)*mt^6*
      s12*s23 - 6*denom(1/2*s12)*mt^6*s12*s14 - 6*denom(1/2*s12)*mt^6*s12*s13
       - 3*denom(1/2*s12)*mt^6*s12^2 + denom(1/2*s12)*mt^6*mh^2*s24 + denom(1/
      2*s12)*mt^6*mh^2*s23 + denom(1/2*s12)*mt^6*mh^2*s14 + denom(1/2*s12)*
      mt^6*mh^2*s13 + 3*denom(1/2*s12)*mt^6*mh^2*s12 + 3*denom(1/2*s12)*mt^8*
      s24 + 3*denom(1/2*s12)*mt^8*s23 + 3*denom(1/2*s12)*mt^8*s14 + 3*denom(1/
      2*s12)*mt^8*s13 + 5*denom(1/2*s12)*mt^8*s12 - denom(1/2*s12)*mt^8*mh^2
       - 2*denom(1/2*s12)*mt^10 + 1/16*denom(1/4*s12^2)*s14^3*s23^3 + 3/16*
      denom(1/4*s12^2)*s13*s14^2*s23^2*s24 + 3/16*denom(1/4*s12^2)*s13^2*s14*
      s23*s24^2 + 1/16*denom(1/4*s12^2)*s13^3*s24^3 + 1/16*denom(1/4*s12^2)*
      s12*s14^2*s23^2*s24 + 1/16*denom(1/4*s12^2)*s12*s14^2*s23^3 + 1/16*
      denom(1/4*s12^2)*s12*s14^3*s23^2 + 1/8*denom(1/4*s12^2)*s12*s13*s14*s23*
      s24^2 + 1/8*denom(1/4*s12^2)*s12*s13*s14*s23^2*s24 + 1/8*denom(1/4*s12^2
      )*s12*s13*s14^2*s23*s24 + 1/16*denom(1/4*s12^2)*s12*s13*s14^2*s23^2 + 1/
      16*denom(1/4*s12^2)*s12*s13^2*s24^3 + 1/16*denom(1/4*s12^2)*s12*s13^2*
      s23*s24^2 + 1/16*denom(1/4*s12^2)*s12*s13^2*s14*s24^2 + 1/8*denom(1/4*
      s12^2)*s12*s13^2*s14*s23*s24 + 1/16*denom(1/4*s12^2)*s12*s13^3*s24^2 + 1/
      16*denom(1/4*s12^2)*s12^2*s14^2*s23^2 + 1/8*denom(1/4*s12^2)*s12^2*s13*
      s14*s23*s24 + 1/16*denom(1/4*s12^2)*s12^2*s13^2*s24^2 - 1/16*denom(1/4*
      s12^2)*mh^2*s12*s14^2*s23^2 - 1/8*denom(1/4*s12^2)*mh^2*s12*s13*s14*s23*
      s24 - 1/16*denom(1/4*s12^2)*mh^2*s12*s13^2*s24^2 - 3/16*denom(1/4*s12^2)
      *mt^2*s14^2*s23^2*s24 - 3/16*denom(1/4*s12^2)*mt^2*s14^2*s23^3 - 3/16*
      denom(1/4*s12^2)*mt^2*s14^3*s23^2 - 3/8*denom(1/4*s12^2)*mt^2*s13*s14*
      s23*s24^2 - 3/8*denom(1/4*s12^2)*mt^2*s13*s14*s23^2*s24 - 3/8*denom(1/4*
      s12^2)*mt^2*s13*s14^2*s23*s24 - 3/16*denom(1/4*s12^2)*mt^2*s13*s14^2*
      s23^2 - 3/16*denom(1/4*s12^2)*mt^2*s13^2*s24^3 - 3/16*denom(1/4*s12^2)*
      mt^2*s13^2*s23*s24^2 - 3/16*denom(1/4*s12^2)*mt^2*s13^2*s14*s24^2 - 3/8*
      denom(1/4*s12^2)*mt^2*s13^2*s14*s23*s24 - 3/16*denom(1/4*s12^2)*mt^2*
      s13^3*s24^2 - 1/8*denom(1/4*s12^2)*mt^2*s12*s14*s23*s24^2 - 1/4*denom(1/
      4*s12^2)*mt^2*s12*s14*s23^2*s24 - 1/8*denom(1/4*s12^2)*mt^2*s12*s14*
      s23^3 - 1/4*denom(1/4*s12^2)*mt^2*s12*s14^2*s23*s24 - 1/2*denom(1/4*
      s12^2)*mt^2*s12*s14^2*s23^2 - 1/8*denom(1/4*s12^2)*mt^2*s12*s14^3*s23 - 
      1/8*denom(1/4*s12^2)*mt^2*s12*s13*s24^3 - 1/4*denom(1/4*s12^2)*mt^2*s12*
      s13*s23*s24^2 - 1/8*denom(1/4*s12^2)*mt^2*s12*s13*s23^2*s24 - 1/4*denom(
      1/4*s12^2)*mt^2*s12*s13*s14*s24^2 - denom(1/4*s12^2)*mt^2*s12*s13*s14*
      s23*s24 - 1/4*denom(1/4*s12^2)*mt^2*s12*s13*s14*s23^2 - 1/8*denom(1/4*
      s12^2)*mt^2*s12*s13*s14^2*s24 - 1/4*denom(1/4*s12^2)*mt^2*s12*s13*s14^2*
      s23 - 1/2*denom(1/4*s12^2)*mt^2*s12*s13^2*s24^2 - 1/4*denom(1/4*s12^2)*
      mt^2*s12*s13^2*s23*s24 - 1/4*denom(1/4*s12^2)*mt^2*s12*s13^2*s14*s24 - 1/
      8*denom(1/4*s12^2)*mt^2*s12*s13^2*s14*s23 - 1/8*denom(1/4*s12^2)*mt^2*
      s12*s13^3*s24 - 1/8*denom(1/4*s12^2)*mt^2*s12^2*s14*s23*s24 - 1/8*denom(
      1/4*s12^2)*mt^2*s12^2*s14*s23^2 - 1/8*denom(1/4*s12^2)*mt^2*s12^2*s14^2*
      s23 - 1/8*denom(1/4*s12^2)*mt^2*s12^2*s13*s24^2 - 1/8*denom(1/4*s12^2)*
      mt^2*s12^2*s13*s23*s24 - 1/8*denom(1/4*s12^2)*mt^2*s12^2*s13*s14*s24 - 1/
      8*denom(1/4*s12^2)*mt^2*s12^2*s13*s14*s23 - 1/8*denom(1/4*s12^2)*mt^2*
      s12^2*s13^2*s24 + 1/8*denom(1/4*s12^2)*mt^2*mh^2*s12*s14*s23*s24 + 1/8*
      denom(1/4*s12^2)*mt^2*mh^2*s12*s14*s23^2 + 1/8*denom(1/4*s12^2)*mt^2*
      mh^2*s12*s14^2*s23 + 1/8*denom(1/4*s12^2)*mt^2*mh^2*s12*s13*s24^2 + 1/8*
      denom(1/4*s12^2)*mt^2*mh^2*s12*s13*s23*s24 + 1/8*denom(1/4*s12^2)*mt^2*
      mh^2*s12*s13*s14*s24 + 1/8*denom(1/4*s12^2)*mt^2*mh^2*s12*s13*s14*s23 + 
      1/8*denom(1/4*s12^2)*mt^2*mh^2*s12*s13^2*s24 + 3/16*denom(1/4*s12^2)*
      mt^4*s14*s23*s24^2 + 3/8*denom(1/4*s12^2)*mt^4*s14*s23^2*s24 + 3/16*
      denom(1/4*s12^2)*mt^4*s14*s23^3 + 3/8*denom(1/4*s12^2)*mt^4*s14^2*s23*
      s24 + 3/4*denom(1/4*s12^2)*mt^4*s14^2*s23^2 + 3/16*denom(1/4*s12^2)*mt^4
      *s14^3*s23 + 3/16*denom(1/4*s12^2)*mt^4*s13*s24^3 + 3/8*denom(1/4*s12^2)
      *mt^4*s13*s23*s24^2 + 3/16*denom(1/4*s12^2)*mt^4*s13*s23^2*s24 + 3/8*
      denom(1/4*s12^2)*mt^4*s13*s14*s24^2 + 3/2*denom(1/4*s12^2)*mt^4*s13*s14*
      s23*s24 + 3/8*denom(1/4*s12^2)*mt^4*s13*s14*s23^2 + 3/16*denom(1/4*s12^2
      )*mt^4*s13*s14^2*s24 + 3/8*denom(1/4*s12^2)*mt^4*s13*s14^2*s23 + 3/4*
      denom(1/4*s12^2)*mt^4*s13^2*s24^2 + 3/8*denom(1/4*s12^2)*mt^4*s13^2*s23*
      s24 + 3/8*denom(1/4*s12^2)*mt^4*s13^2*s14*s24 + 3/16*denom(1/4*s12^2)*
      mt^4*s13^2*s14*s23 + 3/16*denom(1/4*s12^2)*mt^4*s13^3*s24 + 1/16*denom(1/
      4*s12^2)*mt^4*s12*s24^3 + 3/16*denom(1/4*s12^2)*mt^4*s12*s23*s24^2 + 3/
      16*denom(1/4*s12^2)*mt^4*s12*s23^2*s24 + 1/16*denom(1/4*s12^2)*mt^4*s12*
      s23^3 + 3/16*denom(1/4*s12^2)*mt^4*s12*s14*s24^2 + 9/8*denom(1/4*s12^2)*
      mt^4*s12*s14*s23*s24 + 15/16*denom(1/4*s12^2)*mt^4*s12*s14*s23^2 + 3/16*
      denom(1/4*s12^2)*mt^4*s12*s14^2*s24 + 15/16*denom(1/4*s12^2)*mt^4*s12*
      s14^2*s23 + 1/16*denom(1/4*s12^2)*mt^4*s12*s14^3 + 15/16*denom(1/4*s12^2
      )*mt^4*s12*s13*s24^2 + 9/8*denom(1/4*s12^2)*mt^4*s12*s13*s23*s24 + 3/16*
      denom(1/4*s12^2)*mt^4*s12*s13*s23^2 + 9/8*denom(1/4*s12^2)*mt^4*s12*s13*
      s14*s24 + 9/8*denom(1/4*s12^2)*mt^4*s12*s13*s14*s23 + 3/16*denom(1/4*
      s12^2)*mt^4*s12*s13*s14^2 + 15/16*denom(1/4*s12^2)*mt^4*s12*s13^2*s24 + 
      3/16*denom(1/4*s12^2)*mt^4*s12*s13^2*s23 + 3/16*denom(1/4*s12^2)*mt^4*
      s12*s13^2*s14 + 1/16*denom(1/4*s12^2)*mt^4*s12*s13^3 + 1/16*denom(1/4*
      s12^2)*mt^4*s12^2*s24^2 + 1/8*denom(1/4*s12^2)*mt^4*s12^2*s23*s24 + 1/16
      *denom(1/4*s12^2)*mt^4*s12^2*s23^2 + 1/8*denom(1/4*s12^2)*mt^4*s12^2*s14
      *s24 + 3/8*denom(1/4*s12^2)*mt^4*s12^2*s14*s23 + 1/16*denom(1/4*s12^2)*
      mt^4*s12^2*s14^2 + 3/8*denom(1/4*s12^2)*mt^4*s12^2*s13*s24 + 1/8*denom(1/
      4*s12^2)*mt^4*s12^2*s13*s23 + 1/8*denom(1/4*s12^2)*mt^4*s12^2*s13*s14 + 
      1/16*denom(1/4*s12^2)*mt^4*s12^2*s13^2 - 1/16*denom(1/4*s12^2)*mt^4*mh^2
      *s12*s24^2 - 1/8*denom(1/4*s12^2)*mt^4*mh^2*s12*s23*s24 - 1/16*denom(1/4
      *s12^2)*mt^4*mh^2*s12*s23^2 - 1/8*denom(1/4*s12^2)*mt^4*mh^2*s12*s14*s24
       - 3/8*denom(1/4*s12^2)*mt^4*mh^2*s12*s14*s23 - 1/16*denom(1/4*s12^2)*
      mt^4*mh^2*s12*s14^2 - 3/8*denom(1/4*s12^2)*mt^4*mh^2*s12*s13*s24 - 1/8*
      denom(1/4*s12^2)*mt^4*mh^2*s12*s13*s23 - 1/8*denom(1/4*s12^2)*mt^4*mh^2*
      s12*s13*s14 - 1/16*denom(1/4*s12^2)*mt^4*mh^2*s12*s13^2 - 1/16*denom(1/4
      *s12^2)*mt^6*s24^3 - 3/16*denom(1/4*s12^2)*mt^6*s23*s24^2 - 3/16*denom(1/
      4*s12^2)*mt^6*s23^2*s24 - 1/16*denom(1/4*s12^2)*mt^6*s23^3 - 3/16*denom(
      1/4*s12^2)*mt^6*s14*s24^2 - 9/8*denom(1/4*s12^2)*mt^6*s14*s23*s24 - 15/
      16*denom(1/4*s12^2)*mt^6*s14*s23^2 - 3/16*denom(1/4*s12^2)*mt^6*s14^2*
      s24 - 15/16*denom(1/4*s12^2)*mt^6*s14^2*s23 - 1/16*denom(1/4*s12^2)*mt^6
      *s14^3 - 15/16*denom(1/4*s12^2)*mt^6*s13*s24^2 - 9/8*denom(1/4*s12^2)*
      mt^6*s13*s23*s24 - 3/16*denom(1/4*s12^2)*mt^6*s13*s23^2 - 9/8*denom(1/4*
      s12^2)*mt^6*s13*s14*s24 - 9/8*denom(1/4*s12^2)*mt^6*s13*s14*s23 - 3/16*
      denom(1/4*s12^2)*mt^6*s13*s14^2 - 15/16*denom(1/4*s12^2)*mt^6*s13^2*s24
       - 3/16*denom(1/4*s12^2)*mt^6*s13^2*s23 - 3/16*denom(1/4*s12^2)*mt^6*
      s13^2*s14 - 1/16*denom(1/4*s12^2)*mt^6*s13^3 - 1/2*denom(1/4*s12^2)*mt^6
      *s12*s24^2 - denom(1/4*s12^2)*mt^6*s12*s23*s24 - 1/2*denom(1/4*s12^2)*
      mt^6*s12*s23^2 - denom(1/4*s12^2)*mt^6*s12*s14*s24 - 2*denom(1/4*s12^2)*
      mt^6*s12*s14*s23 - 1/2*denom(1/4*s12^2)*mt^6*s12*s14^2 - 2*denom(1/4*
      s12^2)*mt^6*s12*s13*s24 - denom(1/4*s12^2)*mt^6*s12*s13*s23 - denom(1/4*
      s12^2)*mt^6*s12*s13*s14 - 1/2*denom(1/4*s12^2)*mt^6*s12*s13^2 - 1/4*
      denom(1/4*s12^2)*mt^6*s12^2*s24 - 1/4*denom(1/4*s12^2)*mt^6*s12^2*s23 - 
      1/4*denom(1/4*s12^2)*mt^6*s12^2*s14 - 1/4*denom(1/4*s12^2)*mt^6*s12^2*
      s13 + 1/4*denom(1/4*s12^2)*mt^6*mh^2*s12*s24 + 1/4*denom(1/4*s12^2)*mt^6
      *mh^2*s12*s23 + 1/4*denom(1/4*s12^2)*mt^6*mh^2*s12*s14 + 1/4*denom(1/4*
      s12^2)*mt^6*mh^2*s12*s13 + 3/8*denom(1/4*s12^2)*mt^8*s24^2 + 3/4*denom(1/
      4*s12^2)*mt^8*s23*s24 + 3/8*denom(1/4*s12^2)*mt^8*s23^2 + 3/4*denom(1/4*
      s12^2)*mt^8*s14*s24 + 3/2*denom(1/4*s12^2)*mt^8*s14*s23 + 3/8*denom(1/4*
      s12^2)*mt^8*s14^2 + 3/2*denom(1/4*s12^2)*mt^8*s13*s24 + 3/4*denom(1/4*
      s12^2)*mt^8*s13*s23 + 3/4*denom(1/4*s12^2)*mt^8*s13*s14 + 3/8*denom(1/4*
      s12^2)*mt^8*s13^2 + 5/4*denom(1/4*s12^2)*mt^8*s12*s24 + 5/4*denom(1/4*
      s12^2)*mt^8*s12*s23 + 5/4*denom(1/4*s12^2)*mt^8*s12*s14 + 5/4*denom(1/4*
      s12^2)*mt^8*s12*s13 + 1/4*denom(1/4*s12^2)*mt^8*s12^2 - 1/4*denom(1/4*
      s12^2)*mt^8*mh^2*s12 - 3/4*denom(1/4*s12^2)*mt^10*s24 - 3/4*denom(1/4*
      s12^2)*mt^10*s23 - 3/4*denom(1/4*s12^2)*mt^10*s14 - 3/4*denom(1/4*s12^2)
      *mt^10*s13 - denom(1/4*s12^2)*mt^10*s12 + 1/2*denom(1/4*s12^2)*mt^12;
 
 .sort
id KMatrix(6,12) =   - 1/2*mt^2*s14*s23*s24 - 1/2*mt^2*s14*s23^2 - 1/2*mt^2*
      s14^2*s23 - 1/2*mt^2*s13*s24^2 - 1/2*mt^2*s13*s23*s24 - 1/2*mt^2*s13*s14
      *s24 - 1/2*mt^2*s13*s14*s23 - 1/2*mt^2*s13^2*s24 - 1/2*mt^2*s12*s24^2 - 
      mt^2*s12*s23*s24 - 1/2*mt^2*s12*s23^2 - mt^2*s12*s14*s24 - 3/2*mt^2*s12*
      s14*s23 - 1/2*mt^2*s12*s14^2 - 3/2*mt^2*s12*s13*s24 - mt^2*s12*s13*s23
       - mt^2*s12*s13*s14 - 1/2*mt^2*s12*s13^2 - mt^2*s12^2*s24 - mt^2*s12^2*
      s23 - mt^2*s12^2*s14 - mt^2*s12^2*s13 - 1/2*mt^2*s12^3 + 1/2*mt^2*mh^2*
      s14*s23 + 1/2*mt^2*mh^2*s13*s24 + mt^2*mh^2*s12*s24 + mt^2*mh^2*s12*s23
       + mt^2*mh^2*s12*s14 + mt^2*mh^2*s12*s13 + mt^2*mh^2*s12^2 - 1/2*mt^2*
      mh^4*s12 + 1/2*mt^4*s24^2 + mt^4*s23*s24 + 1/2*mt^4*s23^2 + mt^4*s14*s24
       + 2*mt^4*s14*s23 + 1/2*mt^4*s14^2 + 2*mt^4*s13*s24 + mt^4*s13*s23 + 
      mt^4*s13*s14 + 1/2*mt^4*s13^2 + 7/2*mt^4*s12*s24 + 7/2*mt^4*s12*s23 + 7/
      2*mt^4*s12*s14 + 7/2*mt^4*s12*s13 + 3*mt^4*s12^2 - 1/2*mt^4*mh^2*s24 - 1/
      2*mt^4*mh^2*s23 - 1/2*mt^4*mh^2*s14 - 1/2*mt^4*mh^2*s13 - 3*mt^4*mh^2*
      s12 - 2*mt^6*s24 - 2*mt^6*s23 - 2*mt^6*s14 - 2*mt^6*s13 - 5*mt^6*s12 + 
      mt^6*mh^2 + 2*mt^8 + 1/4*denom(1/2*s12)*s14^2*s23*s24^2 + 1/4*denom(1/2*
      s12)*s14^2*s23^2*s24 + 1/4*denom(1/2*s12)*s14^3*s23*s24 + 1/4*denom(1/2*
      s12)*s13*s14*s24^3 + 1/4*denom(1/2*s12)*s13*s14*s23*s24^2 + 1/4*denom(1/
      2*s12)*s13*s14^2*s24^2 + 1/4*denom(1/2*s12)*s13*s14^2*s23*s24 + 1/4*
      denom(1/2*s12)*s13^2*s14*s24^2 + 1/4*denom(1/2*s12)*s12*s14*s24^3 + 1/2*
      denom(1/2*s12)*s12*s14*s23*s24^2 + 1/4*denom(1/2*s12)*s12*s14*s23^2*s24
       + 1/2*denom(1/2*s12)*s12*s14^2*s24^2 + 3/4*denom(1/2*s12)*s12*s14^2*s23
      *s24 + 1/4*denom(1/2*s12)*s12*s14^3*s24 + 3/4*denom(1/2*s12)*s12*s13*s14
      *s24^2 + 1/2*denom(1/2*s12)*s12*s13*s14*s23*s24 + 1/2*denom(1/2*s12)*s12
      *s13*s14^2*s24 + 1/4*denom(1/2*s12)*s12*s13^2*s14*s24 + 1/2*denom(1/2*
      s12)*s12^2*s14*s24^2 + 1/2*denom(1/2*s12)*s12^2*s14*s23*s24 + 1/2*denom(
      1/2*s12)*s12^2*s14^2*s24 + 1/2*denom(1/2*s12)*s12^2*s13*s14*s24 + 1/4*
      denom(1/2*s12)*s12^3*s14*s24 - 1/4*denom(1/2*s12)*mh^2*s14^2*s23*s24 - 1/
      4*denom(1/2*s12)*mh^2*s13*s14*s24^2 - 1/2*denom(1/2*s12)*mh^2*s12*s14*
      s24^2 - 1/2*denom(1/2*s12)*mh^2*s12*s14*s23*s24 - 1/2*denom(1/2*s12)*
      mh^2*s12*s14^2*s24 - 1/2*denom(1/2*s12)*mh^2*s12*s13*s14*s24 - 1/2*
      denom(1/2*s12)*mh^2*s12^2*s14*s24 + 1/4*denom(1/2*s12)*mh^4*s12*s14*s24
       - 1/4*denom(1/2*s12)*mt^2*s14*s24^3 - 3/4*denom(1/2*s12)*mt^2*s14*s23*
      s24^2 - 1/2*denom(1/2*s12)*mt^2*s14*s23^2*s24 - 1/2*denom(1/2*s12)*mt^2*
      s14^2*s24^2 - 3/2*denom(1/2*s12)*mt^2*s14^2*s23*s24 - 1/2*denom(1/2*s12)
      *mt^2*s14^2*s23^2 - 1/4*denom(1/2*s12)*mt^2*s14^3*s24 - 1/4*denom(1/2*
      s12)*mt^2*s14^3*s23 - 1/4*denom(1/2*s12)*mt^2*s13*s24^3 - 1/4*denom(1/2*
      s12)*mt^2*s13*s23*s24^2 - 3/2*denom(1/2*s12)*mt^2*s13*s14*s24^2 - 3/2*
      denom(1/2*s12)*mt^2*s13*s14*s23*s24 - 3/4*denom(1/2*s12)*mt^2*s13*s14^2*
      s24 - 1/4*denom(1/2*s12)*mt^2*s13*s14^2*s23 - 1/2*denom(1/2*s12)*mt^2*
      s13^2*s24^2 - 1/2*denom(1/2*s12)*mt^2*s13^2*s14*s24 - 1/4*denom(1/2*s12)
      *mt^2*s12*s24^3 - 1/2*denom(1/2*s12)*mt^2*s12*s23*s24^2 - 1/4*denom(1/2*
      s12)*mt^2*s12*s23^2*s24 - 5/2*denom(1/2*s12)*mt^2*s12*s14*s24^2 - 13/4*
      denom(1/2*s12)*mt^2*s12*s14*s23*s24 - 1/2*denom(1/2*s12)*mt^2*s12*s14*
      s23^2 - 5/2*denom(1/2*s12)*mt^2*s12*s14^2*s24 - denom(1/2*s12)*mt^2*s12*
      s14^2*s23 - 1/4*denom(1/2*s12)*mt^2*s12*s14^3 - denom(1/2*s12)*mt^2*s12*
      s13*s24^2 - 3/4*denom(1/2*s12)*mt^2*s12*s13*s23*s24 - 13/4*denom(1/2*s12
      )*mt^2*s12*s13*s14*s24 - 3/4*denom(1/2*s12)*mt^2*s12*s13*s14*s23 - 1/2*
      denom(1/2*s12)*mt^2*s12*s13*s14^2 - 1/2*denom(1/2*s12)*mt^2*s12*s13^2*
      s24 - 1/4*denom(1/2*s12)*mt^2*s12*s13^2*s14 - 1/2*denom(1/2*s12)*mt^2*
      s12^2*s24^2 - 1/2*denom(1/2*s12)*mt^2*s12^2*s23*s24 - 5/2*denom(1/2*s12)
      *mt^2*s12^2*s14*s24 - 3/4*denom(1/2*s12)*mt^2*s12^2*s14*s23 - 1/2*denom(
      1/2*s12)*mt^2*s12^2*s14^2 - 3/4*denom(1/2*s12)*mt^2*s12^2*s13*s24 - 1/2*
      denom(1/2*s12)*mt^2*s12^2*s13*s14 - 1/4*denom(1/2*s12)*mt^2*s12^3*s24 - 
      1/4*denom(1/2*s12)*mt^2*s12^3*s14 + 1/4*denom(1/2*s12)*mt^2*mh^2*s14*
      s24^2 + 1/2*denom(1/2*s12)*mt^2*mh^2*s14*s23*s24 + 1/4*denom(1/2*s12)*
      mt^2*mh^2*s14^2*s24 + 1/4*denom(1/2*s12)*mt^2*mh^2*s14^2*s23 + 1/4*
      denom(1/2*s12)*mt^2*mh^2*s13*s24^2 + 1/2*denom(1/2*s12)*mt^2*mh^2*s13*
      s14*s24 + 1/2*denom(1/2*s12)*mt^2*mh^2*s12*s24^2 + 1/2*denom(1/2*s12)*
      mt^2*mh^2*s12*s23*s24 + 5/2*denom(1/2*s12)*mt^2*mh^2*s12*s14*s24 + 3/4*
      denom(1/2*s12)*mt^2*mh^2*s12*s14*s23 + 1/2*denom(1/2*s12)*mt^2*mh^2*s12*
      s14^2 + 3/4*denom(1/2*s12)*mt^2*mh^2*s12*s13*s24 + 1/2*denom(1/2*s12)*
      mt^2*mh^2*s12*s13*s14 + 1/2*denom(1/2*s12)*mt^2*mh^2*s12^2*s24 + 1/2*
      denom(1/2*s12)*mt^2*mh^2*s12^2*s14 - 1/4*denom(1/2*s12)*mt^2*mh^4*s12*
      s24 - 1/4*denom(1/2*s12)*mt^2*mh^4*s12*s14 + 1/4*denom(1/2*s12)*mt^4*
      s24^3 + 1/2*denom(1/2*s12)*mt^4*s23*s24^2 + 1/4*denom(1/2*s12)*mt^4*
      s23^2*s24 + 7/4*denom(1/2*s12)*mt^4*s14*s24^2 + 13/4*denom(1/2*s12)*mt^4
      *s14*s23*s24 + denom(1/2*s12)*mt^4*s14*s23^2 + 7/4*denom(1/2*s12)*mt^4*
      s14^2*s24 + 7/4*denom(1/2*s12)*mt^4*s14^2*s23 + 1/4*denom(1/2*s12)*mt^4*
      s14^3 + 7/4*denom(1/2*s12)*mt^4*s13*s24^2 + 5/4*denom(1/2*s12)*mt^4*s13*
      s23*s24 + 13/4*denom(1/2*s12)*mt^4*s13*s14*s24 + 5/4*denom(1/2*s12)*mt^4
      *s13*s14*s23 + 1/2*denom(1/2*s12)*mt^4*s13*s14^2 + denom(1/2*s12)*mt^4*
      s13^2*s24 + 1/4*denom(1/2*s12)*mt^4*s13^2*s14 + 9/4*denom(1/2*s12)*mt^4*
      s12*s24^2 + 11/4*denom(1/2*s12)*mt^4*s12*s23*s24 + 1/2*denom(1/2*s12)*
      mt^4*s12*s23^2 + 7*denom(1/2*s12)*mt^4*s12*s14*s24 + 4*denom(1/2*s12)*
      mt^4*s12*s14*s23 + 9/4*denom(1/2*s12)*mt^4*s12*s14^2 + 4*denom(1/2*s12)*
      mt^4*s12*s13*s24 + denom(1/2*s12)*mt^4*s12*s13*s23 + 11/4*denom(1/2*s12)
      *mt^4*s12*s13*s14 + 1/2*denom(1/2*s12)*mt^4*s12*s13^2 + 9/4*denom(1/2*
      s12)*mt^4*s12^2*s24 + 3/4*denom(1/2*s12)*mt^4*s12^2*s23 + 9/4*denom(1/2*
      s12)*mt^4*s12^2*s14 + 3/4*denom(1/2*s12)*mt^4*s12^2*s13 + 1/4*denom(1/2*
      s12)*mt^4*s12^3 - 1/4*denom(1/2*s12)*mt^4*mh^2*s24^2 - 1/4*denom(1/2*s12
      )*mt^4*mh^2*s23*s24 - denom(1/2*s12)*mt^4*mh^2*s14*s24 - 1/2*denom(1/2*
      s12)*mt^4*mh^2*s14*s23 - 1/4*denom(1/2*s12)*mt^4*mh^2*s14^2 - 1/2*denom(
      1/2*s12)*mt^4*mh^2*s13*s24 - 1/4*denom(1/2*s12)*mt^4*mh^2*s13*s14 - 9/4*
      denom(1/2*s12)*mt^4*mh^2*s12*s24 - 3/4*denom(1/2*s12)*mt^4*mh^2*s12*s23
       - 9/4*denom(1/2*s12)*mt^4*mh^2*s12*s14 - 3/4*denom(1/2*s12)*mt^4*mh^2*
      s12*s13 - 1/2*denom(1/2*s12)*mt^4*mh^2*s12^2 + 1/4*denom(1/2*s12)*mt^4*
      mh^4*s12 - 3/2*denom(1/2*s12)*mt^6*s24^2 - 2*denom(1/2*s12)*mt^6*s23*s24
       - 1/2*denom(1/2*s12)*mt^6*s23^2 - 4*denom(1/2*s12)*mt^6*s14*s24 - 7/2*
      denom(1/2*s12)*mt^6*s14*s23 - 3/2*denom(1/2*s12)*mt^6*s14^2 - 7/2*denom(
      1/2*s12)*mt^6*s13*s24 - denom(1/2*s12)*mt^6*s13*s23 - 2*denom(1/2*s12)*
      mt^6*s13*s14 - 1/2*denom(1/2*s12)*mt^6*s13^2 - 23/4*denom(1/2*s12)*mt^6*
      s12*s24 - 13/4*denom(1/2*s12)*mt^6*s12*s23 - 23/4*denom(1/2*s12)*mt^6*
      s12*s14 - 13/4*denom(1/2*s12)*mt^6*s12*s13 - 2*denom(1/2*s12)*mt^6*s12^2
       + 3/4*denom(1/2*s12)*mt^6*mh^2*s24 + 1/4*denom(1/2*s12)*mt^6*mh^2*s23
       + 3/4*denom(1/2*s12)*mt^6*mh^2*s14 + 1/4*denom(1/2*s12)*mt^6*mh^2*s13
       + 2*denom(1/2*s12)*mt^6*mh^2*s12 + 3*denom(1/2*s12)*mt^8*s24 + 2*denom(
      1/2*s12)*mt^8*s23 + 3*denom(1/2*s12)*mt^8*s14 + 2*denom(1/2*s12)*mt^8*
      s13 + 9/2*denom(1/2*s12)*mt^8*s12 - 1/2*denom(1/2*s12)*mt^8*mh^2 - 2*
      denom(1/2*s12)*mt^10 + 1/8*denom(1/4*s12^2)*s14^3*s23^2*s24 + 1/4*denom(
      1/4*s12^2)*s13*s14^2*s23*s24^2 + 1/8*denom(1/4*s12^2)*s13^2*s14*s24^3 + 
      1/8*denom(1/4*s12^2)*s12*s14^2*s23*s24^2 + 1/8*denom(1/4*s12^2)*s12*
      s14^2*s23^2*s24 + 1/8*denom(1/4*s12^2)*s12*s14^3*s23*s24 + 1/8*denom(1/4
      *s12^2)*s12*s13*s14*s24^3 + 1/8*denom(1/4*s12^2)*s12*s13*s14*s23*s24^2
       + 1/8*denom(1/4*s12^2)*s12*s13*s14^2*s24^2 + 1/8*denom(1/4*s12^2)*s12*
      s13*s14^2*s23*s24 + 1/8*denom(1/4*s12^2)*s12*s13^2*s14*s24^2 + 1/8*
      denom(1/4*s12^2)*s12^2*s14^2*s23*s24 + 1/8*denom(1/4*s12^2)*s12^2*s13*
      s14*s24^2 - 1/8*denom(1/4*s12^2)*mh^2*s12*s14^2*s23*s24 - 1/8*denom(1/4*
      s12^2)*mh^2*s12*s13*s14*s24^2 - 1/4*denom(1/4*s12^2)*mt^2*s14^2*s23*
      s24^2 - 3/8*denom(1/4*s12^2)*mt^2*s14^2*s23^2*s24 - 1/4*denom(1/4*s12^2)
      *mt^2*s14^3*s23*s24 - 1/8*denom(1/4*s12^2)*mt^2*s14^3*s23^2 - 1/4*denom(
      1/4*s12^2)*mt^2*s13*s14*s24^3 - 1/2*denom(1/4*s12^2)*mt^2*s13*s14*s23*
      s24^2 - 1/4*denom(1/4*s12^2)*mt^2*s13*s14^2*s24^2 - 1/2*denom(1/4*s12^2)
      *mt^2*s13*s14^2*s23*s24 - 1/8*denom(1/4*s12^2)*mt^2*s13^2*s24^3 - 3/8*
      denom(1/4*s12^2)*mt^2*s13^2*s14*s24^2 - 1/8*denom(1/4*s12^2)*mt^2*s12*
      s14*s24^3 - 3/8*denom(1/4*s12^2)*mt^2*s12*s14*s23*s24^2 - 1/4*denom(1/4*
      s12^2)*mt^2*s12*s14*s23^2*s24 - 1/4*denom(1/4*s12^2)*mt^2*s12*s14^2*
      s24^2 - denom(1/4*s12^2)*mt^2*s12*s14^2*s23*s24 - 1/8*denom(1/4*s12^2)*
      mt^2*s12*s14^2*s23^2 - 1/8*denom(1/4*s12^2)*mt^2*s12*s14^3*s24 - 1/8*
      denom(1/4*s12^2)*mt^2*s12*s14^3*s23 - 1/8*denom(1/4*s12^2)*mt^2*s12*s13*
      s24^3 - 1/8*denom(1/4*s12^2)*mt^2*s12*s13*s23*s24^2 - denom(1/4*s12^2)*
      mt^2*s12*s13*s14*s24^2 - 1/2*denom(1/4*s12^2)*mt^2*s12*s13*s14*s23*s24
       - 3/8*denom(1/4*s12^2)*mt^2*s12*s13*s14^2*s24 - 1/8*denom(1/4*s12^2)*
      mt^2*s12*s13*s14^2*s23 - 1/8*denom(1/4*s12^2)*mt^2*s12*s13^2*s24^2 - 1/4
      *denom(1/4*s12^2)*mt^2*s12*s13^2*s14*s24 - 1/8*denom(1/4*s12^2)*mt^2*
      s12^2*s14*s24^2 - 1/4*denom(1/4*s12^2)*mt^2*s12^2*s14*s23*s24 - 1/8*
      denom(1/4*s12^2)*mt^2*s12^2*s14^2*s24 - 1/8*denom(1/4*s12^2)*mt^2*s12^2*
      s14^2*s23 - 1/8*denom(1/4*s12^2)*mt^2*s12^2*s13*s24^2 - 1/4*denom(1/4*
      s12^2)*mt^2*s12^2*s13*s14*s24 + 1/8*denom(1/4*s12^2)*mt^2*mh^2*s12*s14*
      s24^2 + 1/4*denom(1/4*s12^2)*mt^2*mh^2*s12*s14*s23*s24 + 1/8*denom(1/4*
      s12^2)*mt^2*mh^2*s12*s14^2*s24 + 1/8*denom(1/4*s12^2)*mt^2*mh^2*s12*
      s14^2*s23 + 1/8*denom(1/4*s12^2)*mt^2*mh^2*s12*s13*s24^2 + 1/4*denom(1/4
      *s12^2)*mt^2*mh^2*s12*s13*s14*s24 + 1/8*denom(1/4*s12^2)*mt^4*s14*s24^3
       + 1/2*denom(1/4*s12^2)*mt^4*s14*s23*s24^2 + 3/8*denom(1/4*s12^2)*mt^4*
      s14*s23^2*s24 + 1/4*denom(1/4*s12^2)*mt^4*s14^2*s24^2 + 5/4*denom(1/4*
      s12^2)*mt^4*s14^2*s23*s24 + 3/8*denom(1/4*s12^2)*mt^4*s14^2*s23^2 + 1/8*
      denom(1/4*s12^2)*mt^4*s14^3*s24 + 1/4*denom(1/4*s12^2)*mt^4*s14^3*s23 + 
      1/4*denom(1/4*s12^2)*mt^4*s13*s24^3 + 1/4*denom(1/4*s12^2)*mt^4*s13*s23*
      s24^2 + 5/4*denom(1/4*s12^2)*mt^4*s13*s14*s24^2 + denom(1/4*s12^2)*mt^4*
      s13*s14*s23*s24 + 1/2*denom(1/4*s12^2)*mt^4*s13*s14^2*s24 + 1/4*denom(1/
      4*s12^2)*mt^4*s13*s14^2*s23 + 3/8*denom(1/4*s12^2)*mt^4*s13^2*s24^2 + 3/
      8*denom(1/4*s12^2)*mt^4*s13^2*s14*s24 + 1/8*denom(1/4*s12^2)*mt^4*s12*
      s24^3 + 1/4*denom(1/4*s12^2)*mt^4*s12*s23*s24^2 + 1/8*denom(1/4*s12^2)*
      mt^4*s12*s23^2*s24 + 9/8*denom(1/4*s12^2)*mt^4*s12*s14*s24^2 + 15/8*
      denom(1/4*s12^2)*mt^4*s12*s14*s23*s24 + 1/4*denom(1/4*s12^2)*mt^4*s12*
      s14*s23^2 + 9/8*denom(1/4*s12^2)*mt^4*s12*s14^2*s24 + 7/8*denom(1/4*
      s12^2)*mt^4*s12*s14^2*s23 + 1/8*denom(1/4*s12^2)*mt^4*s12*s14^3 + 7/8*
      denom(1/4*s12^2)*mt^4*s12*s13*s24^2 + 3/8*denom(1/4*s12^2)*mt^4*s12*s13*
      s23*s24 + 15/8*denom(1/4*s12^2)*mt^4*s12*s13*s14*s24 + 3/8*denom(1/4*
      s12^2)*mt^4*s12*s13*s14*s23 + 1/4*denom(1/4*s12^2)*mt^4*s12*s13*s14^2 + 
      1/4*denom(1/4*s12^2)*mt^4*s12*s13^2*s24 + 1/8*denom(1/4*s12^2)*mt^4*s12*
      s13^2*s14 + 1/8*denom(1/4*s12^2)*mt^4*s12^2*s24^2 + 1/8*denom(1/4*s12^2)
      *mt^4*s12^2*s23*s24 + 1/2*denom(1/4*s12^2)*mt^4*s12^2*s14*s24 + 1/4*
      denom(1/4*s12^2)*mt^4*s12^2*s14*s23 + 1/8*denom(1/4*s12^2)*mt^4*s12^2*
      s14^2 + 1/4*denom(1/4*s12^2)*mt^4*s12^2*s13*s24 + 1/8*denom(1/4*s12^2)*
      mt^4*s12^2*s13*s14 - 1/8*denom(1/4*s12^2)*mt^4*mh^2*s12*s24^2 - 1/8*
      denom(1/4*s12^2)*mt^4*mh^2*s12*s23*s24 - 1/2*denom(1/4*s12^2)*mt^4*mh^2*
      s12*s14*s24 - 1/4*denom(1/4*s12^2)*mt^4*mh^2*s12*s14*s23 - 1/8*denom(1/4
      *s12^2)*mt^4*mh^2*s12*s14^2 - 1/4*denom(1/4*s12^2)*mt^4*mh^2*s12*s13*s24
       - 1/8*denom(1/4*s12^2)*mt^4*mh^2*s12*s13*s14 - 1/8*denom(1/4*s12^2)*
      mt^6*s24^3 - 1/4*denom(1/4*s12^2)*mt^6*s23*s24^2 - 1/8*denom(1/4*s12^2)*
      mt^6*s23^2*s24 - 7/8*denom(1/4*s12^2)*mt^6*s14*s24^2 - 7/4*denom(1/4*
      s12^2)*mt^6*s14*s23*s24 - 3/8*denom(1/4*s12^2)*mt^6*s14*s23^2 - 7/8*
      denom(1/4*s12^2)*mt^6*s14^2*s24 - denom(1/4*s12^2)*mt^6*s14^2*s23 - 1/8*
      denom(1/4*s12^2)*mt^6*s14^3 - denom(1/4*s12^2)*mt^6*s13*s24^2 - 1/2*
      denom(1/4*s12^2)*mt^6*s13*s23*s24 - 7/4*denom(1/4*s12^2)*mt^6*s13*s14*
      s24 - 1/2*denom(1/4*s12^2)*mt^6*s13*s14*s23 - 1/4*denom(1/4*s12^2)*mt^6*
      s13*s14^2 - 3/8*denom(1/4*s12^2)*mt^6*s13^2*s24 - 1/8*denom(1/4*s12^2)*
      mt^6*s13^2*s14 - 7/8*denom(1/4*s12^2)*mt^6*s12*s24^2 - denom(1/4*s12^2)*
      mt^6*s12*s23*s24 - 1/8*denom(1/4*s12^2)*mt^6*s12*s23^2 - 11/4*denom(1/4*
      s12^2)*mt^6*s12*s14*s24 - 3/2*denom(1/4*s12^2)*mt^6*s12*s14*s23 - 7/8*
      denom(1/4*s12^2)*mt^6*s12*s14^2 - 3/2*denom(1/4*s12^2)*mt^6*s12*s13*s24
       - 1/4*denom(1/4*s12^2)*mt^6*s12*s13*s23 - denom(1/4*s12^2)*mt^6*s12*s13
      *s14 - 1/8*denom(1/4*s12^2)*mt^6*s12*s13^2 - 3/8*denom(1/4*s12^2)*mt^6*
      s12^2*s24 - 1/8*denom(1/4*s12^2)*mt^6*s12^2*s23 - 3/8*denom(1/4*s12^2)*
      mt^6*s12^2*s14 - 1/8*denom(1/4*s12^2)*mt^6*s12^2*s13 + 3/8*denom(1/4*
      s12^2)*mt^6*mh^2*s12*s24 + 1/8*denom(1/4*s12^2)*mt^6*mh^2*s12*s23 + 3/8*
      denom(1/4*s12^2)*mt^6*mh^2*s12*s14 + 1/8*denom(1/4*s12^2)*mt^6*mh^2*s12*
      s13 + 5/8*denom(1/4*s12^2)*mt^8*s24^2 + 3/4*denom(1/4*s12^2)*mt^8*s23*
      s24 + 1/8*denom(1/4*s12^2)*mt^8*s23^2 + 7/4*denom(1/4*s12^2)*mt^8*s14*
      s24 + 5/4*denom(1/4*s12^2)*mt^8*s14*s23 + 5/8*denom(1/4*s12^2)*mt^8*
      s14^2 + 5/4*denom(1/4*s12^2)*mt^8*s13*s24 + 1/4*denom(1/4*s12^2)*mt^8*
      s13*s23 + 3/4*denom(1/4*s12^2)*mt^8*s13*s14 + 1/8*denom(1/4*s12^2)*mt^8*
      s13^2 + 7/4*denom(1/4*s12^2)*mt^8*s12*s24 + 3/4*denom(1/4*s12^2)*mt^8*
      s12*s23 + 7/4*denom(1/4*s12^2)*mt^8*s12*s14 + 3/4*denom(1/4*s12^2)*mt^8*
      s12*s13 + 1/4*denom(1/4*s12^2)*mt^8*s12^2 - 1/4*denom(1/4*s12^2)*mt^8*
      mh^2*s12 - denom(1/4*s12^2)*mt^10*s24 - 1/2*denom(1/4*s12^2)*mt^10*s23
       - denom(1/4*s12^2)*mt^10*s14 - 1/2*denom(1/4*s12^2)*mt^10*s13 - denom(1/
      4*s12^2)*mt^10*s12 + 1/2*denom(1/4*s12^2)*mt^12;
 
 .sort
id KMatrix(6,13) =   - mt^3*s12*s14*s24 - mt^3*s12*s14*s23 - mt^3*s12*s14^2 - 
      mt^3*s12*s13*s14 - mt^3*s12^2*s14 + mt^3*mh^2*s12*s14 + mt^5*s12*s24 + 
      mt^5*s12*s23 + 3*mt^5*s12*s14 + mt^5*s12*s13 + mt^5*s12^2 - mt^5*mh^2*
      s12 - 2*mt^7*s12 + 1/2*denom(1/2*s12)*mt*s12*s13*s14*s23*s24 + 1/2*
      denom(1/2*s12)*mt*s12*s13*s14*s23^2 + 1/2*denom(1/2*s12)*mt*s12*s13*
      s14^2*s23 + 1/2*denom(1/2*s12)*mt*s12*s13^2*s14*s23 + 1/2*denom(1/2*s12)
      *mt*s12^2*s13*s14*s23 - 1/2*denom(1/2*s12)*mt*mh^2*s12*s13*s14*s23 - 1/2
      *denom(1/2*s12)*mt^3*s12*s14*s23*s24 - 1/2*denom(1/2*s12)*mt^3*s12*s14*
      s23^2 - denom(1/2*s12)*mt^3*s12*s14^2*s23 - 1/2*denom(1/2*s12)*mt^3*s12*
      s13*s23*s24 - 1/2*denom(1/2*s12)*mt^3*s12*s13*s23^2 - denom(1/2*s12)*
      mt^3*s12*s13*s14*s24 - 5/2*denom(1/2*s12)*mt^3*s12*s13*s14*s23 - 1/2*
      denom(1/2*s12)*mt^3*s12*s13*s14^2 - 1/2*denom(1/2*s12)*mt^3*s12*s13^2*
      s23 - 1/2*denom(1/2*s12)*mt^3*s12*s13^2*s14 - 1/2*denom(1/2*s12)*mt^3*
      s12^2*s14*s23 - 1/2*denom(1/2*s12)*mt^3*s12^2*s13*s23 - 1/2*denom(1/2*
      s12)*mt^3*s12^2*s13*s14 + 1/2*denom(1/2*s12)*mt^3*mh^2*s12*s14*s23 + 1/2
      *denom(1/2*s12)*mt^3*mh^2*s12*s13*s23 + 1/2*denom(1/2*s12)*mt^3*mh^2*s12
      *s13*s14 + 1/2*denom(1/2*s12)*mt^5*s12*s23*s24 + 1/2*denom(1/2*s12)*mt^5
      *s12*s23^2 + denom(1/2*s12)*mt^5*s12*s14*s24 + 3*denom(1/2*s12)*mt^5*s12
      *s14*s23 + denom(1/2*s12)*mt^5*s12*s14^2 + denom(1/2*s12)*mt^5*s12*s13*
      s24 + 2*denom(1/2*s12)*mt^5*s12*s13*s23 + 5/2*denom(1/2*s12)*mt^5*s12*
      s13*s14 + 1/2*denom(1/2*s12)*mt^5*s12*s13^2 + 1/2*denom(1/2*s12)*mt^5*
      s12^2*s23 + 1/2*denom(1/2*s12)*mt^5*s12^2*s14 + 1/2*denom(1/2*s12)*mt^5*
      s12^2*s13 - 1/2*denom(1/2*s12)*mt^5*mh^2*s12*s23 - 1/2*denom(1/2*s12)*
      mt^5*mh^2*s12*s14 - 1/2*denom(1/2*s12)*mt^5*mh^2*s12*s13 - denom(1/2*s12
      )*mt^7*s12*s24 - 2*denom(1/2*s12)*mt^7*s12*s23 - 3*denom(1/2*s12)*mt^7*
      s12*s14 - 2*denom(1/2*s12)*mt^7*s12*s13 - 1/2*denom(1/2*s12)*mt^7*s12^2
       + 1/2*denom(1/2*s12)*mt^7*mh^2*s12 + 2*denom(1/2*s12)*mt^9*s12 + 1/4*
      denom(1/4*s12^2)*mt*s12*s13*s14^2*s23^2 + 1/4*denom(1/4*s12^2)*mt*s12*
      s13^2*s14*s23*s24 - 1/4*denom(1/4*s12^2)*mt^3*s12*s14^2*s23^2 - 1/2*
      denom(1/4*s12^2)*mt^3*s12*s13*s14*s23*s24 - 1/2*denom(1/4*s12^2)*mt^3*
      s12*s13*s14*s23^2 - 1/2*denom(1/4*s12^2)*mt^3*s12*s13*s14^2*s23 - 1/4*
      denom(1/4*s12^2)*mt^3*s12*s13^2*s23*s24 - 1/4*denom(1/4*s12^2)*mt^3*s12*
      s13^2*s14*s24 - 1/4*denom(1/4*s12^2)*mt^3*s12*s13^2*s14*s23 + 1/4*denom(
      1/4*s12^2)*mt^5*s12*s14*s23*s24 + 1/2*denom(1/4*s12^2)*mt^5*s12*s14*
      s23^2 + 1/2*denom(1/4*s12^2)*mt^5*s12*s14^2*s23 + 1/2*denom(1/4*s12^2)*
      mt^5*s12*s13*s23*s24 + 1/4*denom(1/4*s12^2)*mt^5*s12*s13*s23^2 + 1/2*
      denom(1/4*s12^2)*mt^5*s12*s13*s14*s24 + 3/2*denom(1/4*s12^2)*mt^5*s12*
      s13*s14*s23 + 1/4*denom(1/4*s12^2)*mt^5*s12*s13*s14^2 + 1/4*denom(1/4*
      s12^2)*mt^5*s12*s13^2*s24 + 1/4*denom(1/4*s12^2)*mt^5*s12*s13^2*s23 + 1/
      4*denom(1/4*s12^2)*mt^5*s12*s13^2*s14 - 1/4*denom(1/4*s12^2)*mt^7*s12*
      s23*s24 - 1/4*denom(1/4*s12^2)*mt^7*s12*s23^2 - 1/4*denom(1/4*s12^2)*
      mt^7*s12*s14*s24 - 5/4*denom(1/4*s12^2)*mt^7*s12*s14*s23 - 1/4*denom(1/4
      *s12^2)*mt^7*s12*s14^2 - 1/2*denom(1/4*s12^2)*mt^7*s12*s13*s24 - denom(1/
      4*s12^2)*mt^7*s12*s13*s23 - denom(1/4*s12^2)*mt^7*s12*s13*s14 - 1/4*
      denom(1/4*s12^2)*mt^7*s12*s13^2 + 1/4*denom(1/4*s12^2)*mt^9*s12*s24 + 3/
      4*denom(1/4*s12^2)*mt^9*s12*s23 + 3/4*denom(1/4*s12^2)*mt^9*s12*s14 + 3/
      4*denom(1/4*s12^2)*mt^9*s12*s13 - 1/2*denom(1/4*s12^2)*mt^11*s12;
 
 .sort
id KMatrix(6,14) =  2*mt^5*s12*s14 - 2*mt^7*s12 - denom(1/2*s12)*mt^3*s12*
      s14^2*s24 - denom(1/2*s12)*mt^3*s12*s13*s14*s23 + 2*denom(1/2*s12)*mt^5*
      s12*s14*s24 + denom(1/2*s12)*mt^5*s12*s14*s23 + denom(1/2*s12)*mt^5*s12*
      s14^2 + denom(1/2*s12)*mt^5*s12*s13*s23 + denom(1/2*s12)*mt^5*s12*s13*
      s14 - denom(1/2*s12)*mt^7*s12*s24 - denom(1/2*s12)*mt^7*s12*s23 - 3*
      denom(1/2*s12)*mt^7*s12*s14 - denom(1/2*s12)*mt^7*s12*s13 + 2*denom(1/2*
      s12)*mt^9*s12 + 1/2*denom(1/4*s12^2)*mt*s12*s13*s14^2*s23*s24 - 1/2*
      denom(1/4*s12^2)*mt^3*s12*s14^2*s23*s24 - denom(1/4*s12^2)*mt^3*s12*s13*
      s14*s23*s24 - 1/2*denom(1/4*s12^2)*mt^3*s12*s13*s14^2*s24 - 1/2*denom(1/
      4*s12^2)*mt^3*s12*s13*s14^2*s23 + denom(1/4*s12^2)*mt^5*s12*s14*s23*s24
       + 1/2*denom(1/4*s12^2)*mt^5*s12*s14^2*s24 + 1/2*denom(1/4*s12^2)*mt^5*
      s12*s14^2*s23 + 1/2*denom(1/4*s12^2)*mt^5*s12*s13*s23*s24 + denom(1/4*
      s12^2)*mt^5*s12*s13*s14*s24 + denom(1/4*s12^2)*mt^5*s12*s13*s14*s23 + 1/
      2*denom(1/4*s12^2)*mt^5*s12*s13*s14^2 - 1/2*denom(1/4*s12^2)*mt^7*s12*
      s23*s24 - denom(1/4*s12^2)*mt^7*s12*s14*s24 - denom(1/4*s12^2)*mt^7*s12*
      s14*s23 - 1/2*denom(1/4*s12^2)*mt^7*s12*s14^2 - 1/2*denom(1/4*s12^2)*
      mt^7*s12*s13*s24 - 1/2*denom(1/4*s12^2)*mt^7*s12*s13*s23 - denom(1/4*
      s12^2)*mt^7*s12*s13*s14 + 1/2*denom(1/4*s12^2)*mt^9*s12*s24 + 1/2*denom(
      1/4*s12^2)*mt^9*s12*s23 + denom(1/4*s12^2)*mt^9*s12*s14 + 1/2*denom(1/4*
      s12^2)*mt^9*s12*s13 - 1/2*denom(1/4*s12^2)*mt^11*s12;
 
 .sort
id KMatrix(6,15) =  1/2*mt*s12*s14*s24^2 + mt*s12*s14*s23*s24 + 1/2*mt*s12*s14
      *s23^2 + mt*s12*s14^2*s24 + mt*s12*s14^2*s23 + 1/2*mt*s12*s14^3 + mt*s12
      *s13*s14*s24 + mt*s12*s13*s14*s23 + mt*s12*s13*s14^2 + 1/2*mt*s12*s13^2*
      s14 + mt*s12^2*s14*s24 + mt*s12^2*s14*s23 + mt*s12^2*s14^2 + mt*s12^2*
      s13*s14 + 1/2*mt*s12^3*s14 - mt*mh^2*s12*s14*s24 - mt*mh^2*s12*s14*s23
       - mt*mh^2*s12*s14^2 - mt*mh^2*s12*s13*s14 - mt*mh^2*s12^2*s14 + 1/2*mt*
      mh^4*s12*s14 - 1/2*mt^3*s12*s24^2 - mt^3*s12*s23*s24 - 1/2*mt^3*s12*
      s23^2 - 3*mt^3*s12*s14*s24 - 3*mt^3*s12*s14*s23 - 5/2*mt^3*s12*s14^2 - 
      mt^3*s12*s13*s24 - mt^3*s12*s13*s23 - 3*mt^3*s12*s13*s14 - 1/2*mt^3*s12*
      s13^2 - mt^3*s12^2*s24 - mt^3*s12^2*s23 - 3*mt^3*s12^2*s14 - mt^3*s12^2*
      s13 - 1/2*mt^3*s12^3 + mt^3*mh^2*s12*s24 + mt^3*mh^2*s12*s23 + 3*mt^3*
      mh^2*s12*s14 + mt^3*mh^2*s12*s13 + mt^3*mh^2*s12^2 - 1/2*mt^3*mh^4*s12
       + 2*mt^5*s12*s24 + 2*mt^5*s12*s23 + 4*mt^5*s12*s14 + 2*mt^5*s12*s13 + 2
      *mt^5*s12^2 - 2*mt^5*mh^2*s12 - 2*mt^7*s12 + 1/2*denom(1/2*s12)*mt*s12*
      s14^2*s23*s24 + 1/2*denom(1/2*s12)*mt*s12*s14^2*s23^2 + 1/2*denom(1/2*
      s12)*mt*s12*s14^3*s23 + 1/2*denom(1/2*s12)*mt*s12*s13*s14*s24^2 + 1/2*
      denom(1/2*s12)*mt*s12*s13*s14*s23*s24 + 1/2*denom(1/2*s12)*mt*s12*s13*
      s14^2*s24 + 1/2*denom(1/2*s12)*mt*s12*s13*s14^2*s23 + 1/2*denom(1/2*s12)
      *mt*s12*s13^2*s14*s24 + 1/2*denom(1/2*s12)*mt*s12^2*s14^2*s23 + 1/2*
      denom(1/2*s12)*mt*s12^2*s13*s14*s24 - 1/2*denom(1/2*s12)*mt*mh^2*s12*
      s14^2*s23 - 1/2*denom(1/2*s12)*mt*mh^2*s12*s13*s14*s24 - 1/2*denom(1/2*
      s12)*mt^3*s12*s14*s24^2 - 3/2*denom(1/2*s12)*mt^3*s12*s14*s23*s24 - 
      denom(1/2*s12)*mt^3*s12*s14*s23^2 - denom(1/2*s12)*mt^3*s12*s14^2*s24 - 
      5/2*denom(1/2*s12)*mt^3*s12*s14^2*s23 - 1/2*denom(1/2*s12)*mt^3*s12*
      s14^3 - 1/2*denom(1/2*s12)*mt^3*s12*s13*s24^2 - 1/2*denom(1/2*s12)*mt^3*
      s12*s13*s23*s24 - 5/2*denom(1/2*s12)*mt^3*s12*s13*s14*s24 - 3/2*denom(1/
      2*s12)*mt^3*s12*s13*s14*s23 - denom(1/2*s12)*mt^3*s12*s13*s14^2 - 1/2*
      denom(1/2*s12)*mt^3*s12*s13^2*s24 - 1/2*denom(1/2*s12)*mt^3*s12*s13^2*
      s14 - 1/2*denom(1/2*s12)*mt^3*s12^2*s14*s24 - denom(1/2*s12)*mt^3*s12^2*
      s14*s23 - 1/2*denom(1/2*s12)*mt^3*s12^2*s14^2 - 1/2*denom(1/2*s12)*mt^3*
      s12^2*s13*s24 - 1/2*denom(1/2*s12)*mt^3*s12^2*s13*s14 + 1/2*denom(1/2*
      s12)*mt^3*mh^2*s12*s14*s24 + denom(1/2*s12)*mt^3*mh^2*s12*s14*s23 + 1/2*
      denom(1/2*s12)*mt^3*mh^2*s12*s14^2 + 1/2*denom(1/2*s12)*mt^3*mh^2*s12*
      s13*s24 + 1/2*denom(1/2*s12)*mt^3*mh^2*s12*s13*s14 + 1/2*denom(1/2*s12)*
      mt^5*s12*s24^2 + denom(1/2*s12)*mt^5*s12*s23*s24 + 1/2*denom(1/2*s12)*
      mt^5*s12*s23^2 + 3*denom(1/2*s12)*mt^5*s12*s14*s24 + 4*denom(1/2*s12)*
      mt^5*s12*s14*s23 + 5/2*denom(1/2*s12)*mt^5*s12*s14^2 + 2*denom(1/2*s12)*
      mt^5*s12*s13*s24 + denom(1/2*s12)*mt^5*s12*s13*s23 + 3*denom(1/2*s12)*
      mt^5*s12*s13*s14 + 1/2*denom(1/2*s12)*mt^5*s12*s13^2 + 1/2*denom(1/2*s12
      )*mt^5*s12^2*s24 + 1/2*denom(1/2*s12)*mt^5*s12^2*s23 + 3/2*denom(1/2*s12
      )*mt^5*s12^2*s14 + 1/2*denom(1/2*s12)*mt^5*s12^2*s13 - 1/2*denom(1/2*s12
      )*mt^5*mh^2*s12*s24 - 1/2*denom(1/2*s12)*mt^5*mh^2*s12*s23 - 3/2*denom(1/
      2*s12)*mt^5*mh^2*s12*s14 - 1/2*denom(1/2*s12)*mt^5*mh^2*s12*s13 - 2*
      denom(1/2*s12)*mt^7*s12*s24 - 2*denom(1/2*s12)*mt^7*s12*s23 - 4*denom(1/
      2*s12)*mt^7*s12*s14 - 2*denom(1/2*s12)*mt^7*s12*s13 - denom(1/2*s12)*
      mt^7*s12^2 + denom(1/2*s12)*mt^7*mh^2*s12 + 2*denom(1/2*s12)*mt^9*s12 + 
      1/8*denom(1/4*s12^2)*mt*s12*s14^3*s23^2 + 1/4*denom(1/4*s12^2)*mt*s12*
      s13*s14^2*s23*s24 + 1/8*denom(1/4*s12^2)*mt*s12*s13^2*s14*s24^2 - 1/4*
      denom(1/4*s12^2)*mt^3*s12*s14^2*s23*s24 - 3/8*denom(1/4*s12^2)*mt^3*s12*
      s14^2*s23^2 - 1/4*denom(1/4*s12^2)*mt^3*s12*s14^3*s23 - 1/4*denom(1/4*
      s12^2)*mt^3*s12*s13*s14*s24^2 - 1/2*denom(1/4*s12^2)*mt^3*s12*s13*s14*
      s23*s24 - 1/4*denom(1/4*s12^2)*mt^3*s12*s13*s14^2*s24 - 1/4*denom(1/4*
      s12^2)*mt^3*s12*s13*s14^2*s23 - 1/8*denom(1/4*s12^2)*mt^3*s12*s13^2*
      s24^2 - 1/4*denom(1/4*s12^2)*mt^3*s12*s13^2*s14*s24 + 1/8*denom(1/4*
      s12^2)*mt^5*s12*s14*s24^2 + 1/2*denom(1/4*s12^2)*mt^5*s12*s14*s23*s24 + 
      3/8*denom(1/4*s12^2)*mt^5*s12*s14*s23^2 + 1/4*denom(1/4*s12^2)*mt^5*s12*
      s14^2*s24 + denom(1/4*s12^2)*mt^5*s12*s14^2*s23 + 1/8*denom(1/4*s12^2)*
      mt^5*s12*s14^3 + 1/4*denom(1/4*s12^2)*mt^5*s12*s13*s24^2 + 1/4*denom(1/4
      *s12^2)*mt^5*s12*s13*s23*s24 + denom(1/4*s12^2)*mt^5*s12*s13*s14*s24 + 1/
      2*denom(1/4*s12^2)*mt^5*s12*s13*s14*s23 + 1/4*denom(1/4*s12^2)*mt^5*s12*
      s13*s14^2 + 1/4*denom(1/4*s12^2)*mt^5*s12*s13^2*s24 + 1/8*denom(1/4*
      s12^2)*mt^5*s12*s13^2*s14 - 1/8*denom(1/4*s12^2)*mt^7*s12*s24^2 - 1/4*
      denom(1/4*s12^2)*mt^7*s12*s23*s24 - 1/8*denom(1/4*s12^2)*mt^7*s12*s23^2
       - 3/4*denom(1/4*s12^2)*mt^7*s12*s14*s24 - 5/4*denom(1/4*s12^2)*mt^7*s12
      *s14*s23 - 5/8*denom(1/4*s12^2)*mt^7*s12*s14^2 - 3/4*denom(1/4*s12^2)*
      mt^7*s12*s13*s24 - 1/4*denom(1/4*s12^2)*mt^7*s12*s13*s23 - 3/4*denom(1/4
      *s12^2)*mt^7*s12*s13*s14 - 1/8*denom(1/4*s12^2)*mt^7*s12*s13^2 + 1/2*
      denom(1/4*s12^2)*mt^9*s12*s24 + 1/2*denom(1/4*s12^2)*mt^9*s12*s23 + 
      denom(1/4*s12^2)*mt^9*s12*s14 + 1/2*denom(1/4*s12^2)*mt^9*s12*s13 - 1/2*
      denom(1/4*s12^2)*mt^11*s12;
 
 .sort
id KMatrix(6,16) =   - mt^3*s12*s14*s24 - mt^3*s12*s14*s23 - mt^3*s12*s14^2 - 
      mt^3*s12*s13*s14 - mt^3*s12^2*s14 + mt^3*mh^2*s12*s14 + mt^5*s12*s24 + 
      mt^5*s12*s23 + 3*mt^5*s12*s14 + mt^5*s12*s13 + mt^5*s12^2 - mt^5*mh^2*
      s12 - 2*mt^7*s12 + 1/2*denom(1/2*s12)*mt*s12*s14^2*s24^2 + 1/2*denom(1/2
      *s12)*mt*s12*s14^2*s23*s24 + 1/2*denom(1/2*s12)*mt*s12*s14^3*s24 + 1/2*
      denom(1/2*s12)*mt*s12*s13*s14^2*s24 + 1/2*denom(1/2*s12)*mt*s12^2*s14^2*
      s24 - 1/2*denom(1/2*s12)*mt*mh^2*s12*s14^2*s24 - denom(1/2*s12)*mt^3*s12
      *s14*s24^2 - denom(1/2*s12)*mt^3*s12*s14*s23*s24 - 5/2*denom(1/2*s12)*
      mt^3*s12*s14^2*s24 - denom(1/2*s12)*mt^3*s12*s14^2*s23 - 1/2*denom(1/2*
      s12)*mt^3*s12*s14^3 - 3/2*denom(1/2*s12)*mt^3*s12*s13*s14*s24 - 1/2*
      denom(1/2*s12)*mt^3*s12*s13*s14^2 - denom(1/2*s12)*mt^3*s12^2*s14*s24 - 
      1/2*denom(1/2*s12)*mt^3*s12^2*s14^2 + denom(1/2*s12)*mt^3*mh^2*s12*s14*
      s24 + 1/2*denom(1/2*s12)*mt^3*mh^2*s12*s14^2 + 1/2*denom(1/2*s12)*mt^5*
      s12*s24^2 + 1/2*denom(1/2*s12)*mt^5*s12*s23*s24 + 4*denom(1/2*s12)*mt^5*
      s12*s14*s24 + 2*denom(1/2*s12)*mt^5*s12*s14*s23 + 5/2*denom(1/2*s12)*
      mt^5*s12*s14^2 + denom(1/2*s12)*mt^5*s12*s13*s24 + 3/2*denom(1/2*s12)*
      mt^5*s12*s13*s14 + 1/2*denom(1/2*s12)*mt^5*s12^2*s24 + denom(1/2*s12)*
      mt^5*s12^2*s14 - 1/2*denom(1/2*s12)*mt^5*mh^2*s12*s24 - denom(1/2*s12)*
      mt^5*mh^2*s12*s14 - 2*denom(1/2*s12)*mt^7*s12*s24 - denom(1/2*s12)*mt^7*
      s12*s23 - 4*denom(1/2*s12)*mt^7*s12*s14 - denom(1/2*s12)*mt^7*s12*s13 - 
      1/2*denom(1/2*s12)*mt^7*s12^2 + 1/2*denom(1/2*s12)*mt^7*mh^2*s12 + 2*
      denom(1/2*s12)*mt^9*s12 + 1/4*denom(1/4*s12^2)*mt*s12*s14^3*s23*s24 + 1/
      4*denom(1/4*s12^2)*mt*s12*s13*s14^2*s24^2 - 1/4*denom(1/4*s12^2)*mt^3*
      s12*s14^2*s24^2 - 3/4*denom(1/4*s12^2)*mt^3*s12*s14^2*s23*s24 - 1/4*
      denom(1/4*s12^2)*mt^3*s12*s14^3*s24 - 1/4*denom(1/4*s12^2)*mt^3*s12*
      s14^3*s23 - 1/2*denom(1/4*s12^2)*mt^3*s12*s13*s14*s24^2 - 1/2*denom(1/4*
      s12^2)*mt^3*s12*s13*s14^2*s24 + 1/2*denom(1/4*s12^2)*mt^5*s12*s14*s24^2
       + 3/4*denom(1/4*s12^2)*mt^5*s12*s14*s23*s24 + 5/4*denom(1/4*s12^2)*mt^5
      *s12*s14^2*s24 + 3/4*denom(1/4*s12^2)*mt^5*s12*s14^2*s23 + 1/4*denom(1/4
      *s12^2)*mt^5*s12*s14^3 + 1/4*denom(1/4*s12^2)*mt^5*s12*s13*s24^2 + 
      denom(1/4*s12^2)*mt^5*s12*s13*s14*s24 + 1/4*denom(1/4*s12^2)*mt^5*s12*
      s13*s14^2 - 1/4*denom(1/4*s12^2)*mt^7*s12*s24^2 - 1/4*denom(1/4*s12^2)*
      mt^7*s12*s23*s24 - 7/4*denom(1/4*s12^2)*mt^7*s12*s14*s24 - 3/4*denom(1/4
      *s12^2)*mt^7*s12*s14*s23 - denom(1/4*s12^2)*mt^7*s12*s14^2 - 1/2*denom(1/
      4*s12^2)*mt^7*s12*s13*s24 - 1/2*denom(1/4*s12^2)*mt^7*s12*s13*s14 + 3/4*
      denom(1/4*s12^2)*mt^9*s12*s24 + 1/4*denom(1/4*s12^2)*mt^9*s12*s23 + 5/4*
      denom(1/4*s12^2)*mt^9*s12*s14 + 1/4*denom(1/4*s12^2)*mt^9*s12*s13 - 1/2*
      denom(1/4*s12^2)*mt^11*s12;
 
 .sort
id KMatrix(6,17) =   - mt*s14*s24 - mt*s14*s23 - mt*s14^2 + mt*s13*s24 + mt*
      s13*s23 + mt*s13^2 - mt*s12*s14 + mt*s12*s13 + mt*mh^2*s14 - mt*mh^2*s13
       + 2*mt^3*s14 - 2*mt^3*s13 - denom(1/2*s12)*mt*s14^2*s23 - denom(1/2*s12
      )*mt*s13*s14*s24 + denom(1/2*s12)*mt*s13*s14*s23 + denom(1/2*s12)*mt*
      s13^2*s24 + denom(1/2*s12)*mt^3*s14*s24 + denom(1/2*s12)*mt^3*s14*s23 + 
      denom(1/2*s12)*mt^3*s14^2 - denom(1/2*s12)*mt^3*s13*s24 - denom(1/2*s12)
      *mt^3*s13*s23 - denom(1/2*s12)*mt^3*s13^2 - 2*denom(1/2*s12)*mt^5*s14 + 
      2*denom(1/2*s12)*mt^5*s13 + 1/4*denom(1/4*s12^2)*mt*s12*s14^2*s23 + 1/4*
      denom(1/4*s12^2)*mt*s12*s13*s14*s24 - 1/4*denom(1/4*s12^2)*mt*s12*s13*
      s14*s23 - 1/4*denom(1/4*s12^2)*mt*s12*s13^2*s24 - 1/4*denom(1/4*s12^2)*
      mt^3*s12*s14*s24 - 1/4*denom(1/4*s12^2)*mt^3*s12*s14*s23 - 1/4*denom(1/4
      *s12^2)*mt^3*s12*s14^2 + 1/4*denom(1/4*s12^2)*mt^3*s12*s13*s24 + 1/4*
      denom(1/4*s12^2)*mt^3*s12*s13*s23 + 1/4*denom(1/4*s12^2)*mt^3*s12*s13^2
       + 1/2*denom(1/4*s12^2)*mt^5*s12*s14 - 1/2*denom(1/4*s12^2)*mt^5*s12*s13
      ;
 
 .sort
id KMatrix(6,18) =   - s13*s14*s24 - s13*s14*s23 - s13*s14^2 - s13^2*s14 - s12
      *s13*s14 + mh^2*s13*s14 + mt^2*s14*s24 + mt^2*s14*s23 + mt^2*s14^2 + 
      mt^2*s13*s24 + mt^2*s13*s23 + 4*mt^2*s13*s14 + mt^2*s13^2 + mt^2*s12*s14
       + mt^2*s12*s13 - mt^2*mh^2*s14 - mt^2*mh^2*s13 - mt^4*s24 - mt^4*s23 - 
      3*mt^4*s14 - 3*mt^4*s13 - mt^4*s12 + mt^4*mh^2 + 2*mt^6 - denom(1/2*s12)
      *s13*s14^2*s23 - denom(1/2*s12)*s13^2*s14*s24 + denom(1/2*s12)*mt^2*
      s14^2*s23 + 2*denom(1/2*s12)*mt^2*s13*s14*s24 + 2*denom(1/2*s12)*mt^2*
      s13*s14*s23 + denom(1/2*s12)*mt^2*s13*s14^2 + denom(1/2*s12)*mt^2*s13^2*
      s24 + denom(1/2*s12)*mt^2*s13^2*s14 - denom(1/2*s12)*mt^4*s14*s24 - 2*
      denom(1/2*s12)*mt^4*s14*s23 - denom(1/2*s12)*mt^4*s14^2 - 2*denom(1/2*
      s12)*mt^4*s13*s24 - denom(1/2*s12)*mt^4*s13*s23 - 4*denom(1/2*s12)*mt^4*
      s13*s14 - denom(1/2*s12)*mt^4*s13^2 + denom(1/2*s12)*mt^6*s24 + denom(1/
      2*s12)*mt^6*s23 + 3*denom(1/2*s12)*mt^6*s14 + 3*denom(1/2*s12)*mt^6*s13
       - 2*denom(1/2*s12)*mt^8 + 1/4*denom(1/4*s12^2)*s12*s13*s14^2*s23 + 1/4*
      denom(1/4*s12^2)*s12*s13^2*s14*s24 - 1/4*denom(1/4*s12^2)*mt^2*s12*s14^2
      *s23 - 1/2*denom(1/4*s12^2)*mt^2*s12*s13*s14*s24 - 1/2*denom(1/4*s12^2)*
      mt^2*s12*s13*s14*s23 - 1/4*denom(1/4*s12^2)*mt^2*s12*s13*s14^2 - 1/4*
      denom(1/4*s12^2)*mt^2*s12*s13^2*s24 - 1/4*denom(1/4*s12^2)*mt^2*s12*
      s13^2*s14 + 1/4*denom(1/4*s12^2)*mt^4*s12*s14*s24 + 1/2*denom(1/4*s12^2)
      *mt^4*s12*s14*s23 + 1/4*denom(1/4*s12^2)*mt^4*s12*s14^2 + 1/2*denom(1/4*
      s12^2)*mt^4*s12*s13*s24 + 1/4*denom(1/4*s12^2)*mt^4*s12*s13*s23 + denom(
      1/4*s12^2)*mt^4*s12*s13*s14 + 1/4*denom(1/4*s12^2)*mt^4*s12*s13^2 - 1/4*
      denom(1/4*s12^2)*mt^6*s12*s24 - 1/4*denom(1/4*s12^2)*mt^6*s12*s23 - 3/4*
      denom(1/4*s12^2)*mt^6*s12*s14 - 3/4*denom(1/4*s12^2)*mt^6*s12*s13 + 1/2*
      denom(1/4*s12^2)*mt^8*s12;
 
 .sort
id KMatrix(6,19) =   - 1/2*s14*s23*s24 - 1/2*s14*s23^2 - 1/2*s14^2*s23 - 1/2*
      s13*s24^2 - 1/2*s13*s23*s24 - 1/2*s13*s14*s24 - 1/2*s13*s14*s23 - 1/2*
      s13^2*s24 - 1/2*s12*s24^2 - s12*s23*s24 - 1/2*s12*s23^2 - s12*s14*s24 - 
      3/2*s12*s14*s23 - 1/2*s12*s14^2 - 3/2*s12*s13*s24 - s12*s13*s23 - s12*
      s13*s14 - 1/2*s12*s13^2 - s12^2*s24 - s12^2*s23 - s12^2*s14 - s12^2*s13
       - 1/2*s12^3 + 1/2*mh^2*s14*s23 + 1/2*mh^2*s13*s24 + mh^2*s12*s24 + mh^2
      *s12*s23 + mh^2*s12*s14 + mh^2*s12*s13 + mh^2*s12^2 - 1/2*mh^4*s12 + 1/2
      *mt^2*s24^2 + mt^2*s23*s24 + 1/2*mt^2*s23^2 + mt^2*s14*s24 + 2*mt^2*s14*
      s23 + 1/2*mt^2*s14^2 + 2*mt^2*s13*s24 + mt^2*s13*s23 + mt^2*s13*s14 + 1/
      2*mt^2*s13^2 + 7/2*mt^2*s12*s24 + 7/2*mt^2*s12*s23 + 7/2*mt^2*s12*s14 + 
      7/2*mt^2*s12*s13 + 3*mt^2*s12^2 - 1/2*mt^2*mh^2*s24 - 1/2*mt^2*mh^2*s23
       - 1/2*mt^2*mh^2*s14 - 1/2*mt^2*mh^2*s13 - 3*mt^2*mh^2*s12 - 2*mt^4*s24
       - 2*mt^4*s23 - 2*mt^4*s14 - 2*mt^4*s13 - 5*mt^4*s12 + mt^4*mh^2 + 2*
      mt^6 - 1/2*denom(1/2*s12)*s14^2*s23^2 - denom(1/2*s12)*s13*s14*s23*s24
       - 1/2*denom(1/2*s12)*s13^2*s24^2 - 1/2*denom(1/2*s12)*s12*s14*s23*s24
       - 1/2*denom(1/2*s12)*s12*s14*s23^2 - 1/2*denom(1/2*s12)*s12*s14^2*s23
       - 1/2*denom(1/2*s12)*s12*s13*s24^2 - 1/2*denom(1/2*s12)*s12*s13*s23*s24
       - 1/2*denom(1/2*s12)*s12*s13*s14*s24 - 1/2*denom(1/2*s12)*s12*s13*s14*
      s23 - 1/2*denom(1/2*s12)*s12*s13^2*s24 - 1/2*denom(1/2*s12)*s12^2*s14*
      s23 - 1/2*denom(1/2*s12)*s12^2*s13*s24 + 1/2*denom(1/2*s12)*mh^2*s12*s14
      *s23 + 1/2*denom(1/2*s12)*mh^2*s12*s13*s24 + denom(1/2*s12)*mt^2*s14*s23
      *s24 + denom(1/2*s12)*mt^2*s14*s23^2 + denom(1/2*s12)*mt^2*s14^2*s23 + 
      denom(1/2*s12)*mt^2*s13*s24^2 + denom(1/2*s12)*mt^2*s13*s23*s24 + denom(
      1/2*s12)*mt^2*s13*s14*s24 + denom(1/2*s12)*mt^2*s13*s14*s23 + denom(1/2*
      s12)*mt^2*s13^2*s24 + 1/2*denom(1/2*s12)*mt^2*s12*s24^2 + denom(1/2*s12)
      *mt^2*s12*s23*s24 + 1/2*denom(1/2*s12)*mt^2*s12*s23^2 + denom(1/2*s12)*
      mt^2*s12*s14*s24 + 3*denom(1/2*s12)*mt^2*s12*s14*s23 + 1/2*denom(1/2*s12
      )*mt^2*s12*s14^2 + 3*denom(1/2*s12)*mt^2*s12*s13*s24 + denom(1/2*s12)*
      mt^2*s12*s13*s23 + denom(1/2*s12)*mt^2*s12*s13*s14 + 1/2*denom(1/2*s12)*
      mt^2*s12*s13^2 + 1/2*denom(1/2*s12)*mt^2*s12^2*s24 + 1/2*denom(1/2*s12)*
      mt^2*s12^2*s23 + 1/2*denom(1/2*s12)*mt^2*s12^2*s14 + 1/2*denom(1/2*s12)*
      mt^2*s12^2*s13 - 1/2*denom(1/2*s12)*mt^2*mh^2*s12*s24 - 1/2*denom(1/2*
      s12)*mt^2*mh^2*s12*s23 - 1/2*denom(1/2*s12)*mt^2*mh^2*s12*s14 - 1/2*
      denom(1/2*s12)*mt^2*mh^2*s12*s13 - 1/2*denom(1/2*s12)*mt^4*s24^2 - 
      denom(1/2*s12)*mt^4*s23*s24 - 1/2*denom(1/2*s12)*mt^4*s23^2 - denom(1/2*
      s12)*mt^4*s14*s24 - 3*denom(1/2*s12)*mt^4*s14*s23 - 1/2*denom(1/2*s12)*
      mt^4*s14^2 - 3*denom(1/2*s12)*mt^4*s13*s24 - denom(1/2*s12)*mt^4*s13*s23
       - denom(1/2*s12)*mt^4*s13*s14 - 1/2*denom(1/2*s12)*mt^4*s13^2 - 3*
      denom(1/2*s12)*mt^4*s12*s24 - 3*denom(1/2*s12)*mt^4*s12*s23 - 3*denom(1/
      2*s12)*mt^4*s12*s14 - 3*denom(1/2*s12)*mt^4*s12*s13 - denom(1/2*s12)*
      mt^4*s12^2 + denom(1/2*s12)*mt^4*mh^2*s12 + 2*denom(1/2*s12)*mt^6*s24 + 
      2*denom(1/2*s12)*mt^6*s23 + 2*denom(1/2*s12)*mt^6*s14 + 2*denom(1/2*s12)
      *mt^6*s13 + 4*denom(1/2*s12)*mt^6*s12 - 2*denom(1/2*s12)*mt^8 + 1/8*
      denom(1/4*s12^2)*s12*s14^2*s23^2 + 1/4*denom(1/4*s12^2)*s12*s13*s14*s23*
      s24 + 1/8*denom(1/4*s12^2)*s12*s13^2*s24^2 + 1/8*denom(1/4*s12^2)*s12^2*
      s14*s23*s24 + 1/8*denom(1/4*s12^2)*s12^2*s14*s23^2 + 1/8*denom(1/4*s12^2
      )*s12^2*s14^2*s23 + 1/8*denom(1/4*s12^2)*s12^2*s13*s24^2 + 1/8*denom(1/4
      *s12^2)*s12^2*s13*s23*s24 + 1/8*denom(1/4*s12^2)*s12^2*s13*s14*s24 + 1/8
      *denom(1/4*s12^2)*s12^2*s13*s14*s23 + 1/8*denom(1/4*s12^2)*s12^2*s13^2*
      s24 + 1/8*denom(1/4*s12^2)*s12^3*s14*s23 + 1/8*denom(1/4*s12^2)*s12^3*
      s13*s24 - 1/8*denom(1/4*s12^2)*mh^2*s12^2*s14*s23 - 1/8*denom(1/4*s12^2)
      *mh^2*s12^2*s13*s24 - 1/4*denom(1/4*s12^2)*mt^2*s12*s14*s23*s24 - 1/4*
      denom(1/4*s12^2)*mt^2*s12*s14*s23^2 - 1/4*denom(1/4*s12^2)*mt^2*s12*
      s14^2*s23 - 1/4*denom(1/4*s12^2)*mt^2*s12*s13*s24^2 - 1/4*denom(1/4*
      s12^2)*mt^2*s12*s13*s23*s24 - 1/4*denom(1/4*s12^2)*mt^2*s12*s13*s14*s24
       - 1/4*denom(1/4*s12^2)*mt^2*s12*s13*s14*s23 - 1/4*denom(1/4*s12^2)*mt^2
      *s12*s13^2*s24 - 1/8*denom(1/4*s12^2)*mt^2*s12^2*s24^2 - 1/4*denom(1/4*
      s12^2)*mt^2*s12^2*s23*s24 - 1/8*denom(1/4*s12^2)*mt^2*s12^2*s23^2 - 1/4*
      denom(1/4*s12^2)*mt^2*s12^2*s14*s24 - 3/4*denom(1/4*s12^2)*mt^2*s12^2*
      s14*s23 - 1/8*denom(1/4*s12^2)*mt^2*s12^2*s14^2 - 3/4*denom(1/4*s12^2)*
      mt^2*s12^2*s13*s24 - 1/4*denom(1/4*s12^2)*mt^2*s12^2*s13*s23 - 1/4*
      denom(1/4*s12^2)*mt^2*s12^2*s13*s14 - 1/8*denom(1/4*s12^2)*mt^2*s12^2*
      s13^2 - 1/8*denom(1/4*s12^2)*mt^2*s12^3*s24 - 1/8*denom(1/4*s12^2)*mt^2*
      s12^3*s23 - 1/8*denom(1/4*s12^2)*mt^2*s12^3*s14 - 1/8*denom(1/4*s12^2)*
      mt^2*s12^3*s13 + 1/8*denom(1/4*s12^2)*mt^2*mh^2*s12^2*s24 + 1/8*denom(1/
      4*s12^2)*mt^2*mh^2*s12^2*s23 + 1/8*denom(1/4*s12^2)*mt^2*mh^2*s12^2*s14
       + 1/8*denom(1/4*s12^2)*mt^2*mh^2*s12^2*s13 + 1/8*denom(1/4*s12^2)*mt^4*
      s12*s24^2 + 1/4*denom(1/4*s12^2)*mt^4*s12*s23*s24 + 1/8*denom(1/4*s12^2)
      *mt^4*s12*s23^2 + 1/4*denom(1/4*s12^2)*mt^4*s12*s14*s24 + 3/4*denom(1/4*
      s12^2)*mt^4*s12*s14*s23 + 1/8*denom(1/4*s12^2)*mt^4*s12*s14^2 + 3/4*
      denom(1/4*s12^2)*mt^4*s12*s13*s24 + 1/4*denom(1/4*s12^2)*mt^4*s12*s13*
      s23 + 1/4*denom(1/4*s12^2)*mt^4*s12*s13*s14 + 1/8*denom(1/4*s12^2)*mt^4*
      s12*s13^2 + 3/4*denom(1/4*s12^2)*mt^4*s12^2*s24 + 3/4*denom(1/4*s12^2)*
      mt^4*s12^2*s23 + 3/4*denom(1/4*s12^2)*mt^4*s12^2*s14 + 3/4*denom(1/4*
      s12^2)*mt^4*s12^2*s13 + 1/4*denom(1/4*s12^2)*mt^4*s12^3 - 1/4*denom(1/4*
      s12^2)*mt^4*mh^2*s12^2 - 1/2*denom(1/4*s12^2)*mt^6*s12*s24 - 1/2*denom(1/
      4*s12^2)*mt^6*s12*s23 - 1/2*denom(1/4*s12^2)*mt^6*s12*s14 - 1/2*denom(1/
      4*s12^2)*mt^6*s12*s13 - denom(1/4*s12^2)*mt^6*s12^2 + 1/2*denom(1/4*
      s12^2)*mt^8*s12;
 
 .sort
id KMatrix(6,20) =  1/2*s13*s24^2 + s13*s23*s24 + 1/2*s13*s23^2 + s13*s14*s24
       + s13*s14*s23 + 1/2*s13*s14^2 + s13^2*s24 + s13^2*s23 + s13^2*s14 + 1/2
      *s13^3 + s12*s13*s24 + s12*s13*s23 + s12*s13*s14 + s12*s13^2 + 1/2*s12^2
      *s13 - mh^2*s13*s24 - mh^2*s13*s23 - mh^2*s13*s14 - mh^2*s13^2 - mh^2*
      s12*s13 + 1/2*mh^4*s13 - 1/2*mt^2*s24^2 - mt^2*s23*s24 - 1/2*mt^2*s23^2
       - 2*mt^2*s14*s24 - 2*mt^2*s14*s23 - 3/2*mt^2*s14^2 - 3*mt^2*s13*s24 - 3
      *mt^2*s13*s23 - 4*mt^2*s13*s14 - 5/2*mt^2*s13^2 - mt^2*s12*s24 - mt^2*
      s12*s23 - 2*mt^2*s12*s14 - 3*mt^2*s12*s13 - 1/2*mt^2*s12^2 + mt^2*mh^2*
      s24 + mt^2*mh^2*s23 + 2*mt^2*mh^2*s14 + 3*mt^2*mh^2*s13 + mt^2*mh^2*s12
       - 1/2*mt^2*mh^4 + 3*mt^4*s24 + 3*mt^4*s23 + 5*mt^4*s14 + 5*mt^4*s13 + 3
      *mt^4*s12 - 3*mt^4*mh^2 - 4*mt^6 + denom(1/2*s12)*s13*s14*s23*s24 + 
      denom(1/2*s12)*s13*s14*s23^2 + denom(1/2*s12)*s13*s14^2*s23 + 1/2*denom(
      1/2*s12)*s13^2*s24^2 + 1/2*denom(1/2*s12)*s13^2*s23*s24 + 1/2*denom(1/2*
      s12)*s13^2*s14*s24 + denom(1/2*s12)*s13^2*s14*s23 + 1/2*denom(1/2*s12)*
      s13^3*s24 + denom(1/2*s12)*s12*s13*s14*s23 + 1/2*denom(1/2*s12)*s12*
      s13^2*s24 - denom(1/2*s12)*mh^2*s13*s14*s23 - 1/2*denom(1/2*s12)*mh^2*
      s13^2*s24 - denom(1/2*s12)*mt^2*s14*s23*s24 - denom(1/2*s12)*mt^2*s14*
      s23^2 - 3/2*denom(1/2*s12)*mt^2*s14^2*s23 - denom(1/2*s12)*mt^2*s13*
      s24^2 - 2*denom(1/2*s12)*mt^2*s13*s23*s24 - denom(1/2*s12)*mt^2*s13*
      s23^2 - 5/2*denom(1/2*s12)*mt^2*s13*s14*s24 - 5*denom(1/2*s12)*mt^2*s13*
      s14*s23 - denom(1/2*s12)*mt^2*s13*s14^2 - 5/2*denom(1/2*s12)*mt^2*s13^2*
      s24 - 3/2*denom(1/2*s12)*mt^2*s13^2*s23 - 3/2*denom(1/2*s12)*mt^2*s13^2*
      s14 - 1/2*denom(1/2*s12)*mt^2*s13^3 - denom(1/2*s12)*mt^2*s12*s14*s23 - 
      denom(1/2*s12)*mt^2*s12*s13*s24 - denom(1/2*s12)*mt^2*s12*s13*s23 - 
      denom(1/2*s12)*mt^2*s12*s13*s14 - 1/2*denom(1/2*s12)*mt^2*s12*s13^2 + 
      denom(1/2*s12)*mt^2*mh^2*s14*s23 + denom(1/2*s12)*mt^2*mh^2*s13*s24 + 
      denom(1/2*s12)*mt^2*mh^2*s13*s23 + denom(1/2*s12)*mt^2*mh^2*s13*s14 + 1/
      2*denom(1/2*s12)*mt^2*mh^2*s13^2 + 1/2*denom(1/2*s12)*mt^4*s24^2 + 3/2*
      denom(1/2*s12)*mt^4*s23*s24 + denom(1/2*s12)*mt^4*s23^2 + 2*denom(1/2*
      s12)*mt^4*s14*s24 + 5*denom(1/2*s12)*mt^4*s14*s23 + 3/2*denom(1/2*s12)*
      mt^4*s14^2 + 5*denom(1/2*s12)*mt^4*s13*s24 + 5*denom(1/2*s12)*mt^4*s13*
      s23 + 11/2*denom(1/2*s12)*mt^4*s13*s14 + 3*denom(1/2*s12)*mt^4*s13^2 + 1/
      2*denom(1/2*s12)*mt^4*s12*s24 + denom(1/2*s12)*mt^4*s12*s23 + denom(1/2*
      s12)*mt^4*s12*s14 + 2*denom(1/2*s12)*mt^4*s12*s13 - 1/2*denom(1/2*s12)*
      mt^4*mh^2*s24 - denom(1/2*s12)*mt^4*mh^2*s23 - denom(1/2*s12)*mt^4*mh^2*
      s14 - 2*denom(1/2*s12)*mt^4*mh^2*s13 - 3*denom(1/2*s12)*mt^6*s24 - 4*
      denom(1/2*s12)*mt^6*s23 - 5*denom(1/2*s12)*mt^6*s14 - 6*denom(1/2*s12)*
      mt^6*s13 - 3/2*denom(1/2*s12)*mt^6*s12 + 3/2*denom(1/2*s12)*mt^6*mh^2 + 
      4*denom(1/2*s12)*mt^8 + 3/8*denom(1/4*s12^2)*s13*s14^2*s23^2 + 1/2*
      denom(1/4*s12^2)*s13^2*s14*s23*s24 + 1/8*denom(1/4*s12^2)*s13^3*s24^2 - 
      3/8*denom(1/4*s12^2)*mt^2*s14^2*s23^2 - denom(1/4*s12^2)*mt^2*s13*s14*
      s23*s24 - 3/4*denom(1/4*s12^2)*mt^2*s13*s14*s23^2 - 3/4*denom(1/4*s12^2)
      *mt^2*s13*s14^2*s23 - 3/8*denom(1/4*s12^2)*mt^2*s13^2*s24^2 - 1/2*denom(
      1/4*s12^2)*mt^2*s13^2*s23*s24 - 1/2*denom(1/4*s12^2)*mt^2*s13^2*s14*s24
       - 1/2*denom(1/4*s12^2)*mt^2*s13^2*s14*s23 - 1/4*denom(1/4*s12^2)*mt^2*
      s13^3*s24 + 1/2*denom(1/4*s12^2)*mt^4*s14*s23*s24 + 3/4*denom(1/4*s12^2)
      *mt^4*s14*s23^2 + 3/4*denom(1/4*s12^2)*mt^4*s14^2*s23 + 3/8*denom(1/4*
      s12^2)*mt^4*s13*s24^2 + denom(1/4*s12^2)*mt^4*s13*s23*s24 + 3/8*denom(1/
      4*s12^2)*mt^4*s13*s23^2 + denom(1/4*s12^2)*mt^4*s13*s14*s24 + 5/2*denom(
      1/4*s12^2)*mt^4*s13*s14*s23 + 3/8*denom(1/4*s12^2)*mt^4*s13*s14^2 + 5/4*
      denom(1/4*s12^2)*mt^4*s13^2*s24 + 1/2*denom(1/4*s12^2)*mt^4*s13^2*s23 + 
      1/2*denom(1/4*s12^2)*mt^4*s13^2*s14 + 1/8*denom(1/4*s12^2)*mt^4*s13^3 - 
      1/8*denom(1/4*s12^2)*mt^6*s24^2 - 1/2*denom(1/4*s12^2)*mt^6*s23*s24 - 3/
      8*denom(1/4*s12^2)*mt^6*s23^2 - 1/2*denom(1/4*s12^2)*mt^6*s14*s24 - 2*
      denom(1/4*s12^2)*mt^6*s14*s23 - 3/8*denom(1/4*s12^2)*mt^6*s14^2 - 7/4*
      denom(1/4*s12^2)*mt^6*s13*s24 - 7/4*denom(1/4*s12^2)*mt^6*s13*s23 - 7/4*
      denom(1/4*s12^2)*mt^6*s13*s14 - 7/8*denom(1/4*s12^2)*mt^6*s13^2 + 3/4*
      denom(1/4*s12^2)*mt^8*s24 + 5/4*denom(1/4*s12^2)*mt^8*s23 + 5/4*denom(1/
      4*s12^2)*mt^8*s14 + 7/4*denom(1/4*s12^2)*mt^8*s13 - denom(1/4*s12^2)*
      mt^10;
 
 .sort
id KMatrix(6,21) =   - mt^2*s13*s24 - mt^2*s13*s23 - mt^2*s13*s14 - mt^2*s13^2
       - mt^2*s12*s13 + mt^2*mh^2*s13 + mt^4*s24 + mt^4*s23 + 3*mt^4*s14 + 3*
      mt^4*s13 + mt^4*s12 - mt^4*mh^2 - 4*mt^6 + 1/2*denom(1/2*s12)*s13*s14*
      s24^2 + 1/2*denom(1/2*s12)*s13*s14*s23*s24 + 1/2*denom(1/2*s12)*s13*
      s14^2*s24 + 1/2*denom(1/2*s12)*s13^2*s14*s24 + 1/2*denom(1/2*s12)*s12*
      s13*s14*s24 - 1/2*denom(1/2*s12)*mh^2*s13*s14*s24 - 1/2*denom(1/2*s12)*
      mt^2*s14*s24^2 - 1/2*denom(1/2*s12)*mt^2*s14*s23*s24 - 3/2*denom(1/2*s12
      )*mt^2*s14^2*s24 - 1/2*denom(1/2*s12)*mt^2*s13*s24^2 - 1/2*denom(1/2*s12
      )*mt^2*s13*s23*s24 - 5/2*denom(1/2*s12)*mt^2*s13*s14*s24 - 2*denom(1/2*
      s12)*mt^2*s13*s14*s23 - 1/2*denom(1/2*s12)*mt^2*s13*s14^2 - denom(1/2*
      s12)*mt^2*s13^2*s24 - 1/2*denom(1/2*s12)*mt^2*s13^2*s14 - 1/2*denom(1/2*
      s12)*mt^2*s12*s14*s24 - 1/2*denom(1/2*s12)*mt^2*s12*s13*s24 - 1/2*denom(
      1/2*s12)*mt^2*s12*s13*s14 + 1/2*denom(1/2*s12)*mt^2*mh^2*s14*s24 + 1/2*
      denom(1/2*s12)*mt^2*mh^2*s13*s24 + 1/2*denom(1/2*s12)*mt^2*mh^2*s13*s14
       + 1/2*denom(1/2*s12)*mt^4*s24^2 + 1/2*denom(1/2*s12)*mt^4*s23*s24 + 4*
      denom(1/2*s12)*mt^4*s14*s24 + 2*denom(1/2*s12)*mt^4*s14*s23 + 3/2*denom(
      1/2*s12)*mt^4*s14^2 + 3*denom(1/2*s12)*mt^4*s13*s24 + 2*denom(1/2*s12)*
      mt^4*s13*s23 + 7/2*denom(1/2*s12)*mt^4*s13*s14 + denom(1/2*s12)*mt^4*
      s13^2 + 1/2*denom(1/2*s12)*mt^4*s12*s24 + 1/2*denom(1/2*s12)*mt^4*s12*
      s14 + 1/2*denom(1/2*s12)*mt^4*s12*s13 - 1/2*denom(1/2*s12)*mt^4*mh^2*s24
       - 1/2*denom(1/2*s12)*mt^4*mh^2*s14 - 1/2*denom(1/2*s12)*mt^4*mh^2*s13
       - 3*denom(1/2*s12)*mt^6*s24 - 2*denom(1/2*s12)*mt^6*s23 - 5*denom(1/2*
      s12)*mt^6*s14 - 4*denom(1/2*s12)*mt^6*s13 - 1/2*denom(1/2*s12)*mt^6*s12
       + 1/2*denom(1/2*s12)*mt^6*mh^2 + 4*denom(1/2*s12)*mt^8 + 3/4*denom(1/4*
      s12^2)*s13*s14^2*s23*s24 + 1/4*denom(1/4*s12^2)*s13^2*s14*s24^2 - 3/4*
      denom(1/4*s12^2)*mt^2*s14^2*s23*s24 - 1/2*denom(1/4*s12^2)*mt^2*s13*s14*
      s24^2 - 3/2*denom(1/4*s12^2)*mt^2*s13*s14*s23*s24 - 3/4*denom(1/4*s12^2)
      *mt^2*s13*s14^2*s24 - 3/4*denom(1/4*s12^2)*mt^2*s13*s14^2*s23 - 1/4*
      denom(1/4*s12^2)*mt^2*s13^2*s24^2 - 1/2*denom(1/4*s12^2)*mt^2*s13^2*s14*
      s24 + 1/4*denom(1/4*s12^2)*mt^4*s14*s24^2 + 3/2*denom(1/4*s12^2)*mt^4*
      s14*s23*s24 + 3/4*denom(1/4*s12^2)*mt^4*s14^2*s24 + 3/4*denom(1/4*s12^2)
      *mt^4*s14^2*s23 + 1/2*denom(1/4*s12^2)*mt^4*s13*s24^2 + 3/4*denom(1/4*
      s12^2)*mt^4*s13*s23*s24 + 5/2*denom(1/4*s12^2)*mt^4*s13*s14*s24 + 3/2*
      denom(1/4*s12^2)*mt^4*s13*s14*s23 + 3/4*denom(1/4*s12^2)*mt^4*s13*s14^2
       + 1/2*denom(1/4*s12^2)*mt^4*s13^2*s24 + 1/4*denom(1/4*s12^2)*mt^4*s13^2
      *s14 - 1/4*denom(1/4*s12^2)*mt^6*s24^2 - 3/4*denom(1/4*s12^2)*mt^6*s23*
      s24 - 2*denom(1/4*s12^2)*mt^6*s14*s24 - 3/2*denom(1/4*s12^2)*mt^6*s14*
      s23 - 3/4*denom(1/4*s12^2)*mt^6*s14^2 - 7/4*denom(1/4*s12^2)*mt^6*s13*
      s24 - 3/4*denom(1/4*s12^2)*mt^6*s13*s23 - 2*denom(1/4*s12^2)*mt^6*s13*
      s14 - 1/4*denom(1/4*s12^2)*mt^6*s13^2 + 5/4*denom(1/4*s12^2)*mt^8*s24 + 
      3/4*denom(1/4*s12^2)*mt^8*s23 + 7/4*denom(1/4*s12^2)*mt^8*s14 + 5/4*
      denom(1/4*s12^2)*mt^8*s13 - denom(1/4*s12^2)*mt^10;
 
 .sort
id KMatrix(6,22) =   - mt^2*s14*s24 - mt^2*s14*s23 - mt^2*s14^2 - mt^2*s13*s14
       - mt^2*s12*s14 + mt^2*mh^2*s14 + mt^4*s24 + mt^4*s23 + 3*mt^4*s14 + 3*
      mt^4*s13 + mt^4*s12 - mt^4*mh^2 - 4*mt^6 + 1/2*denom(1/2*s12)*s13*s14*
      s23*s24 + 1/2*denom(1/2*s12)*s13*s14*s23^2 + 1/2*denom(1/2*s12)*s13*
      s14^2*s23 + 1/2*denom(1/2*s12)*s13^2*s14*s23 + 1/2*denom(1/2*s12)*s12*
      s13*s14*s23 - 1/2*denom(1/2*s12)*mh^2*s13*s14*s23 - 1/2*denom(1/2*s12)*
      mt^2*s14*s23*s24 - 1/2*denom(1/2*s12)*mt^2*s14*s23^2 - denom(1/2*s12)*
      mt^2*s14^2*s23 - 1/2*denom(1/2*s12)*mt^2*s13*s23*s24 - 1/2*denom(1/2*s12
      )*mt^2*s13*s23^2 - 2*denom(1/2*s12)*mt^2*s13*s14*s24 - 5/2*denom(1/2*s12
      )*mt^2*s13*s14*s23 - 1/2*denom(1/2*s12)*mt^2*s13*s14^2 - 3/2*denom(1/2*
      s12)*mt^2*s13^2*s23 - 1/2*denom(1/2*s12)*mt^2*s13^2*s14 - 1/2*denom(1/2*
      s12)*mt^2*s12*s14*s23 - 1/2*denom(1/2*s12)*mt^2*s12*s13*s23 - 1/2*denom(
      1/2*s12)*mt^2*s12*s13*s14 + 1/2*denom(1/2*s12)*mt^2*mh^2*s14*s23 + 1/2*
      denom(1/2*s12)*mt^2*mh^2*s13*s23 + 1/2*denom(1/2*s12)*mt^2*mh^2*s13*s14
       + 1/2*denom(1/2*s12)*mt^4*s23*s24 + 1/2*denom(1/2*s12)*mt^4*s23^2 + 2*
      denom(1/2*s12)*mt^4*s14*s24 + 3*denom(1/2*s12)*mt^4*s14*s23 + denom(1/2*
      s12)*mt^4*s14^2 + 2*denom(1/2*s12)*mt^4*s13*s24 + 4*denom(1/2*s12)*mt^4*
      s13*s23 + 7/2*denom(1/2*s12)*mt^4*s13*s14 + 3/2*denom(1/2*s12)*mt^4*
      s13^2 + 1/2*denom(1/2*s12)*mt^4*s12*s23 + 1/2*denom(1/2*s12)*mt^4*s12*
      s14 + 1/2*denom(1/2*s12)*mt^4*s12*s13 - 1/2*denom(1/2*s12)*mt^4*mh^2*s23
       - 1/2*denom(1/2*s12)*mt^4*mh^2*s14 - 1/2*denom(1/2*s12)*mt^4*mh^2*s13
       - 2*denom(1/2*s12)*mt^6*s24 - 3*denom(1/2*s12)*mt^6*s23 - 4*denom(1/2*
      s12)*mt^6*s14 - 5*denom(1/2*s12)*mt^6*s13 - 1/2*denom(1/2*s12)*mt^6*s12
       + 1/2*denom(1/2*s12)*mt^6*mh^2 + 4*denom(1/2*s12)*mt^8 + 1/4*denom(1/4*
      s12^2)*s13*s14^2*s23^2 + 3/4*denom(1/4*s12^2)*s13^2*s14*s23*s24 - 1/4*
      denom(1/4*s12^2)*mt^2*s14^2*s23^2 - 3/2*denom(1/4*s12^2)*mt^2*s13*s14*
      s23*s24 - 1/2*denom(1/4*s12^2)*mt^2*s13*s14*s23^2 - 1/2*denom(1/4*s12^2)
      *mt^2*s13*s14^2*s23 - 3/4*denom(1/4*s12^2)*mt^2*s13^2*s23*s24 - 3/4*
      denom(1/4*s12^2)*mt^2*s13^2*s14*s24 - 3/4*denom(1/4*s12^2)*mt^2*s13^2*
      s14*s23 + 3/4*denom(1/4*s12^2)*mt^4*s14*s23*s24 + 1/2*denom(1/4*s12^2)*
      mt^4*s14*s23^2 + 1/2*denom(1/4*s12^2)*mt^4*s14^2*s23 + 3/2*denom(1/4*
      s12^2)*mt^4*s13*s23*s24 + 1/4*denom(1/4*s12^2)*mt^4*s13*s23^2 + 3/2*
      denom(1/4*s12^2)*mt^4*s13*s14*s24 + 5/2*denom(1/4*s12^2)*mt^4*s13*s14*
      s23 + 1/4*denom(1/4*s12^2)*mt^4*s13*s14^2 + 3/4*denom(1/4*s12^2)*mt^4*
      s13^2*s24 + 3/4*denom(1/4*s12^2)*mt^4*s13^2*s23 + 3/4*denom(1/4*s12^2)*
      mt^4*s13^2*s14 - 3/4*denom(1/4*s12^2)*mt^6*s23*s24 - 1/4*denom(1/4*s12^2
      )*mt^6*s23^2 - 3/4*denom(1/4*s12^2)*mt^6*s14*s24 - 7/4*denom(1/4*s12^2)*
      mt^6*s14*s23 - 1/4*denom(1/4*s12^2)*mt^6*s14^2 - 3/2*denom(1/4*s12^2)*
      mt^6*s13*s24 - 2*denom(1/4*s12^2)*mt^6*s13*s23 - 2*denom(1/4*s12^2)*mt^6
      *s13*s14 - 3/4*denom(1/4*s12^2)*mt^6*s13^2 + 3/4*denom(1/4*s12^2)*mt^8*
      s24 + 5/4*denom(1/4*s12^2)*mt^8*s23 + 5/4*denom(1/4*s12^2)*mt^8*s14 + 7/
      4*denom(1/4*s12^2)*mt^8*s13 - denom(1/4*s12^2)*mt^10;
 
 .sort
id KMatrix(6,23) =  1/2*s14*s24^2 + s14*s23*s24 + 1/2*s14*s23^2 + s14^2*s24 + 
      s14^2*s23 + 1/2*s14^3 + s13*s14*s24 + s13*s14*s23 + s13*s14^2 + 1/2*
      s13^2*s14 + s12*s14*s24 + s12*s14*s23 + s12*s14^2 + s12*s13*s14 + 1/2*
      s12^2*s14 - mh^2*s14*s24 - mh^2*s14*s23 - mh^2*s14^2 - mh^2*s13*s14 - 
      mh^2*s12*s14 + 1/2*mh^4*s14 - 1/2*mt^2*s24^2 - mt^2*s23*s24 - 1/2*mt^2*
      s23^2 - 3*mt^2*s14*s24 - 3*mt^2*s14*s23 - 5/2*mt^2*s14^2 - 2*mt^2*s13*
      s24 - 2*mt^2*s13*s23 - 4*mt^2*s13*s14 - 3/2*mt^2*s13^2 - mt^2*s12*s24 - 
      mt^2*s12*s23 - 3*mt^2*s12*s14 - 2*mt^2*s12*s13 - 1/2*mt^2*s12^2 + mt^2*
      mh^2*s24 + mt^2*mh^2*s23 + 3*mt^2*mh^2*s14 + 2*mt^2*mh^2*s13 + mt^2*mh^2
      *s12 - 1/2*mt^2*mh^4 + 3*mt^4*s24 + 3*mt^4*s23 + 5*mt^4*s14 + 5*mt^4*s13
       + 3*mt^4*s12 - 3*mt^4*mh^2 - 4*mt^6 + 1/2*denom(1/2*s12)*s14^2*s23*s24
       + 1/2*denom(1/2*s12)*s14^2*s23^2 + 1/2*denom(1/2*s12)*s14^3*s23 + 
      denom(1/2*s12)*s13*s14*s24^2 + denom(1/2*s12)*s13*s14*s23*s24 + denom(1/
      2*s12)*s13*s14^2*s24 + 1/2*denom(1/2*s12)*s13*s14^2*s23 + denom(1/2*s12)
      *s13^2*s14*s24 + 1/2*denom(1/2*s12)*s12*s14^2*s23 + denom(1/2*s12)*s12*
      s13*s14*s24 - 1/2*denom(1/2*s12)*mh^2*s14^2*s23 - denom(1/2*s12)*mh^2*
      s13*s14*s24 - denom(1/2*s12)*mt^2*s14*s24^2 - 2*denom(1/2*s12)*mt^2*s14*
      s23*s24 - denom(1/2*s12)*mt^2*s14*s23^2 - 3/2*denom(1/2*s12)*mt^2*s14^2*
      s24 - 5/2*denom(1/2*s12)*mt^2*s14^2*s23 - 1/2*denom(1/2*s12)*mt^2*s14^3
       - denom(1/2*s12)*mt^2*s13*s24^2 - denom(1/2*s12)*mt^2*s13*s23*s24 - 5*
      denom(1/2*s12)*mt^2*s13*s14*s24 - 5/2*denom(1/2*s12)*mt^2*s13*s14*s23 - 
      3/2*denom(1/2*s12)*mt^2*s13*s14^2 - 3/2*denom(1/2*s12)*mt^2*s13^2*s24 - 
      denom(1/2*s12)*mt^2*s13^2*s14 - denom(1/2*s12)*mt^2*s12*s14*s24 - denom(
      1/2*s12)*mt^2*s12*s14*s23 - 1/2*denom(1/2*s12)*mt^2*s12*s14^2 - denom(1/
      2*s12)*mt^2*s12*s13*s24 - denom(1/2*s12)*mt^2*s12*s13*s14 + denom(1/2*
      s12)*mt^2*mh^2*s14*s24 + denom(1/2*s12)*mt^2*mh^2*s14*s23 + 1/2*denom(1/
      2*s12)*mt^2*mh^2*s14^2 + denom(1/2*s12)*mt^2*mh^2*s13*s24 + denom(1/2*
      s12)*mt^2*mh^2*s13*s14 + denom(1/2*s12)*mt^4*s24^2 + 3/2*denom(1/2*s12)*
      mt^4*s23*s24 + 1/2*denom(1/2*s12)*mt^4*s23^2 + 5*denom(1/2*s12)*mt^4*s14
      *s24 + 5*denom(1/2*s12)*mt^4*s14*s23 + 3*denom(1/2*s12)*mt^4*s14^2 + 5*
      denom(1/2*s12)*mt^4*s13*s24 + 2*denom(1/2*s12)*mt^4*s13*s23 + 11/2*
      denom(1/2*s12)*mt^4*s13*s14 + 3/2*denom(1/2*s12)*mt^4*s13^2 + denom(1/2*
      s12)*mt^4*s12*s24 + 1/2*denom(1/2*s12)*mt^4*s12*s23 + 2*denom(1/2*s12)*
      mt^4*s12*s14 + denom(1/2*s12)*mt^4*s12*s13 - denom(1/2*s12)*mt^4*mh^2*
      s24 - 1/2*denom(1/2*s12)*mt^4*mh^2*s23 - 2*denom(1/2*s12)*mt^4*mh^2*s14
       - denom(1/2*s12)*mt^4*mh^2*s13 - 4*denom(1/2*s12)*mt^6*s24 - 3*denom(1/
      2*s12)*mt^6*s23 - 6*denom(1/2*s12)*mt^6*s14 - 5*denom(1/2*s12)*mt^6*s13
       - 3/2*denom(1/2*s12)*mt^6*s12 + 3/2*denom(1/2*s12)*mt^6*mh^2 + 4*denom(
      1/2*s12)*mt^8 + 1/8*denom(1/4*s12^2)*s14^3*s23^2 + 1/2*denom(1/4*s12^2)*
      s13*s14^2*s23*s24 + 3/8*denom(1/4*s12^2)*s13^2*s14*s24^2 - 1/2*denom(1/4
      *s12^2)*mt^2*s14^2*s23*s24 - 3/8*denom(1/4*s12^2)*mt^2*s14^2*s23^2 - 1/4
      *denom(1/4*s12^2)*mt^2*s14^3*s23 - 3/4*denom(1/4*s12^2)*mt^2*s13*s14*
      s24^2 - denom(1/4*s12^2)*mt^2*s13*s14*s23*s24 - 1/2*denom(1/4*s12^2)*
      mt^2*s13*s14^2*s24 - 1/2*denom(1/4*s12^2)*mt^2*s13*s14^2*s23 - 3/8*
      denom(1/4*s12^2)*mt^2*s13^2*s24^2 - 3/4*denom(1/4*s12^2)*mt^2*s13^2*s14*
      s24 + 3/8*denom(1/4*s12^2)*mt^4*s14*s24^2 + denom(1/4*s12^2)*mt^4*s14*
      s23*s24 + 3/8*denom(1/4*s12^2)*mt^4*s14*s23^2 + 1/2*denom(1/4*s12^2)*
      mt^4*s14^2*s24 + 5/4*denom(1/4*s12^2)*mt^4*s14^2*s23 + 1/8*denom(1/4*
      s12^2)*mt^4*s14^3 + 3/4*denom(1/4*s12^2)*mt^4*s13*s24^2 + 1/2*denom(1/4*
      s12^2)*mt^4*s13*s23*s24 + 5/2*denom(1/4*s12^2)*mt^4*s13*s14*s24 + denom(
      1/4*s12^2)*mt^4*s13*s14*s23 + 1/2*denom(1/4*s12^2)*mt^4*s13*s14^2 + 3/4*
      denom(1/4*s12^2)*mt^4*s13^2*s24 + 3/8*denom(1/4*s12^2)*mt^4*s13^2*s14 - 
      3/8*denom(1/4*s12^2)*mt^6*s24^2 - 1/2*denom(1/4*s12^2)*mt^6*s23*s24 - 1/
      8*denom(1/4*s12^2)*mt^6*s23^2 - 7/4*denom(1/4*s12^2)*mt^6*s14*s24 - 7/4*
      denom(1/4*s12^2)*mt^6*s14*s23 - 7/8*denom(1/4*s12^2)*mt^6*s14^2 - 2*
      denom(1/4*s12^2)*mt^6*s13*s24 - 1/2*denom(1/4*s12^2)*mt^6*s13*s23 - 7/4*
      denom(1/4*s12^2)*mt^6*s13*s14 - 3/8*denom(1/4*s12^2)*mt^6*s13^2 + 5/4*
      denom(1/4*s12^2)*mt^8*s24 + 3/4*denom(1/4*s12^2)*mt^8*s23 + 7/4*denom(1/
      4*s12^2)*mt^8*s14 + 5/4*denom(1/4*s12^2)*mt^8*s13 - denom(1/4*s12^2)*
      mt^10;
 
 .sort
id KMatrix(6,24) =   - mt*s12*s14*s24 - mt*s12*s14*s23 - mt*s12*s14^2 - mt*s12
      *s13*s14 - mt*s12^2*s14 + mt*mh^2*s12*s14 + mt^3*s12*s24 + mt^3*s12*s23
       + 3*mt^3*s12*s14 + mt^3*s12*s13 + mt^3*s12^2 - mt^3*mh^2*s12 - 2*mt^5*
      s12 - denom(1/2*s12)*mt*s12*s14^2*s23 - denom(1/2*s12)*mt*s12*s13*s14*
      s24 + denom(1/2*s12)*mt^3*s12*s14*s24 + 2*denom(1/2*s12)*mt^3*s12*s14*
      s23 + denom(1/2*s12)*mt^3*s12*s14^2 + denom(1/2*s12)*mt^3*s12*s13*s24 + 
      denom(1/2*s12)*mt^3*s12*s13*s14 - denom(1/2*s12)*mt^5*s12*s24 - denom(1/
      2*s12)*mt^5*s12*s23 - 3*denom(1/2*s12)*mt^5*s12*s14 - denom(1/2*s12)*
      mt^5*s12*s13 + 2*denom(1/2*s12)*mt^7*s12 + 1/4*denom(1/4*s12^2)*mt*s12^2
      *s14^2*s23 + 1/4*denom(1/4*s12^2)*mt*s12^2*s13*s14*s24 - 1/4*denom(1/4*
      s12^2)*mt^3*s12^2*s14*s24 - 1/2*denom(1/4*s12^2)*mt^3*s12^2*s14*s23 - 1/
      4*denom(1/4*s12^2)*mt^3*s12^2*s14^2 - 1/4*denom(1/4*s12^2)*mt^3*s12^2*
      s13*s24 - 1/4*denom(1/4*s12^2)*mt^3*s12^2*s13*s14 + 1/4*denom(1/4*s12^2)
      *mt^5*s12^2*s24 + 1/4*denom(1/4*s12^2)*mt^5*s12^2*s23 + 3/4*denom(1/4*
      s12^2)*mt^5*s12^2*s14 + 1/4*denom(1/4*s12^2)*mt^5*s12^2*s13 - 1/2*denom(
      1/4*s12^2)*mt^7*s12^2;
 
 .sort
id KMatrix(6,25) =   - mt*s14*s24 - mt*s14*s23 - mt*s14^2 + mt*s13*s24 + mt*
      s13*s23 + mt*s13^2 - mt*s12*s14 + mt*s12*s13 + mt*mh^2*s14 - mt*mh^2*s13
       + 2*mt^3*s14 - 2*mt^3*s13 - denom(1/2*s12)*mt*s14^2*s23 - denom(1/2*s12
      )*mt*s13*s14*s24 + denom(1/2*s12)*mt*s13*s14*s23 + denom(1/2*s12)*mt*
      s13^2*s24 + denom(1/2*s12)*mt^3*s14*s24 + denom(1/2*s12)*mt^3*s14*s23 + 
      denom(1/2*s12)*mt^3*s14^2 - denom(1/2*s12)*mt^3*s13*s24 - denom(1/2*s12)
      *mt^3*s13*s23 - denom(1/2*s12)*mt^3*s13^2 - 2*denom(1/2*s12)*mt^5*s14 + 
      2*denom(1/2*s12)*mt^5*s13 + 1/4*denom(1/4*s12^2)*mt*s12*s14^2*s23 + 1/4*
      denom(1/4*s12^2)*mt*s12*s13*s14*s24 - 1/4*denom(1/4*s12^2)*mt*s12*s13*
      s14*s23 - 1/4*denom(1/4*s12^2)*mt*s12*s13^2*s24 - 1/4*denom(1/4*s12^2)*
      mt^3*s12*s14*s24 - 1/4*denom(1/4*s12^2)*mt^3*s12*s14*s23 - 1/4*denom(1/4
      *s12^2)*mt^3*s12*s14^2 + 1/4*denom(1/4*s12^2)*mt^3*s12*s13*s24 + 1/4*
      denom(1/4*s12^2)*mt^3*s12*s13*s23 + 1/4*denom(1/4*s12^2)*mt^3*s12*s13^2
       + 1/2*denom(1/4*s12^2)*mt^5*s12*s14 - 1/2*denom(1/4*s12^2)*mt^5*s12*s13
      ;
 
 .sort
id KMatrix(6,26) =   0;
 
 .sort
id KMatrix(6,27) =  1/2*mt*s12*s24^2 + mt*s12*s23*s24 + 1/2*mt*s12*s23^2 + mt*
      s12*s14*s24 + mt*s12*s14*s23 + 1/2*mt*s12*s14^2 + mt*s12*s13*s24 + mt*
      s12*s13*s23 + mt*s12*s13*s14 + 1/2*mt*s12*s13^2 + mt*s12^2*s24 + mt*
      s12^2*s23 + mt*s12^2*s14 + mt*s12^2*s13 + 1/2*mt*s12^3 - mt*mh^2*s12*s24
       - mt*mh^2*s12*s23 - mt*mh^2*s12*s14 - mt*mh^2*s12*s13 - mt*mh^2*s12^2
       + 1/2*mt*mh^4*s12 - 3*mt^3*s12*s24 - 3*mt^3*s12*s23 - 3*mt^3*s12*s14 - 
      3*mt^3*s12*s13 - 3*mt^3*s12^2 + 3*mt^3*mh^2*s12 + 4*mt^5*s12 + 1/2*
      denom(1/2*s12)*mt*s12*s14*s23*s24 + 1/2*denom(1/2*s12)*mt*s12*s14*s23^2
       + 1/2*denom(1/2*s12)*mt*s12*s14^2*s23 + 1/2*denom(1/2*s12)*mt*s12*s13*
      s24^2 + denom(1/2*s12)*mt*s12*s13*s23*s24 + 1/2*denom(1/2*s12)*mt*s12*
      s13*s23^2 + 1/2*denom(1/2*s12)*mt*s12*s13*s14*s24 + denom(1/2*s12)*mt*
      s12*s13*s14*s23 + 1/2*denom(1/2*s12)*mt*s12*s13^2*s24 + 1/2*denom(1/2*
      s12)*mt*s12*s13^2*s23 + 1/2*denom(1/2*s12)*mt*s12^2*s14*s23 + 1/2*denom(
      1/2*s12)*mt*s12^2*s13*s24 + 1/2*denom(1/2*s12)*mt*s12^2*s13*s23 - 1/2*
      denom(1/2*s12)*mt*mh^2*s12*s14*s23 - 1/2*denom(1/2*s12)*mt*mh^2*s12*s13*
      s24 - 1/2*denom(1/2*s12)*mt*mh^2*s12*s13*s23 - 1/2*denom(1/2*s12)*mt^3*
      s12*s24^2 - 3/2*denom(1/2*s12)*mt^3*s12*s23*s24 - denom(1/2*s12)*mt^3*
      s12*s23^2 - denom(1/2*s12)*mt^3*s12*s14*s24 - 3*denom(1/2*s12)*mt^3*s12*
      s14*s23 - 1/2*denom(1/2*s12)*mt^3*s12*s14^2 - 3*denom(1/2*s12)*mt^3*s12*
      s13*s24 - 3*denom(1/2*s12)*mt^3*s12*s13*s23 - 3/2*denom(1/2*s12)*mt^3*
      s12*s13*s14 - denom(1/2*s12)*mt^3*s12*s13^2 - 1/2*denom(1/2*s12)*mt^3*
      s12^2*s24 - denom(1/2*s12)*mt^3*s12^2*s23 - 1/2*denom(1/2*s12)*mt^3*
      s12^2*s14 - denom(1/2*s12)*mt^3*s12^2*s13 + 1/2*denom(1/2*s12)*mt^3*mh^2
      *s12*s24 + denom(1/2*s12)*mt^3*mh^2*s12*s23 + 1/2*denom(1/2*s12)*mt^3*
      mh^2*s12*s14 + denom(1/2*s12)*mt^3*mh^2*s12*s13 + 3*denom(1/2*s12)*mt^5*
      s12*s24 + 4*denom(1/2*s12)*mt^5*s12*s23 + 3*denom(1/2*s12)*mt^5*s12*s14
       + 4*denom(1/2*s12)*mt^5*s12*s13 + 3/2*denom(1/2*s12)*mt^5*s12^2 - 3/2*
      denom(1/2*s12)*mt^5*mh^2*s12 - 4*denom(1/2*s12)*mt^7*s12 + 1/8*denom(1/4
      *s12^2)*mt*s12*s14^2*s23^2 + 1/4*denom(1/4*s12^2)*mt*s12*s13*s14*s23*s24
       + 1/4*denom(1/4*s12^2)*mt*s12*s13*s14*s23^2 + 1/8*denom(1/4*s12^2)*mt*
      s12*s13^2*s24^2 + 1/4*denom(1/4*s12^2)*mt*s12*s13^2*s23*s24 - 1/4*denom(
      1/4*s12^2)*mt^3*s12*s14*s23*s24 - 1/2*denom(1/4*s12^2)*mt^3*s12*s14*
      s23^2 - 1/4*denom(1/4*s12^2)*mt^3*s12*s14^2*s23 - 1/4*denom(1/4*s12^2)*
      mt^3*s12*s13*s24^2 - 3/4*denom(1/4*s12^2)*mt^3*s12*s13*s23*s24 - 1/4*
      denom(1/4*s12^2)*mt^3*s12*s13*s23^2 - 1/4*denom(1/4*s12^2)*mt^3*s12*s13*
      s14*s24 - 3/4*denom(1/4*s12^2)*mt^3*s12*s13*s14*s23 - 1/2*denom(1/4*
      s12^2)*mt^3*s12*s13^2*s24 - 1/4*denom(1/4*s12^2)*mt^3*s12*s13^2*s23 + 1/
      8*denom(1/4*s12^2)*mt^5*s12*s24^2 + 1/2*denom(1/4*s12^2)*mt^5*s12*s23*
      s24 + 3/8*denom(1/4*s12^2)*mt^5*s12*s23^2 + 1/4*denom(1/4*s12^2)*mt^5*
      s12*s14*s24 + 5/4*denom(1/4*s12^2)*mt^5*s12*s14*s23 + 1/8*denom(1/4*
      s12^2)*mt^5*s12*s14^2 + 5/4*denom(1/4*s12^2)*mt^5*s12*s13*s24 + 5/4*
      denom(1/4*s12^2)*mt^5*s12*s13*s23 + 1/2*denom(1/4*s12^2)*mt^5*s12*s13*
      s14 + 3/8*denom(1/4*s12^2)*mt^5*s12*s13^2 - 3/4*denom(1/4*s12^2)*mt^7*
      s12*s24 - 5/4*denom(1/4*s12^2)*mt^7*s12*s23 - 3/4*denom(1/4*s12^2)*mt^7*
      s12*s14 - 5/4*denom(1/4*s12^2)*mt^7*s12*s13 + denom(1/4*s12^2)*mt^9*s12;
 
 .sort
id KMatrix(6,28) =   0;
 
 .sort
id KMatrix(6,29) =   - mt^3*s12*s24 - mt^3*s12*s23 - mt^3*s12*s14 - mt^3*s12*
      s13 - mt^3*s12^2 + mt^3*mh^2*s12 + 4*mt^5*s12 + 1/2*denom(1/2*s12)*mt*
      s12*s14*s24^2 + 1/2*denom(1/2*s12)*mt*s12*s14*s23*s24 + 1/2*denom(1/2*
      s12)*mt*s12*s14^2*s24 + 1/2*denom(1/2*s12)*mt*s12*s13*s14*s24 + 1/2*
      denom(1/2*s12)*mt*s12^2*s14*s24 - 1/2*denom(1/2*s12)*mt*mh^2*s12*s14*s24
       - 1/2*denom(1/2*s12)*mt^3*s12*s24^2 - 1/2*denom(1/2*s12)*mt^3*s12*s23*
      s24 - 3*denom(1/2*s12)*mt^3*s12*s14*s24 - denom(1/2*s12)*mt^3*s12*s14*
      s23 - 1/2*denom(1/2*s12)*mt^3*s12*s14^2 - denom(1/2*s12)*mt^3*s12*s13*
      s24 - denom(1/2*s12)*mt^3*s12*s13*s23 - 1/2*denom(1/2*s12)*mt^3*s12*s13*
      s14 - 1/2*denom(1/2*s12)*mt^3*s12^2*s24 - 1/2*denom(1/2*s12)*mt^3*s12^2*
      s14 + 1/2*denom(1/2*s12)*mt^3*mh^2*s12*s24 + 1/2*denom(1/2*s12)*mt^3*
      mh^2*s12*s14 + 3*denom(1/2*s12)*mt^5*s12*s24 + 2*denom(1/2*s12)*mt^5*s12
      *s23 + 3*denom(1/2*s12)*mt^5*s12*s14 + 2*denom(1/2*s12)*mt^5*s12*s13 + 1/
      2*denom(1/2*s12)*mt^5*s12^2 - 1/2*denom(1/2*s12)*mt^5*mh^2*s12 - 4*
      denom(1/2*s12)*mt^7*s12 + 1/4*denom(1/4*s12^2)*mt*s12*s14^2*s23*s24 + 1/
      4*denom(1/4*s12^2)*mt*s12*s13*s14*s24^2 + 1/2*denom(1/4*s12^2)*mt*s12*
      s13*s14*s23*s24 - 1/4*denom(1/4*s12^2)*mt^3*s12*s14*s24^2 - denom(1/4*
      s12^2)*mt^3*s12*s14*s23*s24 - 1/4*denom(1/4*s12^2)*mt^3*s12*s14^2*s24 - 
      1/4*denom(1/4*s12^2)*mt^3*s12*s14^2*s23 - 1/4*denom(1/4*s12^2)*mt^3*s12*
      s13*s24^2 - 1/2*denom(1/4*s12^2)*mt^3*s12*s13*s23*s24 - denom(1/4*s12^2)
      *mt^3*s12*s13*s14*s24 - 1/2*denom(1/4*s12^2)*mt^3*s12*s13*s14*s23 + 1/4*
      denom(1/4*s12^2)*mt^5*s12*s24^2 + 3/4*denom(1/4*s12^2)*mt^5*s12*s23*s24
       + 3/2*denom(1/4*s12^2)*mt^5*s12*s14*s24 + denom(1/4*s12^2)*mt^5*s12*s14
      *s23 + 1/4*denom(1/4*s12^2)*mt^5*s12*s14^2 + denom(1/4*s12^2)*mt^5*s12*
      s13*s24 + 1/2*denom(1/4*s12^2)*mt^5*s12*s13*s23 + 3/4*denom(1/4*s12^2)*
      mt^5*s12*s13*s14 - 5/4*denom(1/4*s12^2)*mt^7*s12*s24 - 3/4*denom(1/4*
      s12^2)*mt^7*s12*s23 - 5/4*denom(1/4*s12^2)*mt^7*s12*s14 - 3/4*denom(1/4*
      s12^2)*mt^7*s12*s13 + denom(1/4*s12^2)*mt^9*s12;
 
 .sort
id KMatrix(6,30) =   0;
 
 .sort
id KMatrix(6,31) =   - mt^3*s12*s24 - mt^3*s12*s23 - mt^3*s12*s14 - mt^3*s12*
      s13 - mt^3*s12^2 + mt^3*mh^2*s12 + 4*mt^5*s12 + 1/2*denom(1/2*s12)*mt*
      s12*s13*s23*s24 + 1/2*denom(1/2*s12)*mt*s12*s13*s23^2 + 1/2*denom(1/2*
      s12)*mt*s12*s13*s14*s23 + 1/2*denom(1/2*s12)*mt*s12*s13^2*s23 + 1/2*
      denom(1/2*s12)*mt*s12^2*s13*s23 - 1/2*denom(1/2*s12)*mt*mh^2*s12*s13*s23
       - 1/2*denom(1/2*s12)*mt^3*s12*s23*s24 - 1/2*denom(1/2*s12)*mt^3*s12*
      s23^2 - denom(1/2*s12)*mt^3*s12*s14*s24 - denom(1/2*s12)*mt^3*s12*s14*
      s23 - denom(1/2*s12)*mt^3*s12*s13*s24 - 3*denom(1/2*s12)*mt^3*s12*s13*
      s23 - 1/2*denom(1/2*s12)*mt^3*s12*s13*s14 - 1/2*denom(1/2*s12)*mt^3*s12*
      s13^2 - 1/2*denom(1/2*s12)*mt^3*s12^2*s23 - 1/2*denom(1/2*s12)*mt^3*
      s12^2*s13 + 1/2*denom(1/2*s12)*mt^3*mh^2*s12*s23 + 1/2*denom(1/2*s12)*
      mt^3*mh^2*s12*s13 + 2*denom(1/2*s12)*mt^5*s12*s24 + 3*denom(1/2*s12)*
      mt^5*s12*s23 + 2*denom(1/2*s12)*mt^5*s12*s14 + 3*denom(1/2*s12)*mt^5*s12
      *s13 + 1/2*denom(1/2*s12)*mt^5*s12^2 - 1/2*denom(1/2*s12)*mt^5*mh^2*s12
       - 4*denom(1/2*s12)*mt^7*s12 + 1/2*denom(1/4*s12^2)*mt*s12*s13*s14*s23*
      s24 + 1/4*denom(1/4*s12^2)*mt*s12*s13*s14*s23^2 + 1/4*denom(1/4*s12^2)*
      mt*s12*s13^2*s23*s24 - 1/2*denom(1/4*s12^2)*mt^3*s12*s14*s23*s24 - 1/4*
      denom(1/4*s12^2)*mt^3*s12*s14*s23^2 - denom(1/4*s12^2)*mt^3*s12*s13*s23*
      s24 - 1/4*denom(1/4*s12^2)*mt^3*s12*s13*s23^2 - 1/2*denom(1/4*s12^2)*
      mt^3*s12*s13*s14*s24 - denom(1/4*s12^2)*mt^3*s12*s13*s14*s23 - 1/4*
      denom(1/4*s12^2)*mt^3*s12*s13^2*s24 - 1/4*denom(1/4*s12^2)*mt^3*s12*
      s13^2*s23 + 3/4*denom(1/4*s12^2)*mt^5*s12*s23*s24 + 1/4*denom(1/4*s12^2)
      *mt^5*s12*s23^2 + 1/2*denom(1/4*s12^2)*mt^5*s12*s14*s24 + denom(1/4*
      s12^2)*mt^5*s12*s14*s23 + denom(1/4*s12^2)*mt^5*s12*s13*s24 + 3/2*denom(
      1/4*s12^2)*mt^5*s12*s13*s23 + 3/4*denom(1/4*s12^2)*mt^5*s12*s13*s14 + 1/
      4*denom(1/4*s12^2)*mt^5*s12*s13^2 - 3/4*denom(1/4*s12^2)*mt^7*s12*s24 - 
      5/4*denom(1/4*s12^2)*mt^7*s12*s23 - 3/4*denom(1/4*s12^2)*mt^7*s12*s14 - 
      5/4*denom(1/4*s12^2)*mt^7*s12*s13 + denom(1/4*s12^2)*mt^9*s12;
 
 .sort
id KMatrix(6,32) =   0;
 
 .sort
id KMatrix(6,33) =  1/2*mt*s12*s24^2 + mt*s12*s23*s24 + 1/2*mt*s12*s23^2 + mt*
      s12*s14*s24 + mt*s12*s14*s23 + 1/2*mt*s12*s14^2 + mt*s12*s13*s24 + mt*
      s12*s13*s23 + mt*s12*s13*s14 + 1/2*mt*s12*s13^2 + mt*s12^2*s24 + mt*
      s12^2*s23 + mt*s12^2*s14 + mt*s12^2*s13 + 1/2*mt*s12^3 - mt*mh^2*s12*s24
       - mt*mh^2*s12*s23 - mt*mh^2*s12*s14 - mt*mh^2*s12*s13 - mt*mh^2*s12^2
       + 1/2*mt*mh^4*s12 - 3*mt^3*s12*s24 - 3*mt^3*s12*s23 - 3*mt^3*s12*s14 - 
      3*mt^3*s12*s13 - 3*mt^3*s12^2 + 3*mt^3*mh^2*s12 + 4*mt^5*s12 + 1/2*
      denom(1/2*s12)*mt*s12*s14*s24^2 + denom(1/2*s12)*mt*s12*s14*s23*s24 + 1/
      2*denom(1/2*s12)*mt*s12*s14*s23^2 + 1/2*denom(1/2*s12)*mt*s12*s14^2*s24
       + 1/2*denom(1/2*s12)*mt*s12*s14^2*s23 + 1/2*denom(1/2*s12)*mt*s12*s13*
      s24^2 + 1/2*denom(1/2*s12)*mt*s12*s13*s23*s24 + denom(1/2*s12)*mt*s12*
      s13*s14*s24 + 1/2*denom(1/2*s12)*mt*s12*s13*s14*s23 + 1/2*denom(1/2*s12)
      *mt*s12*s13^2*s24 + 1/2*denom(1/2*s12)*mt*s12^2*s14*s24 + 1/2*denom(1/2*
      s12)*mt*s12^2*s14*s23 + 1/2*denom(1/2*s12)*mt*s12^2*s13*s24 - 1/2*denom(
      1/2*s12)*mt*mh^2*s12*s14*s24 - 1/2*denom(1/2*s12)*mt*mh^2*s12*s14*s23 - 
      1/2*denom(1/2*s12)*mt*mh^2*s12*s13*s24 - denom(1/2*s12)*mt^3*s12*s24^2
       - 3/2*denom(1/2*s12)*mt^3*s12*s23*s24 - 1/2*denom(1/2*s12)*mt^3*s12*
      s23^2 - 3*denom(1/2*s12)*mt^3*s12*s14*s24 - 3*denom(1/2*s12)*mt^3*s12*
      s14*s23 - denom(1/2*s12)*mt^3*s12*s14^2 - 3*denom(1/2*s12)*mt^3*s12*s13*
      s24 - denom(1/2*s12)*mt^3*s12*s13*s23 - 3/2*denom(1/2*s12)*mt^3*s12*s13*
      s14 - 1/2*denom(1/2*s12)*mt^3*s12*s13^2 - denom(1/2*s12)*mt^3*s12^2*s24
       - 1/2*denom(1/2*s12)*mt^3*s12^2*s23 - denom(1/2*s12)*mt^3*s12^2*s14 - 1/
      2*denom(1/2*s12)*mt^3*s12^2*s13 + denom(1/2*s12)*mt^3*mh^2*s12*s24 + 1/2
      *denom(1/2*s12)*mt^3*mh^2*s12*s23 + denom(1/2*s12)*mt^3*mh^2*s12*s14 + 1/
      2*denom(1/2*s12)*mt^3*mh^2*s12*s13 + 4*denom(1/2*s12)*mt^5*s12*s24 + 3*
      denom(1/2*s12)*mt^5*s12*s23 + 4*denom(1/2*s12)*mt^5*s12*s14 + 3*denom(1/
      2*s12)*mt^5*s12*s13 + 3/2*denom(1/2*s12)*mt^5*s12^2 - 3/2*denom(1/2*s12)
      *mt^5*mh^2*s12 - 4*denom(1/2*s12)*mt^7*s12 + 1/4*denom(1/4*s12^2)*mt*s12
      *s14^2*s23*s24 + 1/8*denom(1/4*s12^2)*mt*s12*s14^2*s23^2 + 1/4*denom(1/4
      *s12^2)*mt*s12*s13*s14*s24^2 + 1/4*denom(1/4*s12^2)*mt*s12*s13*s14*s23*
      s24 + 1/8*denom(1/4*s12^2)*mt*s12*s13^2*s24^2 - 1/4*denom(1/4*s12^2)*
      mt^3*s12*s14*s24^2 - 3/4*denom(1/4*s12^2)*mt^3*s12*s14*s23*s24 - 1/4*
      denom(1/4*s12^2)*mt^3*s12*s14*s23^2 - 1/4*denom(1/4*s12^2)*mt^3*s12*
      s14^2*s24 - 1/2*denom(1/4*s12^2)*mt^3*s12*s14^2*s23 - 1/2*denom(1/4*
      s12^2)*mt^3*s12*s13*s24^2 - 1/4*denom(1/4*s12^2)*mt^3*s12*s13*s23*s24 - 
      3/4*denom(1/4*s12^2)*mt^3*s12*s13*s14*s24 - 1/4*denom(1/4*s12^2)*mt^3*
      s12*s13*s14*s23 - 1/4*denom(1/4*s12^2)*mt^3*s12*s13^2*s24 + 3/8*denom(1/
      4*s12^2)*mt^5*s12*s24^2 + 1/2*denom(1/4*s12^2)*mt^5*s12*s23*s24 + 1/8*
      denom(1/4*s12^2)*mt^5*s12*s23^2 + 5/4*denom(1/4*s12^2)*mt^5*s12*s14*s24
       + 5/4*denom(1/4*s12^2)*mt^5*s12*s14*s23 + 3/8*denom(1/4*s12^2)*mt^5*s12
      *s14^2 + 5/4*denom(1/4*s12^2)*mt^5*s12*s13*s24 + 1/4*denom(1/4*s12^2)*
      mt^5*s12*s13*s23 + 1/2*denom(1/4*s12^2)*mt^5*s12*s13*s14 + 1/8*denom(1/4
      *s12^2)*mt^5*s12*s13^2 - 5/4*denom(1/4*s12^2)*mt^7*s12*s24 - 3/4*denom(1/
      4*s12^2)*mt^7*s12*s23 - 5/4*denom(1/4*s12^2)*mt^7*s12*s14 - 3/4*denom(1/
      4*s12^2)*mt^7*s12*s13 + denom(1/4*s12^2)*mt^9*s12;
 
 .sort
id KMatrix(6,34) =   - s13*s14*s24 - s13*s14*s23 - s13*s14^2 - s13^2*s14 - s12
      *s13*s14 + mh^2*s13*s14 + mt^2*s14*s24 + mt^2*s14*s23 + mt^2*s14^2 + 
      mt^2*s13*s24 + mt^2*s13*s23 + 4*mt^2*s13*s14 + mt^2*s13^2 + mt^2*s12*s14
       + mt^2*s12*s13 - mt^2*mh^2*s14 - mt^2*mh^2*s13 - mt^4*s24 - mt^4*s23 - 
      3*mt^4*s14 - 3*mt^4*s13 - mt^4*s12 + mt^4*mh^2 + 2*mt^6 - denom(1/2*s12)
      *s13*s14^2*s23 - denom(1/2*s12)*s13^2*s14*s24 + denom(1/2*s12)*mt^2*
      s14^2*s23 + 2*denom(1/2*s12)*mt^2*s13*s14*s24 + 2*denom(1/2*s12)*mt^2*
      s13*s14*s23 + denom(1/2*s12)*mt^2*s13*s14^2 + denom(1/2*s12)*mt^2*s13^2*
      s24 + denom(1/2*s12)*mt^2*s13^2*s14 - denom(1/2*s12)*mt^4*s14*s24 - 2*
      denom(1/2*s12)*mt^4*s14*s23 - denom(1/2*s12)*mt^4*s14^2 - 2*denom(1/2*
      s12)*mt^4*s13*s24 - denom(1/2*s12)*mt^4*s13*s23 - 4*denom(1/2*s12)*mt^4*
      s13*s14 - denom(1/2*s12)*mt^4*s13^2 + denom(1/2*s12)*mt^6*s24 + denom(1/
      2*s12)*mt^6*s23 + 3*denom(1/2*s12)*mt^6*s14 + 3*denom(1/2*s12)*mt^6*s13
       - 2*denom(1/2*s12)*mt^8 + 1/4*denom(1/4*s12^2)*s12*s13*s14^2*s23 + 1/4*
      denom(1/4*s12^2)*s12*s13^2*s14*s24 - 1/4*denom(1/4*s12^2)*mt^2*s12*s14^2
      *s23 - 1/2*denom(1/4*s12^2)*mt^2*s12*s13*s14*s24 - 1/2*denom(1/4*s12^2)*
      mt^2*s12*s13*s14*s23 - 1/4*denom(1/4*s12^2)*mt^2*s12*s13*s14^2 - 1/4*
      denom(1/4*s12^2)*mt^2*s12*s13^2*s24 - 1/4*denom(1/4*s12^2)*mt^2*s12*
      s13^2*s14 + 1/4*denom(1/4*s12^2)*mt^4*s12*s14*s24 + 1/2*denom(1/4*s12^2)
      *mt^4*s12*s14*s23 + 1/4*denom(1/4*s12^2)*mt^4*s12*s14^2 + 1/2*denom(1/4*
      s12^2)*mt^4*s12*s13*s24 + 1/4*denom(1/4*s12^2)*mt^4*s12*s13*s23 + denom(
      1/4*s12^2)*mt^4*s12*s13*s14 + 1/4*denom(1/4*s12^2)*mt^4*s12*s13^2 - 1/4*
      denom(1/4*s12^2)*mt^6*s12*s24 - 1/4*denom(1/4*s12^2)*mt^6*s12*s23 - 3/4*
      denom(1/4*s12^2)*mt^6*s12*s14 - 3/4*denom(1/4*s12^2)*mt^6*s12*s13 + 1/2*
      denom(1/4*s12^2)*mt^8*s12;
 
 .sort
id KMatrix(6,35) =   - 1/2*s14*s23*s24 - 1/2*s14*s23^2 - 1/2*s14^2*s23 - 1/2*
      s13*s24^2 - 1/2*s13*s23*s24 - 1/2*s13*s14*s24 - 1/2*s13*s14*s23 - 1/2*
      s13^2*s24 - s12*s24^2 - 2*s12*s23*s24 - s12*s23^2 - 2*s12*s14*s24 - 5/2*
      s12*s14*s23 - s12*s14^2 - 5/2*s12*s13*s24 - 2*s12*s13*s23 - 2*s12*s13*
      s14 - s12*s13^2 - 2*s12^2*s24 - 2*s12^2*s23 - 2*s12^2*s14 - 2*s12^2*s13
       - s12^3 + 1/2*mh^2*s14*s23 + 1/2*mh^2*s13*s24 + 2*mh^2*s12*s24 + 2*mh^2
      *s12*s23 + 2*mh^2*s12*s14 + 2*mh^2*s12*s13 + 2*mh^2*s12^2 - mh^4*s12 + 1/
      2*mt^2*s24^2 + mt^2*s23*s24 + 1/2*mt^2*s23^2 + mt^2*s14*s24 + 2*mt^2*s14
      *s23 + 1/2*mt^2*s14^2 + 2*mt^2*s13*s24 + mt^2*s13*s23 + mt^2*s13*s14 + 1/
      2*mt^2*s13^2 + 11/2*mt^2*s12*s24 + 11/2*mt^2*s12*s23 + 11/2*mt^2*s12*s14
       + 11/2*mt^2*s12*s13 + 5*mt^2*s12^2 - 1/2*mt^2*mh^2*s24 - 1/2*mt^2*mh^2*
      s23 - 1/2*mt^2*mh^2*s14 - 1/2*mt^2*mh^2*s13 - 5*mt^2*mh^2*s12 - 2*mt^4*
      s24 - 2*mt^4*s23 - 2*mt^4*s14 - 2*mt^4*s13 - 5*mt^4*s12 + mt^4*mh^2 + 2*
      mt^6 - 1/2*denom(1/2*s12)*s14^2*s23^2 - denom(1/2*s12)*s13*s14*s23*s24
       - 1/2*denom(1/2*s12)*s13^2*s24^2 - denom(1/2*s12)*s12*s14*s23*s24 - 
      denom(1/2*s12)*s12*s14*s23^2 - denom(1/2*s12)*s12*s14^2*s23 - denom(1/2*
      s12)*s12*s13*s24^2 - denom(1/2*s12)*s12*s13*s23*s24 - denom(1/2*s12)*s12
      *s13*s14*s24 - denom(1/2*s12)*s12*s13*s14*s23 - denom(1/2*s12)*s12*s13^2
      *s24 - denom(1/2*s12)*s12^2*s14*s23 - denom(1/2*s12)*s12^2*s13*s24 + 
      denom(1/2*s12)*mh^2*s12*s14*s23 + denom(1/2*s12)*mh^2*s12*s13*s24 + 
      denom(1/2*s12)*mt^2*s14*s23*s24 + denom(1/2*s12)*mt^2*s14*s23^2 + denom(
      1/2*s12)*mt^2*s14^2*s23 + denom(1/2*s12)*mt^2*s13*s24^2 + denom(1/2*s12)
      *mt^2*s13*s23*s24 + denom(1/2*s12)*mt^2*s13*s14*s24 + denom(1/2*s12)*
      mt^2*s13*s14*s23 + denom(1/2*s12)*mt^2*s13^2*s24 + denom(1/2*s12)*mt^2*
      s12*s24^2 + 2*denom(1/2*s12)*mt^2*s12*s23*s24 + denom(1/2*s12)*mt^2*s12*
      s23^2 + denom(1/2*s12)*mt^2*s12*s14*s24 + 5*denom(1/2*s12)*mt^2*s12*s14*
      s23 + denom(1/2*s12)*mt^2*s12*s14^2 + 5*denom(1/2*s12)*mt^2*s12*s13*s24
       + denom(1/2*s12)*mt^2*s12*s13*s23 + 2*denom(1/2*s12)*mt^2*s12*s13*s14
       + denom(1/2*s12)*mt^2*s12*s13^2 + denom(1/2*s12)*mt^2*s12^2*s24 + 
      denom(1/2*s12)*mt^2*s12^2*s23 + denom(1/2*s12)*mt^2*s12^2*s14 + denom(1/
      2*s12)*mt^2*s12^2*s13 - denom(1/2*s12)*mt^2*mh^2*s12*s24 - denom(1/2*s12
      )*mt^2*mh^2*s12*s23 - denom(1/2*s12)*mt^2*mh^2*s12*s14 - denom(1/2*s12)*
      mt^2*mh^2*s12*s13 - 1/2*denom(1/2*s12)*mt^4*s24^2 - denom(1/2*s12)*mt^4*
      s23*s24 - 1/2*denom(1/2*s12)*mt^4*s23^2 - denom(1/2*s12)*mt^4*s14*s24 - 
      3*denom(1/2*s12)*mt^4*s14*s23 - 1/2*denom(1/2*s12)*mt^4*s14^2 - 3*denom(
      1/2*s12)*mt^4*s13*s24 - denom(1/2*s12)*mt^4*s13*s23 - denom(1/2*s12)*
      mt^4*s13*s14 - 1/2*denom(1/2*s12)*mt^4*s13^2 - 4*denom(1/2*s12)*mt^4*s12
      *s24 - 4*denom(1/2*s12)*mt^4*s12*s23 - 4*denom(1/2*s12)*mt^4*s12*s14 - 4
      *denom(1/2*s12)*mt^4*s12*s13 - 2*denom(1/2*s12)*mt^4*s12^2 + 2*denom(1/2
      *s12)*mt^4*mh^2*s12 + 2*denom(1/2*s12)*mt^6*s24 + 2*denom(1/2*s12)*mt^6*
      s23 + 2*denom(1/2*s12)*mt^6*s14 + 2*denom(1/2*s12)*mt^6*s13 + 4*denom(1/
      2*s12)*mt^6*s12 - 2*denom(1/2*s12)*mt^8 + 1/2*denom(1/4*s12^2)*s12*s13*
      s14*s23*s24 + 1/8*denom(1/4*s12^2)*s12^2*s14*s23*s24 + 1/8*denom(1/4*
      s12^2)*s12^2*s14*s23^2 + 1/8*denom(1/4*s12^2)*s12^2*s14^2*s23 + 1/8*
      denom(1/4*s12^2)*s12^2*s13*s24^2 + 1/8*denom(1/4*s12^2)*s12^2*s13*s23*
      s24 + 1/8*denom(1/4*s12^2)*s12^2*s13*s14*s24 + 1/8*denom(1/4*s12^2)*
      s12^2*s13*s14*s23 + 1/8*denom(1/4*s12^2)*s12^2*s13^2*s24 + 1/8*denom(1/4
      *s12^2)*s12^3*s14*s23 + 1/8*denom(1/4*s12^2)*s12^3*s13*s24 - 1/8*denom(1/
      4*s12^2)*mh^2*s12^2*s14*s23 - 1/8*denom(1/4*s12^2)*mh^2*s12^2*s13*s24 - 
      1/2*denom(1/4*s12^2)*mt^2*s12*s14*s23*s24 - 1/2*denom(1/4*s12^2)*mt^2*
      s12*s13*s23*s24 - 1/2*denom(1/4*s12^2)*mt^2*s12*s13*s14*s24 - 1/2*denom(
      1/4*s12^2)*mt^2*s12*s13*s14*s23 - 1/8*denom(1/4*s12^2)*mt^2*s12^2*s24^2
       - 1/4*denom(1/4*s12^2)*mt^2*s12^2*s23*s24 - 1/8*denom(1/4*s12^2)*mt^2*
      s12^2*s23^2 - 1/4*denom(1/4*s12^2)*mt^2*s12^2*s14*s24 - 3/4*denom(1/4*
      s12^2)*mt^2*s12^2*s14*s23 - 1/8*denom(1/4*s12^2)*mt^2*s12^2*s14^2 - 3/4*
      denom(1/4*s12^2)*mt^2*s12^2*s13*s24 - 1/4*denom(1/4*s12^2)*mt^2*s12^2*
      s13*s23 - 1/4*denom(1/4*s12^2)*mt^2*s12^2*s13*s14 - 1/8*denom(1/4*s12^2)
      *mt^2*s12^2*s13^2 - 1/8*denom(1/4*s12^2)*mt^2*s12^3*s24 - 1/8*denom(1/4*
      s12^2)*mt^2*s12^3*s23 - 1/8*denom(1/4*s12^2)*mt^2*s12^3*s14 - 1/8*denom(
      1/4*s12^2)*mt^2*s12^3*s13 + 1/8*denom(1/4*s12^2)*mt^2*mh^2*s12^2*s24 + 1/
      8*denom(1/4*s12^2)*mt^2*mh^2*s12^2*s23 + 1/8*denom(1/4*s12^2)*mt^2*mh^2*
      s12^2*s14 + 1/8*denom(1/4*s12^2)*mt^2*mh^2*s12^2*s13 + 1/2*denom(1/4*
      s12^2)*mt^4*s12*s23*s24 + 1/2*denom(1/4*s12^2)*mt^4*s12*s14*s24 + 1/2*
      denom(1/4*s12^2)*mt^4*s12*s14*s23 + 1/2*denom(1/4*s12^2)*mt^4*s12*s13*
      s24 + 1/2*denom(1/4*s12^2)*mt^4*s12*s13*s23 + 1/2*denom(1/4*s12^2)*mt^4*
      s12*s13*s14 + 3/4*denom(1/4*s12^2)*mt^4*s12^2*s24 + 3/4*denom(1/4*s12^2)
      *mt^4*s12^2*s23 + 3/4*denom(1/4*s12^2)*mt^4*s12^2*s14 + 3/4*denom(1/4*
      s12^2)*mt^4*s12^2*s13 + 1/4*denom(1/4*s12^2)*mt^4*s12^3 - 1/4*denom(1/4*
      s12^2)*mt^4*mh^2*s12^2 - 1/2*denom(1/4*s12^2)*mt^6*s12*s24 - 1/2*denom(1/
      4*s12^2)*mt^6*s12*s23 - 1/2*denom(1/4*s12^2)*mt^6*s12*s14 - 1/2*denom(1/
      4*s12^2)*mt^6*s12*s13 - denom(1/4*s12^2)*mt^6*s12^2 + 1/2*denom(1/4*
      s12^2)*mt^8*s12;
 
 .sort
id KMatrix(6,36) =   - mt*s12*s14*s24 - mt*s12*s14*s23 - mt*s12*s14^2 - mt*s12
      *s13*s14 - mt*s12^2*s14 + mt*mh^2*s12*s14 + mt^3*s12*s24 + mt^3*s12*s23
       + 3*mt^3*s12*s14 + mt^3*s12*s13 + mt^3*s12^2 - mt^3*mh^2*s12 - 2*mt^5*
      s12 - denom(1/2*s12)*mt*s12*s14^2*s23 - denom(1/2*s12)*mt*s12*s13*s14*
      s24 + denom(1/2*s12)*mt^3*s12*s14*s24 + 2*denom(1/2*s12)*mt^3*s12*s14*
      s23 + denom(1/2*s12)*mt^3*s12*s14^2 + denom(1/2*s12)*mt^3*s12*s13*s24 + 
      denom(1/2*s12)*mt^3*s12*s13*s14 - denom(1/2*s12)*mt^5*s12*s24 - denom(1/
      2*s12)*mt^5*s12*s23 - 3*denom(1/2*s12)*mt^5*s12*s14 - denom(1/2*s12)*
      mt^5*s12*s13 + 2*denom(1/2*s12)*mt^7*s12 + 1/4*denom(1/4*s12^2)*mt*s12^2
      *s14^2*s23 + 1/4*denom(1/4*s12^2)*mt*s12^2*s13*s14*s24 - 1/4*denom(1/4*
      s12^2)*mt^3*s12^2*s14*s24 - 1/2*denom(1/4*s12^2)*mt^3*s12^2*s14*s23 - 1/
      4*denom(1/4*s12^2)*mt^3*s12^2*s14^2 - 1/4*denom(1/4*s12^2)*mt^3*s12^2*
      s13*s24 - 1/4*denom(1/4*s12^2)*mt^3*s12^2*s13*s14 + 1/4*denom(1/4*s12^2)
      *mt^5*s12^2*s24 + 1/4*denom(1/4*s12^2)*mt^5*s12^2*s23 + 3/4*denom(1/4*
      s12^2)*mt^5*s12^2*s14 + 1/4*denom(1/4*s12^2)*mt^5*s12^2*s13 - 1/2*denom(
      1/4*s12^2)*mt^7*s12^2;
 
 .sort
id KMatrix(7,1) =   - mt^3*s14*s24 - mt^3*s14*s23 - mt^3*s14^2 + mt^3*s13*s24
       + mt^3*s13*s23 + mt^3*s13^2 - mt^3*s12*s14 + mt^3*s12*s13 + mt^3*mh^2*
      s14 - mt^3*mh^2*s13 + 2*mt^5*s14 - 2*mt^5*s13 + 1/2*denom(1/2*s12)*mt*
      s13*s14*s23*s24 + 1/2*denom(1/2*s12)*mt*s13*s14*s23^2 + 1/2*denom(1/2*
      s12)*mt*s13*s14^2*s23 - 1/2*denom(1/2*s12)*mt*s13^2*s23*s24 - 1/2*denom(
      1/2*s12)*mt*s13^2*s23^2 - 1/2*denom(1/2*s12)*mt*s13^3*s23 + 1/2*denom(1/
      2*s12)*mt*s12*s13*s14*s23 - 1/2*denom(1/2*s12)*mt*s12*s13^2*s23 - 1/2*
      denom(1/2*s12)*mt*mh^2*s13*s14*s23 + 1/2*denom(1/2*s12)*mt*mh^2*s13^2*
      s23 - 1/2*denom(1/2*s12)*mt^3*s14*s23*s24 - 1/2*denom(1/2*s12)*mt^3*s14*
      s23^2 - denom(1/2*s12)*mt^3*s14^2*s23 + 1/2*denom(1/2*s12)*mt^3*s13*s23*
      s24 + 1/2*denom(1/2*s12)*mt^3*s13*s23^2 - denom(1/2*s12)*mt^3*s13*s14*
      s24 - denom(1/2*s12)*mt^3*s13*s14*s23 - 1/2*denom(1/2*s12)*mt^3*s13*
      s14^2 + denom(1/2*s12)*mt^3*s13^2*s24 + 2*denom(1/2*s12)*mt^3*s13^2*s23
       + 1/2*denom(1/2*s12)*mt^3*s13^3 - 1/2*denom(1/2*s12)*mt^3*s12*s14*s23
       + 1/2*denom(1/2*s12)*mt^3*s12*s13*s23 - 1/2*denom(1/2*s12)*mt^3*s12*s13
      *s14 + 1/2*denom(1/2*s12)*mt^3*s12*s13^2 + 1/2*denom(1/2*s12)*mt^3*mh^2*
      s14*s23 - 1/2*denom(1/2*s12)*mt^3*mh^2*s13*s23 + 1/2*denom(1/2*s12)*mt^3
      *mh^2*s13*s14 - 1/2*denom(1/2*s12)*mt^3*mh^2*s13^2 + denom(1/2*s12)*mt^5
      *s14*s24 + 2*denom(1/2*s12)*mt^5*s14*s23 + denom(1/2*s12)*mt^5*s14^2 - 
      denom(1/2*s12)*mt^5*s13*s24 - 2*denom(1/2*s12)*mt^5*s13*s23 + denom(1/2*
      s12)*mt^5*s13*s14 - 2*denom(1/2*s12)*mt^5*s13^2 + 1/2*denom(1/2*s12)*
      mt^5*s12*s14 - 1/2*denom(1/2*s12)*mt^5*s12*s13 - 1/2*denom(1/2*s12)*mt^5
      *mh^2*s14 + 1/2*denom(1/2*s12)*mt^5*mh^2*s13 - 2*denom(1/2*s12)*mt^7*s14
       + 2*denom(1/2*s12)*mt^7*s13 + 1/4*denom(1/4*s12^2)*mt*s13*s14^2*s23^2
       + 1/4*denom(1/4*s12^2)*mt*s13^2*s14*s23*s24 - 1/4*denom(1/4*s12^2)*mt*
      s13^2*s14*s23^2 - 1/4*denom(1/4*s12^2)*mt*s13^3*s23*s24 - 1/4*denom(1/4*
      s12^2)*mt^3*s14^2*s23^2 - 1/2*denom(1/4*s12^2)*mt^3*s13*s14*s23*s24 - 1/
      2*denom(1/4*s12^2)*mt^3*s13*s14^2*s23 + 1/2*denom(1/4*s12^2)*mt^3*s13^2*
      s23*s24 + 1/4*denom(1/4*s12^2)*mt^3*s13^2*s23^2 - 1/4*denom(1/4*s12^2)*
      mt^3*s13^2*s14*s24 + 1/4*denom(1/4*s12^2)*mt^3*s13^2*s14*s23 + 1/4*
      denom(1/4*s12^2)*mt^3*s13^3*s24 + 1/4*denom(1/4*s12^2)*mt^3*s13^3*s23 + 
      1/4*denom(1/4*s12^2)*mt^5*s14*s23*s24 + 1/4*denom(1/4*s12^2)*mt^5*s14*
      s23^2 + 1/2*denom(1/4*s12^2)*mt^5*s14^2*s23 - 1/4*denom(1/4*s12^2)*mt^5*
      s13*s23*s24 - 1/4*denom(1/4*s12^2)*mt^5*s13*s23^2 + 1/2*denom(1/4*s12^2)
      *mt^5*s13*s14*s24 + 1/2*denom(1/4*s12^2)*mt^5*s13*s14*s23 + 1/4*denom(1/
      4*s12^2)*mt^5*s13*s14^2 - 1/2*denom(1/4*s12^2)*mt^5*s13^2*s24 - denom(1/
      4*s12^2)*mt^5*s13^2*s23 - 1/4*denom(1/4*s12^2)*mt^5*s13^3 - 1/4*denom(1/
      4*s12^2)*mt^7*s14*s24 - 3/4*denom(1/4*s12^2)*mt^7*s14*s23 - 1/4*denom(1/
      4*s12^2)*mt^7*s14^2 + 1/4*denom(1/4*s12^2)*mt^7*s13*s24 + 3/4*denom(1/4*
      s12^2)*mt^7*s13*s23 - 1/2*denom(1/4*s12^2)*mt^7*s13*s14 + 3/4*denom(1/4*
      s12^2)*mt^7*s13^2 + 1/2*denom(1/4*s12^2)*mt^9*s14 - 1/2*denom(1/4*s12^2)
      *mt^9*s13;
 
 .sort
id KMatrix(7,2) =  1/2*mt*s14*s24^2 + mt*s14*s23*s24 + 1/2*mt*s14*s23^2 + mt*
      s14^2*s24 + mt*s14^2*s23 + 1/2*mt*s14^3 - 1/2*mt*s13*s24^2 - mt*s13*s23*
      s24 - 1/2*mt*s13*s23^2 + 1/2*mt*s13*s14^2 - mt*s13^2*s24 - mt*s13^2*s23
       - 1/2*mt*s13^2*s14 - 1/2*mt*s13^3 + mt*s12*s14*s24 + mt*s12*s14*s23 + 
      mt*s12*s14^2 - mt*s12*s13*s24 - mt*s12*s13*s23 - mt*s12*s13^2 + 1/2*mt*
      s12^2*s14 - 1/2*mt*s12^2*s13 - mt*mh^2*s14*s24 - mt*mh^2*s14*s23 - mt*
      mh^2*s14^2 + mt*mh^2*s13*s24 + mt*mh^2*s13*s23 + mt*mh^2*s13^2 - mt*mh^2
      *s12*s14 + mt*mh^2*s12*s13 + 1/2*mt*mh^4*s14 - 1/2*mt*mh^4*s13 - 2*mt^3*
      s14*s24 - 2*mt^3*s14*s23 - 2*mt^3*s14^2 + 2*mt^3*s13*s24 + 2*mt^3*s13*
      s23 + 2*mt^3*s13^2 - 2*mt^3*s12*s14 + 2*mt^3*s12*s13 + 2*mt^3*mh^2*s14
       - 2*mt^3*mh^2*s13 + 2*mt^5*s14 - 2*mt^5*s13 + 1/2*denom(1/2*s12)*mt*
      s14^2*s23*s24 + 1/2*denom(1/2*s12)*mt*s14^2*s23^2 + 1/2*denom(1/2*s12)*
      mt*s14^3*s23 + 1/2*denom(1/2*s12)*mt*s13*s14*s24^2 - 1/2*denom(1/2*s12)*
      mt*s13*s14*s23^2 + 1/2*denom(1/2*s12)*mt*s13*s14^2*s24 - 1/2*denom(1/2*
      s12)*mt*s13^2*s24^2 - 1/2*denom(1/2*s12)*mt*s13^2*s23*s24 - 1/2*denom(1/
      2*s12)*mt*s13^2*s14*s23 - 1/2*denom(1/2*s12)*mt*s13^3*s24 + 1/2*denom(1/
      2*s12)*mt*s12*s14^2*s23 + 1/2*denom(1/2*s12)*mt*s12*s13*s14*s24 - 1/2*
      denom(1/2*s12)*mt*s12*s13*s14*s23 - 1/2*denom(1/2*s12)*mt*s12*s13^2*s24
       - 1/2*denom(1/2*s12)*mt*mh^2*s14^2*s23 - 1/2*denom(1/2*s12)*mt*mh^2*s13
      *s14*s24 + 1/2*denom(1/2*s12)*mt*mh^2*s13*s14*s23 + 1/2*denom(1/2*s12)*
      mt*mh^2*s13^2*s24 - 1/2*denom(1/2*s12)*mt^3*s14*s24^2 - denom(1/2*s12)*
      mt^3*s14*s23*s24 - 1/2*denom(1/2*s12)*mt^3*s14*s23^2 - denom(1/2*s12)*
      mt^3*s14^2*s24 - 2*denom(1/2*s12)*mt^3*s14^2*s23 - 1/2*denom(1/2*s12)*
      mt^3*s14^3 + 1/2*denom(1/2*s12)*mt^3*s13*s24^2 + denom(1/2*s12)*mt^3*s13
      *s23*s24 + 1/2*denom(1/2*s12)*mt^3*s13*s23^2 - denom(1/2*s12)*mt^3*s13*
      s14*s24 + denom(1/2*s12)*mt^3*s13*s14*s23 - 1/2*denom(1/2*s12)*mt^3*s13*
      s14^2 + 2*denom(1/2*s12)*mt^3*s13^2*s24 + denom(1/2*s12)*mt^3*s13^2*s23
       + 1/2*denom(1/2*s12)*mt^3*s13^2*s14 + 1/2*denom(1/2*s12)*mt^3*s13^3 - 1/
      2*denom(1/2*s12)*mt^3*s12*s14*s24 - 1/2*denom(1/2*s12)*mt^3*s12*s14*s23
       - 1/2*denom(1/2*s12)*mt^3*s12*s14^2 + 1/2*denom(1/2*s12)*mt^3*s12*s13*
      s24 + 1/2*denom(1/2*s12)*mt^3*s12*s13*s23 + 1/2*denom(1/2*s12)*mt^3*s12*
      s13^2 + 1/2*denom(1/2*s12)*mt^3*mh^2*s14*s24 + 1/2*denom(1/2*s12)*mt^3*
      mh^2*s14*s23 + 1/2*denom(1/2*s12)*mt^3*mh^2*s14^2 - 1/2*denom(1/2*s12)*
      mt^3*mh^2*s13*s24 - 1/2*denom(1/2*s12)*mt^3*mh^2*s13*s23 - 1/2*denom(1/2
      *s12)*mt^3*mh^2*s13^2 + 2*denom(1/2*s12)*mt^5*s14*s24 + 2*denom(1/2*s12)
      *mt^5*s14*s23 + 2*denom(1/2*s12)*mt^5*s14^2 - 2*denom(1/2*s12)*mt^5*s13*
      s24 - 2*denom(1/2*s12)*mt^5*s13*s23 - 2*denom(1/2*s12)*mt^5*s13^2 + 
      denom(1/2*s12)*mt^5*s12*s14 - denom(1/2*s12)*mt^5*s12*s13 - denom(1/2*
      s12)*mt^5*mh^2*s14 + denom(1/2*s12)*mt^5*mh^2*s13 - 2*denom(1/2*s12)*
      mt^7*s14 + 2*denom(1/2*s12)*mt^7*s13 + 1/8*denom(1/4*s12^2)*mt*s14^3*
      s23^2 + 1/4*denom(1/4*s12^2)*mt*s13*s14^2*s23*s24 - 1/8*denom(1/4*s12^2)
      *mt*s13*s14^2*s23^2 + 1/8*denom(1/4*s12^2)*mt*s13^2*s14*s24^2 - 1/4*
      denom(1/4*s12^2)*mt*s13^2*s14*s23*s24 - 1/8*denom(1/4*s12^2)*mt*s13^3*
      s24^2 - 1/4*denom(1/4*s12^2)*mt^3*s14^2*s23*s24 - 1/4*denom(1/4*s12^2)*
      mt^3*s14^2*s23^2 - 1/4*denom(1/4*s12^2)*mt^3*s14^3*s23 - 1/4*denom(1/4*
      s12^2)*mt^3*s13*s14*s24^2 + 1/4*denom(1/4*s12^2)*mt^3*s13*s14*s23^2 - 1/
      4*denom(1/4*s12^2)*mt^3*s13*s14^2*s24 + 1/4*denom(1/4*s12^2)*mt^3*s13^2*
      s24^2 + 1/4*denom(1/4*s12^2)*mt^3*s13^2*s23*s24 + 1/4*denom(1/4*s12^2)*
      mt^3*s13^2*s14*s23 + 1/4*denom(1/4*s12^2)*mt^3*s13^3*s24 + 1/8*denom(1/4
      *s12^2)*mt^5*s14*s24^2 + 1/4*denom(1/4*s12^2)*mt^5*s14*s23*s24 + 1/8*
      denom(1/4*s12^2)*mt^5*s14*s23^2 + 1/4*denom(1/4*s12^2)*mt^5*s14^2*s24 + 
      3/4*denom(1/4*s12^2)*mt^5*s14^2*s23 + 1/8*denom(1/4*s12^2)*mt^5*s14^3 - 
      1/8*denom(1/4*s12^2)*mt^5*s13*s24^2 - 1/4*denom(1/4*s12^2)*mt^5*s13*s23*
      s24 - 1/8*denom(1/4*s12^2)*mt^5*s13*s23^2 + 1/2*denom(1/4*s12^2)*mt^5*
      s13*s14*s24 - 1/2*denom(1/4*s12^2)*mt^5*s13*s14*s23 + 1/8*denom(1/4*
      s12^2)*mt^5*s13*s14^2 - 3/4*denom(1/4*s12^2)*mt^5*s13^2*s24 - 1/4*denom(
      1/4*s12^2)*mt^5*s13^2*s23 - 1/8*denom(1/4*s12^2)*mt^5*s13^2*s14 - 1/8*
      denom(1/4*s12^2)*mt^5*s13^3 - 1/2*denom(1/4*s12^2)*mt^7*s14*s24 - 1/2*
      denom(1/4*s12^2)*mt^7*s14*s23 - 1/2*denom(1/4*s12^2)*mt^7*s14^2 + 1/2*
      denom(1/4*s12^2)*mt^7*s13*s24 + 1/2*denom(1/4*s12^2)*mt^7*s13*s23 + 1/2*
      denom(1/4*s12^2)*mt^7*s13^2 + 1/2*denom(1/4*s12^2)*mt^9*s14 - 1/2*denom(
      1/4*s12^2)*mt^9*s13;
 
 .sort
id KMatrix(7,3) =  2*mt^5*s14 - 2*mt^5*s13 - denom(1/2*s12)*mt^3*s14^2*s24 + 
      denom(1/2*s12)*mt^3*s13*s14*s24 - denom(1/2*s12)*mt^3*s13*s14*s23 + 
      denom(1/2*s12)*mt^3*s13^2*s23 + denom(1/2*s12)*mt^5*s14*s24 + denom(1/2*
      s12)*mt^5*s14*s23 + denom(1/2*s12)*mt^5*s14^2 - denom(1/2*s12)*mt^5*s13*
      s24 - denom(1/2*s12)*mt^5*s13*s23 - denom(1/2*s12)*mt^5*s13^2 - 2*denom(
      1/2*s12)*mt^7*s14 + 2*denom(1/2*s12)*mt^7*s13 + 1/2*denom(1/4*s12^2)*mt*
      s13*s14^2*s23*s24 - 1/2*denom(1/4*s12^2)*mt*s13^2*s14*s23*s24 - 1/2*
      denom(1/4*s12^2)*mt^3*s14^2*s23*s24 - 1/2*denom(1/4*s12^2)*mt^3*s13*
      s14^2*s24 - 1/2*denom(1/4*s12^2)*mt^3*s13*s14^2*s23 + 1/2*denom(1/4*
      s12^2)*mt^3*s13^2*s23*s24 + 1/2*denom(1/4*s12^2)*mt^3*s13^2*s14*s24 + 1/
      2*denom(1/4*s12^2)*mt^3*s13^2*s14*s23 + 1/2*denom(1/4*s12^2)*mt^5*s14*
      s23*s24 + 1/2*denom(1/4*s12^2)*mt^5*s14^2*s24 + 1/2*denom(1/4*s12^2)*
      mt^5*s14^2*s23 - 1/2*denom(1/4*s12^2)*mt^5*s13*s23*s24 + 1/2*denom(1/4*
      s12^2)*mt^5*s13*s14^2 - 1/2*denom(1/4*s12^2)*mt^5*s13^2*s24 - 1/2*denom(
      1/4*s12^2)*mt^5*s13^2*s23 - 1/2*denom(1/4*s12^2)*mt^5*s13^2*s14 - 1/2*
      denom(1/4*s12^2)*mt^7*s14*s24 - 1/2*denom(1/4*s12^2)*mt^7*s14*s23 - 1/2*
      denom(1/4*s12^2)*mt^7*s14^2 + 1/2*denom(1/4*s12^2)*mt^7*s13*s24 + 1/2*
      denom(1/4*s12^2)*mt^7*s13*s23 + 1/2*denom(1/4*s12^2)*mt^7*s13^2 + 1/2*
      denom(1/4*s12^2)*mt^9*s14 - 1/2*denom(1/4*s12^2)*mt^9*s13;
 
 .sort
id KMatrix(7,4) =   - mt^3*s14*s24 - mt^3*s14*s23 - mt^3*s14^2 + mt^3*s13*s24
       + mt^3*s13*s23 + mt^3*s13^2 - mt^3*s12*s14 + mt^3*s12*s13 + mt^3*mh^2*
      s14 - mt^3*mh^2*s13 + 2*mt^5*s14 - 2*mt^5*s13 + 1/2*denom(1/2*s12)*mt*
      s14^2*s24^2 + 1/2*denom(1/2*s12)*mt*s14^2*s23*s24 + 1/2*denom(1/2*s12)*
      mt*s14^3*s24 - 1/2*denom(1/2*s12)*mt*s13*s14*s24^2 - 1/2*denom(1/2*s12)*
      mt*s13*s14*s23*s24 - 1/2*denom(1/2*s12)*mt*s13^2*s14*s24 + 1/2*denom(1/2
      *s12)*mt*s12*s14^2*s24 - 1/2*denom(1/2*s12)*mt*s12*s13*s14*s24 - 1/2*
      denom(1/2*s12)*mt*mh^2*s14^2*s24 + 1/2*denom(1/2*s12)*mt*mh^2*s13*s14*
      s24 - 1/2*denom(1/2*s12)*mt^3*s14*s24^2 - 1/2*denom(1/2*s12)*mt^3*s14*
      s23*s24 - 2*denom(1/2*s12)*mt^3*s14^2*s24 - denom(1/2*s12)*mt^3*s14^2*
      s23 - 1/2*denom(1/2*s12)*mt^3*s14^3 + 1/2*denom(1/2*s12)*mt^3*s13*s24^2
       + 1/2*denom(1/2*s12)*mt^3*s13*s23*s24 + denom(1/2*s12)*mt^3*s13*s14*s24
       + denom(1/2*s12)*mt^3*s13*s14*s23 + denom(1/2*s12)*mt^3*s13^2*s24 + 1/2
      *denom(1/2*s12)*mt^3*s13^2*s14 - 1/2*denom(1/2*s12)*mt^3*s12*s14*s24 - 1/
      2*denom(1/2*s12)*mt^3*s12*s14^2 + 1/2*denom(1/2*s12)*mt^3*s12*s13*s24 + 
      1/2*denom(1/2*s12)*mt^3*s12*s13*s14 + 1/2*denom(1/2*s12)*mt^3*mh^2*s14*
      s24 + 1/2*denom(1/2*s12)*mt^3*mh^2*s14^2 - 1/2*denom(1/2*s12)*mt^3*mh^2*
      s13*s24 - 1/2*denom(1/2*s12)*mt^3*mh^2*s13*s14 + 2*denom(1/2*s12)*mt^5*
      s14*s24 + denom(1/2*s12)*mt^5*s14*s23 + 2*denom(1/2*s12)*mt^5*s14^2 - 2*
      denom(1/2*s12)*mt^5*s13*s24 - denom(1/2*s12)*mt^5*s13*s23 - denom(1/2*
      s12)*mt^5*s13*s14 - denom(1/2*s12)*mt^5*s13^2 + 1/2*denom(1/2*s12)*mt^5*
      s12*s14 - 1/2*denom(1/2*s12)*mt^5*s12*s13 - 1/2*denom(1/2*s12)*mt^5*mh^2
      *s14 + 1/2*denom(1/2*s12)*mt^5*mh^2*s13 - 2*denom(1/2*s12)*mt^7*s14 + 2*
      denom(1/2*s12)*mt^7*s13 + 1/4*denom(1/4*s12^2)*mt*s14^3*s23*s24 + 1/4*
      denom(1/4*s12^2)*mt*s13*s14^2*s24^2 - 1/4*denom(1/4*s12^2)*mt*s13*s14^2*
      s23*s24 - 1/4*denom(1/4*s12^2)*mt*s13^2*s14*s24^2 - 1/4*denom(1/4*s12^2)
      *mt^3*s14^2*s24^2 - 1/2*denom(1/4*s12^2)*mt^3*s14^2*s23*s24 - 1/4*denom(
      1/4*s12^2)*mt^3*s14^3*s24 - 1/4*denom(1/4*s12^2)*mt^3*s14^3*s23 + 1/2*
      denom(1/4*s12^2)*mt^3*s13*s14*s23*s24 - 1/4*denom(1/4*s12^2)*mt^3*s13*
      s14^2*s24 + 1/4*denom(1/4*s12^2)*mt^3*s13*s14^2*s23 + 1/4*denom(1/4*
      s12^2)*mt^3*s13^2*s24^2 + 1/2*denom(1/4*s12^2)*mt^3*s13^2*s14*s24 + 1/4*
      denom(1/4*s12^2)*mt^5*s14*s24^2 + 1/4*denom(1/4*s12^2)*mt^5*s14*s23*s24
       + denom(1/4*s12^2)*mt^5*s14^2*s24 + 1/2*denom(1/4*s12^2)*mt^5*s14^2*s23
       + 1/4*denom(1/4*s12^2)*mt^5*s14^3 - 1/4*denom(1/4*s12^2)*mt^5*s13*s24^2
       - 1/4*denom(1/4*s12^2)*mt^5*s13*s23*s24 - 1/2*denom(1/4*s12^2)*mt^5*s13
      *s14*s24 - 1/2*denom(1/4*s12^2)*mt^5*s13*s14*s23 - 1/2*denom(1/4*s12^2)*
      mt^5*s13^2*s24 - 1/4*denom(1/4*s12^2)*mt^5*s13^2*s14 - 3/4*denom(1/4*
      s12^2)*mt^7*s14*s24 - 1/4*denom(1/4*s12^2)*mt^7*s14*s23 - 3/4*denom(1/4*
      s12^2)*mt^7*s14^2 + 3/4*denom(1/4*s12^2)*mt^7*s13*s24 + 1/4*denom(1/4*
      s12^2)*mt^7*s13*s23 + 1/2*denom(1/4*s12^2)*mt^7*s13*s14 + 1/4*denom(1/4*
      s12^2)*mt^7*s13^2 + 1/2*denom(1/4*s12^2)*mt^9*s14 - 1/2*denom(1/4*s12^2)
      *mt^9*s13;
 
 .sort
id KMatrix(7,5) =   - mt^2*s13*s14*s24 - mt^2*s13*s14*s23 - mt^2*s13*s14^2 - 
      mt^2*s13^2*s14 - mt^2*s12*s13*s14 + mt^2*mh^2*s13*s14 + mt^4*s14*s24 + 
      mt^4*s14*s23 + mt^4*s14^2 + mt^4*s13*s24 + mt^4*s13*s23 + 4*mt^4*s13*s14
       + mt^4*s13^2 + mt^4*s12*s14 + mt^4*s12*s13 - mt^4*mh^2*s14 - mt^4*mh^2*
      s13 - mt^6*s24 - mt^6*s23 - 3*mt^6*s14 - 3*mt^6*s13 - mt^6*s12 + mt^6*
      mh^2 + 2*mt^8 + 1/2*denom(1/2*s12)*s13^2*s14*s23*s24 + 1/2*denom(1/2*s12
      )*s13^2*s14*s23^2 + 1/2*denom(1/2*s12)*s13^2*s14^2*s23 + 1/2*denom(1/2*
      s12)*s13^3*s14*s23 + 1/2*denom(1/2*s12)*s12*s13^2*s14*s23 - 1/2*denom(1/
      2*s12)*mh^2*s13^2*s14*s23 - denom(1/2*s12)*mt^2*s13*s14*s23*s24 - denom(
      1/2*s12)*mt^2*s13*s14*s23^2 - 3/2*denom(1/2*s12)*mt^2*s13*s14^2*s23 - 1/
      2*denom(1/2*s12)*mt^2*s13^2*s23*s24 - 1/2*denom(1/2*s12)*mt^2*s13^2*
      s23^2 - denom(1/2*s12)*mt^2*s13^2*s14*s24 - 3*denom(1/2*s12)*mt^2*s13^2*
      s14*s23 - 1/2*denom(1/2*s12)*mt^2*s13^2*s14^2 - 1/2*denom(1/2*s12)*mt^2*
      s13^3*s23 - 1/2*denom(1/2*s12)*mt^2*s13^3*s14 - denom(1/2*s12)*mt^2*s12*
      s13*s14*s23 - 1/2*denom(1/2*s12)*mt^2*s12*s13^2*s23 - 1/2*denom(1/2*s12)
      *mt^2*s12*s13^2*s14 + denom(1/2*s12)*mt^2*mh^2*s13*s14*s23 + 1/2*denom(1/
      2*s12)*mt^2*mh^2*s13^2*s23 + 1/2*denom(1/2*s12)*mt^2*mh^2*s13^2*s14 + 1/
      2*denom(1/2*s12)*mt^4*s14*s23*s24 + 1/2*denom(1/2*s12)*mt^4*s14*s23^2 + 
      denom(1/2*s12)*mt^4*s14^2*s23 + denom(1/2*s12)*mt^4*s13*s23*s24 + denom(
      1/2*s12)*mt^4*s13*s23^2 + 2*denom(1/2*s12)*mt^4*s13*s14*s24 + 11/2*
      denom(1/2*s12)*mt^4*s13*s14*s23 + 3/2*denom(1/2*s12)*mt^4*s13*s14^2 + 
      denom(1/2*s12)*mt^4*s13^2*s24 + 5/2*denom(1/2*s12)*mt^4*s13^2*s23 + 3*
      denom(1/2*s12)*mt^4*s13^2*s14 + 1/2*denom(1/2*s12)*mt^4*s13^3 + 1/2*
      denom(1/2*s12)*mt^4*s12*s14*s23 + denom(1/2*s12)*mt^4*s12*s13*s23 + 
      denom(1/2*s12)*mt^4*s12*s13*s14 + 1/2*denom(1/2*s12)*mt^4*s12*s13^2 - 1/
      2*denom(1/2*s12)*mt^4*mh^2*s14*s23 - denom(1/2*s12)*mt^4*mh^2*s13*s23 - 
      denom(1/2*s12)*mt^4*mh^2*s13*s14 - 1/2*denom(1/2*s12)*mt^4*mh^2*s13^2 - 
      1/2*denom(1/2*s12)*mt^6*s23*s24 - 1/2*denom(1/2*s12)*mt^6*s23^2 - denom(
      1/2*s12)*mt^6*s14*s24 - 3*denom(1/2*s12)*mt^6*s14*s23 - denom(1/2*s12)*
      mt^6*s14^2 - 2*denom(1/2*s12)*mt^6*s13*s24 - 4*denom(1/2*s12)*mt^6*s13*
      s23 - 11/2*denom(1/2*s12)*mt^6*s13*s14 - 5/2*denom(1/2*s12)*mt^6*s13^2
       - 1/2*denom(1/2*s12)*mt^6*s12*s23 - 1/2*denom(1/2*s12)*mt^6*s12*s14 - 
      denom(1/2*s12)*mt^6*s12*s13 + 1/2*denom(1/2*s12)*mt^6*mh^2*s23 + 1/2*
      denom(1/2*s12)*mt^6*mh^2*s14 + denom(1/2*s12)*mt^6*mh^2*s13 + denom(1/2*
      s12)*mt^8*s24 + 2*denom(1/2*s12)*mt^8*s23 + 3*denom(1/2*s12)*mt^8*s14 + 
      4*denom(1/2*s12)*mt^8*s13 + 1/2*denom(1/2*s12)*mt^8*s12 - 1/2*denom(1/2*
      s12)*mt^8*mh^2 - 2*denom(1/2*s12)*mt^10 + 1/4*denom(1/4*s12^2)*s13^2*
      s14^2*s23^2 + 1/4*denom(1/4*s12^2)*s13^3*s14*s23*s24 - 1/2*denom(1/4*
      s12^2)*mt^2*s13*s14^2*s23^2 - 3/4*denom(1/4*s12^2)*mt^2*s13^2*s14*s23*
      s24 - 1/2*denom(1/4*s12^2)*mt^2*s13^2*s14*s23^2 - 1/2*denom(1/4*s12^2)*
      mt^2*s13^2*s14^2*s23 - 1/4*denom(1/4*s12^2)*mt^2*s13^3*s23*s24 - 1/4*
      denom(1/4*s12^2)*mt^2*s13^3*s14*s24 - 1/4*denom(1/4*s12^2)*mt^2*s13^3*
      s14*s23 + 1/4*denom(1/4*s12^2)*mt^4*s14^2*s23^2 + 3/4*denom(1/4*s12^2)*
      mt^4*s13*s14*s23*s24 + denom(1/4*s12^2)*mt^4*s13*s14*s23^2 + denom(1/4*
      s12^2)*mt^4*s13*s14^2*s23 + 3/4*denom(1/4*s12^2)*mt^4*s13^2*s23*s24 + 1/
      4*denom(1/4*s12^2)*mt^4*s13^2*s23^2 + 3/4*denom(1/4*s12^2)*mt^4*s13^2*
      s14*s24 + 7/4*denom(1/4*s12^2)*mt^4*s13^2*s14*s23 + 1/4*denom(1/4*s12^2)
      *mt^4*s13^2*s14^2 + 1/4*denom(1/4*s12^2)*mt^4*s13^3*s24 + 1/4*denom(1/4*
      s12^2)*mt^4*s13^3*s23 + 1/4*denom(1/4*s12^2)*mt^4*s13^3*s14 - 1/4*denom(
      1/4*s12^2)*mt^6*s14*s23*s24 - 1/2*denom(1/4*s12^2)*mt^6*s14*s23^2 - 1/2*
      denom(1/4*s12^2)*mt^6*s14^2*s23 - 3/4*denom(1/4*s12^2)*mt^6*s13*s23*s24
       - 1/2*denom(1/4*s12^2)*mt^6*s13*s23^2 - 3/4*denom(1/4*s12^2)*mt^6*s13*
      s14*s24 - 11/4*denom(1/4*s12^2)*mt^6*s13*s14*s23 - 1/2*denom(1/4*s12^2)*
      mt^6*s13*s14^2 - 3/4*denom(1/4*s12^2)*mt^6*s13^2*s24 - 5/4*denom(1/4*
      s12^2)*mt^6*s13^2*s23 - 5/4*denom(1/4*s12^2)*mt^6*s13^2*s14 - 1/4*denom(
      1/4*s12^2)*mt^6*s13^3 + 1/4*denom(1/4*s12^2)*mt^8*s23*s24 + 1/4*denom(1/
      4*s12^2)*mt^8*s23^2 + 1/4*denom(1/4*s12^2)*mt^8*s14*s24 + 5/4*denom(1/4*
      s12^2)*mt^8*s14*s23 + 1/4*denom(1/4*s12^2)*mt^8*s14^2 + 3/4*denom(1/4*
      s12^2)*mt^8*s13*s24 + 7/4*denom(1/4*s12^2)*mt^8*s13*s23 + 7/4*denom(1/4*
      s12^2)*mt^8*s13*s14 + denom(1/4*s12^2)*mt^8*s13^2 - 1/4*denom(1/4*s12^2)
      *mt^10*s24 - 3/4*denom(1/4*s12^2)*mt^10*s23 - 3/4*denom(1/4*s12^2)*mt^10
      *s14 - 5/4*denom(1/4*s12^2)*mt^10*s13 + 1/2*denom(1/4*s12^2)*mt^12;
 
 .sort
id KMatrix(7,6) =  1/2*s13*s14*s24^2 + s13*s14*s23*s24 + 1/2*s13*s14*s23^2 + 
      s13*s14^2*s24 + s13*s14^2*s23 + 1/2*s13*s14^3 + s13^2*s14*s24 + s13^2*
      s14*s23 + s13^2*s14^2 + 1/2*s13^3*s14 + s12*s13*s14*s24 + s12*s13*s14*
      s23 + s12*s13*s14^2 + s12*s13^2*s14 + 1/2*s12^2*s13*s14 - mh^2*s13*s14*
      s24 - mh^2*s13*s14*s23 - mh^2*s13*s14^2 - mh^2*s13^2*s14 - mh^2*s12*s13*
      s14 + 1/2*mh^4*s13*s14 - 1/2*mt^2*s14*s24^2 - mt^2*s14*s23*s24 - 1/2*
      mt^2*s14*s23^2 - mt^2*s14^2*s24 - mt^2*s14^2*s23 - 1/2*mt^2*s14^3 - 1/2*
      mt^2*s13*s24^2 - mt^2*s13*s23*s24 - 1/2*mt^2*s13*s23^2 - 4*mt^2*s13*s14*
      s24 - 4*mt^2*s13*s14*s23 - 7/2*mt^2*s13*s14^2 - mt^2*s13^2*s24 - mt^2*
      s13^2*s23 - 7/2*mt^2*s13^2*s14 - 1/2*mt^2*s13^3 - mt^2*s12*s14*s24 - 
      mt^2*s12*s14*s23 - mt^2*s12*s14^2 - mt^2*s12*s13*s24 - mt^2*s12*s13*s23
       - 4*mt^2*s12*s13*s14 - mt^2*s12*s13^2 - 1/2*mt^2*s12^2*s14 - 1/2*mt^2*
      s12^2*s13 + mt^2*mh^2*s14*s24 + mt^2*mh^2*s14*s23 + mt^2*mh^2*s14^2 + 
      mt^2*mh^2*s13*s24 + mt^2*mh^2*s13*s23 + 4*mt^2*mh^2*s13*s14 + mt^2*mh^2*
      s13^2 + mt^2*mh^2*s12*s14 + mt^2*mh^2*s12*s13 - 1/2*mt^2*mh^4*s14 - 1/2*
      mt^2*mh^4*s13 + 1/2*mt^4*s24^2 + mt^4*s23*s24 + 1/2*mt^4*s23^2 + 3*mt^4*
      s14*s24 + 3*mt^4*s14*s23 + 5/2*mt^4*s14^2 + 3*mt^4*s13*s24 + 3*mt^4*s13*
      s23 + 7*mt^4*s13*s14 + 5/2*mt^4*s13^2 + mt^4*s12*s24 + mt^4*s12*s23 + 3*
      mt^4*s12*s14 + 3*mt^4*s12*s13 + 1/2*mt^4*s12^2 - mt^4*mh^2*s24 - mt^4*
      mh^2*s23 - 3*mt^4*mh^2*s14 - 3*mt^4*mh^2*s13 - mt^4*mh^2*s12 + 1/2*mt^4*
      mh^4 - 2*mt^6*s24 - 2*mt^6*s23 - 4*mt^6*s14 - 4*mt^6*s13 - 2*mt^6*s12 + 
      2*mt^6*mh^2 + 2*mt^8 + 1/2*denom(1/2*s12)*s13*s14^2*s23*s24 + 1/2*denom(
      1/2*s12)*s13*s14^2*s23^2 + 1/2*denom(1/2*s12)*s13*s14^3*s23 + 1/2*denom(
      1/2*s12)*s13^2*s14*s24^2 + 1/2*denom(1/2*s12)*s13^2*s14*s23*s24 + 1/2*
      denom(1/2*s12)*s13^2*s14^2*s24 + 1/2*denom(1/2*s12)*s13^2*s14^2*s23 + 1/
      2*denom(1/2*s12)*s13^3*s14*s24 + 1/2*denom(1/2*s12)*s12*s13*s14^2*s23 + 
      1/2*denom(1/2*s12)*s12*s13^2*s14*s24 - 1/2*denom(1/2*s12)*mh^2*s13*s14^2
      *s23 - 1/2*denom(1/2*s12)*mh^2*s13^2*s14*s24 - 1/2*denom(1/2*s12)*mt^2*
      s14^2*s23*s24 - 1/2*denom(1/2*s12)*mt^2*s14^2*s23^2 - 1/2*denom(1/2*s12)
      *mt^2*s14^3*s23 - denom(1/2*s12)*mt^2*s13*s14*s24^2 - 2*denom(1/2*s12)*
      mt^2*s13*s14*s23*s24 - denom(1/2*s12)*mt^2*s13*s14*s23^2 - 3/2*denom(1/2
      *s12)*mt^2*s13*s14^2*s24 - 3*denom(1/2*s12)*mt^2*s13*s14^2*s23 - 1/2*
      denom(1/2*s12)*mt^2*s13*s14^3 - 1/2*denom(1/2*s12)*mt^2*s13^2*s24^2 - 1/
      2*denom(1/2*s12)*mt^2*s13^2*s23*s24 - 3*denom(1/2*s12)*mt^2*s13^2*s14*
      s24 - 3/2*denom(1/2*s12)*mt^2*s13^2*s14*s23 - denom(1/2*s12)*mt^2*s13^2*
      s14^2 - 1/2*denom(1/2*s12)*mt^2*s13^3*s24 - 1/2*denom(1/2*s12)*mt^2*
      s13^3*s14 - 1/2*denom(1/2*s12)*mt^2*s12*s14^2*s23 - denom(1/2*s12)*mt^2*
      s12*s13*s14*s24 - denom(1/2*s12)*mt^2*s12*s13*s14*s23 - 1/2*denom(1/2*
      s12)*mt^2*s12*s13*s14^2 - 1/2*denom(1/2*s12)*mt^2*s12*s13^2*s24 - 1/2*
      denom(1/2*s12)*mt^2*s12*s13^2*s14 + 1/2*denom(1/2*s12)*mt^2*mh^2*s14^2*
      s23 + denom(1/2*s12)*mt^2*mh^2*s13*s14*s24 + denom(1/2*s12)*mt^2*mh^2*
      s13*s14*s23 + 1/2*denom(1/2*s12)*mt^2*mh^2*s13*s14^2 + 1/2*denom(1/2*s12
      )*mt^2*mh^2*s13^2*s24 + 1/2*denom(1/2*s12)*mt^2*mh^2*s13^2*s14 + 1/2*
      denom(1/2*s12)*mt^4*s14*s24^2 + 3/2*denom(1/2*s12)*mt^4*s14*s23*s24 + 
      denom(1/2*s12)*mt^4*s14*s23^2 + denom(1/2*s12)*mt^4*s14^2*s24 + 5/2*
      denom(1/2*s12)*mt^4*s14^2*s23 + 1/2*denom(1/2*s12)*mt^4*s14^3 + denom(1/
      2*s12)*mt^4*s13*s24^2 + 3/2*denom(1/2*s12)*mt^4*s13*s23*s24 + 1/2*denom(
      1/2*s12)*mt^4*s13*s23^2 + 11/2*denom(1/2*s12)*mt^4*s13*s14*s24 + 11/2*
      denom(1/2*s12)*mt^4*s13*s14*s23 + 7/2*denom(1/2*s12)*mt^4*s13*s14^2 + 5/
      2*denom(1/2*s12)*mt^4*s13^2*s24 + denom(1/2*s12)*mt^4*s13^2*s23 + 7/2*
      denom(1/2*s12)*mt^4*s13^2*s14 + 1/2*denom(1/2*s12)*mt^4*s13^3 + 1/2*
      denom(1/2*s12)*mt^4*s12*s14*s24 + denom(1/2*s12)*mt^4*s12*s14*s23 + 1/2*
      denom(1/2*s12)*mt^4*s12*s14^2 + denom(1/2*s12)*mt^4*s12*s13*s24 + 1/2*
      denom(1/2*s12)*mt^4*s12*s13*s23 + 2*denom(1/2*s12)*mt^4*s12*s13*s14 + 1/
      2*denom(1/2*s12)*mt^4*s12*s13^2 - 1/2*denom(1/2*s12)*mt^4*mh^2*s14*s24
       - denom(1/2*s12)*mt^4*mh^2*s14*s23 - 1/2*denom(1/2*s12)*mt^4*mh^2*s14^2
       - denom(1/2*s12)*mt^4*mh^2*s13*s24 - 1/2*denom(1/2*s12)*mt^4*mh^2*s13*
      s23 - 2*denom(1/2*s12)*mt^4*mh^2*s13*s14 - 1/2*denom(1/2*s12)*mt^4*mh^2*
      s13^2 - 1/2*denom(1/2*s12)*mt^6*s24^2 - denom(1/2*s12)*mt^6*s23*s24 - 1/
      2*denom(1/2*s12)*mt^6*s23^2 - 3*denom(1/2*s12)*mt^6*s14*s24 - 4*denom(1/
      2*s12)*mt^6*s14*s23 - 5/2*denom(1/2*s12)*mt^6*s14^2 - 4*denom(1/2*s12)*
      mt^6*s13*s24 - 3*denom(1/2*s12)*mt^6*s13*s23 - 7*denom(1/2*s12)*mt^6*s13
      *s14 - 5/2*denom(1/2*s12)*mt^6*s13^2 - 1/2*denom(1/2*s12)*mt^6*s12*s24
       - 1/2*denom(1/2*s12)*mt^6*s12*s23 - 3/2*denom(1/2*s12)*mt^6*s12*s14 - 3/
      2*denom(1/2*s12)*mt^6*s12*s13 + 1/2*denom(1/2*s12)*mt^6*mh^2*s24 + 1/2*
      denom(1/2*s12)*mt^6*mh^2*s23 + 3/2*denom(1/2*s12)*mt^6*mh^2*s14 + 3/2*
      denom(1/2*s12)*mt^6*mh^2*s13 + 2*denom(1/2*s12)*mt^8*s24 + 2*denom(1/2*
      s12)*mt^8*s23 + 4*denom(1/2*s12)*mt^8*s14 + 4*denom(1/2*s12)*mt^8*s13 + 
      denom(1/2*s12)*mt^8*s12 - denom(1/2*s12)*mt^8*mh^2 - 2*denom(1/2*s12)*
      mt^10 + 1/8*denom(1/4*s12^2)*s13*s14^3*s23^2 + 1/4*denom(1/4*s12^2)*
      s13^2*s14^2*s23*s24 + 1/8*denom(1/4*s12^2)*s13^3*s14*s24^2 - 1/8*denom(1/
      4*s12^2)*mt^2*s14^3*s23^2 - 1/2*denom(1/4*s12^2)*mt^2*s13*s14^2*s23*s24
       - 3/8*denom(1/4*s12^2)*mt^2*s13*s14^2*s23^2 - 1/4*denom(1/4*s12^2)*mt^2
      *s13*s14^3*s23 - 3/8*denom(1/4*s12^2)*mt^2*s13^2*s14*s24^2 - 1/2*denom(1/
      4*s12^2)*mt^2*s13^2*s14*s23*s24 - 1/4*denom(1/4*s12^2)*mt^2*s13^2*s14^2*
      s24 - 1/4*denom(1/4*s12^2)*mt^2*s13^2*s14^2*s23 - 1/8*denom(1/4*s12^2)*
      mt^2*s13^3*s24^2 - 1/4*denom(1/4*s12^2)*mt^2*s13^3*s14*s24 + 1/4*denom(1/
      4*s12^2)*mt^4*s14^2*s23*s24 + 3/8*denom(1/4*s12^2)*mt^4*s14^2*s23^2 + 1/
      4*denom(1/4*s12^2)*mt^4*s14^3*s23 + 3/8*denom(1/4*s12^2)*mt^4*s13*s14*
      s24^2 + denom(1/4*s12^2)*mt^4*s13*s14*s23*s24 + 3/8*denom(1/4*s12^2)*
      mt^4*s13*s14*s23^2 + 1/2*denom(1/4*s12^2)*mt^4*s13*s14^2*s24 + 5/4*
      denom(1/4*s12^2)*mt^4*s13*s14^2*s23 + 1/8*denom(1/4*s12^2)*mt^4*s13*
      s14^3 + 3/8*denom(1/4*s12^2)*mt^4*s13^2*s24^2 + 1/4*denom(1/4*s12^2)*
      mt^4*s13^2*s23*s24 + 5/4*denom(1/4*s12^2)*mt^4*s13^2*s14*s24 + 1/2*
      denom(1/4*s12^2)*mt^4*s13^2*s14*s23 + 1/4*denom(1/4*s12^2)*mt^4*s13^2*
      s14^2 + 1/4*denom(1/4*s12^2)*mt^4*s13^3*s24 + 1/8*denom(1/4*s12^2)*mt^4*
      s13^3*s14 - 1/8*denom(1/4*s12^2)*mt^6*s14*s24^2 - 1/2*denom(1/4*s12^2)*
      mt^6*s14*s23*s24 - 3/8*denom(1/4*s12^2)*mt^6*s14*s23^2 - 1/4*denom(1/4*
      s12^2)*mt^6*s14^2*s24 - denom(1/4*s12^2)*mt^6*s14^2*s23 - 1/8*denom(1/4*
      s12^2)*mt^6*s14^3 - 3/8*denom(1/4*s12^2)*mt^6*s13*s24^2 - 1/2*denom(1/4*
      s12^2)*mt^6*s13*s23*s24 - 1/8*denom(1/4*s12^2)*mt^6*s13*s23^2 - 7/4*
      denom(1/4*s12^2)*mt^6*s13*s14*s24 - 7/4*denom(1/4*s12^2)*mt^6*s13*s14*
      s23 - 7/8*denom(1/4*s12^2)*mt^6*s13*s14^2 - denom(1/4*s12^2)*mt^6*s13^2*
      s24 - 1/4*denom(1/4*s12^2)*mt^6*s13^2*s23 - 7/8*denom(1/4*s12^2)*mt^6*
      s13^2*s14 - 1/8*denom(1/4*s12^2)*mt^6*s13^3 + 1/8*denom(1/4*s12^2)*mt^8*
      s24^2 + 1/4*denom(1/4*s12^2)*mt^8*s23*s24 + 1/8*denom(1/4*s12^2)*mt^8*
      s23^2 + 3/4*denom(1/4*s12^2)*mt^8*s14*s24 + 5/4*denom(1/4*s12^2)*mt^8*
      s14*s23 + 5/8*denom(1/4*s12^2)*mt^8*s14^2 + 5/4*denom(1/4*s12^2)*mt^8*
      s13*s24 + 3/4*denom(1/4*s12^2)*mt^8*s13*s23 + 7/4*denom(1/4*s12^2)*mt^8*
      s13*s14 + 5/8*denom(1/4*s12^2)*mt^8*s13^2 - 1/2*denom(1/4*s12^2)*mt^10*
      s24 - 1/2*denom(1/4*s12^2)*mt^10*s23 - denom(1/4*s12^2)*mt^10*s14 - 
      denom(1/4*s12^2)*mt^10*s13 + 1/2*denom(1/4*s12^2)*mt^12;
 
 .sort
id KMatrix(7,7) =  2*mt^4*s13*s14 - 2*mt^6*s14 - 2*mt^6*s13 + 2*mt^8 - denom(1/
      2*s12)*mt^2*s13*s14^2*s24 - denom(1/2*s12)*mt^2*s13^2*s14*s23 + denom(1/
      2*s12)*mt^4*s14^2*s24 + 2*denom(1/2*s12)*mt^4*s13*s14*s24 + 2*denom(1/2*
      s12)*mt^4*s13*s14*s23 + denom(1/2*s12)*mt^4*s13*s14^2 + denom(1/2*s12)*
      mt^4*s13^2*s23 + denom(1/2*s12)*mt^4*s13^2*s14 - 2*denom(1/2*s12)*mt^6*
      s14*s24 - denom(1/2*s12)*mt^6*s14*s23 - denom(1/2*s12)*mt^6*s14^2 - 
      denom(1/2*s12)*mt^6*s13*s24 - 2*denom(1/2*s12)*mt^6*s13*s23 - 4*denom(1/
      2*s12)*mt^6*s13*s14 - denom(1/2*s12)*mt^6*s13^2 + denom(1/2*s12)*mt^8*
      s24 + denom(1/2*s12)*mt^8*s23 + 3*denom(1/2*s12)*mt^8*s14 + 3*denom(1/2*
      s12)*mt^8*s13 - 2*denom(1/2*s12)*mt^10 + 1/2*denom(1/4*s12^2)*s13^2*
      s14^2*s23*s24 - denom(1/4*s12^2)*mt^2*s13*s14^2*s23*s24 - denom(1/4*
      s12^2)*mt^2*s13^2*s14*s23*s24 - 1/2*denom(1/4*s12^2)*mt^2*s13^2*s14^2*
      s24 - 1/2*denom(1/4*s12^2)*mt^2*s13^2*s14^2*s23 + 1/2*denom(1/4*s12^2)*
      mt^4*s14^2*s23*s24 + 2*denom(1/4*s12^2)*mt^4*s13*s14*s23*s24 + denom(1/4
      *s12^2)*mt^4*s13*s14^2*s24 + denom(1/4*s12^2)*mt^4*s13*s14^2*s23 + 1/2*
      denom(1/4*s12^2)*mt^4*s13^2*s23*s24 + denom(1/4*s12^2)*mt^4*s13^2*s14*
      s24 + denom(1/4*s12^2)*mt^4*s13^2*s14*s23 + 1/2*denom(1/4*s12^2)*mt^4*
      s13^2*s14^2 - denom(1/4*s12^2)*mt^6*s14*s23*s24 - 1/2*denom(1/4*s12^2)*
      mt^6*s14^2*s24 - 1/2*denom(1/4*s12^2)*mt^6*s14^2*s23 - denom(1/4*s12^2)*
      mt^6*s13*s23*s24 - 2*denom(1/4*s12^2)*mt^6*s13*s14*s24 - 2*denom(1/4*
      s12^2)*mt^6*s13*s14*s23 - denom(1/4*s12^2)*mt^6*s13*s14^2 - 1/2*denom(1/
      4*s12^2)*mt^6*s13^2*s24 - 1/2*denom(1/4*s12^2)*mt^6*s13^2*s23 - denom(1/
      4*s12^2)*mt^6*s13^2*s14 + 1/2*denom(1/4*s12^2)*mt^8*s23*s24 + denom(1/4*
      s12^2)*mt^8*s14*s24 + denom(1/4*s12^2)*mt^8*s14*s23 + 1/2*denom(1/4*
      s12^2)*mt^8*s14^2 + denom(1/4*s12^2)*mt^8*s13*s24 + denom(1/4*s12^2)*
      mt^8*s13*s23 + 2*denom(1/4*s12^2)*mt^8*s13*s14 + 1/2*denom(1/4*s12^2)*
      mt^8*s13^2 - 1/2*denom(1/4*s12^2)*mt^10*s24 - 1/2*denom(1/4*s12^2)*mt^10
      *s23 - denom(1/4*s12^2)*mt^10*s14 - denom(1/4*s12^2)*mt^10*s13 + 1/2*
      denom(1/4*s12^2)*mt^12;
 
 .sort
id KMatrix(7,8) =   - mt^2*s13*s14*s24 - mt^2*s13*s14*s23 - mt^2*s13*s14^2 - 
      mt^2*s13^2*s14 - mt^2*s12*s13*s14 + mt^2*mh^2*s13*s14 + mt^4*s14*s24 + 
      mt^4*s14*s23 + mt^4*s14^2 + mt^4*s13*s24 + mt^4*s13*s23 + 4*mt^4*s13*s14
       + mt^4*s13^2 + mt^4*s12*s14 + mt^4*s12*s13 - mt^4*mh^2*s14 - mt^4*mh^2*
      s13 - mt^6*s24 - mt^6*s23 - 3*mt^6*s14 - 3*mt^6*s13 - mt^6*s12 + mt^6*
      mh^2 + 2*mt^8 + 1/2*denom(1/2*s12)*s13*s14^2*s24^2 + 1/2*denom(1/2*s12)*
      s13*s14^2*s23*s24 + 1/2*denom(1/2*s12)*s13*s14^3*s24 + 1/2*denom(1/2*s12
      )*s13^2*s14^2*s24 + 1/2*denom(1/2*s12)*s12*s13*s14^2*s24 - 1/2*denom(1/2
      *s12)*mh^2*s13*s14^2*s24 - 1/2*denom(1/2*s12)*mt^2*s14^2*s24^2 - 1/2*
      denom(1/2*s12)*mt^2*s14^2*s23*s24 - 1/2*denom(1/2*s12)*mt^2*s14^3*s24 - 
      denom(1/2*s12)*mt^2*s13*s14*s24^2 - denom(1/2*s12)*mt^2*s13*s14*s23*s24
       - 3*denom(1/2*s12)*mt^2*s13*s14^2*s24 - denom(1/2*s12)*mt^2*s13*s14^2*
      s23 - 1/2*denom(1/2*s12)*mt^2*s13*s14^3 - 3/2*denom(1/2*s12)*mt^2*s13^2*
      s14*s24 - 1/2*denom(1/2*s12)*mt^2*s13^2*s14^2 - 1/2*denom(1/2*s12)*mt^2*
      s12*s14^2*s24 - denom(1/2*s12)*mt^2*s12*s13*s14*s24 - 1/2*denom(1/2*s12)
      *mt^2*s12*s13*s14^2 + 1/2*denom(1/2*s12)*mt^2*mh^2*s14^2*s24 + denom(1/2
      *s12)*mt^2*mh^2*s13*s14*s24 + 1/2*denom(1/2*s12)*mt^2*mh^2*s13*s14^2 + 
      denom(1/2*s12)*mt^4*s14*s24^2 + denom(1/2*s12)*mt^4*s14*s23*s24 + 5/2*
      denom(1/2*s12)*mt^4*s14^2*s24 + denom(1/2*s12)*mt^4*s14^2*s23 + 1/2*
      denom(1/2*s12)*mt^4*s14^3 + 1/2*denom(1/2*s12)*mt^4*s13*s24^2 + 1/2*
      denom(1/2*s12)*mt^4*s13*s23*s24 + 11/2*denom(1/2*s12)*mt^4*s13*s14*s24
       + 2*denom(1/2*s12)*mt^4*s13*s14*s23 + 3*denom(1/2*s12)*mt^4*s13*s14^2
       + denom(1/2*s12)*mt^4*s13^2*s24 + 3/2*denom(1/2*s12)*mt^4*s13^2*s14 + 
      denom(1/2*s12)*mt^4*s12*s14*s24 + 1/2*denom(1/2*s12)*mt^4*s12*s14^2 + 1/
      2*denom(1/2*s12)*mt^4*s12*s13*s24 + denom(1/2*s12)*mt^4*s12*s13*s14 - 
      denom(1/2*s12)*mt^4*mh^2*s14*s24 - 1/2*denom(1/2*s12)*mt^4*mh^2*s14^2 - 
      1/2*denom(1/2*s12)*mt^4*mh^2*s13*s24 - denom(1/2*s12)*mt^4*mh^2*s13*s14
       - 1/2*denom(1/2*s12)*mt^6*s24^2 - 1/2*denom(1/2*s12)*mt^6*s23*s24 - 4*
      denom(1/2*s12)*mt^6*s14*s24 - 2*denom(1/2*s12)*mt^6*s14*s23 - 5/2*denom(
      1/2*s12)*mt^6*s14^2 - 3*denom(1/2*s12)*mt^6*s13*s24 - denom(1/2*s12)*
      mt^6*s13*s23 - 11/2*denom(1/2*s12)*mt^6*s13*s14 - denom(1/2*s12)*mt^6*
      s13^2 - 1/2*denom(1/2*s12)*mt^6*s12*s24 - denom(1/2*s12)*mt^6*s12*s14 - 
      1/2*denom(1/2*s12)*mt^6*s12*s13 + 1/2*denom(1/2*s12)*mt^6*mh^2*s24 + 
      denom(1/2*s12)*mt^6*mh^2*s14 + 1/2*denom(1/2*s12)*mt^6*mh^2*s13 + 2*
      denom(1/2*s12)*mt^8*s24 + denom(1/2*s12)*mt^8*s23 + 4*denom(1/2*s12)*
      mt^8*s14 + 3*denom(1/2*s12)*mt^8*s13 + 1/2*denom(1/2*s12)*mt^8*s12 - 1/2
      *denom(1/2*s12)*mt^8*mh^2 - 2*denom(1/2*s12)*mt^10 + 1/4*denom(1/4*s12^2
      )*s13*s14^3*s23*s24 + 1/4*denom(1/4*s12^2)*s13^2*s14^2*s24^2 - 1/4*
      denom(1/4*s12^2)*mt^2*s14^3*s23*s24 - 1/2*denom(1/4*s12^2)*mt^2*s13*
      s14^2*s24^2 - 3/4*denom(1/4*s12^2)*mt^2*s13*s14^2*s23*s24 - 1/4*denom(1/
      4*s12^2)*mt^2*s13*s14^3*s24 - 1/4*denom(1/4*s12^2)*mt^2*s13*s14^3*s23 - 
      1/2*denom(1/4*s12^2)*mt^2*s13^2*s14*s24^2 - 1/2*denom(1/4*s12^2)*mt^2*
      s13^2*s14^2*s24 + 1/4*denom(1/4*s12^2)*mt^4*s14^2*s24^2 + 3/4*denom(1/4*
      s12^2)*mt^4*s14^2*s23*s24 + 1/4*denom(1/4*s12^2)*mt^4*s14^3*s24 + 1/4*
      denom(1/4*s12^2)*mt^4*s14^3*s23 + denom(1/4*s12^2)*mt^4*s13*s14*s24^2 + 
      3/4*denom(1/4*s12^2)*mt^4*s13*s14*s23*s24 + 7/4*denom(1/4*s12^2)*mt^4*
      s13*s14^2*s24 + 3/4*denom(1/4*s12^2)*mt^4*s13*s14^2*s23 + 1/4*denom(1/4*
      s12^2)*mt^4*s13*s14^3 + 1/4*denom(1/4*s12^2)*mt^4*s13^2*s24^2 + denom(1/
      4*s12^2)*mt^4*s13^2*s14*s24 + 1/4*denom(1/4*s12^2)*mt^4*s13^2*s14^2 - 1/
      2*denom(1/4*s12^2)*mt^6*s14*s24^2 - 3/4*denom(1/4*s12^2)*mt^6*s14*s23*
      s24 - 5/4*denom(1/4*s12^2)*mt^6*s14^2*s24 - 3/4*denom(1/4*s12^2)*mt^6*
      s14^2*s23 - 1/4*denom(1/4*s12^2)*mt^6*s14^3 - 1/2*denom(1/4*s12^2)*mt^6*
      s13*s24^2 - 1/4*denom(1/4*s12^2)*mt^6*s13*s23*s24 - 11/4*denom(1/4*s12^2
      )*mt^6*s13*s14*s24 - 3/4*denom(1/4*s12^2)*mt^6*s13*s14*s23 - 5/4*denom(1/
      4*s12^2)*mt^6*s13*s14^2 - 1/2*denom(1/4*s12^2)*mt^6*s13^2*s24 - 1/2*
      denom(1/4*s12^2)*mt^6*s13^2*s14 + 1/4*denom(1/4*s12^2)*mt^8*s24^2 + 1/4*
      denom(1/4*s12^2)*mt^8*s23*s24 + 7/4*denom(1/4*s12^2)*mt^8*s14*s24 + 3/4*
      denom(1/4*s12^2)*mt^8*s14*s23 + denom(1/4*s12^2)*mt^8*s14^2 + 5/4*denom(
      1/4*s12^2)*mt^8*s13*s24 + 1/4*denom(1/4*s12^2)*mt^8*s13*s23 + 7/4*denom(
      1/4*s12^2)*mt^8*s13*s14 + 1/4*denom(1/4*s12^2)*mt^8*s13^2 - 3/4*denom(1/
      4*s12^2)*mt^10*s24 - 1/4*denom(1/4*s12^2)*mt^10*s23 - 5/4*denom(1/4*
      s12^2)*mt^10*s14 - 3/4*denom(1/4*s12^2)*mt^10*s13 + 1/2*denom(1/4*s12^2)
      *mt^12;
 
 .sort
id KMatrix(7,9) =   - 1/2*mt^2*s14*s23*s24 - 1/2*mt^2*s14*s23^2 - 1/2*mt^2*
      s14^2*s23 - 1/2*mt^2*s13*s24^2 - 1/2*mt^2*s13*s23*s24 - 1/2*mt^2*s13*s14
      *s24 - 1/2*mt^2*s13*s14*s23 - 1/2*mt^2*s13^2*s24 - 1/2*mt^2*s12*s24^2 - 
      mt^2*s12*s23*s24 - 1/2*mt^2*s12*s23^2 - mt^2*s12*s14*s24 - 3/2*mt^2*s12*
      s14*s23 - 1/2*mt^2*s12*s14^2 - 3/2*mt^2*s12*s13*s24 - mt^2*s12*s13*s23
       - mt^2*s12*s13*s14 - 1/2*mt^2*s12*s13^2 - mt^2*s12^2*s24 - mt^2*s12^2*
      s23 - mt^2*s12^2*s14 - mt^2*s12^2*s13 - 1/2*mt^2*s12^3 + 1/2*mt^2*mh^2*
      s14*s23 + 1/2*mt^2*mh^2*s13*s24 + mt^2*mh^2*s12*s24 + mt^2*mh^2*s12*s23
       + mt^2*mh^2*s12*s14 + mt^2*mh^2*s12*s13 + mt^2*mh^2*s12^2 - 1/2*mt^2*
      mh^4*s12 + 1/2*mt^4*s24^2 + mt^4*s23*s24 + 1/2*mt^4*s23^2 + mt^4*s14*s24
       + 2*mt^4*s14*s23 + 1/2*mt^4*s14^2 + 2*mt^4*s13*s24 + mt^4*s13*s23 + 
      mt^4*s13*s14 + 1/2*mt^4*s13^2 + 7/2*mt^4*s12*s24 + 7/2*mt^4*s12*s23 + 7/
      2*mt^4*s12*s14 + 7/2*mt^4*s12*s13 + 3*mt^4*s12^2 - 1/2*mt^4*mh^2*s24 - 1/
      2*mt^4*mh^2*s23 - 1/2*mt^4*mh^2*s14 - 1/2*mt^4*mh^2*s13 - 3*mt^4*mh^2*
      s12 - 2*mt^6*s24 - 2*mt^6*s23 - 2*mt^6*s14 - 2*mt^6*s13 - 5*mt^6*s12 + 
      mt^6*mh^2 + 2*mt^8 + 1/4*denom(1/2*s12)*s13*s14*s23^2*s24 + 1/4*denom(1/
      2*s12)*s13*s14*s23^3 + 1/4*denom(1/2*s12)*s13*s14^2*s23^2 + 1/4*denom(1/
      2*s12)*s13^2*s23*s24^2 + 1/4*denom(1/2*s12)*s13^2*s23^2*s24 + 1/4*denom(
      1/2*s12)*s13^2*s14*s23*s24 + 1/4*denom(1/2*s12)*s13^2*s14*s23^2 + 1/4*
      denom(1/2*s12)*s13^3*s23*s24 + 1/4*denom(1/2*s12)*s12*s13*s23*s24^2 + 1/
      2*denom(1/2*s12)*s12*s13*s23^2*s24 + 1/4*denom(1/2*s12)*s12*s13*s23^3 + 
      1/2*denom(1/2*s12)*s12*s13*s14*s23*s24 + 3/4*denom(1/2*s12)*s12*s13*s14*
      s23^2 + 1/4*denom(1/2*s12)*s12*s13*s14^2*s23 + 3/4*denom(1/2*s12)*s12*
      s13^2*s23*s24 + 1/2*denom(1/2*s12)*s12*s13^2*s23^2 + 1/2*denom(1/2*s12)*
      s12*s13^2*s14*s23 + 1/4*denom(1/2*s12)*s12*s13^3*s23 + 1/2*denom(1/2*s12
      )*s12^2*s13*s23*s24 + 1/2*denom(1/2*s12)*s12^2*s13*s23^2 + 1/2*denom(1/2
      *s12)*s12^2*s13*s14*s23 + 1/2*denom(1/2*s12)*s12^2*s13^2*s23 + 1/4*
      denom(1/2*s12)*s12^3*s13*s23 - 1/4*denom(1/2*s12)*mh^2*s13*s14*s23^2 - 1/
      4*denom(1/2*s12)*mh^2*s13^2*s23*s24 - 1/2*denom(1/2*s12)*mh^2*s12*s13*
      s23*s24 - 1/2*denom(1/2*s12)*mh^2*s12*s13*s23^2 - 1/2*denom(1/2*s12)*
      mh^2*s12*s13*s14*s23 - 1/2*denom(1/2*s12)*mh^2*s12*s13^2*s23 - 1/2*
      denom(1/2*s12)*mh^2*s12^2*s13*s23 + 1/4*denom(1/2*s12)*mh^4*s12*s13*s23
       - 1/4*denom(1/2*s12)*mt^2*s14*s23^2*s24 - 1/4*denom(1/2*s12)*mt^2*s14*
      s23^3 - 1/2*denom(1/2*s12)*mt^2*s14^2*s23^2 - 1/2*denom(1/2*s12)*mt^2*
      s13*s23*s24^2 - 3/4*denom(1/2*s12)*mt^2*s13*s23^2*s24 - 1/4*denom(1/2*
      s12)*mt^2*s13*s23^3 - 3/2*denom(1/2*s12)*mt^2*s13*s14*s23*s24 - 3/2*
      denom(1/2*s12)*mt^2*s13*s14*s23^2 - 1/2*denom(1/2*s12)*mt^2*s13*s14^2*
      s23 - 1/2*denom(1/2*s12)*mt^2*s13^2*s24^2 - 3/2*denom(1/2*s12)*mt^2*
      s13^2*s23*s24 - 1/2*denom(1/2*s12)*mt^2*s13^2*s23^2 - 1/4*denom(1/2*s12)
      *mt^2*s13^2*s14*s24 - 3/4*denom(1/2*s12)*mt^2*s13^2*s14*s23 - 1/4*denom(
      1/2*s12)*mt^2*s13^3*s24 - 1/4*denom(1/2*s12)*mt^2*s13^3*s23 - 1/4*denom(
      1/2*s12)*mt^2*s12*s23*s24^2 - 1/2*denom(1/2*s12)*mt^2*s12*s23^2*s24 - 1/
      4*denom(1/2*s12)*mt^2*s12*s23^3 - 3/4*denom(1/2*s12)*mt^2*s12*s14*s23*
      s24 - denom(1/2*s12)*mt^2*s12*s14*s23^2 - 1/2*denom(1/2*s12)*mt^2*s12*
      s14^2*s23 - 1/2*denom(1/2*s12)*mt^2*s12*s13*s24^2 - 13/4*denom(1/2*s12)*
      mt^2*s12*s13*s23*s24 - 5/2*denom(1/2*s12)*mt^2*s12*s13*s23^2 - 3/4*
      denom(1/2*s12)*mt^2*s12*s13*s14*s24 - 13/4*denom(1/2*s12)*mt^2*s12*s13*
      s14*s23 - 1/4*denom(1/2*s12)*mt^2*s12*s13*s14^2 - denom(1/2*s12)*mt^2*
      s12*s13^2*s24 - 5/2*denom(1/2*s12)*mt^2*s12*s13^2*s23 - 1/2*denom(1/2*
      s12)*mt^2*s12*s13^2*s14 - 1/4*denom(1/2*s12)*mt^2*s12*s13^3 - 1/2*denom(
      1/2*s12)*mt^2*s12^2*s23*s24 - 1/2*denom(1/2*s12)*mt^2*s12^2*s23^2 - 3/4*
      denom(1/2*s12)*mt^2*s12^2*s14*s23 - 3/4*denom(1/2*s12)*mt^2*s12^2*s13*
      s24 - 5/2*denom(1/2*s12)*mt^2*s12^2*s13*s23 - 1/2*denom(1/2*s12)*mt^2*
      s12^2*s13*s14 - 1/2*denom(1/2*s12)*mt^2*s12^2*s13^2 - 1/4*denom(1/2*s12)
      *mt^2*s12^3*s23 - 1/4*denom(1/2*s12)*mt^2*s12^3*s13 + 1/4*denom(1/2*s12)
      *mt^2*mh^2*s14*s23^2 + 1/2*denom(1/2*s12)*mt^2*mh^2*s13*s23*s24 + 1/4*
      denom(1/2*s12)*mt^2*mh^2*s13*s23^2 + 1/2*denom(1/2*s12)*mt^2*mh^2*s13*
      s14*s23 + 1/4*denom(1/2*s12)*mt^2*mh^2*s13^2*s24 + 1/4*denom(1/2*s12)*
      mt^2*mh^2*s13^2*s23 + 1/2*denom(1/2*s12)*mt^2*mh^2*s12*s23*s24 + 1/2*
      denom(1/2*s12)*mt^2*mh^2*s12*s23^2 + 3/4*denom(1/2*s12)*mt^2*mh^2*s12*
      s14*s23 + 3/4*denom(1/2*s12)*mt^2*mh^2*s12*s13*s24 + 5/2*denom(1/2*s12)*
      mt^2*mh^2*s12*s13*s23 + 1/2*denom(1/2*s12)*mt^2*mh^2*s12*s13*s14 + 1/2*
      denom(1/2*s12)*mt^2*mh^2*s12*s13^2 + 1/2*denom(1/2*s12)*mt^2*mh^2*s12^2*
      s23 + 1/2*denom(1/2*s12)*mt^2*mh^2*s12^2*s13 - 1/4*denom(1/2*s12)*mt^2*
      mh^4*s12*s23 - 1/4*denom(1/2*s12)*mt^2*mh^4*s12*s13 + 1/4*denom(1/2*s12)
      *mt^4*s23*s24^2 + 1/2*denom(1/2*s12)*mt^4*s23^2*s24 + 1/4*denom(1/2*s12)
      *mt^4*s23^3 + 5/4*denom(1/2*s12)*mt^4*s14*s23*s24 + 7/4*denom(1/2*s12)*
      mt^4*s14*s23^2 + denom(1/2*s12)*mt^4*s14^2*s23 + denom(1/2*s12)*mt^4*s13
      *s24^2 + 13/4*denom(1/2*s12)*mt^4*s13*s23*s24 + 7/4*denom(1/2*s12)*mt^4*
      s13*s23^2 + 5/4*denom(1/2*s12)*mt^4*s13*s14*s24 + 13/4*denom(1/2*s12)*
      mt^4*s13*s14*s23 + 1/4*denom(1/2*s12)*mt^4*s13*s14^2 + 7/4*denom(1/2*s12
      )*mt^4*s13^2*s24 + 7/4*denom(1/2*s12)*mt^4*s13^2*s23 + 1/2*denom(1/2*s12
      )*mt^4*s13^2*s14 + 1/4*denom(1/2*s12)*mt^4*s13^3 + 1/2*denom(1/2*s12)*
      mt^4*s12*s24^2 + 11/4*denom(1/2*s12)*mt^4*s12*s23*s24 + 9/4*denom(1/2*
      s12)*mt^4*s12*s23^2 + denom(1/2*s12)*mt^4*s12*s14*s24 + 4*denom(1/2*s12)
      *mt^4*s12*s14*s23 + 1/2*denom(1/2*s12)*mt^4*s12*s14^2 + 4*denom(1/2*s12)
      *mt^4*s12*s13*s24 + 7*denom(1/2*s12)*mt^4*s12*s13*s23 + 11/4*denom(1/2*
      s12)*mt^4*s12*s13*s14 + 9/4*denom(1/2*s12)*mt^4*s12*s13^2 + 3/4*denom(1/
      2*s12)*mt^4*s12^2*s24 + 9/4*denom(1/2*s12)*mt^4*s12^2*s23 + 3/4*denom(1/
      2*s12)*mt^4*s12^2*s14 + 9/4*denom(1/2*s12)*mt^4*s12^2*s13 + 1/4*denom(1/
      2*s12)*mt^4*s12^3 - 1/4*denom(1/2*s12)*mt^4*mh^2*s23*s24 - 1/4*denom(1/2
      *s12)*mt^4*mh^2*s23^2 - 1/2*denom(1/2*s12)*mt^4*mh^2*s14*s23 - 1/2*
      denom(1/2*s12)*mt^4*mh^2*s13*s24 - denom(1/2*s12)*mt^4*mh^2*s13*s23 - 1/
      4*denom(1/2*s12)*mt^4*mh^2*s13*s14 - 1/4*denom(1/2*s12)*mt^4*mh^2*s13^2
       - 3/4*denom(1/2*s12)*mt^4*mh^2*s12*s24 - 9/4*denom(1/2*s12)*mt^4*mh^2*
      s12*s23 - 3/4*denom(1/2*s12)*mt^4*mh^2*s12*s14 - 9/4*denom(1/2*s12)*mt^4
      *mh^2*s12*s13 - 1/2*denom(1/2*s12)*mt^4*mh^2*s12^2 + 1/4*denom(1/2*s12)*
      mt^4*mh^4*s12 - 1/2*denom(1/2*s12)*mt^6*s24^2 - 2*denom(1/2*s12)*mt^6*
      s23*s24 - 3/2*denom(1/2*s12)*mt^6*s23^2 - denom(1/2*s12)*mt^6*s14*s24 - 
      7/2*denom(1/2*s12)*mt^6*s14*s23 - 1/2*denom(1/2*s12)*mt^6*s14^2 - 7/2*
      denom(1/2*s12)*mt^6*s13*s24 - 4*denom(1/2*s12)*mt^6*s13*s23 - 2*denom(1/
      2*s12)*mt^6*s13*s14 - 3/2*denom(1/2*s12)*mt^6*s13^2 - 13/4*denom(1/2*s12
      )*mt^6*s12*s24 - 23/4*denom(1/2*s12)*mt^6*s12*s23 - 13/4*denom(1/2*s12)*
      mt^6*s12*s14 - 23/4*denom(1/2*s12)*mt^6*s12*s13 - 2*denom(1/2*s12)*mt^6*
      s12^2 + 1/4*denom(1/2*s12)*mt^6*mh^2*s24 + 3/4*denom(1/2*s12)*mt^6*mh^2*
      s23 + 1/4*denom(1/2*s12)*mt^6*mh^2*s14 + 3/4*denom(1/2*s12)*mt^6*mh^2*
      s13 + 2*denom(1/2*s12)*mt^6*mh^2*s12 + 2*denom(1/2*s12)*mt^8*s24 + 3*
      denom(1/2*s12)*mt^8*s23 + 2*denom(1/2*s12)*mt^8*s14 + 3*denom(1/2*s12)*
      mt^8*s13 + 9/2*denom(1/2*s12)*mt^8*s12 - 1/2*denom(1/2*s12)*mt^8*mh^2 - 
      2*denom(1/2*s12)*mt^10 + 1/8*denom(1/4*s12^2)*s13*s14^2*s23^3 + 1/4*
      denom(1/4*s12^2)*s13^2*s14*s23^2*s24 + 1/8*denom(1/4*s12^2)*s13^3*s23*
      s24^2 + 1/8*denom(1/4*s12^2)*s12*s13*s14*s23^2*s24 + 1/8*denom(1/4*s12^2
      )*s12*s13*s14*s23^3 + 1/8*denom(1/4*s12^2)*s12*s13*s14^2*s23^2 + 1/8*
      denom(1/4*s12^2)*s12*s13^2*s23*s24^2 + 1/8*denom(1/4*s12^2)*s12*s13^2*
      s23^2*s24 + 1/8*denom(1/4*s12^2)*s12*s13^2*s14*s23*s24 + 1/8*denom(1/4*
      s12^2)*s12*s13^2*s14*s23^2 + 1/8*denom(1/4*s12^2)*s12*s13^3*s23*s24 + 1/
      8*denom(1/4*s12^2)*s12^2*s13*s14*s23^2 + 1/8*denom(1/4*s12^2)*s12^2*
      s13^2*s23*s24 - 1/8*denom(1/4*s12^2)*mh^2*s12*s13*s14*s23^2 - 1/8*denom(
      1/4*s12^2)*mh^2*s12*s13^2*s23*s24 - 1/8*denom(1/4*s12^2)*mt^2*s14^2*
      s23^3 - 1/2*denom(1/4*s12^2)*mt^2*s13*s14*s23^2*s24 - 1/4*denom(1/4*
      s12^2)*mt^2*s13*s14*s23^3 - 3/8*denom(1/4*s12^2)*mt^2*s13*s14^2*s23^2 - 
      3/8*denom(1/4*s12^2)*mt^2*s13^2*s23*s24^2 - 1/4*denom(1/4*s12^2)*mt^2*
      s13^2*s23^2*s24 - 1/2*denom(1/4*s12^2)*mt^2*s13^2*s14*s23*s24 - 1/4*
      denom(1/4*s12^2)*mt^2*s13^2*s14*s23^2 - 1/8*denom(1/4*s12^2)*mt^2*s13^3*
      s24^2 - 1/4*denom(1/4*s12^2)*mt^2*s13^3*s23*s24 - 1/8*denom(1/4*s12^2)*
      mt^2*s12*s14*s23^2*s24 - 1/8*denom(1/4*s12^2)*mt^2*s12*s14*s23^3 - 1/8*
      denom(1/4*s12^2)*mt^2*s12*s14^2*s23^2 - 1/4*denom(1/4*s12^2)*mt^2*s12*
      s13*s23*s24^2 - 3/8*denom(1/4*s12^2)*mt^2*s12*s13*s23^2*s24 - 1/8*denom(
      1/4*s12^2)*mt^2*s12*s13*s23^3 - 1/2*denom(1/4*s12^2)*mt^2*s12*s13*s14*
      s23*s24 - denom(1/4*s12^2)*mt^2*s12*s13*s14*s23^2 - 1/4*denom(1/4*s12^2)
      *mt^2*s12*s13*s14^2*s23 - 1/8*denom(1/4*s12^2)*mt^2*s12*s13^2*s24^2 - 
      denom(1/4*s12^2)*mt^2*s12*s13^2*s23*s24 - 1/4*denom(1/4*s12^2)*mt^2*s12*
      s13^2*s23^2 - 1/8*denom(1/4*s12^2)*mt^2*s12*s13^2*s14*s24 - 3/8*denom(1/
      4*s12^2)*mt^2*s12*s13^2*s14*s23 - 1/8*denom(1/4*s12^2)*mt^2*s12*s13^3*
      s24 - 1/8*denom(1/4*s12^2)*mt^2*s12*s13^3*s23 - 1/8*denom(1/4*s12^2)*
      mt^2*s12^2*s14*s23^2 - 1/4*denom(1/4*s12^2)*mt^2*s12^2*s13*s23*s24 - 1/8
      *denom(1/4*s12^2)*mt^2*s12^2*s13*s23^2 - 1/4*denom(1/4*s12^2)*mt^2*s12^2
      *s13*s14*s23 - 1/8*denom(1/4*s12^2)*mt^2*s12^2*s13^2*s24 - 1/8*denom(1/4
      *s12^2)*mt^2*s12^2*s13^2*s23 + 1/8*denom(1/4*s12^2)*mt^2*mh^2*s12*s14*
      s23^2 + 1/4*denom(1/4*s12^2)*mt^2*mh^2*s12*s13*s23*s24 + 1/8*denom(1/4*
      s12^2)*mt^2*mh^2*s12*s13*s23^2 + 1/4*denom(1/4*s12^2)*mt^2*mh^2*s12*s13*
      s14*s23 + 1/8*denom(1/4*s12^2)*mt^2*mh^2*s12*s13^2*s24 + 1/8*denom(1/4*
      s12^2)*mt^2*mh^2*s12*s13^2*s23 + 1/4*denom(1/4*s12^2)*mt^4*s14*s23^2*s24
       + 1/4*denom(1/4*s12^2)*mt^4*s14*s23^3 + 3/8*denom(1/4*s12^2)*mt^4*s14^2
      *s23^2 + 3/8*denom(1/4*s12^2)*mt^4*s13*s23*s24^2 + 1/2*denom(1/4*s12^2)*
      mt^4*s13*s23^2*s24 + 1/8*denom(1/4*s12^2)*mt^4*s13*s23^3 + denom(1/4*
      s12^2)*mt^4*s13*s14*s23*s24 + 5/4*denom(1/4*s12^2)*mt^4*s13*s14*s23^2 + 
      3/8*denom(1/4*s12^2)*mt^4*s13*s14^2*s23 + 3/8*denom(1/4*s12^2)*mt^4*
      s13^2*s24^2 + 5/4*denom(1/4*s12^2)*mt^4*s13^2*s23*s24 + 1/4*denom(1/4*
      s12^2)*mt^4*s13^2*s23^2 + 1/4*denom(1/4*s12^2)*mt^4*s13^2*s14*s24 + 1/2*
      denom(1/4*s12^2)*mt^4*s13^2*s14*s23 + 1/4*denom(1/4*s12^2)*mt^4*s13^3*
      s24 + 1/8*denom(1/4*s12^2)*mt^4*s13^3*s23 + 1/8*denom(1/4*s12^2)*mt^4*
      s12*s23*s24^2 + 1/4*denom(1/4*s12^2)*mt^4*s12*s23^2*s24 + 1/8*denom(1/4*
      s12^2)*mt^4*s12*s23^3 + 3/8*denom(1/4*s12^2)*mt^4*s12*s14*s23*s24 + 7/8*
      denom(1/4*s12^2)*mt^4*s12*s14*s23^2 + 1/4*denom(1/4*s12^2)*mt^4*s12*
      s14^2*s23 + 1/4*denom(1/4*s12^2)*mt^4*s12*s13*s24^2 + 15/8*denom(1/4*
      s12^2)*mt^4*s12*s13*s23*s24 + 9/8*denom(1/4*s12^2)*mt^4*s12*s13*s23^2 + 
      3/8*denom(1/4*s12^2)*mt^4*s12*s13*s14*s24 + 15/8*denom(1/4*s12^2)*mt^4*
      s12*s13*s14*s23 + 1/8*denom(1/4*s12^2)*mt^4*s12*s13*s14^2 + 7/8*denom(1/
      4*s12^2)*mt^4*s12*s13^2*s24 + 9/8*denom(1/4*s12^2)*mt^4*s12*s13^2*s23 + 
      1/4*denom(1/4*s12^2)*mt^4*s12*s13^2*s14 + 1/8*denom(1/4*s12^2)*mt^4*s12*
      s13^3 + 1/8*denom(1/4*s12^2)*mt^4*s12^2*s23*s24 + 1/8*denom(1/4*s12^2)*
      mt^4*s12^2*s23^2 + 1/4*denom(1/4*s12^2)*mt^4*s12^2*s14*s23 + 1/4*denom(1/
      4*s12^2)*mt^4*s12^2*s13*s24 + 1/2*denom(1/4*s12^2)*mt^4*s12^2*s13*s23 + 
      1/8*denom(1/4*s12^2)*mt^4*s12^2*s13*s14 + 1/8*denom(1/4*s12^2)*mt^4*
      s12^2*s13^2 - 1/8*denom(1/4*s12^2)*mt^4*mh^2*s12*s23*s24 - 1/8*denom(1/4
      *s12^2)*mt^4*mh^2*s12*s23^2 - 1/4*denom(1/4*s12^2)*mt^4*mh^2*s12*s14*s23
       - 1/4*denom(1/4*s12^2)*mt^4*mh^2*s12*s13*s24 - 1/2*denom(1/4*s12^2)*
      mt^4*mh^2*s12*s13*s23 - 1/8*denom(1/4*s12^2)*mt^4*mh^2*s12*s13*s14 - 1/8
      *denom(1/4*s12^2)*mt^4*mh^2*s12*s13^2 - 1/8*denom(1/4*s12^2)*mt^6*s23*
      s24^2 - 1/4*denom(1/4*s12^2)*mt^6*s23^2*s24 - 1/8*denom(1/4*s12^2)*mt^6*
      s23^3 - 1/2*denom(1/4*s12^2)*mt^6*s14*s23*s24 - denom(1/4*s12^2)*mt^6*
      s14*s23^2 - 3/8*denom(1/4*s12^2)*mt^6*s14^2*s23 - 3/8*denom(1/4*s12^2)*
      mt^6*s13*s24^2 - 7/4*denom(1/4*s12^2)*mt^6*s13*s23*s24 - 7/8*denom(1/4*
      s12^2)*mt^6*s13*s23^2 - 1/2*denom(1/4*s12^2)*mt^6*s13*s14*s24 - 7/4*
      denom(1/4*s12^2)*mt^6*s13*s14*s23 - 1/8*denom(1/4*s12^2)*mt^6*s13*s14^2
       - denom(1/4*s12^2)*mt^6*s13^2*s24 - 7/8*denom(1/4*s12^2)*mt^6*s13^2*s23
       - 1/4*denom(1/4*s12^2)*mt^6*s13^2*s14 - 1/8*denom(1/4*s12^2)*mt^6*s13^3
       - 1/8*denom(1/4*s12^2)*mt^6*s12*s24^2 - denom(1/4*s12^2)*mt^6*s12*s23*
      s24 - 7/8*denom(1/4*s12^2)*mt^6*s12*s23^2 - 1/4*denom(1/4*s12^2)*mt^6*
      s12*s14*s24 - 3/2*denom(1/4*s12^2)*mt^6*s12*s14*s23 - 1/8*denom(1/4*
      s12^2)*mt^6*s12*s14^2 - 3/2*denom(1/4*s12^2)*mt^6*s12*s13*s24 - 11/4*
      denom(1/4*s12^2)*mt^6*s12*s13*s23 - denom(1/4*s12^2)*mt^6*s12*s13*s14 - 
      7/8*denom(1/4*s12^2)*mt^6*s12*s13^2 - 1/8*denom(1/4*s12^2)*mt^6*s12^2*
      s24 - 3/8*denom(1/4*s12^2)*mt^6*s12^2*s23 - 1/8*denom(1/4*s12^2)*mt^6*
      s12^2*s14 - 3/8*denom(1/4*s12^2)*mt^6*s12^2*s13 + 1/8*denom(1/4*s12^2)*
      mt^6*mh^2*s12*s24 + 3/8*denom(1/4*s12^2)*mt^6*mh^2*s12*s23 + 1/8*denom(1/
      4*s12^2)*mt^6*mh^2*s12*s14 + 3/8*denom(1/4*s12^2)*mt^6*mh^2*s12*s13 + 1/
      8*denom(1/4*s12^2)*mt^8*s24^2 + 3/4*denom(1/4*s12^2)*mt^8*s23*s24 + 5/8*
      denom(1/4*s12^2)*mt^8*s23^2 + 1/4*denom(1/4*s12^2)*mt^8*s14*s24 + 5/4*
      denom(1/4*s12^2)*mt^8*s14*s23 + 1/8*denom(1/4*s12^2)*mt^8*s14^2 + 5/4*
      denom(1/4*s12^2)*mt^8*s13*s24 + 7/4*denom(1/4*s12^2)*mt^8*s13*s23 + 3/4*
      denom(1/4*s12^2)*mt^8*s13*s14 + 5/8*denom(1/4*s12^2)*mt^8*s13^2 + 3/4*
      denom(1/4*s12^2)*mt^8*s12*s24 + 7/4*denom(1/4*s12^2)*mt^8*s12*s23 + 3/4*
      denom(1/4*s12^2)*mt^8*s12*s14 + 7/4*denom(1/4*s12^2)*mt^8*s12*s13 + 1/4*
      denom(1/4*s12^2)*mt^8*s12^2 - 1/4*denom(1/4*s12^2)*mt^8*mh^2*s12 - 1/2*
      denom(1/4*s12^2)*mt^10*s24 - denom(1/4*s12^2)*mt^10*s23 - 1/2*denom(1/4*
      s12^2)*mt^10*s14 - denom(1/4*s12^2)*mt^10*s13 - denom(1/4*s12^2)*mt^10*
      s12 + 1/2*denom(1/4*s12^2)*mt^12;
 
 .sort
id KMatrix(7,10) =  1/4*s14*s23*s24^2 + 1/2*s14*s23^2*s24 + 1/4*s14*s23^3 + 1/
      2*s14^2*s23*s24 + 1/2*s14^2*s23^2 + 1/4*s14^3*s23 + 1/4*s13*s24^3 + 1/2*
      s13*s23*s24^2 + 1/4*s13*s23^2*s24 + 1/2*s13*s14*s24^2 + s13*s14*s23*s24
       + 1/2*s13*s14*s23^2 + 1/4*s13*s14^2*s24 + 1/2*s13*s14^2*s23 + 1/2*s13^2
      *s24^2 + 1/2*s13^2*s23*s24 + 1/2*s13^2*s14*s24 + 1/4*s13^2*s14*s23 + 1/4
      *s13^3*s24 + 1/4*s12*s24^3 + 3/4*s12*s23*s24^2 + 3/4*s12*s23^2*s24 + 1/4
      *s12*s23^3 + 3/4*s12*s14*s24^2 + 2*s12*s14*s23*s24 + 5/4*s12*s14*s23^2
       + 3/4*s12*s14^2*s24 + 5/4*s12*s14^2*s23 + 1/4*s12*s14^3 + 5/4*s12*s13*
      s24^2 + 2*s12*s13*s23*s24 + 3/4*s12*s13*s23^2 + 2*s12*s13*s14*s24 + 2*
      s12*s13*s14*s23 + 3/4*s12*s13*s14^2 + 5/4*s12*s13^2*s24 + 3/4*s12*s13^2*
      s23 + 3/4*s12*s13^2*s14 + 1/4*s12*s13^3 + 3/4*s12^2*s24^2 + 3/2*s12^2*
      s23*s24 + 3/4*s12^2*s23^2 + 3/2*s12^2*s14*s24 + 7/4*s12^2*s14*s23 + 3/4*
      s12^2*s14^2 + 7/4*s12^2*s13*s24 + 3/2*s12^2*s13*s23 + 3/2*s12^2*s13*s14
       + 3/4*s12^2*s13^2 + 3/4*s12^3*s24 + 3/4*s12^3*s23 + 3/4*s12^3*s14 + 3/4
      *s12^3*s13 + 1/4*s12^4 - 1/2*mh^2*s14*s23*s24 - 1/2*mh^2*s14*s23^2 - 1/2
      *mh^2*s14^2*s23 - 1/2*mh^2*s13*s24^2 - 1/2*mh^2*s13*s23*s24 - 1/2*mh^2*
      s13*s14*s24 - 1/2*mh^2*s13*s14*s23 - 1/2*mh^2*s13^2*s24 - 3/4*mh^2*s12*
      s24^2 - 3/2*mh^2*s12*s23*s24 - 3/4*mh^2*s12*s23^2 - 3/2*mh^2*s12*s14*s24
       - 2*mh^2*s12*s14*s23 - 3/4*mh^2*s12*s14^2 - 2*mh^2*s12*s13*s24 - 3/2*
      mh^2*s12*s13*s23 - 3/2*mh^2*s12*s13*s14 - 3/4*mh^2*s12*s13^2 - 3/2*mh^2*
      s12^2*s24 - 3/2*mh^2*s12^2*s23 - 3/2*mh^2*s12^2*s14 - 3/2*mh^2*s12^2*s13
       - 3/4*mh^2*s12^3 + 1/4*mh^4*s14*s23 + 1/4*mh^4*s13*s24 + 3/4*mh^4*s12*
      s24 + 3/4*mh^4*s12*s23 + 3/4*mh^4*s12*s14 + 3/4*mh^4*s12*s13 + 3/4*mh^4*
      s12^2 - 1/4*mh^6*s12 - 1/4*mt^2*s24^3 - 3/4*mt^2*s23*s24^2 - 3/4*mt^2*
      s23^2*s24 - 1/4*mt^2*s23^3 - 3/4*mt^2*s14*s24^2 - 5/2*mt^2*s14*s23*s24
       - 7/4*mt^2*s14*s23^2 - 3/4*mt^2*s14^2*s24 - 7/4*mt^2*s14^2*s23 - 1/4*
      mt^2*s14^3 - 7/4*mt^2*s13*s24^2 - 5/2*mt^2*s13*s23*s24 - 3/4*mt^2*s13*
      s23^2 - 5/2*mt^2*s13*s14*s24 - 5/2*mt^2*s13*s14*s23 - 3/4*mt^2*s13*s14^2
       - 7/4*mt^2*s13^2*s24 - 3/4*mt^2*s13^2*s23 - 3/4*mt^2*s13^2*s14 - 1/4*
      mt^2*s13^3 - 5/2*mt^2*s12*s24^2 - 5*mt^2*s12*s23*s24 - 5/2*mt^2*s12*
      s23^2 - 5*mt^2*s12*s14*s24 - 6*mt^2*s12*s14*s23 - 5/2*mt^2*s12*s14^2 - 6
      *mt^2*s12*s13*s24 - 5*mt^2*s12*s13*s23 - 5*mt^2*s12*s13*s14 - 5/2*mt^2*
      s12*s13^2 - 17/4*mt^2*s12^2*s24 - 17/4*mt^2*s12^2*s23 - 17/4*mt^2*s12^2*
      s14 - 17/4*mt^2*s12^2*s13 - 2*mt^2*s12^3 + 1/2*mt^2*mh^2*s24^2 + mt^2*
      mh^2*s23*s24 + 1/2*mt^2*mh^2*s23^2 + mt^2*mh^2*s14*s24 + 2*mt^2*mh^2*s14
      *s23 + 1/2*mt^2*mh^2*s14^2 + 2*mt^2*mh^2*s13*s24 + mt^2*mh^2*s13*s23 + 
      mt^2*mh^2*s13*s14 + 1/2*mt^2*mh^2*s13^2 + 9/2*mt^2*mh^2*s12*s24 + 9/2*
      mt^2*mh^2*s12*s23 + 9/2*mt^2*mh^2*s12*s14 + 9/2*mt^2*mh^2*s12*s13 + 4*
      mt^2*mh^2*s12^2 - 1/4*mt^2*mh^4*s24 - 1/4*mt^2*mh^4*s23 - 1/4*mt^2*mh^4*
      s14 - 1/4*mt^2*mh^4*s13 - 2*mt^2*mh^4*s12 + 3/2*mt^4*s24^2 + 3*mt^4*s23*
      s24 + 3/2*mt^4*s23^2 + 3*mt^4*s14*s24 + 4*mt^4*s14*s23 + 3/2*mt^4*s14^2
       + 4*mt^4*s13*s24 + 3*mt^4*s13*s23 + 3*mt^4*s13*s14 + 3/2*mt^4*s13^2 + 7
      *mt^4*s12*s24 + 7*mt^4*s12*s23 + 7*mt^4*s12*s14 + 7*mt^4*s12*s13 + 11/2*
      mt^4*s12^2 - 2*mt^4*mh^2*s24 - 2*mt^4*mh^2*s23 - 2*mt^4*mh^2*s14 - 2*
      mt^4*mh^2*s13 - 6*mt^4*mh^2*s12 + 1/2*mt^4*mh^4 - 3*mt^6*s24 - 3*mt^6*
      s23 - 3*mt^6*s14 - 3*mt^6*s13 - 6*mt^6*s12 + 2*mt^6*mh^2 + 2*mt^8 + 1/4*
      denom(1/2*s12)*s14^2*s23^2*s24 + 1/4*denom(1/2*s12)*s14^2*s23^3 + 1/4*
      denom(1/2*s12)*s14^3*s23^2 + 1/2*denom(1/2*s12)*s13*s14*s23*s24^2 + 1/2*
      denom(1/2*s12)*s13*s14*s23^2*s24 + 1/2*denom(1/2*s12)*s13*s14^2*s23*s24
       + 1/4*denom(1/2*s12)*s13*s14^2*s23^2 + 1/4*denom(1/2*s12)*s13^2*s24^3
       + 1/4*denom(1/2*s12)*s13^2*s23*s24^2 + 1/4*denom(1/2*s12)*s13^2*s14*
      s24^2 + 1/2*denom(1/2*s12)*s13^2*s14*s23*s24 + 1/4*denom(1/2*s12)*s13^3*
      s24^2 + 1/4*denom(1/2*s12)*s12*s14*s23*s24^2 + 1/2*denom(1/2*s12)*s12*
      s14*s23^2*s24 + 1/4*denom(1/2*s12)*s12*s14*s23^3 + 1/2*denom(1/2*s12)*
      s12*s14^2*s23*s24 + 3/4*denom(1/2*s12)*s12*s14^2*s23^2 + 1/4*denom(1/2*
      s12)*s12*s14^3*s23 + 1/4*denom(1/2*s12)*s12*s13*s24^3 + 1/2*denom(1/2*
      s12)*s12*s13*s23*s24^2 + 1/4*denom(1/2*s12)*s12*s13*s23^2*s24 + 1/2*
      denom(1/2*s12)*s12*s13*s14*s24^2 + 3/2*denom(1/2*s12)*s12*s13*s14*s23*
      s24 + 1/2*denom(1/2*s12)*s12*s13*s14*s23^2 + 1/4*denom(1/2*s12)*s12*s13*
      s14^2*s24 + 1/2*denom(1/2*s12)*s12*s13*s14^2*s23 + 3/4*denom(1/2*s12)*
      s12*s13^2*s24^2 + 1/2*denom(1/2*s12)*s12*s13^2*s23*s24 + 1/2*denom(1/2*
      s12)*s12*s13^2*s14*s24 + 1/4*denom(1/2*s12)*s12*s13^2*s14*s23 + 1/4*
      denom(1/2*s12)*s12*s13^3*s24 + 1/2*denom(1/2*s12)*s12^2*s14*s23*s24 + 1/
      2*denom(1/2*s12)*s12^2*s14*s23^2 + 1/2*denom(1/2*s12)*s12^2*s14^2*s23 + 
      1/2*denom(1/2*s12)*s12^2*s13*s24^2 + 1/2*denom(1/2*s12)*s12^2*s13*s23*
      s24 + 1/2*denom(1/2*s12)*s12^2*s13*s14*s24 + 1/2*denom(1/2*s12)*s12^2*
      s13*s14*s23 + 1/2*denom(1/2*s12)*s12^2*s13^2*s24 + 1/4*denom(1/2*s12)*
      s12^3*s14*s23 + 1/4*denom(1/2*s12)*s12^3*s13*s24 - 1/4*denom(1/2*s12)*
      mh^2*s14^2*s23^2 - 1/2*denom(1/2*s12)*mh^2*s13*s14*s23*s24 - 1/4*denom(1/
      2*s12)*mh^2*s13^2*s24^2 - 1/2*denom(1/2*s12)*mh^2*s12*s14*s23*s24 - 1/2*
      denom(1/2*s12)*mh^2*s12*s14*s23^2 - 1/2*denom(1/2*s12)*mh^2*s12*s14^2*
      s23 - 1/2*denom(1/2*s12)*mh^2*s12*s13*s24^2 - 1/2*denom(1/2*s12)*mh^2*
      s12*s13*s23*s24 - 1/2*denom(1/2*s12)*mh^2*s12*s13*s14*s24 - 1/2*denom(1/
      2*s12)*mh^2*s12*s13*s14*s23 - 1/2*denom(1/2*s12)*mh^2*s12*s13^2*s24 - 1/
      2*denom(1/2*s12)*mh^2*s12^2*s14*s23 - 1/2*denom(1/2*s12)*mh^2*s12^2*s13*
      s24 + 1/4*denom(1/2*s12)*mh^4*s12*s14*s23 + 1/4*denom(1/2*s12)*mh^4*s12*
      s13*s24 - 1/2*denom(1/2*s12)*mt^2*s14*s23*s24^2 - denom(1/2*s12)*mt^2*
      s14*s23^2*s24 - 1/2*denom(1/2*s12)*mt^2*s14*s23^3 - denom(1/2*s12)*mt^2*
      s14^2*s23*s24 - 3/2*denom(1/2*s12)*mt^2*s14^2*s23^2 - 1/2*denom(1/2*s12)
      *mt^2*s14^3*s23 - 1/2*denom(1/2*s12)*mt^2*s13*s24^3 - denom(1/2*s12)*
      mt^2*s13*s23*s24^2 - 1/2*denom(1/2*s12)*mt^2*s13*s23^2*s24 - denom(1/2*
      s12)*mt^2*s13*s14*s24^2 - 3*denom(1/2*s12)*mt^2*s13*s14*s23*s24 - denom(
      1/2*s12)*mt^2*s13*s14*s23^2 - 1/2*denom(1/2*s12)*mt^2*s13*s14^2*s24 - 
      denom(1/2*s12)*mt^2*s13*s14^2*s23 - 3/2*denom(1/2*s12)*mt^2*s13^2*s24^2
       - denom(1/2*s12)*mt^2*s13^2*s23*s24 - denom(1/2*s12)*mt^2*s13^2*s14*s24
       - 1/2*denom(1/2*s12)*mt^2*s13^2*s14*s23 - 1/2*denom(1/2*s12)*mt^2*s13^3
      *s24 - 1/4*denom(1/2*s12)*mt^2*s12*s24^3 - 3/4*denom(1/2*s12)*mt^2*s12*
      s23*s24^2 - 3/4*denom(1/2*s12)*mt^2*s12*s23^2*s24 - 1/4*denom(1/2*s12)*
      mt^2*s12*s23^3 - 3/4*denom(1/2*s12)*mt^2*s12*s14*s24^2 - 7/2*denom(1/2*
      s12)*mt^2*s12*s14*s23*s24 - 11/4*denom(1/2*s12)*mt^2*s12*s14*s23^2 - 3/4
      *denom(1/2*s12)*mt^2*s12*s14^2*s24 - 11/4*denom(1/2*s12)*mt^2*s12*s14^2*
      s23 - 1/4*denom(1/2*s12)*mt^2*s12*s14^3 - 11/4*denom(1/2*s12)*mt^2*s12*
      s13*s24^2 - 7/2*denom(1/2*s12)*mt^2*s12*s13*s23*s24 - 3/4*denom(1/2*s12)
      *mt^2*s12*s13*s23^2 - 7/2*denom(1/2*s12)*mt^2*s12*s13*s14*s24 - 7/2*
      denom(1/2*s12)*mt^2*s12*s13*s14*s23 - 3/4*denom(1/2*s12)*mt^2*s12*s13*
      s14^2 - 11/4*denom(1/2*s12)*mt^2*s12*s13^2*s24 - 3/4*denom(1/2*s12)*mt^2
      *s12*s13^2*s23 - 3/4*denom(1/2*s12)*mt^2*s12*s13^2*s14 - 1/4*denom(1/2*
      s12)*mt^2*s12*s13^3 - 1/2*denom(1/2*s12)*mt^2*s12^2*s24^2 - denom(1/2*
      s12)*mt^2*s12^2*s23*s24 - 1/2*denom(1/2*s12)*mt^2*s12^2*s23^2 - denom(1/
      2*s12)*mt^2*s12^2*s14*s24 - 5/2*denom(1/2*s12)*mt^2*s12^2*s14*s23 - 1/2*
      denom(1/2*s12)*mt^2*s12^2*s14^2 - 5/2*denom(1/2*s12)*mt^2*s12^2*s13*s24
       - denom(1/2*s12)*mt^2*s12^2*s13*s23 - denom(1/2*s12)*mt^2*s12^2*s13*s14
       - 1/2*denom(1/2*s12)*mt^2*s12^2*s13^2 - 1/4*denom(1/2*s12)*mt^2*s12^3*
      s24 - 1/4*denom(1/2*s12)*mt^2*s12^3*s23 - 1/4*denom(1/2*s12)*mt^2*s12^3*
      s14 - 1/4*denom(1/2*s12)*mt^2*s12^3*s13 + 1/2*denom(1/2*s12)*mt^2*mh^2*
      s14*s23*s24 + 1/2*denom(1/2*s12)*mt^2*mh^2*s14*s23^2 + 1/2*denom(1/2*s12
      )*mt^2*mh^2*s14^2*s23 + 1/2*denom(1/2*s12)*mt^2*mh^2*s13*s24^2 + 1/2*
      denom(1/2*s12)*mt^2*mh^2*s13*s23*s24 + 1/2*denom(1/2*s12)*mt^2*mh^2*s13*
      s14*s24 + 1/2*denom(1/2*s12)*mt^2*mh^2*s13*s14*s23 + 1/2*denom(1/2*s12)*
      mt^2*mh^2*s13^2*s24 + 1/2*denom(1/2*s12)*mt^2*mh^2*s12*s24^2 + denom(1/2
      *s12)*mt^2*mh^2*s12*s23*s24 + 1/2*denom(1/2*s12)*mt^2*mh^2*s12*s23^2 + 
      denom(1/2*s12)*mt^2*mh^2*s12*s14*s24 + 5/2*denom(1/2*s12)*mt^2*mh^2*s12*
      s14*s23 + 1/2*denom(1/2*s12)*mt^2*mh^2*s12*s14^2 + 5/2*denom(1/2*s12)*
      mt^2*mh^2*s12*s13*s24 + denom(1/2*s12)*mt^2*mh^2*s12*s13*s23 + denom(1/2
      *s12)*mt^2*mh^2*s12*s13*s14 + 1/2*denom(1/2*s12)*mt^2*mh^2*s12*s13^2 + 1/
      2*denom(1/2*s12)*mt^2*mh^2*s12^2*s24 + 1/2*denom(1/2*s12)*mt^2*mh^2*
      s12^2*s23 + 1/2*denom(1/2*s12)*mt^2*mh^2*s12^2*s14 + 1/2*denom(1/2*s12)*
      mt^2*mh^2*s12^2*s13 - 1/4*denom(1/2*s12)*mt^2*mh^4*s12*s24 - 1/4*denom(1/
      2*s12)*mt^2*mh^4*s12*s23 - 1/4*denom(1/2*s12)*mt^2*mh^4*s12*s14 - 1/4*
      denom(1/2*s12)*mt^2*mh^4*s12*s13 + 1/4*denom(1/2*s12)*mt^4*s24^3 + 3/4*
      denom(1/2*s12)*mt^4*s23*s24^2 + 3/4*denom(1/2*s12)*mt^4*s23^2*s24 + 1/4*
      denom(1/2*s12)*mt^4*s23^3 + 3/4*denom(1/2*s12)*mt^4*s14*s24^2 + 7/2*
      denom(1/2*s12)*mt^4*s14*s23*s24 + 11/4*denom(1/2*s12)*mt^4*s14*s23^2 + 3/
      4*denom(1/2*s12)*mt^4*s14^2*s24 + 11/4*denom(1/2*s12)*mt^4*s14^2*s23 + 1/
      4*denom(1/2*s12)*mt^4*s14^3 + 11/4*denom(1/2*s12)*mt^4*s13*s24^2 + 7/2*
      denom(1/2*s12)*mt^4*s13*s23*s24 + 3/4*denom(1/2*s12)*mt^4*s13*s23^2 + 7/
      2*denom(1/2*s12)*mt^4*s13*s14*s24 + 7/2*denom(1/2*s12)*mt^4*s13*s14*s23
       + 3/4*denom(1/2*s12)*mt^4*s13*s14^2 + 11/4*denom(1/2*s12)*mt^4*s13^2*
      s24 + 3/4*denom(1/2*s12)*mt^4*s13^2*s23 + 3/4*denom(1/2*s12)*mt^4*s13^2*
      s14 + 1/4*denom(1/2*s12)*mt^4*s13^3 + 9/4*denom(1/2*s12)*mt^4*s12*s24^2
       + 9/2*denom(1/2*s12)*mt^4*s12*s23*s24 + 9/4*denom(1/2*s12)*mt^4*s12*
      s23^2 + 9/2*denom(1/2*s12)*mt^4*s12*s14*s24 + 15/2*denom(1/2*s12)*mt^4*
      s12*s14*s23 + 9/4*denom(1/2*s12)*mt^4*s12*s14^2 + 15/2*denom(1/2*s12)*
      mt^4*s12*s13*s24 + 9/2*denom(1/2*s12)*mt^4*s12*s13*s23 + 9/2*denom(1/2*
      s12)*mt^4*s12*s13*s14 + 9/4*denom(1/2*s12)*mt^4*s12*s13^2 + 5/2*denom(1/
      2*s12)*mt^4*s12^2*s24 + 5/2*denom(1/2*s12)*mt^4*s12^2*s23 + 5/2*denom(1/
      2*s12)*mt^4*s12^2*s14 + 5/2*denom(1/2*s12)*mt^4*s12^2*s13 + 1/2*denom(1/
      2*s12)*mt^4*s12^3 - 1/4*denom(1/2*s12)*mt^4*mh^2*s24^2 - 1/2*denom(1/2*
      s12)*mt^4*mh^2*s23*s24 - 1/4*denom(1/2*s12)*mt^4*mh^2*s23^2 - 1/2*denom(
      1/2*s12)*mt^4*mh^2*s14*s24 - 3/2*denom(1/2*s12)*mt^4*mh^2*s14*s23 - 1/4*
      denom(1/2*s12)*mt^4*mh^2*s14^2 - 3/2*denom(1/2*s12)*mt^4*mh^2*s13*s24 - 
      1/2*denom(1/2*s12)*mt^4*mh^2*s13*s23 - 1/2*denom(1/2*s12)*mt^4*mh^2*s13*
      s14 - 1/4*denom(1/2*s12)*mt^4*mh^2*s13^2 - 5/2*denom(1/2*s12)*mt^4*mh^2*
      s12*s24 - 5/2*denom(1/2*s12)*mt^4*mh^2*s12*s23 - 5/2*denom(1/2*s12)*mt^4
      *mh^2*s12*s14 - 5/2*denom(1/2*s12)*mt^4*mh^2*s12*s13 - denom(1/2*s12)*
      mt^4*mh^2*s12^2 + 1/2*denom(1/2*s12)*mt^4*mh^4*s12 - 3/2*denom(1/2*s12)*
      mt^6*s24^2 - 3*denom(1/2*s12)*mt^6*s23*s24 - 3/2*denom(1/2*s12)*mt^6*
      s23^2 - 3*denom(1/2*s12)*mt^6*s14*s24 - 5*denom(1/2*s12)*mt^6*s14*s23 - 
      3/2*denom(1/2*s12)*mt^6*s14^2 - 5*denom(1/2*s12)*mt^6*s13*s24 - 3*denom(
      1/2*s12)*mt^6*s13*s23 - 3*denom(1/2*s12)*mt^6*s13*s14 - 3/2*denom(1/2*
      s12)*mt^6*s13^2 - 6*denom(1/2*s12)*mt^6*s12*s24 - 6*denom(1/2*s12)*mt^6*
      s12*s23 - 6*denom(1/2*s12)*mt^6*s12*s14 - 6*denom(1/2*s12)*mt^6*s12*s13
       - 3*denom(1/2*s12)*mt^6*s12^2 + denom(1/2*s12)*mt^6*mh^2*s24 + denom(1/
      2*s12)*mt^6*mh^2*s23 + denom(1/2*s12)*mt^6*mh^2*s14 + denom(1/2*s12)*
      mt^6*mh^2*s13 + 3*denom(1/2*s12)*mt^6*mh^2*s12 + 3*denom(1/2*s12)*mt^8*
      s24 + 3*denom(1/2*s12)*mt^8*s23 + 3*denom(1/2*s12)*mt^8*s14 + 3*denom(1/
      2*s12)*mt^8*s13 + 5*denom(1/2*s12)*mt^8*s12 - denom(1/2*s12)*mt^8*mh^2
       - 2*denom(1/2*s12)*mt^10 + 1/16*denom(1/4*s12^2)*s14^3*s23^3 + 3/16*
      denom(1/4*s12^2)*s13*s14^2*s23^2*s24 + 3/16*denom(1/4*s12^2)*s13^2*s14*
      s23*s24^2 + 1/16*denom(1/4*s12^2)*s13^3*s24^3 + 1/16*denom(1/4*s12^2)*
      s12*s14^2*s23^2*s24 + 1/16*denom(1/4*s12^2)*s12*s14^2*s23^3 + 1/16*
      denom(1/4*s12^2)*s12*s14^3*s23^2 + 1/8*denom(1/4*s12^2)*s12*s13*s14*s23*
      s24^2 + 1/8*denom(1/4*s12^2)*s12*s13*s14*s23^2*s24 + 1/8*denom(1/4*s12^2
      )*s12*s13*s14^2*s23*s24 + 1/16*denom(1/4*s12^2)*s12*s13*s14^2*s23^2 + 1/
      16*denom(1/4*s12^2)*s12*s13^2*s24^3 + 1/16*denom(1/4*s12^2)*s12*s13^2*
      s23*s24^2 + 1/16*denom(1/4*s12^2)*s12*s13^2*s14*s24^2 + 1/8*denom(1/4*
      s12^2)*s12*s13^2*s14*s23*s24 + 1/16*denom(1/4*s12^2)*s12*s13^3*s24^2 + 1/
      16*denom(1/4*s12^2)*s12^2*s14^2*s23^2 + 1/8*denom(1/4*s12^2)*s12^2*s13*
      s14*s23*s24 + 1/16*denom(1/4*s12^2)*s12^2*s13^2*s24^2 - 1/16*denom(1/4*
      s12^2)*mh^2*s12*s14^2*s23^2 - 1/8*denom(1/4*s12^2)*mh^2*s12*s13*s14*s23*
      s24 - 1/16*denom(1/4*s12^2)*mh^2*s12*s13^2*s24^2 - 3/16*denom(1/4*s12^2)
      *mt^2*s14^2*s23^2*s24 - 3/16*denom(1/4*s12^2)*mt^2*s14^2*s23^3 - 3/16*
      denom(1/4*s12^2)*mt^2*s14^3*s23^2 - 3/8*denom(1/4*s12^2)*mt^2*s13*s14*
      s23*s24^2 - 3/8*denom(1/4*s12^2)*mt^2*s13*s14*s23^2*s24 - 3/8*denom(1/4*
      s12^2)*mt^2*s13*s14^2*s23*s24 - 3/16*denom(1/4*s12^2)*mt^2*s13*s14^2*
      s23^2 - 3/16*denom(1/4*s12^2)*mt^2*s13^2*s24^3 - 3/16*denom(1/4*s12^2)*
      mt^2*s13^2*s23*s24^2 - 3/16*denom(1/4*s12^2)*mt^2*s13^2*s14*s24^2 - 3/8*
      denom(1/4*s12^2)*mt^2*s13^2*s14*s23*s24 - 3/16*denom(1/4*s12^2)*mt^2*
      s13^3*s24^2 - 1/8*denom(1/4*s12^2)*mt^2*s12*s14*s23*s24^2 - 1/4*denom(1/
      4*s12^2)*mt^2*s12*s14*s23^2*s24 - 1/8*denom(1/4*s12^2)*mt^2*s12*s14*
      s23^3 - 1/4*denom(1/4*s12^2)*mt^2*s12*s14^2*s23*s24 - 1/2*denom(1/4*
      s12^2)*mt^2*s12*s14^2*s23^2 - 1/8*denom(1/4*s12^2)*mt^2*s12*s14^3*s23 - 
      1/8*denom(1/4*s12^2)*mt^2*s12*s13*s24^3 - 1/4*denom(1/4*s12^2)*mt^2*s12*
      s13*s23*s24^2 - 1/8*denom(1/4*s12^2)*mt^2*s12*s13*s23^2*s24 - 1/4*denom(
      1/4*s12^2)*mt^2*s12*s13*s14*s24^2 - denom(1/4*s12^2)*mt^2*s12*s13*s14*
      s23*s24 - 1/4*denom(1/4*s12^2)*mt^2*s12*s13*s14*s23^2 - 1/8*denom(1/4*
      s12^2)*mt^2*s12*s13*s14^2*s24 - 1/4*denom(1/4*s12^2)*mt^2*s12*s13*s14^2*
      s23 - 1/2*denom(1/4*s12^2)*mt^2*s12*s13^2*s24^2 - 1/4*denom(1/4*s12^2)*
      mt^2*s12*s13^2*s23*s24 - 1/4*denom(1/4*s12^2)*mt^2*s12*s13^2*s14*s24 - 1/
      8*denom(1/4*s12^2)*mt^2*s12*s13^2*s14*s23 - 1/8*denom(1/4*s12^2)*mt^2*
      s12*s13^3*s24 - 1/8*denom(1/4*s12^2)*mt^2*s12^2*s14*s23*s24 - 1/8*denom(
      1/4*s12^2)*mt^2*s12^2*s14*s23^2 - 1/8*denom(1/4*s12^2)*mt^2*s12^2*s14^2*
      s23 - 1/8*denom(1/4*s12^2)*mt^2*s12^2*s13*s24^2 - 1/8*denom(1/4*s12^2)*
      mt^2*s12^2*s13*s23*s24 - 1/8*denom(1/4*s12^2)*mt^2*s12^2*s13*s14*s24 - 1/
      8*denom(1/4*s12^2)*mt^2*s12^2*s13*s14*s23 - 1/8*denom(1/4*s12^2)*mt^2*
      s12^2*s13^2*s24 + 1/8*denom(1/4*s12^2)*mt^2*mh^2*s12*s14*s23*s24 + 1/8*
      denom(1/4*s12^2)*mt^2*mh^2*s12*s14*s23^2 + 1/8*denom(1/4*s12^2)*mt^2*
      mh^2*s12*s14^2*s23 + 1/8*denom(1/4*s12^2)*mt^2*mh^2*s12*s13*s24^2 + 1/8*
      denom(1/4*s12^2)*mt^2*mh^2*s12*s13*s23*s24 + 1/8*denom(1/4*s12^2)*mt^2*
      mh^2*s12*s13*s14*s24 + 1/8*denom(1/4*s12^2)*mt^2*mh^2*s12*s13*s14*s23 + 
      1/8*denom(1/4*s12^2)*mt^2*mh^2*s12*s13^2*s24 + 3/16*denom(1/4*s12^2)*
      mt^4*s14*s23*s24^2 + 3/8*denom(1/4*s12^2)*mt^4*s14*s23^2*s24 + 3/16*
      denom(1/4*s12^2)*mt^4*s14*s23^3 + 3/8*denom(1/4*s12^2)*mt^4*s14^2*s23*
      s24 + 3/4*denom(1/4*s12^2)*mt^4*s14^2*s23^2 + 3/16*denom(1/4*s12^2)*mt^4
      *s14^3*s23 + 3/16*denom(1/4*s12^2)*mt^4*s13*s24^3 + 3/8*denom(1/4*s12^2)
      *mt^4*s13*s23*s24^2 + 3/16*denom(1/4*s12^2)*mt^4*s13*s23^2*s24 + 3/8*
      denom(1/4*s12^2)*mt^4*s13*s14*s24^2 + 3/2*denom(1/4*s12^2)*mt^4*s13*s14*
      s23*s24 + 3/8*denom(1/4*s12^2)*mt^4*s13*s14*s23^2 + 3/16*denom(1/4*s12^2
      )*mt^4*s13*s14^2*s24 + 3/8*denom(1/4*s12^2)*mt^4*s13*s14^2*s23 + 3/4*
      denom(1/4*s12^2)*mt^4*s13^2*s24^2 + 3/8*denom(1/4*s12^2)*mt^4*s13^2*s23*
      s24 + 3/8*denom(1/4*s12^2)*mt^4*s13^2*s14*s24 + 3/16*denom(1/4*s12^2)*
      mt^4*s13^2*s14*s23 + 3/16*denom(1/4*s12^2)*mt^4*s13^3*s24 + 1/16*denom(1/
      4*s12^2)*mt^4*s12*s24^3 + 3/16*denom(1/4*s12^2)*mt^4*s12*s23*s24^2 + 3/
      16*denom(1/4*s12^2)*mt^4*s12*s23^2*s24 + 1/16*denom(1/4*s12^2)*mt^4*s12*
      s23^3 + 3/16*denom(1/4*s12^2)*mt^4*s12*s14*s24^2 + 9/8*denom(1/4*s12^2)*
      mt^4*s12*s14*s23*s24 + 15/16*denom(1/4*s12^2)*mt^4*s12*s14*s23^2 + 3/16*
      denom(1/4*s12^2)*mt^4*s12*s14^2*s24 + 15/16*denom(1/4*s12^2)*mt^4*s12*
      s14^2*s23 + 1/16*denom(1/4*s12^2)*mt^4*s12*s14^3 + 15/16*denom(1/4*s12^2
      )*mt^4*s12*s13*s24^2 + 9/8*denom(1/4*s12^2)*mt^4*s12*s13*s23*s24 + 3/16*
      denom(1/4*s12^2)*mt^4*s12*s13*s23^2 + 9/8*denom(1/4*s12^2)*mt^4*s12*s13*
      s14*s24 + 9/8*denom(1/4*s12^2)*mt^4*s12*s13*s14*s23 + 3/16*denom(1/4*
      s12^2)*mt^4*s12*s13*s14^2 + 15/16*denom(1/4*s12^2)*mt^4*s12*s13^2*s24 + 
      3/16*denom(1/4*s12^2)*mt^4*s12*s13^2*s23 + 3/16*denom(1/4*s12^2)*mt^4*
      s12*s13^2*s14 + 1/16*denom(1/4*s12^2)*mt^4*s12*s13^3 + 1/16*denom(1/4*
      s12^2)*mt^4*s12^2*s24^2 + 1/8*denom(1/4*s12^2)*mt^4*s12^2*s23*s24 + 1/16
      *denom(1/4*s12^2)*mt^4*s12^2*s23^2 + 1/8*denom(1/4*s12^2)*mt^4*s12^2*s14
      *s24 + 3/8*denom(1/4*s12^2)*mt^4*s12^2*s14*s23 + 1/16*denom(1/4*s12^2)*
      mt^4*s12^2*s14^2 + 3/8*denom(1/4*s12^2)*mt^4*s12^2*s13*s24 + 1/8*denom(1/
      4*s12^2)*mt^4*s12^2*s13*s23 + 1/8*denom(1/4*s12^2)*mt^4*s12^2*s13*s14 + 
      1/16*denom(1/4*s12^2)*mt^4*s12^2*s13^2 - 1/16*denom(1/4*s12^2)*mt^4*mh^2
      *s12*s24^2 - 1/8*denom(1/4*s12^2)*mt^4*mh^2*s12*s23*s24 - 1/16*denom(1/4
      *s12^2)*mt^4*mh^2*s12*s23^2 - 1/8*denom(1/4*s12^2)*mt^4*mh^2*s12*s14*s24
       - 3/8*denom(1/4*s12^2)*mt^4*mh^2*s12*s14*s23 - 1/16*denom(1/4*s12^2)*
      mt^4*mh^2*s12*s14^2 - 3/8*denom(1/4*s12^2)*mt^4*mh^2*s12*s13*s24 - 1/8*
      denom(1/4*s12^2)*mt^4*mh^2*s12*s13*s23 - 1/8*denom(1/4*s12^2)*mt^4*mh^2*
      s12*s13*s14 - 1/16*denom(1/4*s12^2)*mt^4*mh^2*s12*s13^2 - 1/16*denom(1/4
      *s12^2)*mt^6*s24^3 - 3/16*denom(1/4*s12^2)*mt^6*s23*s24^2 - 3/16*denom(1/
      4*s12^2)*mt^6*s23^2*s24 - 1/16*denom(1/4*s12^2)*mt^6*s23^3 - 3/16*denom(
      1/4*s12^2)*mt^6*s14*s24^2 - 9/8*denom(1/4*s12^2)*mt^6*s14*s23*s24 - 15/
      16*denom(1/4*s12^2)*mt^6*s14*s23^2 - 3/16*denom(1/4*s12^2)*mt^6*s14^2*
      s24 - 15/16*denom(1/4*s12^2)*mt^6*s14^2*s23 - 1/16*denom(1/4*s12^2)*mt^6
      *s14^3 - 15/16*denom(1/4*s12^2)*mt^6*s13*s24^2 - 9/8*denom(1/4*s12^2)*
      mt^6*s13*s23*s24 - 3/16*denom(1/4*s12^2)*mt^6*s13*s23^2 - 9/8*denom(1/4*
      s12^2)*mt^6*s13*s14*s24 - 9/8*denom(1/4*s12^2)*mt^6*s13*s14*s23 - 3/16*
      denom(1/4*s12^2)*mt^6*s13*s14^2 - 15/16*denom(1/4*s12^2)*mt^6*s13^2*s24
       - 3/16*denom(1/4*s12^2)*mt^6*s13^2*s23 - 3/16*denom(1/4*s12^2)*mt^6*
      s13^2*s14 - 1/16*denom(1/4*s12^2)*mt^6*s13^3 - 1/2*denom(1/4*s12^2)*mt^6
      *s12*s24^2 - denom(1/4*s12^2)*mt^6*s12*s23*s24 - 1/2*denom(1/4*s12^2)*
      mt^6*s12*s23^2 - denom(1/4*s12^2)*mt^6*s12*s14*s24 - 2*denom(1/4*s12^2)*
      mt^6*s12*s14*s23 - 1/2*denom(1/4*s12^2)*mt^6*s12*s14^2 - 2*denom(1/4*
      s12^2)*mt^6*s12*s13*s24 - denom(1/4*s12^2)*mt^6*s12*s13*s23 - denom(1/4*
      s12^2)*mt^6*s12*s13*s14 - 1/2*denom(1/4*s12^2)*mt^6*s12*s13^2 - 1/4*
      denom(1/4*s12^2)*mt^6*s12^2*s24 - 1/4*denom(1/4*s12^2)*mt^6*s12^2*s23 - 
      1/4*denom(1/4*s12^2)*mt^6*s12^2*s14 - 1/4*denom(1/4*s12^2)*mt^6*s12^2*
      s13 + 1/4*denom(1/4*s12^2)*mt^6*mh^2*s12*s24 + 1/4*denom(1/4*s12^2)*mt^6
      *mh^2*s12*s23 + 1/4*denom(1/4*s12^2)*mt^6*mh^2*s12*s14 + 1/4*denom(1/4*
      s12^2)*mt^6*mh^2*s12*s13 + 3/8*denom(1/4*s12^2)*mt^8*s24^2 + 3/4*denom(1/
      4*s12^2)*mt^8*s23*s24 + 3/8*denom(1/4*s12^2)*mt^8*s23^2 + 3/4*denom(1/4*
      s12^2)*mt^8*s14*s24 + 3/2*denom(1/4*s12^2)*mt^8*s14*s23 + 3/8*denom(1/4*
      s12^2)*mt^8*s14^2 + 3/2*denom(1/4*s12^2)*mt^8*s13*s24 + 3/4*denom(1/4*
      s12^2)*mt^8*s13*s23 + 3/4*denom(1/4*s12^2)*mt^8*s13*s14 + 3/8*denom(1/4*
      s12^2)*mt^8*s13^2 + 5/4*denom(1/4*s12^2)*mt^8*s12*s24 + 5/4*denom(1/4*
      s12^2)*mt^8*s12*s23 + 5/4*denom(1/4*s12^2)*mt^8*s12*s14 + 5/4*denom(1/4*
      s12^2)*mt^8*s12*s13 + 1/4*denom(1/4*s12^2)*mt^8*s12^2 - 1/4*denom(1/4*
      s12^2)*mt^8*mh^2*s12 - 3/4*denom(1/4*s12^2)*mt^10*s24 - 3/4*denom(1/4*
      s12^2)*mt^10*s23 - 3/4*denom(1/4*s12^2)*mt^10*s14 - 3/4*denom(1/4*s12^2)
      *mt^10*s13 - denom(1/4*s12^2)*mt^10*s12 + 1/2*denom(1/4*s12^2)*mt^12;
 
 .sort
id KMatrix(7,11) =  mt^4*s14*s23 + mt^4*s13*s24 + mt^4*s12*s24 + mt^4*s12*s23
       + mt^4*s12*s14 + mt^4*s12*s13 + mt^4*s12^2 - mt^4*mh^2*s12 - mt^6*s24
       - mt^6*s23 - mt^6*s14 - mt^6*s13 - 4*mt^6*s12 + 2*mt^8 - 1/2*denom(1/2*
      s12)*mt^2*s14^2*s23*s24 - 1/2*denom(1/2*s12)*mt^2*s13*s14*s24^2 - 1/2*
      denom(1/2*s12)*mt^2*s13*s14*s23^2 - 1/2*denom(1/2*s12)*mt^2*s13^2*s23*
      s24 - 1/2*denom(1/2*s12)*mt^2*s12*s14*s24^2 - 1/2*denom(1/2*s12)*mt^2*
      s12*s14*s23*s24 - 1/2*denom(1/2*s12)*mt^2*s12*s14^2*s24 - 1/2*denom(1/2*
      s12)*mt^2*s12*s13*s23*s24 - 1/2*denom(1/2*s12)*mt^2*s12*s13*s23^2 - 1/2*
      denom(1/2*s12)*mt^2*s12*s13*s14*s24 - 1/2*denom(1/2*s12)*mt^2*s12*s13*
      s14*s23 - 1/2*denom(1/2*s12)*mt^2*s12*s13^2*s23 - 1/2*denom(1/2*s12)*
      mt^2*s12^2*s14*s24 - 1/2*denom(1/2*s12)*mt^2*s12^2*s13*s23 + 1/2*denom(1/
      2*s12)*mt^2*mh^2*s12*s14*s24 + 1/2*denom(1/2*s12)*mt^2*mh^2*s12*s13*s23
       + 1/2*denom(1/2*s12)*mt^4*s14*s24^2 + denom(1/2*s12)*mt^4*s14*s23*s24
       + 1/2*denom(1/2*s12)*mt^4*s14*s23^2 + 1/2*denom(1/2*s12)*mt^4*s14^2*s24
       + 1/2*denom(1/2*s12)*mt^4*s14^2*s23 + 1/2*denom(1/2*s12)*mt^4*s13*s24^2
       + denom(1/2*s12)*mt^4*s13*s23*s24 + 1/2*denom(1/2*s12)*mt^4*s13*s23^2
       + denom(1/2*s12)*mt^4*s13*s14*s24 + denom(1/2*s12)*mt^4*s13*s14*s23 + 1/
      2*denom(1/2*s12)*mt^4*s13^2*s24 + 1/2*denom(1/2*s12)*mt^4*s13^2*s23 + 1/
      2*denom(1/2*s12)*mt^4*s12*s24^2 + denom(1/2*s12)*mt^4*s12*s23*s24 + 1/2*
      denom(1/2*s12)*mt^4*s12*s23^2 + 3*denom(1/2*s12)*mt^4*s12*s14*s24 + 
      denom(1/2*s12)*mt^4*s12*s14*s23 + 1/2*denom(1/2*s12)*mt^4*s12*s14^2 + 
      denom(1/2*s12)*mt^4*s12*s13*s24 + 3*denom(1/2*s12)*mt^4*s12*s13*s23 + 
      denom(1/2*s12)*mt^4*s12*s13*s14 + 1/2*denom(1/2*s12)*mt^4*s12*s13^2 + 1/
      2*denom(1/2*s12)*mt^4*s12^2*s24 + 1/2*denom(1/2*s12)*mt^4*s12^2*s23 + 1/
      2*denom(1/2*s12)*mt^4*s12^2*s14 + 1/2*denom(1/2*s12)*mt^4*s12^2*s13 - 1/
      2*denom(1/2*s12)*mt^4*mh^2*s12*s24 - 1/2*denom(1/2*s12)*mt^4*mh^2*s12*
      s23 - 1/2*denom(1/2*s12)*mt^4*mh^2*s12*s14 - 1/2*denom(1/2*s12)*mt^4*
      mh^2*s12*s13 - 1/2*denom(1/2*s12)*mt^6*s24^2 - denom(1/2*s12)*mt^6*s23*
      s24 - 1/2*denom(1/2*s12)*mt^6*s23^2 - 2*denom(1/2*s12)*mt^6*s14*s24 - 2*
      denom(1/2*s12)*mt^6*s14*s23 - 1/2*denom(1/2*s12)*mt^6*s14^2 - 2*denom(1/
      2*s12)*mt^6*s13*s24 - 2*denom(1/2*s12)*mt^6*s13*s23 - denom(1/2*s12)*
      mt^6*s13*s14 - 1/2*denom(1/2*s12)*mt^6*s13^2 - 3*denom(1/2*s12)*mt^6*s12
      *s24 - 3*denom(1/2*s12)*mt^6*s12*s23 - 3*denom(1/2*s12)*mt^6*s12*s14 - 3
      *denom(1/2*s12)*mt^6*s12*s13 - denom(1/2*s12)*mt^6*s12^2 + denom(1/2*s12
      )*mt^6*mh^2*s12 + 2*denom(1/2*s12)*mt^8*s24 + 2*denom(1/2*s12)*mt^8*s23
       + 2*denom(1/2*s12)*mt^8*s14 + 2*denom(1/2*s12)*mt^8*s13 + 4*denom(1/2*
      s12)*mt^8*s12 - 2*denom(1/2*s12)*mt^10 + 1/4*denom(1/4*s12^2)*s13*s14^2*
      s23^2*s24 + 1/4*denom(1/4*s12^2)*s13^2*s14*s23*s24^2 + 1/4*denom(1/4*
      s12^2)*s12*s13*s14*s23*s24^2 + 1/4*denom(1/4*s12^2)*s12*s13*s14*s23^2*
      s24 + 1/4*denom(1/4*s12^2)*s12*s13*s14^2*s23*s24 + 1/4*denom(1/4*s12^2)*
      s12*s13^2*s14*s23*s24 + 1/4*denom(1/4*s12^2)*s12^2*s13*s14*s23*s24 - 1/4
      *denom(1/4*s12^2)*mh^2*s12*s13*s14*s23*s24 - 1/4*denom(1/4*s12^2)*mt^2*
      s14^2*s23^2*s24 - 1/2*denom(1/4*s12^2)*mt^2*s13*s14*s23*s24^2 - 1/2*
      denom(1/4*s12^2)*mt^2*s13*s14*s23^2*s24 - 1/2*denom(1/4*s12^2)*mt^2*s13*
      s14^2*s23*s24 - 1/4*denom(1/4*s12^2)*mt^2*s13*s14^2*s23^2 - 1/4*denom(1/
      4*s12^2)*mt^2*s13^2*s23*s24^2 - 1/4*denom(1/4*s12^2)*mt^2*s13^2*s14*
      s24^2 - 1/2*denom(1/4*s12^2)*mt^2*s13^2*s14*s23*s24 - 1/4*denom(1/4*
      s12^2)*mt^2*s12*s14*s23*s24^2 - 1/4*denom(1/4*s12^2)*mt^2*s12*s14*s23^2*
      s24 - 1/4*denom(1/4*s12^2)*mt^2*s12*s14^2*s23*s24 - 1/4*denom(1/4*s12^2)
      *mt^2*s12*s13*s23*s24^2 - 1/4*denom(1/4*s12^2)*mt^2*s12*s13*s23^2*s24 - 
      1/4*denom(1/4*s12^2)*mt^2*s12*s13*s14*s24^2 - 2*denom(1/4*s12^2)*mt^2*
      s12*s13*s14*s23*s24 - 1/4*denom(1/4*s12^2)*mt^2*s12*s13*s14*s23^2 - 1/4*
      denom(1/4*s12^2)*mt^2*s12*s13*s14^2*s24 - 1/4*denom(1/4*s12^2)*mt^2*s12*
      s13*s14^2*s23 - 1/4*denom(1/4*s12^2)*mt^2*s12*s13^2*s23*s24 - 1/4*denom(
      1/4*s12^2)*mt^2*s12*s13^2*s14*s24 - 1/4*denom(1/4*s12^2)*mt^2*s12*s13^2*
      s14*s23 - 1/4*denom(1/4*s12^2)*mt^2*s12^2*s14*s23*s24 - 1/4*denom(1/4*
      s12^2)*mt^2*s12^2*s13*s23*s24 - 1/4*denom(1/4*s12^2)*mt^2*s12^2*s13*s14*
      s24 - 1/4*denom(1/4*s12^2)*mt^2*s12^2*s13*s14*s23 + 1/4*denom(1/4*s12^2)
      *mt^2*mh^2*s12*s14*s23*s24 + 1/4*denom(1/4*s12^2)*mt^2*mh^2*s12*s13*s23*
      s24 + 1/4*denom(1/4*s12^2)*mt^2*mh^2*s12*s13*s14*s24 + 1/4*denom(1/4*
      s12^2)*mt^2*mh^2*s12*s13*s14*s23 + 1/4*denom(1/4*s12^2)*mt^4*s14*s23*
      s24^2 + 1/2*denom(1/4*s12^2)*mt^4*s14*s23^2*s24 + 1/2*denom(1/4*s12^2)*
      mt^4*s14^2*s23*s24 + 1/4*denom(1/4*s12^2)*mt^4*s14^2*s23^2 + 1/2*denom(1/
      4*s12^2)*mt^4*s13*s23*s24^2 + 1/4*denom(1/4*s12^2)*mt^4*s13*s23^2*s24 + 
      1/2*denom(1/4*s12^2)*mt^4*s13*s14*s24^2 + 2*denom(1/4*s12^2)*mt^4*s13*
      s14*s23*s24 + 1/2*denom(1/4*s12^2)*mt^4*s13*s14*s23^2 + 1/4*denom(1/4*
      s12^2)*mt^4*s13*s14^2*s24 + 1/2*denom(1/4*s12^2)*mt^4*s13*s14^2*s23 + 1/
      4*denom(1/4*s12^2)*mt^4*s13^2*s24^2 + 1/2*denom(1/4*s12^2)*mt^4*s13^2*
      s23*s24 + 1/2*denom(1/4*s12^2)*mt^4*s13^2*s14*s24 + 1/4*denom(1/4*s12^2)
      *mt^4*s13^2*s14*s23 + 1/4*denom(1/4*s12^2)*mt^4*s12*s23*s24^2 + 1/4*
      denom(1/4*s12^2)*mt^4*s12*s23^2*s24 + 1/4*denom(1/4*s12^2)*mt^4*s12*s14*
      s24^2 + 7/4*denom(1/4*s12^2)*mt^4*s12*s14*s23*s24 + 1/4*denom(1/4*s12^2)
      *mt^4*s12*s14*s23^2 + 1/4*denom(1/4*s12^2)*mt^4*s12*s14^2*s24 + 1/4*
      denom(1/4*s12^2)*mt^4*s12*s14^2*s23 + 1/4*denom(1/4*s12^2)*mt^4*s12*s13*
      s24^2 + 7/4*denom(1/4*s12^2)*mt^4*s12*s13*s23*s24 + 1/4*denom(1/4*s12^2)
      *mt^4*s12*s13*s23^2 + 7/4*denom(1/4*s12^2)*mt^4*s12*s13*s14*s24 + 7/4*
      denom(1/4*s12^2)*mt^4*s12*s13*s14*s23 + 1/4*denom(1/4*s12^2)*mt^4*s12*
      s13*s14^2 + 1/4*denom(1/4*s12^2)*mt^4*s12*s13^2*s24 + 1/4*denom(1/4*
      s12^2)*mt^4*s12*s13^2*s23 + 1/4*denom(1/4*s12^2)*mt^4*s12*s13^2*s14 + 1/
      4*denom(1/4*s12^2)*mt^4*s12^2*s23*s24 + 1/4*denom(1/4*s12^2)*mt^4*s12^2*
      s14*s24 + 1/4*denom(1/4*s12^2)*mt^4*s12^2*s14*s23 + 1/4*denom(1/4*s12^2)
      *mt^4*s12^2*s13*s24 + 1/4*denom(1/4*s12^2)*mt^4*s12^2*s13*s23 + 1/4*
      denom(1/4*s12^2)*mt^4*s12^2*s13*s14 - 1/4*denom(1/4*s12^2)*mt^4*mh^2*s12
      *s23*s24 - 1/4*denom(1/4*s12^2)*mt^4*mh^2*s12*s14*s24 - 1/4*denom(1/4*
      s12^2)*mt^4*mh^2*s12*s14*s23 - 1/4*denom(1/4*s12^2)*mt^4*mh^2*s12*s13*
      s24 - 1/4*denom(1/4*s12^2)*mt^4*mh^2*s12*s13*s23 - 1/4*denom(1/4*s12^2)*
      mt^4*mh^2*s12*s13*s14 - 1/4*denom(1/4*s12^2)*mt^6*s23*s24^2 - 1/4*denom(
      1/4*s12^2)*mt^6*s23^2*s24 - 1/4*denom(1/4*s12^2)*mt^6*s14*s24^2 - 3/2*
      denom(1/4*s12^2)*mt^6*s14*s23*s24 - 1/2*denom(1/4*s12^2)*mt^6*s14*s23^2
       - 1/4*denom(1/4*s12^2)*mt^6*s14^2*s24 - 1/2*denom(1/4*s12^2)*mt^6*s14^2
      *s23 - 1/2*denom(1/4*s12^2)*mt^6*s13*s24^2 - 3/2*denom(1/4*s12^2)*mt^6*
      s13*s23*s24 - 1/4*denom(1/4*s12^2)*mt^6*s13*s23^2 - 3/2*denom(1/4*s12^2)
      *mt^6*s13*s14*s24 - 3/2*denom(1/4*s12^2)*mt^6*s13*s14*s23 - 1/4*denom(1/
      4*s12^2)*mt^6*s13*s14^2 - 1/2*denom(1/4*s12^2)*mt^6*s13^2*s24 - 1/4*
      denom(1/4*s12^2)*mt^6*s13^2*s23 - 1/4*denom(1/4*s12^2)*mt^6*s13^2*s14 - 
      1/4*denom(1/4*s12^2)*mt^6*s12*s24^2 - 3/2*denom(1/4*s12^2)*mt^6*s12*s23*
      s24 - 1/4*denom(1/4*s12^2)*mt^6*s12*s23^2 - 3/2*denom(1/4*s12^2)*mt^6*
      s12*s14*s24 - 3/2*denom(1/4*s12^2)*mt^6*s12*s14*s23 - 1/4*denom(1/4*
      s12^2)*mt^6*s12*s14^2 - 3/2*denom(1/4*s12^2)*mt^6*s12*s13*s24 - 3/2*
      denom(1/4*s12^2)*mt^6*s12*s13*s23 - 3/2*denom(1/4*s12^2)*mt^6*s12*s13*
      s14 - 1/4*denom(1/4*s12^2)*mt^6*s12*s13^2 - 1/4*denom(1/4*s12^2)*mt^6*
      s12^2*s24 - 1/4*denom(1/4*s12^2)*mt^6*s12^2*s23 - 1/4*denom(1/4*s12^2)*
      mt^6*s12^2*s14 - 1/4*denom(1/4*s12^2)*mt^6*s12^2*s13 + 1/4*denom(1/4*
      s12^2)*mt^6*mh^2*s12*s24 + 1/4*denom(1/4*s12^2)*mt^6*mh^2*s12*s23 + 1/4*
      denom(1/4*s12^2)*mt^6*mh^2*s12*s14 + 1/4*denom(1/4*s12^2)*mt^6*mh^2*s12*
      s13 + 1/4*denom(1/4*s12^2)*mt^8*s24^2 + denom(1/4*s12^2)*mt^8*s23*s24 + 
      1/4*denom(1/4*s12^2)*mt^8*s23^2 + denom(1/4*s12^2)*mt^8*s14*s24 + 5/4*
      denom(1/4*s12^2)*mt^8*s14*s23 + 1/4*denom(1/4*s12^2)*mt^8*s14^2 + 5/4*
      denom(1/4*s12^2)*mt^8*s13*s24 + denom(1/4*s12^2)*mt^8*s13*s23 + denom(1/
      4*s12^2)*mt^8*s13*s14 + 1/4*denom(1/4*s12^2)*mt^8*s13^2 + 5/4*denom(1/4*
      s12^2)*mt^8*s12*s24 + 5/4*denom(1/4*s12^2)*mt^8*s12*s23 + 5/4*denom(1/4*
      s12^2)*mt^8*s12*s14 + 5/4*denom(1/4*s12^2)*mt^8*s12*s13 + 1/4*denom(1/4*
      s12^2)*mt^8*s12^2 - 1/4*denom(1/4*s12^2)*mt^8*mh^2*s12 - 3/4*denom(1/4*
      s12^2)*mt^10*s24 - 3/4*denom(1/4*s12^2)*mt^10*s23 - 3/4*denom(1/4*s12^2)
      *mt^10*s14 - 3/4*denom(1/4*s12^2)*mt^10*s13 - denom(1/4*s12^2)*mt^10*s12
       + 1/2*denom(1/4*s12^2)*mt^12;
 
 .sort
id KMatrix(7,12) =   - 1/2*mt^2*s14*s23*s24 - 1/2*mt^2*s14*s23^2 - 1/2*mt^2*
      s14^2*s23 - 1/2*mt^2*s13*s24^2 - 1/2*mt^2*s13*s23*s24 - 1/2*mt^2*s13*s14
      *s24 - 1/2*mt^2*s13*s14*s23 - 1/2*mt^2*s13^2*s24 - 1/2*mt^2*s12*s24^2 - 
      mt^2*s12*s23*s24 - 1/2*mt^2*s12*s23^2 - mt^2*s12*s14*s24 - 3/2*mt^2*s12*
      s14*s23 - 1/2*mt^2*s12*s14^2 - 3/2*mt^2*s12*s13*s24 - mt^2*s12*s13*s23
       - mt^2*s12*s13*s14 - 1/2*mt^2*s12*s13^2 - mt^2*s12^2*s24 - mt^2*s12^2*
      s23 - mt^2*s12^2*s14 - mt^2*s12^2*s13 - 1/2*mt^2*s12^3 + 1/2*mt^2*mh^2*
      s14*s23 + 1/2*mt^2*mh^2*s13*s24 + mt^2*mh^2*s12*s24 + mt^2*mh^2*s12*s23
       + mt^2*mh^2*s12*s14 + mt^2*mh^2*s12*s13 + mt^2*mh^2*s12^2 - 1/2*mt^2*
      mh^4*s12 + 1/2*mt^4*s24^2 + mt^4*s23*s24 + 1/2*mt^4*s23^2 + mt^4*s14*s24
       + 2*mt^4*s14*s23 + 1/2*mt^4*s14^2 + 2*mt^4*s13*s24 + mt^4*s13*s23 + 
      mt^4*s13*s14 + 1/2*mt^4*s13^2 + 7/2*mt^4*s12*s24 + 7/2*mt^4*s12*s23 + 7/
      2*mt^4*s12*s14 + 7/2*mt^4*s12*s13 + 3*mt^4*s12^2 - 1/2*mt^4*mh^2*s24 - 1/
      2*mt^4*mh^2*s23 - 1/2*mt^4*mh^2*s14 - 1/2*mt^4*mh^2*s13 - 3*mt^4*mh^2*
      s12 - 2*mt^6*s24 - 2*mt^6*s23 - 2*mt^6*s14 - 2*mt^6*s13 - 5*mt^6*s12 + 
      mt^6*mh^2 + 2*mt^8 + 1/4*denom(1/2*s12)*s14^2*s23*s24^2 + 1/4*denom(1/2*
      s12)*s14^2*s23^2*s24 + 1/4*denom(1/2*s12)*s14^3*s23*s24 + 1/4*denom(1/2*
      s12)*s13*s14*s24^3 + 1/4*denom(1/2*s12)*s13*s14*s23*s24^2 + 1/4*denom(1/
      2*s12)*s13*s14^2*s24^2 + 1/4*denom(1/2*s12)*s13*s14^2*s23*s24 + 1/4*
      denom(1/2*s12)*s13^2*s14*s24^2 + 1/4*denom(1/2*s12)*s12*s14*s24^3 + 1/2*
      denom(1/2*s12)*s12*s14*s23*s24^2 + 1/4*denom(1/2*s12)*s12*s14*s23^2*s24
       + 1/2*denom(1/2*s12)*s12*s14^2*s24^2 + 3/4*denom(1/2*s12)*s12*s14^2*s23
      *s24 + 1/4*denom(1/2*s12)*s12*s14^3*s24 + 3/4*denom(1/2*s12)*s12*s13*s14
      *s24^2 + 1/2*denom(1/2*s12)*s12*s13*s14*s23*s24 + 1/2*denom(1/2*s12)*s12
      *s13*s14^2*s24 + 1/4*denom(1/2*s12)*s12*s13^2*s14*s24 + 1/2*denom(1/2*
      s12)*s12^2*s14*s24^2 + 1/2*denom(1/2*s12)*s12^2*s14*s23*s24 + 1/2*denom(
      1/2*s12)*s12^2*s14^2*s24 + 1/2*denom(1/2*s12)*s12^2*s13*s14*s24 + 1/4*
      denom(1/2*s12)*s12^3*s14*s24 - 1/4*denom(1/2*s12)*mh^2*s14^2*s23*s24 - 1/
      4*denom(1/2*s12)*mh^2*s13*s14*s24^2 - 1/2*denom(1/2*s12)*mh^2*s12*s14*
      s24^2 - 1/2*denom(1/2*s12)*mh^2*s12*s14*s23*s24 - 1/2*denom(1/2*s12)*
      mh^2*s12*s14^2*s24 - 1/2*denom(1/2*s12)*mh^2*s12*s13*s14*s24 - 1/2*
      denom(1/2*s12)*mh^2*s12^2*s14*s24 + 1/4*denom(1/2*s12)*mh^4*s12*s14*s24
       - 1/4*denom(1/2*s12)*mt^2*s14*s24^3 - 3/4*denom(1/2*s12)*mt^2*s14*s23*
      s24^2 - 1/2*denom(1/2*s12)*mt^2*s14*s23^2*s24 - 1/2*denom(1/2*s12)*mt^2*
      s14^2*s24^2 - 3/2*denom(1/2*s12)*mt^2*s14^2*s23*s24 - 1/2*denom(1/2*s12)
      *mt^2*s14^2*s23^2 - 1/4*denom(1/2*s12)*mt^2*s14^3*s24 - 1/4*denom(1/2*
      s12)*mt^2*s14^3*s23 - 1/4*denom(1/2*s12)*mt^2*s13*s24^3 - 1/4*denom(1/2*
      s12)*mt^2*s13*s23*s24^2 - 3/2*denom(1/2*s12)*mt^2*s13*s14*s24^2 - 3/2*
      denom(1/2*s12)*mt^2*s13*s14*s23*s24 - 3/4*denom(1/2*s12)*mt^2*s13*s14^2*
      s24 - 1/4*denom(1/2*s12)*mt^2*s13*s14^2*s23 - 1/2*denom(1/2*s12)*mt^2*
      s13^2*s24^2 - 1/2*denom(1/2*s12)*mt^2*s13^2*s14*s24 - 1/4*denom(1/2*s12)
      *mt^2*s12*s24^3 - 1/2*denom(1/2*s12)*mt^2*s12*s23*s24^2 - 1/4*denom(1/2*
      s12)*mt^2*s12*s23^2*s24 - 5/2*denom(1/2*s12)*mt^2*s12*s14*s24^2 - 13/4*
      denom(1/2*s12)*mt^2*s12*s14*s23*s24 - 1/2*denom(1/2*s12)*mt^2*s12*s14*
      s23^2 - 5/2*denom(1/2*s12)*mt^2*s12*s14^2*s24 - denom(1/2*s12)*mt^2*s12*
      s14^2*s23 - 1/4*denom(1/2*s12)*mt^2*s12*s14^3 - denom(1/2*s12)*mt^2*s12*
      s13*s24^2 - 3/4*denom(1/2*s12)*mt^2*s12*s13*s23*s24 - 13/4*denom(1/2*s12
      )*mt^2*s12*s13*s14*s24 - 3/4*denom(1/2*s12)*mt^2*s12*s13*s14*s23 - 1/2*
      denom(1/2*s12)*mt^2*s12*s13*s14^2 - 1/2*denom(1/2*s12)*mt^2*s12*s13^2*
      s24 - 1/4*denom(1/2*s12)*mt^2*s12*s13^2*s14 - 1/2*denom(1/2*s12)*mt^2*
      s12^2*s24^2 - 1/2*denom(1/2*s12)*mt^2*s12^2*s23*s24 - 5/2*denom(1/2*s12)
      *mt^2*s12^2*s14*s24 - 3/4*denom(1/2*s12)*mt^2*s12^2*s14*s23 - 1/2*denom(
      1/2*s12)*mt^2*s12^2*s14^2 - 3/4*denom(1/2*s12)*mt^2*s12^2*s13*s24 - 1/2*
      denom(1/2*s12)*mt^2*s12^2*s13*s14 - 1/4*denom(1/2*s12)*mt^2*s12^3*s24 - 
      1/4*denom(1/2*s12)*mt^2*s12^3*s14 + 1/4*denom(1/2*s12)*mt^2*mh^2*s14*
      s24^2 + 1/2*denom(1/2*s12)*mt^2*mh^2*s14*s23*s24 + 1/4*denom(1/2*s12)*
      mt^2*mh^2*s14^2*s24 + 1/4*denom(1/2*s12)*mt^2*mh^2*s14^2*s23 + 1/4*
      denom(1/2*s12)*mt^2*mh^2*s13*s24^2 + 1/2*denom(1/2*s12)*mt^2*mh^2*s13*
      s14*s24 + 1/2*denom(1/2*s12)*mt^2*mh^2*s12*s24^2 + 1/2*denom(1/2*s12)*
      mt^2*mh^2*s12*s23*s24 + 5/2*denom(1/2*s12)*mt^2*mh^2*s12*s14*s24 + 3/4*
      denom(1/2*s12)*mt^2*mh^2*s12*s14*s23 + 1/2*denom(1/2*s12)*mt^2*mh^2*s12*
      s14^2 + 3/4*denom(1/2*s12)*mt^2*mh^2*s12*s13*s24 + 1/2*denom(1/2*s12)*
      mt^2*mh^2*s12*s13*s14 + 1/2*denom(1/2*s12)*mt^2*mh^2*s12^2*s24 + 1/2*
      denom(1/2*s12)*mt^2*mh^2*s12^2*s14 - 1/4*denom(1/2*s12)*mt^2*mh^4*s12*
      s24 - 1/4*denom(1/2*s12)*mt^2*mh^4*s12*s14 + 1/4*denom(1/2*s12)*mt^4*
      s24^3 + 1/2*denom(1/2*s12)*mt^4*s23*s24^2 + 1/4*denom(1/2*s12)*mt^4*
      s23^2*s24 + 7/4*denom(1/2*s12)*mt^4*s14*s24^2 + 13/4*denom(1/2*s12)*mt^4
      *s14*s23*s24 + denom(1/2*s12)*mt^4*s14*s23^2 + 7/4*denom(1/2*s12)*mt^4*
      s14^2*s24 + 7/4*denom(1/2*s12)*mt^4*s14^2*s23 + 1/4*denom(1/2*s12)*mt^4*
      s14^3 + 7/4*denom(1/2*s12)*mt^4*s13*s24^2 + 5/4*denom(1/2*s12)*mt^4*s13*
      s23*s24 + 13/4*denom(1/2*s12)*mt^4*s13*s14*s24 + 5/4*denom(1/2*s12)*mt^4
      *s13*s14*s23 + 1/2*denom(1/2*s12)*mt^4*s13*s14^2 + denom(1/2*s12)*mt^4*
      s13^2*s24 + 1/4*denom(1/2*s12)*mt^4*s13^2*s14 + 9/4*denom(1/2*s12)*mt^4*
      s12*s24^2 + 11/4*denom(1/2*s12)*mt^4*s12*s23*s24 + 1/2*denom(1/2*s12)*
      mt^4*s12*s23^2 + 7*denom(1/2*s12)*mt^4*s12*s14*s24 + 4*denom(1/2*s12)*
      mt^4*s12*s14*s23 + 9/4*denom(1/2*s12)*mt^4*s12*s14^2 + 4*denom(1/2*s12)*
      mt^4*s12*s13*s24 + denom(1/2*s12)*mt^4*s12*s13*s23 + 11/4*denom(1/2*s12)
      *mt^4*s12*s13*s14 + 1/2*denom(1/2*s12)*mt^4*s12*s13^2 + 9/4*denom(1/2*
      s12)*mt^4*s12^2*s24 + 3/4*denom(1/2*s12)*mt^4*s12^2*s23 + 9/4*denom(1/2*
      s12)*mt^4*s12^2*s14 + 3/4*denom(1/2*s12)*mt^4*s12^2*s13 + 1/4*denom(1/2*
      s12)*mt^4*s12^3 - 1/4*denom(1/2*s12)*mt^4*mh^2*s24^2 - 1/4*denom(1/2*s12
      )*mt^4*mh^2*s23*s24 - denom(1/2*s12)*mt^4*mh^2*s14*s24 - 1/2*denom(1/2*
      s12)*mt^4*mh^2*s14*s23 - 1/4*denom(1/2*s12)*mt^4*mh^2*s14^2 - 1/2*denom(
      1/2*s12)*mt^4*mh^2*s13*s24 - 1/4*denom(1/2*s12)*mt^4*mh^2*s13*s14 - 9/4*
      denom(1/2*s12)*mt^4*mh^2*s12*s24 - 3/4*denom(1/2*s12)*mt^4*mh^2*s12*s23
       - 9/4*denom(1/2*s12)*mt^4*mh^2*s12*s14 - 3/4*denom(1/2*s12)*mt^4*mh^2*
      s12*s13 - 1/2*denom(1/2*s12)*mt^4*mh^2*s12^2 + 1/4*denom(1/2*s12)*mt^4*
      mh^4*s12 - 3/2*denom(1/2*s12)*mt^6*s24^2 - 2*denom(1/2*s12)*mt^6*s23*s24
       - 1/2*denom(1/2*s12)*mt^6*s23^2 - 4*denom(1/2*s12)*mt^6*s14*s24 - 7/2*
      denom(1/2*s12)*mt^6*s14*s23 - 3/2*denom(1/2*s12)*mt^6*s14^2 - 7/2*denom(
      1/2*s12)*mt^6*s13*s24 - denom(1/2*s12)*mt^6*s13*s23 - 2*denom(1/2*s12)*
      mt^6*s13*s14 - 1/2*denom(1/2*s12)*mt^6*s13^2 - 23/4*denom(1/2*s12)*mt^6*
      s12*s24 - 13/4*denom(1/2*s12)*mt^6*s12*s23 - 23/4*denom(1/2*s12)*mt^6*
      s12*s14 - 13/4*denom(1/2*s12)*mt^6*s12*s13 - 2*denom(1/2*s12)*mt^6*s12^2
       + 3/4*denom(1/2*s12)*mt^6*mh^2*s24 + 1/4*denom(1/2*s12)*mt^6*mh^2*s23
       + 3/4*denom(1/2*s12)*mt^6*mh^2*s14 + 1/4*denom(1/2*s12)*mt^6*mh^2*s13
       + 2*denom(1/2*s12)*mt^6*mh^2*s12 + 3*denom(1/2*s12)*mt^8*s24 + 2*denom(
      1/2*s12)*mt^8*s23 + 3*denom(1/2*s12)*mt^8*s14 + 2*denom(1/2*s12)*mt^8*
      s13 + 9/2*denom(1/2*s12)*mt^8*s12 - 1/2*denom(1/2*s12)*mt^8*mh^2 - 2*
      denom(1/2*s12)*mt^10 + 1/8*denom(1/4*s12^2)*s14^3*s23^2*s24 + 1/4*denom(
      1/4*s12^2)*s13*s14^2*s23*s24^2 + 1/8*denom(1/4*s12^2)*s13^2*s14*s24^3 + 
      1/8*denom(1/4*s12^2)*s12*s14^2*s23*s24^2 + 1/8*denom(1/4*s12^2)*s12*
      s14^2*s23^2*s24 + 1/8*denom(1/4*s12^2)*s12*s14^3*s23*s24 + 1/8*denom(1/4
      *s12^2)*s12*s13*s14*s24^3 + 1/8*denom(1/4*s12^2)*s12*s13*s14*s23*s24^2
       + 1/8*denom(1/4*s12^2)*s12*s13*s14^2*s24^2 + 1/8*denom(1/4*s12^2)*s12*
      s13*s14^2*s23*s24 + 1/8*denom(1/4*s12^2)*s12*s13^2*s14*s24^2 + 1/8*
      denom(1/4*s12^2)*s12^2*s14^2*s23*s24 + 1/8*denom(1/4*s12^2)*s12^2*s13*
      s14*s24^2 - 1/8*denom(1/4*s12^2)*mh^2*s12*s14^2*s23*s24 - 1/8*denom(1/4*
      s12^2)*mh^2*s12*s13*s14*s24^2 - 1/4*denom(1/4*s12^2)*mt^2*s14^2*s23*
      s24^2 - 3/8*denom(1/4*s12^2)*mt^2*s14^2*s23^2*s24 - 1/4*denom(1/4*s12^2)
      *mt^2*s14^3*s23*s24 - 1/8*denom(1/4*s12^2)*mt^2*s14^3*s23^2 - 1/4*denom(
      1/4*s12^2)*mt^2*s13*s14*s24^3 - 1/2*denom(1/4*s12^2)*mt^2*s13*s14*s23*
      s24^2 - 1/4*denom(1/4*s12^2)*mt^2*s13*s14^2*s24^2 - 1/2*denom(1/4*s12^2)
      *mt^2*s13*s14^2*s23*s24 - 1/8*denom(1/4*s12^2)*mt^2*s13^2*s24^3 - 3/8*
      denom(1/4*s12^2)*mt^2*s13^2*s14*s24^2 - 1/8*denom(1/4*s12^2)*mt^2*s12*
      s14*s24^3 - 3/8*denom(1/4*s12^2)*mt^2*s12*s14*s23*s24^2 - 1/4*denom(1/4*
      s12^2)*mt^2*s12*s14*s23^2*s24 - 1/4*denom(1/4*s12^2)*mt^2*s12*s14^2*
      s24^2 - denom(1/4*s12^2)*mt^2*s12*s14^2*s23*s24 - 1/8*denom(1/4*s12^2)*
      mt^2*s12*s14^2*s23^2 - 1/8*denom(1/4*s12^2)*mt^2*s12*s14^3*s24 - 1/8*
      denom(1/4*s12^2)*mt^2*s12*s14^3*s23 - 1/8*denom(1/4*s12^2)*mt^2*s12*s13*
      s24^3 - 1/8*denom(1/4*s12^2)*mt^2*s12*s13*s23*s24^2 - denom(1/4*s12^2)*
      mt^2*s12*s13*s14*s24^2 - 1/2*denom(1/4*s12^2)*mt^2*s12*s13*s14*s23*s24
       - 3/8*denom(1/4*s12^2)*mt^2*s12*s13*s14^2*s24 - 1/8*denom(1/4*s12^2)*
      mt^2*s12*s13*s14^2*s23 - 1/8*denom(1/4*s12^2)*mt^2*s12*s13^2*s24^2 - 1/4
      *denom(1/4*s12^2)*mt^2*s12*s13^2*s14*s24 - 1/8*denom(1/4*s12^2)*mt^2*
      s12^2*s14*s24^2 - 1/4*denom(1/4*s12^2)*mt^2*s12^2*s14*s23*s24 - 1/8*
      denom(1/4*s12^2)*mt^2*s12^2*s14^2*s24 - 1/8*denom(1/4*s12^2)*mt^2*s12^2*
      s14^2*s23 - 1/8*denom(1/4*s12^2)*mt^2*s12^2*s13*s24^2 - 1/4*denom(1/4*
      s12^2)*mt^2*s12^2*s13*s14*s24 + 1/8*denom(1/4*s12^2)*mt^2*mh^2*s12*s14*
      s24^2 + 1/4*denom(1/4*s12^2)*mt^2*mh^2*s12*s14*s23*s24 + 1/8*denom(1/4*
      s12^2)*mt^2*mh^2*s12*s14^2*s24 + 1/8*denom(1/4*s12^2)*mt^2*mh^2*s12*
      s14^2*s23 + 1/8*denom(1/4*s12^2)*mt^2*mh^2*s12*s13*s24^2 + 1/4*denom(1/4
      *s12^2)*mt^2*mh^2*s12*s13*s14*s24 + 1/8*denom(1/4*s12^2)*mt^4*s14*s24^3
       + 1/2*denom(1/4*s12^2)*mt^4*s14*s23*s24^2 + 3/8*denom(1/4*s12^2)*mt^4*
      s14*s23^2*s24 + 1/4*denom(1/4*s12^2)*mt^4*s14^2*s24^2 + 5/4*denom(1/4*
      s12^2)*mt^4*s14^2*s23*s24 + 3/8*denom(1/4*s12^2)*mt^4*s14^2*s23^2 + 1/8*
      denom(1/4*s12^2)*mt^4*s14^3*s24 + 1/4*denom(1/4*s12^2)*mt^4*s14^3*s23 + 
      1/4*denom(1/4*s12^2)*mt^4*s13*s24^3 + 1/4*denom(1/4*s12^2)*mt^4*s13*s23*
      s24^2 + 5/4*denom(1/4*s12^2)*mt^4*s13*s14*s24^2 + denom(1/4*s12^2)*mt^4*
      s13*s14*s23*s24 + 1/2*denom(1/4*s12^2)*mt^4*s13*s14^2*s24 + 1/4*denom(1/
      4*s12^2)*mt^4*s13*s14^2*s23 + 3/8*denom(1/4*s12^2)*mt^4*s13^2*s24^2 + 3/
      8*denom(1/4*s12^2)*mt^4*s13^2*s14*s24 + 1/8*denom(1/4*s12^2)*mt^4*s12*
      s24^3 + 1/4*denom(1/4*s12^2)*mt^4*s12*s23*s24^2 + 1/8*denom(1/4*s12^2)*
      mt^4*s12*s23^2*s24 + 9/8*denom(1/4*s12^2)*mt^4*s12*s14*s24^2 + 15/8*
      denom(1/4*s12^2)*mt^4*s12*s14*s23*s24 + 1/4*denom(1/4*s12^2)*mt^4*s12*
      s14*s23^2 + 9/8*denom(1/4*s12^2)*mt^4*s12*s14^2*s24 + 7/8*denom(1/4*
      s12^2)*mt^4*s12*s14^2*s23 + 1/8*denom(1/4*s12^2)*mt^4*s12*s14^3 + 7/8*
      denom(1/4*s12^2)*mt^4*s12*s13*s24^2 + 3/8*denom(1/4*s12^2)*mt^4*s12*s13*
      s23*s24 + 15/8*denom(1/4*s12^2)*mt^4*s12*s13*s14*s24 + 3/8*denom(1/4*
      s12^2)*mt^4*s12*s13*s14*s23 + 1/4*denom(1/4*s12^2)*mt^4*s12*s13*s14^2 + 
      1/4*denom(1/4*s12^2)*mt^4*s12*s13^2*s24 + 1/8*denom(1/4*s12^2)*mt^4*s12*
      s13^2*s14 + 1/8*denom(1/4*s12^2)*mt^4*s12^2*s24^2 + 1/8*denom(1/4*s12^2)
      *mt^4*s12^2*s23*s24 + 1/2*denom(1/4*s12^2)*mt^4*s12^2*s14*s24 + 1/4*
      denom(1/4*s12^2)*mt^4*s12^2*s14*s23 + 1/8*denom(1/4*s12^2)*mt^4*s12^2*
      s14^2 + 1/4*denom(1/4*s12^2)*mt^4*s12^2*s13*s24 + 1/8*denom(1/4*s12^2)*
      mt^4*s12^2*s13*s14 - 1/8*denom(1/4*s12^2)*mt^4*mh^2*s12*s24^2 - 1/8*
      denom(1/4*s12^2)*mt^4*mh^2*s12*s23*s24 - 1/2*denom(1/4*s12^2)*mt^4*mh^2*
      s12*s14*s24 - 1/4*denom(1/4*s12^2)*mt^4*mh^2*s12*s14*s23 - 1/8*denom(1/4
      *s12^2)*mt^4*mh^2*s12*s14^2 - 1/4*denom(1/4*s12^2)*mt^4*mh^2*s12*s13*s24
       - 1/8*denom(1/4*s12^2)*mt^4*mh^2*s12*s13*s14 - 1/8*denom(1/4*s12^2)*
      mt^6*s24^3 - 1/4*denom(1/4*s12^2)*mt^6*s23*s24^2 - 1/8*denom(1/4*s12^2)*
      mt^6*s23^2*s24 - 7/8*denom(1/4*s12^2)*mt^6*s14*s24^2 - 7/4*denom(1/4*
      s12^2)*mt^6*s14*s23*s24 - 3/8*denom(1/4*s12^2)*mt^6*s14*s23^2 - 7/8*
      denom(1/4*s12^2)*mt^6*s14^2*s24 - denom(1/4*s12^2)*mt^6*s14^2*s23 - 1/8*
      denom(1/4*s12^2)*mt^6*s14^3 - denom(1/4*s12^2)*mt^6*s13*s24^2 - 1/2*
      denom(1/4*s12^2)*mt^6*s13*s23*s24 - 7/4*denom(1/4*s12^2)*mt^6*s13*s14*
      s24 - 1/2*denom(1/4*s12^2)*mt^6*s13*s14*s23 - 1/4*denom(1/4*s12^2)*mt^6*
      s13*s14^2 - 3/8*denom(1/4*s12^2)*mt^6*s13^2*s24 - 1/8*denom(1/4*s12^2)*
      mt^6*s13^2*s14 - 7/8*denom(1/4*s12^2)*mt^6*s12*s24^2 - denom(1/4*s12^2)*
      mt^6*s12*s23*s24 - 1/8*denom(1/4*s12^2)*mt^6*s12*s23^2 - 11/4*denom(1/4*
      s12^2)*mt^6*s12*s14*s24 - 3/2*denom(1/4*s12^2)*mt^6*s12*s14*s23 - 7/8*
      denom(1/4*s12^2)*mt^6*s12*s14^2 - 3/2*denom(1/4*s12^2)*mt^6*s12*s13*s24
       - 1/4*denom(1/4*s12^2)*mt^6*s12*s13*s23 - denom(1/4*s12^2)*mt^6*s12*s13
      *s14 - 1/8*denom(1/4*s12^2)*mt^6*s12*s13^2 - 3/8*denom(1/4*s12^2)*mt^6*
      s12^2*s24 - 1/8*denom(1/4*s12^2)*mt^6*s12^2*s23 - 3/8*denom(1/4*s12^2)*
      mt^6*s12^2*s14 - 1/8*denom(1/4*s12^2)*mt^6*s12^2*s13 + 3/8*denom(1/4*
      s12^2)*mt^6*mh^2*s12*s24 + 1/8*denom(1/4*s12^2)*mt^6*mh^2*s12*s23 + 3/8*
      denom(1/4*s12^2)*mt^6*mh^2*s12*s14 + 1/8*denom(1/4*s12^2)*mt^6*mh^2*s12*
      s13 + 5/8*denom(1/4*s12^2)*mt^8*s24^2 + 3/4*denom(1/4*s12^2)*mt^8*s23*
      s24 + 1/8*denom(1/4*s12^2)*mt^8*s23^2 + 7/4*denom(1/4*s12^2)*mt^8*s14*
      s24 + 5/4*denom(1/4*s12^2)*mt^8*s14*s23 + 5/8*denom(1/4*s12^2)*mt^8*
      s14^2 + 5/4*denom(1/4*s12^2)*mt^8*s13*s24 + 1/4*denom(1/4*s12^2)*mt^8*
      s13*s23 + 3/4*denom(1/4*s12^2)*mt^8*s13*s14 + 1/8*denom(1/4*s12^2)*mt^8*
      s13^2 + 7/4*denom(1/4*s12^2)*mt^8*s12*s24 + 3/4*denom(1/4*s12^2)*mt^8*
      s12*s23 + 7/4*denom(1/4*s12^2)*mt^8*s12*s14 + 3/4*denom(1/4*s12^2)*mt^8*
      s12*s13 + 1/4*denom(1/4*s12^2)*mt^8*s12^2 - 1/4*denom(1/4*s12^2)*mt^8*
      mh^2*s12 - denom(1/4*s12^2)*mt^10*s24 - 1/2*denom(1/4*s12^2)*mt^10*s23
       - denom(1/4*s12^2)*mt^10*s14 - 1/2*denom(1/4*s12^2)*mt^10*s13 - denom(1/
      4*s12^2)*mt^10*s12 + 1/2*denom(1/4*s12^2)*mt^12;
 
 .sort
id KMatrix(7,13) =   - mt^3*s12*s14*s24 - mt^3*s12*s14*s23 - mt^3*s12*s14^2 - 
      mt^3*s12*s13*s14 - mt^3*s12^2*s14 + mt^3*mh^2*s12*s14 + mt^5*s12*s24 + 
      mt^5*s12*s23 + 3*mt^5*s12*s14 + mt^5*s12*s13 + mt^5*s12^2 - mt^5*mh^2*
      s12 - 2*mt^7*s12 + 1/2*denom(1/2*s12)*mt*s12*s13*s14*s23*s24 + 1/2*
      denom(1/2*s12)*mt*s12*s13*s14*s23^2 + 1/2*denom(1/2*s12)*mt*s12*s13*
      s14^2*s23 + 1/2*denom(1/2*s12)*mt*s12*s13^2*s14*s23 + 1/2*denom(1/2*s12)
      *mt*s12^2*s13*s14*s23 - 1/2*denom(1/2*s12)*mt*mh^2*s12*s13*s14*s23 - 1/2
      *denom(1/2*s12)*mt^3*s12*s14*s23*s24 - 1/2*denom(1/2*s12)*mt^3*s12*s14*
      s23^2 - denom(1/2*s12)*mt^3*s12*s14^2*s23 - 1/2*denom(1/2*s12)*mt^3*s12*
      s13*s23*s24 - 1/2*denom(1/2*s12)*mt^3*s12*s13*s23^2 - denom(1/2*s12)*
      mt^3*s12*s13*s14*s24 - 5/2*denom(1/2*s12)*mt^3*s12*s13*s14*s23 - 1/2*
      denom(1/2*s12)*mt^3*s12*s13*s14^2 - 1/2*denom(1/2*s12)*mt^3*s12*s13^2*
      s23 - 1/2*denom(1/2*s12)*mt^3*s12*s13^2*s14 - 1/2*denom(1/2*s12)*mt^3*
      s12^2*s14*s23 - 1/2*denom(1/2*s12)*mt^3*s12^2*s13*s23 - 1/2*denom(1/2*
      s12)*mt^3*s12^2*s13*s14 + 1/2*denom(1/2*s12)*mt^3*mh^2*s12*s14*s23 + 1/2
      *denom(1/2*s12)*mt^3*mh^2*s12*s13*s23 + 1/2*denom(1/2*s12)*mt^3*mh^2*s12
      *s13*s14 + 1/2*denom(1/2*s12)*mt^5*s12*s23*s24 + 1/2*denom(1/2*s12)*mt^5
      *s12*s23^2 + denom(1/2*s12)*mt^5*s12*s14*s24 + 3*denom(1/2*s12)*mt^5*s12
      *s14*s23 + denom(1/2*s12)*mt^5*s12*s14^2 + denom(1/2*s12)*mt^5*s12*s13*
      s24 + 2*denom(1/2*s12)*mt^5*s12*s13*s23 + 5/2*denom(1/2*s12)*mt^5*s12*
      s13*s14 + 1/2*denom(1/2*s12)*mt^5*s12*s13^2 + 1/2*denom(1/2*s12)*mt^5*
      s12^2*s23 + 1/2*denom(1/2*s12)*mt^5*s12^2*s14 + 1/2*denom(1/2*s12)*mt^5*
      s12^2*s13 - 1/2*denom(1/2*s12)*mt^5*mh^2*s12*s23 - 1/2*denom(1/2*s12)*
      mt^5*mh^2*s12*s14 - 1/2*denom(1/2*s12)*mt^5*mh^2*s12*s13 - denom(1/2*s12
      )*mt^7*s12*s24 - 2*denom(1/2*s12)*mt^7*s12*s23 - 3*denom(1/2*s12)*mt^7*
      s12*s14 - 2*denom(1/2*s12)*mt^7*s12*s13 - 1/2*denom(1/2*s12)*mt^7*s12^2
       + 1/2*denom(1/2*s12)*mt^7*mh^2*s12 + 2*denom(1/2*s12)*mt^9*s12 + 1/4*
      denom(1/4*s12^2)*mt*s12*s13*s14^2*s23^2 + 1/4*denom(1/4*s12^2)*mt*s12*
      s13^2*s14*s23*s24 - 1/4*denom(1/4*s12^2)*mt^3*s12*s14^2*s23^2 - 1/2*
      denom(1/4*s12^2)*mt^3*s12*s13*s14*s23*s24 - 1/2*denom(1/4*s12^2)*mt^3*
      s12*s13*s14*s23^2 - 1/2*denom(1/4*s12^2)*mt^3*s12*s13*s14^2*s23 - 1/4*
      denom(1/4*s12^2)*mt^3*s12*s13^2*s23*s24 - 1/4*denom(1/4*s12^2)*mt^3*s12*
      s13^2*s14*s24 - 1/4*denom(1/4*s12^2)*mt^3*s12*s13^2*s14*s23 + 1/4*denom(
      1/4*s12^2)*mt^5*s12*s14*s23*s24 + 1/2*denom(1/4*s12^2)*mt^5*s12*s14*
      s23^2 + 1/2*denom(1/4*s12^2)*mt^5*s12*s14^2*s23 + 1/2*denom(1/4*s12^2)*
      mt^5*s12*s13*s23*s24 + 1/4*denom(1/4*s12^2)*mt^5*s12*s13*s23^2 + 1/2*
      denom(1/4*s12^2)*mt^5*s12*s13*s14*s24 + 3/2*denom(1/4*s12^2)*mt^5*s12*
      s13*s14*s23 + 1/4*denom(1/4*s12^2)*mt^5*s12*s13*s14^2 + 1/4*denom(1/4*
      s12^2)*mt^5*s12*s13^2*s24 + 1/4*denom(1/4*s12^2)*mt^5*s12*s13^2*s23 + 1/
      4*denom(1/4*s12^2)*mt^5*s12*s13^2*s14 - 1/4*denom(1/4*s12^2)*mt^7*s12*
      s23*s24 - 1/4*denom(1/4*s12^2)*mt^7*s12*s23^2 - 1/4*denom(1/4*s12^2)*
      mt^7*s12*s14*s24 - 5/4*denom(1/4*s12^2)*mt^7*s12*s14*s23 - 1/4*denom(1/4
      *s12^2)*mt^7*s12*s14^2 - 1/2*denom(1/4*s12^2)*mt^7*s12*s13*s24 - denom(1/
      4*s12^2)*mt^7*s12*s13*s23 - denom(1/4*s12^2)*mt^7*s12*s13*s14 - 1/4*
      denom(1/4*s12^2)*mt^7*s12*s13^2 + 1/4*denom(1/4*s12^2)*mt^9*s12*s24 + 3/
      4*denom(1/4*s12^2)*mt^9*s12*s23 + 3/4*denom(1/4*s12^2)*mt^9*s12*s14 + 3/
      4*denom(1/4*s12^2)*mt^9*s12*s13 - 1/2*denom(1/4*s12^2)*mt^11*s12;
 
 .sort
id KMatrix(7,14) =  1/2*mt*s12*s14*s24^2 + mt*s12*s14*s23*s24 + 1/2*mt*s12*s14
      *s23^2 + mt*s12*s14^2*s24 + mt*s12*s14^2*s23 + 1/2*mt*s12*s14^3 + mt*s12
      *s13*s14*s24 + mt*s12*s13*s14*s23 + mt*s12*s13*s14^2 + 1/2*mt*s12*s13^2*
      s14 + mt*s12^2*s14*s24 + mt*s12^2*s14*s23 + mt*s12^2*s14^2 + mt*s12^2*
      s13*s14 + 1/2*mt*s12^3*s14 - mt*mh^2*s12*s14*s24 - mt*mh^2*s12*s14*s23
       - mt*mh^2*s12*s14^2 - mt*mh^2*s12*s13*s14 - mt*mh^2*s12^2*s14 + 1/2*mt*
      mh^4*s12*s14 - 1/2*mt^3*s12*s24^2 - mt^3*s12*s23*s24 - 1/2*mt^3*s12*
      s23^2 - 3*mt^3*s12*s14*s24 - 3*mt^3*s12*s14*s23 - 5/2*mt^3*s12*s14^2 - 
      mt^3*s12*s13*s24 - mt^3*s12*s13*s23 - 3*mt^3*s12*s13*s14 - 1/2*mt^3*s12*
      s13^2 - mt^3*s12^2*s24 - mt^3*s12^2*s23 - 3*mt^3*s12^2*s14 - mt^3*s12^2*
      s13 - 1/2*mt^3*s12^3 + mt^3*mh^2*s12*s24 + mt^3*mh^2*s12*s23 + 3*mt^3*
      mh^2*s12*s14 + mt^3*mh^2*s12*s13 + mt^3*mh^2*s12^2 - 1/2*mt^3*mh^4*s12
       + 2*mt^5*s12*s24 + 2*mt^5*s12*s23 + 4*mt^5*s12*s14 + 2*mt^5*s12*s13 + 2
      *mt^5*s12^2 - 2*mt^5*mh^2*s12 - 2*mt^7*s12 + 1/2*denom(1/2*s12)*mt*s12*
      s14^2*s23*s24 + 1/2*denom(1/2*s12)*mt*s12*s14^2*s23^2 + 1/2*denom(1/2*
      s12)*mt*s12*s14^3*s23 + 1/2*denom(1/2*s12)*mt*s12*s13*s14*s24^2 + 1/2*
      denom(1/2*s12)*mt*s12*s13*s14*s23*s24 + 1/2*denom(1/2*s12)*mt*s12*s13*
      s14^2*s24 + 1/2*denom(1/2*s12)*mt*s12*s13*s14^2*s23 + 1/2*denom(1/2*s12)
      *mt*s12*s13^2*s14*s24 + 1/2*denom(1/2*s12)*mt*s12^2*s14^2*s23 + 1/2*
      denom(1/2*s12)*mt*s12^2*s13*s14*s24 - 1/2*denom(1/2*s12)*mt*mh^2*s12*
      s14^2*s23 - 1/2*denom(1/2*s12)*mt*mh^2*s12*s13*s14*s24 - 1/2*denom(1/2*
      s12)*mt^3*s12*s14*s24^2 - 3/2*denom(1/2*s12)*mt^3*s12*s14*s23*s24 - 
      denom(1/2*s12)*mt^3*s12*s14*s23^2 - denom(1/2*s12)*mt^3*s12*s14^2*s24 - 
      5/2*denom(1/2*s12)*mt^3*s12*s14^2*s23 - 1/2*denom(1/2*s12)*mt^3*s12*
      s14^3 - 1/2*denom(1/2*s12)*mt^3*s12*s13*s24^2 - 1/2*denom(1/2*s12)*mt^3*
      s12*s13*s23*s24 - 5/2*denom(1/2*s12)*mt^3*s12*s13*s14*s24 - 3/2*denom(1/
      2*s12)*mt^3*s12*s13*s14*s23 - denom(1/2*s12)*mt^3*s12*s13*s14^2 - 1/2*
      denom(1/2*s12)*mt^3*s12*s13^2*s24 - 1/2*denom(1/2*s12)*mt^3*s12*s13^2*
      s14 - 1/2*denom(1/2*s12)*mt^3*s12^2*s14*s24 - denom(1/2*s12)*mt^3*s12^2*
      s14*s23 - 1/2*denom(1/2*s12)*mt^3*s12^2*s14^2 - 1/2*denom(1/2*s12)*mt^3*
      s12^2*s13*s24 - 1/2*denom(1/2*s12)*mt^3*s12^2*s13*s14 + 1/2*denom(1/2*
      s12)*mt^3*mh^2*s12*s14*s24 + denom(1/2*s12)*mt^3*mh^2*s12*s14*s23 + 1/2*
      denom(1/2*s12)*mt^3*mh^2*s12*s14^2 + 1/2*denom(1/2*s12)*mt^3*mh^2*s12*
      s13*s24 + 1/2*denom(1/2*s12)*mt^3*mh^2*s12*s13*s14 + 1/2*denom(1/2*s12)*
      mt^5*s12*s24^2 + denom(1/2*s12)*mt^5*s12*s23*s24 + 1/2*denom(1/2*s12)*
      mt^5*s12*s23^2 + 3*denom(1/2*s12)*mt^5*s12*s14*s24 + 4*denom(1/2*s12)*
      mt^5*s12*s14*s23 + 5/2*denom(1/2*s12)*mt^5*s12*s14^2 + 2*denom(1/2*s12)*
      mt^5*s12*s13*s24 + denom(1/2*s12)*mt^5*s12*s13*s23 + 3*denom(1/2*s12)*
      mt^5*s12*s13*s14 + 1/2*denom(1/2*s12)*mt^5*s12*s13^2 + 1/2*denom(1/2*s12
      )*mt^5*s12^2*s24 + 1/2*denom(1/2*s12)*mt^5*s12^2*s23 + 3/2*denom(1/2*s12
      )*mt^5*s12^2*s14 + 1/2*denom(1/2*s12)*mt^5*s12^2*s13 - 1/2*denom(1/2*s12
      )*mt^5*mh^2*s12*s24 - 1/2*denom(1/2*s12)*mt^5*mh^2*s12*s23 - 3/2*denom(1/
      2*s12)*mt^5*mh^2*s12*s14 - 1/2*denom(1/2*s12)*mt^5*mh^2*s12*s13 - 2*
      denom(1/2*s12)*mt^7*s12*s24 - 2*denom(1/2*s12)*mt^7*s12*s23 - 4*denom(1/
      2*s12)*mt^7*s12*s14 - 2*denom(1/2*s12)*mt^7*s12*s13 - denom(1/2*s12)*
      mt^7*s12^2 + denom(1/2*s12)*mt^7*mh^2*s12 + 2*denom(1/2*s12)*mt^9*s12 + 
      1/8*denom(1/4*s12^2)*mt*s12*s14^3*s23^2 + 1/4*denom(1/4*s12^2)*mt*s12*
      s13*s14^2*s23*s24 + 1/8*denom(1/4*s12^2)*mt*s12*s13^2*s14*s24^2 - 1/4*
      denom(1/4*s12^2)*mt^3*s12*s14^2*s23*s24 - 3/8*denom(1/4*s12^2)*mt^3*s12*
      s14^2*s23^2 - 1/4*denom(1/4*s12^2)*mt^3*s12*s14^3*s23 - 1/4*denom(1/4*
      s12^2)*mt^3*s12*s13*s14*s24^2 - 1/2*denom(1/4*s12^2)*mt^3*s12*s13*s14*
      s23*s24 - 1/4*denom(1/4*s12^2)*mt^3*s12*s13*s14^2*s24 - 1/4*denom(1/4*
      s12^2)*mt^3*s12*s13*s14^2*s23 - 1/8*denom(1/4*s12^2)*mt^3*s12*s13^2*
      s24^2 - 1/4*denom(1/4*s12^2)*mt^3*s12*s13^2*s14*s24 + 1/8*denom(1/4*
      s12^2)*mt^5*s12*s14*s24^2 + 1/2*denom(1/4*s12^2)*mt^5*s12*s14*s23*s24 + 
      3/8*denom(1/4*s12^2)*mt^5*s12*s14*s23^2 + 1/4*denom(1/4*s12^2)*mt^5*s12*
      s14^2*s24 + denom(1/4*s12^2)*mt^5*s12*s14^2*s23 + 1/8*denom(1/4*s12^2)*
      mt^5*s12*s14^3 + 1/4*denom(1/4*s12^2)*mt^5*s12*s13*s24^2 + 1/4*denom(1/4
      *s12^2)*mt^5*s12*s13*s23*s24 + denom(1/4*s12^2)*mt^5*s12*s13*s14*s24 + 1/
      2*denom(1/4*s12^2)*mt^5*s12*s13*s14*s23 + 1/4*denom(1/4*s12^2)*mt^5*s12*
      s13*s14^2 + 1/4*denom(1/4*s12^2)*mt^5*s12*s13^2*s24 + 1/8*denom(1/4*
      s12^2)*mt^5*s12*s13^2*s14 - 1/8*denom(1/4*s12^2)*mt^7*s12*s24^2 - 1/4*
      denom(1/4*s12^2)*mt^7*s12*s23*s24 - 1/8*denom(1/4*s12^2)*mt^7*s12*s23^2
       - 3/4*denom(1/4*s12^2)*mt^7*s12*s14*s24 - 5/4*denom(1/4*s12^2)*mt^7*s12
      *s14*s23 - 5/8*denom(1/4*s12^2)*mt^7*s12*s14^2 - 3/4*denom(1/4*s12^2)*
      mt^7*s12*s13*s24 - 1/4*denom(1/4*s12^2)*mt^7*s12*s13*s23 - 3/4*denom(1/4
      *s12^2)*mt^7*s12*s13*s14 - 1/8*denom(1/4*s12^2)*mt^7*s12*s13^2 + 1/2*
      denom(1/4*s12^2)*mt^9*s12*s24 + 1/2*denom(1/4*s12^2)*mt^9*s12*s23 + 
      denom(1/4*s12^2)*mt^9*s12*s14 + 1/2*denom(1/4*s12^2)*mt^9*s12*s13 - 1/2*
      denom(1/4*s12^2)*mt^11*s12;
 
 .sort
id KMatrix(7,15) =  2*mt^5*s12*s14 - 2*mt^7*s12 - denom(1/2*s12)*mt^3*s12*
      s14^2*s24 - denom(1/2*s12)*mt^3*s12*s13*s14*s23 + 2*denom(1/2*s12)*mt^5*
      s12*s14*s24 + denom(1/2*s12)*mt^5*s12*s14*s23 + denom(1/2*s12)*mt^5*s12*
      s14^2 + denom(1/2*s12)*mt^5*s12*s13*s23 + denom(1/2*s12)*mt^5*s12*s13*
      s14 - denom(1/2*s12)*mt^7*s12*s24 - denom(1/2*s12)*mt^7*s12*s23 - 3*
      denom(1/2*s12)*mt^7*s12*s14 - denom(1/2*s12)*mt^7*s12*s13 + 2*denom(1/2*
      s12)*mt^9*s12 + 1/2*denom(1/4*s12^2)*mt*s12*s13*s14^2*s23*s24 - 1/2*
      denom(1/4*s12^2)*mt^3*s12*s14^2*s23*s24 - denom(1/4*s12^2)*mt^3*s12*s13*
      s14*s23*s24 - 1/2*denom(1/4*s12^2)*mt^3*s12*s13*s14^2*s24 - 1/2*denom(1/
      4*s12^2)*mt^3*s12*s13*s14^2*s23 + denom(1/4*s12^2)*mt^5*s12*s14*s23*s24
       + 1/2*denom(1/4*s12^2)*mt^5*s12*s14^2*s24 + 1/2*denom(1/4*s12^2)*mt^5*
      s12*s14^2*s23 + 1/2*denom(1/4*s12^2)*mt^5*s12*s13*s23*s24 + denom(1/4*
      s12^2)*mt^5*s12*s13*s14*s24 + denom(1/4*s12^2)*mt^5*s12*s13*s14*s23 + 1/
      2*denom(1/4*s12^2)*mt^5*s12*s13*s14^2 - 1/2*denom(1/4*s12^2)*mt^7*s12*
      s23*s24 - denom(1/4*s12^2)*mt^7*s12*s14*s24 - denom(1/4*s12^2)*mt^7*s12*
      s14*s23 - 1/2*denom(1/4*s12^2)*mt^7*s12*s14^2 - 1/2*denom(1/4*s12^2)*
      mt^7*s12*s13*s24 - 1/2*denom(1/4*s12^2)*mt^7*s12*s13*s23 - denom(1/4*
      s12^2)*mt^7*s12*s13*s14 + 1/2*denom(1/4*s12^2)*mt^9*s12*s24 + 1/2*denom(
      1/4*s12^2)*mt^9*s12*s23 + denom(1/4*s12^2)*mt^9*s12*s14 + 1/2*denom(1/4*
      s12^2)*mt^9*s12*s13 - 1/2*denom(1/4*s12^2)*mt^11*s12;
 
 .sort
id KMatrix(7,16) =   - mt^3*s12*s14*s24 - mt^3*s12*s14*s23 - mt^3*s12*s14^2 - 
      mt^3*s12*s13*s14 - mt^3*s12^2*s14 + mt^3*mh^2*s12*s14 + mt^5*s12*s24 + 
      mt^5*s12*s23 + 3*mt^5*s12*s14 + mt^5*s12*s13 + mt^5*s12^2 - mt^5*mh^2*
      s12 - 2*mt^7*s12 + 1/2*denom(1/2*s12)*mt*s12*s14^2*s24^2 + 1/2*denom(1/2
      *s12)*mt*s12*s14^2*s23*s24 + 1/2*denom(1/2*s12)*mt*s12*s14^3*s24 + 1/2*
      denom(1/2*s12)*mt*s12*s13*s14^2*s24 + 1/2*denom(1/2*s12)*mt*s12^2*s14^2*
      s24 - 1/2*denom(1/2*s12)*mt*mh^2*s12*s14^2*s24 - denom(1/2*s12)*mt^3*s12
      *s14*s24^2 - denom(1/2*s12)*mt^3*s12*s14*s23*s24 - 5/2*denom(1/2*s12)*
      mt^3*s12*s14^2*s24 - denom(1/2*s12)*mt^3*s12*s14^2*s23 - 1/2*denom(1/2*
      s12)*mt^3*s12*s14^3 - 3/2*denom(1/2*s12)*mt^3*s12*s13*s14*s24 - 1/2*
      denom(1/2*s12)*mt^3*s12*s13*s14^2 - denom(1/2*s12)*mt^3*s12^2*s14*s24 - 
      1/2*denom(1/2*s12)*mt^3*s12^2*s14^2 + denom(1/2*s12)*mt^3*mh^2*s12*s14*
      s24 + 1/2*denom(1/2*s12)*mt^3*mh^2*s12*s14^2 + 1/2*denom(1/2*s12)*mt^5*
      s12*s24^2 + 1/2*denom(1/2*s12)*mt^5*s12*s23*s24 + 4*denom(1/2*s12)*mt^5*
      s12*s14*s24 + 2*denom(1/2*s12)*mt^5*s12*s14*s23 + 5/2*denom(1/2*s12)*
      mt^5*s12*s14^2 + denom(1/2*s12)*mt^5*s12*s13*s24 + 3/2*denom(1/2*s12)*
      mt^5*s12*s13*s14 + 1/2*denom(1/2*s12)*mt^5*s12^2*s24 + denom(1/2*s12)*
      mt^5*s12^2*s14 - 1/2*denom(1/2*s12)*mt^5*mh^2*s12*s24 - denom(1/2*s12)*
      mt^5*mh^2*s12*s14 - 2*denom(1/2*s12)*mt^7*s12*s24 - denom(1/2*s12)*mt^7*
      s12*s23 - 4*denom(1/2*s12)*mt^7*s12*s14 - denom(1/2*s12)*mt^7*s12*s13 - 
      1/2*denom(1/2*s12)*mt^7*s12^2 + 1/2*denom(1/2*s12)*mt^7*mh^2*s12 + 2*
      denom(1/2*s12)*mt^9*s12 + 1/4*denom(1/4*s12^2)*mt*s12*s14^3*s23*s24 + 1/
      4*denom(1/4*s12^2)*mt*s12*s13*s14^2*s24^2 - 1/4*denom(1/4*s12^2)*mt^3*
      s12*s14^2*s24^2 - 3/4*denom(1/4*s12^2)*mt^3*s12*s14^2*s23*s24 - 1/4*
      denom(1/4*s12^2)*mt^3*s12*s14^3*s24 - 1/4*denom(1/4*s12^2)*mt^3*s12*
      s14^3*s23 - 1/2*denom(1/4*s12^2)*mt^3*s12*s13*s14*s24^2 - 1/2*denom(1/4*
      s12^2)*mt^3*s12*s13*s14^2*s24 + 1/2*denom(1/4*s12^2)*mt^5*s12*s14*s24^2
       + 3/4*denom(1/4*s12^2)*mt^5*s12*s14*s23*s24 + 5/4*denom(1/4*s12^2)*mt^5
      *s12*s14^2*s24 + 3/4*denom(1/4*s12^2)*mt^5*s12*s14^2*s23 + 1/4*denom(1/4
      *s12^2)*mt^5*s12*s14^3 + 1/4*denom(1/4*s12^2)*mt^5*s12*s13*s24^2 + 
      denom(1/4*s12^2)*mt^5*s12*s13*s14*s24 + 1/4*denom(1/4*s12^2)*mt^5*s12*
      s13*s14^2 - 1/4*denom(1/4*s12^2)*mt^7*s12*s24^2 - 1/4*denom(1/4*s12^2)*
      mt^7*s12*s23*s24 - 7/4*denom(1/4*s12^2)*mt^7*s12*s14*s24 - 3/4*denom(1/4
      *s12^2)*mt^7*s12*s14*s23 - denom(1/4*s12^2)*mt^7*s12*s14^2 - 1/2*denom(1/
      4*s12^2)*mt^7*s12*s13*s24 - 1/2*denom(1/4*s12^2)*mt^7*s12*s13*s14 + 3/4*
      denom(1/4*s12^2)*mt^9*s12*s24 + 1/4*denom(1/4*s12^2)*mt^9*s12*s23 + 5/4*
      denom(1/4*s12^2)*mt^9*s12*s14 + 1/4*denom(1/4*s12^2)*mt^9*s12*s13 - 1/2*
      denom(1/4*s12^2)*mt^11*s12;
 
 .sort
id KMatrix(7,17) =   - mt*s14*s24 - mt*s14*s23 - mt*s14^2 + mt*s13*s24 + mt*
      s13*s23 + mt*s13^2 - mt*s12*s14 + mt*s12*s13 + mt*mh^2*s14 - mt*mh^2*s13
       + 2*mt^3*s14 - 2*mt^3*s13 - denom(1/2*s12)*mt*s14^2*s23 - denom(1/2*s12
      )*mt*s13*s14*s24 + denom(1/2*s12)*mt*s13*s14*s23 + denom(1/2*s12)*mt*
      s13^2*s24 + denom(1/2*s12)*mt^3*s14*s24 + denom(1/2*s12)*mt^3*s14*s23 + 
      denom(1/2*s12)*mt^3*s14^2 - denom(1/2*s12)*mt^3*s13*s24 - denom(1/2*s12)
      *mt^3*s13*s23 - denom(1/2*s12)*mt^3*s13^2 - 2*denom(1/2*s12)*mt^5*s14 + 
      2*denom(1/2*s12)*mt^5*s13 + 1/4*denom(1/4*s12^2)*mt*s12*s14^2*s23 + 1/4*
      denom(1/4*s12^2)*mt*s12*s13*s14*s24 - 1/4*denom(1/4*s12^2)*mt*s12*s13*
      s14*s23 - 1/4*denom(1/4*s12^2)*mt*s12*s13^2*s24 - 1/4*denom(1/4*s12^2)*
      mt^3*s12*s14*s24 - 1/4*denom(1/4*s12^2)*mt^3*s12*s14*s23 - 1/4*denom(1/4
      *s12^2)*mt^3*s12*s14^2 + 1/4*denom(1/4*s12^2)*mt^3*s12*s13*s24 + 1/4*
      denom(1/4*s12^2)*mt^3*s12*s13*s23 + 1/4*denom(1/4*s12^2)*mt^3*s12*s13^2
       + 1/2*denom(1/4*s12^2)*mt^5*s12*s14 - 1/2*denom(1/4*s12^2)*mt^5*s12*s13
      ;
 
 .sort
id KMatrix(7,18) =   - s13*s14*s24 - s13*s14*s23 - s13*s14^2 - s13^2*s14 - s12
      *s13*s14 + mh^2*s13*s14 + mt^2*s14*s24 + mt^2*s14*s23 + mt^2*s14^2 + 
      mt^2*s13*s24 + mt^2*s13*s23 + 4*mt^2*s13*s14 + mt^2*s13^2 + mt^2*s12*s14
       + mt^2*s12*s13 - mt^2*mh^2*s14 - mt^2*mh^2*s13 - mt^4*s24 - mt^4*s23 - 
      3*mt^4*s14 - 3*mt^4*s13 - mt^4*s12 + mt^4*mh^2 + 2*mt^6 - denom(1/2*s12)
      *s13*s14^2*s23 - denom(1/2*s12)*s13^2*s14*s24 + denom(1/2*s12)*mt^2*
      s14^2*s23 + 2*denom(1/2*s12)*mt^2*s13*s14*s24 + 2*denom(1/2*s12)*mt^2*
      s13*s14*s23 + denom(1/2*s12)*mt^2*s13*s14^2 + denom(1/2*s12)*mt^2*s13^2*
      s24 + denom(1/2*s12)*mt^2*s13^2*s14 - denom(1/2*s12)*mt^4*s14*s24 - 2*
      denom(1/2*s12)*mt^4*s14*s23 - denom(1/2*s12)*mt^4*s14^2 - 2*denom(1/2*
      s12)*mt^4*s13*s24 - denom(1/2*s12)*mt^4*s13*s23 - 4*denom(1/2*s12)*mt^4*
      s13*s14 - denom(1/2*s12)*mt^4*s13^2 + denom(1/2*s12)*mt^6*s24 + denom(1/
      2*s12)*mt^6*s23 + 3*denom(1/2*s12)*mt^6*s14 + 3*denom(1/2*s12)*mt^6*s13
       - 2*denom(1/2*s12)*mt^8 + 1/4*denom(1/4*s12^2)*s12*s13*s14^2*s23 + 1/4*
      denom(1/4*s12^2)*s12*s13^2*s14*s24 - 1/4*denom(1/4*s12^2)*mt^2*s12*s14^2
      *s23 - 1/2*denom(1/4*s12^2)*mt^2*s12*s13*s14*s24 - 1/2*denom(1/4*s12^2)*
      mt^2*s12*s13*s14*s23 - 1/4*denom(1/4*s12^2)*mt^2*s12*s13*s14^2 - 1/4*
      denom(1/4*s12^2)*mt^2*s12*s13^2*s24 - 1/4*denom(1/4*s12^2)*mt^2*s12*
      s13^2*s14 + 1/4*denom(1/4*s12^2)*mt^4*s12*s14*s24 + 1/2*denom(1/4*s12^2)
      *mt^4*s12*s14*s23 + 1/4*denom(1/4*s12^2)*mt^4*s12*s14^2 + 1/2*denom(1/4*
      s12^2)*mt^4*s12*s13*s24 + 1/4*denom(1/4*s12^2)*mt^4*s12*s13*s23 + denom(
      1/4*s12^2)*mt^4*s12*s13*s14 + 1/4*denom(1/4*s12^2)*mt^4*s12*s13^2 - 1/4*
      denom(1/4*s12^2)*mt^6*s12*s24 - 1/4*denom(1/4*s12^2)*mt^6*s12*s23 - 3/4*
      denom(1/4*s12^2)*mt^6*s12*s14 - 3/4*denom(1/4*s12^2)*mt^6*s12*s13 + 1/2*
      denom(1/4*s12^2)*mt^8*s12;
 
 .sort
id KMatrix(7,19) =   - 1/2*s14*s23*s24 - 1/2*s14*s23^2 - 1/2*s14^2*s23 - 1/2*
      s13*s24^2 - 1/2*s13*s23*s24 - 1/2*s13*s14*s24 - 1/2*s13*s14*s23 - 1/2*
      s13^2*s24 - 1/2*s12*s24^2 - s12*s23*s24 - 1/2*s12*s23^2 - s12*s14*s24 - 
      3/2*s12*s14*s23 - 1/2*s12*s14^2 - 3/2*s12*s13*s24 - s12*s13*s23 - s12*
      s13*s14 - 1/2*s12*s13^2 - s12^2*s24 - s12^2*s23 - s12^2*s14 - s12^2*s13
       - 1/2*s12^3 + 1/2*mh^2*s14*s23 + 1/2*mh^2*s13*s24 + mh^2*s12*s24 + mh^2
      *s12*s23 + mh^2*s12*s14 + mh^2*s12*s13 + mh^2*s12^2 - 1/2*mh^4*s12 + 1/2
      *mt^2*s24^2 + mt^2*s23*s24 + 1/2*mt^2*s23^2 + mt^2*s14*s24 + 2*mt^2*s14*
      s23 + 1/2*mt^2*s14^2 + 2*mt^2*s13*s24 + mt^2*s13*s23 + mt^2*s13*s14 + 1/
      2*mt^2*s13^2 + 7/2*mt^2*s12*s24 + 7/2*mt^2*s12*s23 + 7/2*mt^2*s12*s14 + 
      7/2*mt^2*s12*s13 + 3*mt^2*s12^2 - 1/2*mt^2*mh^2*s24 - 1/2*mt^2*mh^2*s23
       - 1/2*mt^2*mh^2*s14 - 1/2*mt^2*mh^2*s13 - 3*mt^2*mh^2*s12 - 2*mt^4*s24
       - 2*mt^4*s23 - 2*mt^4*s14 - 2*mt^4*s13 - 5*mt^4*s12 + mt^4*mh^2 + 2*
      mt^6 - 1/2*denom(1/2*s12)*s14^2*s23^2 - denom(1/2*s12)*s13*s14*s23*s24
       - 1/2*denom(1/2*s12)*s13^2*s24^2 - 1/2*denom(1/2*s12)*s12*s14*s23*s24
       - 1/2*denom(1/2*s12)*s12*s14*s23^2 - 1/2*denom(1/2*s12)*s12*s14^2*s23
       - 1/2*denom(1/2*s12)*s12*s13*s24^2 - 1/2*denom(1/2*s12)*s12*s13*s23*s24
       - 1/2*denom(1/2*s12)*s12*s13*s14*s24 - 1/2*denom(1/2*s12)*s12*s13*s14*
      s23 - 1/2*denom(1/2*s12)*s12*s13^2*s24 - 1/2*denom(1/2*s12)*s12^2*s14*
      s23 - 1/2*denom(1/2*s12)*s12^2*s13*s24 + 1/2*denom(1/2*s12)*mh^2*s12*s14
      *s23 + 1/2*denom(1/2*s12)*mh^2*s12*s13*s24 + denom(1/2*s12)*mt^2*s14*s23
      *s24 + denom(1/2*s12)*mt^2*s14*s23^2 + denom(1/2*s12)*mt^2*s14^2*s23 + 
      denom(1/2*s12)*mt^2*s13*s24^2 + denom(1/2*s12)*mt^2*s13*s23*s24 + denom(
      1/2*s12)*mt^2*s13*s14*s24 + denom(1/2*s12)*mt^2*s13*s14*s23 + denom(1/2*
      s12)*mt^2*s13^2*s24 + 1/2*denom(1/2*s12)*mt^2*s12*s24^2 + denom(1/2*s12)
      *mt^2*s12*s23*s24 + 1/2*denom(1/2*s12)*mt^2*s12*s23^2 + denom(1/2*s12)*
      mt^2*s12*s14*s24 + 3*denom(1/2*s12)*mt^2*s12*s14*s23 + 1/2*denom(1/2*s12
      )*mt^2*s12*s14^2 + 3*denom(1/2*s12)*mt^2*s12*s13*s24 + denom(1/2*s12)*
      mt^2*s12*s13*s23 + denom(1/2*s12)*mt^2*s12*s13*s14 + 1/2*denom(1/2*s12)*
      mt^2*s12*s13^2 + 1/2*denom(1/2*s12)*mt^2*s12^2*s24 + 1/2*denom(1/2*s12)*
      mt^2*s12^2*s23 + 1/2*denom(1/2*s12)*mt^2*s12^2*s14 + 1/2*denom(1/2*s12)*
      mt^2*s12^2*s13 - 1/2*denom(1/2*s12)*mt^2*mh^2*s12*s24 - 1/2*denom(1/2*
      s12)*mt^2*mh^2*s12*s23 - 1/2*denom(1/2*s12)*mt^2*mh^2*s12*s14 - 1/2*
      denom(1/2*s12)*mt^2*mh^2*s12*s13 - 1/2*denom(1/2*s12)*mt^4*s24^2 - 
      denom(1/2*s12)*mt^4*s23*s24 - 1/2*denom(1/2*s12)*mt^4*s23^2 - denom(1/2*
      s12)*mt^4*s14*s24 - 3*denom(1/2*s12)*mt^4*s14*s23 - 1/2*denom(1/2*s12)*
      mt^4*s14^2 - 3*denom(1/2*s12)*mt^4*s13*s24 - denom(1/2*s12)*mt^4*s13*s23
       - denom(1/2*s12)*mt^4*s13*s14 - 1/2*denom(1/2*s12)*mt^4*s13^2 - 3*
      denom(1/2*s12)*mt^4*s12*s24 - 3*denom(1/2*s12)*mt^4*s12*s23 - 3*denom(1/
      2*s12)*mt^4*s12*s14 - 3*denom(1/2*s12)*mt^4*s12*s13 - denom(1/2*s12)*
      mt^4*s12^2 + denom(1/2*s12)*mt^4*mh^2*s12 + 2*denom(1/2*s12)*mt^6*s24 + 
      2*denom(1/2*s12)*mt^6*s23 + 2*denom(1/2*s12)*mt^6*s14 + 2*denom(1/2*s12)
      *mt^6*s13 + 4*denom(1/2*s12)*mt^6*s12 - 2*denom(1/2*s12)*mt^8 + 1/8*
      denom(1/4*s12^2)*s12*s14^2*s23^2 + 1/4*denom(1/4*s12^2)*s12*s13*s14*s23*
      s24 + 1/8*denom(1/4*s12^2)*s12*s13^2*s24^2 + 1/8*denom(1/4*s12^2)*s12^2*
      s14*s23*s24 + 1/8*denom(1/4*s12^2)*s12^2*s14*s23^2 + 1/8*denom(1/4*s12^2
      )*s12^2*s14^2*s23 + 1/8*denom(1/4*s12^2)*s12^2*s13*s24^2 + 1/8*denom(1/4
      *s12^2)*s12^2*s13*s23*s24 + 1/8*denom(1/4*s12^2)*s12^2*s13*s14*s24 + 1/8
      *denom(1/4*s12^2)*s12^2*s13*s14*s23 + 1/8*denom(1/4*s12^2)*s12^2*s13^2*
      s24 + 1/8*denom(1/4*s12^2)*s12^3*s14*s23 + 1/8*denom(1/4*s12^2)*s12^3*
      s13*s24 - 1/8*denom(1/4*s12^2)*mh^2*s12^2*s14*s23 - 1/8*denom(1/4*s12^2)
      *mh^2*s12^2*s13*s24 - 1/4*denom(1/4*s12^2)*mt^2*s12*s14*s23*s24 - 1/4*
      denom(1/4*s12^2)*mt^2*s12*s14*s23^2 - 1/4*denom(1/4*s12^2)*mt^2*s12*
      s14^2*s23 - 1/4*denom(1/4*s12^2)*mt^2*s12*s13*s24^2 - 1/4*denom(1/4*
      s12^2)*mt^2*s12*s13*s23*s24 - 1/4*denom(1/4*s12^2)*mt^2*s12*s13*s14*s24
       - 1/4*denom(1/4*s12^2)*mt^2*s12*s13*s14*s23 - 1/4*denom(1/4*s12^2)*mt^2
      *s12*s13^2*s24 - 1/8*denom(1/4*s12^2)*mt^2*s12^2*s24^2 - 1/4*denom(1/4*
      s12^2)*mt^2*s12^2*s23*s24 - 1/8*denom(1/4*s12^2)*mt^2*s12^2*s23^2 - 1/4*
      denom(1/4*s12^2)*mt^2*s12^2*s14*s24 - 3/4*denom(1/4*s12^2)*mt^2*s12^2*
      s14*s23 - 1/8*denom(1/4*s12^2)*mt^2*s12^2*s14^2 - 3/4*denom(1/4*s12^2)*
      mt^2*s12^2*s13*s24 - 1/4*denom(1/4*s12^2)*mt^2*s12^2*s13*s23 - 1/4*
      denom(1/4*s12^2)*mt^2*s12^2*s13*s14 - 1/8*denom(1/4*s12^2)*mt^2*s12^2*
      s13^2 - 1/8*denom(1/4*s12^2)*mt^2*s12^3*s24 - 1/8*denom(1/4*s12^2)*mt^2*
      s12^3*s23 - 1/8*denom(1/4*s12^2)*mt^2*s12^3*s14 - 1/8*denom(1/4*s12^2)*
      mt^2*s12^3*s13 + 1/8*denom(1/4*s12^2)*mt^2*mh^2*s12^2*s24 + 1/8*denom(1/
      4*s12^2)*mt^2*mh^2*s12^2*s23 + 1/8*denom(1/4*s12^2)*mt^2*mh^2*s12^2*s14
       + 1/8*denom(1/4*s12^2)*mt^2*mh^2*s12^2*s13 + 1/8*denom(1/4*s12^2)*mt^4*
      s12*s24^2 + 1/4*denom(1/4*s12^2)*mt^4*s12*s23*s24 + 1/8*denom(1/4*s12^2)
      *mt^4*s12*s23^2 + 1/4*denom(1/4*s12^2)*mt^4*s12*s14*s24 + 3/4*denom(1/4*
      s12^2)*mt^4*s12*s14*s23 + 1/8*denom(1/4*s12^2)*mt^4*s12*s14^2 + 3/4*
      denom(1/4*s12^2)*mt^4*s12*s13*s24 + 1/4*denom(1/4*s12^2)*mt^4*s12*s13*
      s23 + 1/4*denom(1/4*s12^2)*mt^4*s12*s13*s14 + 1/8*denom(1/4*s12^2)*mt^4*
      s12*s13^2 + 3/4*denom(1/4*s12^2)*mt^4*s12^2*s24 + 3/4*denom(1/4*s12^2)*
      mt^4*s12^2*s23 + 3/4*denom(1/4*s12^2)*mt^4*s12^2*s14 + 3/4*denom(1/4*
      s12^2)*mt^4*s12^2*s13 + 1/4*denom(1/4*s12^2)*mt^4*s12^3 - 1/4*denom(1/4*
      s12^2)*mt^4*mh^2*s12^2 - 1/2*denom(1/4*s12^2)*mt^6*s12*s24 - 1/2*denom(1/
      4*s12^2)*mt^6*s12*s23 - 1/2*denom(1/4*s12^2)*mt^6*s12*s14 - 1/2*denom(1/
      4*s12^2)*mt^6*s12*s13 - denom(1/4*s12^2)*mt^6*s12^2 + 1/2*denom(1/4*
      s12^2)*mt^8*s12;
 
 .sort
id KMatrix(7,20) =   - mt^2*s14*s24 - mt^2*s14*s23 - mt^2*s14^2 - mt^2*s13*s14
       - mt^2*s12*s14 + mt^2*mh^2*s14 + mt^4*s24 + mt^4*s23 + 3*mt^4*s14 + 3*
      mt^4*s13 + mt^4*s12 - mt^4*mh^2 - 4*mt^6 + 1/2*denom(1/2*s12)*s13*s14*
      s23*s24 + 1/2*denom(1/2*s12)*s13*s14*s23^2 + 1/2*denom(1/2*s12)*s13*
      s14^2*s23 + 1/2*denom(1/2*s12)*s13^2*s14*s23 + 1/2*denom(1/2*s12)*s12*
      s13*s14*s23 - 1/2*denom(1/2*s12)*mh^2*s13*s14*s23 - 1/2*denom(1/2*s12)*
      mt^2*s14*s23*s24 - 1/2*denom(1/2*s12)*mt^2*s14*s23^2 - denom(1/2*s12)*
      mt^2*s14^2*s23 - 1/2*denom(1/2*s12)*mt^2*s13*s23*s24 - 1/2*denom(1/2*s12
      )*mt^2*s13*s23^2 - 2*denom(1/2*s12)*mt^2*s13*s14*s24 - 5/2*denom(1/2*s12
      )*mt^2*s13*s14*s23 - 1/2*denom(1/2*s12)*mt^2*s13*s14^2 - 3/2*denom(1/2*
      s12)*mt^2*s13^2*s23 - 1/2*denom(1/2*s12)*mt^2*s13^2*s14 - 1/2*denom(1/2*
      s12)*mt^2*s12*s14*s23 - 1/2*denom(1/2*s12)*mt^2*s12*s13*s23 - 1/2*denom(
      1/2*s12)*mt^2*s12*s13*s14 + 1/2*denom(1/2*s12)*mt^2*mh^2*s14*s23 + 1/2*
      denom(1/2*s12)*mt^2*mh^2*s13*s23 + 1/2*denom(1/2*s12)*mt^2*mh^2*s13*s14
       + 1/2*denom(1/2*s12)*mt^4*s23*s24 + 1/2*denom(1/2*s12)*mt^4*s23^2 + 2*
      denom(1/2*s12)*mt^4*s14*s24 + 3*denom(1/2*s12)*mt^4*s14*s23 + denom(1/2*
      s12)*mt^4*s14^2 + 2*denom(1/2*s12)*mt^4*s13*s24 + 4*denom(1/2*s12)*mt^4*
      s13*s23 + 7/2*denom(1/2*s12)*mt^4*s13*s14 + 3/2*denom(1/2*s12)*mt^4*
      s13^2 + 1/2*denom(1/2*s12)*mt^4*s12*s23 + 1/2*denom(1/2*s12)*mt^4*s12*
      s14 + 1/2*denom(1/2*s12)*mt^4*s12*s13 - 1/2*denom(1/2*s12)*mt^4*mh^2*s23
       - 1/2*denom(1/2*s12)*mt^4*mh^2*s14 - 1/2*denom(1/2*s12)*mt^4*mh^2*s13
       - 2*denom(1/2*s12)*mt^6*s24 - 3*denom(1/2*s12)*mt^6*s23 - 4*denom(1/2*
      s12)*mt^6*s14 - 5*denom(1/2*s12)*mt^6*s13 - 1/2*denom(1/2*s12)*mt^6*s12
       + 1/2*denom(1/2*s12)*mt^6*mh^2 + 4*denom(1/2*s12)*mt^8 + 1/4*denom(1/4*
      s12^2)*s13*s14^2*s23^2 + 3/4*denom(1/4*s12^2)*s13^2*s14*s23*s24 - 1/4*
      denom(1/4*s12^2)*mt^2*s14^2*s23^2 - 3/2*denom(1/4*s12^2)*mt^2*s13*s14*
      s23*s24 - 1/2*denom(1/4*s12^2)*mt^2*s13*s14*s23^2 - 1/2*denom(1/4*s12^2)
      *mt^2*s13*s14^2*s23 - 3/4*denom(1/4*s12^2)*mt^2*s13^2*s23*s24 - 3/4*
      denom(1/4*s12^2)*mt^2*s13^2*s14*s24 - 3/4*denom(1/4*s12^2)*mt^2*s13^2*
      s14*s23 + 3/4*denom(1/4*s12^2)*mt^4*s14*s23*s24 + 1/2*denom(1/4*s12^2)*
      mt^4*s14*s23^2 + 1/2*denom(1/4*s12^2)*mt^4*s14^2*s23 + 3/2*denom(1/4*
      s12^2)*mt^4*s13*s23*s24 + 1/4*denom(1/4*s12^2)*mt^4*s13*s23^2 + 3/2*
      denom(1/4*s12^2)*mt^4*s13*s14*s24 + 5/2*denom(1/4*s12^2)*mt^4*s13*s14*
      s23 + 1/4*denom(1/4*s12^2)*mt^4*s13*s14^2 + 3/4*denom(1/4*s12^2)*mt^4*
      s13^2*s24 + 3/4*denom(1/4*s12^2)*mt^4*s13^2*s23 + 3/4*denom(1/4*s12^2)*
      mt^4*s13^2*s14 - 3/4*denom(1/4*s12^2)*mt^6*s23*s24 - 1/4*denom(1/4*s12^2
      )*mt^6*s23^2 - 3/4*denom(1/4*s12^2)*mt^6*s14*s24 - 7/4*denom(1/4*s12^2)*
      mt^6*s14*s23 - 1/4*denom(1/4*s12^2)*mt^6*s14^2 - 3/2*denom(1/4*s12^2)*
      mt^6*s13*s24 - 2*denom(1/4*s12^2)*mt^6*s13*s23 - 2*denom(1/4*s12^2)*mt^6
      *s13*s14 - 3/4*denom(1/4*s12^2)*mt^6*s13^2 + 3/4*denom(1/4*s12^2)*mt^8*
      s24 + 5/4*denom(1/4*s12^2)*mt^8*s23 + 5/4*denom(1/4*s12^2)*mt^8*s14 + 7/
      4*denom(1/4*s12^2)*mt^8*s13 - denom(1/4*s12^2)*mt^10;
 
 .sort
id KMatrix(7,21) =  1/2*s14*s24^2 + s14*s23*s24 + 1/2*s14*s23^2 + s14^2*s24 + 
      s14^2*s23 + 1/2*s14^3 + s13*s14*s24 + s13*s14*s23 + s13*s14^2 + 1/2*
      s13^2*s14 + s12*s14*s24 + s12*s14*s23 + s12*s14^2 + s12*s13*s14 + 1/2*
      s12^2*s14 - mh^2*s14*s24 - mh^2*s14*s23 - mh^2*s14^2 - mh^2*s13*s14 - 
      mh^2*s12*s14 + 1/2*mh^4*s14 - 1/2*mt^2*s24^2 - mt^2*s23*s24 - 1/2*mt^2*
      s23^2 - 3*mt^2*s14*s24 - 3*mt^2*s14*s23 - 5/2*mt^2*s14^2 - 2*mt^2*s13*
      s24 - 2*mt^2*s13*s23 - 4*mt^2*s13*s14 - 3/2*mt^2*s13^2 - mt^2*s12*s24 - 
      mt^2*s12*s23 - 3*mt^2*s12*s14 - 2*mt^2*s12*s13 - 1/2*mt^2*s12^2 + mt^2*
      mh^2*s24 + mt^2*mh^2*s23 + 3*mt^2*mh^2*s14 + 2*mt^2*mh^2*s13 + mt^2*mh^2
      *s12 - 1/2*mt^2*mh^4 + 3*mt^4*s24 + 3*mt^4*s23 + 5*mt^4*s14 + 5*mt^4*s13
       + 3*mt^4*s12 - 3*mt^4*mh^2 - 4*mt^6 + 1/2*denom(1/2*s12)*s14^2*s23*s24
       + 1/2*denom(1/2*s12)*s14^2*s23^2 + 1/2*denom(1/2*s12)*s14^3*s23 + 
      denom(1/2*s12)*s13*s14*s24^2 + denom(1/2*s12)*s13*s14*s23*s24 + denom(1/
      2*s12)*s13*s14^2*s24 + 1/2*denom(1/2*s12)*s13*s14^2*s23 + denom(1/2*s12)
      *s13^2*s14*s24 + 1/2*denom(1/2*s12)*s12*s14^2*s23 + denom(1/2*s12)*s12*
      s13*s14*s24 - 1/2*denom(1/2*s12)*mh^2*s14^2*s23 - denom(1/2*s12)*mh^2*
      s13*s14*s24 - denom(1/2*s12)*mt^2*s14*s24^2 - 2*denom(1/2*s12)*mt^2*s14*
      s23*s24 - denom(1/2*s12)*mt^2*s14*s23^2 - 3/2*denom(1/2*s12)*mt^2*s14^2*
      s24 - 5/2*denom(1/2*s12)*mt^2*s14^2*s23 - 1/2*denom(1/2*s12)*mt^2*s14^3
       - denom(1/2*s12)*mt^2*s13*s24^2 - denom(1/2*s12)*mt^2*s13*s23*s24 - 5*
      denom(1/2*s12)*mt^2*s13*s14*s24 - 5/2*denom(1/2*s12)*mt^2*s13*s14*s23 - 
      3/2*denom(1/2*s12)*mt^2*s13*s14^2 - 3/2*denom(1/2*s12)*mt^2*s13^2*s24 - 
      denom(1/2*s12)*mt^2*s13^2*s14 - denom(1/2*s12)*mt^2*s12*s14*s24 - denom(
      1/2*s12)*mt^2*s12*s14*s23 - 1/2*denom(1/2*s12)*mt^2*s12*s14^2 - denom(1/
      2*s12)*mt^2*s12*s13*s24 - denom(1/2*s12)*mt^2*s12*s13*s14 + denom(1/2*
      s12)*mt^2*mh^2*s14*s24 + denom(1/2*s12)*mt^2*mh^2*s14*s23 + 1/2*denom(1/
      2*s12)*mt^2*mh^2*s14^2 + denom(1/2*s12)*mt^2*mh^2*s13*s24 + denom(1/2*
      s12)*mt^2*mh^2*s13*s14 + denom(1/2*s12)*mt^4*s24^2 + 3/2*denom(1/2*s12)*
      mt^4*s23*s24 + 1/2*denom(1/2*s12)*mt^4*s23^2 + 5*denom(1/2*s12)*mt^4*s14
      *s24 + 5*denom(1/2*s12)*mt^4*s14*s23 + 3*denom(1/2*s12)*mt^4*s14^2 + 5*
      denom(1/2*s12)*mt^4*s13*s24 + 2*denom(1/2*s12)*mt^4*s13*s23 + 11/2*
      denom(1/2*s12)*mt^4*s13*s14 + 3/2*denom(1/2*s12)*mt^4*s13^2 + denom(1/2*
      s12)*mt^4*s12*s24 + 1/2*denom(1/2*s12)*mt^4*s12*s23 + 2*denom(1/2*s12)*
      mt^4*s12*s14 + denom(1/2*s12)*mt^4*s12*s13 - denom(1/2*s12)*mt^4*mh^2*
      s24 - 1/2*denom(1/2*s12)*mt^4*mh^2*s23 - 2*denom(1/2*s12)*mt^4*mh^2*s14
       - denom(1/2*s12)*mt^4*mh^2*s13 - 4*denom(1/2*s12)*mt^6*s24 - 3*denom(1/
      2*s12)*mt^6*s23 - 6*denom(1/2*s12)*mt^6*s14 - 5*denom(1/2*s12)*mt^6*s13
       - 3/2*denom(1/2*s12)*mt^6*s12 + 3/2*denom(1/2*s12)*mt^6*mh^2 + 4*denom(
      1/2*s12)*mt^8 + 1/8*denom(1/4*s12^2)*s14^3*s23^2 + 1/2*denom(1/4*s12^2)*
      s13*s14^2*s23*s24 + 3/8*denom(1/4*s12^2)*s13^2*s14*s24^2 - 1/2*denom(1/4
      *s12^2)*mt^2*s14^2*s23*s24 - 3/8*denom(1/4*s12^2)*mt^2*s14^2*s23^2 - 1/4
      *denom(1/4*s12^2)*mt^2*s14^3*s23 - 3/4*denom(1/4*s12^2)*mt^2*s13*s14*
      s24^2 - denom(1/4*s12^2)*mt^2*s13*s14*s23*s24 - 1/2*denom(1/4*s12^2)*
      mt^2*s13*s14^2*s24 - 1/2*denom(1/4*s12^2)*mt^2*s13*s14^2*s23 - 3/8*
      denom(1/4*s12^2)*mt^2*s13^2*s24^2 - 3/4*denom(1/4*s12^2)*mt^2*s13^2*s14*
      s24 + 3/8*denom(1/4*s12^2)*mt^4*s14*s24^2 + denom(1/4*s12^2)*mt^4*s14*
      s23*s24 + 3/8*denom(1/4*s12^2)*mt^4*s14*s23^2 + 1/2*denom(1/4*s12^2)*
      mt^4*s14^2*s24 + 5/4*denom(1/4*s12^2)*mt^4*s14^2*s23 + 1/8*denom(1/4*
      s12^2)*mt^4*s14^3 + 3/4*denom(1/4*s12^2)*mt^4*s13*s24^2 + 1/2*denom(1/4*
      s12^2)*mt^4*s13*s23*s24 + 5/2*denom(1/4*s12^2)*mt^4*s13*s14*s24 + denom(
      1/4*s12^2)*mt^4*s13*s14*s23 + 1/2*denom(1/4*s12^2)*mt^4*s13*s14^2 + 3/4*
      denom(1/4*s12^2)*mt^4*s13^2*s24 + 3/8*denom(1/4*s12^2)*mt^4*s13^2*s14 - 
      3/8*denom(1/4*s12^2)*mt^6*s24^2 - 1/2*denom(1/4*s12^2)*mt^6*s23*s24 - 1/
      8*denom(1/4*s12^2)*mt^6*s23^2 - 7/4*denom(1/4*s12^2)*mt^6*s14*s24 - 7/4*
      denom(1/4*s12^2)*mt^6*s14*s23 - 7/8*denom(1/4*s12^2)*mt^6*s14^2 - 2*
      denom(1/4*s12^2)*mt^6*s13*s24 - 1/2*denom(1/4*s12^2)*mt^6*s13*s23 - 7/4*
      denom(1/4*s12^2)*mt^6*s13*s14 - 3/8*denom(1/4*s12^2)*mt^6*s13^2 + 5/4*
      denom(1/4*s12^2)*mt^8*s24 + 3/4*denom(1/4*s12^2)*mt^8*s23 + 7/4*denom(1/
      4*s12^2)*mt^8*s14 + 5/4*denom(1/4*s12^2)*mt^8*s13 - denom(1/4*s12^2)*
      mt^10;
 
 .sort
id KMatrix(7,22) =  1/2*s13*s24^2 + s13*s23*s24 + 1/2*s13*s23^2 + s13*s14*s24
       + s13*s14*s23 + 1/2*s13*s14^2 + s13^2*s24 + s13^2*s23 + s13^2*s14 + 1/2
      *s13^3 + s12*s13*s24 + s12*s13*s23 + s12*s13*s14 + s12*s13^2 + 1/2*s12^2
      *s13 - mh^2*s13*s24 - mh^2*s13*s23 - mh^2*s13*s14 - mh^2*s13^2 - mh^2*
      s12*s13 + 1/2*mh^4*s13 - 1/2*mt^2*s24^2 - mt^2*s23*s24 - 1/2*mt^2*s23^2
       - 2*mt^2*s14*s24 - 2*mt^2*s14*s23 - 3/2*mt^2*s14^2 - 3*mt^2*s13*s24 - 3
      *mt^2*s13*s23 - 4*mt^2*s13*s14 - 5/2*mt^2*s13^2 - mt^2*s12*s24 - mt^2*
      s12*s23 - 2*mt^2*s12*s14 - 3*mt^2*s12*s13 - 1/2*mt^2*s12^2 + mt^2*mh^2*
      s24 + mt^2*mh^2*s23 + 2*mt^2*mh^2*s14 + 3*mt^2*mh^2*s13 + mt^2*mh^2*s12
       - 1/2*mt^2*mh^4 + 3*mt^4*s24 + 3*mt^4*s23 + 5*mt^4*s14 + 5*mt^4*s13 + 3
      *mt^4*s12 - 3*mt^4*mh^2 - 4*mt^6 + denom(1/2*s12)*s13*s14*s23*s24 + 
      denom(1/2*s12)*s13*s14*s23^2 + denom(1/2*s12)*s13*s14^2*s23 + 1/2*denom(
      1/2*s12)*s13^2*s24^2 + 1/2*denom(1/2*s12)*s13^2*s23*s24 + 1/2*denom(1/2*
      s12)*s13^2*s14*s24 + denom(1/2*s12)*s13^2*s14*s23 + 1/2*denom(1/2*s12)*
      s13^3*s24 + denom(1/2*s12)*s12*s13*s14*s23 + 1/2*denom(1/2*s12)*s12*
      s13^2*s24 - denom(1/2*s12)*mh^2*s13*s14*s23 - 1/2*denom(1/2*s12)*mh^2*
      s13^2*s24 - denom(1/2*s12)*mt^2*s14*s23*s24 - denom(1/2*s12)*mt^2*s14*
      s23^2 - 3/2*denom(1/2*s12)*mt^2*s14^2*s23 - denom(1/2*s12)*mt^2*s13*
      s24^2 - 2*denom(1/2*s12)*mt^2*s13*s23*s24 - denom(1/2*s12)*mt^2*s13*
      s23^2 - 5/2*denom(1/2*s12)*mt^2*s13*s14*s24 - 5*denom(1/2*s12)*mt^2*s13*
      s14*s23 - denom(1/2*s12)*mt^2*s13*s14^2 - 5/2*denom(1/2*s12)*mt^2*s13^2*
      s24 - 3/2*denom(1/2*s12)*mt^2*s13^2*s23 - 3/2*denom(1/2*s12)*mt^2*s13^2*
      s14 - 1/2*denom(1/2*s12)*mt^2*s13^3 - denom(1/2*s12)*mt^2*s12*s14*s23 - 
      denom(1/2*s12)*mt^2*s12*s13*s24 - denom(1/2*s12)*mt^2*s12*s13*s23 - 
      denom(1/2*s12)*mt^2*s12*s13*s14 - 1/2*denom(1/2*s12)*mt^2*s12*s13^2 + 
      denom(1/2*s12)*mt^2*mh^2*s14*s23 + denom(1/2*s12)*mt^2*mh^2*s13*s24 + 
      denom(1/2*s12)*mt^2*mh^2*s13*s23 + denom(1/2*s12)*mt^2*mh^2*s13*s14 + 1/
      2*denom(1/2*s12)*mt^2*mh^2*s13^2 + 1/2*denom(1/2*s12)*mt^4*s24^2 + 3/2*
      denom(1/2*s12)*mt^4*s23*s24 + denom(1/2*s12)*mt^4*s23^2 + 2*denom(1/2*
      s12)*mt^4*s14*s24 + 5*denom(1/2*s12)*mt^4*s14*s23 + 3/2*denom(1/2*s12)*
      mt^4*s14^2 + 5*denom(1/2*s12)*mt^4*s13*s24 + 5*denom(1/2*s12)*mt^4*s13*
      s23 + 11/2*denom(1/2*s12)*mt^4*s13*s14 + 3*denom(1/2*s12)*mt^4*s13^2 + 1/
      2*denom(1/2*s12)*mt^4*s12*s24 + denom(1/2*s12)*mt^4*s12*s23 + denom(1/2*
      s12)*mt^4*s12*s14 + 2*denom(1/2*s12)*mt^4*s12*s13 - 1/2*denom(1/2*s12)*
      mt^4*mh^2*s24 - denom(1/2*s12)*mt^4*mh^2*s23 - denom(1/2*s12)*mt^4*mh^2*
      s14 - 2*denom(1/2*s12)*mt^4*mh^2*s13 - 3*denom(1/2*s12)*mt^6*s24 - 4*
      denom(1/2*s12)*mt^6*s23 - 5*denom(1/2*s12)*mt^6*s14 - 6*denom(1/2*s12)*
      mt^6*s13 - 3/2*denom(1/2*s12)*mt^6*s12 + 3/2*denom(1/2*s12)*mt^6*mh^2 + 
      4*denom(1/2*s12)*mt^8 + 3/8*denom(1/4*s12^2)*s13*s14^2*s23^2 + 1/2*
      denom(1/4*s12^2)*s13^2*s14*s23*s24 + 1/8*denom(1/4*s12^2)*s13^3*s24^2 - 
      3/8*denom(1/4*s12^2)*mt^2*s14^2*s23^2 - denom(1/4*s12^2)*mt^2*s13*s14*
      s23*s24 - 3/4*denom(1/4*s12^2)*mt^2*s13*s14*s23^2 - 3/4*denom(1/4*s12^2)
      *mt^2*s13*s14^2*s23 - 3/8*denom(1/4*s12^2)*mt^2*s13^2*s24^2 - 1/2*denom(
      1/4*s12^2)*mt^2*s13^2*s23*s24 - 1/2*denom(1/4*s12^2)*mt^2*s13^2*s14*s24
       - 1/2*denom(1/4*s12^2)*mt^2*s13^2*s14*s23 - 1/4*denom(1/4*s12^2)*mt^2*
      s13^3*s24 + 1/2*denom(1/4*s12^2)*mt^4*s14*s23*s24 + 3/4*denom(1/4*s12^2)
      *mt^4*s14*s23^2 + 3/4*denom(1/4*s12^2)*mt^4*s14^2*s23 + 3/8*denom(1/4*
      s12^2)*mt^4*s13*s24^2 + denom(1/4*s12^2)*mt^4*s13*s23*s24 + 3/8*denom(1/
      4*s12^2)*mt^4*s13*s23^2 + denom(1/4*s12^2)*mt^4*s13*s14*s24 + 5/2*denom(
      1/4*s12^2)*mt^4*s13*s14*s23 + 3/8*denom(1/4*s12^2)*mt^4*s13*s14^2 + 5/4*
      denom(1/4*s12^2)*mt^4*s13^2*s24 + 1/2*denom(1/4*s12^2)*mt^4*s13^2*s23 + 
      1/2*denom(1/4*s12^2)*mt^4*s13^2*s14 + 1/8*denom(1/4*s12^2)*mt^4*s13^3 - 
      1/8*denom(1/4*s12^2)*mt^6*s24^2 - 1/2*denom(1/4*s12^2)*mt^6*s23*s24 - 3/
      8*denom(1/4*s12^2)*mt^6*s23^2 - 1/2*denom(1/4*s12^2)*mt^6*s14*s24 - 2*
      denom(1/4*s12^2)*mt^6*s14*s23 - 3/8*denom(1/4*s12^2)*mt^6*s14^2 - 7/4*
      denom(1/4*s12^2)*mt^6*s13*s24 - 7/4*denom(1/4*s12^2)*mt^6*s13*s23 - 7/4*
      denom(1/4*s12^2)*mt^6*s13*s14 - 7/8*denom(1/4*s12^2)*mt^6*s13^2 + 3/4*
      denom(1/4*s12^2)*mt^8*s24 + 5/4*denom(1/4*s12^2)*mt^8*s23 + 5/4*denom(1/
      4*s12^2)*mt^8*s14 + 7/4*denom(1/4*s12^2)*mt^8*s13 - denom(1/4*s12^2)*
      mt^10;
 
 .sort
id KMatrix(7,23) =   - mt^2*s13*s24 - mt^2*s13*s23 - mt^2*s13*s14 - mt^2*s13^2
       - mt^2*s12*s13 + mt^2*mh^2*s13 + mt^4*s24 + mt^4*s23 + 3*mt^4*s14 + 3*
      mt^4*s13 + mt^4*s12 - mt^4*mh^2 - 4*mt^6 + 1/2*denom(1/2*s12)*s13*s14*
      s24^2 + 1/2*denom(1/2*s12)*s13*s14*s23*s24 + 1/2*denom(1/2*s12)*s13*
      s14^2*s24 + 1/2*denom(1/2*s12)*s13^2*s14*s24 + 1/2*denom(1/2*s12)*s12*
      s13*s14*s24 - 1/2*denom(1/2*s12)*mh^2*s13*s14*s24 - 1/2*denom(1/2*s12)*
      mt^2*s14*s24^2 - 1/2*denom(1/2*s12)*mt^2*s14*s23*s24 - 3/2*denom(1/2*s12
      )*mt^2*s14^2*s24 - 1/2*denom(1/2*s12)*mt^2*s13*s24^2 - 1/2*denom(1/2*s12
      )*mt^2*s13*s23*s24 - 5/2*denom(1/2*s12)*mt^2*s13*s14*s24 - 2*denom(1/2*
      s12)*mt^2*s13*s14*s23 - 1/2*denom(1/2*s12)*mt^2*s13*s14^2 - denom(1/2*
      s12)*mt^2*s13^2*s24 - 1/2*denom(1/2*s12)*mt^2*s13^2*s14 - 1/2*denom(1/2*
      s12)*mt^2*s12*s14*s24 - 1/2*denom(1/2*s12)*mt^2*s12*s13*s24 - 1/2*denom(
      1/2*s12)*mt^2*s12*s13*s14 + 1/2*denom(1/2*s12)*mt^2*mh^2*s14*s24 + 1/2*
      denom(1/2*s12)*mt^2*mh^2*s13*s24 + 1/2*denom(1/2*s12)*mt^2*mh^2*s13*s14
       + 1/2*denom(1/2*s12)*mt^4*s24^2 + 1/2*denom(1/2*s12)*mt^4*s23*s24 + 4*
      denom(1/2*s12)*mt^4*s14*s24 + 2*denom(1/2*s12)*mt^4*s14*s23 + 3/2*denom(
      1/2*s12)*mt^4*s14^2 + 3*denom(1/2*s12)*mt^4*s13*s24 + 2*denom(1/2*s12)*
      mt^4*s13*s23 + 7/2*denom(1/2*s12)*mt^4*s13*s14 + denom(1/2*s12)*mt^4*
      s13^2 + 1/2*denom(1/2*s12)*mt^4*s12*s24 + 1/2*denom(1/2*s12)*mt^4*s12*
      s14 + 1/2*denom(1/2*s12)*mt^4*s12*s13 - 1/2*denom(1/2*s12)*mt^4*mh^2*s24
       - 1/2*denom(1/2*s12)*mt^4*mh^2*s14 - 1/2*denom(1/2*s12)*mt^4*mh^2*s13
       - 3*denom(1/2*s12)*mt^6*s24 - 2*denom(1/2*s12)*mt^6*s23 - 5*denom(1/2*
      s12)*mt^6*s14 - 4*denom(1/2*s12)*mt^6*s13 - 1/2*denom(1/2*s12)*mt^6*s12
       + 1/2*denom(1/2*s12)*mt^6*mh^2 + 4*denom(1/2*s12)*mt^8 + 3/4*denom(1/4*
      s12^2)*s13*s14^2*s23*s24 + 1/4*denom(1/4*s12^2)*s13^2*s14*s24^2 - 3/4*
      denom(1/4*s12^2)*mt^2*s14^2*s23*s24 - 1/2*denom(1/4*s12^2)*mt^2*s13*s14*
      s24^2 - 3/2*denom(1/4*s12^2)*mt^2*s13*s14*s23*s24 - 3/4*denom(1/4*s12^2)
      *mt^2*s13*s14^2*s24 - 3/4*denom(1/4*s12^2)*mt^2*s13*s14^2*s23 - 1/4*
      denom(1/4*s12^2)*mt^2*s13^2*s24^2 - 1/2*denom(1/4*s12^2)*mt^2*s13^2*s14*
      s24 + 1/4*denom(1/4*s12^2)*mt^4*s14*s24^2 + 3/2*denom(1/4*s12^2)*mt^4*
      s14*s23*s24 + 3/4*denom(1/4*s12^2)*mt^4*s14^2*s24 + 3/4*denom(1/4*s12^2)
      *mt^4*s14^2*s23 + 1/2*denom(1/4*s12^2)*mt^4*s13*s24^2 + 3/4*denom(1/4*
      s12^2)*mt^4*s13*s23*s24 + 5/2*denom(1/4*s12^2)*mt^4*s13*s14*s24 + 3/2*
      denom(1/4*s12^2)*mt^4*s13*s14*s23 + 3/4*denom(1/4*s12^2)*mt^4*s13*s14^2
       + 1/2*denom(1/4*s12^2)*mt^4*s13^2*s24 + 1/4*denom(1/4*s12^2)*mt^4*s13^2
      *s14 - 1/4*denom(1/4*s12^2)*mt^6*s24^2 - 3/4*denom(1/4*s12^2)*mt^6*s23*
      s24 - 2*denom(1/4*s12^2)*mt^6*s14*s24 - 3/2*denom(1/4*s12^2)*mt^6*s14*
      s23 - 3/4*denom(1/4*s12^2)*mt^6*s14^2 - 7/4*denom(1/4*s12^2)*mt^6*s13*
      s24 - 3/4*denom(1/4*s12^2)*mt^6*s13*s23 - 2*denom(1/4*s12^2)*mt^6*s13*
      s14 - 1/4*denom(1/4*s12^2)*mt^6*s13^2 + 5/4*denom(1/4*s12^2)*mt^8*s24 + 
      3/4*denom(1/4*s12^2)*mt^8*s23 + 7/4*denom(1/4*s12^2)*mt^8*s14 + 5/4*
      denom(1/4*s12^2)*mt^8*s13 - denom(1/4*s12^2)*mt^10;
 
 .sort
id KMatrix(7,24) =   - mt*s12*s14*s24 - mt*s12*s14*s23 - mt*s12*s14^2 - mt*s12
      *s13*s14 - mt*s12^2*s14 + mt*mh^2*s12*s14 + mt^3*s12*s24 + mt^3*s12*s23
       + 3*mt^3*s12*s14 + mt^3*s12*s13 + mt^3*s12^2 - mt^3*mh^2*s12 - 2*mt^5*
      s12 - denom(1/2*s12)*mt*s12*s14^2*s23 - denom(1/2*s12)*mt*s12*s13*s14*
      s24 + denom(1/2*s12)*mt^3*s12*s14*s24 + 2*denom(1/2*s12)*mt^3*s12*s14*
      s23 + denom(1/2*s12)*mt^3*s12*s14^2 + denom(1/2*s12)*mt^3*s12*s13*s24 + 
      denom(1/2*s12)*mt^3*s12*s13*s14 - denom(1/2*s12)*mt^5*s12*s24 - denom(1/
      2*s12)*mt^5*s12*s23 - 3*denom(1/2*s12)*mt^5*s12*s14 - denom(1/2*s12)*
      mt^5*s12*s13 + 2*denom(1/2*s12)*mt^7*s12 + 1/4*denom(1/4*s12^2)*mt*s12^2
      *s14^2*s23 + 1/4*denom(1/4*s12^2)*mt*s12^2*s13*s14*s24 - 1/4*denom(1/4*
      s12^2)*mt^3*s12^2*s14*s24 - 1/2*denom(1/4*s12^2)*mt^3*s12^2*s14*s23 - 1/
      4*denom(1/4*s12^2)*mt^3*s12^2*s14^2 - 1/4*denom(1/4*s12^2)*mt^3*s12^2*
      s13*s24 - 1/4*denom(1/4*s12^2)*mt^3*s12^2*s13*s14 + 1/4*denom(1/4*s12^2)
      *mt^5*s12^2*s24 + 1/4*denom(1/4*s12^2)*mt^5*s12^2*s23 + 3/4*denom(1/4*
      s12^2)*mt^5*s12^2*s14 + 1/4*denom(1/4*s12^2)*mt^5*s12^2*s13 - 1/2*denom(
      1/4*s12^2)*mt^7*s12^2;
 
 .sort
id KMatrix(7,25) =   - mt*s14*s24 - mt*s14*s23 - mt*s14^2 + mt*s13*s24 + mt*
      s13*s23 + mt*s13^2 - mt*s12*s14 + mt*s12*s13 + mt*mh^2*s14 - mt*mh^2*s13
       + 2*mt^3*s14 - 2*mt^3*s13 - denom(1/2*s12)*mt*s14^2*s23 - denom(1/2*s12
      )*mt*s13*s14*s24 + denom(1/2*s12)*mt*s13*s14*s23 + denom(1/2*s12)*mt*
      s13^2*s24 + denom(1/2*s12)*mt^3*s14*s24 + denom(1/2*s12)*mt^3*s14*s23 + 
      denom(1/2*s12)*mt^3*s14^2 - denom(1/2*s12)*mt^3*s13*s24 - denom(1/2*s12)
      *mt^3*s13*s23 - denom(1/2*s12)*mt^3*s13^2 - 2*denom(1/2*s12)*mt^5*s14 + 
      2*denom(1/2*s12)*mt^5*s13 + 1/4*denom(1/4*s12^2)*mt*s12*s14^2*s23 + 1/4*
      denom(1/4*s12^2)*mt*s12*s13*s14*s24 - 1/4*denom(1/4*s12^2)*mt*s12*s13*
      s14*s23 - 1/4*denom(1/4*s12^2)*mt*s12*s13^2*s24 - 1/4*denom(1/4*s12^2)*
      mt^3*s12*s14*s24 - 1/4*denom(1/4*s12^2)*mt^3*s12*s14*s23 - 1/4*denom(1/4
      *s12^2)*mt^3*s12*s14^2 + 1/4*denom(1/4*s12^2)*mt^3*s12*s13*s24 + 1/4*
      denom(1/4*s12^2)*mt^3*s12*s13*s23 + 1/4*denom(1/4*s12^2)*mt^3*s12*s13^2
       + 1/2*denom(1/4*s12^2)*mt^5*s12*s14 - 1/2*denom(1/4*s12^2)*mt^5*s12*s13
      ;
 
 .sort
id KMatrix(7,26) =   0;
 
 .sort
id KMatrix(7,27) =   - mt^3*s12*s24 - mt^3*s12*s23 - mt^3*s12*s14 - mt^3*s12*
      s13 - mt^3*s12^2 + mt^3*mh^2*s12 + 4*mt^5*s12 + 1/2*denom(1/2*s12)*mt*
      s12*s13*s23*s24 + 1/2*denom(1/2*s12)*mt*s12*s13*s23^2 + 1/2*denom(1/2*
      s12)*mt*s12*s13*s14*s23 + 1/2*denom(1/2*s12)*mt*s12*s13^2*s23 + 1/2*
      denom(1/2*s12)*mt*s12^2*s13*s23 - 1/2*denom(1/2*s12)*mt*mh^2*s12*s13*s23
       - 1/2*denom(1/2*s12)*mt^3*s12*s23*s24 - 1/2*denom(1/2*s12)*mt^3*s12*
      s23^2 - denom(1/2*s12)*mt^3*s12*s14*s24 - denom(1/2*s12)*mt^3*s12*s14*
      s23 - denom(1/2*s12)*mt^3*s12*s13*s24 - 3*denom(1/2*s12)*mt^3*s12*s13*
      s23 - 1/2*denom(1/2*s12)*mt^3*s12*s13*s14 - 1/2*denom(1/2*s12)*mt^3*s12*
      s13^2 - 1/2*denom(1/2*s12)*mt^3*s12^2*s23 - 1/2*denom(1/2*s12)*mt^3*
      s12^2*s13 + 1/2*denom(1/2*s12)*mt^3*mh^2*s12*s23 + 1/2*denom(1/2*s12)*
      mt^3*mh^2*s12*s13 + 2*denom(1/2*s12)*mt^5*s12*s24 + 3*denom(1/2*s12)*
      mt^5*s12*s23 + 2*denom(1/2*s12)*mt^5*s12*s14 + 3*denom(1/2*s12)*mt^5*s12
      *s13 + 1/2*denom(1/2*s12)*mt^5*s12^2 - 1/2*denom(1/2*s12)*mt^5*mh^2*s12
       - 4*denom(1/2*s12)*mt^7*s12 + 1/2*denom(1/4*s12^2)*mt*s12*s13*s14*s23*
      s24 + 1/4*denom(1/4*s12^2)*mt*s12*s13*s14*s23^2 + 1/4*denom(1/4*s12^2)*
      mt*s12*s13^2*s23*s24 - 1/2*denom(1/4*s12^2)*mt^3*s12*s14*s23*s24 - 1/4*
      denom(1/4*s12^2)*mt^3*s12*s14*s23^2 - denom(1/4*s12^2)*mt^3*s12*s13*s23*
      s24 - 1/4*denom(1/4*s12^2)*mt^3*s12*s13*s23^2 - 1/2*denom(1/4*s12^2)*
      mt^3*s12*s13*s14*s24 - denom(1/4*s12^2)*mt^3*s12*s13*s14*s23 - 1/4*
      denom(1/4*s12^2)*mt^3*s12*s13^2*s24 - 1/4*denom(1/4*s12^2)*mt^3*s12*
      s13^2*s23 + 3/4*denom(1/4*s12^2)*mt^5*s12*s23*s24 + 1/4*denom(1/4*s12^2)
      *mt^5*s12*s23^2 + 1/2*denom(1/4*s12^2)*mt^5*s12*s14*s24 + denom(1/4*
      s12^2)*mt^5*s12*s14*s23 + denom(1/4*s12^2)*mt^5*s12*s13*s24 + 3/2*denom(
      1/4*s12^2)*mt^5*s12*s13*s23 + 3/4*denom(1/4*s12^2)*mt^5*s12*s13*s14 + 1/
      4*denom(1/4*s12^2)*mt^5*s12*s13^2 - 3/4*denom(1/4*s12^2)*mt^7*s12*s24 - 
      5/4*denom(1/4*s12^2)*mt^7*s12*s23 - 3/4*denom(1/4*s12^2)*mt^7*s12*s14 - 
      5/4*denom(1/4*s12^2)*mt^7*s12*s13 + denom(1/4*s12^2)*mt^9*s12;
 
 .sort
id KMatrix(7,28) =   0;
 
 .sort
id KMatrix(7,29) =  1/2*mt*s12*s24^2 + mt*s12*s23*s24 + 1/2*mt*s12*s23^2 + mt*
      s12*s14*s24 + mt*s12*s14*s23 + 1/2*mt*s12*s14^2 + mt*s12*s13*s24 + mt*
      s12*s13*s23 + mt*s12*s13*s14 + 1/2*mt*s12*s13^2 + mt*s12^2*s24 + mt*
      s12^2*s23 + mt*s12^2*s14 + mt*s12^2*s13 + 1/2*mt*s12^3 - mt*mh^2*s12*s24
       - mt*mh^2*s12*s23 - mt*mh^2*s12*s14 - mt*mh^2*s12*s13 - mt*mh^2*s12^2
       + 1/2*mt*mh^4*s12 - 3*mt^3*s12*s24 - 3*mt^3*s12*s23 - 3*mt^3*s12*s14 - 
      3*mt^3*s12*s13 - 3*mt^3*s12^2 + 3*mt^3*mh^2*s12 + 4*mt^5*s12 + 1/2*
      denom(1/2*s12)*mt*s12*s14*s24^2 + denom(1/2*s12)*mt*s12*s14*s23*s24 + 1/
      2*denom(1/2*s12)*mt*s12*s14*s23^2 + 1/2*denom(1/2*s12)*mt*s12*s14^2*s24
       + 1/2*denom(1/2*s12)*mt*s12*s14^2*s23 + 1/2*denom(1/2*s12)*mt*s12*s13*
      s24^2 + 1/2*denom(1/2*s12)*mt*s12*s13*s23*s24 + denom(1/2*s12)*mt*s12*
      s13*s14*s24 + 1/2*denom(1/2*s12)*mt*s12*s13*s14*s23 + 1/2*denom(1/2*s12)
      *mt*s12*s13^2*s24 + 1/2*denom(1/2*s12)*mt*s12^2*s14*s24 + 1/2*denom(1/2*
      s12)*mt*s12^2*s14*s23 + 1/2*denom(1/2*s12)*mt*s12^2*s13*s24 - 1/2*denom(
      1/2*s12)*mt*mh^2*s12*s14*s24 - 1/2*denom(1/2*s12)*mt*mh^2*s12*s14*s23 - 
      1/2*denom(1/2*s12)*mt*mh^2*s12*s13*s24 - denom(1/2*s12)*mt^3*s12*s24^2
       - 3/2*denom(1/2*s12)*mt^3*s12*s23*s24 - 1/2*denom(1/2*s12)*mt^3*s12*
      s23^2 - 3*denom(1/2*s12)*mt^3*s12*s14*s24 - 3*denom(1/2*s12)*mt^3*s12*
      s14*s23 - denom(1/2*s12)*mt^3*s12*s14^2 - 3*denom(1/2*s12)*mt^3*s12*s13*
      s24 - denom(1/2*s12)*mt^3*s12*s13*s23 - 3/2*denom(1/2*s12)*mt^3*s12*s13*
      s14 - 1/2*denom(1/2*s12)*mt^3*s12*s13^2 - denom(1/2*s12)*mt^3*s12^2*s24
       - 1/2*denom(1/2*s12)*mt^3*s12^2*s23 - denom(1/2*s12)*mt^3*s12^2*s14 - 1/
      2*denom(1/2*s12)*mt^3*s12^2*s13 + denom(1/2*s12)*mt^3*mh^2*s12*s24 + 1/2
      *denom(1/2*s12)*mt^3*mh^2*s12*s23 + denom(1/2*s12)*mt^3*mh^2*s12*s14 + 1/
      2*denom(1/2*s12)*mt^3*mh^2*s12*s13 + 4*denom(1/2*s12)*mt^5*s12*s24 + 3*
      denom(1/2*s12)*mt^5*s12*s23 + 4*denom(1/2*s12)*mt^5*s12*s14 + 3*denom(1/
      2*s12)*mt^5*s12*s13 + 3/2*denom(1/2*s12)*mt^5*s12^2 - 3/2*denom(1/2*s12)
      *mt^5*mh^2*s12 - 4*denom(1/2*s12)*mt^7*s12 + 1/4*denom(1/4*s12^2)*mt*s12
      *s14^2*s23*s24 + 1/8*denom(1/4*s12^2)*mt*s12*s14^2*s23^2 + 1/4*denom(1/4
      *s12^2)*mt*s12*s13*s14*s24^2 + 1/4*denom(1/4*s12^2)*mt*s12*s13*s14*s23*
      s24 + 1/8*denom(1/4*s12^2)*mt*s12*s13^2*s24^2 - 1/4*denom(1/4*s12^2)*
      mt^3*s12*s14*s24^2 - 3/4*denom(1/4*s12^2)*mt^3*s12*s14*s23*s24 - 1/4*
      denom(1/4*s12^2)*mt^3*s12*s14*s23^2 - 1/4*denom(1/4*s12^2)*mt^3*s12*
      s14^2*s24 - 1/2*denom(1/4*s12^2)*mt^3*s12*s14^2*s23 - 1/2*denom(1/4*
      s12^2)*mt^3*s12*s13*s24^2 - 1/4*denom(1/4*s12^2)*mt^3*s12*s13*s23*s24 - 
      3/4*denom(1/4*s12^2)*mt^3*s12*s13*s14*s24 - 1/4*denom(1/4*s12^2)*mt^3*
      s12*s13*s14*s23 - 1/4*denom(1/4*s12^2)*mt^3*s12*s13^2*s24 + 3/8*denom(1/
      4*s12^2)*mt^5*s12*s24^2 + 1/2*denom(1/4*s12^2)*mt^5*s12*s23*s24 + 1/8*
      denom(1/4*s12^2)*mt^5*s12*s23^2 + 5/4*denom(1/4*s12^2)*mt^5*s12*s14*s24
       + 5/4*denom(1/4*s12^2)*mt^5*s12*s14*s23 + 3/8*denom(1/4*s12^2)*mt^5*s12
      *s14^2 + 5/4*denom(1/4*s12^2)*mt^5*s12*s13*s24 + 1/4*denom(1/4*s12^2)*
      mt^5*s12*s13*s23 + 1/2*denom(1/4*s12^2)*mt^5*s12*s13*s14 + 1/8*denom(1/4
      *s12^2)*mt^5*s12*s13^2 - 5/4*denom(1/4*s12^2)*mt^7*s12*s24 - 3/4*denom(1/
      4*s12^2)*mt^7*s12*s23 - 5/4*denom(1/4*s12^2)*mt^7*s12*s14 - 3/4*denom(1/
      4*s12^2)*mt^7*s12*s13 + denom(1/4*s12^2)*mt^9*s12;
 
 .sort
id KMatrix(7,30) =   0;
 
 .sort
id KMatrix(7,31) =  1/2*mt*s12*s24^2 + mt*s12*s23*s24 + 1/2*mt*s12*s23^2 + mt*
      s12*s14*s24 + mt*s12*s14*s23 + 1/2*mt*s12*s14^2 + mt*s12*s13*s24 + mt*
      s12*s13*s23 + mt*s12*s13*s14 + 1/2*mt*s12*s13^2 + mt*s12^2*s24 + mt*
      s12^2*s23 + mt*s12^2*s14 + mt*s12^2*s13 + 1/2*mt*s12^3 - mt*mh^2*s12*s24
       - mt*mh^2*s12*s23 - mt*mh^2*s12*s14 - mt*mh^2*s12*s13 - mt*mh^2*s12^2
       + 1/2*mt*mh^4*s12 - 3*mt^3*s12*s24 - 3*mt^3*s12*s23 - 3*mt^3*s12*s14 - 
      3*mt^3*s12*s13 - 3*mt^3*s12^2 + 3*mt^3*mh^2*s12 + 4*mt^5*s12 + 1/2*
      denom(1/2*s12)*mt*s12*s14*s23*s24 + 1/2*denom(1/2*s12)*mt*s12*s14*s23^2
       + 1/2*denom(1/2*s12)*mt*s12*s14^2*s23 + 1/2*denom(1/2*s12)*mt*s12*s13*
      s24^2 + denom(1/2*s12)*mt*s12*s13*s23*s24 + 1/2*denom(1/2*s12)*mt*s12*
      s13*s23^2 + 1/2*denom(1/2*s12)*mt*s12*s13*s14*s24 + denom(1/2*s12)*mt*
      s12*s13*s14*s23 + 1/2*denom(1/2*s12)*mt*s12*s13^2*s24 + 1/2*denom(1/2*
      s12)*mt*s12*s13^2*s23 + 1/2*denom(1/2*s12)*mt*s12^2*s14*s23 + 1/2*denom(
      1/2*s12)*mt*s12^2*s13*s24 + 1/2*denom(1/2*s12)*mt*s12^2*s13*s23 - 1/2*
      denom(1/2*s12)*mt*mh^2*s12*s14*s23 - 1/2*denom(1/2*s12)*mt*mh^2*s12*s13*
      s24 - 1/2*denom(1/2*s12)*mt*mh^2*s12*s13*s23 - 1/2*denom(1/2*s12)*mt^3*
      s12*s24^2 - 3/2*denom(1/2*s12)*mt^3*s12*s23*s24 - denom(1/2*s12)*mt^3*
      s12*s23^2 - denom(1/2*s12)*mt^3*s12*s14*s24 - 3*denom(1/2*s12)*mt^3*s12*
      s14*s23 - 1/2*denom(1/2*s12)*mt^3*s12*s14^2 - 3*denom(1/2*s12)*mt^3*s12*
      s13*s24 - 3*denom(1/2*s12)*mt^3*s12*s13*s23 - 3/2*denom(1/2*s12)*mt^3*
      s12*s13*s14 - denom(1/2*s12)*mt^3*s12*s13^2 - 1/2*denom(1/2*s12)*mt^3*
      s12^2*s24 - denom(1/2*s12)*mt^3*s12^2*s23 - 1/2*denom(1/2*s12)*mt^3*
      s12^2*s14 - denom(1/2*s12)*mt^3*s12^2*s13 + 1/2*denom(1/2*s12)*mt^3*mh^2
      *s12*s24 + denom(1/2*s12)*mt^3*mh^2*s12*s23 + 1/2*denom(1/2*s12)*mt^3*
      mh^2*s12*s14 + denom(1/2*s12)*mt^3*mh^2*s12*s13 + 3*denom(1/2*s12)*mt^5*
      s12*s24 + 4*denom(1/2*s12)*mt^5*s12*s23 + 3*denom(1/2*s12)*mt^5*s12*s14
       + 4*denom(1/2*s12)*mt^5*s12*s13 + 3/2*denom(1/2*s12)*mt^5*s12^2 - 3/2*
      denom(1/2*s12)*mt^5*mh^2*s12 - 4*denom(1/2*s12)*mt^7*s12 + 1/8*denom(1/4
      *s12^2)*mt*s12*s14^2*s23^2 + 1/4*denom(1/4*s12^2)*mt*s12*s13*s14*s23*s24
       + 1/4*denom(1/4*s12^2)*mt*s12*s13*s14*s23^2 + 1/8*denom(1/4*s12^2)*mt*
      s12*s13^2*s24^2 + 1/4*denom(1/4*s12^2)*mt*s12*s13^2*s23*s24 - 1/4*denom(
      1/4*s12^2)*mt^3*s12*s14*s23*s24 - 1/2*denom(1/4*s12^2)*mt^3*s12*s14*
      s23^2 - 1/4*denom(1/4*s12^2)*mt^3*s12*s14^2*s23 - 1/4*denom(1/4*s12^2)*
      mt^3*s12*s13*s24^2 - 3/4*denom(1/4*s12^2)*mt^3*s12*s13*s23*s24 - 1/4*
      denom(1/4*s12^2)*mt^3*s12*s13*s23^2 - 1/4*denom(1/4*s12^2)*mt^3*s12*s13*
      s14*s24 - 3/4*denom(1/4*s12^2)*mt^3*s12*s13*s14*s23 - 1/2*denom(1/4*
      s12^2)*mt^3*s12*s13^2*s24 - 1/4*denom(1/4*s12^2)*mt^3*s12*s13^2*s23 + 1/
      8*denom(1/4*s12^2)*mt^5*s12*s24^2 + 1/2*denom(1/4*s12^2)*mt^5*s12*s23*
      s24 + 3/8*denom(1/4*s12^2)*mt^5*s12*s23^2 + 1/4*denom(1/4*s12^2)*mt^5*
      s12*s14*s24 + 5/4*denom(1/4*s12^2)*mt^5*s12*s14*s23 + 1/8*denom(1/4*
      s12^2)*mt^5*s12*s14^2 + 5/4*denom(1/4*s12^2)*mt^5*s12*s13*s24 + 5/4*
      denom(1/4*s12^2)*mt^5*s12*s13*s23 + 1/2*denom(1/4*s12^2)*mt^5*s12*s13*
      s14 + 3/8*denom(1/4*s12^2)*mt^5*s12*s13^2 - 3/4*denom(1/4*s12^2)*mt^7*
      s12*s24 - 5/4*denom(1/4*s12^2)*mt^7*s12*s23 - 3/4*denom(1/4*s12^2)*mt^7*
      s12*s14 - 5/4*denom(1/4*s12^2)*mt^7*s12*s13 + denom(1/4*s12^2)*mt^9*s12;
 
 .sort
id KMatrix(7,32) =   0;
 
 .sort
id KMatrix(7,33) =   - mt^3*s12*s24 - mt^3*s12*s23 - mt^3*s12*s14 - mt^3*s12*
      s13 - mt^3*s12^2 + mt^3*mh^2*s12 + 4*mt^5*s12 + 1/2*denom(1/2*s12)*mt*
      s12*s14*s24^2 + 1/2*denom(1/2*s12)*mt*s12*s14*s23*s24 + 1/2*denom(1/2*
      s12)*mt*s12*s14^2*s24 + 1/2*denom(1/2*s12)*mt*s12*s13*s14*s24 + 1/2*
      denom(1/2*s12)*mt*s12^2*s14*s24 - 1/2*denom(1/2*s12)*mt*mh^2*s12*s14*s24
       - 1/2*denom(1/2*s12)*mt^3*s12*s24^2 - 1/2*denom(1/2*s12)*mt^3*s12*s23*
      s24 - 3*denom(1/2*s12)*mt^3*s12*s14*s24 - denom(1/2*s12)*mt^3*s12*s14*
      s23 - 1/2*denom(1/2*s12)*mt^3*s12*s14^2 - denom(1/2*s12)*mt^3*s12*s13*
      s24 - denom(1/2*s12)*mt^3*s12*s13*s23 - 1/2*denom(1/2*s12)*mt^3*s12*s13*
      s14 - 1/2*denom(1/2*s12)*mt^3*s12^2*s24 - 1/2*denom(1/2*s12)*mt^3*s12^2*
      s14 + 1/2*denom(1/2*s12)*mt^3*mh^2*s12*s24 + 1/2*denom(1/2*s12)*mt^3*
      mh^2*s12*s14 + 3*denom(1/2*s12)*mt^5*s12*s24 + 2*denom(1/2*s12)*mt^5*s12
      *s23 + 3*denom(1/2*s12)*mt^5*s12*s14 + 2*denom(1/2*s12)*mt^5*s12*s13 + 1/
      2*denom(1/2*s12)*mt^5*s12^2 - 1/2*denom(1/2*s12)*mt^5*mh^2*s12 - 4*
      denom(1/2*s12)*mt^7*s12 + 1/4*denom(1/4*s12^2)*mt*s12*s14^2*s23*s24 + 1/
      4*denom(1/4*s12^2)*mt*s12*s13*s14*s24^2 + 1/2*denom(1/4*s12^2)*mt*s12*
      s13*s14*s23*s24 - 1/4*denom(1/4*s12^2)*mt^3*s12*s14*s24^2 - denom(1/4*
      s12^2)*mt^3*s12*s14*s23*s24 - 1/4*denom(1/4*s12^2)*mt^3*s12*s14^2*s24 - 
      1/4*denom(1/4*s12^2)*mt^3*s12*s14^2*s23 - 1/4*denom(1/4*s12^2)*mt^3*s12*
      s13*s24^2 - 1/2*denom(1/4*s12^2)*mt^3*s12*s13*s23*s24 - denom(1/4*s12^2)
      *mt^3*s12*s13*s14*s24 - 1/2*denom(1/4*s12^2)*mt^3*s12*s13*s14*s23 + 1/4*
      denom(1/4*s12^2)*mt^5*s12*s24^2 + 3/4*denom(1/4*s12^2)*mt^5*s12*s23*s24
       + 3/2*denom(1/4*s12^2)*mt^5*s12*s14*s24 + denom(1/4*s12^2)*mt^5*s12*s14
      *s23 + 1/4*denom(1/4*s12^2)*mt^5*s12*s14^2 + denom(1/4*s12^2)*mt^5*s12*
      s13*s24 + 1/2*denom(1/4*s12^2)*mt^5*s12*s13*s23 + 3/4*denom(1/4*s12^2)*
      mt^5*s12*s13*s14 - 5/4*denom(1/4*s12^2)*mt^7*s12*s24 - 3/4*denom(1/4*
      s12^2)*mt^7*s12*s23 - 5/4*denom(1/4*s12^2)*mt^7*s12*s14 - 3/4*denom(1/4*
      s12^2)*mt^7*s12*s13 + denom(1/4*s12^2)*mt^9*s12;
 
 .sort
id KMatrix(7,34) =   - s13*s14*s24 - s13*s14*s23 - s13*s14^2 - s13^2*s14 - s12
      *s13*s14 + mh^2*s13*s14 + mt^2*s14*s24 + mt^2*s14*s23 + mt^2*s14^2 + 
      mt^2*s13*s24 + mt^2*s13*s23 + 4*mt^2*s13*s14 + mt^2*s13^2 + mt^2*s12*s14
       + mt^2*s12*s13 - mt^2*mh^2*s14 - mt^2*mh^2*s13 - mt^4*s24 - mt^4*s23 - 
      3*mt^4*s14 - 3*mt^4*s13 - mt^4*s12 + mt^4*mh^2 + 2*mt^6 - denom(1/2*s12)
      *s13*s14^2*s23 - denom(1/2*s12)*s13^2*s14*s24 + denom(1/2*s12)*mt^2*
      s14^2*s23 + 2*denom(1/2*s12)*mt^2*s13*s14*s24 + 2*denom(1/2*s12)*mt^2*
      s13*s14*s23 + denom(1/2*s12)*mt^2*s13*s14^2 + denom(1/2*s12)*mt^2*s13^2*
      s24 + denom(1/2*s12)*mt^2*s13^2*s14 - denom(1/2*s12)*mt^4*s14*s24 - 2*
      denom(1/2*s12)*mt^4*s14*s23 - denom(1/2*s12)*mt^4*s14^2 - 2*denom(1/2*
      s12)*mt^4*s13*s24 - denom(1/2*s12)*mt^4*s13*s23 - 4*denom(1/2*s12)*mt^4*
      s13*s14 - denom(1/2*s12)*mt^4*s13^2 + denom(1/2*s12)*mt^6*s24 + denom(1/
      2*s12)*mt^6*s23 + 3*denom(1/2*s12)*mt^6*s14 + 3*denom(1/2*s12)*mt^6*s13
       - 2*denom(1/2*s12)*mt^8 + 1/4*denom(1/4*s12^2)*s12*s13*s14^2*s23 + 1/4*
      denom(1/4*s12^2)*s12*s13^2*s14*s24 - 1/4*denom(1/4*s12^2)*mt^2*s12*s14^2
      *s23 - 1/2*denom(1/4*s12^2)*mt^2*s12*s13*s14*s24 - 1/2*denom(1/4*s12^2)*
      mt^2*s12*s13*s14*s23 - 1/4*denom(1/4*s12^2)*mt^2*s12*s13*s14^2 - 1/4*
      denom(1/4*s12^2)*mt^2*s12*s13^2*s24 - 1/4*denom(1/4*s12^2)*mt^2*s12*
      s13^2*s14 + 1/4*denom(1/4*s12^2)*mt^4*s12*s14*s24 + 1/2*denom(1/4*s12^2)
      *mt^4*s12*s14*s23 + 1/4*denom(1/4*s12^2)*mt^4*s12*s14^2 + 1/2*denom(1/4*
      s12^2)*mt^4*s12*s13*s24 + 1/4*denom(1/4*s12^2)*mt^4*s12*s13*s23 + denom(
      1/4*s12^2)*mt^4*s12*s13*s14 + 1/4*denom(1/4*s12^2)*mt^4*s12*s13^2 - 1/4*
      denom(1/4*s12^2)*mt^6*s12*s24 - 1/4*denom(1/4*s12^2)*mt^6*s12*s23 - 3/4*
      denom(1/4*s12^2)*mt^6*s12*s14 - 3/4*denom(1/4*s12^2)*mt^6*s12*s13 + 1/2*
      denom(1/4*s12^2)*mt^8*s12;
 
 .sort
id KMatrix(7,35) =   - 1/2*s14*s23*s24 - 1/2*s14*s23^2 - 1/2*s14^2*s23 - 1/2*
      s13*s24^2 - 1/2*s13*s23*s24 - 1/2*s13*s14*s24 - 1/2*s13*s14*s23 - 1/2*
      s13^2*s24 - 1/2*s12*s14*s23 - 1/2*s12*s13*s24 + 1/2*mh^2*s14*s23 + 1/2*
      mh^2*s13*s24 + 1/2*mt^2*s24^2 + mt^2*s23*s24 + 1/2*mt^2*s23^2 + mt^2*s14
      *s24 + 2*mt^2*s14*s23 + 1/2*mt^2*s14^2 + 2*mt^2*s13*s24 + mt^2*s13*s23
       + mt^2*s13*s14 + 1/2*mt^2*s13^2 + 3/2*mt^2*s12*s24 + 3/2*mt^2*s12*s23
       + 3/2*mt^2*s12*s14 + 3/2*mt^2*s12*s13 + mt^2*s12^2 - 1/2*mt^2*mh^2*s24
       - 1/2*mt^2*mh^2*s23 - 1/2*mt^2*mh^2*s14 - 1/2*mt^2*mh^2*s13 - mt^2*mh^2
      *s12 - 2*mt^4*s24 - 2*mt^4*s23 - 2*mt^4*s14 - 2*mt^4*s13 - 5*mt^4*s12 + 
      mt^4*mh^2 + 2*mt^6 - 1/2*denom(1/2*s12)*s14^2*s23^2 - denom(1/2*s12)*s13
      *s14*s23*s24 - 1/2*denom(1/2*s12)*s13^2*s24^2 + denom(1/2*s12)*mt^2*s14*
      s23*s24 + denom(1/2*s12)*mt^2*s14*s23^2 + denom(1/2*s12)*mt^2*s14^2*s23
       + denom(1/2*s12)*mt^2*s13*s24^2 + denom(1/2*s12)*mt^2*s13*s23*s24 + 
      denom(1/2*s12)*mt^2*s13*s14*s24 + denom(1/2*s12)*mt^2*s13*s14*s23 + 
      denom(1/2*s12)*mt^2*s13^2*s24 + denom(1/2*s12)*mt^2*s12*s14*s24 + denom(
      1/2*s12)*mt^2*s12*s14*s23 + denom(1/2*s12)*mt^2*s12*s13*s24 + denom(1/2*
      s12)*mt^2*s12*s13*s23 - 1/2*denom(1/2*s12)*mt^4*s24^2 - denom(1/2*s12)*
      mt^4*s23*s24 - 1/2*denom(1/2*s12)*mt^4*s23^2 - denom(1/2*s12)*mt^4*s14*
      s24 - 3*denom(1/2*s12)*mt^4*s14*s23 - 1/2*denom(1/2*s12)*mt^4*s14^2 - 3*
      denom(1/2*s12)*mt^4*s13*s24 - denom(1/2*s12)*mt^4*s13*s23 - denom(1/2*
      s12)*mt^4*s13*s14 - 1/2*denom(1/2*s12)*mt^4*s13^2 - 2*denom(1/2*s12)*
      mt^4*s12*s24 - 2*denom(1/2*s12)*mt^4*s12*s23 - 2*denom(1/2*s12)*mt^4*s12
      *s14 - 2*denom(1/2*s12)*mt^4*s12*s13 + 2*denom(1/2*s12)*mt^6*s24 + 2*
      denom(1/2*s12)*mt^6*s23 + 2*denom(1/2*s12)*mt^6*s14 + 2*denom(1/2*s12)*
      mt^6*s13 + 4*denom(1/2*s12)*mt^6*s12 - 2*denom(1/2*s12)*mt^8 + 1/4*
      denom(1/4*s12^2)*s12*s14^2*s23^2 + 1/4*denom(1/4*s12^2)*s12*s13^2*s24^2
       + 1/8*denom(1/4*s12^2)*s12^2*s14*s23*s24 + 1/8*denom(1/4*s12^2)*s12^2*
      s14*s23^2 + 1/8*denom(1/4*s12^2)*s12^2*s14^2*s23 + 1/8*denom(1/4*s12^2)*
      s12^2*s13*s24^2 + 1/8*denom(1/4*s12^2)*s12^2*s13*s23*s24 + 1/8*denom(1/4
      *s12^2)*s12^2*s13*s14*s24 + 1/8*denom(1/4*s12^2)*s12^2*s13*s14*s23 + 1/8
      *denom(1/4*s12^2)*s12^2*s13^2*s24 + 1/8*denom(1/4*s12^2)*s12^3*s14*s23
       + 1/8*denom(1/4*s12^2)*s12^3*s13*s24 - 1/8*denom(1/4*s12^2)*mh^2*s12^2*
      s14*s23 - 1/8*denom(1/4*s12^2)*mh^2*s12^2*s13*s24 - 1/2*denom(1/4*s12^2)
      *mt^2*s12*s14*s23^2 - 1/2*denom(1/4*s12^2)*mt^2*s12*s14^2*s23 - 1/2*
      denom(1/4*s12^2)*mt^2*s12*s13*s24^2 - 1/2*denom(1/4*s12^2)*mt^2*s12*
      s13^2*s24 - 1/8*denom(1/4*s12^2)*mt^2*s12^2*s24^2 - 1/4*denom(1/4*s12^2)
      *mt^2*s12^2*s23*s24 - 1/8*denom(1/4*s12^2)*mt^2*s12^2*s23^2 - 1/4*denom(
      1/4*s12^2)*mt^2*s12^2*s14*s24 - 3/4*denom(1/4*s12^2)*mt^2*s12^2*s14*s23
       - 1/8*denom(1/4*s12^2)*mt^2*s12^2*s14^2 - 3/4*denom(1/4*s12^2)*mt^2*
      s12^2*s13*s24 - 1/4*denom(1/4*s12^2)*mt^2*s12^2*s13*s23 - 1/4*denom(1/4*
      s12^2)*mt^2*s12^2*s13*s14 - 1/8*denom(1/4*s12^2)*mt^2*s12^2*s13^2 - 1/8*
      denom(1/4*s12^2)*mt^2*s12^3*s24 - 1/8*denom(1/4*s12^2)*mt^2*s12^3*s23 - 
      1/8*denom(1/4*s12^2)*mt^2*s12^3*s14 - 1/8*denom(1/4*s12^2)*mt^2*s12^3*
      s13 + 1/8*denom(1/4*s12^2)*mt^2*mh^2*s12^2*s24 + 1/8*denom(1/4*s12^2)*
      mt^2*mh^2*s12^2*s23 + 1/8*denom(1/4*s12^2)*mt^2*mh^2*s12^2*s14 + 1/8*
      denom(1/4*s12^2)*mt^2*mh^2*s12^2*s13 + 1/4*denom(1/4*s12^2)*mt^4*s12*
      s24^2 + 1/4*denom(1/4*s12^2)*mt^4*s12*s23^2 + denom(1/4*s12^2)*mt^4*s12*
      s14*s23 + 1/4*denom(1/4*s12^2)*mt^4*s12*s14^2 + denom(1/4*s12^2)*mt^4*
      s12*s13*s24 + 1/4*denom(1/4*s12^2)*mt^4*s12*s13^2 + 3/4*denom(1/4*s12^2)
      *mt^4*s12^2*s24 + 3/4*denom(1/4*s12^2)*mt^4*s12^2*s23 + 3/4*denom(1/4*
      s12^2)*mt^4*s12^2*s14 + 3/4*denom(1/4*s12^2)*mt^4*s12^2*s13 + 1/4*denom(
      1/4*s12^2)*mt^4*s12^3 - 1/4*denom(1/4*s12^2)*mt^4*mh^2*s12^2 - 1/2*
      denom(1/4*s12^2)*mt^6*s12*s24 - 1/2*denom(1/4*s12^2)*mt^6*s12*s23 - 1/2*
      denom(1/4*s12^2)*mt^6*s12*s14 - 1/2*denom(1/4*s12^2)*mt^6*s12*s13 - 
      denom(1/4*s12^2)*mt^6*s12^2 + 1/2*denom(1/4*s12^2)*mt^8*s12;
 
 .sort
id KMatrix(7,36) =   - mt*s12*s14*s24 - mt*s12*s14*s23 - mt*s12*s14^2 - mt*s12
      *s13*s14 - mt*s12^2*s14 + mt*mh^2*s12*s14 + mt^3*s12*s24 + mt^3*s12*s23
       + 3*mt^3*s12*s14 + mt^3*s12*s13 + mt^3*s12^2 - mt^3*mh^2*s12 - 2*mt^5*
      s12 - denom(1/2*s12)*mt*s12*s14^2*s23 - denom(1/2*s12)*mt*s12*s13*s14*
      s24 + denom(1/2*s12)*mt^3*s12*s14*s24 + 2*denom(1/2*s12)*mt^3*s12*s14*
      s23 + denom(1/2*s12)*mt^3*s12*s14^2 + denom(1/2*s12)*mt^3*s12*s13*s24 + 
      denom(1/2*s12)*mt^3*s12*s13*s14 - denom(1/2*s12)*mt^5*s12*s24 - denom(1/
      2*s12)*mt^5*s12*s23 - 3*denom(1/2*s12)*mt^5*s12*s14 - denom(1/2*s12)*
      mt^5*s12*s13 + 2*denom(1/2*s12)*mt^7*s12 + 1/4*denom(1/4*s12^2)*mt*s12^2
      *s14^2*s23 + 1/4*denom(1/4*s12^2)*mt*s12^2*s13*s14*s24 - 1/4*denom(1/4*
      s12^2)*mt^3*s12^2*s14*s24 - 1/2*denom(1/4*s12^2)*mt^3*s12^2*s14*s23 - 1/
      4*denom(1/4*s12^2)*mt^3*s12^2*s14^2 - 1/4*denom(1/4*s12^2)*mt^3*s12^2*
      s13*s24 - 1/4*denom(1/4*s12^2)*mt^3*s12^2*s13*s14 + 1/4*denom(1/4*s12^2)
      *mt^5*s12^2*s24 + 1/4*denom(1/4*s12^2)*mt^5*s12^2*s23 + 3/4*denom(1/4*
      s12^2)*mt^5*s12^2*s14 + 1/4*denom(1/4*s12^2)*mt^5*s12^2*s13 - 1/2*denom(
      1/4*s12^2)*mt^7*s12^2;
 
 .sort
id KMatrix(8,1) =  1/2*mt*s14*s24^2 + mt*s14*s23*s24 + 1/2*mt*s14*s23^2 + mt*
      s14^2*s24 + mt*s14^2*s23 + 1/2*mt*s14^3 - 1/2*mt*s13*s24^2 - mt*s13*s23*
      s24 - 1/2*mt*s13*s23^2 + 1/2*mt*s13*s14^2 - mt*s13^2*s24 - mt*s13^2*s23
       - 1/2*mt*s13^2*s14 - 1/2*mt*s13^3 + mt*s12*s14*s24 + mt*s12*s14*s23 + 
      mt*s12*s14^2 - mt*s12*s13*s24 - mt*s12*s13*s23 - mt*s12*s13^2 + 1/2*mt*
      s12^2*s14 - 1/2*mt*s12^2*s13 - mt*mh^2*s14*s24 - mt*mh^2*s14*s23 - mt*
      mh^2*s14^2 + mt*mh^2*s13*s24 + mt*mh^2*s13*s23 + mt*mh^2*s13^2 - mt*mh^2
      *s12*s14 + mt*mh^2*s12*s13 + 1/2*mt*mh^4*s14 - 1/2*mt*mh^4*s13 - 2*mt^3*
      s14*s24 - 2*mt^3*s14*s23 - 2*mt^3*s14^2 + 2*mt^3*s13*s24 + 2*mt^3*s13*
      s23 + 2*mt^3*s13^2 - 2*mt^3*s12*s14 + 2*mt^3*s12*s13 + 2*mt^3*mh^2*s14
       - 2*mt^3*mh^2*s13 + 2*mt^5*s14 - 2*mt^5*s13 + 1/2*denom(1/2*s12)*mt*
      s14^2*s23*s24 + 1/2*denom(1/2*s12)*mt*s14^2*s23^2 + 1/2*denom(1/2*s12)*
      mt*s14^3*s23 + 1/2*denom(1/2*s12)*mt*s13*s14*s24^2 - 1/2*denom(1/2*s12)*
      mt*s13*s14*s23^2 + 1/2*denom(1/2*s12)*mt*s13*s14^2*s24 - 1/2*denom(1/2*
      s12)*mt*s13^2*s24^2 - 1/2*denom(1/2*s12)*mt*s13^2*s23*s24 - 1/2*denom(1/
      2*s12)*mt*s13^2*s14*s23 - 1/2*denom(1/2*s12)*mt*s13^3*s24 + 1/2*denom(1/
      2*s12)*mt*s12*s14^2*s23 + 1/2*denom(1/2*s12)*mt*s12*s13*s14*s24 - 1/2*
      denom(1/2*s12)*mt*s12*s13*s14*s23 - 1/2*denom(1/2*s12)*mt*s12*s13^2*s24
       - 1/2*denom(1/2*s12)*mt*mh^2*s14^2*s23 - 1/2*denom(1/2*s12)*mt*mh^2*s13
      *s14*s24 + 1/2*denom(1/2*s12)*mt*mh^2*s13*s14*s23 + 1/2*denom(1/2*s12)*
      mt*mh^2*s13^2*s24 - 1/2*denom(1/2*s12)*mt^3*s14*s24^2 - denom(1/2*s12)*
      mt^3*s14*s23*s24 - 1/2*denom(1/2*s12)*mt^3*s14*s23^2 - denom(1/2*s12)*
      mt^3*s14^2*s24 - 2*denom(1/2*s12)*mt^3*s14^2*s23 - 1/2*denom(1/2*s12)*
      mt^3*s14^3 + 1/2*denom(1/2*s12)*mt^3*s13*s24^2 + denom(1/2*s12)*mt^3*s13
      *s23*s24 + 1/2*denom(1/2*s12)*mt^3*s13*s23^2 - denom(1/2*s12)*mt^3*s13*
      s14*s24 + denom(1/2*s12)*mt^3*s13*s14*s23 - 1/2*denom(1/2*s12)*mt^3*s13*
      s14^2 + 2*denom(1/2*s12)*mt^3*s13^2*s24 + denom(1/2*s12)*mt^3*s13^2*s23
       + 1/2*denom(1/2*s12)*mt^3*s13^2*s14 + 1/2*denom(1/2*s12)*mt^3*s13^3 - 1/
      2*denom(1/2*s12)*mt^3*s12*s14*s24 - 1/2*denom(1/2*s12)*mt^3*s12*s14*s23
       - 1/2*denom(1/2*s12)*mt^3*s12*s14^2 + 1/2*denom(1/2*s12)*mt^3*s12*s13*
      s24 + 1/2*denom(1/2*s12)*mt^3*s12*s13*s23 + 1/2*denom(1/2*s12)*mt^3*s12*
      s13^2 + 1/2*denom(1/2*s12)*mt^3*mh^2*s14*s24 + 1/2*denom(1/2*s12)*mt^3*
      mh^2*s14*s23 + 1/2*denom(1/2*s12)*mt^3*mh^2*s14^2 - 1/2*denom(1/2*s12)*
      mt^3*mh^2*s13*s24 - 1/2*denom(1/2*s12)*mt^3*mh^2*s13*s23 - 1/2*denom(1/2
      *s12)*mt^3*mh^2*s13^2 + 2*denom(1/2*s12)*mt^5*s14*s24 + 2*denom(1/2*s12)
      *mt^5*s14*s23 + 2*denom(1/2*s12)*mt^5*s14^2 - 2*denom(1/2*s12)*mt^5*s13*
      s24 - 2*denom(1/2*s12)*mt^5*s13*s23 - 2*denom(1/2*s12)*mt^5*s13^2 + 
      denom(1/2*s12)*mt^5*s12*s14 - denom(1/2*s12)*mt^5*s12*s13 - denom(1/2*
      s12)*mt^5*mh^2*s14 + denom(1/2*s12)*mt^5*mh^2*s13 - 2*denom(1/2*s12)*
      mt^7*s14 + 2*denom(1/2*s12)*mt^7*s13 + 1/8*denom(1/4*s12^2)*mt*s14^3*
      s23^2 + 1/4*denom(1/4*s12^2)*mt*s13*s14^2*s23*s24 - 1/8*denom(1/4*s12^2)
      *mt*s13*s14^2*s23^2 + 1/8*denom(1/4*s12^2)*mt*s13^2*s14*s24^2 - 1/4*
      denom(1/4*s12^2)*mt*s13^2*s14*s23*s24 - 1/8*denom(1/4*s12^2)*mt*s13^3*
      s24^2 - 1/4*denom(1/4*s12^2)*mt^3*s14^2*s23*s24 - 1/4*denom(1/4*s12^2)*
      mt^3*s14^2*s23^2 - 1/4*denom(1/4*s12^2)*mt^3*s14^3*s23 - 1/4*denom(1/4*
      s12^2)*mt^3*s13*s14*s24^2 + 1/4*denom(1/4*s12^2)*mt^3*s13*s14*s23^2 - 1/
      4*denom(1/4*s12^2)*mt^3*s13*s14^2*s24 + 1/4*denom(1/4*s12^2)*mt^3*s13^2*
      s24^2 + 1/4*denom(1/4*s12^2)*mt^3*s13^2*s23*s24 + 1/4*denom(1/4*s12^2)*
      mt^3*s13^2*s14*s23 + 1/4*denom(1/4*s12^2)*mt^3*s13^3*s24 + 1/8*denom(1/4
      *s12^2)*mt^5*s14*s24^2 + 1/4*denom(1/4*s12^2)*mt^5*s14*s23*s24 + 1/8*
      denom(1/4*s12^2)*mt^5*s14*s23^2 + 1/4*denom(1/4*s12^2)*mt^5*s14^2*s24 + 
      3/4*denom(1/4*s12^2)*mt^5*s14^2*s23 + 1/8*denom(1/4*s12^2)*mt^5*s14^3 - 
      1/8*denom(1/4*s12^2)*mt^5*s13*s24^2 - 1/4*denom(1/4*s12^2)*mt^5*s13*s23*
      s24 - 1/8*denom(1/4*s12^2)*mt^5*s13*s23^2 + 1/2*denom(1/4*s12^2)*mt^5*
      s13*s14*s24 - 1/2*denom(1/4*s12^2)*mt^5*s13*s14*s23 + 1/8*denom(1/4*
      s12^2)*mt^5*s13*s14^2 - 3/4*denom(1/4*s12^2)*mt^5*s13^2*s24 - 1/4*denom(
      1/4*s12^2)*mt^5*s13^2*s23 - 1/8*denom(1/4*s12^2)*mt^5*s13^2*s14 - 1/8*
      denom(1/4*s12^2)*mt^5*s13^3 - 1/2*denom(1/4*s12^2)*mt^7*s14*s24 - 1/2*
      denom(1/4*s12^2)*mt^7*s14*s23 - 1/2*denom(1/4*s12^2)*mt^7*s14^2 + 1/2*
      denom(1/4*s12^2)*mt^7*s13*s24 + 1/2*denom(1/4*s12^2)*mt^7*s13*s23 + 1/2*
      denom(1/4*s12^2)*mt^7*s13^2 + 1/2*denom(1/4*s12^2)*mt^9*s14 - 1/2*denom(
      1/4*s12^2)*mt^9*s13;
 
 .sort
id KMatrix(8,2) =   - mt^3*s14*s24 - mt^3*s14*s23 - mt^3*s14^2 + mt^3*s13*s24
       + mt^3*s13*s23 + mt^3*s13^2 - mt^3*s12*s14 + mt^3*s12*s13 + mt^3*mh^2*
      s14 - mt^3*mh^2*s13 + 2*mt^5*s14 - 2*mt^5*s13 + 1/2*denom(1/2*s12)*mt*
      s14^2*s24^2 + 1/2*denom(1/2*s12)*mt*s14^2*s23*s24 + 1/2*denom(1/2*s12)*
      mt*s14^3*s24 - 1/2*denom(1/2*s12)*mt*s13*s14*s24^2 - 1/2*denom(1/2*s12)*
      mt*s13*s14*s23*s24 - 1/2*denom(1/2*s12)*mt*s13^2*s14*s24 + 1/2*denom(1/2
      *s12)*mt*s12*s14^2*s24 - 1/2*denom(1/2*s12)*mt*s12*s13*s14*s24 - 1/2*
      denom(1/2*s12)*mt*mh^2*s14^2*s24 + 1/2*denom(1/2*s12)*mt*mh^2*s13*s14*
      s24 - 1/2*denom(1/2*s12)*mt^3*s14*s24^2 - 1/2*denom(1/2*s12)*mt^3*s14*
      s23*s24 - 2*denom(1/2*s12)*mt^3*s14^2*s24 - denom(1/2*s12)*mt^3*s14^2*
      s23 - 1/2*denom(1/2*s12)*mt^3*s14^3 + 1/2*denom(1/2*s12)*mt^3*s13*s24^2
       + 1/2*denom(1/2*s12)*mt^3*s13*s23*s24 + denom(1/2*s12)*mt^3*s13*s14*s24
       + denom(1/2*s12)*mt^3*s13*s14*s23 + denom(1/2*s12)*mt^3*s13^2*s24 + 1/2
      *denom(1/2*s12)*mt^3*s13^2*s14 - 1/2*denom(1/2*s12)*mt^3*s12*s14*s24 - 1/
      2*denom(1/2*s12)*mt^3*s12*s14^2 + 1/2*denom(1/2*s12)*mt^3*s12*s13*s24 + 
      1/2*denom(1/2*s12)*mt^3*s12*s13*s14 + 1/2*denom(1/2*s12)*mt^3*mh^2*s14*
      s24 + 1/2*denom(1/2*s12)*mt^3*mh^2*s14^2 - 1/2*denom(1/2*s12)*mt^3*mh^2*
      s13*s24 - 1/2*denom(1/2*s12)*mt^3*mh^2*s13*s14 + 2*denom(1/2*s12)*mt^5*
      s14*s24 + denom(1/2*s12)*mt^5*s14*s23 + 2*denom(1/2*s12)*mt^5*s14^2 - 2*
      denom(1/2*s12)*mt^5*s13*s24 - denom(1/2*s12)*mt^5*s13*s23 - denom(1/2*
      s12)*mt^5*s13*s14 - denom(1/2*s12)*mt^5*s13^2 + 1/2*denom(1/2*s12)*mt^5*
      s12*s14 - 1/2*denom(1/2*s12)*mt^5*s12*s13 - 1/2*denom(1/2*s12)*mt^5*mh^2
      *s14 + 1/2*denom(1/2*s12)*mt^5*mh^2*s13 - 2*denom(1/2*s12)*mt^7*s14 + 2*
      denom(1/2*s12)*mt^7*s13 + 1/4*denom(1/4*s12^2)*mt*s14^3*s23*s24 + 1/4*
      denom(1/4*s12^2)*mt*s13*s14^2*s24^2 - 1/4*denom(1/4*s12^2)*mt*s13*s14^2*
      s23*s24 - 1/4*denom(1/4*s12^2)*mt*s13^2*s14*s24^2 - 1/4*denom(1/4*s12^2)
      *mt^3*s14^2*s24^2 - 1/2*denom(1/4*s12^2)*mt^3*s14^2*s23*s24 - 1/4*denom(
      1/4*s12^2)*mt^3*s14^3*s24 - 1/4*denom(1/4*s12^2)*mt^3*s14^3*s23 + 1/2*
      denom(1/4*s12^2)*mt^3*s13*s14*s23*s24 - 1/4*denom(1/4*s12^2)*mt^3*s13*
      s14^2*s24 + 1/4*denom(1/4*s12^2)*mt^3*s13*s14^2*s23 + 1/4*denom(1/4*
      s12^2)*mt^3*s13^2*s24^2 + 1/2*denom(1/4*s12^2)*mt^3*s13^2*s14*s24 + 1/4*
      denom(1/4*s12^2)*mt^5*s14*s24^2 + 1/4*denom(1/4*s12^2)*mt^5*s14*s23*s24
       + denom(1/4*s12^2)*mt^5*s14^2*s24 + 1/2*denom(1/4*s12^2)*mt^5*s14^2*s23
       + 1/4*denom(1/4*s12^2)*mt^5*s14^3 - 1/4*denom(1/4*s12^2)*mt^5*s13*s24^2
       - 1/4*denom(1/4*s12^2)*mt^5*s13*s23*s24 - 1/2*denom(1/4*s12^2)*mt^5*s13
      *s14*s24 - 1/2*denom(1/4*s12^2)*mt^5*s13*s14*s23 - 1/2*denom(1/4*s12^2)*
      mt^5*s13^2*s24 - 1/4*denom(1/4*s12^2)*mt^5*s13^2*s14 - 3/4*denom(1/4*
      s12^2)*mt^7*s14*s24 - 1/4*denom(1/4*s12^2)*mt^7*s14*s23 - 3/4*denom(1/4*
      s12^2)*mt^7*s14^2 + 3/4*denom(1/4*s12^2)*mt^7*s13*s24 + 1/4*denom(1/4*
      s12^2)*mt^7*s13*s23 + 1/2*denom(1/4*s12^2)*mt^7*s13*s14 + 1/4*denom(1/4*
      s12^2)*mt^7*s13^2 + 1/2*denom(1/4*s12^2)*mt^9*s14 - 1/2*denom(1/4*s12^2)
      *mt^9*s13;
 
 .sort
id KMatrix(8,3) =   - mt^3*s14*s24 - mt^3*s14*s23 - mt^3*s14^2 + mt^3*s13*s24
       + mt^3*s13*s23 + mt^3*s13^2 - mt^3*s12*s14 + mt^3*s12*s13 + mt^3*mh^2*
      s14 - mt^3*mh^2*s13 + 2*mt^5*s14 - 2*mt^5*s13 + 1/2*denom(1/2*s12)*mt*
      s14^2*s24^2 + 1/2*denom(1/2*s12)*mt*s14^2*s23*s24 + 1/2*denom(1/2*s12)*
      mt*s14^3*s24 - 1/2*denom(1/2*s12)*mt*s13*s14*s24^2 - 1/2*denom(1/2*s12)*
      mt*s13*s14*s23*s24 - 1/2*denom(1/2*s12)*mt*s13^2*s14*s24 + 1/2*denom(1/2
      *s12)*mt*s12*s14^2*s24 - 1/2*denom(1/2*s12)*mt*s12*s13*s14*s24 - 1/2*
      denom(1/2*s12)*mt*mh^2*s14^2*s24 + 1/2*denom(1/2*s12)*mt*mh^2*s13*s14*
      s24 - 1/2*denom(1/2*s12)*mt^3*s14*s24^2 - 1/2*denom(1/2*s12)*mt^3*s14*
      s23*s24 - 2*denom(1/2*s12)*mt^3*s14^2*s24 - denom(1/2*s12)*mt^3*s14^2*
      s23 - 1/2*denom(1/2*s12)*mt^3*s14^3 + 1/2*denom(1/2*s12)*mt^3*s13*s24^2
       + 1/2*denom(1/2*s12)*mt^3*s13*s23*s24 + denom(1/2*s12)*mt^3*s13*s14*s24
       + denom(1/2*s12)*mt^3*s13*s14*s23 + denom(1/2*s12)*mt^3*s13^2*s24 + 1/2
      *denom(1/2*s12)*mt^3*s13^2*s14 - 1/2*denom(1/2*s12)*mt^3*s12*s14*s24 - 1/
      2*denom(1/2*s12)*mt^3*s12*s14^2 + 1/2*denom(1/2*s12)*mt^3*s12*s13*s24 + 
      1/2*denom(1/2*s12)*mt^3*s12*s13*s14 + 1/2*denom(1/2*s12)*mt^3*mh^2*s14*
      s24 + 1/2*denom(1/2*s12)*mt^3*mh^2*s14^2 - 1/2*denom(1/2*s12)*mt^3*mh^2*
      s13*s24 - 1/2*denom(1/2*s12)*mt^3*mh^2*s13*s14 + 2*denom(1/2*s12)*mt^5*
      s14*s24 + denom(1/2*s12)*mt^5*s14*s23 + 2*denom(1/2*s12)*mt^5*s14^2 - 2*
      denom(1/2*s12)*mt^5*s13*s24 - denom(1/2*s12)*mt^5*s13*s23 - denom(1/2*
      s12)*mt^5*s13*s14 - denom(1/2*s12)*mt^5*s13^2 + 1/2*denom(1/2*s12)*mt^5*
      s12*s14 - 1/2*denom(1/2*s12)*mt^5*s12*s13 - 1/2*denom(1/2*s12)*mt^5*mh^2
      *s14 + 1/2*denom(1/2*s12)*mt^5*mh^2*s13 - 2*denom(1/2*s12)*mt^7*s14 + 2*
      denom(1/2*s12)*mt^7*s13 + 1/4*denom(1/4*s12^2)*mt*s14^3*s23*s24 + 1/4*
      denom(1/4*s12^2)*mt*s13*s14^2*s24^2 - 1/4*denom(1/4*s12^2)*mt*s13*s14^2*
      s23*s24 - 1/4*denom(1/4*s12^2)*mt*s13^2*s14*s24^2 - 1/4*denom(1/4*s12^2)
      *mt^3*s14^2*s24^2 - 1/2*denom(1/4*s12^2)*mt^3*s14^2*s23*s24 - 1/4*denom(
      1/4*s12^2)*mt^3*s14^3*s24 - 1/4*denom(1/4*s12^2)*mt^3*s14^3*s23 + 1/2*
      denom(1/4*s12^2)*mt^3*s13*s14*s23*s24 - 1/4*denom(1/4*s12^2)*mt^3*s13*
      s14^2*s24 + 1/4*denom(1/4*s12^2)*mt^3*s13*s14^2*s23 + 1/4*denom(1/4*
      s12^2)*mt^3*s13^2*s24^2 + 1/2*denom(1/4*s12^2)*mt^3*s13^2*s14*s24 + 1/4*
      denom(1/4*s12^2)*mt^5*s14*s24^2 + 1/4*denom(1/4*s12^2)*mt^5*s14*s23*s24
       + denom(1/4*s12^2)*mt^5*s14^2*s24 + 1/2*denom(1/4*s12^2)*mt^5*s14^2*s23
       + 1/4*denom(1/4*s12^2)*mt^5*s14^3 - 1/4*denom(1/4*s12^2)*mt^5*s13*s24^2
       - 1/4*denom(1/4*s12^2)*mt^5*s13*s23*s24 - 1/2*denom(1/4*s12^2)*mt^5*s13
      *s14*s24 - 1/2*denom(1/4*s12^2)*mt^5*s13*s14*s23 - 1/2*denom(1/4*s12^2)*
      mt^5*s13^2*s24 - 1/4*denom(1/4*s12^2)*mt^5*s13^2*s14 - 3/4*denom(1/4*
      s12^2)*mt^7*s14*s24 - 1/4*denom(1/4*s12^2)*mt^7*s14*s23 - 3/4*denom(1/4*
      s12^2)*mt^7*s14^2 + 3/4*denom(1/4*s12^2)*mt^7*s13*s24 + 1/4*denom(1/4*
      s12^2)*mt^7*s13*s23 + 1/2*denom(1/4*s12^2)*mt^7*s13*s14 + 1/4*denom(1/4*
      s12^2)*mt^7*s13^2 + 1/2*denom(1/4*s12^2)*mt^9*s14 - 1/2*denom(1/4*s12^2)
      *mt^9*s13;
 
 .sort
id KMatrix(8,4) =  2*mt^5*s14 - 2*mt^5*s13 - 2*denom(1/2*s12)*mt^3*s14^2*s24
       + 2*denom(1/2*s12)*mt^3*s13*s14*s24 + 2*denom(1/2*s12)*mt^5*s14*s24 + 2
      *denom(1/2*s12)*mt^5*s14^2 - 2*denom(1/2*s12)*mt^5*s13*s24 - 2*denom(1/2
      *s12)*mt^5*s13*s14 - 2*denom(1/2*s12)*mt^7*s14 + 2*denom(1/2*s12)*mt^7*
      s13 + 1/2*denom(1/4*s12^2)*mt*s14^3*s24^2 - 1/2*denom(1/4*s12^2)*mt*s13*
      s14^2*s24^2 - denom(1/4*s12^2)*mt^3*s14^2*s24^2 - denom(1/4*s12^2)*mt^3*
      s14^3*s24 + denom(1/4*s12^2)*mt^3*s13*s14*s24^2 + denom(1/4*s12^2)*mt^3*
      s13*s14^2*s24 + 1/2*denom(1/4*s12^2)*mt^5*s14*s24^2 + 2*denom(1/4*s12^2)
      *mt^5*s14^2*s24 + 1/2*denom(1/4*s12^2)*mt^5*s14^3 - 1/2*denom(1/4*s12^2)
      *mt^5*s13*s24^2 - 2*denom(1/4*s12^2)*mt^5*s13*s14*s24 - 1/2*denom(1/4*
      s12^2)*mt^5*s13*s14^2 - denom(1/4*s12^2)*mt^7*s14*s24 - denom(1/4*s12^2)
      *mt^7*s14^2 + denom(1/4*s12^2)*mt^7*s13*s24 + denom(1/4*s12^2)*mt^7*s13*
      s14 + 1/2*denom(1/4*s12^2)*mt^9*s14 - 1/2*denom(1/4*s12^2)*mt^9*s13;
 
 .sort
id KMatrix(8,5) =  1/2*s13*s14*s24^2 + s13*s14*s23*s24 + 1/2*s13*s14*s23^2 + 
      s13*s14^2*s24 + s13*s14^2*s23 + 1/2*s13*s14^3 + s13^2*s14*s24 + s13^2*
      s14*s23 + s13^2*s14^2 + 1/2*s13^3*s14 + s12*s13*s14*s24 + s12*s13*s14*
      s23 + s12*s13*s14^2 + s12*s13^2*s14 + 1/2*s12^2*s13*s14 - mh^2*s13*s14*
      s24 - mh^2*s13*s14*s23 - mh^2*s13*s14^2 - mh^2*s13^2*s14 - mh^2*s12*s13*
      s14 + 1/2*mh^4*s13*s14 - 1/2*mt^2*s14*s24^2 - mt^2*s14*s23*s24 - 1/2*
      mt^2*s14*s23^2 - mt^2*s14^2*s24 - mt^2*s14^2*s23 - 1/2*mt^2*s14^3 - 1/2*
      mt^2*s13*s24^2 - mt^2*s13*s23*s24 - 1/2*mt^2*s13*s23^2 - 4*mt^2*s13*s14*
      s24 - 4*mt^2*s13*s14*s23 - 7/2*mt^2*s13*s14^2 - mt^2*s13^2*s24 - mt^2*
      s13^2*s23 - 7/2*mt^2*s13^2*s14 - 1/2*mt^2*s13^3 - mt^2*s12*s14*s24 - 
      mt^2*s12*s14*s23 - mt^2*s12*s14^2 - mt^2*s12*s13*s24 - mt^2*s12*s13*s23
       - 4*mt^2*s12*s13*s14 - mt^2*s12*s13^2 - 1/2*mt^2*s12^2*s14 - 1/2*mt^2*
      s12^2*s13 + mt^2*mh^2*s14*s24 + mt^2*mh^2*s14*s23 + mt^2*mh^2*s14^2 + 
      mt^2*mh^2*s13*s24 + mt^2*mh^2*s13*s23 + 4*mt^2*mh^2*s13*s14 + mt^2*mh^2*
      s13^2 + mt^2*mh^2*s12*s14 + mt^2*mh^2*s12*s13 - 1/2*mt^2*mh^4*s14 - 1/2*
      mt^2*mh^4*s13 + 1/2*mt^4*s24^2 + mt^4*s23*s24 + 1/2*mt^4*s23^2 + 3*mt^4*
      s14*s24 + 3*mt^4*s14*s23 + 5/2*mt^4*s14^2 + 3*mt^4*s13*s24 + 3*mt^4*s13*
      s23 + 7*mt^4*s13*s14 + 5/2*mt^4*s13^2 + mt^4*s12*s24 + mt^4*s12*s23 + 3*
      mt^4*s12*s14 + 3*mt^4*s12*s13 + 1/2*mt^4*s12^2 - mt^4*mh^2*s24 - mt^4*
      mh^2*s23 - 3*mt^4*mh^2*s14 - 3*mt^4*mh^2*s13 - mt^4*mh^2*s12 + 1/2*mt^4*
      mh^4 - 2*mt^6*s24 - 2*mt^6*s23 - 4*mt^6*s14 - 4*mt^6*s13 - 2*mt^6*s12 + 
      2*mt^6*mh^2 + 2*mt^8 + 1/2*denom(1/2*s12)*s13*s14^2*s23*s24 + 1/2*denom(
      1/2*s12)*s13*s14^2*s23^2 + 1/2*denom(1/2*s12)*s13*s14^3*s23 + 1/2*denom(
      1/2*s12)*s13^2*s14*s24^2 + 1/2*denom(1/2*s12)*s13^2*s14*s23*s24 + 1/2*
      denom(1/2*s12)*s13^2*s14^2*s24 + 1/2*denom(1/2*s12)*s13^2*s14^2*s23 + 1/
      2*denom(1/2*s12)*s13^3*s14*s24 + 1/2*denom(1/2*s12)*s12*s13*s14^2*s23 + 
      1/2*denom(1/2*s12)*s12*s13^2*s14*s24 - 1/2*denom(1/2*s12)*mh^2*s13*s14^2
      *s23 - 1/2*denom(1/2*s12)*mh^2*s13^2*s14*s24 - 1/2*denom(1/2*s12)*mt^2*
      s14^2*s23*s24 - 1/2*denom(1/2*s12)*mt^2*s14^2*s23^2 - 1/2*denom(1/2*s12)
      *mt^2*s14^3*s23 - denom(1/2*s12)*mt^2*s13*s14*s24^2 - 2*denom(1/2*s12)*
      mt^2*s13*s14*s23*s24 - denom(1/2*s12)*mt^2*s13*s14*s23^2 - 3/2*denom(1/2
      *s12)*mt^2*s13*s14^2*s24 - 3*denom(1/2*s12)*mt^2*s13*s14^2*s23 - 1/2*
      denom(1/2*s12)*mt^2*s13*s14^3 - 1/2*denom(1/2*s12)*mt^2*s13^2*s24^2 - 1/
      2*denom(1/2*s12)*mt^2*s13^2*s23*s24 - 3*denom(1/2*s12)*mt^2*s13^2*s14*
      s24 - 3/2*denom(1/2*s12)*mt^2*s13^2*s14*s23 - denom(1/2*s12)*mt^2*s13^2*
      s14^2 - 1/2*denom(1/2*s12)*mt^2*s13^3*s24 - 1/2*denom(1/2*s12)*mt^2*
      s13^3*s14 - 1/2*denom(1/2*s12)*mt^2*s12*s14^2*s23 - denom(1/2*s12)*mt^2*
      s12*s13*s14*s24 - denom(1/2*s12)*mt^2*s12*s13*s14*s23 - 1/2*denom(1/2*
      s12)*mt^2*s12*s13*s14^2 - 1/2*denom(1/2*s12)*mt^2*s12*s13^2*s24 - 1/2*
      denom(1/2*s12)*mt^2*s12*s13^2*s14 + 1/2*denom(1/2*s12)*mt^2*mh^2*s14^2*
      s23 + denom(1/2*s12)*mt^2*mh^2*s13*s14*s24 + denom(1/2*s12)*mt^2*mh^2*
      s13*s14*s23 + 1/2*denom(1/2*s12)*mt^2*mh^2*s13*s14^2 + 1/2*denom(1/2*s12
      )*mt^2*mh^2*s13^2*s24 + 1/2*denom(1/2*s12)*mt^2*mh^2*s13^2*s14 + 1/2*
      denom(1/2*s12)*mt^4*s14*s24^2 + 3/2*denom(1/2*s12)*mt^4*s14*s23*s24 + 
      denom(1/2*s12)*mt^4*s14*s23^2 + denom(1/2*s12)*mt^4*s14^2*s24 + 5/2*
      denom(1/2*s12)*mt^4*s14^2*s23 + 1/2*denom(1/2*s12)*mt^4*s14^3 + denom(1/
      2*s12)*mt^4*s13*s24^2 + 3/2*denom(1/2*s12)*mt^4*s13*s23*s24 + 1/2*denom(
      1/2*s12)*mt^4*s13*s23^2 + 11/2*denom(1/2*s12)*mt^4*s13*s14*s24 + 11/2*
      denom(1/2*s12)*mt^4*s13*s14*s23 + 7/2*denom(1/2*s12)*mt^4*s13*s14^2 + 5/
      2*denom(1/2*s12)*mt^4*s13^2*s24 + denom(1/2*s12)*mt^4*s13^2*s23 + 7/2*
      denom(1/2*s12)*mt^4*s13^2*s14 + 1/2*denom(1/2*s12)*mt^4*s13^3 + 1/2*
      denom(1/2*s12)*mt^4*s12*s14*s24 + denom(1/2*s12)*mt^4*s12*s14*s23 + 1/2*
      denom(1/2*s12)*mt^4*s12*s14^2 + denom(1/2*s12)*mt^4*s12*s13*s24 + 1/2*
      denom(1/2*s12)*mt^4*s12*s13*s23 + 2*denom(1/2*s12)*mt^4*s12*s13*s14 + 1/
      2*denom(1/2*s12)*mt^4*s12*s13^2 - 1/2*denom(1/2*s12)*mt^4*mh^2*s14*s24
       - denom(1/2*s12)*mt^4*mh^2*s14*s23 - 1/2*denom(1/2*s12)*mt^4*mh^2*s14^2
       - denom(1/2*s12)*mt^4*mh^2*s13*s24 - 1/2*denom(1/2*s12)*mt^4*mh^2*s13*
      s23 - 2*denom(1/2*s12)*mt^4*mh^2*s13*s14 - 1/2*denom(1/2*s12)*mt^4*mh^2*
      s13^2 - 1/2*denom(1/2*s12)*mt^6*s24^2 - denom(1/2*s12)*mt^6*s23*s24 - 1/
      2*denom(1/2*s12)*mt^6*s23^2 - 3*denom(1/2*s12)*mt^6*s14*s24 - 4*denom(1/
      2*s12)*mt^6*s14*s23 - 5/2*denom(1/2*s12)*mt^6*s14^2 - 4*denom(1/2*s12)*
      mt^6*s13*s24 - 3*denom(1/2*s12)*mt^6*s13*s23 - 7*denom(1/2*s12)*mt^6*s13
      *s14 - 5/2*denom(1/2*s12)*mt^6*s13^2 - 1/2*denom(1/2*s12)*mt^6*s12*s24
       - 1/2*denom(1/2*s12)*mt^6*s12*s23 - 3/2*denom(1/2*s12)*mt^6*s12*s14 - 3/
      2*denom(1/2*s12)*mt^6*s12*s13 + 1/2*denom(1/2*s12)*mt^6*mh^2*s24 + 1/2*
      denom(1/2*s12)*mt^6*mh^2*s23 + 3/2*denom(1/2*s12)*mt^6*mh^2*s14 + 3/2*
      denom(1/2*s12)*mt^6*mh^2*s13 + 2*denom(1/2*s12)*mt^8*s24 + 2*denom(1/2*
      s12)*mt^8*s23 + 4*denom(1/2*s12)*mt^8*s14 + 4*denom(1/2*s12)*mt^8*s13 + 
      denom(1/2*s12)*mt^8*s12 - denom(1/2*s12)*mt^8*mh^2 - 2*denom(1/2*s12)*
      mt^10 + 1/8*denom(1/4*s12^2)*s13*s14^3*s23^2 + 1/4*denom(1/4*s12^2)*
      s13^2*s14^2*s23*s24 + 1/8*denom(1/4*s12^2)*s13^3*s14*s24^2 - 1/8*denom(1/
      4*s12^2)*mt^2*s14^3*s23^2 - 1/2*denom(1/4*s12^2)*mt^2*s13*s14^2*s23*s24
       - 3/8*denom(1/4*s12^2)*mt^2*s13*s14^2*s23^2 - 1/4*denom(1/4*s12^2)*mt^2
      *s13*s14^3*s23 - 3/8*denom(1/4*s12^2)*mt^2*s13^2*s14*s24^2 - 1/2*denom(1/
      4*s12^2)*mt^2*s13^2*s14*s23*s24 - 1/4*denom(1/4*s12^2)*mt^2*s13^2*s14^2*
      s24 - 1/4*denom(1/4*s12^2)*mt^2*s13^2*s14^2*s23 - 1/8*denom(1/4*s12^2)*
      mt^2*s13^3*s24^2 - 1/4*denom(1/4*s12^2)*mt^2*s13^3*s14*s24 + 1/4*denom(1/
      4*s12^2)*mt^4*s14^2*s23*s24 + 3/8*denom(1/4*s12^2)*mt^4*s14^2*s23^2 + 1/
      4*denom(1/4*s12^2)*mt^4*s14^3*s23 + 3/8*denom(1/4*s12^2)*mt^4*s13*s14*
      s24^2 + denom(1/4*s12^2)*mt^4*s13*s14*s23*s24 + 3/8*denom(1/4*s12^2)*
      mt^4*s13*s14*s23^2 + 1/2*denom(1/4*s12^2)*mt^4*s13*s14^2*s24 + 5/4*
      denom(1/4*s12^2)*mt^4*s13*s14^2*s23 + 1/8*denom(1/4*s12^2)*mt^4*s13*
      s14^3 + 3/8*denom(1/4*s12^2)*mt^4*s13^2*s24^2 + 1/4*denom(1/4*s12^2)*
      mt^4*s13^2*s23*s24 + 5/4*denom(1/4*s12^2)*mt^4*s13^2*s14*s24 + 1/2*
      denom(1/4*s12^2)*mt^4*s13^2*s14*s23 + 1/4*denom(1/4*s12^2)*mt^4*s13^2*
      s14^2 + 1/4*denom(1/4*s12^2)*mt^4*s13^3*s24 + 1/8*denom(1/4*s12^2)*mt^4*
      s13^3*s14 - 1/8*denom(1/4*s12^2)*mt^6*s14*s24^2 - 1/2*denom(1/4*s12^2)*
      mt^6*s14*s23*s24 - 3/8*denom(1/4*s12^2)*mt^6*s14*s23^2 - 1/4*denom(1/4*
      s12^2)*mt^6*s14^2*s24 - denom(1/4*s12^2)*mt^6*s14^2*s23 - 1/8*denom(1/4*
      s12^2)*mt^6*s14^3 - 3/8*denom(1/4*s12^2)*mt^6*s13*s24^2 - 1/2*denom(1/4*
      s12^2)*mt^6*s13*s23*s24 - 1/8*denom(1/4*s12^2)*mt^6*s13*s23^2 - 7/4*
      denom(1/4*s12^2)*mt^6*s13*s14*s24 - 7/4*denom(1/4*s12^2)*mt^6*s13*s14*
      s23 - 7/8*denom(1/4*s12^2)*mt^6*s13*s14^2 - denom(1/4*s12^2)*mt^6*s13^2*
      s24 - 1/4*denom(1/4*s12^2)*mt^6*s13^2*s23 - 7/8*denom(1/4*s12^2)*mt^6*
      s13^2*s14 - 1/8*denom(1/4*s12^2)*mt^6*s13^3 + 1/8*denom(1/4*s12^2)*mt^8*
      s24^2 + 1/4*denom(1/4*s12^2)*mt^8*s23*s24 + 1/8*denom(1/4*s12^2)*mt^8*
      s23^2 + 3/4*denom(1/4*s12^2)*mt^8*s14*s24 + 5/4*denom(1/4*s12^2)*mt^8*
      s14*s23 + 5/8*denom(1/4*s12^2)*mt^8*s14^2 + 5/4*denom(1/4*s12^2)*mt^8*
      s13*s24 + 3/4*denom(1/4*s12^2)*mt^8*s13*s23 + 7/4*denom(1/4*s12^2)*mt^8*
      s13*s14 + 5/8*denom(1/4*s12^2)*mt^8*s13^2 - 1/2*denom(1/4*s12^2)*mt^10*
      s24 - 1/2*denom(1/4*s12^2)*mt^10*s23 - denom(1/4*s12^2)*mt^10*s14 - 
      denom(1/4*s12^2)*mt^10*s13 + 1/2*denom(1/4*s12^2)*mt^12;
 
 .sort
id KMatrix(8,6) =   - mt^2*s13*s14*s24 - mt^2*s13*s14*s23 - mt^2*s13*s14^2 - 
      mt^2*s13^2*s14 - mt^2*s12*s13*s14 + mt^2*mh^2*s13*s14 + mt^4*s14*s24 + 
      mt^4*s14*s23 + mt^4*s14^2 + mt^4*s13*s24 + mt^4*s13*s23 + 4*mt^4*s13*s14
       + mt^4*s13^2 + mt^4*s12*s14 + mt^4*s12*s13 - mt^4*mh^2*s14 - mt^4*mh^2*
      s13 - mt^6*s24 - mt^6*s23 - 3*mt^6*s14 - 3*mt^6*s13 - mt^6*s12 + mt^6*
      mh^2 + 2*mt^8 + 1/2*denom(1/2*s12)*s13*s14^2*s24^2 + 1/2*denom(1/2*s12)*
      s13*s14^2*s23*s24 + 1/2*denom(1/2*s12)*s13*s14^3*s24 + 1/2*denom(1/2*s12
      )*s13^2*s14^2*s24 + 1/2*denom(1/2*s12)*s12*s13*s14^2*s24 - 1/2*denom(1/2
      *s12)*mh^2*s13*s14^2*s24 - 1/2*denom(1/2*s12)*mt^2*s14^2*s24^2 - 1/2*
      denom(1/2*s12)*mt^2*s14^2*s23*s24 - 1/2*denom(1/2*s12)*mt^2*s14^3*s24 - 
      denom(1/2*s12)*mt^2*s13*s14*s24^2 - denom(1/2*s12)*mt^2*s13*s14*s23*s24
       - 3*denom(1/2*s12)*mt^2*s13*s14^2*s24 - denom(1/2*s12)*mt^2*s13*s14^2*
      s23 - 1/2*denom(1/2*s12)*mt^2*s13*s14^3 - 3/2*denom(1/2*s12)*mt^2*s13^2*
      s14*s24 - 1/2*denom(1/2*s12)*mt^2*s13^2*s14^2 - 1/2*denom(1/2*s12)*mt^2*
      s12*s14^2*s24 - denom(1/2*s12)*mt^2*s12*s13*s14*s24 - 1/2*denom(1/2*s12)
      *mt^2*s12*s13*s14^2 + 1/2*denom(1/2*s12)*mt^2*mh^2*s14^2*s24 + denom(1/2
      *s12)*mt^2*mh^2*s13*s14*s24 + 1/2*denom(1/2*s12)*mt^2*mh^2*s13*s14^2 + 
      denom(1/2*s12)*mt^4*s14*s24^2 + denom(1/2*s12)*mt^4*s14*s23*s24 + 5/2*
      denom(1/2*s12)*mt^4*s14^2*s24 + denom(1/2*s12)*mt^4*s14^2*s23 + 1/2*
      denom(1/2*s12)*mt^4*s14^3 + 1/2*denom(1/2*s12)*mt^4*s13*s24^2 + 1/2*
      denom(1/2*s12)*mt^4*s13*s23*s24 + 11/2*denom(1/2*s12)*mt^4*s13*s14*s24
       + 2*denom(1/2*s12)*mt^4*s13*s14*s23 + 3*denom(1/2*s12)*mt^4*s13*s14^2
       + denom(1/2*s12)*mt^4*s13^2*s24 + 3/2*denom(1/2*s12)*mt^4*s13^2*s14 + 
      denom(1/2*s12)*mt^4*s12*s14*s24 + 1/2*denom(1/2*s12)*mt^4*s12*s14^2 + 1/
      2*denom(1/2*s12)*mt^4*s12*s13*s24 + denom(1/2*s12)*mt^4*s12*s13*s14 - 
      denom(1/2*s12)*mt^4*mh^2*s14*s24 - 1/2*denom(1/2*s12)*mt^4*mh^2*s14^2 - 
      1/2*denom(1/2*s12)*mt^4*mh^2*s13*s24 - denom(1/2*s12)*mt^4*mh^2*s13*s14
       - 1/2*denom(1/2*s12)*mt^6*s24^2 - 1/2*denom(1/2*s12)*mt^6*s23*s24 - 4*
      denom(1/2*s12)*mt^6*s14*s24 - 2*denom(1/2*s12)*mt^6*s14*s23 - 5/2*denom(
      1/2*s12)*mt^6*s14^2 - 3*denom(1/2*s12)*mt^6*s13*s24 - denom(1/2*s12)*
      mt^6*s13*s23 - 11/2*denom(1/2*s12)*mt^6*s13*s14 - denom(1/2*s12)*mt^6*
      s13^2 - 1/2*denom(1/2*s12)*mt^6*s12*s24 - denom(1/2*s12)*mt^6*s12*s14 - 
      1/2*denom(1/2*s12)*mt^6*s12*s13 + 1/2*denom(1/2*s12)*mt^6*mh^2*s24 + 
      denom(1/2*s12)*mt^6*mh^2*s14 + 1/2*denom(1/2*s12)*mt^6*mh^2*s13 + 2*
      denom(1/2*s12)*mt^8*s24 + denom(1/2*s12)*mt^8*s23 + 4*denom(1/2*s12)*
      mt^8*s14 + 3*denom(1/2*s12)*mt^8*s13 + 1/2*denom(1/2*s12)*mt^8*s12 - 1/2
      *denom(1/2*s12)*mt^8*mh^2 - 2*denom(1/2*s12)*mt^10 + 1/4*denom(1/4*s12^2
      )*s13*s14^3*s23*s24 + 1/4*denom(1/4*s12^2)*s13^2*s14^2*s24^2 - 1/4*
      denom(1/4*s12^2)*mt^2*s14^3*s23*s24 - 1/2*denom(1/4*s12^2)*mt^2*s13*
      s14^2*s24^2 - 3/4*denom(1/4*s12^2)*mt^2*s13*s14^2*s23*s24 - 1/4*denom(1/
      4*s12^2)*mt^2*s13*s14^3*s24 - 1/4*denom(1/4*s12^2)*mt^2*s13*s14^3*s23 - 
      1/2*denom(1/4*s12^2)*mt^2*s13^2*s14*s24^2 - 1/2*denom(1/4*s12^2)*mt^2*
      s13^2*s14^2*s24 + 1/4*denom(1/4*s12^2)*mt^4*s14^2*s24^2 + 3/4*denom(1/4*
      s12^2)*mt^4*s14^2*s23*s24 + 1/4*denom(1/4*s12^2)*mt^4*s14^3*s24 + 1/4*
      denom(1/4*s12^2)*mt^4*s14^3*s23 + denom(1/4*s12^2)*mt^4*s13*s14*s24^2 + 
      3/4*denom(1/4*s12^2)*mt^4*s13*s14*s23*s24 + 7/4*denom(1/4*s12^2)*mt^4*
      s13*s14^2*s24 + 3/4*denom(1/4*s12^2)*mt^4*s13*s14^2*s23 + 1/4*denom(1/4*
      s12^2)*mt^4*s13*s14^3 + 1/4*denom(1/4*s12^2)*mt^4*s13^2*s24^2 + denom(1/
      4*s12^2)*mt^4*s13^2*s14*s24 + 1/4*denom(1/4*s12^2)*mt^4*s13^2*s14^2 - 1/
      2*denom(1/4*s12^2)*mt^6*s14*s24^2 - 3/4*denom(1/4*s12^2)*mt^6*s14*s23*
      s24 - 5/4*denom(1/4*s12^2)*mt^6*s14^2*s24 - 3/4*denom(1/4*s12^2)*mt^6*
      s14^2*s23 - 1/4*denom(1/4*s12^2)*mt^6*s14^3 - 1/2*denom(1/4*s12^2)*mt^6*
      s13*s24^2 - 1/4*denom(1/4*s12^2)*mt^6*s13*s23*s24 - 11/4*denom(1/4*s12^2
      )*mt^6*s13*s14*s24 - 3/4*denom(1/4*s12^2)*mt^6*s13*s14*s23 - 5/4*denom(1/
      4*s12^2)*mt^6*s13*s14^2 - 1/2*denom(1/4*s12^2)*mt^6*s13^2*s24 - 1/2*
      denom(1/4*s12^2)*mt^6*s13^2*s14 + 1/4*denom(1/4*s12^2)*mt^8*s24^2 + 1/4*
      denom(1/4*s12^2)*mt^8*s23*s24 + 7/4*denom(1/4*s12^2)*mt^8*s14*s24 + 3/4*
      denom(1/4*s12^2)*mt^8*s14*s23 + denom(1/4*s12^2)*mt^8*s14^2 + 5/4*denom(
      1/4*s12^2)*mt^8*s13*s24 + 1/4*denom(1/4*s12^2)*mt^8*s13*s23 + 7/4*denom(
      1/4*s12^2)*mt^8*s13*s14 + 1/4*denom(1/4*s12^2)*mt^8*s13^2 - 3/4*denom(1/
      4*s12^2)*mt^10*s24 - 1/4*denom(1/4*s12^2)*mt^10*s23 - 5/4*denom(1/4*
      s12^2)*mt^10*s14 - 3/4*denom(1/4*s12^2)*mt^10*s13 + 1/2*denom(1/4*s12^2)
      *mt^12;
 
 .sort
id KMatrix(8,7) =   - mt^2*s13*s14*s24 - mt^2*s13*s14*s23 - mt^2*s13*s14^2 - 
      mt^2*s13^2*s14 - mt^2*s12*s13*s14 + mt^2*mh^2*s13*s14 + mt^4*s14*s24 + 
      mt^4*s14*s23 + mt^4*s14^2 + mt^4*s13*s24 + mt^4*s13*s23 + 4*mt^4*s13*s14
       + mt^4*s13^2 + mt^4*s12*s14 + mt^4*s12*s13 - mt^4*mh^2*s14 - mt^4*mh^2*
      s13 - mt^6*s24 - mt^6*s23 - 3*mt^6*s14 - 3*mt^6*s13 - mt^6*s12 + mt^6*
      mh^2 + 2*mt^8 + 1/2*denom(1/2*s12)*s13*s14^2*s24^2 + 1/2*denom(1/2*s12)*
      s13*s14^2*s23*s24 + 1/2*denom(1/2*s12)*s13*s14^3*s24 + 1/2*denom(1/2*s12
      )*s13^2*s14^2*s24 + 1/2*denom(1/2*s12)*s12*s13*s14^2*s24 - 1/2*denom(1/2
      *s12)*mh^2*s13*s14^2*s24 - 1/2*denom(1/2*s12)*mt^2*s14^2*s24^2 - 1/2*
      denom(1/2*s12)*mt^2*s14^2*s23*s24 - 1/2*denom(1/2*s12)*mt^2*s14^3*s24 - 
      denom(1/2*s12)*mt^2*s13*s14*s24^2 - denom(1/2*s12)*mt^2*s13*s14*s23*s24
       - 3*denom(1/2*s12)*mt^2*s13*s14^2*s24 - denom(1/2*s12)*mt^2*s13*s14^2*
      s23 - 1/2*denom(1/2*s12)*mt^2*s13*s14^3 - 3/2*denom(1/2*s12)*mt^2*s13^2*
      s14*s24 - 1/2*denom(1/2*s12)*mt^2*s13^2*s14^2 - 1/2*denom(1/2*s12)*mt^2*
      s12*s14^2*s24 - denom(1/2*s12)*mt^2*s12*s13*s14*s24 - 1/2*denom(1/2*s12)
      *mt^2*s12*s13*s14^2 + 1/2*denom(1/2*s12)*mt^2*mh^2*s14^2*s24 + denom(1/2
      *s12)*mt^2*mh^2*s13*s14*s24 + 1/2*denom(1/2*s12)*mt^2*mh^2*s13*s14^2 + 
      denom(1/2*s12)*mt^4*s14*s24^2 + denom(1/2*s12)*mt^4*s14*s23*s24 + 5/2*
      denom(1/2*s12)*mt^4*s14^2*s24 + denom(1/2*s12)*mt^4*s14^2*s23 + 1/2*
      denom(1/2*s12)*mt^4*s14^3 + 1/2*denom(1/2*s12)*mt^4*s13*s24^2 + 1/2*
      denom(1/2*s12)*mt^4*s13*s23*s24 + 11/2*denom(1/2*s12)*mt^4*s13*s14*s24
       + 2*denom(1/2*s12)*mt^4*s13*s14*s23 + 3*denom(1/2*s12)*mt^4*s13*s14^2
       + denom(1/2*s12)*mt^4*s13^2*s24 + 3/2*denom(1/2*s12)*mt^4*s13^2*s14 + 
      denom(1/2*s12)*mt^4*s12*s14*s24 + 1/2*denom(1/2*s12)*mt^4*s12*s14^2 + 1/
      2*denom(1/2*s12)*mt^4*s12*s13*s24 + denom(1/2*s12)*mt^4*s12*s13*s14 - 
      denom(1/2*s12)*mt^4*mh^2*s14*s24 - 1/2*denom(1/2*s12)*mt^4*mh^2*s14^2 - 
      1/2*denom(1/2*s12)*mt^4*mh^2*s13*s24 - denom(1/2*s12)*mt^4*mh^2*s13*s14
       - 1/2*denom(1/2*s12)*mt^6*s24^2 - 1/2*denom(1/2*s12)*mt^6*s23*s24 - 4*
      denom(1/2*s12)*mt^6*s14*s24 - 2*denom(1/2*s12)*mt^6*s14*s23 - 5/2*denom(
      1/2*s12)*mt^6*s14^2 - 3*denom(1/2*s12)*mt^6*s13*s24 - denom(1/2*s12)*
      mt^6*s13*s23 - 11/2*denom(1/2*s12)*mt^6*s13*s14 - denom(1/2*s12)*mt^6*
      s13^2 - 1/2*denom(1/2*s12)*mt^6*s12*s24 - denom(1/2*s12)*mt^6*s12*s14 - 
      1/2*denom(1/2*s12)*mt^6*s12*s13 + 1/2*denom(1/2*s12)*mt^6*mh^2*s24 + 
      denom(1/2*s12)*mt^6*mh^2*s14 + 1/2*denom(1/2*s12)*mt^6*mh^2*s13 + 2*
      denom(1/2*s12)*mt^8*s24 + denom(1/2*s12)*mt^8*s23 + 4*denom(1/2*s12)*
      mt^8*s14 + 3*denom(1/2*s12)*mt^8*s13 + 1/2*denom(1/2*s12)*mt^8*s12 - 1/2
      *denom(1/2*s12)*mt^8*mh^2 - 2*denom(1/2*s12)*mt^10 + 1/4*denom(1/4*s12^2
      )*s13*s14^3*s23*s24 + 1/4*denom(1/4*s12^2)*s13^2*s14^2*s24^2 - 1/4*
      denom(1/4*s12^2)*mt^2*s14^3*s23*s24 - 1/2*denom(1/4*s12^2)*mt^2*s13*
      s14^2*s24^2 - 3/4*denom(1/4*s12^2)*mt^2*s13*s14^2*s23*s24 - 1/4*denom(1/
      4*s12^2)*mt^2*s13*s14^3*s24 - 1/4*denom(1/4*s12^2)*mt^2*s13*s14^3*s23 - 
      1/2*denom(1/4*s12^2)*mt^2*s13^2*s14*s24^2 - 1/2*denom(1/4*s12^2)*mt^2*
      s13^2*s14^2*s24 + 1/4*denom(1/4*s12^2)*mt^4*s14^2*s24^2 + 3/4*denom(1/4*
      s12^2)*mt^4*s14^2*s23*s24 + 1/4*denom(1/4*s12^2)*mt^4*s14^3*s24 + 1/4*
      denom(1/4*s12^2)*mt^4*s14^3*s23 + denom(1/4*s12^2)*mt^4*s13*s14*s24^2 + 
      3/4*denom(1/4*s12^2)*mt^4*s13*s14*s23*s24 + 7/4*denom(1/4*s12^2)*mt^4*
      s13*s14^2*s24 + 3/4*denom(1/4*s12^2)*mt^4*s13*s14^2*s23 + 1/4*denom(1/4*
      s12^2)*mt^4*s13*s14^3 + 1/4*denom(1/4*s12^2)*mt^4*s13^2*s24^2 + denom(1/
      4*s12^2)*mt^4*s13^2*s14*s24 + 1/4*denom(1/4*s12^2)*mt^4*s13^2*s14^2 - 1/
      2*denom(1/4*s12^2)*mt^6*s14*s24^2 - 3/4*denom(1/4*s12^2)*mt^6*s14*s23*
      s24 - 5/4*denom(1/4*s12^2)*mt^6*s14^2*s24 - 3/4*denom(1/4*s12^2)*mt^6*
      s14^2*s23 - 1/4*denom(1/4*s12^2)*mt^6*s14^3 - 1/2*denom(1/4*s12^2)*mt^6*
      s13*s24^2 - 1/4*denom(1/4*s12^2)*mt^6*s13*s23*s24 - 11/4*denom(1/4*s12^2
      )*mt^6*s13*s14*s24 - 3/4*denom(1/4*s12^2)*mt^6*s13*s14*s23 - 5/4*denom(1/
      4*s12^2)*mt^6*s13*s14^2 - 1/2*denom(1/4*s12^2)*mt^6*s13^2*s24 - 1/2*
      denom(1/4*s12^2)*mt^6*s13^2*s14 + 1/4*denom(1/4*s12^2)*mt^8*s24^2 + 1/4*
      denom(1/4*s12^2)*mt^8*s23*s24 + 7/4*denom(1/4*s12^2)*mt^8*s14*s24 + 3/4*
      denom(1/4*s12^2)*mt^8*s14*s23 + denom(1/4*s12^2)*mt^8*s14^2 + 5/4*denom(
      1/4*s12^2)*mt^8*s13*s24 + 1/4*denom(1/4*s12^2)*mt^8*s13*s23 + 7/4*denom(
      1/4*s12^2)*mt^8*s13*s14 + 1/4*denom(1/4*s12^2)*mt^8*s13^2 - 3/4*denom(1/
      4*s12^2)*mt^10*s24 - 1/4*denom(1/4*s12^2)*mt^10*s23 - 5/4*denom(1/4*
      s12^2)*mt^10*s14 - 3/4*denom(1/4*s12^2)*mt^10*s13 + 1/2*denom(1/4*s12^2)
      *mt^12;
 
 .sort
id KMatrix(8,8) =  2*mt^4*s13*s14 - 2*mt^6*s14 - 2*mt^6*s13 + 2*mt^8 - 2*
      denom(1/2*s12)*mt^2*s13*s14^2*s24 + 2*denom(1/2*s12)*mt^4*s14^2*s24 + 4*
      denom(1/2*s12)*mt^4*s13*s14*s24 + 2*denom(1/2*s12)*mt^4*s13*s14^2 - 4*
      denom(1/2*s12)*mt^6*s14*s24 - 2*denom(1/2*s12)*mt^6*s14^2 - 2*denom(1/2*
      s12)*mt^6*s13*s24 - 4*denom(1/2*s12)*mt^6*s13*s14 + 2*denom(1/2*s12)*
      mt^8*s24 + 4*denom(1/2*s12)*mt^8*s14 + 2*denom(1/2*s12)*mt^8*s13 - 2*
      denom(1/2*s12)*mt^10 + 1/2*denom(1/4*s12^2)*s13*s14^3*s24^2 - 1/2*denom(
      1/4*s12^2)*mt^2*s14^3*s24^2 - 3/2*denom(1/4*s12^2)*mt^2*s13*s14^2*s24^2
       - denom(1/4*s12^2)*mt^2*s13*s14^3*s24 + 3/2*denom(1/4*s12^2)*mt^4*s14^2
      *s24^2 + denom(1/4*s12^2)*mt^4*s14^3*s24 + 3/2*denom(1/4*s12^2)*mt^4*s13
      *s14*s24^2 + 3*denom(1/4*s12^2)*mt^4*s13*s14^2*s24 + 1/2*denom(1/4*s12^2
      )*mt^4*s13*s14^3 - 3/2*denom(1/4*s12^2)*mt^6*s14*s24^2 - 3*denom(1/4*
      s12^2)*mt^6*s14^2*s24 - 1/2*denom(1/4*s12^2)*mt^6*s14^3 - 1/2*denom(1/4*
      s12^2)*mt^6*s13*s24^2 - 3*denom(1/4*s12^2)*mt^6*s13*s14*s24 - 3/2*denom(
      1/4*s12^2)*mt^6*s13*s14^2 + 1/2*denom(1/4*s12^2)*mt^8*s24^2 + 3*denom(1/
      4*s12^2)*mt^8*s14*s24 + 3/2*denom(1/4*s12^2)*mt^8*s14^2 + denom(1/4*
      s12^2)*mt^8*s13*s24 + 3/2*denom(1/4*s12^2)*mt^8*s13*s14 - denom(1/4*
      s12^2)*mt^10*s24 - 3/2*denom(1/4*s12^2)*mt^10*s14 - 1/2*denom(1/4*s12^2)
      *mt^10*s13 + 1/2*denom(1/4*s12^2)*mt^12;
 
 .sort
id KMatrix(8,9) =  1/4*s14*s23*s24^2 + 1/2*s14*s23^2*s24 + 1/4*s14*s23^3 + 1/2
      *s14^2*s23*s24 + 1/2*s14^2*s23^2 + 1/4*s14^3*s23 + 1/4*s13*s24^3 + 1/2*
      s13*s23*s24^2 + 1/4*s13*s23^2*s24 + 1/2*s13*s14*s24^2 + s13*s14*s23*s24
       + 1/2*s13*s14*s23^2 + 1/4*s13*s14^2*s24 + 1/2*s13*s14^2*s23 + 1/2*s13^2
      *s24^2 + 1/2*s13^2*s23*s24 + 1/2*s13^2*s14*s24 + 1/4*s13^2*s14*s23 + 1/4
      *s13^3*s24 + 1/4*s12*s24^3 + 3/4*s12*s23*s24^2 + 3/4*s12*s23^2*s24 + 1/4
      *s12*s23^3 + 3/4*s12*s14*s24^2 + 2*s12*s14*s23*s24 + 5/4*s12*s14*s23^2
       + 3/4*s12*s14^2*s24 + 5/4*s12*s14^2*s23 + 1/4*s12*s14^3 + 5/4*s12*s13*
      s24^2 + 2*s12*s13*s23*s24 + 3/4*s12*s13*s23^2 + 2*s12*s13*s14*s24 + 2*
      s12*s13*s14*s23 + 3/4*s12*s13*s14^2 + 5/4*s12*s13^2*s24 + 3/4*s12*s13^2*
      s23 + 3/4*s12*s13^2*s14 + 1/4*s12*s13^3 + 3/4*s12^2*s24^2 + 3/2*s12^2*
      s23*s24 + 3/4*s12^2*s23^2 + 3/2*s12^2*s14*s24 + 7/4*s12^2*s14*s23 + 3/4*
      s12^2*s14^2 + 7/4*s12^2*s13*s24 + 3/2*s12^2*s13*s23 + 3/2*s12^2*s13*s14
       + 3/4*s12^2*s13^2 + 3/4*s12^3*s24 + 3/4*s12^3*s23 + 3/4*s12^3*s14 + 3/4
      *s12^3*s13 + 1/4*s12^4 - 1/2*mh^2*s14*s23*s24 - 1/2*mh^2*s14*s23^2 - 1/2
      *mh^2*s14^2*s23 - 1/2*mh^2*s13*s24^2 - 1/2*mh^2*s13*s23*s24 - 1/2*mh^2*
      s13*s14*s24 - 1/2*mh^2*s13*s14*s23 - 1/2*mh^2*s13^2*s24 - 3/4*mh^2*s12*
      s24^2 - 3/2*mh^2*s12*s23*s24 - 3/4*mh^2*s12*s23^2 - 3/2*mh^2*s12*s14*s24
       - 2*mh^2*s12*s14*s23 - 3/4*mh^2*s12*s14^2 - 2*mh^2*s12*s13*s24 - 3/2*
      mh^2*s12*s13*s23 - 3/2*mh^2*s12*s13*s14 - 3/4*mh^2*s12*s13^2 - 3/2*mh^2*
      s12^2*s24 - 3/2*mh^2*s12^2*s23 - 3/2*mh^2*s12^2*s14 - 3/2*mh^2*s12^2*s13
       - 3/4*mh^2*s12^3 + 1/4*mh^4*s14*s23 + 1/4*mh^4*s13*s24 + 3/4*mh^4*s12*
      s24 + 3/4*mh^4*s12*s23 + 3/4*mh^4*s12*s14 + 3/4*mh^4*s12*s13 + 3/4*mh^4*
      s12^2 - 1/4*mh^6*s12 - 1/4*mt^2*s24^3 - 3/4*mt^2*s23*s24^2 - 3/4*mt^2*
      s23^2*s24 - 1/4*mt^2*s23^3 - 3/4*mt^2*s14*s24^2 - 5/2*mt^2*s14*s23*s24
       - 7/4*mt^2*s14*s23^2 - 3/4*mt^2*s14^2*s24 - 7/4*mt^2*s14^2*s23 - 1/4*
      mt^2*s14^3 - 7/4*mt^2*s13*s24^2 - 5/2*mt^2*s13*s23*s24 - 3/4*mt^2*s13*
      s23^2 - 5/2*mt^2*s13*s14*s24 - 5/2*mt^2*s13*s14*s23 - 3/4*mt^2*s13*s14^2
       - 7/4*mt^2*s13^2*s24 - 3/4*mt^2*s13^2*s23 - 3/4*mt^2*s13^2*s14 - 1/4*
      mt^2*s13^3 - 5/2*mt^2*s12*s24^2 - 5*mt^2*s12*s23*s24 - 5/2*mt^2*s12*
      s23^2 - 5*mt^2*s12*s14*s24 - 6*mt^2*s12*s14*s23 - 5/2*mt^2*s12*s14^2 - 6
      *mt^2*s12*s13*s24 - 5*mt^2*s12*s13*s23 - 5*mt^2*s12*s13*s14 - 5/2*mt^2*
      s12*s13^2 - 17/4*mt^2*s12^2*s24 - 17/4*mt^2*s12^2*s23 - 17/4*mt^2*s12^2*
      s14 - 17/4*mt^2*s12^2*s13 - 2*mt^2*s12^3 + 1/2*mt^2*mh^2*s24^2 + mt^2*
      mh^2*s23*s24 + 1/2*mt^2*mh^2*s23^2 + mt^2*mh^2*s14*s24 + 2*mt^2*mh^2*s14
      *s23 + 1/2*mt^2*mh^2*s14^2 + 2*mt^2*mh^2*s13*s24 + mt^2*mh^2*s13*s23 + 
      mt^2*mh^2*s13*s14 + 1/2*mt^2*mh^2*s13^2 + 9/2*mt^2*mh^2*s12*s24 + 9/2*
      mt^2*mh^2*s12*s23 + 9/2*mt^2*mh^2*s12*s14 + 9/2*mt^2*mh^2*s12*s13 + 4*
      mt^2*mh^2*s12^2 - 1/4*mt^2*mh^4*s24 - 1/4*mt^2*mh^4*s23 - 1/4*mt^2*mh^4*
      s14 - 1/4*mt^2*mh^4*s13 - 2*mt^2*mh^4*s12 + 3/2*mt^4*s24^2 + 3*mt^4*s23*
      s24 + 3/2*mt^4*s23^2 + 3*mt^4*s14*s24 + 4*mt^4*s14*s23 + 3/2*mt^4*s14^2
       + 4*mt^4*s13*s24 + 3*mt^4*s13*s23 + 3*mt^4*s13*s14 + 3/2*mt^4*s13^2 + 7
      *mt^4*s12*s24 + 7*mt^4*s12*s23 + 7*mt^4*s12*s14 + 7*mt^4*s12*s13 + 11/2*
      mt^4*s12^2 - 2*mt^4*mh^2*s24 - 2*mt^4*mh^2*s23 - 2*mt^4*mh^2*s14 - 2*
      mt^4*mh^2*s13 - 6*mt^4*mh^2*s12 + 1/2*mt^4*mh^4 - 3*mt^6*s24 - 3*mt^6*
      s23 - 3*mt^6*s14 - 3*mt^6*s13 - 6*mt^6*s12 + 2*mt^6*mh^2 + 2*mt^8 + 1/4*
      denom(1/2*s12)*s14^2*s23^2*s24 + 1/4*denom(1/2*s12)*s14^2*s23^3 + 1/4*
      denom(1/2*s12)*s14^3*s23^2 + 1/2*denom(1/2*s12)*s13*s14*s23*s24^2 + 1/2*
      denom(1/2*s12)*s13*s14*s23^2*s24 + 1/2*denom(1/2*s12)*s13*s14^2*s23*s24
       + 1/4*denom(1/2*s12)*s13*s14^2*s23^2 + 1/4*denom(1/2*s12)*s13^2*s24^3
       + 1/4*denom(1/2*s12)*s13^2*s23*s24^2 + 1/4*denom(1/2*s12)*s13^2*s14*
      s24^2 + 1/2*denom(1/2*s12)*s13^2*s14*s23*s24 + 1/4*denom(1/2*s12)*s13^3*
      s24^2 + 1/4*denom(1/2*s12)*s12*s14*s23*s24^2 + 1/2*denom(1/2*s12)*s12*
      s14*s23^2*s24 + 1/4*denom(1/2*s12)*s12*s14*s23^3 + 1/2*denom(1/2*s12)*
      s12*s14^2*s23*s24 + 3/4*denom(1/2*s12)*s12*s14^2*s23^2 + 1/4*denom(1/2*
      s12)*s12*s14^3*s23 + 1/4*denom(1/2*s12)*s12*s13*s24^3 + 1/2*denom(1/2*
      s12)*s12*s13*s23*s24^2 + 1/4*denom(1/2*s12)*s12*s13*s23^2*s24 + 1/2*
      denom(1/2*s12)*s12*s13*s14*s24^2 + 3/2*denom(1/2*s12)*s12*s13*s14*s23*
      s24 + 1/2*denom(1/2*s12)*s12*s13*s14*s23^2 + 1/4*denom(1/2*s12)*s12*s13*
      s14^2*s24 + 1/2*denom(1/2*s12)*s12*s13*s14^2*s23 + 3/4*denom(1/2*s12)*
      s12*s13^2*s24^2 + 1/2*denom(1/2*s12)*s12*s13^2*s23*s24 + 1/2*denom(1/2*
      s12)*s12*s13^2*s14*s24 + 1/4*denom(1/2*s12)*s12*s13^2*s14*s23 + 1/4*
      denom(1/2*s12)*s12*s13^3*s24 + 1/2*denom(1/2*s12)*s12^2*s14*s23*s24 + 1/
      2*denom(1/2*s12)*s12^2*s14*s23^2 + 1/2*denom(1/2*s12)*s12^2*s14^2*s23 + 
      1/2*denom(1/2*s12)*s12^2*s13*s24^2 + 1/2*denom(1/2*s12)*s12^2*s13*s23*
      s24 + 1/2*denom(1/2*s12)*s12^2*s13*s14*s24 + 1/2*denom(1/2*s12)*s12^2*
      s13*s14*s23 + 1/2*denom(1/2*s12)*s12^2*s13^2*s24 + 1/4*denom(1/2*s12)*
      s12^3*s14*s23 + 1/4*denom(1/2*s12)*s12^3*s13*s24 - 1/4*denom(1/2*s12)*
      mh^2*s14^2*s23^2 - 1/2*denom(1/2*s12)*mh^2*s13*s14*s23*s24 - 1/4*denom(1/
      2*s12)*mh^2*s13^2*s24^2 - 1/2*denom(1/2*s12)*mh^2*s12*s14*s23*s24 - 1/2*
      denom(1/2*s12)*mh^2*s12*s14*s23^2 - 1/2*denom(1/2*s12)*mh^2*s12*s14^2*
      s23 - 1/2*denom(1/2*s12)*mh^2*s12*s13*s24^2 - 1/2*denom(1/2*s12)*mh^2*
      s12*s13*s23*s24 - 1/2*denom(1/2*s12)*mh^2*s12*s13*s14*s24 - 1/2*denom(1/
      2*s12)*mh^2*s12*s13*s14*s23 - 1/2*denom(1/2*s12)*mh^2*s12*s13^2*s24 - 1/
      2*denom(1/2*s12)*mh^2*s12^2*s14*s23 - 1/2*denom(1/2*s12)*mh^2*s12^2*s13*
      s24 + 1/4*denom(1/2*s12)*mh^4*s12*s14*s23 + 1/4*denom(1/2*s12)*mh^4*s12*
      s13*s24 - 1/2*denom(1/2*s12)*mt^2*s14*s23*s24^2 - denom(1/2*s12)*mt^2*
      s14*s23^2*s24 - 1/2*denom(1/2*s12)*mt^2*s14*s23^3 - denom(1/2*s12)*mt^2*
      s14^2*s23*s24 - 3/2*denom(1/2*s12)*mt^2*s14^2*s23^2 - 1/2*denom(1/2*s12)
      *mt^2*s14^3*s23 - 1/2*denom(1/2*s12)*mt^2*s13*s24^3 - denom(1/2*s12)*
      mt^2*s13*s23*s24^2 - 1/2*denom(1/2*s12)*mt^2*s13*s23^2*s24 - denom(1/2*
      s12)*mt^2*s13*s14*s24^2 - 3*denom(1/2*s12)*mt^2*s13*s14*s23*s24 - denom(
      1/2*s12)*mt^2*s13*s14*s23^2 - 1/2*denom(1/2*s12)*mt^2*s13*s14^2*s24 - 
      denom(1/2*s12)*mt^2*s13*s14^2*s23 - 3/2*denom(1/2*s12)*mt^2*s13^2*s24^2
       - denom(1/2*s12)*mt^2*s13^2*s23*s24 - denom(1/2*s12)*mt^2*s13^2*s14*s24
       - 1/2*denom(1/2*s12)*mt^2*s13^2*s14*s23 - 1/2*denom(1/2*s12)*mt^2*s13^3
      *s24 - 1/4*denom(1/2*s12)*mt^2*s12*s24^3 - 3/4*denom(1/2*s12)*mt^2*s12*
      s23*s24^2 - 3/4*denom(1/2*s12)*mt^2*s12*s23^2*s24 - 1/4*denom(1/2*s12)*
      mt^2*s12*s23^3 - 3/4*denom(1/2*s12)*mt^2*s12*s14*s24^2 - 7/2*denom(1/2*
      s12)*mt^2*s12*s14*s23*s24 - 11/4*denom(1/2*s12)*mt^2*s12*s14*s23^2 - 3/4
      *denom(1/2*s12)*mt^2*s12*s14^2*s24 - 11/4*denom(1/2*s12)*mt^2*s12*s14^2*
      s23 - 1/4*denom(1/2*s12)*mt^2*s12*s14^3 - 11/4*denom(1/2*s12)*mt^2*s12*
      s13*s24^2 - 7/2*denom(1/2*s12)*mt^2*s12*s13*s23*s24 - 3/4*denom(1/2*s12)
      *mt^2*s12*s13*s23^2 - 7/2*denom(1/2*s12)*mt^2*s12*s13*s14*s24 - 7/2*
      denom(1/2*s12)*mt^2*s12*s13*s14*s23 - 3/4*denom(1/2*s12)*mt^2*s12*s13*
      s14^2 - 11/4*denom(1/2*s12)*mt^2*s12*s13^2*s24 - 3/4*denom(1/2*s12)*mt^2
      *s12*s13^2*s23 - 3/4*denom(1/2*s12)*mt^2*s12*s13^2*s14 - 1/4*denom(1/2*
      s12)*mt^2*s12*s13^3 - 1/2*denom(1/2*s12)*mt^2*s12^2*s24^2 - denom(1/2*
      s12)*mt^2*s12^2*s23*s24 - 1/2*denom(1/2*s12)*mt^2*s12^2*s23^2 - denom(1/
      2*s12)*mt^2*s12^2*s14*s24 - 5/2*denom(1/2*s12)*mt^2*s12^2*s14*s23 - 1/2*
      denom(1/2*s12)*mt^2*s12^2*s14^2 - 5/2*denom(1/2*s12)*mt^2*s12^2*s13*s24
       - denom(1/2*s12)*mt^2*s12^2*s13*s23 - denom(1/2*s12)*mt^2*s12^2*s13*s14
       - 1/2*denom(1/2*s12)*mt^2*s12^2*s13^2 - 1/4*denom(1/2*s12)*mt^2*s12^3*
      s24 - 1/4*denom(1/2*s12)*mt^2*s12^3*s23 - 1/4*denom(1/2*s12)*mt^2*s12^3*
      s14 - 1/4*denom(1/2*s12)*mt^2*s12^3*s13 + 1/2*denom(1/2*s12)*mt^2*mh^2*
      s14*s23*s24 + 1/2*denom(1/2*s12)*mt^2*mh^2*s14*s23^2 + 1/2*denom(1/2*s12
      )*mt^2*mh^2*s14^2*s23 + 1/2*denom(1/2*s12)*mt^2*mh^2*s13*s24^2 + 1/2*
      denom(1/2*s12)*mt^2*mh^2*s13*s23*s24 + 1/2*denom(1/2*s12)*mt^2*mh^2*s13*
      s14*s24 + 1/2*denom(1/2*s12)*mt^2*mh^2*s13*s14*s23 + 1/2*denom(1/2*s12)*
      mt^2*mh^2*s13^2*s24 + 1/2*denom(1/2*s12)*mt^2*mh^2*s12*s24^2 + denom(1/2
      *s12)*mt^2*mh^2*s12*s23*s24 + 1/2*denom(1/2*s12)*mt^2*mh^2*s12*s23^2 + 
      denom(1/2*s12)*mt^2*mh^2*s12*s14*s24 + 5/2*denom(1/2*s12)*mt^2*mh^2*s12*
      s14*s23 + 1/2*denom(1/2*s12)*mt^2*mh^2*s12*s14^2 + 5/2*denom(1/2*s12)*
      mt^2*mh^2*s12*s13*s24 + denom(1/2*s12)*mt^2*mh^2*s12*s13*s23 + denom(1/2
      *s12)*mt^2*mh^2*s12*s13*s14 + 1/2*denom(1/2*s12)*mt^2*mh^2*s12*s13^2 + 1/
      2*denom(1/2*s12)*mt^2*mh^2*s12^2*s24 + 1/2*denom(1/2*s12)*mt^2*mh^2*
      s12^2*s23 + 1/2*denom(1/2*s12)*mt^2*mh^2*s12^2*s14 + 1/2*denom(1/2*s12)*
      mt^2*mh^2*s12^2*s13 - 1/4*denom(1/2*s12)*mt^2*mh^4*s12*s24 - 1/4*denom(1/
      2*s12)*mt^2*mh^4*s12*s23 - 1/4*denom(1/2*s12)*mt^2*mh^4*s12*s14 - 1/4*
      denom(1/2*s12)*mt^2*mh^4*s12*s13 + 1/4*denom(1/2*s12)*mt^4*s24^3 + 3/4*
      denom(1/2*s12)*mt^4*s23*s24^2 + 3/4*denom(1/2*s12)*mt^4*s23^2*s24 + 1/4*
      denom(1/2*s12)*mt^4*s23^3 + 3/4*denom(1/2*s12)*mt^4*s14*s24^2 + 7/2*
      denom(1/2*s12)*mt^4*s14*s23*s24 + 11/4*denom(1/2*s12)*mt^4*s14*s23^2 + 3/
      4*denom(1/2*s12)*mt^4*s14^2*s24 + 11/4*denom(1/2*s12)*mt^4*s14^2*s23 + 1/
      4*denom(1/2*s12)*mt^4*s14^3 + 11/4*denom(1/2*s12)*mt^4*s13*s24^2 + 7/2*
      denom(1/2*s12)*mt^4*s13*s23*s24 + 3/4*denom(1/2*s12)*mt^4*s13*s23^2 + 7/
      2*denom(1/2*s12)*mt^4*s13*s14*s24 + 7/2*denom(1/2*s12)*mt^4*s13*s14*s23
       + 3/4*denom(1/2*s12)*mt^4*s13*s14^2 + 11/4*denom(1/2*s12)*mt^4*s13^2*
      s24 + 3/4*denom(1/2*s12)*mt^4*s13^2*s23 + 3/4*denom(1/2*s12)*mt^4*s13^2*
      s14 + 1/4*denom(1/2*s12)*mt^4*s13^3 + 9/4*denom(1/2*s12)*mt^4*s12*s24^2
       + 9/2*denom(1/2*s12)*mt^4*s12*s23*s24 + 9/4*denom(1/2*s12)*mt^4*s12*
      s23^2 + 9/2*denom(1/2*s12)*mt^4*s12*s14*s24 + 15/2*denom(1/2*s12)*mt^4*
      s12*s14*s23 + 9/4*denom(1/2*s12)*mt^4*s12*s14^2 + 15/2*denom(1/2*s12)*
      mt^4*s12*s13*s24 + 9/2*denom(1/2*s12)*mt^4*s12*s13*s23 + 9/2*denom(1/2*
      s12)*mt^4*s12*s13*s14 + 9/4*denom(1/2*s12)*mt^4*s12*s13^2 + 5/2*denom(1/
      2*s12)*mt^4*s12^2*s24 + 5/2*denom(1/2*s12)*mt^4*s12^2*s23 + 5/2*denom(1/
      2*s12)*mt^4*s12^2*s14 + 5/2*denom(1/2*s12)*mt^4*s12^2*s13 + 1/2*denom(1/
      2*s12)*mt^4*s12^3 - 1/4*denom(1/2*s12)*mt^4*mh^2*s24^2 - 1/2*denom(1/2*
      s12)*mt^4*mh^2*s23*s24 - 1/4*denom(1/2*s12)*mt^4*mh^2*s23^2 - 1/2*denom(
      1/2*s12)*mt^4*mh^2*s14*s24 - 3/2*denom(1/2*s12)*mt^4*mh^2*s14*s23 - 1/4*
      denom(1/2*s12)*mt^4*mh^2*s14^2 - 3/2*denom(1/2*s12)*mt^4*mh^2*s13*s24 - 
      1/2*denom(1/2*s12)*mt^4*mh^2*s13*s23 - 1/2*denom(1/2*s12)*mt^4*mh^2*s13*
      s14 - 1/4*denom(1/2*s12)*mt^4*mh^2*s13^2 - 5/2*denom(1/2*s12)*mt^4*mh^2*
      s12*s24 - 5/2*denom(1/2*s12)*mt^4*mh^2*s12*s23 - 5/2*denom(1/2*s12)*mt^4
      *mh^2*s12*s14 - 5/2*denom(1/2*s12)*mt^4*mh^2*s12*s13 - denom(1/2*s12)*
      mt^4*mh^2*s12^2 + 1/2*denom(1/2*s12)*mt^4*mh^4*s12 - 3/2*denom(1/2*s12)*
      mt^6*s24^2 - 3*denom(1/2*s12)*mt^6*s23*s24 - 3/2*denom(1/2*s12)*mt^6*
      s23^2 - 3*denom(1/2*s12)*mt^6*s14*s24 - 5*denom(1/2*s12)*mt^6*s14*s23 - 
      3/2*denom(1/2*s12)*mt^6*s14^2 - 5*denom(1/2*s12)*mt^6*s13*s24 - 3*denom(
      1/2*s12)*mt^6*s13*s23 - 3*denom(1/2*s12)*mt^6*s13*s14 - 3/2*denom(1/2*
      s12)*mt^6*s13^2 - 6*denom(1/2*s12)*mt^6*s12*s24 - 6*denom(1/2*s12)*mt^6*
      s12*s23 - 6*denom(1/2*s12)*mt^6*s12*s14 - 6*denom(1/2*s12)*mt^6*s12*s13
       - 3*denom(1/2*s12)*mt^6*s12^2 + denom(1/2*s12)*mt^6*mh^2*s24 + denom(1/
      2*s12)*mt^6*mh^2*s23 + denom(1/2*s12)*mt^6*mh^2*s14 + denom(1/2*s12)*
      mt^6*mh^2*s13 + 3*denom(1/2*s12)*mt^6*mh^2*s12 + 3*denom(1/2*s12)*mt^8*
      s24 + 3*denom(1/2*s12)*mt^8*s23 + 3*denom(1/2*s12)*mt^8*s14 + 3*denom(1/
      2*s12)*mt^8*s13 + 5*denom(1/2*s12)*mt^8*s12 - denom(1/2*s12)*mt^8*mh^2
       - 2*denom(1/2*s12)*mt^10 + 1/16*denom(1/4*s12^2)*s14^3*s23^3 + 3/16*
      denom(1/4*s12^2)*s13*s14^2*s23^2*s24 + 3/16*denom(1/4*s12^2)*s13^2*s14*
      s23*s24^2 + 1/16*denom(1/4*s12^2)*s13^3*s24^3 + 1/16*denom(1/4*s12^2)*
      s12*s14^2*s23^2*s24 + 1/16*denom(1/4*s12^2)*s12*s14^2*s23^3 + 1/16*
      denom(1/4*s12^2)*s12*s14^3*s23^2 + 1/8*denom(1/4*s12^2)*s12*s13*s14*s23*
      s24^2 + 1/8*denom(1/4*s12^2)*s12*s13*s14*s23^2*s24 + 1/8*denom(1/4*s12^2
      )*s12*s13*s14^2*s23*s24 + 1/16*denom(1/4*s12^2)*s12*s13*s14^2*s23^2 + 1/
      16*denom(1/4*s12^2)*s12*s13^2*s24^3 + 1/16*denom(1/4*s12^2)*s12*s13^2*
      s23*s24^2 + 1/16*denom(1/4*s12^2)*s12*s13^2*s14*s24^2 + 1/8*denom(1/4*
      s12^2)*s12*s13^2*s14*s23*s24 + 1/16*denom(1/4*s12^2)*s12*s13^3*s24^2 + 1/
      16*denom(1/4*s12^2)*s12^2*s14^2*s23^2 + 1/8*denom(1/4*s12^2)*s12^2*s13*
      s14*s23*s24 + 1/16*denom(1/4*s12^2)*s12^2*s13^2*s24^2 - 1/16*denom(1/4*
      s12^2)*mh^2*s12*s14^2*s23^2 - 1/8*denom(1/4*s12^2)*mh^2*s12*s13*s14*s23*
      s24 - 1/16*denom(1/4*s12^2)*mh^2*s12*s13^2*s24^2 - 3/16*denom(1/4*s12^2)
      *mt^2*s14^2*s23^2*s24 - 3/16*denom(1/4*s12^2)*mt^2*s14^2*s23^3 - 3/16*
      denom(1/4*s12^2)*mt^2*s14^3*s23^2 - 3/8*denom(1/4*s12^2)*mt^2*s13*s14*
      s23*s24^2 - 3/8*denom(1/4*s12^2)*mt^2*s13*s14*s23^2*s24 - 3/8*denom(1/4*
      s12^2)*mt^2*s13*s14^2*s23*s24 - 3/16*denom(1/4*s12^2)*mt^2*s13*s14^2*
      s23^2 - 3/16*denom(1/4*s12^2)*mt^2*s13^2*s24^3 - 3/16*denom(1/4*s12^2)*
      mt^2*s13^2*s23*s24^2 - 3/16*denom(1/4*s12^2)*mt^2*s13^2*s14*s24^2 - 3/8*
      denom(1/4*s12^2)*mt^2*s13^2*s14*s23*s24 - 3/16*denom(1/4*s12^2)*mt^2*
      s13^3*s24^2 - 1/8*denom(1/4*s12^2)*mt^2*s12*s14*s23*s24^2 - 1/4*denom(1/
      4*s12^2)*mt^2*s12*s14*s23^2*s24 - 1/8*denom(1/4*s12^2)*mt^2*s12*s14*
      s23^3 - 1/4*denom(1/4*s12^2)*mt^2*s12*s14^2*s23*s24 - 1/2*denom(1/4*
      s12^2)*mt^2*s12*s14^2*s23^2 - 1/8*denom(1/4*s12^2)*mt^2*s12*s14^3*s23 - 
      1/8*denom(1/4*s12^2)*mt^2*s12*s13*s24^3 - 1/4*denom(1/4*s12^2)*mt^2*s12*
      s13*s23*s24^2 - 1/8*denom(1/4*s12^2)*mt^2*s12*s13*s23^2*s24 - 1/4*denom(
      1/4*s12^2)*mt^2*s12*s13*s14*s24^2 - denom(1/4*s12^2)*mt^2*s12*s13*s14*
      s23*s24 - 1/4*denom(1/4*s12^2)*mt^2*s12*s13*s14*s23^2 - 1/8*denom(1/4*
      s12^2)*mt^2*s12*s13*s14^2*s24 - 1/4*denom(1/4*s12^2)*mt^2*s12*s13*s14^2*
      s23 - 1/2*denom(1/4*s12^2)*mt^2*s12*s13^2*s24^2 - 1/4*denom(1/4*s12^2)*
      mt^2*s12*s13^2*s23*s24 - 1/4*denom(1/4*s12^2)*mt^2*s12*s13^2*s14*s24 - 1/
      8*denom(1/4*s12^2)*mt^2*s12*s13^2*s14*s23 - 1/8*denom(1/4*s12^2)*mt^2*
      s12*s13^3*s24 - 1/8*denom(1/4*s12^2)*mt^2*s12^2*s14*s23*s24 - 1/8*denom(
      1/4*s12^2)*mt^2*s12^2*s14*s23^2 - 1/8*denom(1/4*s12^2)*mt^2*s12^2*s14^2*
      s23 - 1/8*denom(1/4*s12^2)*mt^2*s12^2*s13*s24^2 - 1/8*denom(1/4*s12^2)*
      mt^2*s12^2*s13*s23*s24 - 1/8*denom(1/4*s12^2)*mt^2*s12^2*s13*s14*s24 - 1/
      8*denom(1/4*s12^2)*mt^2*s12^2*s13*s14*s23 - 1/8*denom(1/4*s12^2)*mt^2*
      s12^2*s13^2*s24 + 1/8*denom(1/4*s12^2)*mt^2*mh^2*s12*s14*s23*s24 + 1/8*
      denom(1/4*s12^2)*mt^2*mh^2*s12*s14*s23^2 + 1/8*denom(1/4*s12^2)*mt^2*
      mh^2*s12*s14^2*s23 + 1/8*denom(1/4*s12^2)*mt^2*mh^2*s12*s13*s24^2 + 1/8*
      denom(1/4*s12^2)*mt^2*mh^2*s12*s13*s23*s24 + 1/8*denom(1/4*s12^2)*mt^2*
      mh^2*s12*s13*s14*s24 + 1/8*denom(1/4*s12^2)*mt^2*mh^2*s12*s13*s14*s23 + 
      1/8*denom(1/4*s12^2)*mt^2*mh^2*s12*s13^2*s24 + 3/16*denom(1/4*s12^2)*
      mt^4*s14*s23*s24^2 + 3/8*denom(1/4*s12^2)*mt^4*s14*s23^2*s24 + 3/16*
      denom(1/4*s12^2)*mt^4*s14*s23^3 + 3/8*denom(1/4*s12^2)*mt^4*s14^2*s23*
      s24 + 3/4*denom(1/4*s12^2)*mt^4*s14^2*s23^2 + 3/16*denom(1/4*s12^2)*mt^4
      *s14^3*s23 + 3/16*denom(1/4*s12^2)*mt^4*s13*s24^3 + 3/8*denom(1/4*s12^2)
      *mt^4*s13*s23*s24^2 + 3/16*denom(1/4*s12^2)*mt^4*s13*s23^2*s24 + 3/8*
      denom(1/4*s12^2)*mt^4*s13*s14*s24^2 + 3/2*denom(1/4*s12^2)*mt^4*s13*s14*
      s23*s24 + 3/8*denom(1/4*s12^2)*mt^4*s13*s14*s23^2 + 3/16*denom(1/4*s12^2
      )*mt^4*s13*s14^2*s24 + 3/8*denom(1/4*s12^2)*mt^4*s13*s14^2*s23 + 3/4*
      denom(1/4*s12^2)*mt^4*s13^2*s24^2 + 3/8*denom(1/4*s12^2)*mt^4*s13^2*s23*
      s24 + 3/8*denom(1/4*s12^2)*mt^4*s13^2*s14*s24 + 3/16*denom(1/4*s12^2)*
      mt^4*s13^2*s14*s23 + 3/16*denom(1/4*s12^2)*mt^4*s13^3*s24 + 1/16*denom(1/
      4*s12^2)*mt^4*s12*s24^3 + 3/16*denom(1/4*s12^2)*mt^4*s12*s23*s24^2 + 3/
      16*denom(1/4*s12^2)*mt^4*s12*s23^2*s24 + 1/16*denom(1/4*s12^2)*mt^4*s12*
      s23^3 + 3/16*denom(1/4*s12^2)*mt^4*s12*s14*s24^2 + 9/8*denom(1/4*s12^2)*
      mt^4*s12*s14*s23*s24 + 15/16*denom(1/4*s12^2)*mt^4*s12*s14*s23^2 + 3/16*
      denom(1/4*s12^2)*mt^4*s12*s14^2*s24 + 15/16*denom(1/4*s12^2)*mt^4*s12*
      s14^2*s23 + 1/16*denom(1/4*s12^2)*mt^4*s12*s14^3 + 15/16*denom(1/4*s12^2
      )*mt^4*s12*s13*s24^2 + 9/8*denom(1/4*s12^2)*mt^4*s12*s13*s23*s24 + 3/16*
      denom(1/4*s12^2)*mt^4*s12*s13*s23^2 + 9/8*denom(1/4*s12^2)*mt^4*s12*s13*
      s14*s24 + 9/8*denom(1/4*s12^2)*mt^4*s12*s13*s14*s23 + 3/16*denom(1/4*
      s12^2)*mt^4*s12*s13*s14^2 + 15/16*denom(1/4*s12^2)*mt^4*s12*s13^2*s24 + 
      3/16*denom(1/4*s12^2)*mt^4*s12*s13^2*s23 + 3/16*denom(1/4*s12^2)*mt^4*
      s12*s13^2*s14 + 1/16*denom(1/4*s12^2)*mt^4*s12*s13^3 + 1/16*denom(1/4*
      s12^2)*mt^4*s12^2*s24^2 + 1/8*denom(1/4*s12^2)*mt^4*s12^2*s23*s24 + 1/16
      *denom(1/4*s12^2)*mt^4*s12^2*s23^2 + 1/8*denom(1/4*s12^2)*mt^4*s12^2*s14
      *s24 + 3/8*denom(1/4*s12^2)*mt^4*s12^2*s14*s23 + 1/16*denom(1/4*s12^2)*
      mt^4*s12^2*s14^2 + 3/8*denom(1/4*s12^2)*mt^4*s12^2*s13*s24 + 1/8*denom(1/
      4*s12^2)*mt^4*s12^2*s13*s23 + 1/8*denom(1/4*s12^2)*mt^4*s12^2*s13*s14 + 
      1/16*denom(1/4*s12^2)*mt^4*s12^2*s13^2 - 1/16*denom(1/4*s12^2)*mt^4*mh^2
      *s12*s24^2 - 1/8*denom(1/4*s12^2)*mt^4*mh^2*s12*s23*s24 - 1/16*denom(1/4
      *s12^2)*mt^4*mh^2*s12*s23^2 - 1/8*denom(1/4*s12^2)*mt^4*mh^2*s12*s14*s24
       - 3/8*denom(1/4*s12^2)*mt^4*mh^2*s12*s14*s23 - 1/16*denom(1/4*s12^2)*
      mt^4*mh^2*s12*s14^2 - 3/8*denom(1/4*s12^2)*mt^4*mh^2*s12*s13*s24 - 1/8*
      denom(1/4*s12^2)*mt^4*mh^2*s12*s13*s23 - 1/8*denom(1/4*s12^2)*mt^4*mh^2*
      s12*s13*s14 - 1/16*denom(1/4*s12^2)*mt^4*mh^2*s12*s13^2 - 1/16*denom(1/4
      *s12^2)*mt^6*s24^3 - 3/16*denom(1/4*s12^2)*mt^6*s23*s24^2 - 3/16*denom(1/
      4*s12^2)*mt^6*s23^2*s24 - 1/16*denom(1/4*s12^2)*mt^6*s23^3 - 3/16*denom(
      1/4*s12^2)*mt^6*s14*s24^2 - 9/8*denom(1/4*s12^2)*mt^6*s14*s23*s24 - 15/
      16*denom(1/4*s12^2)*mt^6*s14*s23^2 - 3/16*denom(1/4*s12^2)*mt^6*s14^2*
      s24 - 15/16*denom(1/4*s12^2)*mt^6*s14^2*s23 - 1/16*denom(1/4*s12^2)*mt^6
      *s14^3 - 15/16*denom(1/4*s12^2)*mt^6*s13*s24^2 - 9/8*denom(1/4*s12^2)*
      mt^6*s13*s23*s24 - 3/16*denom(1/4*s12^2)*mt^6*s13*s23^2 - 9/8*denom(1/4*
      s12^2)*mt^6*s13*s14*s24 - 9/8*denom(1/4*s12^2)*mt^6*s13*s14*s23 - 3/16*
      denom(1/4*s12^2)*mt^6*s13*s14^2 - 15/16*denom(1/4*s12^2)*mt^6*s13^2*s24
       - 3/16*denom(1/4*s12^2)*mt^6*s13^2*s23 - 3/16*denom(1/4*s12^2)*mt^6*
      s13^2*s14 - 1/16*denom(1/4*s12^2)*mt^6*s13^3 - 1/2*denom(1/4*s12^2)*mt^6
      *s12*s24^2 - denom(1/4*s12^2)*mt^6*s12*s23*s24 - 1/2*denom(1/4*s12^2)*
      mt^6*s12*s23^2 - denom(1/4*s12^2)*mt^6*s12*s14*s24 - 2*denom(1/4*s12^2)*
      mt^6*s12*s14*s23 - 1/2*denom(1/4*s12^2)*mt^6*s12*s14^2 - 2*denom(1/4*
      s12^2)*mt^6*s12*s13*s24 - denom(1/4*s12^2)*mt^6*s12*s13*s23 - denom(1/4*
      s12^2)*mt^6*s12*s13*s14 - 1/2*denom(1/4*s12^2)*mt^6*s12*s13^2 - 1/4*
      denom(1/4*s12^2)*mt^6*s12^2*s24 - 1/4*denom(1/4*s12^2)*mt^6*s12^2*s23 - 
      1/4*denom(1/4*s12^2)*mt^6*s12^2*s14 - 1/4*denom(1/4*s12^2)*mt^6*s12^2*
      s13 + 1/4*denom(1/4*s12^2)*mt^6*mh^2*s12*s24 + 1/4*denom(1/4*s12^2)*mt^6
      *mh^2*s12*s23 + 1/4*denom(1/4*s12^2)*mt^6*mh^2*s12*s14 + 1/4*denom(1/4*
      s12^2)*mt^6*mh^2*s12*s13 + 3/8*denom(1/4*s12^2)*mt^8*s24^2 + 3/4*denom(1/
      4*s12^2)*mt^8*s23*s24 + 3/8*denom(1/4*s12^2)*mt^8*s23^2 + 3/4*denom(1/4*
      s12^2)*mt^8*s14*s24 + 3/2*denom(1/4*s12^2)*mt^8*s14*s23 + 3/8*denom(1/4*
      s12^2)*mt^8*s14^2 + 3/2*denom(1/4*s12^2)*mt^8*s13*s24 + 3/4*denom(1/4*
      s12^2)*mt^8*s13*s23 + 3/4*denom(1/4*s12^2)*mt^8*s13*s14 + 3/8*denom(1/4*
      s12^2)*mt^8*s13^2 + 5/4*denom(1/4*s12^2)*mt^8*s12*s24 + 5/4*denom(1/4*
      s12^2)*mt^8*s12*s23 + 5/4*denom(1/4*s12^2)*mt^8*s12*s14 + 5/4*denom(1/4*
      s12^2)*mt^8*s12*s13 + 1/4*denom(1/4*s12^2)*mt^8*s12^2 - 1/4*denom(1/4*
      s12^2)*mt^8*mh^2*s12 - 3/4*denom(1/4*s12^2)*mt^10*s24 - 3/4*denom(1/4*
      s12^2)*mt^10*s23 - 3/4*denom(1/4*s12^2)*mt^10*s14 - 3/4*denom(1/4*s12^2)
      *mt^10*s13 - denom(1/4*s12^2)*mt^10*s12 + 1/2*denom(1/4*s12^2)*mt^12;
 
 .sort
id KMatrix(8,10) =   - 1/2*mt^2*s14*s23*s24 - 1/2*mt^2*s14*s23^2 - 1/2*mt^2*
      s14^2*s23 - 1/2*mt^2*s13*s24^2 - 1/2*mt^2*s13*s23*s24 - 1/2*mt^2*s13*s14
      *s24 - 1/2*mt^2*s13*s14*s23 - 1/2*mt^2*s13^2*s24 - 1/2*mt^2*s12*s24^2 - 
      mt^2*s12*s23*s24 - 1/2*mt^2*s12*s23^2 - mt^2*s12*s14*s24 - 3/2*mt^2*s12*
      s14*s23 - 1/2*mt^2*s12*s14^2 - 3/2*mt^2*s12*s13*s24 - mt^2*s12*s13*s23
       - mt^2*s12*s13*s14 - 1/2*mt^2*s12*s13^2 - mt^2*s12^2*s24 - mt^2*s12^2*
      s23 - mt^2*s12^2*s14 - mt^2*s12^2*s13 - 1/2*mt^2*s12^3 + 1/2*mt^2*mh^2*
      s14*s23 + 1/2*mt^2*mh^2*s13*s24 + mt^2*mh^2*s12*s24 + mt^2*mh^2*s12*s23
       + mt^2*mh^2*s12*s14 + mt^2*mh^2*s12*s13 + mt^2*mh^2*s12^2 - 1/2*mt^2*
      mh^4*s12 + 1/2*mt^4*s24^2 + mt^4*s23*s24 + 1/2*mt^4*s23^2 + mt^4*s14*s24
       + 2*mt^4*s14*s23 + 1/2*mt^4*s14^2 + 2*mt^4*s13*s24 + mt^4*s13*s23 + 
      mt^4*s13*s14 + 1/2*mt^4*s13^2 + 7/2*mt^4*s12*s24 + 7/2*mt^4*s12*s23 + 7/
      2*mt^4*s12*s14 + 7/2*mt^4*s12*s13 + 3*mt^4*s12^2 - 1/2*mt^4*mh^2*s24 - 1/
      2*mt^4*mh^2*s23 - 1/2*mt^4*mh^2*s14 - 1/2*mt^4*mh^2*s13 - 3*mt^4*mh^2*
      s12 - 2*mt^6*s24 - 2*mt^6*s23 - 2*mt^6*s14 - 2*mt^6*s13 - 5*mt^6*s12 + 
      mt^6*mh^2 + 2*mt^8 + 1/4*denom(1/2*s12)*s14^2*s23*s24^2 + 1/4*denom(1/2*
      s12)*s14^2*s23^2*s24 + 1/4*denom(1/2*s12)*s14^3*s23*s24 + 1/4*denom(1/2*
      s12)*s13*s14*s24^3 + 1/4*denom(1/2*s12)*s13*s14*s23*s24^2 + 1/4*denom(1/
      2*s12)*s13*s14^2*s24^2 + 1/4*denom(1/2*s12)*s13*s14^2*s23*s24 + 1/4*
      denom(1/2*s12)*s13^2*s14*s24^2 + 1/4*denom(1/2*s12)*s12*s14*s24^3 + 1/2*
      denom(1/2*s12)*s12*s14*s23*s24^2 + 1/4*denom(1/2*s12)*s12*s14*s23^2*s24
       + 1/2*denom(1/2*s12)*s12*s14^2*s24^2 + 3/4*denom(1/2*s12)*s12*s14^2*s23
      *s24 + 1/4*denom(1/2*s12)*s12*s14^3*s24 + 3/4*denom(1/2*s12)*s12*s13*s14
      *s24^2 + 1/2*denom(1/2*s12)*s12*s13*s14*s23*s24 + 1/2*denom(1/2*s12)*s12
      *s13*s14^2*s24 + 1/4*denom(1/2*s12)*s12*s13^2*s14*s24 + 1/2*denom(1/2*
      s12)*s12^2*s14*s24^2 + 1/2*denom(1/2*s12)*s12^2*s14*s23*s24 + 1/2*denom(
      1/2*s12)*s12^2*s14^2*s24 + 1/2*denom(1/2*s12)*s12^2*s13*s14*s24 + 1/4*
      denom(1/2*s12)*s12^3*s14*s24 - 1/4*denom(1/2*s12)*mh^2*s14^2*s23*s24 - 1/
      4*denom(1/2*s12)*mh^2*s13*s14*s24^2 - 1/2*denom(1/2*s12)*mh^2*s12*s14*
      s24^2 - 1/2*denom(1/2*s12)*mh^2*s12*s14*s23*s24 - 1/2*denom(1/2*s12)*
      mh^2*s12*s14^2*s24 - 1/2*denom(1/2*s12)*mh^2*s12*s13*s14*s24 - 1/2*
      denom(1/2*s12)*mh^2*s12^2*s14*s24 + 1/4*denom(1/2*s12)*mh^4*s12*s14*s24
       - 1/4*denom(1/2*s12)*mt^2*s14*s24^3 - 3/4*denom(1/2*s12)*mt^2*s14*s23*
      s24^2 - 1/2*denom(1/2*s12)*mt^2*s14*s23^2*s24 - 1/2*denom(1/2*s12)*mt^2*
      s14^2*s24^2 - 3/2*denom(1/2*s12)*mt^2*s14^2*s23*s24 - 1/2*denom(1/2*s12)
      *mt^2*s14^2*s23^2 - 1/4*denom(1/2*s12)*mt^2*s14^3*s24 - 1/4*denom(1/2*
      s12)*mt^2*s14^3*s23 - 1/4*denom(1/2*s12)*mt^2*s13*s24^3 - 1/4*denom(1/2*
      s12)*mt^2*s13*s23*s24^2 - 3/2*denom(1/2*s12)*mt^2*s13*s14*s24^2 - 3/2*
      denom(1/2*s12)*mt^2*s13*s14*s23*s24 - 3/4*denom(1/2*s12)*mt^2*s13*s14^2*
      s24 - 1/4*denom(1/2*s12)*mt^2*s13*s14^2*s23 - 1/2*denom(1/2*s12)*mt^2*
      s13^2*s24^2 - 1/2*denom(1/2*s12)*mt^2*s13^2*s14*s24 - 1/4*denom(1/2*s12)
      *mt^2*s12*s24^3 - 1/2*denom(1/2*s12)*mt^2*s12*s23*s24^2 - 1/4*denom(1/2*
      s12)*mt^2*s12*s23^2*s24 - 5/2*denom(1/2*s12)*mt^2*s12*s14*s24^2 - 13/4*
      denom(1/2*s12)*mt^2*s12*s14*s23*s24 - 1/2*denom(1/2*s12)*mt^2*s12*s14*
      s23^2 - 5/2*denom(1/2*s12)*mt^2*s12*s14^2*s24 - denom(1/2*s12)*mt^2*s12*
      s14^2*s23 - 1/4*denom(1/2*s12)*mt^2*s12*s14^3 - denom(1/2*s12)*mt^2*s12*
      s13*s24^2 - 3/4*denom(1/2*s12)*mt^2*s12*s13*s23*s24 - 13/4*denom(1/2*s12
      )*mt^2*s12*s13*s14*s24 - 3/4*denom(1/2*s12)*mt^2*s12*s13*s14*s23 - 1/2*
      denom(1/2*s12)*mt^2*s12*s13*s14^2 - 1/2*denom(1/2*s12)*mt^2*s12*s13^2*
      s24 - 1/4*denom(1/2*s12)*mt^2*s12*s13^2*s14 - 1/2*denom(1/2*s12)*mt^2*
      s12^2*s24^2 - 1/2*denom(1/2*s12)*mt^2*s12^2*s23*s24 - 5/2*denom(1/2*s12)
      *mt^2*s12^2*s14*s24 - 3/4*denom(1/2*s12)*mt^2*s12^2*s14*s23 - 1/2*denom(
      1/2*s12)*mt^2*s12^2*s14^2 - 3/4*denom(1/2*s12)*mt^2*s12^2*s13*s24 - 1/2*
      denom(1/2*s12)*mt^2*s12^2*s13*s14 - 1/4*denom(1/2*s12)*mt^2*s12^3*s24 - 
      1/4*denom(1/2*s12)*mt^2*s12^3*s14 + 1/4*denom(1/2*s12)*mt^2*mh^2*s14*
      s24^2 + 1/2*denom(1/2*s12)*mt^2*mh^2*s14*s23*s24 + 1/4*denom(1/2*s12)*
      mt^2*mh^2*s14^2*s24 + 1/4*denom(1/2*s12)*mt^2*mh^2*s14^2*s23 + 1/4*
      denom(1/2*s12)*mt^2*mh^2*s13*s24^2 + 1/2*denom(1/2*s12)*mt^2*mh^2*s13*
      s14*s24 + 1/2*denom(1/2*s12)*mt^2*mh^2*s12*s24^2 + 1/2*denom(1/2*s12)*
      mt^2*mh^2*s12*s23*s24 + 5/2*denom(1/2*s12)*mt^2*mh^2*s12*s14*s24 + 3/4*
      denom(1/2*s12)*mt^2*mh^2*s12*s14*s23 + 1/2*denom(1/2*s12)*mt^2*mh^2*s12*
      s14^2 + 3/4*denom(1/2*s12)*mt^2*mh^2*s12*s13*s24 + 1/2*denom(1/2*s12)*
      mt^2*mh^2*s12*s13*s14 + 1/2*denom(1/2*s12)*mt^2*mh^2*s12^2*s24 + 1/2*
      denom(1/2*s12)*mt^2*mh^2*s12^2*s14 - 1/4*denom(1/2*s12)*mt^2*mh^4*s12*
      s24 - 1/4*denom(1/2*s12)*mt^2*mh^4*s12*s14 + 1/4*denom(1/2*s12)*mt^4*
      s24^3 + 1/2*denom(1/2*s12)*mt^4*s23*s24^2 + 1/4*denom(1/2*s12)*mt^4*
      s23^2*s24 + 7/4*denom(1/2*s12)*mt^4*s14*s24^2 + 13/4*denom(1/2*s12)*mt^4
      *s14*s23*s24 + denom(1/2*s12)*mt^4*s14*s23^2 + 7/4*denom(1/2*s12)*mt^4*
      s14^2*s24 + 7/4*denom(1/2*s12)*mt^4*s14^2*s23 + 1/4*denom(1/2*s12)*mt^4*
      s14^3 + 7/4*denom(1/2*s12)*mt^4*s13*s24^2 + 5/4*denom(1/2*s12)*mt^4*s13*
      s23*s24 + 13/4*denom(1/2*s12)*mt^4*s13*s14*s24 + 5/4*denom(1/2*s12)*mt^4
      *s13*s14*s23 + 1/2*denom(1/2*s12)*mt^4*s13*s14^2 + denom(1/2*s12)*mt^4*
      s13^2*s24 + 1/4*denom(1/2*s12)*mt^4*s13^2*s14 + 9/4*denom(1/2*s12)*mt^4*
      s12*s24^2 + 11/4*denom(1/2*s12)*mt^4*s12*s23*s24 + 1/2*denom(1/2*s12)*
      mt^4*s12*s23^2 + 7*denom(1/2*s12)*mt^4*s12*s14*s24 + 4*denom(1/2*s12)*
      mt^4*s12*s14*s23 + 9/4*denom(1/2*s12)*mt^4*s12*s14^2 + 4*denom(1/2*s12)*
      mt^4*s12*s13*s24 + denom(1/2*s12)*mt^4*s12*s13*s23 + 11/4*denom(1/2*s12)
      *mt^4*s12*s13*s14 + 1/2*denom(1/2*s12)*mt^4*s12*s13^2 + 9/4*denom(1/2*
      s12)*mt^4*s12^2*s24 + 3/4*denom(1/2*s12)*mt^4*s12^2*s23 + 9/4*denom(1/2*
      s12)*mt^4*s12^2*s14 + 3/4*denom(1/2*s12)*mt^4*s12^2*s13 + 1/4*denom(1/2*
      s12)*mt^4*s12^3 - 1/4*denom(1/2*s12)*mt^4*mh^2*s24^2 - 1/4*denom(1/2*s12
      )*mt^4*mh^2*s23*s24 - denom(1/2*s12)*mt^4*mh^2*s14*s24 - 1/2*denom(1/2*
      s12)*mt^4*mh^2*s14*s23 - 1/4*denom(1/2*s12)*mt^4*mh^2*s14^2 - 1/2*denom(
      1/2*s12)*mt^4*mh^2*s13*s24 - 1/4*denom(1/2*s12)*mt^4*mh^2*s13*s14 - 9/4*
      denom(1/2*s12)*mt^4*mh^2*s12*s24 - 3/4*denom(1/2*s12)*mt^4*mh^2*s12*s23
       - 9/4*denom(1/2*s12)*mt^4*mh^2*s12*s14 - 3/4*denom(1/2*s12)*mt^4*mh^2*
      s12*s13 - 1/2*denom(1/2*s12)*mt^4*mh^2*s12^2 + 1/4*denom(1/2*s12)*mt^4*
      mh^4*s12 - 3/2*denom(1/2*s12)*mt^6*s24^2 - 2*denom(1/2*s12)*mt^6*s23*s24
       - 1/2*denom(1/2*s12)*mt^6*s23^2 - 4*denom(1/2*s12)*mt^6*s14*s24 - 7/2*
      denom(1/2*s12)*mt^6*s14*s23 - 3/2*denom(1/2*s12)*mt^6*s14^2 - 7/2*denom(
      1/2*s12)*mt^6*s13*s24 - denom(1/2*s12)*mt^6*s13*s23 - 2*denom(1/2*s12)*
      mt^6*s13*s14 - 1/2*denom(1/2*s12)*mt^6*s13^2 - 23/4*denom(1/2*s12)*mt^6*
      s12*s24 - 13/4*denom(1/2*s12)*mt^6*s12*s23 - 23/4*denom(1/2*s12)*mt^6*
      s12*s14 - 13/4*denom(1/2*s12)*mt^6*s12*s13 - 2*denom(1/2*s12)*mt^6*s12^2
       + 3/4*denom(1/2*s12)*mt^6*mh^2*s24 + 1/4*denom(1/2*s12)*mt^6*mh^2*s23
       + 3/4*denom(1/2*s12)*mt^6*mh^2*s14 + 1/4*denom(1/2*s12)*mt^6*mh^2*s13
       + 2*denom(1/2*s12)*mt^6*mh^2*s12 + 3*denom(1/2*s12)*mt^8*s24 + 2*denom(
      1/2*s12)*mt^8*s23 + 3*denom(1/2*s12)*mt^8*s14 + 2*denom(1/2*s12)*mt^8*
      s13 + 9/2*denom(1/2*s12)*mt^8*s12 - 1/2*denom(1/2*s12)*mt^8*mh^2 - 2*
      denom(1/2*s12)*mt^10 + 1/8*denom(1/4*s12^2)*s14^3*s23^2*s24 + 1/4*denom(
      1/4*s12^2)*s13*s14^2*s23*s24^2 + 1/8*denom(1/4*s12^2)*s13^2*s14*s24^3 + 
      1/8*denom(1/4*s12^2)*s12*s14^2*s23*s24^2 + 1/8*denom(1/4*s12^2)*s12*
      s14^2*s23^2*s24 + 1/8*denom(1/4*s12^2)*s12*s14^3*s23*s24 + 1/8*denom(1/4
      *s12^2)*s12*s13*s14*s24^3 + 1/8*denom(1/4*s12^2)*s12*s13*s14*s23*s24^2
       + 1/8*denom(1/4*s12^2)*s12*s13*s14^2*s24^2 + 1/8*denom(1/4*s12^2)*s12*
      s13*s14^2*s23*s24 + 1/8*denom(1/4*s12^2)*s12*s13^2*s14*s24^2 + 1/8*
      denom(1/4*s12^2)*s12^2*s14^2*s23*s24 + 1/8*denom(1/4*s12^2)*s12^2*s13*
      s14*s24^2 - 1/8*denom(1/4*s12^2)*mh^2*s12*s14^2*s23*s24 - 1/8*denom(1/4*
      s12^2)*mh^2*s12*s13*s14*s24^2 - 1/4*denom(1/4*s12^2)*mt^2*s14^2*s23*
      s24^2 - 3/8*denom(1/4*s12^2)*mt^2*s14^2*s23^2*s24 - 1/4*denom(1/4*s12^2)
      *mt^2*s14^3*s23*s24 - 1/8*denom(1/4*s12^2)*mt^2*s14^3*s23^2 - 1/4*denom(
      1/4*s12^2)*mt^2*s13*s14*s24^3 - 1/2*denom(1/4*s12^2)*mt^2*s13*s14*s23*
      s24^2 - 1/4*denom(1/4*s12^2)*mt^2*s13*s14^2*s24^2 - 1/2*denom(1/4*s12^2)
      *mt^2*s13*s14^2*s23*s24 - 1/8*denom(1/4*s12^2)*mt^2*s13^2*s24^3 - 3/8*
      denom(1/4*s12^2)*mt^2*s13^2*s14*s24^2 - 1/8*denom(1/4*s12^2)*mt^2*s12*
      s14*s24^3 - 3/8*denom(1/4*s12^2)*mt^2*s12*s14*s23*s24^2 - 1/4*denom(1/4*
      s12^2)*mt^2*s12*s14*s23^2*s24 - 1/4*denom(1/4*s12^2)*mt^2*s12*s14^2*
      s24^2 - denom(1/4*s12^2)*mt^2*s12*s14^2*s23*s24 - 1/8*denom(1/4*s12^2)*
      mt^2*s12*s14^2*s23^2 - 1/8*denom(1/4*s12^2)*mt^2*s12*s14^3*s24 - 1/8*
      denom(1/4*s12^2)*mt^2*s12*s14^3*s23 - 1/8*denom(1/4*s12^2)*mt^2*s12*s13*
      s24^3 - 1/8*denom(1/4*s12^2)*mt^2*s12*s13*s23*s24^2 - denom(1/4*s12^2)*
      mt^2*s12*s13*s14*s24^2 - 1/2*denom(1/4*s12^2)*mt^2*s12*s13*s14*s23*s24
       - 3/8*denom(1/4*s12^2)*mt^2*s12*s13*s14^2*s24 - 1/8*denom(1/4*s12^2)*
      mt^2*s12*s13*s14^2*s23 - 1/8*denom(1/4*s12^2)*mt^2*s12*s13^2*s24^2 - 1/4
      *denom(1/4*s12^2)*mt^2*s12*s13^2*s14*s24 - 1/8*denom(1/4*s12^2)*mt^2*
      s12^2*s14*s24^2 - 1/4*denom(1/4*s12^2)*mt^2*s12^2*s14*s23*s24 - 1/8*
      denom(1/4*s12^2)*mt^2*s12^2*s14^2*s24 - 1/8*denom(1/4*s12^2)*mt^2*s12^2*
      s14^2*s23 - 1/8*denom(1/4*s12^2)*mt^2*s12^2*s13*s24^2 - 1/4*denom(1/4*
      s12^2)*mt^2*s12^2*s13*s14*s24 + 1/8*denom(1/4*s12^2)*mt^2*mh^2*s12*s14*
      s24^2 + 1/4*denom(1/4*s12^2)*mt^2*mh^2*s12*s14*s23*s24 + 1/8*denom(1/4*
      s12^2)*mt^2*mh^2*s12*s14^2*s24 + 1/8*denom(1/4*s12^2)*mt^2*mh^2*s12*
      s14^2*s23 + 1/8*denom(1/4*s12^2)*mt^2*mh^2*s12*s13*s24^2 + 1/4*denom(1/4
      *s12^2)*mt^2*mh^2*s12*s13*s14*s24 + 1/8*denom(1/4*s12^2)*mt^4*s14*s24^3
       + 1/2*denom(1/4*s12^2)*mt^4*s14*s23*s24^2 + 3/8*denom(1/4*s12^2)*mt^4*
      s14*s23^2*s24 + 1/4*denom(1/4*s12^2)*mt^4*s14^2*s24^2 + 5/4*denom(1/4*
      s12^2)*mt^4*s14^2*s23*s24 + 3/8*denom(1/4*s12^2)*mt^4*s14^2*s23^2 + 1/8*
      denom(1/4*s12^2)*mt^4*s14^3*s24 + 1/4*denom(1/4*s12^2)*mt^4*s14^3*s23 + 
      1/4*denom(1/4*s12^2)*mt^4*s13*s24^3 + 1/4*denom(1/4*s12^2)*mt^4*s13*s23*
      s24^2 + 5/4*denom(1/4*s12^2)*mt^4*s13*s14*s24^2 + denom(1/4*s12^2)*mt^4*
      s13*s14*s23*s24 + 1/2*denom(1/4*s12^2)*mt^4*s13*s14^2*s24 + 1/4*denom(1/
      4*s12^2)*mt^4*s13*s14^2*s23 + 3/8*denom(1/4*s12^2)*mt^4*s13^2*s24^2 + 3/
      8*denom(1/4*s12^2)*mt^4*s13^2*s14*s24 + 1/8*denom(1/4*s12^2)*mt^4*s12*
      s24^3 + 1/4*denom(1/4*s12^2)*mt^4*s12*s23*s24^2 + 1/8*denom(1/4*s12^2)*
      mt^4*s12*s23^2*s24 + 9/8*denom(1/4*s12^2)*mt^4*s12*s14*s24^2 + 15/8*
      denom(1/4*s12^2)*mt^4*s12*s14*s23*s24 + 1/4*denom(1/4*s12^2)*mt^4*s12*
      s14*s23^2 + 9/8*denom(1/4*s12^2)*mt^4*s12*s14^2*s24 + 7/8*denom(1/4*
      s12^2)*mt^4*s12*s14^2*s23 + 1/8*denom(1/4*s12^2)*mt^4*s12*s14^3 + 7/8*
      denom(1/4*s12^2)*mt^4*s12*s13*s24^2 + 3/8*denom(1/4*s12^2)*mt^4*s12*s13*
      s23*s24 + 15/8*denom(1/4*s12^2)*mt^4*s12*s13*s14*s24 + 3/8*denom(1/4*
      s12^2)*mt^4*s12*s13*s14*s23 + 1/4*denom(1/4*s12^2)*mt^4*s12*s13*s14^2 + 
      1/4*denom(1/4*s12^2)*mt^4*s12*s13^2*s24 + 1/8*denom(1/4*s12^2)*mt^4*s12*
      s13^2*s14 + 1/8*denom(1/4*s12^2)*mt^4*s12^2*s24^2 + 1/8*denom(1/4*s12^2)
      *mt^4*s12^2*s23*s24 + 1/2*denom(1/4*s12^2)*mt^4*s12^2*s14*s24 + 1/4*
      denom(1/4*s12^2)*mt^4*s12^2*s14*s23 + 1/8*denom(1/4*s12^2)*mt^4*s12^2*
      s14^2 + 1/4*denom(1/4*s12^2)*mt^4*s12^2*s13*s24 + 1/8*denom(1/4*s12^2)*
      mt^4*s12^2*s13*s14 - 1/8*denom(1/4*s12^2)*mt^4*mh^2*s12*s24^2 - 1/8*
      denom(1/4*s12^2)*mt^4*mh^2*s12*s23*s24 - 1/2*denom(1/4*s12^2)*mt^4*mh^2*
      s12*s14*s24 - 1/4*denom(1/4*s12^2)*mt^4*mh^2*s12*s14*s23 - 1/8*denom(1/4
      *s12^2)*mt^4*mh^2*s12*s14^2 - 1/4*denom(1/4*s12^2)*mt^4*mh^2*s12*s13*s24
       - 1/8*denom(1/4*s12^2)*mt^4*mh^2*s12*s13*s14 - 1/8*denom(1/4*s12^2)*
      mt^6*s24^3 - 1/4*denom(1/4*s12^2)*mt^6*s23*s24^2 - 1/8*denom(1/4*s12^2)*
      mt^6*s23^2*s24 - 7/8*denom(1/4*s12^2)*mt^6*s14*s24^2 - 7/4*denom(1/4*
      s12^2)*mt^6*s14*s23*s24 - 3/8*denom(1/4*s12^2)*mt^6*s14*s23^2 - 7/8*
      denom(1/4*s12^2)*mt^6*s14^2*s24 - denom(1/4*s12^2)*mt^6*s14^2*s23 - 1/8*
      denom(1/4*s12^2)*mt^6*s14^3 - denom(1/4*s12^2)*mt^6*s13*s24^2 - 1/2*
      denom(1/4*s12^2)*mt^6*s13*s23*s24 - 7/4*denom(1/4*s12^2)*mt^6*s13*s14*
      s24 - 1/2*denom(1/4*s12^2)*mt^6*s13*s14*s23 - 1/4*denom(1/4*s12^2)*mt^6*
      s13*s14^2 - 3/8*denom(1/4*s12^2)*mt^6*s13^2*s24 - 1/8*denom(1/4*s12^2)*
      mt^6*s13^2*s14 - 7/8*denom(1/4*s12^2)*mt^6*s12*s24^2 - denom(1/4*s12^2)*
      mt^6*s12*s23*s24 - 1/8*denom(1/4*s12^2)*mt^6*s12*s23^2 - 11/4*denom(1/4*
      s12^2)*mt^6*s12*s14*s24 - 3/2*denom(1/4*s12^2)*mt^6*s12*s14*s23 - 7/8*
      denom(1/4*s12^2)*mt^6*s12*s14^2 - 3/2*denom(1/4*s12^2)*mt^6*s12*s13*s24
       - 1/4*denom(1/4*s12^2)*mt^6*s12*s13*s23 - denom(1/4*s12^2)*mt^6*s12*s13
      *s14 - 1/8*denom(1/4*s12^2)*mt^6*s12*s13^2 - 3/8*denom(1/4*s12^2)*mt^6*
      s12^2*s24 - 1/8*denom(1/4*s12^2)*mt^6*s12^2*s23 - 3/8*denom(1/4*s12^2)*
      mt^6*s12^2*s14 - 1/8*denom(1/4*s12^2)*mt^6*s12^2*s13 + 3/8*denom(1/4*
      s12^2)*mt^6*mh^2*s12*s24 + 1/8*denom(1/4*s12^2)*mt^6*mh^2*s12*s23 + 3/8*
      denom(1/4*s12^2)*mt^6*mh^2*s12*s14 + 1/8*denom(1/4*s12^2)*mt^6*mh^2*s12*
      s13 + 5/8*denom(1/4*s12^2)*mt^8*s24^2 + 3/4*denom(1/4*s12^2)*mt^8*s23*
      s24 + 1/8*denom(1/4*s12^2)*mt^8*s23^2 + 7/4*denom(1/4*s12^2)*mt^8*s14*
      s24 + 5/4*denom(1/4*s12^2)*mt^8*s14*s23 + 5/8*denom(1/4*s12^2)*mt^8*
      s14^2 + 5/4*denom(1/4*s12^2)*mt^8*s13*s24 + 1/4*denom(1/4*s12^2)*mt^8*
      s13*s23 + 3/4*denom(1/4*s12^2)*mt^8*s13*s14 + 1/8*denom(1/4*s12^2)*mt^8*
      s13^2 + 7/4*denom(1/4*s12^2)*mt^8*s12*s24 + 3/4*denom(1/4*s12^2)*mt^8*
      s12*s23 + 7/4*denom(1/4*s12^2)*mt^8*s12*s14 + 3/4*denom(1/4*s12^2)*mt^8*
      s12*s13 + 1/4*denom(1/4*s12^2)*mt^8*s12^2 - 1/4*denom(1/4*s12^2)*mt^8*
      mh^2*s12 - denom(1/4*s12^2)*mt^10*s24 - 1/2*denom(1/4*s12^2)*mt^10*s23
       - denom(1/4*s12^2)*mt^10*s14 - 1/2*denom(1/4*s12^2)*mt^10*s13 - denom(1/
      4*s12^2)*mt^10*s12 + 1/2*denom(1/4*s12^2)*mt^12;
 
 .sort
id KMatrix(8,11) =   - 1/2*mt^2*s14*s23*s24 - 1/2*mt^2*s14*s23^2 - 1/2*mt^2*
      s14^2*s23 - 1/2*mt^2*s13*s24^2 - 1/2*mt^2*s13*s23*s24 - 1/2*mt^2*s13*s14
      *s24 - 1/2*mt^2*s13*s14*s23 - 1/2*mt^2*s13^2*s24 - 1/2*mt^2*s12*s24^2 - 
      mt^2*s12*s23*s24 - 1/2*mt^2*s12*s23^2 - mt^2*s12*s14*s24 - 3/2*mt^2*s12*
      s14*s23 - 1/2*mt^2*s12*s14^2 - 3/2*mt^2*s12*s13*s24 - mt^2*s12*s13*s23
       - mt^2*s12*s13*s14 - 1/2*mt^2*s12*s13^2 - mt^2*s12^2*s24 - mt^2*s12^2*
      s23 - mt^2*s12^2*s14 - mt^2*s12^2*s13 - 1/2*mt^2*s12^3 + 1/2*mt^2*mh^2*
      s14*s23 + 1/2*mt^2*mh^2*s13*s24 + mt^2*mh^2*s12*s24 + mt^2*mh^2*s12*s23
       + mt^2*mh^2*s12*s14 + mt^2*mh^2*s12*s13 + mt^2*mh^2*s12^2 - 1/2*mt^2*
      mh^4*s12 + 1/2*mt^4*s24^2 + mt^4*s23*s24 + 1/2*mt^4*s23^2 + mt^4*s14*s24
       + 2*mt^4*s14*s23 + 1/2*mt^4*s14^2 + 2*mt^4*s13*s24 + mt^4*s13*s23 + 
      mt^4*s13*s14 + 1/2*mt^4*s13^2 + 7/2*mt^4*s12*s24 + 7/2*mt^4*s12*s23 + 7/
      2*mt^4*s12*s14 + 7/2*mt^4*s12*s13 + 3*mt^4*s12^2 - 1/2*mt^4*mh^2*s24 - 1/
      2*mt^4*mh^2*s23 - 1/2*mt^4*mh^2*s14 - 1/2*mt^4*mh^2*s13 - 3*mt^4*mh^2*
      s12 - 2*mt^6*s24 - 2*mt^6*s23 - 2*mt^6*s14 - 2*mt^6*s13 - 5*mt^6*s12 + 
      mt^6*mh^2 + 2*mt^8 + 1/4*denom(1/2*s12)*s14^2*s23*s24^2 + 1/4*denom(1/2*
      s12)*s14^2*s23^2*s24 + 1/4*denom(1/2*s12)*s14^3*s23*s24 + 1/4*denom(1/2*
      s12)*s13*s14*s24^3 + 1/4*denom(1/2*s12)*s13*s14*s23*s24^2 + 1/4*denom(1/
      2*s12)*s13*s14^2*s24^2 + 1/4*denom(1/2*s12)*s13*s14^2*s23*s24 + 1/4*
      denom(1/2*s12)*s13^2*s14*s24^2 + 1/4*denom(1/2*s12)*s12*s14*s24^3 + 1/2*
      denom(1/2*s12)*s12*s14*s23*s24^2 + 1/4*denom(1/2*s12)*s12*s14*s23^2*s24
       + 1/2*denom(1/2*s12)*s12*s14^2*s24^2 + 3/4*denom(1/2*s12)*s12*s14^2*s23
      *s24 + 1/4*denom(1/2*s12)*s12*s14^3*s24 + 3/4*denom(1/2*s12)*s12*s13*s14
      *s24^2 + 1/2*denom(1/2*s12)*s12*s13*s14*s23*s24 + 1/2*denom(1/2*s12)*s12
      *s13*s14^2*s24 + 1/4*denom(1/2*s12)*s12*s13^2*s14*s24 + 1/2*denom(1/2*
      s12)*s12^2*s14*s24^2 + 1/2*denom(1/2*s12)*s12^2*s14*s23*s24 + 1/2*denom(
      1/2*s12)*s12^2*s14^2*s24 + 1/2*denom(1/2*s12)*s12^2*s13*s14*s24 + 1/4*
      denom(1/2*s12)*s12^3*s14*s24 - 1/4*denom(1/2*s12)*mh^2*s14^2*s23*s24 - 1/
      4*denom(1/2*s12)*mh^2*s13*s14*s24^2 - 1/2*denom(1/2*s12)*mh^2*s12*s14*
      s24^2 - 1/2*denom(1/2*s12)*mh^2*s12*s14*s23*s24 - 1/2*denom(1/2*s12)*
      mh^2*s12*s14^2*s24 - 1/2*denom(1/2*s12)*mh^2*s12*s13*s14*s24 - 1/2*
      denom(1/2*s12)*mh^2*s12^2*s14*s24 + 1/4*denom(1/2*s12)*mh^4*s12*s14*s24
       - 1/4*denom(1/2*s12)*mt^2*s14*s24^3 - 3/4*denom(1/2*s12)*mt^2*s14*s23*
      s24^2 - 1/2*denom(1/2*s12)*mt^2*s14*s23^2*s24 - 1/2*denom(1/2*s12)*mt^2*
      s14^2*s24^2 - 3/2*denom(1/2*s12)*mt^2*s14^2*s23*s24 - 1/2*denom(1/2*s12)
      *mt^2*s14^2*s23^2 - 1/4*denom(1/2*s12)*mt^2*s14^3*s24 - 1/4*denom(1/2*
      s12)*mt^2*s14^3*s23 - 1/4*denom(1/2*s12)*mt^2*s13*s24^3 - 1/4*denom(1/2*
      s12)*mt^2*s13*s23*s24^2 - 3/2*denom(1/2*s12)*mt^2*s13*s14*s24^2 - 3/2*
      denom(1/2*s12)*mt^2*s13*s14*s23*s24 - 3/4*denom(1/2*s12)*mt^2*s13*s14^2*
      s24 - 1/4*denom(1/2*s12)*mt^2*s13*s14^2*s23 - 1/2*denom(1/2*s12)*mt^2*
      s13^2*s24^2 - 1/2*denom(1/2*s12)*mt^2*s13^2*s14*s24 - 1/4*denom(1/2*s12)
      *mt^2*s12*s24^3 - 1/2*denom(1/2*s12)*mt^2*s12*s23*s24^2 - 1/4*denom(1/2*
      s12)*mt^2*s12*s23^2*s24 - 5/2*denom(1/2*s12)*mt^2*s12*s14*s24^2 - 13/4*
      denom(1/2*s12)*mt^2*s12*s14*s23*s24 - 1/2*denom(1/2*s12)*mt^2*s12*s14*
      s23^2 - 5/2*denom(1/2*s12)*mt^2*s12*s14^2*s24 - denom(1/2*s12)*mt^2*s12*
      s14^2*s23 - 1/4*denom(1/2*s12)*mt^2*s12*s14^3 - denom(1/2*s12)*mt^2*s12*
      s13*s24^2 - 3/4*denom(1/2*s12)*mt^2*s12*s13*s23*s24 - 13/4*denom(1/2*s12
      )*mt^2*s12*s13*s14*s24 - 3/4*denom(1/2*s12)*mt^2*s12*s13*s14*s23 - 1/2*
      denom(1/2*s12)*mt^2*s12*s13*s14^2 - 1/2*denom(1/2*s12)*mt^2*s12*s13^2*
      s24 - 1/4*denom(1/2*s12)*mt^2*s12*s13^2*s14 - 1/2*denom(1/2*s12)*mt^2*
      s12^2*s24^2 - 1/2*denom(1/2*s12)*mt^2*s12^2*s23*s24 - 5/2*denom(1/2*s12)
      *mt^2*s12^2*s14*s24 - 3/4*denom(1/2*s12)*mt^2*s12^2*s14*s23 - 1/2*denom(
      1/2*s12)*mt^2*s12^2*s14^2 - 3/4*denom(1/2*s12)*mt^2*s12^2*s13*s24 - 1/2*
      denom(1/2*s12)*mt^2*s12^2*s13*s14 - 1/4*denom(1/2*s12)*mt^2*s12^3*s24 - 
      1/4*denom(1/2*s12)*mt^2*s12^3*s14 + 1/4*denom(1/2*s12)*mt^2*mh^2*s14*
      s24^2 + 1/2*denom(1/2*s12)*mt^2*mh^2*s14*s23*s24 + 1/4*denom(1/2*s12)*
      mt^2*mh^2*s14^2*s24 + 1/4*denom(1/2*s12)*mt^2*mh^2*s14^2*s23 + 1/4*
      denom(1/2*s12)*mt^2*mh^2*s13*s24^2 + 1/2*denom(1/2*s12)*mt^2*mh^2*s13*
      s14*s24 + 1/2*denom(1/2*s12)*mt^2*mh^2*s12*s24^2 + 1/2*denom(1/2*s12)*
      mt^2*mh^2*s12*s23*s24 + 5/2*denom(1/2*s12)*mt^2*mh^2*s12*s14*s24 + 3/4*
      denom(1/2*s12)*mt^2*mh^2*s12*s14*s23 + 1/2*denom(1/2*s12)*mt^2*mh^2*s12*
      s14^2 + 3/4*denom(1/2*s12)*mt^2*mh^2*s12*s13*s24 + 1/2*denom(1/2*s12)*
      mt^2*mh^2*s12*s13*s14 + 1/2*denom(1/2*s12)*mt^2*mh^2*s12^2*s24 + 1/2*
      denom(1/2*s12)*mt^2*mh^2*s12^2*s14 - 1/4*denom(1/2*s12)*mt^2*mh^4*s12*
      s24 - 1/4*denom(1/2*s12)*mt^2*mh^4*s12*s14 + 1/4*denom(1/2*s12)*mt^4*
      s24^3 + 1/2*denom(1/2*s12)*mt^4*s23*s24^2 + 1/4*denom(1/2*s12)*mt^4*
      s23^2*s24 + 7/4*denom(1/2*s12)*mt^4*s14*s24^2 + 13/4*denom(1/2*s12)*mt^4
      *s14*s23*s24 + denom(1/2*s12)*mt^4*s14*s23^2 + 7/4*denom(1/2*s12)*mt^4*
      s14^2*s24 + 7/4*denom(1/2*s12)*mt^4*s14^2*s23 + 1/4*denom(1/2*s12)*mt^4*
      s14^3 + 7/4*denom(1/2*s12)*mt^4*s13*s24^2 + 5/4*denom(1/2*s12)*mt^4*s13*
      s23*s24 + 13/4*denom(1/2*s12)*mt^4*s13*s14*s24 + 5/4*denom(1/2*s12)*mt^4
      *s13*s14*s23 + 1/2*denom(1/2*s12)*mt^4*s13*s14^2 + denom(1/2*s12)*mt^4*
      s13^2*s24 + 1/4*denom(1/2*s12)*mt^4*s13^2*s14 + 9/4*denom(1/2*s12)*mt^4*
      s12*s24^2 + 11/4*denom(1/2*s12)*mt^4*s12*s23*s24 + 1/2*denom(1/2*s12)*
      mt^4*s12*s23^2 + 7*denom(1/2*s12)*mt^4*s12*s14*s24 + 4*denom(1/2*s12)*
      mt^4*s12*s14*s23 + 9/4*denom(1/2*s12)*mt^4*s12*s14^2 + 4*denom(1/2*s12)*
      mt^4*s12*s13*s24 + denom(1/2*s12)*mt^4*s12*s13*s23 + 11/4*denom(1/2*s12)
      *mt^4*s12*s13*s14 + 1/2*denom(1/2*s12)*mt^4*s12*s13^2 + 9/4*denom(1/2*
      s12)*mt^4*s12^2*s24 + 3/4*denom(1/2*s12)*mt^4*s12^2*s23 + 9/4*denom(1/2*
      s12)*mt^4*s12^2*s14 + 3/4*denom(1/2*s12)*mt^4*s12^2*s13 + 1/4*denom(1/2*
      s12)*mt^4*s12^3 - 1/4*denom(1/2*s12)*mt^4*mh^2*s24^2 - 1/4*denom(1/2*s12
      )*mt^4*mh^2*s23*s24 - denom(1/2*s12)*mt^4*mh^2*s14*s24 - 1/2*denom(1/2*
      s12)*mt^4*mh^2*s14*s23 - 1/4*denom(1/2*s12)*mt^4*mh^2*s14^2 - 1/2*denom(
      1/2*s12)*mt^4*mh^2*s13*s24 - 1/4*denom(1/2*s12)*mt^4*mh^2*s13*s14 - 9/4*
      denom(1/2*s12)*mt^4*mh^2*s12*s24 - 3/4*denom(1/2*s12)*mt^4*mh^2*s12*s23
       - 9/4*denom(1/2*s12)*mt^4*mh^2*s12*s14 - 3/4*denom(1/2*s12)*mt^4*mh^2*
      s12*s13 - 1/2*denom(1/2*s12)*mt^4*mh^2*s12^2 + 1/4*denom(1/2*s12)*mt^4*
      mh^4*s12 - 3/2*denom(1/2*s12)*mt^6*s24^2 - 2*denom(1/2*s12)*mt^6*s23*s24
       - 1/2*denom(1/2*s12)*mt^6*s23^2 - 4*denom(1/2*s12)*mt^6*s14*s24 - 7/2*
      denom(1/2*s12)*mt^6*s14*s23 - 3/2*denom(1/2*s12)*mt^6*s14^2 - 7/2*denom(
      1/2*s12)*mt^6*s13*s24 - denom(1/2*s12)*mt^6*s13*s23 - 2*denom(1/2*s12)*
      mt^6*s13*s14 - 1/2*denom(1/2*s12)*mt^6*s13^2 - 23/4*denom(1/2*s12)*mt^6*
      s12*s24 - 13/4*denom(1/2*s12)*mt^6*s12*s23 - 23/4*denom(1/2*s12)*mt^6*
      s12*s14 - 13/4*denom(1/2*s12)*mt^6*s12*s13 - 2*denom(1/2*s12)*mt^6*s12^2
       + 3/4*denom(1/2*s12)*mt^6*mh^2*s24 + 1/4*denom(1/2*s12)*mt^6*mh^2*s23
       + 3/4*denom(1/2*s12)*mt^6*mh^2*s14 + 1/4*denom(1/2*s12)*mt^6*mh^2*s13
       + 2*denom(1/2*s12)*mt^6*mh^2*s12 + 3*denom(1/2*s12)*mt^8*s24 + 2*denom(
      1/2*s12)*mt^8*s23 + 3*denom(1/2*s12)*mt^8*s14 + 2*denom(1/2*s12)*mt^8*
      s13 + 9/2*denom(1/2*s12)*mt^8*s12 - 1/2*denom(1/2*s12)*mt^8*mh^2 - 2*
      denom(1/2*s12)*mt^10 + 1/8*denom(1/4*s12^2)*s14^3*s23^2*s24 + 1/4*denom(
      1/4*s12^2)*s13*s14^2*s23*s24^2 + 1/8*denom(1/4*s12^2)*s13^2*s14*s24^3 + 
      1/8*denom(1/4*s12^2)*s12*s14^2*s23*s24^2 + 1/8*denom(1/4*s12^2)*s12*
      s14^2*s23^2*s24 + 1/8*denom(1/4*s12^2)*s12*s14^3*s23*s24 + 1/8*denom(1/4
      *s12^2)*s12*s13*s14*s24^3 + 1/8*denom(1/4*s12^2)*s12*s13*s14*s23*s24^2
       + 1/8*denom(1/4*s12^2)*s12*s13*s14^2*s24^2 + 1/8*denom(1/4*s12^2)*s12*
      s13*s14^2*s23*s24 + 1/8*denom(1/4*s12^2)*s12*s13^2*s14*s24^2 + 1/8*
      denom(1/4*s12^2)*s12^2*s14^2*s23*s24 + 1/8*denom(1/4*s12^2)*s12^2*s13*
      s14*s24^2 - 1/8*denom(1/4*s12^2)*mh^2*s12*s14^2*s23*s24 - 1/8*denom(1/4*
      s12^2)*mh^2*s12*s13*s14*s24^2 - 1/4*denom(1/4*s12^2)*mt^2*s14^2*s23*
      s24^2 - 3/8*denom(1/4*s12^2)*mt^2*s14^2*s23^2*s24 - 1/4*denom(1/4*s12^2)
      *mt^2*s14^3*s23*s24 - 1/8*denom(1/4*s12^2)*mt^2*s14^3*s23^2 - 1/4*denom(
      1/4*s12^2)*mt^2*s13*s14*s24^3 - 1/2*denom(1/4*s12^2)*mt^2*s13*s14*s23*
      s24^2 - 1/4*denom(1/4*s12^2)*mt^2*s13*s14^2*s24^2 - 1/2*denom(1/4*s12^2)
      *mt^2*s13*s14^2*s23*s24 - 1/8*denom(1/4*s12^2)*mt^2*s13^2*s24^3 - 3/8*
      denom(1/4*s12^2)*mt^2*s13^2*s14*s24^2 - 1/8*denom(1/4*s12^2)*mt^2*s12*
      s14*s24^3 - 3/8*denom(1/4*s12^2)*mt^2*s12*s14*s23*s24^2 - 1/4*denom(1/4*
      s12^2)*mt^2*s12*s14*s23^2*s24 - 1/4*denom(1/4*s12^2)*mt^2*s12*s14^2*
      s24^2 - denom(1/4*s12^2)*mt^2*s12*s14^2*s23*s24 - 1/8*denom(1/4*s12^2)*
      mt^2*s12*s14^2*s23^2 - 1/8*denom(1/4*s12^2)*mt^2*s12*s14^3*s24 - 1/8*
      denom(1/4*s12^2)*mt^2*s12*s14^3*s23 - 1/8*denom(1/4*s12^2)*mt^2*s12*s13*
      s24^3 - 1/8*denom(1/4*s12^2)*mt^2*s12*s13*s23*s24^2 - denom(1/4*s12^2)*
      mt^2*s12*s13*s14*s24^2 - 1/2*denom(1/4*s12^2)*mt^2*s12*s13*s14*s23*s24
       - 3/8*denom(1/4*s12^2)*mt^2*s12*s13*s14^2*s24 - 1/8*denom(1/4*s12^2)*
      mt^2*s12*s13*s14^2*s23 - 1/8*denom(1/4*s12^2)*mt^2*s12*s13^2*s24^2 - 1/4
      *denom(1/4*s12^2)*mt^2*s12*s13^2*s14*s24 - 1/8*denom(1/4*s12^2)*mt^2*
      s12^2*s14*s24^2 - 1/4*denom(1/4*s12^2)*mt^2*s12^2*s14*s23*s24 - 1/8*
      denom(1/4*s12^2)*mt^2*s12^2*s14^2*s24 - 1/8*denom(1/4*s12^2)*mt^2*s12^2*
      s14^2*s23 - 1/8*denom(1/4*s12^2)*mt^2*s12^2*s13*s24^2 - 1/4*denom(1/4*
      s12^2)*mt^2*s12^2*s13*s14*s24 + 1/8*denom(1/4*s12^2)*mt^2*mh^2*s12*s14*
      s24^2 + 1/4*denom(1/4*s12^2)*mt^2*mh^2*s12*s14*s23*s24 + 1/8*denom(1/4*
      s12^2)*mt^2*mh^2*s12*s14^2*s24 + 1/8*denom(1/4*s12^2)*mt^2*mh^2*s12*
      s14^2*s23 + 1/8*denom(1/4*s12^2)*mt^2*mh^2*s12*s13*s24^2 + 1/4*denom(1/4
      *s12^2)*mt^2*mh^2*s12*s13*s14*s24 + 1/8*denom(1/4*s12^2)*mt^4*s14*s24^3
       + 1/2*denom(1/4*s12^2)*mt^4*s14*s23*s24^2 + 3/8*denom(1/4*s12^2)*mt^4*
      s14*s23^2*s24 + 1/4*denom(1/4*s12^2)*mt^4*s14^2*s24^2 + 5/4*denom(1/4*
      s12^2)*mt^4*s14^2*s23*s24 + 3/8*denom(1/4*s12^2)*mt^4*s14^2*s23^2 + 1/8*
      denom(1/4*s12^2)*mt^4*s14^3*s24 + 1/4*denom(1/4*s12^2)*mt^4*s14^3*s23 + 
      1/4*denom(1/4*s12^2)*mt^4*s13*s24^3 + 1/4*denom(1/4*s12^2)*mt^4*s13*s23*
      s24^2 + 5/4*denom(1/4*s12^2)*mt^4*s13*s14*s24^2 + denom(1/4*s12^2)*mt^4*
      s13*s14*s23*s24 + 1/2*denom(1/4*s12^2)*mt^4*s13*s14^2*s24 + 1/4*denom(1/
      4*s12^2)*mt^4*s13*s14^2*s23 + 3/8*denom(1/4*s12^2)*mt^4*s13^2*s24^2 + 3/
      8*denom(1/4*s12^2)*mt^4*s13^2*s14*s24 + 1/8*denom(1/4*s12^2)*mt^4*s12*
      s24^3 + 1/4*denom(1/4*s12^2)*mt^4*s12*s23*s24^2 + 1/8*denom(1/4*s12^2)*
      mt^4*s12*s23^2*s24 + 9/8*denom(1/4*s12^2)*mt^4*s12*s14*s24^2 + 15/8*
      denom(1/4*s12^2)*mt^4*s12*s14*s23*s24 + 1/4*denom(1/4*s12^2)*mt^4*s12*
      s14*s23^2 + 9/8*denom(1/4*s12^2)*mt^4*s12*s14^2*s24 + 7/8*denom(1/4*
      s12^2)*mt^4*s12*s14^2*s23 + 1/8*denom(1/4*s12^2)*mt^4*s12*s14^3 + 7/8*
      denom(1/4*s12^2)*mt^4*s12*s13*s24^2 + 3/8*denom(1/4*s12^2)*mt^4*s12*s13*
      s23*s24 + 15/8*denom(1/4*s12^2)*mt^4*s12*s13*s14*s24 + 3/8*denom(1/4*
      s12^2)*mt^4*s12*s13*s14*s23 + 1/4*denom(1/4*s12^2)*mt^4*s12*s13*s14^2 + 
      1/4*denom(1/4*s12^2)*mt^4*s12*s13^2*s24 + 1/8*denom(1/4*s12^2)*mt^4*s12*
      s13^2*s14 + 1/8*denom(1/4*s12^2)*mt^4*s12^2*s24^2 + 1/8*denom(1/4*s12^2)
      *mt^4*s12^2*s23*s24 + 1/2*denom(1/4*s12^2)*mt^4*s12^2*s14*s24 + 1/4*
      denom(1/4*s12^2)*mt^4*s12^2*s14*s23 + 1/8*denom(1/4*s12^2)*mt^4*s12^2*
      s14^2 + 1/4*denom(1/4*s12^2)*mt^4*s12^2*s13*s24 + 1/8*denom(1/4*s12^2)*
      mt^4*s12^2*s13*s14 - 1/8*denom(1/4*s12^2)*mt^4*mh^2*s12*s24^2 - 1/8*
      denom(1/4*s12^2)*mt^4*mh^2*s12*s23*s24 - 1/2*denom(1/4*s12^2)*mt^4*mh^2*
      s12*s14*s24 - 1/4*denom(1/4*s12^2)*mt^4*mh^2*s12*s14*s23 - 1/8*denom(1/4
      *s12^2)*mt^4*mh^2*s12*s14^2 - 1/4*denom(1/4*s12^2)*mt^4*mh^2*s12*s13*s24
       - 1/8*denom(1/4*s12^2)*mt^4*mh^2*s12*s13*s14 - 1/8*denom(1/4*s12^2)*
      mt^6*s24^3 - 1/4*denom(1/4*s12^2)*mt^6*s23*s24^2 - 1/8*denom(1/4*s12^2)*
      mt^6*s23^2*s24 - 7/8*denom(1/4*s12^2)*mt^6*s14*s24^2 - 7/4*denom(1/4*
      s12^2)*mt^6*s14*s23*s24 - 3/8*denom(1/4*s12^2)*mt^6*s14*s23^2 - 7/8*
      denom(1/4*s12^2)*mt^6*s14^2*s24 - denom(1/4*s12^2)*mt^6*s14^2*s23 - 1/8*
      denom(1/4*s12^2)*mt^6*s14^3 - denom(1/4*s12^2)*mt^6*s13*s24^2 - 1/2*
      denom(1/4*s12^2)*mt^6*s13*s23*s24 - 7/4*denom(1/4*s12^2)*mt^6*s13*s14*
      s24 - 1/2*denom(1/4*s12^2)*mt^6*s13*s14*s23 - 1/4*denom(1/4*s12^2)*mt^6*
      s13*s14^2 - 3/8*denom(1/4*s12^2)*mt^6*s13^2*s24 - 1/8*denom(1/4*s12^2)*
      mt^6*s13^2*s14 - 7/8*denom(1/4*s12^2)*mt^6*s12*s24^2 - denom(1/4*s12^2)*
      mt^6*s12*s23*s24 - 1/8*denom(1/4*s12^2)*mt^6*s12*s23^2 - 11/4*denom(1/4*
      s12^2)*mt^6*s12*s14*s24 - 3/2*denom(1/4*s12^2)*mt^6*s12*s14*s23 - 7/8*
      denom(1/4*s12^2)*mt^6*s12*s14^2 - 3/2*denom(1/4*s12^2)*mt^6*s12*s13*s24
       - 1/4*denom(1/4*s12^2)*mt^6*s12*s13*s23 - denom(1/4*s12^2)*mt^6*s12*s13
      *s14 - 1/8*denom(1/4*s12^2)*mt^6*s12*s13^2 - 3/8*denom(1/4*s12^2)*mt^6*
      s12^2*s24 - 1/8*denom(1/4*s12^2)*mt^6*s12^2*s23 - 3/8*denom(1/4*s12^2)*
      mt^6*s12^2*s14 - 1/8*denom(1/4*s12^2)*mt^6*s12^2*s13 + 3/8*denom(1/4*
      s12^2)*mt^6*mh^2*s12*s24 + 1/8*denom(1/4*s12^2)*mt^6*mh^2*s12*s23 + 3/8*
      denom(1/4*s12^2)*mt^6*mh^2*s12*s14 + 1/8*denom(1/4*s12^2)*mt^6*mh^2*s12*
      s13 + 5/8*denom(1/4*s12^2)*mt^8*s24^2 + 3/4*denom(1/4*s12^2)*mt^8*s23*
      s24 + 1/8*denom(1/4*s12^2)*mt^8*s23^2 + 7/4*denom(1/4*s12^2)*mt^8*s14*
      s24 + 5/4*denom(1/4*s12^2)*mt^8*s14*s23 + 5/8*denom(1/4*s12^2)*mt^8*
      s14^2 + 5/4*denom(1/4*s12^2)*mt^8*s13*s24 + 1/4*denom(1/4*s12^2)*mt^8*
      s13*s23 + 3/4*denom(1/4*s12^2)*mt^8*s13*s14 + 1/8*denom(1/4*s12^2)*mt^8*
      s13^2 + 7/4*denom(1/4*s12^2)*mt^8*s12*s24 + 3/4*denom(1/4*s12^2)*mt^8*
      s12*s23 + 7/4*denom(1/4*s12^2)*mt^8*s12*s14 + 3/4*denom(1/4*s12^2)*mt^8*
      s12*s13 + 1/4*denom(1/4*s12^2)*mt^8*s12^2 - 1/4*denom(1/4*s12^2)*mt^8*
      mh^2*s12 - denom(1/4*s12^2)*mt^10*s24 - 1/2*denom(1/4*s12^2)*mt^10*s23
       - denom(1/4*s12^2)*mt^10*s14 - 1/2*denom(1/4*s12^2)*mt^10*s13 - denom(1/
      4*s12^2)*mt^10*s12 + 1/2*denom(1/4*s12^2)*mt^12;
 
 .sort
id KMatrix(8,12) =  mt^4*s14*s23 + mt^4*s13*s24 + mt^4*s12*s24 + mt^4*s12*s23
       + mt^4*s12*s14 + mt^4*s12*s13 + mt^4*s12^2 - mt^4*mh^2*s12 - mt^6*s24
       - mt^6*s23 - mt^6*s14 - mt^6*s13 - 4*mt^6*s12 + 2*mt^8 - denom(1/2*s12)
      *mt^2*s14^2*s23*s24 - denom(1/2*s12)*mt^2*s13*s14*s24^2 - denom(1/2*s12)
      *mt^2*s12*s14*s24^2 - denom(1/2*s12)*mt^2*s12*s14*s23*s24 - denom(1/2*
      s12)*mt^2*s12*s14^2*s24 - denom(1/2*s12)*mt^2*s12*s13*s14*s24 - denom(1/
      2*s12)*mt^2*s12^2*s14*s24 + denom(1/2*s12)*mt^2*mh^2*s12*s14*s24 + 
      denom(1/2*s12)*mt^4*s14*s24^2 + 2*denom(1/2*s12)*mt^4*s14*s23*s24 + 
      denom(1/2*s12)*mt^4*s14^2*s24 + denom(1/2*s12)*mt^4*s14^2*s23 + denom(1/
      2*s12)*mt^4*s13*s24^2 + 2*denom(1/2*s12)*mt^4*s13*s14*s24 + denom(1/2*
      s12)*mt^4*s12*s24^2 + denom(1/2*s12)*mt^4*s12*s23*s24 + 6*denom(1/2*s12)
      *mt^4*s12*s14*s24 + denom(1/2*s12)*mt^4*s12*s14*s23 + denom(1/2*s12)*
      mt^4*s12*s14^2 + denom(1/2*s12)*mt^4*s12*s13*s24 + denom(1/2*s12)*mt^4*
      s12*s13*s14 + denom(1/2*s12)*mt^4*s12^2*s24 + denom(1/2*s12)*mt^4*s12^2*
      s14 - denom(1/2*s12)*mt^4*mh^2*s12*s24 - denom(1/2*s12)*mt^4*mh^2*s12*
      s14 - denom(1/2*s12)*mt^6*s24^2 - denom(1/2*s12)*mt^6*s23*s24 - 4*denom(
      1/2*s12)*mt^6*s14*s24 - 2*denom(1/2*s12)*mt^6*s14*s23 - denom(1/2*s12)*
      mt^6*s14^2 - 2*denom(1/2*s12)*mt^6*s13*s24 - denom(1/2*s12)*mt^6*s13*s14
       - 5*denom(1/2*s12)*mt^6*s12*s24 - denom(1/2*s12)*mt^6*s12*s23 - 5*
      denom(1/2*s12)*mt^6*s12*s14 - denom(1/2*s12)*mt^6*s12*s13 - denom(1/2*
      s12)*mt^6*s12^2 + denom(1/2*s12)*mt^6*mh^2*s12 + 3*denom(1/2*s12)*mt^8*
      s24 + denom(1/2*s12)*mt^8*s23 + 3*denom(1/2*s12)*mt^8*s14 + denom(1/2*
      s12)*mt^8*s13 + 4*denom(1/2*s12)*mt^8*s12 - 2*denom(1/2*s12)*mt^10 + 1/4
      *denom(1/4*s12^2)*s14^3*s23*s24^2 + 1/4*denom(1/4*s12^2)*s13*s14^2*s24^3
       + 1/4*denom(1/4*s12^2)*s12*s14^2*s24^3 + 1/4*denom(1/4*s12^2)*s12*s14^2
      *s23*s24^2 + 1/4*denom(1/4*s12^2)*s12*s14^3*s24^2 + 1/4*denom(1/4*s12^2)
      *s12*s13*s14^2*s24^2 + 1/4*denom(1/4*s12^2)*s12^2*s14^2*s24^2 - 1/4*
      denom(1/4*s12^2)*mh^2*s12*s14^2*s24^2 - 1/4*denom(1/4*s12^2)*mt^2*s14^2*
      s24^3 - 3/4*denom(1/4*s12^2)*mt^2*s14^2*s23*s24^2 - 1/4*denom(1/4*s12^2)
      *mt^2*s14^3*s24^2 - 1/2*denom(1/4*s12^2)*mt^2*s14^3*s23*s24 - 1/2*denom(
      1/4*s12^2)*mt^2*s13*s14*s24^3 - 3/4*denom(1/4*s12^2)*mt^2*s13*s14^2*
      s24^2 - 1/2*denom(1/4*s12^2)*mt^2*s12*s14*s24^3 - 1/2*denom(1/4*s12^2)*
      mt^2*s12*s14*s23*s24^2 - 2*denom(1/4*s12^2)*mt^2*s12*s14^2*s24^2 - 1/2*
      denom(1/4*s12^2)*mt^2*s12*s14^2*s23*s24 - 1/2*denom(1/4*s12^2)*mt^2*s12*
      s14^3*s24 - 1/2*denom(1/4*s12^2)*mt^2*s12*s13*s14*s24^2 - 1/2*denom(1/4*
      s12^2)*mt^2*s12*s13*s14^2*s24 - 1/2*denom(1/4*s12^2)*mt^2*s12^2*s14*
      s24^2 - 1/2*denom(1/4*s12^2)*mt^2*s12^2*s14^2*s24 + 1/2*denom(1/4*s12^2)
      *mt^2*mh^2*s12*s14*s24^2 + 1/2*denom(1/4*s12^2)*mt^2*mh^2*s12*s14^2*s24
       + 1/2*denom(1/4*s12^2)*mt^4*s14*s24^3 + 3/4*denom(1/4*s12^2)*mt^4*s14*
      s23*s24^2 + 3/2*denom(1/4*s12^2)*mt^4*s14^2*s24^2 + 3/2*denom(1/4*s12^2)
      *mt^4*s14^2*s23*s24 + 1/2*denom(1/4*s12^2)*mt^4*s14^3*s24 + 1/4*denom(1/
      4*s12^2)*mt^4*s14^3*s23 + 1/4*denom(1/4*s12^2)*mt^4*s13*s24^3 + 3/2*
      denom(1/4*s12^2)*mt^4*s13*s14*s24^2 + 3/4*denom(1/4*s12^2)*mt^4*s13*
      s14^2*s24 + 1/4*denom(1/4*s12^2)*mt^4*s12*s24^3 + 1/4*denom(1/4*s12^2)*
      mt^4*s12*s23*s24^2 + 13/4*denom(1/4*s12^2)*mt^4*s12*s14*s24^2 + denom(1/
      4*s12^2)*mt^4*s12*s14*s23*s24 + 13/4*denom(1/4*s12^2)*mt^4*s12*s14^2*s24
       + 1/4*denom(1/4*s12^2)*mt^4*s12*s14^2*s23 + 1/4*denom(1/4*s12^2)*mt^4*
      s12*s14^3 + 1/4*denom(1/4*s12^2)*mt^4*s12*s13*s24^2 + denom(1/4*s12^2)*
      mt^4*s12*s13*s14*s24 + 1/4*denom(1/4*s12^2)*mt^4*s12*s13*s14^2 + 1/4*
      denom(1/4*s12^2)*mt^4*s12^2*s24^2 + denom(1/4*s12^2)*mt^4*s12^2*s14*s24
       + 1/4*denom(1/4*s12^2)*mt^4*s12^2*s14^2 - 1/4*denom(1/4*s12^2)*mt^4*
      mh^2*s12*s24^2 - denom(1/4*s12^2)*mt^4*mh^2*s12*s14*s24 - 1/4*denom(1/4*
      s12^2)*mt^4*mh^2*s12*s14^2 - 1/4*denom(1/4*s12^2)*mt^6*s24^3 - 1/4*
      denom(1/4*s12^2)*mt^6*s23*s24^2 - 9/4*denom(1/4*s12^2)*mt^6*s14*s24^2 - 
      3/2*denom(1/4*s12^2)*mt^6*s14*s23*s24 - 9/4*denom(1/4*s12^2)*mt^6*s14^2*
      s24 - 3/4*denom(1/4*s12^2)*mt^6*s14^2*s23 - 1/4*denom(1/4*s12^2)*mt^6*
      s14^3 - 3/4*denom(1/4*s12^2)*mt^6*s13*s24^2 - 3/2*denom(1/4*s12^2)*mt^6*
      s13*s14*s24 - 1/4*denom(1/4*s12^2)*mt^6*s13*s14^2 - 3/2*denom(1/4*s12^2)
      *mt^6*s12*s24^2 - 1/2*denom(1/4*s12^2)*mt^6*s12*s23*s24 - 5*denom(1/4*
      s12^2)*mt^6*s12*s14*s24 - 1/2*denom(1/4*s12^2)*mt^6*s12*s14*s23 - 3/2*
      denom(1/4*s12^2)*mt^6*s12*s14^2 - 1/2*denom(1/4*s12^2)*mt^6*s12*s13*s24
       - 1/2*denom(1/4*s12^2)*mt^6*s12*s13*s14 - 1/2*denom(1/4*s12^2)*mt^6*
      s12^2*s24 - 1/2*denom(1/4*s12^2)*mt^6*s12^2*s14 + 1/2*denom(1/4*s12^2)*
      mt^6*mh^2*s12*s24 + 1/2*denom(1/4*s12^2)*mt^6*mh^2*s12*s14 + denom(1/4*
      s12^2)*mt^8*s24^2 + 1/2*denom(1/4*s12^2)*mt^8*s23*s24 + 3*denom(1/4*
      s12^2)*mt^8*s14*s24 + 3/4*denom(1/4*s12^2)*mt^8*s14*s23 + denom(1/4*
      s12^2)*mt^8*s14^2 + 3/4*denom(1/4*s12^2)*mt^8*s13*s24 + 1/2*denom(1/4*
      s12^2)*mt^8*s13*s14 + 9/4*denom(1/4*s12^2)*mt^8*s12*s24 + 1/4*denom(1/4*
      s12^2)*mt^8*s12*s23 + 9/4*denom(1/4*s12^2)*mt^8*s12*s14 + 1/4*denom(1/4*
      s12^2)*mt^8*s12*s13 + 1/4*denom(1/4*s12^2)*mt^8*s12^2 - 1/4*denom(1/4*
      s12^2)*mt^8*mh^2*s12 - 5/4*denom(1/4*s12^2)*mt^10*s24 - 1/4*denom(1/4*
      s12^2)*mt^10*s23 - 5/4*denom(1/4*s12^2)*mt^10*s14 - 1/4*denom(1/4*s12^2)
      *mt^10*s13 - denom(1/4*s12^2)*mt^10*s12 + 1/2*denom(1/4*s12^2)*mt^12;
 
 .sort
id KMatrix(8,13) =  1/2*mt*s12*s14*s24^2 + mt*s12*s14*s23*s24 + 1/2*mt*s12*s14
      *s23^2 + mt*s12*s14^2*s24 + mt*s12*s14^2*s23 + 1/2*mt*s12*s14^3 + mt*s12
      *s13*s14*s24 + mt*s12*s13*s14*s23 + mt*s12*s13*s14^2 + 1/2*mt*s12*s13^2*
      s14 + mt*s12^2*s14*s24 + mt*s12^2*s14*s23 + mt*s12^2*s14^2 + mt*s12^2*
      s13*s14 + 1/2*mt*s12^3*s14 - mt*mh^2*s12*s14*s24 - mt*mh^2*s12*s14*s23
       - mt*mh^2*s12*s14^2 - mt*mh^2*s12*s13*s14 - mt*mh^2*s12^2*s14 + 1/2*mt*
      mh^4*s12*s14 - 1/2*mt^3*s12*s24^2 - mt^3*s12*s23*s24 - 1/2*mt^3*s12*
      s23^2 - 3*mt^3*s12*s14*s24 - 3*mt^3*s12*s14*s23 - 5/2*mt^3*s12*s14^2 - 
      mt^3*s12*s13*s24 - mt^3*s12*s13*s23 - 3*mt^3*s12*s13*s14 - 1/2*mt^3*s12*
      s13^2 - mt^3*s12^2*s24 - mt^3*s12^2*s23 - 3*mt^3*s12^2*s14 - mt^3*s12^2*
      s13 - 1/2*mt^3*s12^3 + mt^3*mh^2*s12*s24 + mt^3*mh^2*s12*s23 + 3*mt^3*
      mh^2*s12*s14 + mt^3*mh^2*s12*s13 + mt^3*mh^2*s12^2 - 1/2*mt^3*mh^4*s12
       + 2*mt^5*s12*s24 + 2*mt^5*s12*s23 + 4*mt^5*s12*s14 + 2*mt^5*s12*s13 + 2
      *mt^5*s12^2 - 2*mt^5*mh^2*s12 - 2*mt^7*s12 + 1/2*denom(1/2*s12)*mt*s12*
      s14^2*s23*s24 + 1/2*denom(1/2*s12)*mt*s12*s14^2*s23^2 + 1/2*denom(1/2*
      s12)*mt*s12*s14^3*s23 + 1/2*denom(1/2*s12)*mt*s12*s13*s14*s24^2 + 1/2*
      denom(1/2*s12)*mt*s12*s13*s14*s23*s24 + 1/2*denom(1/2*s12)*mt*s12*s13*
      s14^2*s24 + 1/2*denom(1/2*s12)*mt*s12*s13*s14^2*s23 + 1/2*denom(1/2*s12)
      *mt*s12*s13^2*s14*s24 + 1/2*denom(1/2*s12)*mt*s12^2*s14^2*s23 + 1/2*
      denom(1/2*s12)*mt*s12^2*s13*s14*s24 - 1/2*denom(1/2*s12)*mt*mh^2*s12*
      s14^2*s23 - 1/2*denom(1/2*s12)*mt*mh^2*s12*s13*s14*s24 - 1/2*denom(1/2*
      s12)*mt^3*s12*s14*s24^2 - 3/2*denom(1/2*s12)*mt^3*s12*s14*s23*s24 - 
      denom(1/2*s12)*mt^3*s12*s14*s23^2 - denom(1/2*s12)*mt^3*s12*s14^2*s24 - 
      5/2*denom(1/2*s12)*mt^3*s12*s14^2*s23 - 1/2*denom(1/2*s12)*mt^3*s12*
      s14^3 - 1/2*denom(1/2*s12)*mt^3*s12*s13*s24^2 - 1/2*denom(1/2*s12)*mt^3*
      s12*s13*s23*s24 - 5/2*denom(1/2*s12)*mt^3*s12*s13*s14*s24 - 3/2*denom(1/
      2*s12)*mt^3*s12*s13*s14*s23 - denom(1/2*s12)*mt^3*s12*s13*s14^2 - 1/2*
      denom(1/2*s12)*mt^3*s12*s13^2*s24 - 1/2*denom(1/2*s12)*mt^3*s12*s13^2*
      s14 - 1/2*denom(1/2*s12)*mt^3*s12^2*s14*s24 - denom(1/2*s12)*mt^3*s12^2*
      s14*s23 - 1/2*denom(1/2*s12)*mt^3*s12^2*s14^2 - 1/2*denom(1/2*s12)*mt^3*
      s12^2*s13*s24 - 1/2*denom(1/2*s12)*mt^3*s12^2*s13*s14 + 1/2*denom(1/2*
      s12)*mt^3*mh^2*s12*s14*s24 + denom(1/2*s12)*mt^3*mh^2*s12*s14*s23 + 1/2*
      denom(1/2*s12)*mt^3*mh^2*s12*s14^2 + 1/2*denom(1/2*s12)*mt^3*mh^2*s12*
      s13*s24 + 1/2*denom(1/2*s12)*mt^3*mh^2*s12*s13*s14 + 1/2*denom(1/2*s12)*
      mt^5*s12*s24^2 + denom(1/2*s12)*mt^5*s12*s23*s24 + 1/2*denom(1/2*s12)*
      mt^5*s12*s23^2 + 3*denom(1/2*s12)*mt^5*s12*s14*s24 + 4*denom(1/2*s12)*
      mt^5*s12*s14*s23 + 5/2*denom(1/2*s12)*mt^5*s12*s14^2 + 2*denom(1/2*s12)*
      mt^5*s12*s13*s24 + denom(1/2*s12)*mt^5*s12*s13*s23 + 3*denom(1/2*s12)*
      mt^5*s12*s13*s14 + 1/2*denom(1/2*s12)*mt^5*s12*s13^2 + 1/2*denom(1/2*s12
      )*mt^5*s12^2*s24 + 1/2*denom(1/2*s12)*mt^5*s12^2*s23 + 3/2*denom(1/2*s12
      )*mt^5*s12^2*s14 + 1/2*denom(1/2*s12)*mt^5*s12^2*s13 - 1/2*denom(1/2*s12
      )*mt^5*mh^2*s12*s24 - 1/2*denom(1/2*s12)*mt^5*mh^2*s12*s23 - 3/2*denom(1/
      2*s12)*mt^5*mh^2*s12*s14 - 1/2*denom(1/2*s12)*mt^5*mh^2*s12*s13 - 2*
      denom(1/2*s12)*mt^7*s12*s24 - 2*denom(1/2*s12)*mt^7*s12*s23 - 4*denom(1/
      2*s12)*mt^7*s12*s14 - 2*denom(1/2*s12)*mt^7*s12*s13 - denom(1/2*s12)*
      mt^7*s12^2 + denom(1/2*s12)*mt^7*mh^2*s12 + 2*denom(1/2*s12)*mt^9*s12 + 
      1/8*denom(1/4*s12^2)*mt*s12*s14^3*s23^2 + 1/4*denom(1/4*s12^2)*mt*s12*
      s13*s14^2*s23*s24 + 1/8*denom(1/4*s12^2)*mt*s12*s13^2*s14*s24^2 - 1/4*
      denom(1/4*s12^2)*mt^3*s12*s14^2*s23*s24 - 3/8*denom(1/4*s12^2)*mt^3*s12*
      s14^2*s23^2 - 1/4*denom(1/4*s12^2)*mt^3*s12*s14^3*s23 - 1/4*denom(1/4*
      s12^2)*mt^3*s12*s13*s14*s24^2 - 1/2*denom(1/4*s12^2)*mt^3*s12*s13*s14*
      s23*s24 - 1/4*denom(1/4*s12^2)*mt^3*s12*s13*s14^2*s24 - 1/4*denom(1/4*
      s12^2)*mt^3*s12*s13*s14^2*s23 - 1/8*denom(1/4*s12^2)*mt^3*s12*s13^2*
      s24^2 - 1/4*denom(1/4*s12^2)*mt^3*s12*s13^2*s14*s24 + 1/8*denom(1/4*
      s12^2)*mt^5*s12*s14*s24^2 + 1/2*denom(1/4*s12^2)*mt^5*s12*s14*s23*s24 + 
      3/8*denom(1/4*s12^2)*mt^5*s12*s14*s23^2 + 1/4*denom(1/4*s12^2)*mt^5*s12*
      s14^2*s24 + denom(1/4*s12^2)*mt^5*s12*s14^2*s23 + 1/8*denom(1/4*s12^2)*
      mt^5*s12*s14^3 + 1/4*denom(1/4*s12^2)*mt^5*s12*s13*s24^2 + 1/4*denom(1/4
      *s12^2)*mt^5*s12*s13*s23*s24 + denom(1/4*s12^2)*mt^5*s12*s13*s14*s24 + 1/
      2*denom(1/4*s12^2)*mt^5*s12*s13*s14*s23 + 1/4*denom(1/4*s12^2)*mt^5*s12*
      s13*s14^2 + 1/4*denom(1/4*s12^2)*mt^5*s12*s13^2*s24 + 1/8*denom(1/4*
      s12^2)*mt^5*s12*s13^2*s14 - 1/8*denom(1/4*s12^2)*mt^7*s12*s24^2 - 1/4*
      denom(1/4*s12^2)*mt^7*s12*s23*s24 - 1/8*denom(1/4*s12^2)*mt^7*s12*s23^2
       - 3/4*denom(1/4*s12^2)*mt^7*s12*s14*s24 - 5/4*denom(1/4*s12^2)*mt^7*s12
      *s14*s23 - 5/8*denom(1/4*s12^2)*mt^7*s12*s14^2 - 3/4*denom(1/4*s12^2)*
      mt^7*s12*s13*s24 - 1/4*denom(1/4*s12^2)*mt^7*s12*s13*s23 - 3/4*denom(1/4
      *s12^2)*mt^7*s12*s13*s14 - 1/8*denom(1/4*s12^2)*mt^7*s12*s13^2 + 1/2*
      denom(1/4*s12^2)*mt^9*s12*s24 + 1/2*denom(1/4*s12^2)*mt^9*s12*s23 + 
      denom(1/4*s12^2)*mt^9*s12*s14 + 1/2*denom(1/4*s12^2)*mt^9*s12*s13 - 1/2*
      denom(1/4*s12^2)*mt^11*s12;
 
 .sort
id KMatrix(8,14) =   - mt^3*s12*s14*s24 - mt^3*s12*s14*s23 - mt^3*s12*s14^2 - 
      mt^3*s12*s13*s14 - mt^3*s12^2*s14 + mt^3*mh^2*s12*s14 + mt^5*s12*s24 + 
      mt^5*s12*s23 + 3*mt^5*s12*s14 + mt^5*s12*s13 + mt^5*s12^2 - mt^5*mh^2*
      s12 - 2*mt^7*s12 + 1/2*denom(1/2*s12)*mt*s12*s14^2*s24^2 + 1/2*denom(1/2
      *s12)*mt*s12*s14^2*s23*s24 + 1/2*denom(1/2*s12)*mt*s12*s14^3*s24 + 1/2*
      denom(1/2*s12)*mt*s12*s13*s14^2*s24 + 1/2*denom(1/2*s12)*mt*s12^2*s14^2*
      s24 - 1/2*denom(1/2*s12)*mt*mh^2*s12*s14^2*s24 - denom(1/2*s12)*mt^3*s12
      *s14*s24^2 - denom(1/2*s12)*mt^3*s12*s14*s23*s24 - 5/2*denom(1/2*s12)*
      mt^3*s12*s14^2*s24 - denom(1/2*s12)*mt^3*s12*s14^2*s23 - 1/2*denom(1/2*
      s12)*mt^3*s12*s14^3 - 3/2*denom(1/2*s12)*mt^3*s12*s13*s14*s24 - 1/2*
      denom(1/2*s12)*mt^3*s12*s13*s14^2 - denom(1/2*s12)*mt^3*s12^2*s14*s24 - 
      1/2*denom(1/2*s12)*mt^3*s12^2*s14^2 + denom(1/2*s12)*mt^3*mh^2*s12*s14*
      s24 + 1/2*denom(1/2*s12)*mt^3*mh^2*s12*s14^2 + 1/2*denom(1/2*s12)*mt^5*
      s12*s24^2 + 1/2*denom(1/2*s12)*mt^5*s12*s23*s24 + 4*denom(1/2*s12)*mt^5*
      s12*s14*s24 + 2*denom(1/2*s12)*mt^5*s12*s14*s23 + 5/2*denom(1/2*s12)*
      mt^5*s12*s14^2 + denom(1/2*s12)*mt^5*s12*s13*s24 + 3/2*denom(1/2*s12)*
      mt^5*s12*s13*s14 + 1/2*denom(1/2*s12)*mt^5*s12^2*s24 + denom(1/2*s12)*
      mt^5*s12^2*s14 - 1/2*denom(1/2*s12)*mt^5*mh^2*s12*s24 - denom(1/2*s12)*
      mt^5*mh^2*s12*s14 - 2*denom(1/2*s12)*mt^7*s12*s24 - denom(1/2*s12)*mt^7*
      s12*s23 - 4*denom(1/2*s12)*mt^7*s12*s14 - denom(1/2*s12)*mt^7*s12*s13 - 
      1/2*denom(1/2*s12)*mt^7*s12^2 + 1/2*denom(1/2*s12)*mt^7*mh^2*s12 + 2*
      denom(1/2*s12)*mt^9*s12 + 1/4*denom(1/4*s12^2)*mt*s12*s14^3*s23*s24 + 1/
      4*denom(1/4*s12^2)*mt*s12*s13*s14^2*s24^2 - 1/4*denom(1/4*s12^2)*mt^3*
      s12*s14^2*s24^2 - 3/4*denom(1/4*s12^2)*mt^3*s12*s14^2*s23*s24 - 1/4*
      denom(1/4*s12^2)*mt^3*s12*s14^3*s24 - 1/4*denom(1/4*s12^2)*mt^3*s12*
      s14^3*s23 - 1/2*denom(1/4*s12^2)*mt^3*s12*s13*s14*s24^2 - 1/2*denom(1/4*
      s12^2)*mt^3*s12*s13*s14^2*s24 + 1/2*denom(1/4*s12^2)*mt^5*s12*s14*s24^2
       + 3/4*denom(1/4*s12^2)*mt^5*s12*s14*s23*s24 + 5/4*denom(1/4*s12^2)*mt^5
      *s12*s14^2*s24 + 3/4*denom(1/4*s12^2)*mt^5*s12*s14^2*s23 + 1/4*denom(1/4
      *s12^2)*mt^5*s12*s14^3 + 1/4*denom(1/4*s12^2)*mt^5*s12*s13*s24^2 + 
      denom(1/4*s12^2)*mt^5*s12*s13*s14*s24 + 1/4*denom(1/4*s12^2)*mt^5*s12*
      s13*s14^2 - 1/4*denom(1/4*s12^2)*mt^7*s12*s24^2 - 1/4*denom(1/4*s12^2)*
      mt^7*s12*s23*s24 - 7/4*denom(1/4*s12^2)*mt^7*s12*s14*s24 - 3/4*denom(1/4
      *s12^2)*mt^7*s12*s14*s23 - denom(1/4*s12^2)*mt^7*s12*s14^2 - 1/2*denom(1/
      4*s12^2)*mt^7*s12*s13*s24 - 1/2*denom(1/4*s12^2)*mt^7*s12*s13*s14 + 3/4*
      denom(1/4*s12^2)*mt^9*s12*s24 + 1/4*denom(1/4*s12^2)*mt^9*s12*s23 + 5/4*
      denom(1/4*s12^2)*mt^9*s12*s14 + 1/4*denom(1/4*s12^2)*mt^9*s12*s13 - 1/2*
      denom(1/4*s12^2)*mt^11*s12;
 
 .sort
id KMatrix(8,15) =   - mt^3*s12*s14*s24 - mt^3*s12*s14*s23 - mt^3*s12*s14^2 - 
      mt^3*s12*s13*s14 - mt^3*s12^2*s14 + mt^3*mh^2*s12*s14 + mt^5*s12*s24 + 
      mt^5*s12*s23 + 3*mt^5*s12*s14 + mt^5*s12*s13 + mt^5*s12^2 - mt^5*mh^2*
      s12 - 2*mt^7*s12 + 1/2*denom(1/2*s12)*mt*s12*s14^2*s24^2 + 1/2*denom(1/2
      *s12)*mt*s12*s14^2*s23*s24 + 1/2*denom(1/2*s12)*mt*s12*s14^3*s24 + 1/2*
      denom(1/2*s12)*mt*s12*s13*s14^2*s24 + 1/2*denom(1/2*s12)*mt*s12^2*s14^2*
      s24 - 1/2*denom(1/2*s12)*mt*mh^2*s12*s14^2*s24 - denom(1/2*s12)*mt^3*s12
      *s14*s24^2 - denom(1/2*s12)*mt^3*s12*s14*s23*s24 - 5/2*denom(1/2*s12)*
      mt^3*s12*s14^2*s24 - denom(1/2*s12)*mt^3*s12*s14^2*s23 - 1/2*denom(1/2*
      s12)*mt^3*s12*s14^3 - 3/2*denom(1/2*s12)*mt^3*s12*s13*s14*s24 - 1/2*
      denom(1/2*s12)*mt^3*s12*s13*s14^2 - denom(1/2*s12)*mt^3*s12^2*s14*s24 - 
      1/2*denom(1/2*s12)*mt^3*s12^2*s14^2 + denom(1/2*s12)*mt^3*mh^2*s12*s14*
      s24 + 1/2*denom(1/2*s12)*mt^3*mh^2*s12*s14^2 + 1/2*denom(1/2*s12)*mt^5*
      s12*s24^2 + 1/2*denom(1/2*s12)*mt^5*s12*s23*s24 + 4*denom(1/2*s12)*mt^5*
      s12*s14*s24 + 2*denom(1/2*s12)*mt^5*s12*s14*s23 + 5/2*denom(1/2*s12)*
      mt^5*s12*s14^2 + denom(1/2*s12)*mt^5*s12*s13*s24 + 3/2*denom(1/2*s12)*
      mt^5*s12*s13*s14 + 1/2*denom(1/2*s12)*mt^5*s12^2*s24 + denom(1/2*s12)*
      mt^5*s12^2*s14 - 1/2*denom(1/2*s12)*mt^5*mh^2*s12*s24 - denom(1/2*s12)*
      mt^5*mh^2*s12*s14 - 2*denom(1/2*s12)*mt^7*s12*s24 - denom(1/2*s12)*mt^7*
      s12*s23 - 4*denom(1/2*s12)*mt^7*s12*s14 - denom(1/2*s12)*mt^7*s12*s13 - 
      1/2*denom(1/2*s12)*mt^7*s12^2 + 1/2*denom(1/2*s12)*mt^7*mh^2*s12 + 2*
      denom(1/2*s12)*mt^9*s12 + 1/4*denom(1/4*s12^2)*mt*s12*s14^3*s23*s24 + 1/
      4*denom(1/4*s12^2)*mt*s12*s13*s14^2*s24^2 - 1/4*denom(1/4*s12^2)*mt^3*
      s12*s14^2*s24^2 - 3/4*denom(1/4*s12^2)*mt^3*s12*s14^2*s23*s24 - 1/4*
      denom(1/4*s12^2)*mt^3*s12*s14^3*s24 - 1/4*denom(1/4*s12^2)*mt^3*s12*
      s14^3*s23 - 1/2*denom(1/4*s12^2)*mt^3*s12*s13*s14*s24^2 - 1/2*denom(1/4*
      s12^2)*mt^3*s12*s13*s14^2*s24 + 1/2*denom(1/4*s12^2)*mt^5*s12*s14*s24^2
       + 3/4*denom(1/4*s12^2)*mt^5*s12*s14*s23*s24 + 5/4*denom(1/4*s12^2)*mt^5
      *s12*s14^2*s24 + 3/4*denom(1/4*s12^2)*mt^5*s12*s14^2*s23 + 1/4*denom(1/4
      *s12^2)*mt^5*s12*s14^3 + 1/4*denom(1/4*s12^2)*mt^5*s12*s13*s24^2 + 
      denom(1/4*s12^2)*mt^5*s12*s13*s14*s24 + 1/4*denom(1/4*s12^2)*mt^5*s12*
      s13*s14^2 - 1/4*denom(1/4*s12^2)*mt^7*s12*s24^2 - 1/4*denom(1/4*s12^2)*
      mt^7*s12*s23*s24 - 7/4*denom(1/4*s12^2)*mt^7*s12*s14*s24 - 3/4*denom(1/4
      *s12^2)*mt^7*s12*s14*s23 - denom(1/4*s12^2)*mt^7*s12*s14^2 - 1/2*denom(1/
      4*s12^2)*mt^7*s12*s13*s24 - 1/2*denom(1/4*s12^2)*mt^7*s12*s13*s14 + 3/4*
      denom(1/4*s12^2)*mt^9*s12*s24 + 1/4*denom(1/4*s12^2)*mt^9*s12*s23 + 5/4*
      denom(1/4*s12^2)*mt^9*s12*s14 + 1/4*denom(1/4*s12^2)*mt^9*s12*s13 - 1/2*
      denom(1/4*s12^2)*mt^11*s12;
 
 .sort
id KMatrix(8,16) =  2*mt^5*s12*s14 - 2*mt^7*s12 - 2*denom(1/2*s12)*mt^3*s12*
      s14^2*s24 + 4*denom(1/2*s12)*mt^5*s12*s14*s24 + 2*denom(1/2*s12)*mt^5*
      s12*s14^2 - 2*denom(1/2*s12)*mt^7*s12*s24 - 4*denom(1/2*s12)*mt^7*s12*
      s14 + 2*denom(1/2*s12)*mt^9*s12 + 1/2*denom(1/4*s12^2)*mt*s12*s14^3*
      s24^2 - 3/2*denom(1/4*s12^2)*mt^3*s12*s14^2*s24^2 - denom(1/4*s12^2)*
      mt^3*s12*s14^3*s24 + 3/2*denom(1/4*s12^2)*mt^5*s12*s14*s24^2 + 3*denom(1/
      4*s12^2)*mt^5*s12*s14^2*s24 + 1/2*denom(1/4*s12^2)*mt^5*s12*s14^3 - 1/2*
      denom(1/4*s12^2)*mt^7*s12*s24^2 - 3*denom(1/4*s12^2)*mt^7*s12*s14*s24 - 
      3/2*denom(1/4*s12^2)*mt^7*s12*s14^2 + denom(1/4*s12^2)*mt^9*s12*s24 + 3/
      2*denom(1/4*s12^2)*mt^9*s12*s14 - 1/2*denom(1/4*s12^2)*mt^11*s12;
 
 .sort
id KMatrix(8,17) =  2*mt^3*s14 - 2*mt^3*s13 - 2*denom(1/2*s12)*mt*s14^2*s24 + 
      2*denom(1/2*s12)*mt*s13*s14*s24 + 2*denom(1/2*s12)*mt^3*s14*s24 + 2*
      denom(1/2*s12)*mt^3*s14^2 - 2*denom(1/2*s12)*mt^3*s13*s24 - 2*denom(1/2*
      s12)*mt^3*s13*s14 - 2*denom(1/2*s12)*mt^5*s14 + 2*denom(1/2*s12)*mt^5*
      s13 + 1/2*denom(1/4*s12^2)*mt*s12*s14^2*s24 - 1/2*denom(1/4*s12^2)*mt*
      s12*s13*s14*s24 - 1/2*denom(1/4*s12^2)*mt^3*s12*s14*s24 - 1/2*denom(1/4*
      s12^2)*mt^3*s12*s14^2 + 1/2*denom(1/4*s12^2)*mt^3*s12*s13*s24 + 1/2*
      denom(1/4*s12^2)*mt^3*s12*s13*s14 + 1/2*denom(1/4*s12^2)*mt^5*s12*s14 - 
      1/2*denom(1/4*s12^2)*mt^5*s12*s13;
 
 .sort
id KMatrix(8,18) =  2*mt^2*s13*s14 - 2*mt^4*s14 - 2*mt^4*s13 + 2*mt^6 - 2*
      denom(1/2*s12)*s13*s14^2*s24 + 2*denom(1/2*s12)*mt^2*s14^2*s24 + 4*
      denom(1/2*s12)*mt^2*s13*s14*s24 + 2*denom(1/2*s12)*mt^2*s13*s14^2 - 4*
      denom(1/2*s12)*mt^4*s14*s24 - 2*denom(1/2*s12)*mt^4*s14^2 - 2*denom(1/2*
      s12)*mt^4*s13*s24 - 4*denom(1/2*s12)*mt^4*s13*s14 + 2*denom(1/2*s12)*
      mt^6*s24 + 4*denom(1/2*s12)*mt^6*s14 + 2*denom(1/2*s12)*mt^6*s13 - 2*
      denom(1/2*s12)*mt^8 + 1/2*denom(1/4*s12^2)*s12*s13*s14^2*s24 - 1/2*
      denom(1/4*s12^2)*mt^2*s12*s14^2*s24 - denom(1/4*s12^2)*mt^2*s12*s13*s14*
      s24 - 1/2*denom(1/4*s12^2)*mt^2*s12*s13*s14^2 + denom(1/4*s12^2)*mt^4*
      s12*s14*s24 + 1/2*denom(1/4*s12^2)*mt^4*s12*s14^2 + 1/2*denom(1/4*s12^2)
      *mt^4*s12*s13*s24 + denom(1/4*s12^2)*mt^4*s12*s13*s14 - 1/2*denom(1/4*
      s12^2)*mt^6*s12*s24 - denom(1/4*s12^2)*mt^6*s12*s14 - 1/2*denom(1/4*
      s12^2)*mt^6*s12*s13 + 1/2*denom(1/4*s12^2)*mt^8*s12;
 
 .sort
id KMatrix(8,19) =  mt^2*s14*s23 + mt^2*s13*s24 + mt^2*s12*s24 + mt^2*s12*s23
       + mt^2*s12*s14 + mt^2*s12*s13 + mt^2*s12^2 - mt^2*mh^2*s12 - mt^4*s24
       - mt^4*s23 - mt^4*s14 - mt^4*s13 - 4*mt^4*s12 + 2*mt^6 - denom(1/2*s12)
      *s14^2*s23*s24 - denom(1/2*s12)*s13*s14*s24^2 - denom(1/2*s12)*s12*s14*
      s24^2 - denom(1/2*s12)*s12*s14*s23*s24 - denom(1/2*s12)*s12*s14^2*s24 - 
      denom(1/2*s12)*s12*s13*s14*s24 - denom(1/2*s12)*s12^2*s14*s24 + denom(1/
      2*s12)*mh^2*s12*s14*s24 + denom(1/2*s12)*mt^2*s14*s24^2 + 2*denom(1/2*
      s12)*mt^2*s14*s23*s24 + denom(1/2*s12)*mt^2*s14^2*s24 + denom(1/2*s12)*
      mt^2*s14^2*s23 + denom(1/2*s12)*mt^2*s13*s24^2 + 2*denom(1/2*s12)*mt^2*
      s13*s14*s24 + denom(1/2*s12)*mt^2*s12*s24^2 + denom(1/2*s12)*mt^2*s12*
      s23*s24 + 6*denom(1/2*s12)*mt^2*s12*s14*s24 + denom(1/2*s12)*mt^2*s12*
      s14*s23 + denom(1/2*s12)*mt^2*s12*s14^2 + denom(1/2*s12)*mt^2*s12*s13*
      s24 + denom(1/2*s12)*mt^2*s12*s13*s14 + denom(1/2*s12)*mt^2*s12^2*s24 + 
      denom(1/2*s12)*mt^2*s12^2*s14 - denom(1/2*s12)*mt^2*mh^2*s12*s24 - 
      denom(1/2*s12)*mt^2*mh^2*s12*s14 - denom(1/2*s12)*mt^4*s24^2 - denom(1/2
      *s12)*mt^4*s23*s24 - 4*denom(1/2*s12)*mt^4*s14*s24 - 2*denom(1/2*s12)*
      mt^4*s14*s23 - denom(1/2*s12)*mt^4*s14^2 - 2*denom(1/2*s12)*mt^4*s13*s24
       - denom(1/2*s12)*mt^4*s13*s14 - 5*denom(1/2*s12)*mt^4*s12*s24 - denom(1/
      2*s12)*mt^4*s12*s23 - 5*denom(1/2*s12)*mt^4*s12*s14 - denom(1/2*s12)*
      mt^4*s12*s13 - denom(1/2*s12)*mt^4*s12^2 + denom(1/2*s12)*mt^4*mh^2*s12
       + 3*denom(1/2*s12)*mt^6*s24 + denom(1/2*s12)*mt^6*s23 + 3*denom(1/2*s12
      )*mt^6*s14 + denom(1/2*s12)*mt^6*s13 + 4*denom(1/2*s12)*mt^6*s12 - 2*
      denom(1/2*s12)*mt^8 + 1/4*denom(1/4*s12^2)*s12*s14^2*s23*s24 + 1/4*
      denom(1/4*s12^2)*s12*s13*s14*s24^2 + 1/4*denom(1/4*s12^2)*s12^2*s14*
      s24^2 + 1/4*denom(1/4*s12^2)*s12^2*s14*s23*s24 + 1/4*denom(1/4*s12^2)*
      s12^2*s14^2*s24 + 1/4*denom(1/4*s12^2)*s12^2*s13*s14*s24 + 1/4*denom(1/4
      *s12^2)*s12^3*s14*s24 - 1/4*denom(1/4*s12^2)*mh^2*s12^2*s14*s24 - 1/4*
      denom(1/4*s12^2)*mt^2*s12*s14*s24^2 - 1/2*denom(1/4*s12^2)*mt^2*s12*s14*
      s23*s24 - 1/4*denom(1/4*s12^2)*mt^2*s12*s14^2*s24 - 1/4*denom(1/4*s12^2)
      *mt^2*s12*s14^2*s23 - 1/4*denom(1/4*s12^2)*mt^2*s12*s13*s24^2 - 1/2*
      denom(1/4*s12^2)*mt^2*s12*s13*s14*s24 - 1/4*denom(1/4*s12^2)*mt^2*s12^2*
      s24^2 - 1/4*denom(1/4*s12^2)*mt^2*s12^2*s23*s24 - 3/2*denom(1/4*s12^2)*
      mt^2*s12^2*s14*s24 - 1/4*denom(1/4*s12^2)*mt^2*s12^2*s14*s23 - 1/4*
      denom(1/4*s12^2)*mt^2*s12^2*s14^2 - 1/4*denom(1/4*s12^2)*mt^2*s12^2*s13*
      s24 - 1/4*denom(1/4*s12^2)*mt^2*s12^2*s13*s14 - 1/4*denom(1/4*s12^2)*
      mt^2*s12^3*s24 - 1/4*denom(1/4*s12^2)*mt^2*s12^3*s14 + 1/4*denom(1/4*
      s12^2)*mt^2*mh^2*s12^2*s24 + 1/4*denom(1/4*s12^2)*mt^2*mh^2*s12^2*s14 + 
      1/4*denom(1/4*s12^2)*mt^4*s12*s24^2 + 1/4*denom(1/4*s12^2)*mt^4*s12*s23*
      s24 + denom(1/4*s12^2)*mt^4*s12*s14*s24 + 1/2*denom(1/4*s12^2)*mt^4*s12*
      s14*s23 + 1/4*denom(1/4*s12^2)*mt^4*s12*s14^2 + 1/2*denom(1/4*s12^2)*
      mt^4*s12*s13*s24 + 1/4*denom(1/4*s12^2)*mt^4*s12*s13*s14 + 5/4*denom(1/4
      *s12^2)*mt^4*s12^2*s24 + 1/4*denom(1/4*s12^2)*mt^4*s12^2*s23 + 5/4*
      denom(1/4*s12^2)*mt^4*s12^2*s14 + 1/4*denom(1/4*s12^2)*mt^4*s12^2*s13 + 
      1/4*denom(1/4*s12^2)*mt^4*s12^3 - 1/4*denom(1/4*s12^2)*mt^4*mh^2*s12^2
       - 3/4*denom(1/4*s12^2)*mt^6*s12*s24 - 1/4*denom(1/4*s12^2)*mt^6*s12*s23
       - 3/4*denom(1/4*s12^2)*mt^6*s12*s14 - 1/4*denom(1/4*s12^2)*mt^6*s12*s13
       - denom(1/4*s12^2)*mt^6*s12^2 + 1/2*denom(1/4*s12^2)*mt^8*s12;
 
 .sort
id KMatrix(8,20) =  1/2*s14*s24^2 + s14*s23*s24 + 1/2*s14*s23^2 + s14^2*s24 + 
      s14^2*s23 + 1/2*s14^3 + s13*s14*s24 + s13*s14*s23 + s13*s14^2 + 1/2*
      s13^2*s14 + s12*s14*s24 + s12*s14*s23 + s12*s14^2 + s12*s13*s14 + 1/2*
      s12^2*s14 - mh^2*s14*s24 - mh^2*s14*s23 - mh^2*s14^2 - mh^2*s13*s14 - 
      mh^2*s12*s14 + 1/2*mh^4*s14 - 1/2*mt^2*s24^2 - mt^2*s23*s24 - 1/2*mt^2*
      s23^2 - 3*mt^2*s14*s24 - 3*mt^2*s14*s23 - 5/2*mt^2*s14^2 - 2*mt^2*s13*
      s24 - 2*mt^2*s13*s23 - 4*mt^2*s13*s14 - 3/2*mt^2*s13^2 - mt^2*s12*s24 - 
      mt^2*s12*s23 - 3*mt^2*s12*s14 - 2*mt^2*s12*s13 - 1/2*mt^2*s12^2 + mt^2*
      mh^2*s24 + mt^2*mh^2*s23 + 3*mt^2*mh^2*s14 + 2*mt^2*mh^2*s13 + mt^2*mh^2
      *s12 - 1/2*mt^2*mh^4 + 3*mt^4*s24 + 3*mt^4*s23 + 5*mt^4*s14 + 5*mt^4*s13
       + 3*mt^4*s12 - 3*mt^4*mh^2 - 4*mt^6 + 1/2*denom(1/2*s12)*s14^2*s23*s24
       + 1/2*denom(1/2*s12)*s14^2*s23^2 + 1/2*denom(1/2*s12)*s14^3*s23 + 
      denom(1/2*s12)*s13*s14*s24^2 + denom(1/2*s12)*s13*s14*s23*s24 + denom(1/
      2*s12)*s13*s14^2*s24 + 1/2*denom(1/2*s12)*s13*s14^2*s23 + denom(1/2*s12)
      *s13^2*s14*s24 + 1/2*denom(1/2*s12)*s12*s14^2*s23 + denom(1/2*s12)*s12*
      s13*s14*s24 - 1/2*denom(1/2*s12)*mh^2*s14^2*s23 - denom(1/2*s12)*mh^2*
      s13*s14*s24 - denom(1/2*s12)*mt^2*s14*s24^2 - 2*denom(1/2*s12)*mt^2*s14*
      s23*s24 - denom(1/2*s12)*mt^2*s14*s23^2 - 3/2*denom(1/2*s12)*mt^2*s14^2*
      s24 - 5/2*denom(1/2*s12)*mt^2*s14^2*s23 - 1/2*denom(1/2*s12)*mt^2*s14^3
       - denom(1/2*s12)*mt^2*s13*s24^2 - denom(1/2*s12)*mt^2*s13*s23*s24 - 5*
      denom(1/2*s12)*mt^2*s13*s14*s24 - 5/2*denom(1/2*s12)*mt^2*s13*s14*s23 - 
      3/2*denom(1/2*s12)*mt^2*s13*s14^2 - 3/2*denom(1/2*s12)*mt^2*s13^2*s24 - 
      denom(1/2*s12)*mt^2*s13^2*s14 - denom(1/2*s12)*mt^2*s12*s14*s24 - denom(
      1/2*s12)*mt^2*s12*s14*s23 - 1/2*denom(1/2*s12)*mt^2*s12*s14^2 - denom(1/
      2*s12)*mt^2*s12*s13*s24 - denom(1/2*s12)*mt^2*s12*s13*s14 + denom(1/2*
      s12)*mt^2*mh^2*s14*s24 + denom(1/2*s12)*mt^2*mh^2*s14*s23 + 1/2*denom(1/
      2*s12)*mt^2*mh^2*s14^2 + denom(1/2*s12)*mt^2*mh^2*s13*s24 + denom(1/2*
      s12)*mt^2*mh^2*s13*s14 + denom(1/2*s12)*mt^4*s24^2 + 3/2*denom(1/2*s12)*
      mt^4*s23*s24 + 1/2*denom(1/2*s12)*mt^4*s23^2 + 5*denom(1/2*s12)*mt^4*s14
      *s24 + 5*denom(1/2*s12)*mt^4*s14*s23 + 3*denom(1/2*s12)*mt^4*s14^2 + 5*
      denom(1/2*s12)*mt^4*s13*s24 + 2*denom(1/2*s12)*mt^4*s13*s23 + 11/2*
      denom(1/2*s12)*mt^4*s13*s14 + 3/2*denom(1/2*s12)*mt^4*s13^2 + denom(1/2*
      s12)*mt^4*s12*s24 + 1/2*denom(1/2*s12)*mt^4*s12*s23 + 2*denom(1/2*s12)*
      mt^4*s12*s14 + denom(1/2*s12)*mt^4*s12*s13 - denom(1/2*s12)*mt^4*mh^2*
      s24 - 1/2*denom(1/2*s12)*mt^4*mh^2*s23 - 2*denom(1/2*s12)*mt^4*mh^2*s14
       - denom(1/2*s12)*mt^4*mh^2*s13 - 4*denom(1/2*s12)*mt^6*s24 - 3*denom(1/
      2*s12)*mt^6*s23 - 6*denom(1/2*s12)*mt^6*s14 - 5*denom(1/2*s12)*mt^6*s13
       - 3/2*denom(1/2*s12)*mt^6*s12 + 3/2*denom(1/2*s12)*mt^6*mh^2 + 4*denom(
      1/2*s12)*mt^8 + 1/8*denom(1/4*s12^2)*s14^3*s23^2 + 1/2*denom(1/4*s12^2)*
      s13*s14^2*s23*s24 + 3/8*denom(1/4*s12^2)*s13^2*s14*s24^2 - 1/2*denom(1/4
      *s12^2)*mt^2*s14^2*s23*s24 - 3/8*denom(1/4*s12^2)*mt^2*s14^2*s23^2 - 1/4
      *denom(1/4*s12^2)*mt^2*s14^3*s23 - 3/4*denom(1/4*s12^2)*mt^2*s13*s14*
      s24^2 - denom(1/4*s12^2)*mt^2*s13*s14*s23*s24 - 1/2*denom(1/4*s12^2)*
      mt^2*s13*s14^2*s24 - 1/2*denom(1/4*s12^2)*mt^2*s13*s14^2*s23 - 3/8*
      denom(1/4*s12^2)*mt^2*s13^2*s24^2 - 3/4*denom(1/4*s12^2)*mt^2*s13^2*s14*
      s24 + 3/8*denom(1/4*s12^2)*mt^4*s14*s24^2 + denom(1/4*s12^2)*mt^4*s14*
      s23*s24 + 3/8*denom(1/4*s12^2)*mt^4*s14*s23^2 + 1/2*denom(1/4*s12^2)*
      mt^4*s14^2*s24 + 5/4*denom(1/4*s12^2)*mt^4*s14^2*s23 + 1/8*denom(1/4*
      s12^2)*mt^4*s14^3 + 3/4*denom(1/4*s12^2)*mt^4*s13*s24^2 + 1/2*denom(1/4*
      s12^2)*mt^4*s13*s23*s24 + 5/2*denom(1/4*s12^2)*mt^4*s13*s14*s24 + denom(
      1/4*s12^2)*mt^4*s13*s14*s23 + 1/2*denom(1/4*s12^2)*mt^4*s13*s14^2 + 3/4*
      denom(1/4*s12^2)*mt^4*s13^2*s24 + 3/8*denom(1/4*s12^2)*mt^4*s13^2*s14 - 
      3/8*denom(1/4*s12^2)*mt^6*s24^2 - 1/2*denom(1/4*s12^2)*mt^6*s23*s24 - 1/
      8*denom(1/4*s12^2)*mt^6*s23^2 - 7/4*denom(1/4*s12^2)*mt^6*s14*s24 - 7/4*
      denom(1/4*s12^2)*mt^6*s14*s23 - 7/8*denom(1/4*s12^2)*mt^6*s14^2 - 2*
      denom(1/4*s12^2)*mt^6*s13*s24 - 1/2*denom(1/4*s12^2)*mt^6*s13*s23 - 7/4*
      denom(1/4*s12^2)*mt^6*s13*s14 - 3/8*denom(1/4*s12^2)*mt^6*s13^2 + 5/4*
      denom(1/4*s12^2)*mt^8*s24 + 3/4*denom(1/4*s12^2)*mt^8*s23 + 7/4*denom(1/
      4*s12^2)*mt^8*s14 + 5/4*denom(1/4*s12^2)*mt^8*s13 - denom(1/4*s12^2)*
      mt^10;
 
 .sort
id KMatrix(8,21) =   - mt^2*s14*s24 - mt^2*s14*s23 - mt^2*s14^2 - mt^2*s13*s14
       - mt^2*s12*s14 + mt^2*mh^2*s14 + mt^4*s24 + mt^4*s23 + 3*mt^4*s14 + 3*
      mt^4*s13 + mt^4*s12 - mt^4*mh^2 - 4*mt^6 + 1/2*denom(1/2*s12)*s14^2*
      s24^2 + 1/2*denom(1/2*s12)*s14^2*s23*s24 + 1/2*denom(1/2*s12)*s14^3*s24
       + 1/2*denom(1/2*s12)*s13*s14^2*s24 + 1/2*denom(1/2*s12)*s12*s14^2*s24
       - 1/2*denom(1/2*s12)*mh^2*s14^2*s24 - denom(1/2*s12)*mt^2*s14*s24^2 - 
      denom(1/2*s12)*mt^2*s14*s23*s24 - 5/2*denom(1/2*s12)*mt^2*s14^2*s24 - 
      denom(1/2*s12)*mt^2*s14^2*s23 - 1/2*denom(1/2*s12)*mt^2*s14^3 - 7/2*
      denom(1/2*s12)*mt^2*s13*s14*s24 - 1/2*denom(1/2*s12)*mt^2*s13*s14^2 - 
      denom(1/2*s12)*mt^2*s12*s14*s24 - 1/2*denom(1/2*s12)*mt^2*s12*s14^2 + 
      denom(1/2*s12)*mt^2*mh^2*s14*s24 + 1/2*denom(1/2*s12)*mt^2*mh^2*s14^2 + 
      1/2*denom(1/2*s12)*mt^4*s24^2 + 1/2*denom(1/2*s12)*mt^4*s23*s24 + 6*
      denom(1/2*s12)*mt^4*s14*s24 + 2*denom(1/2*s12)*mt^4*s14*s23 + 5/2*denom(
      1/2*s12)*mt^4*s14^2 + 3*denom(1/2*s12)*mt^4*s13*s24 + 7/2*denom(1/2*s12)
      *mt^4*s13*s14 + 1/2*denom(1/2*s12)*mt^4*s12*s24 + denom(1/2*s12)*mt^4*
      s12*s14 - 1/2*denom(1/2*s12)*mt^4*mh^2*s24 - denom(1/2*s12)*mt^4*mh^2*
      s14 - 4*denom(1/2*s12)*mt^6*s24 - denom(1/2*s12)*mt^6*s23 - 6*denom(1/2*
      s12)*mt^6*s14 - 3*denom(1/2*s12)*mt^6*s13 - 1/2*denom(1/2*s12)*mt^6*s12
       + 1/2*denom(1/2*s12)*mt^6*mh^2 + 4*denom(1/2*s12)*mt^8 + 1/4*denom(1/4*
      s12^2)*s14^3*s23*s24 + 3/4*denom(1/4*s12^2)*s13*s14^2*s24^2 - 3/4*denom(
      1/4*s12^2)*mt^2*s14^2*s24^2 - 3/4*denom(1/4*s12^2)*mt^2*s14^2*s23*s24 - 
      1/4*denom(1/4*s12^2)*mt^2*s14^3*s24 - 1/4*denom(1/4*s12^2)*mt^2*s14^3*
      s23 - 3/2*denom(1/4*s12^2)*mt^2*s13*s14*s24^2 - 3/2*denom(1/4*s12^2)*
      mt^2*s13*s14^2*s24 + 3/2*denom(1/4*s12^2)*mt^4*s14*s24^2 + 3/4*denom(1/4
      *s12^2)*mt^4*s14*s23*s24 + 9/4*denom(1/4*s12^2)*mt^4*s14^2*s24 + 3/4*
      denom(1/4*s12^2)*mt^4*s14^2*s23 + 1/4*denom(1/4*s12^2)*mt^4*s14^3 + 3/4*
      denom(1/4*s12^2)*mt^4*s13*s24^2 + 3*denom(1/4*s12^2)*mt^4*s13*s14*s24 + 
      3/4*denom(1/4*s12^2)*mt^4*s13*s14^2 - 3/4*denom(1/4*s12^2)*mt^6*s24^2 - 
      1/4*denom(1/4*s12^2)*mt^6*s23*s24 - 15/4*denom(1/4*s12^2)*mt^6*s14*s24
       - 3/4*denom(1/4*s12^2)*mt^6*s14*s23 - 3/2*denom(1/4*s12^2)*mt^6*s14^2
       - 3/2*denom(1/4*s12^2)*mt^6*s13*s24 - 3/2*denom(1/4*s12^2)*mt^6*s13*s14
       + 7/4*denom(1/4*s12^2)*mt^8*s24 + 1/4*denom(1/4*s12^2)*mt^8*s23 + 9/4*
      denom(1/4*s12^2)*mt^8*s14 + 3/4*denom(1/4*s12^2)*mt^8*s13 - denom(1/4*
      s12^2)*mt^10;
 
 .sort
id KMatrix(8,22) =  1/2*s14*s24^2 + s14*s23*s24 + 1/2*s14*s23^2 + s14^2*s24 + 
      s14^2*s23 + 1/2*s14^3 + s13*s14*s24 + s13*s14*s23 + s13*s14^2 + 1/2*
      s13^2*s14 + s12*s14*s24 + s12*s14*s23 + s12*s14^2 + s12*s13*s14 + 1/2*
      s12^2*s14 - mh^2*s14*s24 - mh^2*s14*s23 - mh^2*s14^2 - mh^2*s13*s14 - 
      mh^2*s12*s14 + 1/2*mh^4*s14 - 1/2*mt^2*s24^2 - mt^2*s23*s24 - 1/2*mt^2*
      s23^2 - 3*mt^2*s14*s24 - 3*mt^2*s14*s23 - 5/2*mt^2*s14^2 - 2*mt^2*s13*
      s24 - 2*mt^2*s13*s23 - 4*mt^2*s13*s14 - 3/2*mt^2*s13^2 - mt^2*s12*s24 - 
      mt^2*s12*s23 - 3*mt^2*s12*s14 - 2*mt^2*s12*s13 - 1/2*mt^2*s12^2 + mt^2*
      mh^2*s24 + mt^2*mh^2*s23 + 3*mt^2*mh^2*s14 + 2*mt^2*mh^2*s13 + mt^2*mh^2
      *s12 - 1/2*mt^2*mh^4 + 3*mt^4*s24 + 3*mt^4*s23 + 5*mt^4*s14 + 5*mt^4*s13
       + 3*mt^4*s12 - 3*mt^4*mh^2 - 4*mt^6 + 1/2*denom(1/2*s12)*s14^2*s23*s24
       + 1/2*denom(1/2*s12)*s14^2*s23^2 + 1/2*denom(1/2*s12)*s14^3*s23 + 
      denom(1/2*s12)*s13*s14*s24^2 + denom(1/2*s12)*s13*s14*s23*s24 + denom(1/
      2*s12)*s13*s14^2*s24 + 1/2*denom(1/2*s12)*s13*s14^2*s23 + denom(1/2*s12)
      *s13^2*s14*s24 + 1/2*denom(1/2*s12)*s12*s14^2*s23 + denom(1/2*s12)*s12*
      s13*s14*s24 - 1/2*denom(1/2*s12)*mh^2*s14^2*s23 - denom(1/2*s12)*mh^2*
      s13*s14*s24 - denom(1/2*s12)*mt^2*s14*s24^2 - 2*denom(1/2*s12)*mt^2*s14*
      s23*s24 - denom(1/2*s12)*mt^2*s14*s23^2 - 3/2*denom(1/2*s12)*mt^2*s14^2*
      s24 - 5/2*denom(1/2*s12)*mt^2*s14^2*s23 - 1/2*denom(1/2*s12)*mt^2*s14^3
       - denom(1/2*s12)*mt^2*s13*s24^2 - denom(1/2*s12)*mt^2*s13*s23*s24 - 5*
      denom(1/2*s12)*mt^2*s13*s14*s24 - 5/2*denom(1/2*s12)*mt^2*s13*s14*s23 - 
      3/2*denom(1/2*s12)*mt^2*s13*s14^2 - 3/2*denom(1/2*s12)*mt^2*s13^2*s24 - 
      denom(1/2*s12)*mt^2*s13^2*s14 - denom(1/2*s12)*mt^2*s12*s14*s24 - denom(
      1/2*s12)*mt^2*s12*s14*s23 - 1/2*denom(1/2*s12)*mt^2*s12*s14^2 - denom(1/
      2*s12)*mt^2*s12*s13*s24 - denom(1/2*s12)*mt^2*s12*s13*s14 + denom(1/2*
      s12)*mt^2*mh^2*s14*s24 + denom(1/2*s12)*mt^2*mh^2*s14*s23 + 1/2*denom(1/
      2*s12)*mt^2*mh^2*s14^2 + denom(1/2*s12)*mt^2*mh^2*s13*s24 + denom(1/2*
      s12)*mt^2*mh^2*s13*s14 + denom(1/2*s12)*mt^4*s24^2 + 3/2*denom(1/2*s12)*
      mt^4*s23*s24 + 1/2*denom(1/2*s12)*mt^4*s23^2 + 5*denom(1/2*s12)*mt^4*s14
      *s24 + 5*denom(1/2*s12)*mt^4*s14*s23 + 3*denom(1/2*s12)*mt^4*s14^2 + 5*
      denom(1/2*s12)*mt^4*s13*s24 + 2*denom(1/2*s12)*mt^4*s13*s23 + 11/2*
      denom(1/2*s12)*mt^4*s13*s14 + 3/2*denom(1/2*s12)*mt^4*s13^2 + denom(1/2*
      s12)*mt^4*s12*s24 + 1/2*denom(1/2*s12)*mt^4*s12*s23 + 2*denom(1/2*s12)*
      mt^4*s12*s14 + denom(1/2*s12)*mt^4*s12*s13 - denom(1/2*s12)*mt^4*mh^2*
      s24 - 1/2*denom(1/2*s12)*mt^4*mh^2*s23 - 2*denom(1/2*s12)*mt^4*mh^2*s14
       - denom(1/2*s12)*mt^4*mh^2*s13 - 4*denom(1/2*s12)*mt^6*s24 - 3*denom(1/
      2*s12)*mt^6*s23 - 6*denom(1/2*s12)*mt^6*s14 - 5*denom(1/2*s12)*mt^6*s13
       - 3/2*denom(1/2*s12)*mt^6*s12 + 3/2*denom(1/2*s12)*mt^6*mh^2 + 4*denom(
      1/2*s12)*mt^8 + 1/8*denom(1/4*s12^2)*s14^3*s23^2 + 1/2*denom(1/4*s12^2)*
      s13*s14^2*s23*s24 + 3/8*denom(1/4*s12^2)*s13^2*s14*s24^2 - 1/2*denom(1/4
      *s12^2)*mt^2*s14^2*s23*s24 - 3/8*denom(1/4*s12^2)*mt^2*s14^2*s23^2 - 1/4
      *denom(1/4*s12^2)*mt^2*s14^3*s23 - 3/4*denom(1/4*s12^2)*mt^2*s13*s14*
      s24^2 - denom(1/4*s12^2)*mt^2*s13*s14*s23*s24 - 1/2*denom(1/4*s12^2)*
      mt^2*s13*s14^2*s24 - 1/2*denom(1/4*s12^2)*mt^2*s13*s14^2*s23 - 3/8*
      denom(1/4*s12^2)*mt^2*s13^2*s24^2 - 3/4*denom(1/4*s12^2)*mt^2*s13^2*s14*
      s24 + 3/8*denom(1/4*s12^2)*mt^4*s14*s24^2 + denom(1/4*s12^2)*mt^4*s14*
      s23*s24 + 3/8*denom(1/4*s12^2)*mt^4*s14*s23^2 + 1/2*denom(1/4*s12^2)*
      mt^4*s14^2*s24 + 5/4*denom(1/4*s12^2)*mt^4*s14^2*s23 + 1/8*denom(1/4*
      s12^2)*mt^4*s14^3 + 3/4*denom(1/4*s12^2)*mt^4*s13*s24^2 + 1/2*denom(1/4*
      s12^2)*mt^4*s13*s23*s24 + 5/2*denom(1/4*s12^2)*mt^4*s13*s14*s24 + denom(
      1/4*s12^2)*mt^4*s13*s14*s23 + 1/2*denom(1/4*s12^2)*mt^4*s13*s14^2 + 3/4*
      denom(1/4*s12^2)*mt^4*s13^2*s24 + 3/8*denom(1/4*s12^2)*mt^4*s13^2*s14 - 
      3/8*denom(1/4*s12^2)*mt^6*s24^2 - 1/2*denom(1/4*s12^2)*mt^6*s23*s24 - 1/
      8*denom(1/4*s12^2)*mt^6*s23^2 - 7/4*denom(1/4*s12^2)*mt^6*s14*s24 - 7/4*
      denom(1/4*s12^2)*mt^6*s14*s23 - 7/8*denom(1/4*s12^2)*mt^6*s14^2 - 2*
      denom(1/4*s12^2)*mt^6*s13*s24 - 1/2*denom(1/4*s12^2)*mt^6*s13*s23 - 7/4*
      denom(1/4*s12^2)*mt^6*s13*s14 - 3/8*denom(1/4*s12^2)*mt^6*s13^2 + 5/4*
      denom(1/4*s12^2)*mt^8*s24 + 3/4*denom(1/4*s12^2)*mt^8*s23 + 7/4*denom(1/
      4*s12^2)*mt^8*s14 + 5/4*denom(1/4*s12^2)*mt^8*s13 - denom(1/4*s12^2)*
      mt^10;
 
 .sort
id KMatrix(8,23) =   - mt^2*s14*s24 - mt^2*s14*s23 - mt^2*s14^2 - mt^2*s13*s14
       - mt^2*s12*s14 + mt^2*mh^2*s14 + mt^4*s24 + mt^4*s23 + 3*mt^4*s14 + 3*
      mt^4*s13 + mt^4*s12 - mt^4*mh^2 - 4*mt^6 + 1/2*denom(1/2*s12)*s14^2*
      s24^2 + 1/2*denom(1/2*s12)*s14^2*s23*s24 + 1/2*denom(1/2*s12)*s14^3*s24
       + 1/2*denom(1/2*s12)*s13*s14^2*s24 + 1/2*denom(1/2*s12)*s12*s14^2*s24
       - 1/2*denom(1/2*s12)*mh^2*s14^2*s24 - denom(1/2*s12)*mt^2*s14*s24^2 - 
      denom(1/2*s12)*mt^2*s14*s23*s24 - 5/2*denom(1/2*s12)*mt^2*s14^2*s24 - 
      denom(1/2*s12)*mt^2*s14^2*s23 - 1/2*denom(1/2*s12)*mt^2*s14^3 - 7/2*
      denom(1/2*s12)*mt^2*s13*s14*s24 - 1/2*denom(1/2*s12)*mt^2*s13*s14^2 - 
      denom(1/2*s12)*mt^2*s12*s14*s24 - 1/2*denom(1/2*s12)*mt^2*s12*s14^2 + 
      denom(1/2*s12)*mt^2*mh^2*s14*s24 + 1/2*denom(1/2*s12)*mt^2*mh^2*s14^2 + 
      1/2*denom(1/2*s12)*mt^4*s24^2 + 1/2*denom(1/2*s12)*mt^4*s23*s24 + 6*
      denom(1/2*s12)*mt^4*s14*s24 + 2*denom(1/2*s12)*mt^4*s14*s23 + 5/2*denom(
      1/2*s12)*mt^4*s14^2 + 3*denom(1/2*s12)*mt^4*s13*s24 + 7/2*denom(1/2*s12)
      *mt^4*s13*s14 + 1/2*denom(1/2*s12)*mt^4*s12*s24 + denom(1/2*s12)*mt^4*
      s12*s14 - 1/2*denom(1/2*s12)*mt^4*mh^2*s24 - denom(1/2*s12)*mt^4*mh^2*
      s14 - 4*denom(1/2*s12)*mt^6*s24 - denom(1/2*s12)*mt^6*s23 - 6*denom(1/2*
      s12)*mt^6*s14 - 3*denom(1/2*s12)*mt^6*s13 - 1/2*denom(1/2*s12)*mt^6*s12
       + 1/2*denom(1/2*s12)*mt^6*mh^2 + 4*denom(1/2*s12)*mt^8 + 1/4*denom(1/4*
      s12^2)*s14^3*s23*s24 + 3/4*denom(1/4*s12^2)*s13*s14^2*s24^2 - 3/4*denom(
      1/4*s12^2)*mt^2*s14^2*s24^2 - 3/4*denom(1/4*s12^2)*mt^2*s14^2*s23*s24 - 
      1/4*denom(1/4*s12^2)*mt^2*s14^3*s24 - 1/4*denom(1/4*s12^2)*mt^2*s14^3*
      s23 - 3/2*denom(1/4*s12^2)*mt^2*s13*s14*s24^2 - 3/2*denom(1/4*s12^2)*
      mt^2*s13*s14^2*s24 + 3/2*denom(1/4*s12^2)*mt^4*s14*s24^2 + 3/4*denom(1/4
      *s12^2)*mt^4*s14*s23*s24 + 9/4*denom(1/4*s12^2)*mt^4*s14^2*s24 + 3/4*
      denom(1/4*s12^2)*mt^4*s14^2*s23 + 1/4*denom(1/4*s12^2)*mt^4*s14^3 + 3/4*
      denom(1/4*s12^2)*mt^4*s13*s24^2 + 3*denom(1/4*s12^2)*mt^4*s13*s14*s24 + 
      3/4*denom(1/4*s12^2)*mt^4*s13*s14^2 - 3/4*denom(1/4*s12^2)*mt^6*s24^2 - 
      1/4*denom(1/4*s12^2)*mt^6*s23*s24 - 15/4*denom(1/4*s12^2)*mt^6*s14*s24
       - 3/4*denom(1/4*s12^2)*mt^6*s14*s23 - 3/2*denom(1/4*s12^2)*mt^6*s14^2
       - 3/2*denom(1/4*s12^2)*mt^6*s13*s24 - 3/2*denom(1/4*s12^2)*mt^6*s13*s14
       + 7/4*denom(1/4*s12^2)*mt^8*s24 + 1/4*denom(1/4*s12^2)*mt^8*s23 + 9/4*
      denom(1/4*s12^2)*mt^8*s14 + 3/4*denom(1/4*s12^2)*mt^8*s13 - denom(1/4*
      s12^2)*mt^10;
 
 .sort
id KMatrix(8,24) =  2*mt^3*s12*s14 - 2*mt^5*s12 - 2*denom(1/2*s12)*mt*s12*
      s14^2*s24 + 4*denom(1/2*s12)*mt^3*s12*s14*s24 + 2*denom(1/2*s12)*mt^3*
      s12*s14^2 - 2*denom(1/2*s12)*mt^5*s12*s24 - 4*denom(1/2*s12)*mt^5*s12*
      s14 + 2*denom(1/2*s12)*mt^7*s12 + 1/2*denom(1/4*s12^2)*mt*s12^2*s14^2*
      s24 - denom(1/4*s12^2)*mt^3*s12^2*s14*s24 - 1/2*denom(1/4*s12^2)*mt^3*
      s12^2*s14^2 + 1/2*denom(1/4*s12^2)*mt^5*s12^2*s24 + denom(1/4*s12^2)*
      mt^5*s12^2*s14 - 1/2*denom(1/4*s12^2)*mt^7*s12^2;
 
 .sort
id KMatrix(8,25) =  2*mt^3*s14 - 2*mt^3*s13 - 2*denom(1/2*s12)*mt*s14^2*s24 + 
      2*denom(1/2*s12)*mt*s13*s14*s24 + 2*denom(1/2*s12)*mt^3*s14*s24 + 2*
      denom(1/2*s12)*mt^3*s14^2 - 2*denom(1/2*s12)*mt^3*s13*s24 - 2*denom(1/2*
      s12)*mt^3*s13*s14 - 2*denom(1/2*s12)*mt^5*s14 + 2*denom(1/2*s12)*mt^5*
      s13 + 1/2*denom(1/4*s12^2)*mt*s12*s14^2*s24 - 1/2*denom(1/4*s12^2)*mt*
      s12*s13*s14*s24 - 1/2*denom(1/4*s12^2)*mt^3*s12*s14*s24 - 1/2*denom(1/4*
      s12^2)*mt^3*s12*s14^2 + 1/2*denom(1/4*s12^2)*mt^3*s12*s13*s24 + 1/2*
      denom(1/4*s12^2)*mt^3*s12*s13*s14 + 1/2*denom(1/4*s12^2)*mt^5*s12*s14 - 
      1/2*denom(1/4*s12^2)*mt^5*s12*s13;
 
 .sort
id KMatrix(8,26) =   0;
 
 .sort
id KMatrix(8,27) =  1/2*mt*s12*s24^2 + mt*s12*s23*s24 + 1/2*mt*s12*s23^2 + mt*
      s12*s14*s24 + mt*s12*s14*s23 + 1/2*mt*s12*s14^2 + mt*s12*s13*s24 + mt*
      s12*s13*s23 + mt*s12*s13*s14 + 1/2*mt*s12*s13^2 + mt*s12^2*s24 + mt*
      s12^2*s23 + mt*s12^2*s14 + mt*s12^2*s13 + 1/2*mt*s12^3 - mt*mh^2*s12*s24
       - mt*mh^2*s12*s23 - mt*mh^2*s12*s14 - mt*mh^2*s12*s13 - mt*mh^2*s12^2
       + 1/2*mt*mh^4*s12 - 3*mt^3*s12*s24 - 3*mt^3*s12*s23 - 3*mt^3*s12*s14 - 
      3*mt^3*s12*s13 - 3*mt^3*s12^2 + 3*mt^3*mh^2*s12 + 4*mt^5*s12 + 1/2*
      denom(1/2*s12)*mt*s12*s14*s24^2 + denom(1/2*s12)*mt*s12*s14*s23*s24 + 1/
      2*denom(1/2*s12)*mt*s12*s14*s23^2 + 1/2*denom(1/2*s12)*mt*s12*s14^2*s24
       + 1/2*denom(1/2*s12)*mt*s12*s14^2*s23 + 1/2*denom(1/2*s12)*mt*s12*s13*
      s24^2 + 1/2*denom(1/2*s12)*mt*s12*s13*s23*s24 + denom(1/2*s12)*mt*s12*
      s13*s14*s24 + 1/2*denom(1/2*s12)*mt*s12*s13*s14*s23 + 1/2*denom(1/2*s12)
      *mt*s12*s13^2*s24 + 1/2*denom(1/2*s12)*mt*s12^2*s14*s24 + 1/2*denom(1/2*
      s12)*mt*s12^2*s14*s23 + 1/2*denom(1/2*s12)*mt*s12^2*s13*s24 - 1/2*denom(
      1/2*s12)*mt*mh^2*s12*s14*s24 - 1/2*denom(1/2*s12)*mt*mh^2*s12*s14*s23 - 
      1/2*denom(1/2*s12)*mt*mh^2*s12*s13*s24 - denom(1/2*s12)*mt^3*s12*s24^2
       - 3/2*denom(1/2*s12)*mt^3*s12*s23*s24 - 1/2*denom(1/2*s12)*mt^3*s12*
      s23^2 - 3*denom(1/2*s12)*mt^3*s12*s14*s24 - 3*denom(1/2*s12)*mt^3*s12*
      s14*s23 - denom(1/2*s12)*mt^3*s12*s14^2 - 3*denom(1/2*s12)*mt^3*s12*s13*
      s24 - denom(1/2*s12)*mt^3*s12*s13*s23 - 3/2*denom(1/2*s12)*mt^3*s12*s13*
      s14 - 1/2*denom(1/2*s12)*mt^3*s12*s13^2 - denom(1/2*s12)*mt^3*s12^2*s24
       - 1/2*denom(1/2*s12)*mt^3*s12^2*s23 - denom(1/2*s12)*mt^3*s12^2*s14 - 1/
      2*denom(1/2*s12)*mt^3*s12^2*s13 + denom(1/2*s12)*mt^3*mh^2*s12*s24 + 1/2
      *denom(1/2*s12)*mt^3*mh^2*s12*s23 + denom(1/2*s12)*mt^3*mh^2*s12*s14 + 1/
      2*denom(1/2*s12)*mt^3*mh^2*s12*s13 + 4*denom(1/2*s12)*mt^5*s12*s24 + 3*
      denom(1/2*s12)*mt^5*s12*s23 + 4*denom(1/2*s12)*mt^5*s12*s14 + 3*denom(1/
      2*s12)*mt^5*s12*s13 + 3/2*denom(1/2*s12)*mt^5*s12^2 - 3/2*denom(1/2*s12)
      *mt^5*mh^2*s12 - 4*denom(1/2*s12)*mt^7*s12 + 1/4*denom(1/4*s12^2)*mt*s12
      *s14^2*s23*s24 + 1/8*denom(1/4*s12^2)*mt*s12*s14^2*s23^2 + 1/4*denom(1/4
      *s12^2)*mt*s12*s13*s14*s24^2 + 1/4*denom(1/4*s12^2)*mt*s12*s13*s14*s23*
      s24 + 1/8*denom(1/4*s12^2)*mt*s12*s13^2*s24^2 - 1/4*denom(1/4*s12^2)*
      mt^3*s12*s14*s24^2 - 3/4*denom(1/4*s12^2)*mt^3*s12*s14*s23*s24 - 1/4*
      denom(1/4*s12^2)*mt^3*s12*s14*s23^2 - 1/4*denom(1/4*s12^2)*mt^3*s12*
      s14^2*s24 - 1/2*denom(1/4*s12^2)*mt^3*s12*s14^2*s23 - 1/2*denom(1/4*
      s12^2)*mt^3*s12*s13*s24^2 - 1/4*denom(1/4*s12^2)*mt^3*s12*s13*s23*s24 - 
      3/4*denom(1/4*s12^2)*mt^3*s12*s13*s14*s24 - 1/4*denom(1/4*s12^2)*mt^3*
      s12*s13*s14*s23 - 1/4*denom(1/4*s12^2)*mt^3*s12*s13^2*s24 + 3/8*denom(1/
      4*s12^2)*mt^5*s12*s24^2 + 1/2*denom(1/4*s12^2)*mt^5*s12*s23*s24 + 1/8*
      denom(1/4*s12^2)*mt^5*s12*s23^2 + 5/4*denom(1/4*s12^2)*mt^5*s12*s14*s24
       + 5/4*denom(1/4*s12^2)*mt^5*s12*s14*s23 + 3/8*denom(1/4*s12^2)*mt^5*s12
      *s14^2 + 5/4*denom(1/4*s12^2)*mt^5*s12*s13*s24 + 1/4*denom(1/4*s12^2)*
      mt^5*s12*s13*s23 + 1/2*denom(1/4*s12^2)*mt^5*s12*s13*s14 + 1/8*denom(1/4
      *s12^2)*mt^5*s12*s13^2 - 5/4*denom(1/4*s12^2)*mt^7*s12*s24 - 3/4*denom(1/
      4*s12^2)*mt^7*s12*s23 - 5/4*denom(1/4*s12^2)*mt^7*s12*s14 - 3/4*denom(1/
      4*s12^2)*mt^7*s12*s13 + denom(1/4*s12^2)*mt^9*s12;
 
 .sort
id KMatrix(8,28) =   0;
 
 .sort
id KMatrix(8,29) =   - mt^3*s12*s24 - mt^3*s12*s23 - mt^3*s12*s14 - mt^3*s12*
      s13 - mt^3*s12^2 + mt^3*mh^2*s12 + 4*mt^5*s12 + 1/2*denom(1/2*s12)*mt*
      s12*s14*s24^2 + 1/2*denom(1/2*s12)*mt*s12*s14*s23*s24 + 1/2*denom(1/2*
      s12)*mt*s12*s14^2*s24 + 1/2*denom(1/2*s12)*mt*s12*s13*s14*s24 + 1/2*
      denom(1/2*s12)*mt*s12^2*s14*s24 - 1/2*denom(1/2*s12)*mt*mh^2*s12*s14*s24
       - 1/2*denom(1/2*s12)*mt^3*s12*s24^2 - 1/2*denom(1/2*s12)*mt^3*s12*s23*
      s24 - 4*denom(1/2*s12)*mt^3*s12*s14*s24 - denom(1/2*s12)*mt^3*s12*s14*
      s23 - 1/2*denom(1/2*s12)*mt^3*s12*s14^2 - denom(1/2*s12)*mt^3*s12*s13*
      s24 - 1/2*denom(1/2*s12)*mt^3*s12*s13*s14 - 1/2*denom(1/2*s12)*mt^3*
      s12^2*s24 - 1/2*denom(1/2*s12)*mt^3*s12^2*s14 + 1/2*denom(1/2*s12)*mt^3*
      mh^2*s12*s24 + 1/2*denom(1/2*s12)*mt^3*mh^2*s12*s14 + 4*denom(1/2*s12)*
      mt^5*s12*s24 + denom(1/2*s12)*mt^5*s12*s23 + 4*denom(1/2*s12)*mt^5*s12*
      s14 + denom(1/2*s12)*mt^5*s12*s13 + 1/2*denom(1/2*s12)*mt^5*s12^2 - 1/2*
      denom(1/2*s12)*mt^5*mh^2*s12 - 4*denom(1/2*s12)*mt^7*s12 + 1/2*denom(1/4
      *s12^2)*mt*s12*s14^2*s24^2 + 1/4*denom(1/4*s12^2)*mt*s12*s14^2*s23*s24
       + 1/4*denom(1/4*s12^2)*mt*s12*s13*s14*s24^2 - 5/4*denom(1/4*s12^2)*mt^3
      *s12*s14*s24^2 - 1/2*denom(1/4*s12^2)*mt^3*s12*s14*s23*s24 - 5/4*denom(1/
      4*s12^2)*mt^3*s12*s14^2*s24 - 1/4*denom(1/4*s12^2)*mt^3*s12*s14^2*s23 - 
      1/4*denom(1/4*s12^2)*mt^3*s12*s13*s24^2 - 1/2*denom(1/4*s12^2)*mt^3*s12*
      s13*s14*s24 + 3/4*denom(1/4*s12^2)*mt^5*s12*s24^2 + 1/4*denom(1/4*s12^2)
      *mt^5*s12*s23*s24 + 3*denom(1/4*s12^2)*mt^5*s12*s14*s24 + 1/2*denom(1/4*
      s12^2)*mt^5*s12*s14*s23 + 3/4*denom(1/4*s12^2)*mt^5*s12*s14^2 + 1/2*
      denom(1/4*s12^2)*mt^5*s12*s13*s24 + 1/4*denom(1/4*s12^2)*mt^5*s12*s13*
      s14 - 7/4*denom(1/4*s12^2)*mt^7*s12*s24 - 1/4*denom(1/4*s12^2)*mt^7*s12*
      s23 - 7/4*denom(1/4*s12^2)*mt^7*s12*s14 - 1/4*denom(1/4*s12^2)*mt^7*s12*
      s13 + denom(1/4*s12^2)*mt^9*s12;
 
 .sort
id KMatrix(8,30) =   0;
 
 .sort
id KMatrix(8,31) =  1/2*mt*s12*s24^2 + mt*s12*s23*s24 + 1/2*mt*s12*s23^2 + mt*
      s12*s14*s24 + mt*s12*s14*s23 + 1/2*mt*s12*s14^2 + mt*s12*s13*s24 + mt*
      s12*s13*s23 + mt*s12*s13*s14 + 1/2*mt*s12*s13^2 + mt*s12^2*s24 + mt*
      s12^2*s23 + mt*s12^2*s14 + mt*s12^2*s13 + 1/2*mt*s12^3 - mt*mh^2*s12*s24
       - mt*mh^2*s12*s23 - mt*mh^2*s12*s14 - mt*mh^2*s12*s13 - mt*mh^2*s12^2
       + 1/2*mt*mh^4*s12 - 3*mt^3*s12*s24 - 3*mt^3*s12*s23 - 3*mt^3*s12*s14 - 
      3*mt^3*s12*s13 - 3*mt^3*s12^2 + 3*mt^3*mh^2*s12 + 4*mt^5*s12 + 1/2*
      denom(1/2*s12)*mt*s12*s14*s24^2 + denom(1/2*s12)*mt*s12*s14*s23*s24 + 1/
      2*denom(1/2*s12)*mt*s12*s14*s23^2 + 1/2*denom(1/2*s12)*mt*s12*s14^2*s24
       + 1/2*denom(1/2*s12)*mt*s12*s14^2*s23 + 1/2*denom(1/2*s12)*mt*s12*s13*
      s24^2 + 1/2*denom(1/2*s12)*mt*s12*s13*s23*s24 + denom(1/2*s12)*mt*s12*
      s13*s14*s24 + 1/2*denom(1/2*s12)*mt*s12*s13*s14*s23 + 1/2*denom(1/2*s12)
      *mt*s12*s13^2*s24 + 1/2*denom(1/2*s12)*mt*s12^2*s14*s24 + 1/2*denom(1/2*
      s12)*mt*s12^2*s14*s23 + 1/2*denom(1/2*s12)*mt*s12^2*s13*s24 - 1/2*denom(
      1/2*s12)*mt*mh^2*s12*s14*s24 - 1/2*denom(1/2*s12)*mt*mh^2*s12*s14*s23 - 
      1/2*denom(1/2*s12)*mt*mh^2*s12*s13*s24 - denom(1/2*s12)*mt^3*s12*s24^2
       - 3/2*denom(1/2*s12)*mt^3*s12*s23*s24 - 1/2*denom(1/2*s12)*mt^3*s12*
      s23^2 - 3*denom(1/2*s12)*mt^3*s12*s14*s24 - 3*denom(1/2*s12)*mt^3*s12*
      s14*s23 - denom(1/2*s12)*mt^3*s12*s14^2 - 3*denom(1/2*s12)*mt^3*s12*s13*
      s24 - denom(1/2*s12)*mt^3*s12*s13*s23 - 3/2*denom(1/2*s12)*mt^3*s12*s13*
      s14 - 1/2*denom(1/2*s12)*mt^3*s12*s13^2 - denom(1/2*s12)*mt^3*s12^2*s24
       - 1/2*denom(1/2*s12)*mt^3*s12^2*s23 - denom(1/2*s12)*mt^3*s12^2*s14 - 1/
      2*denom(1/2*s12)*mt^3*s12^2*s13 + denom(1/2*s12)*mt^3*mh^2*s12*s24 + 1/2
      *denom(1/2*s12)*mt^3*mh^2*s12*s23 + denom(1/2*s12)*mt^3*mh^2*s12*s14 + 1/
      2*denom(1/2*s12)*mt^3*mh^2*s12*s13 + 4*denom(1/2*s12)*mt^5*s12*s24 + 3*
      denom(1/2*s12)*mt^5*s12*s23 + 4*denom(1/2*s12)*mt^5*s12*s14 + 3*denom(1/
      2*s12)*mt^5*s12*s13 + 3/2*denom(1/2*s12)*mt^5*s12^2 - 3/2*denom(1/2*s12)
      *mt^5*mh^2*s12 - 4*denom(1/2*s12)*mt^7*s12 + 1/4*denom(1/4*s12^2)*mt*s12
      *s14^2*s23*s24 + 1/8*denom(1/4*s12^2)*mt*s12*s14^2*s23^2 + 1/4*denom(1/4
      *s12^2)*mt*s12*s13*s14*s24^2 + 1/4*denom(1/4*s12^2)*mt*s12*s13*s14*s23*
      s24 + 1/8*denom(1/4*s12^2)*mt*s12*s13^2*s24^2 - 1/4*denom(1/4*s12^2)*
      mt^3*s12*s14*s24^2 - 3/4*denom(1/4*s12^2)*mt^3*s12*s14*s23*s24 - 1/4*
      denom(1/4*s12^2)*mt^3*s12*s14*s23^2 - 1/4*denom(1/4*s12^2)*mt^3*s12*
      s14^2*s24 - 1/2*denom(1/4*s12^2)*mt^3*s12*s14^2*s23 - 1/2*denom(1/4*
      s12^2)*mt^3*s12*s13*s24^2 - 1/4*denom(1/4*s12^2)*mt^3*s12*s13*s23*s24 - 
      3/4*denom(1/4*s12^2)*mt^3*s12*s13*s14*s24 - 1/4*denom(1/4*s12^2)*mt^3*
      s12*s13*s14*s23 - 1/4*denom(1/4*s12^2)*mt^3*s12*s13^2*s24 + 3/8*denom(1/
      4*s12^2)*mt^5*s12*s24^2 + 1/2*denom(1/4*s12^2)*mt^5*s12*s23*s24 + 1/8*
      denom(1/4*s12^2)*mt^5*s12*s23^2 + 5/4*denom(1/4*s12^2)*mt^5*s12*s14*s24
       + 5/4*denom(1/4*s12^2)*mt^5*s12*s14*s23 + 3/8*denom(1/4*s12^2)*mt^5*s12
      *s14^2 + 5/4*denom(1/4*s12^2)*mt^5*s12*s13*s24 + 1/4*denom(1/4*s12^2)*
      mt^5*s12*s13*s23 + 1/2*denom(1/4*s12^2)*mt^5*s12*s13*s14 + 1/8*denom(1/4
      *s12^2)*mt^5*s12*s13^2 - 5/4*denom(1/4*s12^2)*mt^7*s12*s24 - 3/4*denom(1/
      4*s12^2)*mt^7*s12*s23 - 5/4*denom(1/4*s12^2)*mt^7*s12*s14 - 3/4*denom(1/
      4*s12^2)*mt^7*s12*s13 + denom(1/4*s12^2)*mt^9*s12;
 
 .sort
id KMatrix(8,32) =   0;
 
 .sort
id KMatrix(8,33) =   - mt^3*s12*s24 - mt^3*s12*s23 - mt^3*s12*s14 - mt^3*s12*
      s13 - mt^3*s12^2 + mt^3*mh^2*s12 + 4*mt^5*s12 + 1/2*denom(1/2*s12)*mt*
      s12*s14*s24^2 + 1/2*denom(1/2*s12)*mt*s12*s14*s23*s24 + 1/2*denom(1/2*
      s12)*mt*s12*s14^2*s24 + 1/2*denom(1/2*s12)*mt*s12*s13*s14*s24 + 1/2*
      denom(1/2*s12)*mt*s12^2*s14*s24 - 1/2*denom(1/2*s12)*mt*mh^2*s12*s14*s24
       - 1/2*denom(1/2*s12)*mt^3*s12*s24^2 - 1/2*denom(1/2*s12)*mt^3*s12*s23*
      s24 - 4*denom(1/2*s12)*mt^3*s12*s14*s24 - denom(1/2*s12)*mt^3*s12*s14*
      s23 - 1/2*denom(1/2*s12)*mt^3*s12*s14^2 - denom(1/2*s12)*mt^3*s12*s13*
      s24 - 1/2*denom(1/2*s12)*mt^3*s12*s13*s14 - 1/2*denom(1/2*s12)*mt^3*
      s12^2*s24 - 1/2*denom(1/2*s12)*mt^3*s12^2*s14 + 1/2*denom(1/2*s12)*mt^3*
      mh^2*s12*s24 + 1/2*denom(1/2*s12)*mt^3*mh^2*s12*s14 + 4*denom(1/2*s12)*
      mt^5*s12*s24 + denom(1/2*s12)*mt^5*s12*s23 + 4*denom(1/2*s12)*mt^5*s12*
      s14 + denom(1/2*s12)*mt^5*s12*s13 + 1/2*denom(1/2*s12)*mt^5*s12^2 - 1/2*
      denom(1/2*s12)*mt^5*mh^2*s12 - 4*denom(1/2*s12)*mt^7*s12 + 1/2*denom(1/4
      *s12^2)*mt*s12*s14^2*s24^2 + 1/4*denom(1/4*s12^2)*mt*s12*s14^2*s23*s24
       + 1/4*denom(1/4*s12^2)*mt*s12*s13*s14*s24^2 - 5/4*denom(1/4*s12^2)*mt^3
      *s12*s14*s24^2 - 1/2*denom(1/4*s12^2)*mt^3*s12*s14*s23*s24 - 5/4*denom(1/
      4*s12^2)*mt^3*s12*s14^2*s24 - 1/4*denom(1/4*s12^2)*mt^3*s12*s14^2*s23 - 
      1/4*denom(1/4*s12^2)*mt^3*s12*s13*s24^2 - 1/2*denom(1/4*s12^2)*mt^3*s12*
      s13*s14*s24 + 3/4*denom(1/4*s12^2)*mt^5*s12*s24^2 + 1/4*denom(1/4*s12^2)
      *mt^5*s12*s23*s24 + 3*denom(1/4*s12^2)*mt^5*s12*s14*s24 + 1/2*denom(1/4*
      s12^2)*mt^5*s12*s14*s23 + 3/4*denom(1/4*s12^2)*mt^5*s12*s14^2 + 1/2*
      denom(1/4*s12^2)*mt^5*s12*s13*s24 + 1/4*denom(1/4*s12^2)*mt^5*s12*s13*
      s14 - 7/4*denom(1/4*s12^2)*mt^7*s12*s24 - 1/4*denom(1/4*s12^2)*mt^7*s12*
      s23 - 7/4*denom(1/4*s12^2)*mt^7*s12*s14 - 1/4*denom(1/4*s12^2)*mt^7*s12*
      s13 + denom(1/4*s12^2)*mt^9*s12;
 
 .sort
id KMatrix(8,34) =  2*mt^2*s13*s14 - 2*mt^4*s14 - 2*mt^4*s13 + 2*mt^6 - 2*
      denom(1/2*s12)*s13*s14^2*s24 + 2*denom(1/2*s12)*mt^2*s14^2*s24 + 4*
      denom(1/2*s12)*mt^2*s13*s14*s24 + 2*denom(1/2*s12)*mt^2*s13*s14^2 - 4*
      denom(1/2*s12)*mt^4*s14*s24 - 2*denom(1/2*s12)*mt^4*s14^2 - 2*denom(1/2*
      s12)*mt^4*s13*s24 - 4*denom(1/2*s12)*mt^4*s13*s14 + 2*denom(1/2*s12)*
      mt^6*s24 + 4*denom(1/2*s12)*mt^6*s14 + 2*denom(1/2*s12)*mt^6*s13 - 2*
      denom(1/2*s12)*mt^8 + 1/2*denom(1/4*s12^2)*s12*s13*s14^2*s24 - 1/2*
      denom(1/4*s12^2)*mt^2*s12*s14^2*s24 - denom(1/4*s12^2)*mt^2*s12*s13*s14*
      s24 - 1/2*denom(1/4*s12^2)*mt^2*s12*s13*s14^2 + denom(1/4*s12^2)*mt^4*
      s12*s14*s24 + 1/2*denom(1/4*s12^2)*mt^4*s12*s14^2 + 1/2*denom(1/4*s12^2)
      *mt^4*s12*s13*s24 + denom(1/4*s12^2)*mt^4*s12*s13*s14 - 1/2*denom(1/4*
      s12^2)*mt^6*s12*s24 - denom(1/4*s12^2)*mt^6*s12*s14 - 1/2*denom(1/4*
      s12^2)*mt^6*s12*s13 + 1/2*denom(1/4*s12^2)*mt^8*s12;
 
 .sort
id KMatrix(8,35) =  mt^2*s14*s23 + mt^2*s13*s24 + mt^2*s12*s24 + mt^2*s12*s23
       + mt^2*s12*s14 + mt^2*s12*s13 + mt^2*s12^2 - mt^2*mh^2*s12 - mt^4*s24
       - mt^4*s23 - mt^4*s14 - mt^4*s13 - 4*mt^4*s12 + 2*mt^6 - denom(1/2*s12)
      *s14^2*s23*s24 - denom(1/2*s12)*s13*s14*s24^2 - denom(1/2*s12)*s12*s14*
      s24^2 - denom(1/2*s12)*s12*s14*s23*s24 - denom(1/2*s12)*s12*s14^2*s24 - 
      denom(1/2*s12)*s12*s13*s14*s24 - denom(1/2*s12)*s12^2*s14*s24 + denom(1/
      2*s12)*mh^2*s12*s14*s24 + denom(1/2*s12)*mt^2*s14*s24^2 + 2*denom(1/2*
      s12)*mt^2*s14*s23*s24 + denom(1/2*s12)*mt^2*s14^2*s24 + denom(1/2*s12)*
      mt^2*s14^2*s23 + denom(1/2*s12)*mt^2*s13*s24^2 + 2*denom(1/2*s12)*mt^2*
      s13*s14*s24 + denom(1/2*s12)*mt^2*s12*s24^2 + denom(1/2*s12)*mt^2*s12*
      s23*s24 + 6*denom(1/2*s12)*mt^2*s12*s14*s24 + denom(1/2*s12)*mt^2*s12*
      s14*s23 + denom(1/2*s12)*mt^2*s12*s14^2 + denom(1/2*s12)*mt^2*s12*s13*
      s24 + denom(1/2*s12)*mt^2*s12*s13*s14 + denom(1/2*s12)*mt^2*s12^2*s24 + 
      denom(1/2*s12)*mt^2*s12^2*s14 - denom(1/2*s12)*mt^2*mh^2*s12*s24 - 
      denom(1/2*s12)*mt^2*mh^2*s12*s14 - denom(1/2*s12)*mt^4*s24^2 - denom(1/2
      *s12)*mt^4*s23*s24 - 4*denom(1/2*s12)*mt^4*s14*s24 - 2*denom(1/2*s12)*
      mt^4*s14*s23 - denom(1/2*s12)*mt^4*s14^2 - 2*denom(1/2*s12)*mt^4*s13*s24
       - denom(1/2*s12)*mt^4*s13*s14 - 5*denom(1/2*s12)*mt^4*s12*s24 - denom(1/
      2*s12)*mt^4*s12*s23 - 5*denom(1/2*s12)*mt^4*s12*s14 - denom(1/2*s12)*
      mt^4*s12*s13 - denom(1/2*s12)*mt^4*s12^2 + denom(1/2*s12)*mt^4*mh^2*s12
       + 3*denom(1/2*s12)*mt^6*s24 + denom(1/2*s12)*mt^6*s23 + 3*denom(1/2*s12
      )*mt^6*s14 + denom(1/2*s12)*mt^6*s13 + 4*denom(1/2*s12)*mt^6*s12 - 2*
      denom(1/2*s12)*mt^8 + 1/4*denom(1/4*s12^2)*s12*s14^2*s23*s24 + 1/4*
      denom(1/4*s12^2)*s12*s13*s14*s24^2 + 1/4*denom(1/4*s12^2)*s12^2*s14*
      s24^2 + 1/4*denom(1/4*s12^2)*s12^2*s14*s23*s24 + 1/4*denom(1/4*s12^2)*
      s12^2*s14^2*s24 + 1/4*denom(1/4*s12^2)*s12^2*s13*s14*s24 + 1/4*denom(1/4
      *s12^2)*s12^3*s14*s24 - 1/4*denom(1/4*s12^2)*mh^2*s12^2*s14*s24 - 1/4*
      denom(1/4*s12^2)*mt^2*s12*s14*s24^2 - 1/2*denom(1/4*s12^2)*mt^2*s12*s14*
      s23*s24 - 1/4*denom(1/4*s12^2)*mt^2*s12*s14^2*s24 - 1/4*denom(1/4*s12^2)
      *mt^2*s12*s14^2*s23 - 1/4*denom(1/4*s12^2)*mt^2*s12*s13*s24^2 - 1/2*
      denom(1/4*s12^2)*mt^2*s12*s13*s14*s24 - 1/4*denom(1/4*s12^2)*mt^2*s12^2*
      s24^2 - 1/4*denom(1/4*s12^2)*mt^2*s12^2*s23*s24 - 3/2*denom(1/4*s12^2)*
      mt^2*s12^2*s14*s24 - 1/4*denom(1/4*s12^2)*mt^2*s12^2*s14*s23 - 1/4*
      denom(1/4*s12^2)*mt^2*s12^2*s14^2 - 1/4*denom(1/4*s12^2)*mt^2*s12^2*s13*
      s24 - 1/4*denom(1/4*s12^2)*mt^2*s12^2*s13*s14 - 1/4*denom(1/4*s12^2)*
      mt^2*s12^3*s24 - 1/4*denom(1/4*s12^2)*mt^2*s12^3*s14 + 1/4*denom(1/4*
      s12^2)*mt^2*mh^2*s12^2*s24 + 1/4*denom(1/4*s12^2)*mt^2*mh^2*s12^2*s14 + 
      1/4*denom(1/4*s12^2)*mt^4*s12*s24^2 + 1/4*denom(1/4*s12^2)*mt^4*s12*s23*
      s24 + denom(1/4*s12^2)*mt^4*s12*s14*s24 + 1/2*denom(1/4*s12^2)*mt^4*s12*
      s14*s23 + 1/4*denom(1/4*s12^2)*mt^4*s12*s14^2 + 1/2*denom(1/4*s12^2)*
      mt^4*s12*s13*s24 + 1/4*denom(1/4*s12^2)*mt^4*s12*s13*s14 + 5/4*denom(1/4
      *s12^2)*mt^4*s12^2*s24 + 1/4*denom(1/4*s12^2)*mt^4*s12^2*s23 + 5/4*
      denom(1/4*s12^2)*mt^4*s12^2*s14 + 1/4*denom(1/4*s12^2)*mt^4*s12^2*s13 + 
      1/4*denom(1/4*s12^2)*mt^4*s12^3 - 1/4*denom(1/4*s12^2)*mt^4*mh^2*s12^2
       - 3/4*denom(1/4*s12^2)*mt^6*s12*s24 - 1/4*denom(1/4*s12^2)*mt^6*s12*s23
       - 3/4*denom(1/4*s12^2)*mt^6*s12*s14 - 1/4*denom(1/4*s12^2)*mt^6*s12*s13
       - denom(1/4*s12^2)*mt^6*s12^2 + 1/2*denom(1/4*s12^2)*mt^8*s12;
 
 .sort
id KMatrix(8,36) =  2*mt^3*s12*s14 - 2*mt^5*s12 - 2*denom(1/2*s12)*mt*s12*
      s14^2*s24 + 4*denom(1/2*s12)*mt^3*s12*s14*s24 + 2*denom(1/2*s12)*mt^3*
      s12*s14^2 - 2*denom(1/2*s12)*mt^5*s12*s24 - 4*denom(1/2*s12)*mt^5*s12*
      s14 + 2*denom(1/2*s12)*mt^7*s12 + 1/2*denom(1/4*s12^2)*mt*s12^2*s14^2*
      s24 - denom(1/4*s12^2)*mt^3*s12^2*s14*s24 - 1/2*denom(1/4*s12^2)*mt^3*
      s12^2*s14^2 + 1/2*denom(1/4*s12^2)*mt^5*s12^2*s24 + denom(1/4*s12^2)*
      mt^5*s12^2*s14 - 1/2*denom(1/4*s12^2)*mt^7*s12^2;
 
 .sort
id KMatrix(9,1) =  2*mt^5*s24 - 2*mt^5*s23 - 2*denom(1/2*s12)*mt^3*s13*s23*s24
       + 2*denom(1/2*s12)*mt^3*s13*s23^2 + 2*denom(1/2*s12)*mt^5*s23*s24 - 2*
      denom(1/2*s12)*mt^5*s23^2 + 2*denom(1/2*s12)*mt^5*s13*s24 - 2*denom(1/2*
      s12)*mt^5*s13*s23 - 2*denom(1/2*s12)*mt^7*s24 + 2*denom(1/2*s12)*mt^7*
      s23 + 1/2*denom(1/4*s12^2)*mt*s13^2*s23^2*s24 - 1/2*denom(1/4*s12^2)*mt*
      s13^2*s23^3 - denom(1/4*s12^2)*mt^3*s13*s23^2*s24 + denom(1/4*s12^2)*
      mt^3*s13*s23^3 - denom(1/4*s12^2)*mt^3*s13^2*s23*s24 + denom(1/4*s12^2)*
      mt^3*s13^2*s23^2 + 1/2*denom(1/4*s12^2)*mt^5*s23^2*s24 - 1/2*denom(1/4*
      s12^2)*mt^5*s23^3 + 2*denom(1/4*s12^2)*mt^5*s13*s23*s24 - 2*denom(1/4*
      s12^2)*mt^5*s13*s23^2 + 1/2*denom(1/4*s12^2)*mt^5*s13^2*s24 - 1/2*denom(
      1/4*s12^2)*mt^5*s13^2*s23 - denom(1/4*s12^2)*mt^7*s23*s24 + denom(1/4*
      s12^2)*mt^7*s23^2 - denom(1/4*s12^2)*mt^7*s13*s24 + denom(1/4*s12^2)*
      mt^7*s13*s23 + 1/2*denom(1/4*s12^2)*mt^9*s24 - 1/2*denom(1/4*s12^2)*mt^9
      *s23;
 
 .sort
id KMatrix(9,2) =   - mt^3*s24^2 + mt^3*s23^2 - mt^3*s14*s24 + mt^3*s14*s23 - 
      mt^3*s13*s24 + mt^3*s13*s23 - mt^3*s12*s24 + mt^3*s12*s23 + mt^3*mh^2*
      s24 - mt^3*mh^2*s23 + 2*mt^5*s24 - 2*mt^5*s23 + 1/2*denom(1/2*s12)*mt*
      s13*s23*s24^2 - 1/2*denom(1/2*s12)*mt*s13*s23^3 + 1/2*denom(1/2*s12)*mt*
      s13*s14*s23*s24 - 1/2*denom(1/2*s12)*mt*s13*s14*s23^2 + 1/2*denom(1/2*
      s12)*mt*s13^2*s23*s24 - 1/2*denom(1/2*s12)*mt*s13^2*s23^2 + 1/2*denom(1/
      2*s12)*mt*s12*s13*s23*s24 - 1/2*denom(1/2*s12)*mt*s12*s13*s23^2 - 1/2*
      denom(1/2*s12)*mt*mh^2*s13*s23*s24 + 1/2*denom(1/2*s12)*mt*mh^2*s13*
      s23^2 - 1/2*denom(1/2*s12)*mt^3*s23*s24^2 + 1/2*denom(1/2*s12)*mt^3*
      s23^3 - denom(1/2*s12)*mt^3*s14*s23*s24 + denom(1/2*s12)*mt^3*s14*s23^2
       - denom(1/2*s12)*mt^3*s13*s24^2 - denom(1/2*s12)*mt^3*s13*s23*s24 + 2*
      denom(1/2*s12)*mt^3*s13*s23^2 - 1/2*denom(1/2*s12)*mt^3*s13*s14*s24 + 1/
      2*denom(1/2*s12)*mt^3*s13*s14*s23 - 1/2*denom(1/2*s12)*mt^3*s13^2*s24 + 
      1/2*denom(1/2*s12)*mt^3*s13^2*s23 - 1/2*denom(1/2*s12)*mt^3*s12*s23*s24
       + 1/2*denom(1/2*s12)*mt^3*s12*s23^2 - 1/2*denom(1/2*s12)*mt^3*s12*s13*
      s24 + 1/2*denom(1/2*s12)*mt^3*s12*s13*s23 + 1/2*denom(1/2*s12)*mt^3*mh^2
      *s23*s24 - 1/2*denom(1/2*s12)*mt^3*mh^2*s23^2 + 1/2*denom(1/2*s12)*mt^3*
      mh^2*s13*s24 - 1/2*denom(1/2*s12)*mt^3*mh^2*s13*s23 + denom(1/2*s12)*
      mt^5*s24^2 + denom(1/2*s12)*mt^5*s23*s24 - 2*denom(1/2*s12)*mt^5*s23^2
       + denom(1/2*s12)*mt^5*s14*s24 - denom(1/2*s12)*mt^5*s14*s23 + 2*denom(1/
      2*s12)*mt^5*s13*s24 - 2*denom(1/2*s12)*mt^5*s13*s23 + 1/2*denom(1/2*s12)
      *mt^5*s12*s24 - 1/2*denom(1/2*s12)*mt^5*s12*s23 - 1/2*denom(1/2*s12)*
      mt^5*mh^2*s24 + 1/2*denom(1/2*s12)*mt^5*mh^2*s23 - 2*denom(1/2*s12)*mt^7
      *s24 + 2*denom(1/2*s12)*mt^7*s23 + 1/4*denom(1/4*s12^2)*mt*s13*s14*s23^2
      *s24 - 1/4*denom(1/4*s12^2)*mt*s13*s14*s23^3 + 1/4*denom(1/4*s12^2)*mt*
      s13^2*s23*s24^2 - 1/4*denom(1/4*s12^2)*mt*s13^2*s23^2*s24 - 1/4*denom(1/
      4*s12^2)*mt^3*s14*s23^2*s24 + 1/4*denom(1/4*s12^2)*mt^3*s14*s23^3 - 1/2*
      denom(1/4*s12^2)*mt^3*s13*s23*s24^2 + 1/4*denom(1/4*s12^2)*mt^3*s13*
      s23^2*s24 + 1/4*denom(1/4*s12^2)*mt^3*s13*s23^3 - 1/2*denom(1/4*s12^2)*
      mt^3*s13*s14*s23*s24 + 1/2*denom(1/4*s12^2)*mt^3*s13*s14*s23^2 - 1/4*
      denom(1/4*s12^2)*mt^3*s13^2*s24^2 + 1/4*denom(1/4*s12^2)*mt^3*s13^2*
      s23^2 + 1/4*denom(1/4*s12^2)*mt^5*s23*s24^2 - 1/4*denom(1/4*s12^2)*mt^5*
      s23^3 + 1/2*denom(1/4*s12^2)*mt^5*s14*s23*s24 - 1/2*denom(1/4*s12^2)*
      mt^5*s14*s23^2 + 1/2*denom(1/4*s12^2)*mt^5*s13*s24^2 + 1/2*denom(1/4*
      s12^2)*mt^5*s13*s23*s24 - denom(1/4*s12^2)*mt^5*s13*s23^2 + 1/4*denom(1/
      4*s12^2)*mt^5*s13*s14*s24 - 1/4*denom(1/4*s12^2)*mt^5*s13*s14*s23 + 1/4*
      denom(1/4*s12^2)*mt^5*s13^2*s24 - 1/4*denom(1/4*s12^2)*mt^5*s13^2*s23 - 
      1/4*denom(1/4*s12^2)*mt^7*s24^2 - 1/2*denom(1/4*s12^2)*mt^7*s23*s24 + 3/
      4*denom(1/4*s12^2)*mt^7*s23^2 - 1/4*denom(1/4*s12^2)*mt^7*s14*s24 + 1/4*
      denom(1/4*s12^2)*mt^7*s14*s23 - 3/4*denom(1/4*s12^2)*mt^7*s13*s24 + 3/4*
      denom(1/4*s12^2)*mt^7*s13*s23 + 1/2*denom(1/4*s12^2)*mt^9*s24 - 1/2*
      denom(1/4*s12^2)*mt^9*s23;
 
 .sort
id KMatrix(9,3) =   - mt^3*s24^2 + mt^3*s23^2 - mt^3*s14*s24 + mt^3*s14*s23 - 
      mt^3*s13*s24 + mt^3*s13*s23 - mt^3*s12*s24 + mt^3*s12*s23 + mt^3*mh^2*
      s24 - mt^3*mh^2*s23 + 2*mt^5*s24 - 2*mt^5*s23 + 1/2*denom(1/2*s12)*mt*
      s13*s23*s24^2 - 1/2*denom(1/2*s12)*mt*s13*s23^3 + 1/2*denom(1/2*s12)*mt*
      s13*s14*s23*s24 - 1/2*denom(1/2*s12)*mt*s13*s14*s23^2 + 1/2*denom(1/2*
      s12)*mt*s13^2*s23*s24 - 1/2*denom(1/2*s12)*mt*s13^2*s23^2 + 1/2*denom(1/
      2*s12)*mt*s12*s13*s23*s24 - 1/2*denom(1/2*s12)*mt*s12*s13*s23^2 - 1/2*
      denom(1/2*s12)*mt*mh^2*s13*s23*s24 + 1/2*denom(1/2*s12)*mt*mh^2*s13*
      s23^2 - 1/2*denom(1/2*s12)*mt^3*s23*s24^2 + 1/2*denom(1/2*s12)*mt^3*
      s23^3 - denom(1/2*s12)*mt^3*s14*s23*s24 + denom(1/2*s12)*mt^3*s14*s23^2
       - denom(1/2*s12)*mt^3*s13*s24^2 - denom(1/2*s12)*mt^3*s13*s23*s24 + 2*
      denom(1/2*s12)*mt^3*s13*s23^2 - 1/2*denom(1/2*s12)*mt^3*s13*s14*s24 + 1/
      2*denom(1/2*s12)*mt^3*s13*s14*s23 - 1/2*denom(1/2*s12)*mt^3*s13^2*s24 + 
      1/2*denom(1/2*s12)*mt^3*s13^2*s23 - 1/2*denom(1/2*s12)*mt^3*s12*s23*s24
       + 1/2*denom(1/2*s12)*mt^3*s12*s23^2 - 1/2*denom(1/2*s12)*mt^3*s12*s13*
      s24 + 1/2*denom(1/2*s12)*mt^3*s12*s13*s23 + 1/2*denom(1/2*s12)*mt^3*mh^2
      *s23*s24 - 1/2*denom(1/2*s12)*mt^3*mh^2*s23^2 + 1/2*denom(1/2*s12)*mt^3*
      mh^2*s13*s24 - 1/2*denom(1/2*s12)*mt^3*mh^2*s13*s23 + denom(1/2*s12)*
      mt^5*s24^2 + denom(1/2*s12)*mt^5*s23*s24 - 2*denom(1/2*s12)*mt^5*s23^2
       + denom(1/2*s12)*mt^5*s14*s24 - denom(1/2*s12)*mt^5*s14*s23 + 2*denom(1/
      2*s12)*mt^5*s13*s24 - 2*denom(1/2*s12)*mt^5*s13*s23 + 1/2*denom(1/2*s12)
      *mt^5*s12*s24 - 1/2*denom(1/2*s12)*mt^5*s12*s23 - 1/2*denom(1/2*s12)*
      mt^5*mh^2*s24 + 1/2*denom(1/2*s12)*mt^5*mh^2*s23 - 2*denom(1/2*s12)*mt^7
      *s24 + 2*denom(1/2*s12)*mt^7*s23 + 1/4*denom(1/4*s12^2)*mt*s13*s14*s23^2
      *s24 - 1/4*denom(1/4*s12^2)*mt*s13*s14*s23^3 + 1/4*denom(1/4*s12^2)*mt*
      s13^2*s23*s24^2 - 1/4*denom(1/4*s12^2)*mt*s13^2*s23^2*s24 - 1/4*denom(1/
      4*s12^2)*mt^3*s14*s23^2*s24 + 1/4*denom(1/4*s12^2)*mt^3*s14*s23^3 - 1/2*
      denom(1/4*s12^2)*mt^3*s13*s23*s24^2 + 1/4*denom(1/4*s12^2)*mt^3*s13*
      s23^2*s24 + 1/4*denom(1/4*s12^2)*mt^3*s13*s23^3 - 1/2*denom(1/4*s12^2)*
      mt^3*s13*s14*s23*s24 + 1/2*denom(1/4*s12^2)*mt^3*s13*s14*s23^2 - 1/4*
      denom(1/4*s12^2)*mt^3*s13^2*s24^2 + 1/4*denom(1/4*s12^2)*mt^3*s13^2*
      s23^2 + 1/4*denom(1/4*s12^2)*mt^5*s23*s24^2 - 1/4*denom(1/4*s12^2)*mt^5*
      s23^3 + 1/2*denom(1/4*s12^2)*mt^5*s14*s23*s24 - 1/2*denom(1/4*s12^2)*
      mt^5*s14*s23^2 + 1/2*denom(1/4*s12^2)*mt^5*s13*s24^2 + 1/2*denom(1/4*
      s12^2)*mt^5*s13*s23*s24 - denom(1/4*s12^2)*mt^5*s13*s23^2 + 1/4*denom(1/
      4*s12^2)*mt^5*s13*s14*s24 - 1/4*denom(1/4*s12^2)*mt^5*s13*s14*s23 + 1/4*
      denom(1/4*s12^2)*mt^5*s13^2*s24 - 1/4*denom(1/4*s12^2)*mt^5*s13^2*s23 - 
      1/4*denom(1/4*s12^2)*mt^7*s24^2 - 1/2*denom(1/4*s12^2)*mt^7*s23*s24 + 3/
      4*denom(1/4*s12^2)*mt^7*s23^2 - 1/4*denom(1/4*s12^2)*mt^7*s14*s24 + 1/4*
      denom(1/4*s12^2)*mt^7*s14*s23 - 3/4*denom(1/4*s12^2)*mt^7*s13*s24 + 3/4*
      denom(1/4*s12^2)*mt^7*s13*s23 + 1/2*denom(1/4*s12^2)*mt^9*s24 - 1/2*
      denom(1/4*s12^2)*mt^9*s23;
 
 .sort
id KMatrix(9,4) =  1/2*mt*s24^3 + 1/2*mt*s23*s24^2 - 1/2*mt*s23^2*s24 - 1/2*mt
      *s23^3 + mt*s14*s24^2 - mt*s14*s23^2 + 1/2*mt*s14^2*s24 - 1/2*mt*s14^2*
      s23 + mt*s13*s24^2 - mt*s13*s23^2 + mt*s13*s14*s24 - mt*s13*s14*s23 + 1/
      2*mt*s13^2*s24 - 1/2*mt*s13^2*s23 + mt*s12*s24^2 - mt*s12*s23^2 + mt*s12
      *s14*s24 - mt*s12*s14*s23 + mt*s12*s13*s24 - mt*s12*s13*s23 + 1/2*mt*
      s12^2*s24 - 1/2*mt*s12^2*s23 - mt*mh^2*s24^2 + mt*mh^2*s23^2 - mt*mh^2*
      s14*s24 + mt*mh^2*s14*s23 - mt*mh^2*s13*s24 + mt*mh^2*s13*s23 - mt*mh^2*
      s12*s24 + mt*mh^2*s12*s23 + 1/2*mt*mh^4*s24 - 1/2*mt*mh^4*s23 - 2*mt^3*
      s24^2 + 2*mt^3*s23^2 - 2*mt^3*s14*s24 + 2*mt^3*s14*s23 - 2*mt^3*s13*s24
       + 2*mt^3*s13*s23 - 2*mt^3*s12*s24 + 2*mt^3*s12*s23 + 2*mt^3*mh^2*s24 - 
      2*mt^3*mh^2*s23 + 2*mt^5*s24 - 2*mt^5*s23 + 1/2*denom(1/2*s12)*mt*s14*
      s23*s24^2 - 1/2*denom(1/2*s12)*mt*s14*s23^3 + 1/2*denom(1/2*s12)*mt*
      s14^2*s23*s24 - 1/2*denom(1/2*s12)*mt*s14^2*s23^2 + 1/2*denom(1/2*s12)*
      mt*s13*s24^3 - 1/2*denom(1/2*s12)*mt*s13*s23^2*s24 + 1/2*denom(1/2*s12)*
      mt*s13*s14*s24^2 - 1/2*denom(1/2*s12)*mt*s13*s14*s23^2 + 1/2*denom(1/2*
      s12)*mt*s13^2*s24^2 - 1/2*denom(1/2*s12)*mt*s13^2*s23*s24 + 1/2*denom(1/
      2*s12)*mt*s12*s14*s23*s24 - 1/2*denom(1/2*s12)*mt*s12*s14*s23^2 + 1/2*
      denom(1/2*s12)*mt*s12*s13*s24^2 - 1/2*denom(1/2*s12)*mt*s12*s13*s23*s24
       - 1/2*denom(1/2*s12)*mt*mh^2*s14*s23*s24 + 1/2*denom(1/2*s12)*mt*mh^2*
      s14*s23^2 - 1/2*denom(1/2*s12)*mt*mh^2*s13*s24^2 + 1/2*denom(1/2*s12)*mt
      *mh^2*s13*s23*s24 - 1/2*denom(1/2*s12)*mt^3*s24^3 - 1/2*denom(1/2*s12)*
      mt^3*s23*s24^2 + 1/2*denom(1/2*s12)*mt^3*s23^2*s24 + 1/2*denom(1/2*s12)*
      mt^3*s23^3 - denom(1/2*s12)*mt^3*s14*s24^2 - denom(1/2*s12)*mt^3*s14*s23
      *s24 + 2*denom(1/2*s12)*mt^3*s14*s23^2 - 1/2*denom(1/2*s12)*mt^3*s14^2*
      s24 + 1/2*denom(1/2*s12)*mt^3*s14^2*s23 - 2*denom(1/2*s12)*mt^3*s13*
      s24^2 + denom(1/2*s12)*mt^3*s13*s23*s24 + denom(1/2*s12)*mt^3*s13*s23^2
       - denom(1/2*s12)*mt^3*s13*s14*s24 + denom(1/2*s12)*mt^3*s13*s14*s23 - 1/
      2*denom(1/2*s12)*mt^3*s13^2*s24 + 1/2*denom(1/2*s12)*mt^3*s13^2*s23 - 1/
      2*denom(1/2*s12)*mt^3*s12*s24^2 + 1/2*denom(1/2*s12)*mt^3*s12*s23^2 - 1/
      2*denom(1/2*s12)*mt^3*s12*s14*s24 + 1/2*denom(1/2*s12)*mt^3*s12*s14*s23
       - 1/2*denom(1/2*s12)*mt^3*s12*s13*s24 + 1/2*denom(1/2*s12)*mt^3*s12*s13
      *s23 + 1/2*denom(1/2*s12)*mt^3*mh^2*s24^2 - 1/2*denom(1/2*s12)*mt^3*mh^2
      *s23^2 + 1/2*denom(1/2*s12)*mt^3*mh^2*s14*s24 - 1/2*denom(1/2*s12)*mt^3*
      mh^2*s14*s23 + 1/2*denom(1/2*s12)*mt^3*mh^2*s13*s24 - 1/2*denom(1/2*s12)
      *mt^3*mh^2*s13*s23 + 2*denom(1/2*s12)*mt^5*s24^2 - 2*denom(1/2*s12)*mt^5
      *s23^2 + 2*denom(1/2*s12)*mt^5*s14*s24 - 2*denom(1/2*s12)*mt^5*s14*s23
       + 2*denom(1/2*s12)*mt^5*s13*s24 - 2*denom(1/2*s12)*mt^5*s13*s23 + 
      denom(1/2*s12)*mt^5*s12*s24 - denom(1/2*s12)*mt^5*s12*s23 - denom(1/2*
      s12)*mt^5*mh^2*s24 + denom(1/2*s12)*mt^5*mh^2*s23 - 2*denom(1/2*s12)*
      mt^7*s24 + 2*denom(1/2*s12)*mt^7*s23 + 1/8*denom(1/4*s12^2)*mt*s14^2*
      s23^2*s24 - 1/8*denom(1/4*s12^2)*mt*s14^2*s23^3 + 1/4*denom(1/4*s12^2)*
      mt*s13*s14*s23*s24^2 - 1/4*denom(1/4*s12^2)*mt*s13*s14*s23^2*s24 + 1/8*
      denom(1/4*s12^2)*mt*s13^2*s24^3 - 1/8*denom(1/4*s12^2)*mt*s13^2*s23*
      s24^2 - 1/4*denom(1/4*s12^2)*mt^3*s14*s23*s24^2 + 1/4*denom(1/4*s12^2)*
      mt^3*s14*s23^3 - 1/4*denom(1/4*s12^2)*mt^3*s14^2*s23*s24 + 1/4*denom(1/4
      *s12^2)*mt^3*s14^2*s23^2 - 1/4*denom(1/4*s12^2)*mt^3*s13*s24^3 + 1/4*
      denom(1/4*s12^2)*mt^3*s13*s23^2*s24 - 1/4*denom(1/4*s12^2)*mt^3*s13*s14*
      s24^2 + 1/4*denom(1/4*s12^2)*mt^3*s13*s14*s23^2 - 1/4*denom(1/4*s12^2)*
      mt^3*s13^2*s24^2 + 1/4*denom(1/4*s12^2)*mt^3*s13^2*s23*s24 + 1/8*denom(1/
      4*s12^2)*mt^5*s24^3 + 1/8*denom(1/4*s12^2)*mt^5*s23*s24^2 - 1/8*denom(1/
      4*s12^2)*mt^5*s23^2*s24 - 1/8*denom(1/4*s12^2)*mt^5*s23^3 + 1/4*denom(1/
      4*s12^2)*mt^5*s14*s24^2 + 1/2*denom(1/4*s12^2)*mt^5*s14*s23*s24 - 3/4*
      denom(1/4*s12^2)*mt^5*s14*s23^2 + 1/8*denom(1/4*s12^2)*mt^5*s14^2*s24 - 
      1/8*denom(1/4*s12^2)*mt^5*s14^2*s23 + 3/4*denom(1/4*s12^2)*mt^5*s13*
      s24^2 - 1/2*denom(1/4*s12^2)*mt^5*s13*s23*s24 - 1/4*denom(1/4*s12^2)*
      mt^5*s13*s23^2 + 1/4*denom(1/4*s12^2)*mt^5*s13*s14*s24 - 1/4*denom(1/4*
      s12^2)*mt^5*s13*s14*s23 + 1/8*denom(1/4*s12^2)*mt^5*s13^2*s24 - 1/8*
      denom(1/4*s12^2)*mt^5*s13^2*s23 - 1/2*denom(1/4*s12^2)*mt^7*s24^2 + 1/2*
      denom(1/4*s12^2)*mt^7*s23^2 - 1/2*denom(1/4*s12^2)*mt^7*s14*s24 + 1/2*
      denom(1/4*s12^2)*mt^7*s14*s23 - 1/2*denom(1/4*s12^2)*mt^7*s13*s24 + 1/2*
      denom(1/4*s12^2)*mt^7*s13*s23 + 1/2*denom(1/4*s12^2)*mt^9*s24 - 1/2*
      denom(1/4*s12^2)*mt^9*s23;
 
 .sort
id KMatrix(9,5) =  mt^4*s14*s23 + mt^4*s13*s24 + mt^4*s12*s24 + mt^4*s12*s23
       + mt^4*s12*s14 + mt^4*s12*s13 + mt^4*s12^2 - mt^4*mh^2*s12 - mt^6*s24
       - mt^6*s23 - mt^6*s14 - mt^6*s13 - 4*mt^6*s12 + 2*mt^8 - denom(1/2*s12)
      *mt^2*s13*s14*s23^2 - denom(1/2*s12)*mt^2*s13^2*s23*s24 - denom(1/2*s12)
      *mt^2*s12*s13*s23*s24 - denom(1/2*s12)*mt^2*s12*s13*s23^2 - denom(1/2*
      s12)*mt^2*s12*s13*s14*s23 - denom(1/2*s12)*mt^2*s12*s13^2*s23 - denom(1/
      2*s12)*mt^2*s12^2*s13*s23 + denom(1/2*s12)*mt^2*mh^2*s12*s13*s23 + 
      denom(1/2*s12)*mt^4*s14*s23^2 + 2*denom(1/2*s12)*mt^4*s13*s23*s24 + 
      denom(1/2*s12)*mt^4*s13*s23^2 + 2*denom(1/2*s12)*mt^4*s13*s14*s23 + 
      denom(1/2*s12)*mt^4*s13^2*s24 + denom(1/2*s12)*mt^4*s13^2*s23 + denom(1/
      2*s12)*mt^4*s12*s23*s24 + denom(1/2*s12)*mt^4*s12*s23^2 + denom(1/2*s12)
      *mt^4*s12*s14*s23 + denom(1/2*s12)*mt^4*s12*s13*s24 + 6*denom(1/2*s12)*
      mt^4*s12*s13*s23 + denom(1/2*s12)*mt^4*s12*s13*s14 + denom(1/2*s12)*mt^4
      *s12*s13^2 + denom(1/2*s12)*mt^4*s12^2*s23 + denom(1/2*s12)*mt^4*s12^2*
      s13 - denom(1/2*s12)*mt^4*mh^2*s12*s23 - denom(1/2*s12)*mt^4*mh^2*s12*
      s13 - denom(1/2*s12)*mt^6*s23*s24 - denom(1/2*s12)*mt^6*s23^2 - 2*denom(
      1/2*s12)*mt^6*s14*s23 - 2*denom(1/2*s12)*mt^6*s13*s24 - 4*denom(1/2*s12)
      *mt^6*s13*s23 - denom(1/2*s12)*mt^6*s13*s14 - denom(1/2*s12)*mt^6*s13^2
       - denom(1/2*s12)*mt^6*s12*s24 - 5*denom(1/2*s12)*mt^6*s12*s23 - denom(1/
      2*s12)*mt^6*s12*s14 - 5*denom(1/2*s12)*mt^6*s12*s13 - denom(1/2*s12)*
      mt^6*s12^2 + denom(1/2*s12)*mt^6*mh^2*s12 + denom(1/2*s12)*mt^8*s24 + 3*
      denom(1/2*s12)*mt^8*s23 + denom(1/2*s12)*mt^8*s14 + 3*denom(1/2*s12)*
      mt^8*s13 + 4*denom(1/2*s12)*mt^8*s12 - 2*denom(1/2*s12)*mt^10 + 1/4*
      denom(1/4*s12^2)*s13^2*s14*s23^3 + 1/4*denom(1/4*s12^2)*s13^3*s23^2*s24
       + 1/4*denom(1/4*s12^2)*s12*s13^2*s23^2*s24 + 1/4*denom(1/4*s12^2)*s12*
      s13^2*s23^3 + 1/4*denom(1/4*s12^2)*s12*s13^2*s14*s23^2 + 1/4*denom(1/4*
      s12^2)*s12*s13^3*s23^2 + 1/4*denom(1/4*s12^2)*s12^2*s13^2*s23^2 - 1/4*
      denom(1/4*s12^2)*mh^2*s12*s13^2*s23^2 - 1/2*denom(1/4*s12^2)*mt^2*s13*
      s14*s23^3 - 3/4*denom(1/4*s12^2)*mt^2*s13^2*s23^2*s24 - 1/4*denom(1/4*
      s12^2)*mt^2*s13^2*s23^3 - 3/4*denom(1/4*s12^2)*mt^2*s13^2*s14*s23^2 - 1/
      2*denom(1/4*s12^2)*mt^2*s13^3*s23*s24 - 1/4*denom(1/4*s12^2)*mt^2*s13^3*
      s23^2 - 1/2*denom(1/4*s12^2)*mt^2*s12*s13*s23^2*s24 - 1/2*denom(1/4*
      s12^2)*mt^2*s12*s13*s23^3 - 1/2*denom(1/4*s12^2)*mt^2*s12*s13*s14*s23^2
       - 1/2*denom(1/4*s12^2)*mt^2*s12*s13^2*s23*s24 - 2*denom(1/4*s12^2)*mt^2
      *s12*s13^2*s23^2 - 1/2*denom(1/4*s12^2)*mt^2*s12*s13^2*s14*s23 - 1/2*
      denom(1/4*s12^2)*mt^2*s12*s13^3*s23 - 1/2*denom(1/4*s12^2)*mt^2*s12^2*
      s13*s23^2 - 1/2*denom(1/4*s12^2)*mt^2*s12^2*s13^2*s23 + 1/2*denom(1/4*
      s12^2)*mt^2*mh^2*s12*s13*s23^2 + 1/2*denom(1/4*s12^2)*mt^2*mh^2*s12*
      s13^2*s23 + 1/4*denom(1/4*s12^2)*mt^4*s14*s23^3 + 3/4*denom(1/4*s12^2)*
      mt^4*s13*s23^2*s24 + 1/2*denom(1/4*s12^2)*mt^4*s13*s23^3 + 3/2*denom(1/4
      *s12^2)*mt^4*s13*s14*s23^2 + 3/2*denom(1/4*s12^2)*mt^4*s13^2*s23*s24 + 3/
      2*denom(1/4*s12^2)*mt^4*s13^2*s23^2 + 3/4*denom(1/4*s12^2)*mt^4*s13^2*
      s14*s23 + 1/4*denom(1/4*s12^2)*mt^4*s13^3*s24 + 1/2*denom(1/4*s12^2)*
      mt^4*s13^3*s23 + 1/4*denom(1/4*s12^2)*mt^4*s12*s23^2*s24 + 1/4*denom(1/4
      *s12^2)*mt^4*s12*s23^3 + 1/4*denom(1/4*s12^2)*mt^4*s12*s14*s23^2 + 
      denom(1/4*s12^2)*mt^4*s12*s13*s23*s24 + 13/4*denom(1/4*s12^2)*mt^4*s12*
      s13*s23^2 + denom(1/4*s12^2)*mt^4*s12*s13*s14*s23 + 1/4*denom(1/4*s12^2)
      *mt^4*s12*s13^2*s24 + 13/4*denom(1/4*s12^2)*mt^4*s12*s13^2*s23 + 1/4*
      denom(1/4*s12^2)*mt^4*s12*s13^2*s14 + 1/4*denom(1/4*s12^2)*mt^4*s12*
      s13^3 + 1/4*denom(1/4*s12^2)*mt^4*s12^2*s23^2 + denom(1/4*s12^2)*mt^4*
      s12^2*s13*s23 + 1/4*denom(1/4*s12^2)*mt^4*s12^2*s13^2 - 1/4*denom(1/4*
      s12^2)*mt^4*mh^2*s12*s23^2 - denom(1/4*s12^2)*mt^4*mh^2*s12*s13*s23 - 1/
      4*denom(1/4*s12^2)*mt^4*mh^2*s12*s13^2 - 1/4*denom(1/4*s12^2)*mt^6*s23^2
      *s24 - 1/4*denom(1/4*s12^2)*mt^6*s23^3 - 3/4*denom(1/4*s12^2)*mt^6*s14*
      s23^2 - 3/2*denom(1/4*s12^2)*mt^6*s13*s23*s24 - 9/4*denom(1/4*s12^2)*
      mt^6*s13*s23^2 - 3/2*denom(1/4*s12^2)*mt^6*s13*s14*s23 - 3/4*denom(1/4*
      s12^2)*mt^6*s13^2*s24 - 9/4*denom(1/4*s12^2)*mt^6*s13^2*s23 - 1/4*denom(
      1/4*s12^2)*mt^6*s13^2*s14 - 1/4*denom(1/4*s12^2)*mt^6*s13^3 - 1/2*denom(
      1/4*s12^2)*mt^6*s12*s23*s24 - 3/2*denom(1/4*s12^2)*mt^6*s12*s23^2 - 1/2*
      denom(1/4*s12^2)*mt^6*s12*s14*s23 - 1/2*denom(1/4*s12^2)*mt^6*s12*s13*
      s24 - 5*denom(1/4*s12^2)*mt^6*s12*s13*s23 - 1/2*denom(1/4*s12^2)*mt^6*
      s12*s13*s14 - 3/2*denom(1/4*s12^2)*mt^6*s12*s13^2 - 1/2*denom(1/4*s12^2)
      *mt^6*s12^2*s23 - 1/2*denom(1/4*s12^2)*mt^6*s12^2*s13 + 1/2*denom(1/4*
      s12^2)*mt^6*mh^2*s12*s23 + 1/2*denom(1/4*s12^2)*mt^6*mh^2*s12*s13 + 1/2*
      denom(1/4*s12^2)*mt^8*s23*s24 + denom(1/4*s12^2)*mt^8*s23^2 + 3/4*denom(
      1/4*s12^2)*mt^8*s14*s23 + 3/4*denom(1/4*s12^2)*mt^8*s13*s24 + 3*denom(1/
      4*s12^2)*mt^8*s13*s23 + 1/2*denom(1/4*s12^2)*mt^8*s13*s14 + denom(1/4*
      s12^2)*mt^8*s13^2 + 1/4*denom(1/4*s12^2)*mt^8*s12*s24 + 9/4*denom(1/4*
      s12^2)*mt^8*s12*s23 + 1/4*denom(1/4*s12^2)*mt^8*s12*s14 + 9/4*denom(1/4*
      s12^2)*mt^8*s12*s13 + 1/4*denom(1/4*s12^2)*mt^8*s12^2 - 1/4*denom(1/4*
      s12^2)*mt^8*mh^2*s12 - 1/4*denom(1/4*s12^2)*mt^10*s24 - 5/4*denom(1/4*
      s12^2)*mt^10*s23 - 1/4*denom(1/4*s12^2)*mt^10*s14 - 5/4*denom(1/4*s12^2)
      *mt^10*s13 - denom(1/4*s12^2)*mt^10*s12 + 1/2*denom(1/4*s12^2)*mt^12;
 
 .sort
id KMatrix(9,6) =   - 1/2*mt^2*s14*s23*s24 - 1/2*mt^2*s14*s23^2 - 1/2*mt^2*
      s14^2*s23 - 1/2*mt^2*s13*s24^2 - 1/2*mt^2*s13*s23*s24 - 1/2*mt^2*s13*s14
      *s24 - 1/2*mt^2*s13*s14*s23 - 1/2*mt^2*s13^2*s24 - 1/2*mt^2*s12*s24^2 - 
      mt^2*s12*s23*s24 - 1/2*mt^2*s12*s23^2 - mt^2*s12*s14*s24 - 3/2*mt^2*s12*
      s14*s23 - 1/2*mt^2*s12*s14^2 - 3/2*mt^2*s12*s13*s24 - mt^2*s12*s13*s23
       - mt^2*s12*s13*s14 - 1/2*mt^2*s12*s13^2 - mt^2*s12^2*s24 - mt^2*s12^2*
      s23 - mt^2*s12^2*s14 - mt^2*s12^2*s13 - 1/2*mt^2*s12^3 + 1/2*mt^2*mh^2*
      s14*s23 + 1/2*mt^2*mh^2*s13*s24 + mt^2*mh^2*s12*s24 + mt^2*mh^2*s12*s23
       + mt^2*mh^2*s12*s14 + mt^2*mh^2*s12*s13 + mt^2*mh^2*s12^2 - 1/2*mt^2*
      mh^4*s12 + 1/2*mt^4*s24^2 + mt^4*s23*s24 + 1/2*mt^4*s23^2 + mt^4*s14*s24
       + 2*mt^4*s14*s23 + 1/2*mt^4*s14^2 + 2*mt^4*s13*s24 + mt^4*s13*s23 + 
      mt^4*s13*s14 + 1/2*mt^4*s13^2 + 7/2*mt^4*s12*s24 + 7/2*mt^4*s12*s23 + 7/
      2*mt^4*s12*s14 + 7/2*mt^4*s12*s13 + 3*mt^4*s12^2 - 1/2*mt^4*mh^2*s24 - 1/
      2*mt^4*mh^2*s23 - 1/2*mt^4*mh^2*s14 - 1/2*mt^4*mh^2*s13 - 3*mt^4*mh^2*
      s12 - 2*mt^6*s24 - 2*mt^6*s23 - 2*mt^6*s14 - 2*mt^6*s13 - 5*mt^6*s12 + 
      mt^6*mh^2 + 2*mt^8 + 1/4*denom(1/2*s12)*s13*s14*s23^2*s24 + 1/4*denom(1/
      2*s12)*s13*s14*s23^3 + 1/4*denom(1/2*s12)*s13*s14^2*s23^2 + 1/4*denom(1/
      2*s12)*s13^2*s23*s24^2 + 1/4*denom(1/2*s12)*s13^2*s23^2*s24 + 1/4*denom(
      1/2*s12)*s13^2*s14*s23*s24 + 1/4*denom(1/2*s12)*s13^2*s14*s23^2 + 1/4*
      denom(1/2*s12)*s13^3*s23*s24 + 1/4*denom(1/2*s12)*s12*s13*s23*s24^2 + 1/
      2*denom(1/2*s12)*s12*s13*s23^2*s24 + 1/4*denom(1/2*s12)*s12*s13*s23^3 + 
      1/2*denom(1/2*s12)*s12*s13*s14*s23*s24 + 3/4*denom(1/2*s12)*s12*s13*s14*
      s23^2 + 1/4*denom(1/2*s12)*s12*s13*s14^2*s23 + 3/4*denom(1/2*s12)*s12*
      s13^2*s23*s24 + 1/2*denom(1/2*s12)*s12*s13^2*s23^2 + 1/2*denom(1/2*s12)*
      s12*s13^2*s14*s23 + 1/4*denom(1/2*s12)*s12*s13^3*s23 + 1/2*denom(1/2*s12
      )*s12^2*s13*s23*s24 + 1/2*denom(1/2*s12)*s12^2*s13*s23^2 + 1/2*denom(1/2
      *s12)*s12^2*s13*s14*s23 + 1/2*denom(1/2*s12)*s12^2*s13^2*s23 + 1/4*
      denom(1/2*s12)*s12^3*s13*s23 - 1/4*denom(1/2*s12)*mh^2*s13*s14*s23^2 - 1/
      4*denom(1/2*s12)*mh^2*s13^2*s23*s24 - 1/2*denom(1/2*s12)*mh^2*s12*s13*
      s23*s24 - 1/2*denom(1/2*s12)*mh^2*s12*s13*s23^2 - 1/2*denom(1/2*s12)*
      mh^2*s12*s13*s14*s23 - 1/2*denom(1/2*s12)*mh^2*s12*s13^2*s23 - 1/2*
      denom(1/2*s12)*mh^2*s12^2*s13*s23 + 1/4*denom(1/2*s12)*mh^4*s12*s13*s23
       - 1/4*denom(1/2*s12)*mt^2*s14*s23^2*s24 - 1/4*denom(1/2*s12)*mt^2*s14*
      s23^3 - 1/2*denom(1/2*s12)*mt^2*s14^2*s23^2 - 1/2*denom(1/2*s12)*mt^2*
      s13*s23*s24^2 - 3/4*denom(1/2*s12)*mt^2*s13*s23^2*s24 - 1/4*denom(1/2*
      s12)*mt^2*s13*s23^3 - 3/2*denom(1/2*s12)*mt^2*s13*s14*s23*s24 - 3/2*
      denom(1/2*s12)*mt^2*s13*s14*s23^2 - 1/2*denom(1/2*s12)*mt^2*s13*s14^2*
      s23 - 1/2*denom(1/2*s12)*mt^2*s13^2*s24^2 - 3/2*denom(1/2*s12)*mt^2*
      s13^2*s23*s24 - 1/2*denom(1/2*s12)*mt^2*s13^2*s23^2 - 1/4*denom(1/2*s12)
      *mt^2*s13^2*s14*s24 - 3/4*denom(1/2*s12)*mt^2*s13^2*s14*s23 - 1/4*denom(
      1/2*s12)*mt^2*s13^3*s24 - 1/4*denom(1/2*s12)*mt^2*s13^3*s23 - 1/4*denom(
      1/2*s12)*mt^2*s12*s23*s24^2 - 1/2*denom(1/2*s12)*mt^2*s12*s23^2*s24 - 1/
      4*denom(1/2*s12)*mt^2*s12*s23^3 - 3/4*denom(1/2*s12)*mt^2*s12*s14*s23*
      s24 - denom(1/2*s12)*mt^2*s12*s14*s23^2 - 1/2*denom(1/2*s12)*mt^2*s12*
      s14^2*s23 - 1/2*denom(1/2*s12)*mt^2*s12*s13*s24^2 - 13/4*denom(1/2*s12)*
      mt^2*s12*s13*s23*s24 - 5/2*denom(1/2*s12)*mt^2*s12*s13*s23^2 - 3/4*
      denom(1/2*s12)*mt^2*s12*s13*s14*s24 - 13/4*denom(1/2*s12)*mt^2*s12*s13*
      s14*s23 - 1/4*denom(1/2*s12)*mt^2*s12*s13*s14^2 - denom(1/2*s12)*mt^2*
      s12*s13^2*s24 - 5/2*denom(1/2*s12)*mt^2*s12*s13^2*s23 - 1/2*denom(1/2*
      s12)*mt^2*s12*s13^2*s14 - 1/4*denom(1/2*s12)*mt^2*s12*s13^3 - 1/2*denom(
      1/2*s12)*mt^2*s12^2*s23*s24 - 1/2*denom(1/2*s12)*mt^2*s12^2*s23^2 - 3/4*
      denom(1/2*s12)*mt^2*s12^2*s14*s23 - 3/4*denom(1/2*s12)*mt^2*s12^2*s13*
      s24 - 5/2*denom(1/2*s12)*mt^2*s12^2*s13*s23 - 1/2*denom(1/2*s12)*mt^2*
      s12^2*s13*s14 - 1/2*denom(1/2*s12)*mt^2*s12^2*s13^2 - 1/4*denom(1/2*s12)
      *mt^2*s12^3*s23 - 1/4*denom(1/2*s12)*mt^2*s12^3*s13 + 1/4*denom(1/2*s12)
      *mt^2*mh^2*s14*s23^2 + 1/2*denom(1/2*s12)*mt^2*mh^2*s13*s23*s24 + 1/4*
      denom(1/2*s12)*mt^2*mh^2*s13*s23^2 + 1/2*denom(1/2*s12)*mt^2*mh^2*s13*
      s14*s23 + 1/4*denom(1/2*s12)*mt^2*mh^2*s13^2*s24 + 1/4*denom(1/2*s12)*
      mt^2*mh^2*s13^2*s23 + 1/2*denom(1/2*s12)*mt^2*mh^2*s12*s23*s24 + 1/2*
      denom(1/2*s12)*mt^2*mh^2*s12*s23^2 + 3/4*denom(1/2*s12)*mt^2*mh^2*s12*
      s14*s23 + 3/4*denom(1/2*s12)*mt^2*mh^2*s12*s13*s24 + 5/2*denom(1/2*s12)*
      mt^2*mh^2*s12*s13*s23 + 1/2*denom(1/2*s12)*mt^2*mh^2*s12*s13*s14 + 1/2*
      denom(1/2*s12)*mt^2*mh^2*s12*s13^2 + 1/2*denom(1/2*s12)*mt^2*mh^2*s12^2*
      s23 + 1/2*denom(1/2*s12)*mt^2*mh^2*s12^2*s13 - 1/4*denom(1/2*s12)*mt^2*
      mh^4*s12*s23 - 1/4*denom(1/2*s12)*mt^2*mh^4*s12*s13 + 1/4*denom(1/2*s12)
      *mt^4*s23*s24^2 + 1/2*denom(1/2*s12)*mt^4*s23^2*s24 + 1/4*denom(1/2*s12)
      *mt^4*s23^3 + 5/4*denom(1/2*s12)*mt^4*s14*s23*s24 + 7/4*denom(1/2*s12)*
      mt^4*s14*s23^2 + denom(1/2*s12)*mt^4*s14^2*s23 + denom(1/2*s12)*mt^4*s13
      *s24^2 + 13/4*denom(1/2*s12)*mt^4*s13*s23*s24 + 7/4*denom(1/2*s12)*mt^4*
      s13*s23^2 + 5/4*denom(1/2*s12)*mt^4*s13*s14*s24 + 13/4*denom(1/2*s12)*
      mt^4*s13*s14*s23 + 1/4*denom(1/2*s12)*mt^4*s13*s14^2 + 7/4*denom(1/2*s12
      )*mt^4*s13^2*s24 + 7/4*denom(1/2*s12)*mt^4*s13^2*s23 + 1/2*denom(1/2*s12
      )*mt^4*s13^2*s14 + 1/4*denom(1/2*s12)*mt^4*s13^3 + 1/2*denom(1/2*s12)*
      mt^4*s12*s24^2 + 11/4*denom(1/2*s12)*mt^4*s12*s23*s24 + 9/4*denom(1/2*
      s12)*mt^4*s12*s23^2 + denom(1/2*s12)*mt^4*s12*s14*s24 + 4*denom(1/2*s12)
      *mt^4*s12*s14*s23 + 1/2*denom(1/2*s12)*mt^4*s12*s14^2 + 4*denom(1/2*s12)
      *mt^4*s12*s13*s24 + 7*denom(1/2*s12)*mt^4*s12*s13*s23 + 11/4*denom(1/2*
      s12)*mt^4*s12*s13*s14 + 9/4*denom(1/2*s12)*mt^4*s12*s13^2 + 3/4*denom(1/
      2*s12)*mt^4*s12^2*s24 + 9/4*denom(1/2*s12)*mt^4*s12^2*s23 + 3/4*denom(1/
      2*s12)*mt^4*s12^2*s14 + 9/4*denom(1/2*s12)*mt^4*s12^2*s13 + 1/4*denom(1/
      2*s12)*mt^4*s12^3 - 1/4*denom(1/2*s12)*mt^4*mh^2*s23*s24 - 1/4*denom(1/2
      *s12)*mt^4*mh^2*s23^2 - 1/2*denom(1/2*s12)*mt^4*mh^2*s14*s23 - 1/2*
      denom(1/2*s12)*mt^4*mh^2*s13*s24 - denom(1/2*s12)*mt^4*mh^2*s13*s23 - 1/
      4*denom(1/2*s12)*mt^4*mh^2*s13*s14 - 1/4*denom(1/2*s12)*mt^4*mh^2*s13^2
       - 3/4*denom(1/2*s12)*mt^4*mh^2*s12*s24 - 9/4*denom(1/2*s12)*mt^4*mh^2*
      s12*s23 - 3/4*denom(1/2*s12)*mt^4*mh^2*s12*s14 - 9/4*denom(1/2*s12)*mt^4
      *mh^2*s12*s13 - 1/2*denom(1/2*s12)*mt^4*mh^2*s12^2 + 1/4*denom(1/2*s12)*
      mt^4*mh^4*s12 - 1/2*denom(1/2*s12)*mt^6*s24^2 - 2*denom(1/2*s12)*mt^6*
      s23*s24 - 3/2*denom(1/2*s12)*mt^6*s23^2 - denom(1/2*s12)*mt^6*s14*s24 - 
      7/2*denom(1/2*s12)*mt^6*s14*s23 - 1/2*denom(1/2*s12)*mt^6*s14^2 - 7/2*
      denom(1/2*s12)*mt^6*s13*s24 - 4*denom(1/2*s12)*mt^6*s13*s23 - 2*denom(1/
      2*s12)*mt^6*s13*s14 - 3/2*denom(1/2*s12)*mt^6*s13^2 - 13/4*denom(1/2*s12
      )*mt^6*s12*s24 - 23/4*denom(1/2*s12)*mt^6*s12*s23 - 13/4*denom(1/2*s12)*
      mt^6*s12*s14 - 23/4*denom(1/2*s12)*mt^6*s12*s13 - 2*denom(1/2*s12)*mt^6*
      s12^2 + 1/4*denom(1/2*s12)*mt^6*mh^2*s24 + 3/4*denom(1/2*s12)*mt^6*mh^2*
      s23 + 1/4*denom(1/2*s12)*mt^6*mh^2*s14 + 3/4*denom(1/2*s12)*mt^6*mh^2*
      s13 + 2*denom(1/2*s12)*mt^6*mh^2*s12 + 2*denom(1/2*s12)*mt^8*s24 + 3*
      denom(1/2*s12)*mt^8*s23 + 2*denom(1/2*s12)*mt^8*s14 + 3*denom(1/2*s12)*
      mt^8*s13 + 9/2*denom(1/2*s12)*mt^8*s12 - 1/2*denom(1/2*s12)*mt^8*mh^2 - 
      2*denom(1/2*s12)*mt^10 + 1/8*denom(1/4*s12^2)*s13*s14^2*s23^3 + 1/4*
      denom(1/4*s12^2)*s13^2*s14*s23^2*s24 + 1/8*denom(1/4*s12^2)*s13^3*s23*
      s24^2 + 1/8*denom(1/4*s12^2)*s12*s13*s14*s23^2*s24 + 1/8*denom(1/4*s12^2
      )*s12*s13*s14*s23^3 + 1/8*denom(1/4*s12^2)*s12*s13*s14^2*s23^2 + 1/8*
      denom(1/4*s12^2)*s12*s13^2*s23*s24^2 + 1/8*denom(1/4*s12^2)*s12*s13^2*
      s23^2*s24 + 1/8*denom(1/4*s12^2)*s12*s13^2*s14*s23*s24 + 1/8*denom(1/4*
      s12^2)*s12*s13^2*s14*s23^2 + 1/8*denom(1/4*s12^2)*s12*s13^3*s23*s24 + 1/
      8*denom(1/4*s12^2)*s12^2*s13*s14*s23^2 + 1/8*denom(1/4*s12^2)*s12^2*
      s13^2*s23*s24 - 1/8*denom(1/4*s12^2)*mh^2*s12*s13*s14*s23^2 - 1/8*denom(
      1/4*s12^2)*mh^2*s12*s13^2*s23*s24 - 1/8*denom(1/4*s12^2)*mt^2*s14^2*
      s23^3 - 1/2*denom(1/4*s12^2)*mt^2*s13*s14*s23^2*s24 - 1/4*denom(1/4*
      s12^2)*mt^2*s13*s14*s23^3 - 3/8*denom(1/4*s12^2)*mt^2*s13*s14^2*s23^2 - 
      3/8*denom(1/4*s12^2)*mt^2*s13^2*s23*s24^2 - 1/4*denom(1/4*s12^2)*mt^2*
      s13^2*s23^2*s24 - 1/2*denom(1/4*s12^2)*mt^2*s13^2*s14*s23*s24 - 1/4*
      denom(1/4*s12^2)*mt^2*s13^2*s14*s23^2 - 1/8*denom(1/4*s12^2)*mt^2*s13^3*
      s24^2 - 1/4*denom(1/4*s12^2)*mt^2*s13^3*s23*s24 - 1/8*denom(1/4*s12^2)*
      mt^2*s12*s14*s23^2*s24 - 1/8*denom(1/4*s12^2)*mt^2*s12*s14*s23^3 - 1/8*
      denom(1/4*s12^2)*mt^2*s12*s14^2*s23^2 - 1/4*denom(1/4*s12^2)*mt^2*s12*
      s13*s23*s24^2 - 3/8*denom(1/4*s12^2)*mt^2*s12*s13*s23^2*s24 - 1/8*denom(
      1/4*s12^2)*mt^2*s12*s13*s23^3 - 1/2*denom(1/4*s12^2)*mt^2*s12*s13*s14*
      s23*s24 - denom(1/4*s12^2)*mt^2*s12*s13*s14*s23^2 - 1/4*denom(1/4*s12^2)
      *mt^2*s12*s13*s14^2*s23 - 1/8*denom(1/4*s12^2)*mt^2*s12*s13^2*s24^2 - 
      denom(1/4*s12^2)*mt^2*s12*s13^2*s23*s24 - 1/4*denom(1/4*s12^2)*mt^2*s12*
      s13^2*s23^2 - 1/8*denom(1/4*s12^2)*mt^2*s12*s13^2*s14*s24 - 3/8*denom(1/
      4*s12^2)*mt^2*s12*s13^2*s14*s23 - 1/8*denom(1/4*s12^2)*mt^2*s12*s13^3*
      s24 - 1/8*denom(1/4*s12^2)*mt^2*s12*s13^3*s23 - 1/8*denom(1/4*s12^2)*
      mt^2*s12^2*s14*s23^2 - 1/4*denom(1/4*s12^2)*mt^2*s12^2*s13*s23*s24 - 1/8
      *denom(1/4*s12^2)*mt^2*s12^2*s13*s23^2 - 1/4*denom(1/4*s12^2)*mt^2*s12^2
      *s13*s14*s23 - 1/8*denom(1/4*s12^2)*mt^2*s12^2*s13^2*s24 - 1/8*denom(1/4
      *s12^2)*mt^2*s12^2*s13^2*s23 + 1/8*denom(1/4*s12^2)*mt^2*mh^2*s12*s14*
      s23^2 + 1/4*denom(1/4*s12^2)*mt^2*mh^2*s12*s13*s23*s24 + 1/8*denom(1/4*
      s12^2)*mt^2*mh^2*s12*s13*s23^2 + 1/4*denom(1/4*s12^2)*mt^2*mh^2*s12*s13*
      s14*s23 + 1/8*denom(1/4*s12^2)*mt^2*mh^2*s12*s13^2*s24 + 1/8*denom(1/4*
      s12^2)*mt^2*mh^2*s12*s13^2*s23 + 1/4*denom(1/4*s12^2)*mt^4*s14*s23^2*s24
       + 1/4*denom(1/4*s12^2)*mt^4*s14*s23^3 + 3/8*denom(1/4*s12^2)*mt^4*s14^2
      *s23^2 + 3/8*denom(1/4*s12^2)*mt^4*s13*s23*s24^2 + 1/2*denom(1/4*s12^2)*
      mt^4*s13*s23^2*s24 + 1/8*denom(1/4*s12^2)*mt^4*s13*s23^3 + denom(1/4*
      s12^2)*mt^4*s13*s14*s23*s24 + 5/4*denom(1/4*s12^2)*mt^4*s13*s14*s23^2 + 
      3/8*denom(1/4*s12^2)*mt^4*s13*s14^2*s23 + 3/8*denom(1/4*s12^2)*mt^4*
      s13^2*s24^2 + 5/4*denom(1/4*s12^2)*mt^4*s13^2*s23*s24 + 1/4*denom(1/4*
      s12^2)*mt^4*s13^2*s23^2 + 1/4*denom(1/4*s12^2)*mt^4*s13^2*s14*s24 + 1/2*
      denom(1/4*s12^2)*mt^4*s13^2*s14*s23 + 1/4*denom(1/4*s12^2)*mt^4*s13^3*
      s24 + 1/8*denom(1/4*s12^2)*mt^4*s13^3*s23 + 1/8*denom(1/4*s12^2)*mt^4*
      s12*s23*s24^2 + 1/4*denom(1/4*s12^2)*mt^4*s12*s23^2*s24 + 1/8*denom(1/4*
      s12^2)*mt^4*s12*s23^3 + 3/8*denom(1/4*s12^2)*mt^4*s12*s14*s23*s24 + 7/8*
      denom(1/4*s12^2)*mt^4*s12*s14*s23^2 + 1/4*denom(1/4*s12^2)*mt^4*s12*
      s14^2*s23 + 1/4*denom(1/4*s12^2)*mt^4*s12*s13*s24^2 + 15/8*denom(1/4*
      s12^2)*mt^4*s12*s13*s23*s24 + 9/8*denom(1/4*s12^2)*mt^4*s12*s13*s23^2 + 
      3/8*denom(1/4*s12^2)*mt^4*s12*s13*s14*s24 + 15/8*denom(1/4*s12^2)*mt^4*
      s12*s13*s14*s23 + 1/8*denom(1/4*s12^2)*mt^4*s12*s13*s14^2 + 7/8*denom(1/
      4*s12^2)*mt^4*s12*s13^2*s24 + 9/8*denom(1/4*s12^2)*mt^4*s12*s13^2*s23 + 
      1/4*denom(1/4*s12^2)*mt^4*s12*s13^2*s14 + 1/8*denom(1/4*s12^2)*mt^4*s12*
      s13^3 + 1/8*denom(1/4*s12^2)*mt^4*s12^2*s23*s24 + 1/8*denom(1/4*s12^2)*
      mt^4*s12^2*s23^2 + 1/4*denom(1/4*s12^2)*mt^4*s12^2*s14*s23 + 1/4*denom(1/
      4*s12^2)*mt^4*s12^2*s13*s24 + 1/2*denom(1/4*s12^2)*mt^4*s12^2*s13*s23 + 
      1/8*denom(1/4*s12^2)*mt^4*s12^2*s13*s14 + 1/8*denom(1/4*s12^2)*mt^4*
      s12^2*s13^2 - 1/8*denom(1/4*s12^2)*mt^4*mh^2*s12*s23*s24 - 1/8*denom(1/4
      *s12^2)*mt^4*mh^2*s12*s23^2 - 1/4*denom(1/4*s12^2)*mt^4*mh^2*s12*s14*s23
       - 1/4*denom(1/4*s12^2)*mt^4*mh^2*s12*s13*s24 - 1/2*denom(1/4*s12^2)*
      mt^4*mh^2*s12*s13*s23 - 1/8*denom(1/4*s12^2)*mt^4*mh^2*s12*s13*s14 - 1/8
      *denom(1/4*s12^2)*mt^4*mh^2*s12*s13^2 - 1/8*denom(1/4*s12^2)*mt^6*s23*
      s24^2 - 1/4*denom(1/4*s12^2)*mt^6*s23^2*s24 - 1/8*denom(1/4*s12^2)*mt^6*
      s23^3 - 1/2*denom(1/4*s12^2)*mt^6*s14*s23*s24 - denom(1/4*s12^2)*mt^6*
      s14*s23^2 - 3/8*denom(1/4*s12^2)*mt^6*s14^2*s23 - 3/8*denom(1/4*s12^2)*
      mt^6*s13*s24^2 - 7/4*denom(1/4*s12^2)*mt^6*s13*s23*s24 - 7/8*denom(1/4*
      s12^2)*mt^6*s13*s23^2 - 1/2*denom(1/4*s12^2)*mt^6*s13*s14*s24 - 7/4*
      denom(1/4*s12^2)*mt^6*s13*s14*s23 - 1/8*denom(1/4*s12^2)*mt^6*s13*s14^2
       - denom(1/4*s12^2)*mt^6*s13^2*s24 - 7/8*denom(1/4*s12^2)*mt^6*s13^2*s23
       - 1/4*denom(1/4*s12^2)*mt^6*s13^2*s14 - 1/8*denom(1/4*s12^2)*mt^6*s13^3
       - 1/8*denom(1/4*s12^2)*mt^6*s12*s24^2 - denom(1/4*s12^2)*mt^6*s12*s23*
      s24 - 7/8*denom(1/4*s12^2)*mt^6*s12*s23^2 - 1/4*denom(1/4*s12^2)*mt^6*
      s12*s14*s24 - 3/2*denom(1/4*s12^2)*mt^6*s12*s14*s23 - 1/8*denom(1/4*
      s12^2)*mt^6*s12*s14^2 - 3/2*denom(1/4*s12^2)*mt^6*s12*s13*s24 - 11/4*
      denom(1/4*s12^2)*mt^6*s12*s13*s23 - denom(1/4*s12^2)*mt^6*s12*s13*s14 - 
      7/8*denom(1/4*s12^2)*mt^6*s12*s13^2 - 1/8*denom(1/4*s12^2)*mt^6*s12^2*
      s24 - 3/8*denom(1/4*s12^2)*mt^6*s12^2*s23 - 1/8*denom(1/4*s12^2)*mt^6*
      s12^2*s14 - 3/8*denom(1/4*s12^2)*mt^6*s12^2*s13 + 1/8*denom(1/4*s12^2)*
      mt^6*mh^2*s12*s24 + 3/8*denom(1/4*s12^2)*mt^6*mh^2*s12*s23 + 1/8*denom(1/
      4*s12^2)*mt^6*mh^2*s12*s14 + 3/8*denom(1/4*s12^2)*mt^6*mh^2*s12*s13 + 1/
      8*denom(1/4*s12^2)*mt^8*s24^2 + 3/4*denom(1/4*s12^2)*mt^8*s23*s24 + 5/8*
      denom(1/4*s12^2)*mt^8*s23^2 + 1/4*denom(1/4*s12^2)*mt^8*s14*s24 + 5/4*
      denom(1/4*s12^2)*mt^8*s14*s23 + 1/8*denom(1/4*s12^2)*mt^8*s14^2 + 5/4*
      denom(1/4*s12^2)*mt^8*s13*s24 + 7/4*denom(1/4*s12^2)*mt^8*s13*s23 + 3/4*
      denom(1/4*s12^2)*mt^8*s13*s14 + 5/8*denom(1/4*s12^2)*mt^8*s13^2 + 3/4*
      denom(1/4*s12^2)*mt^8*s12*s24 + 7/4*denom(1/4*s12^2)*mt^8*s12*s23 + 3/4*
      denom(1/4*s12^2)*mt^8*s12*s14 + 7/4*denom(1/4*s12^2)*mt^8*s12*s13 + 1/4*
      denom(1/4*s12^2)*mt^8*s12^2 - 1/4*denom(1/4*s12^2)*mt^8*mh^2*s12 - 1/2*
      denom(1/4*s12^2)*mt^10*s24 - denom(1/4*s12^2)*mt^10*s23 - 1/2*denom(1/4*
      s12^2)*mt^10*s14 - denom(1/4*s12^2)*mt^10*s13 - denom(1/4*s12^2)*mt^10*
      s12 + 1/2*denom(1/4*s12^2)*mt^12;
 
 .sort
id KMatrix(9,7) =   - 1/2*mt^2*s14*s23*s24 - 1/2*mt^2*s14*s23^2 - 1/2*mt^2*
      s14^2*s23 - 1/2*mt^2*s13*s24^2 - 1/2*mt^2*s13*s23*s24 - 1/2*mt^2*s13*s14
      *s24 - 1/2*mt^2*s13*s14*s23 - 1/2*mt^2*s13^2*s24 - 1/2*mt^2*s12*s24^2 - 
      mt^2*s12*s23*s24 - 1/2*mt^2*s12*s23^2 - mt^2*s12*s14*s24 - 3/2*mt^2*s12*
      s14*s23 - 1/2*mt^2*s12*s14^2 - 3/2*mt^2*s12*s13*s24 - mt^2*s12*s13*s23
       - mt^2*s12*s13*s14 - 1/2*mt^2*s12*s13^2 - mt^2*s12^2*s24 - mt^2*s12^2*
      s23 - mt^2*s12^2*s14 - mt^2*s12^2*s13 - 1/2*mt^2*s12^3 + 1/2*mt^2*mh^2*
      s14*s23 + 1/2*mt^2*mh^2*s13*s24 + mt^2*mh^2*s12*s24 + mt^2*mh^2*s12*s23
       + mt^2*mh^2*s12*s14 + mt^2*mh^2*s12*s13 + mt^2*mh^2*s12^2 - 1/2*mt^2*
      mh^4*s12 + 1/2*mt^4*s24^2 + mt^4*s23*s24 + 1/2*mt^4*s23^2 + mt^4*s14*s24
       + 2*mt^4*s14*s23 + 1/2*mt^4*s14^2 + 2*mt^4*s13*s24 + mt^4*s13*s23 + 
      mt^4*s13*s14 + 1/2*mt^4*s13^2 + 7/2*mt^4*s12*s24 + 7/2*mt^4*s12*s23 + 7/
      2*mt^4*s12*s14 + 7/2*mt^4*s12*s13 + 3*mt^4*s12^2 - 1/2*mt^4*mh^2*s24 - 1/
      2*mt^4*mh^2*s23 - 1/2*mt^4*mh^2*s14 - 1/2*mt^4*mh^2*s13 - 3*mt^4*mh^2*
      s12 - 2*mt^6*s24 - 2*mt^6*s23 - 2*mt^6*s14 - 2*mt^6*s13 - 5*mt^6*s12 + 
      mt^6*mh^2 + 2*mt^8 + 1/4*denom(1/2*s12)*s13*s14*s23^2*s24 + 1/4*denom(1/
      2*s12)*s13*s14*s23^3 + 1/4*denom(1/2*s12)*s13*s14^2*s23^2 + 1/4*denom(1/
      2*s12)*s13^2*s23*s24^2 + 1/4*denom(1/2*s12)*s13^2*s23^2*s24 + 1/4*denom(
      1/2*s12)*s13^2*s14*s23*s24 + 1/4*denom(1/2*s12)*s13^2*s14*s23^2 + 1/4*
      denom(1/2*s12)*s13^3*s23*s24 + 1/4*denom(1/2*s12)*s12*s13*s23*s24^2 + 1/
      2*denom(1/2*s12)*s12*s13*s23^2*s24 + 1/4*denom(1/2*s12)*s12*s13*s23^3 + 
      1/2*denom(1/2*s12)*s12*s13*s14*s23*s24 + 3/4*denom(1/2*s12)*s12*s13*s14*
      s23^2 + 1/4*denom(1/2*s12)*s12*s13*s14^2*s23 + 3/4*denom(1/2*s12)*s12*
      s13^2*s23*s24 + 1/2*denom(1/2*s12)*s12*s13^2*s23^2 + 1/2*denom(1/2*s12)*
      s12*s13^2*s14*s23 + 1/4*denom(1/2*s12)*s12*s13^3*s23 + 1/2*denom(1/2*s12
      )*s12^2*s13*s23*s24 + 1/2*denom(1/2*s12)*s12^2*s13*s23^2 + 1/2*denom(1/2
      *s12)*s12^2*s13*s14*s23 + 1/2*denom(1/2*s12)*s12^2*s13^2*s23 + 1/4*
      denom(1/2*s12)*s12^3*s13*s23 - 1/4*denom(1/2*s12)*mh^2*s13*s14*s23^2 - 1/
      4*denom(1/2*s12)*mh^2*s13^2*s23*s24 - 1/2*denom(1/2*s12)*mh^2*s12*s13*
      s23*s24 - 1/2*denom(1/2*s12)*mh^2*s12*s13*s23^2 - 1/2*denom(1/2*s12)*
      mh^2*s12*s13*s14*s23 - 1/2*denom(1/2*s12)*mh^2*s12*s13^2*s23 - 1/2*
      denom(1/2*s12)*mh^2*s12^2*s13*s23 + 1/4*denom(1/2*s12)*mh^4*s12*s13*s23
       - 1/4*denom(1/2*s12)*mt^2*s14*s23^2*s24 - 1/4*denom(1/2*s12)*mt^2*s14*
      s23^3 - 1/2*denom(1/2*s12)*mt^2*s14^2*s23^2 - 1/2*denom(1/2*s12)*mt^2*
      s13*s23*s24^2 - 3/4*denom(1/2*s12)*mt^2*s13*s23^2*s24 - 1/4*denom(1/2*
      s12)*mt^2*s13*s23^3 - 3/2*denom(1/2*s12)*mt^2*s13*s14*s23*s24 - 3/2*
      denom(1/2*s12)*mt^2*s13*s14*s23^2 - 1/2*denom(1/2*s12)*mt^2*s13*s14^2*
      s23 - 1/2*denom(1/2*s12)*mt^2*s13^2*s24^2 - 3/2*denom(1/2*s12)*mt^2*
      s13^2*s23*s24 - 1/2*denom(1/2*s12)*mt^2*s13^2*s23^2 - 1/4*denom(1/2*s12)
      *mt^2*s13^2*s14*s24 - 3/4*denom(1/2*s12)*mt^2*s13^2*s14*s23 - 1/4*denom(
      1/2*s12)*mt^2*s13^3*s24 - 1/4*denom(1/2*s12)*mt^2*s13^3*s23 - 1/4*denom(
      1/2*s12)*mt^2*s12*s23*s24^2 - 1/2*denom(1/2*s12)*mt^2*s12*s23^2*s24 - 1/
      4*denom(1/2*s12)*mt^2*s12*s23^3 - 3/4*denom(1/2*s12)*mt^2*s12*s14*s23*
      s24 - denom(1/2*s12)*mt^2*s12*s14*s23^2 - 1/2*denom(1/2*s12)*mt^2*s12*
      s14^2*s23 - 1/2*denom(1/2*s12)*mt^2*s12*s13*s24^2 - 13/4*denom(1/2*s12)*
      mt^2*s12*s13*s23*s24 - 5/2*denom(1/2*s12)*mt^2*s12*s13*s23^2 - 3/4*
      denom(1/2*s12)*mt^2*s12*s13*s14*s24 - 13/4*denom(1/2*s12)*mt^2*s12*s13*
      s14*s23 - 1/4*denom(1/2*s12)*mt^2*s12*s13*s14^2 - denom(1/2*s12)*mt^2*
      s12*s13^2*s24 - 5/2*denom(1/2*s12)*mt^2*s12*s13^2*s23 - 1/2*denom(1/2*
      s12)*mt^2*s12*s13^2*s14 - 1/4*denom(1/2*s12)*mt^2*s12*s13^3 - 1/2*denom(
      1/2*s12)*mt^2*s12^2*s23*s24 - 1/2*denom(1/2*s12)*mt^2*s12^2*s23^2 - 3/4*
      denom(1/2*s12)*mt^2*s12^2*s14*s23 - 3/4*denom(1/2*s12)*mt^2*s12^2*s13*
      s24 - 5/2*denom(1/2*s12)*mt^2*s12^2*s13*s23 - 1/2*denom(1/2*s12)*mt^2*
      s12^2*s13*s14 - 1/2*denom(1/2*s12)*mt^2*s12^2*s13^2 - 1/4*denom(1/2*s12)
      *mt^2*s12^3*s23 - 1/4*denom(1/2*s12)*mt^2*s12^3*s13 + 1/4*denom(1/2*s12)
      *mt^2*mh^2*s14*s23^2 + 1/2*denom(1/2*s12)*mt^2*mh^2*s13*s23*s24 + 1/4*
      denom(1/2*s12)*mt^2*mh^2*s13*s23^2 + 1/2*denom(1/2*s12)*mt^2*mh^2*s13*
      s14*s23 + 1/4*denom(1/2*s12)*mt^2*mh^2*s13^2*s24 + 1/4*denom(1/2*s12)*
      mt^2*mh^2*s13^2*s23 + 1/2*denom(1/2*s12)*mt^2*mh^2*s12*s23*s24 + 1/2*
      denom(1/2*s12)*mt^2*mh^2*s12*s23^2 + 3/4*denom(1/2*s12)*mt^2*mh^2*s12*
      s14*s23 + 3/4*denom(1/2*s12)*mt^2*mh^2*s12*s13*s24 + 5/2*denom(1/2*s12)*
      mt^2*mh^2*s12*s13*s23 + 1/2*denom(1/2*s12)*mt^2*mh^2*s12*s13*s14 + 1/2*
      denom(1/2*s12)*mt^2*mh^2*s12*s13^2 + 1/2*denom(1/2*s12)*mt^2*mh^2*s12^2*
      s23 + 1/2*denom(1/2*s12)*mt^2*mh^2*s12^2*s13 - 1/4*denom(1/2*s12)*mt^2*
      mh^4*s12*s23 - 1/4*denom(1/2*s12)*mt^2*mh^4*s12*s13 + 1/4*denom(1/2*s12)
      *mt^4*s23*s24^2 + 1/2*denom(1/2*s12)*mt^4*s23^2*s24 + 1/4*denom(1/2*s12)
      *mt^4*s23^3 + 5/4*denom(1/2*s12)*mt^4*s14*s23*s24 + 7/4*denom(1/2*s12)*
      mt^4*s14*s23^2 + denom(1/2*s12)*mt^4*s14^2*s23 + denom(1/2*s12)*mt^4*s13
      *s24^2 + 13/4*denom(1/2*s12)*mt^4*s13*s23*s24 + 7/4*denom(1/2*s12)*mt^4*
      s13*s23^2 + 5/4*denom(1/2*s12)*mt^4*s13*s14*s24 + 13/4*denom(1/2*s12)*
      mt^4*s13*s14*s23 + 1/4*denom(1/2*s12)*mt^4*s13*s14^2 + 7/4*denom(1/2*s12
      )*mt^4*s13^2*s24 + 7/4*denom(1/2*s12)*mt^4*s13^2*s23 + 1/2*denom(1/2*s12
      )*mt^4*s13^2*s14 + 1/4*denom(1/2*s12)*mt^4*s13^3 + 1/2*denom(1/2*s12)*
      mt^4*s12*s24^2 + 11/4*denom(1/2*s12)*mt^4*s12*s23*s24 + 9/4*denom(1/2*
      s12)*mt^4*s12*s23^2 + denom(1/2*s12)*mt^4*s12*s14*s24 + 4*denom(1/2*s12)
      *mt^4*s12*s14*s23 + 1/2*denom(1/2*s12)*mt^4*s12*s14^2 + 4*denom(1/2*s12)
      *mt^4*s12*s13*s24 + 7*denom(1/2*s12)*mt^4*s12*s13*s23 + 11/4*denom(1/2*
      s12)*mt^4*s12*s13*s14 + 9/4*denom(1/2*s12)*mt^4*s12*s13^2 + 3/4*denom(1/
      2*s12)*mt^4*s12^2*s24 + 9/4*denom(1/2*s12)*mt^4*s12^2*s23 + 3/4*denom(1/
      2*s12)*mt^4*s12^2*s14 + 9/4*denom(1/2*s12)*mt^4*s12^2*s13 + 1/4*denom(1/
      2*s12)*mt^4*s12^3 - 1/4*denom(1/2*s12)*mt^4*mh^2*s23*s24 - 1/4*denom(1/2
      *s12)*mt^4*mh^2*s23^2 - 1/2*denom(1/2*s12)*mt^4*mh^2*s14*s23 - 1/2*
      denom(1/2*s12)*mt^4*mh^2*s13*s24 - denom(1/2*s12)*mt^4*mh^2*s13*s23 - 1/
      4*denom(1/2*s12)*mt^4*mh^2*s13*s14 - 1/4*denom(1/2*s12)*mt^4*mh^2*s13^2
       - 3/4*denom(1/2*s12)*mt^4*mh^2*s12*s24 - 9/4*denom(1/2*s12)*mt^4*mh^2*
      s12*s23 - 3/4*denom(1/2*s12)*mt^4*mh^2*s12*s14 - 9/4*denom(1/2*s12)*mt^4
      *mh^2*s12*s13 - 1/2*denom(1/2*s12)*mt^4*mh^2*s12^2 + 1/4*denom(1/2*s12)*
      mt^4*mh^4*s12 - 1/2*denom(1/2*s12)*mt^6*s24^2 - 2*denom(1/2*s12)*mt^6*
      s23*s24 - 3/2*denom(1/2*s12)*mt^6*s23^2 - denom(1/2*s12)*mt^6*s14*s24 - 
      7/2*denom(1/2*s12)*mt^6*s14*s23 - 1/2*denom(1/2*s12)*mt^6*s14^2 - 7/2*
      denom(1/2*s12)*mt^6*s13*s24 - 4*denom(1/2*s12)*mt^6*s13*s23 - 2*denom(1/
      2*s12)*mt^6*s13*s14 - 3/2*denom(1/2*s12)*mt^6*s13^2 - 13/4*denom(1/2*s12
      )*mt^6*s12*s24 - 23/4*denom(1/2*s12)*mt^6*s12*s23 - 13/4*denom(1/2*s12)*
      mt^6*s12*s14 - 23/4*denom(1/2*s12)*mt^6*s12*s13 - 2*denom(1/2*s12)*mt^6*
      s12^2 + 1/4*denom(1/2*s12)*mt^6*mh^2*s24 + 3/4*denom(1/2*s12)*mt^6*mh^2*
      s23 + 1/4*denom(1/2*s12)*mt^6*mh^2*s14 + 3/4*denom(1/2*s12)*mt^6*mh^2*
      s13 + 2*denom(1/2*s12)*mt^6*mh^2*s12 + 2*denom(1/2*s12)*mt^8*s24 + 3*
      denom(1/2*s12)*mt^8*s23 + 2*denom(1/2*s12)*mt^8*s14 + 3*denom(1/2*s12)*
      mt^8*s13 + 9/2*denom(1/2*s12)*mt^8*s12 - 1/2*denom(1/2*s12)*mt^8*mh^2 - 
      2*denom(1/2*s12)*mt^10 + 1/8*denom(1/4*s12^2)*s13*s14^2*s23^3 + 1/4*
      denom(1/4*s12^2)*s13^2*s14*s23^2*s24 + 1/8*denom(1/4*s12^2)*s13^3*s23*
      s24^2 + 1/8*denom(1/4*s12^2)*s12*s13*s14*s23^2*s24 + 1/8*denom(1/4*s12^2
      )*s12*s13*s14*s23^3 + 1/8*denom(1/4*s12^2)*s12*s13*s14^2*s23^2 + 1/8*
      denom(1/4*s12^2)*s12*s13^2*s23*s24^2 + 1/8*denom(1/4*s12^2)*s12*s13^2*
      s23^2*s24 + 1/8*denom(1/4*s12^2)*s12*s13^2*s14*s23*s24 + 1/8*denom(1/4*
      s12^2)*s12*s13^2*s14*s23^2 + 1/8*denom(1/4*s12^2)*s12*s13^3*s23*s24 + 1/
      8*denom(1/4*s12^2)*s12^2*s13*s14*s23^2 + 1/8*denom(1/4*s12^2)*s12^2*
      s13^2*s23*s24 - 1/8*denom(1/4*s12^2)*mh^2*s12*s13*s14*s23^2 - 1/8*denom(
      1/4*s12^2)*mh^2*s12*s13^2*s23*s24 - 1/8*denom(1/4*s12^2)*mt^2*s14^2*
      s23^3 - 1/2*denom(1/4*s12^2)*mt^2*s13*s14*s23^2*s24 - 1/4*denom(1/4*
      s12^2)*mt^2*s13*s14*s23^3 - 3/8*denom(1/4*s12^2)*mt^2*s13*s14^2*s23^2 - 
      3/8*denom(1/4*s12^2)*mt^2*s13^2*s23*s24^2 - 1/4*denom(1/4*s12^2)*mt^2*
      s13^2*s23^2*s24 - 1/2*denom(1/4*s12^2)*mt^2*s13^2*s14*s23*s24 - 1/4*
      denom(1/4*s12^2)*mt^2*s13^2*s14*s23^2 - 1/8*denom(1/4*s12^2)*mt^2*s13^3*
      s24^2 - 1/4*denom(1/4*s12^2)*mt^2*s13^3*s23*s24 - 1/8*denom(1/4*s12^2)*
      mt^2*s12*s14*s23^2*s24 - 1/8*denom(1/4*s12^2)*mt^2*s12*s14*s23^3 - 1/8*
      denom(1/4*s12^2)*mt^2*s12*s14^2*s23^2 - 1/4*denom(1/4*s12^2)*mt^2*s12*
      s13*s23*s24^2 - 3/8*denom(1/4*s12^2)*mt^2*s12*s13*s23^2*s24 - 1/8*denom(
      1/4*s12^2)*mt^2*s12*s13*s23^3 - 1/2*denom(1/4*s12^2)*mt^2*s12*s13*s14*
      s23*s24 - denom(1/4*s12^2)*mt^2*s12*s13*s14*s23^2 - 1/4*denom(1/4*s12^2)
      *mt^2*s12*s13*s14^2*s23 - 1/8*denom(1/4*s12^2)*mt^2*s12*s13^2*s24^2 - 
      denom(1/4*s12^2)*mt^2*s12*s13^2*s23*s24 - 1/4*denom(1/4*s12^2)*mt^2*s12*
      s13^2*s23^2 - 1/8*denom(1/4*s12^2)*mt^2*s12*s13^2*s14*s24 - 3/8*denom(1/
      4*s12^2)*mt^2*s12*s13^2*s14*s23 - 1/8*denom(1/4*s12^2)*mt^2*s12*s13^3*
      s24 - 1/8*denom(1/4*s12^2)*mt^2*s12*s13^3*s23 - 1/8*denom(1/4*s12^2)*
      mt^2*s12^2*s14*s23^2 - 1/4*denom(1/4*s12^2)*mt^2*s12^2*s13*s23*s24 - 1/8
      *denom(1/4*s12^2)*mt^2*s12^2*s13*s23^2 - 1/4*denom(1/4*s12^2)*mt^2*s12^2
      *s13*s14*s23 - 1/8*denom(1/4*s12^2)*mt^2*s12^2*s13^2*s24 - 1/8*denom(1/4
      *s12^2)*mt^2*s12^2*s13^2*s23 + 1/8*denom(1/4*s12^2)*mt^2*mh^2*s12*s14*
      s23^2 + 1/4*denom(1/4*s12^2)*mt^2*mh^2*s12*s13*s23*s24 + 1/8*denom(1/4*
      s12^2)*mt^2*mh^2*s12*s13*s23^2 + 1/4*denom(1/4*s12^2)*mt^2*mh^2*s12*s13*
      s14*s23 + 1/8*denom(1/4*s12^2)*mt^2*mh^2*s12*s13^2*s24 + 1/8*denom(1/4*
      s12^2)*mt^2*mh^2*s12*s13^2*s23 + 1/4*denom(1/4*s12^2)*mt^4*s14*s23^2*s24
       + 1/4*denom(1/4*s12^2)*mt^4*s14*s23^3 + 3/8*denom(1/4*s12^2)*mt^4*s14^2
      *s23^2 + 3/8*denom(1/4*s12^2)*mt^4*s13*s23*s24^2 + 1/2*denom(1/4*s12^2)*
      mt^4*s13*s23^2*s24 + 1/8*denom(1/4*s12^2)*mt^4*s13*s23^3 + denom(1/4*
      s12^2)*mt^4*s13*s14*s23*s24 + 5/4*denom(1/4*s12^2)*mt^4*s13*s14*s23^2 + 
      3/8*denom(1/4*s12^2)*mt^4*s13*s14^2*s23 + 3/8*denom(1/4*s12^2)*mt^4*
      s13^2*s24^2 + 5/4*denom(1/4*s12^2)*mt^4*s13^2*s23*s24 + 1/4*denom(1/4*
      s12^2)*mt^4*s13^2*s23^2 + 1/4*denom(1/4*s12^2)*mt^4*s13^2*s14*s24 + 1/2*
      denom(1/4*s12^2)*mt^4*s13^2*s14*s23 + 1/4*denom(1/4*s12^2)*mt^4*s13^3*
      s24 + 1/8*denom(1/4*s12^2)*mt^4*s13^3*s23 + 1/8*denom(1/4*s12^2)*mt^4*
      s12*s23*s24^2 + 1/4*denom(1/4*s12^2)*mt^4*s12*s23^2*s24 + 1/8*denom(1/4*
      s12^2)*mt^4*s12*s23^3 + 3/8*denom(1/4*s12^2)*mt^4*s12*s14*s23*s24 + 7/8*
      denom(1/4*s12^2)*mt^4*s12*s14*s23^2 + 1/4*denom(1/4*s12^2)*mt^4*s12*
      s14^2*s23 + 1/4*denom(1/4*s12^2)*mt^4*s12*s13*s24^2 + 15/8*denom(1/4*
      s12^2)*mt^4*s12*s13*s23*s24 + 9/8*denom(1/4*s12^2)*mt^4*s12*s13*s23^2 + 
      3/8*denom(1/4*s12^2)*mt^4*s12*s13*s14*s24 + 15/8*denom(1/4*s12^2)*mt^4*
      s12*s13*s14*s23 + 1/8*denom(1/4*s12^2)*mt^4*s12*s13*s14^2 + 7/8*denom(1/
      4*s12^2)*mt^4*s12*s13^2*s24 + 9/8*denom(1/4*s12^2)*mt^4*s12*s13^2*s23 + 
      1/4*denom(1/4*s12^2)*mt^4*s12*s13^2*s14 + 1/8*denom(1/4*s12^2)*mt^4*s12*
      s13^3 + 1/8*denom(1/4*s12^2)*mt^4*s12^2*s23*s24 + 1/8*denom(1/4*s12^2)*
      mt^4*s12^2*s23^2 + 1/4*denom(1/4*s12^2)*mt^4*s12^2*s14*s23 + 1/4*denom(1/
      4*s12^2)*mt^4*s12^2*s13*s24 + 1/2*denom(1/4*s12^2)*mt^4*s12^2*s13*s23 + 
      1/8*denom(1/4*s12^2)*mt^4*s12^2*s13*s14 + 1/8*denom(1/4*s12^2)*mt^4*
      s12^2*s13^2 - 1/8*denom(1/4*s12^2)*mt^4*mh^2*s12*s23*s24 - 1/8*denom(1/4
      *s12^2)*mt^4*mh^2*s12*s23^2 - 1/4*denom(1/4*s12^2)*mt^4*mh^2*s12*s14*s23
       - 1/4*denom(1/4*s12^2)*mt^4*mh^2*s12*s13*s24 - 1/2*denom(1/4*s12^2)*
      mt^4*mh^2*s12*s13*s23 - 1/8*denom(1/4*s12^2)*mt^4*mh^2*s12*s13*s14 - 1/8
      *denom(1/4*s12^2)*mt^4*mh^2*s12*s13^2 - 1/8*denom(1/4*s12^2)*mt^6*s23*
      s24^2 - 1/4*denom(1/4*s12^2)*mt^6*s23^2*s24 - 1/8*denom(1/4*s12^2)*mt^6*
      s23^3 - 1/2*denom(1/4*s12^2)*mt^6*s14*s23*s24 - denom(1/4*s12^2)*mt^6*
      s14*s23^2 - 3/8*denom(1/4*s12^2)*mt^6*s14^2*s23 - 3/8*denom(1/4*s12^2)*
      mt^6*s13*s24^2 - 7/4*denom(1/4*s12^2)*mt^6*s13*s23*s24 - 7/8*denom(1/4*
      s12^2)*mt^6*s13*s23^2 - 1/2*denom(1/4*s12^2)*mt^6*s13*s14*s24 - 7/4*
      denom(1/4*s12^2)*mt^6*s13*s14*s23 - 1/8*denom(1/4*s12^2)*mt^6*s13*s14^2
       - denom(1/4*s12^2)*mt^6*s13^2*s24 - 7/8*denom(1/4*s12^2)*mt^6*s13^2*s23
       - 1/4*denom(1/4*s12^2)*mt^6*s13^2*s14 - 1/8*denom(1/4*s12^2)*mt^6*s13^3
       - 1/8*denom(1/4*s12^2)*mt^6*s12*s24^2 - denom(1/4*s12^2)*mt^6*s12*s23*
      s24 - 7/8*denom(1/4*s12^2)*mt^6*s12*s23^2 - 1/4*denom(1/4*s12^2)*mt^6*
      s12*s14*s24 - 3/2*denom(1/4*s12^2)*mt^6*s12*s14*s23 - 1/8*denom(1/4*
      s12^2)*mt^6*s12*s14^2 - 3/2*denom(1/4*s12^2)*mt^6*s12*s13*s24 - 11/4*
      denom(1/4*s12^2)*mt^6*s12*s13*s23 - denom(1/4*s12^2)*mt^6*s12*s13*s14 - 
      7/8*denom(1/4*s12^2)*mt^6*s12*s13^2 - 1/8*denom(1/4*s12^2)*mt^6*s12^2*
      s24 - 3/8*denom(1/4*s12^2)*mt^6*s12^2*s23 - 1/8*denom(1/4*s12^2)*mt^6*
      s12^2*s14 - 3/8*denom(1/4*s12^2)*mt^6*s12^2*s13 + 1/8*denom(1/4*s12^2)*
      mt^6*mh^2*s12*s24 + 3/8*denom(1/4*s12^2)*mt^6*mh^2*s12*s23 + 1/8*denom(1/
      4*s12^2)*mt^6*mh^2*s12*s14 + 3/8*denom(1/4*s12^2)*mt^6*mh^2*s12*s13 + 1/
      8*denom(1/4*s12^2)*mt^8*s24^2 + 3/4*denom(1/4*s12^2)*mt^8*s23*s24 + 5/8*
      denom(1/4*s12^2)*mt^8*s23^2 + 1/4*denom(1/4*s12^2)*mt^8*s14*s24 + 5/4*
      denom(1/4*s12^2)*mt^8*s14*s23 + 1/8*denom(1/4*s12^2)*mt^8*s14^2 + 5/4*
      denom(1/4*s12^2)*mt^8*s13*s24 + 7/4*denom(1/4*s12^2)*mt^8*s13*s23 + 3/4*
      denom(1/4*s12^2)*mt^8*s13*s14 + 5/8*denom(1/4*s12^2)*mt^8*s13^2 + 3/4*
      denom(1/4*s12^2)*mt^8*s12*s24 + 7/4*denom(1/4*s12^2)*mt^8*s12*s23 + 3/4*
      denom(1/4*s12^2)*mt^8*s12*s14 + 7/4*denom(1/4*s12^2)*mt^8*s12*s13 + 1/4*
      denom(1/4*s12^2)*mt^8*s12^2 - 1/4*denom(1/4*s12^2)*mt^8*mh^2*s12 - 1/2*
      denom(1/4*s12^2)*mt^10*s24 - denom(1/4*s12^2)*mt^10*s23 - 1/2*denom(1/4*
      s12^2)*mt^10*s14 - denom(1/4*s12^2)*mt^10*s13 - denom(1/4*s12^2)*mt^10*
      s12 + 1/2*denom(1/4*s12^2)*mt^12;
 
 .sort
id KMatrix(9,8) =  1/4*s14*s23*s24^2 + 1/2*s14*s23^2*s24 + 1/4*s14*s23^3 + 1/2
      *s14^2*s23*s24 + 1/2*s14^2*s23^2 + 1/4*s14^3*s23 + 1/4*s13*s24^3 + 1/2*
      s13*s23*s24^2 + 1/4*s13*s23^2*s24 + 1/2*s13*s14*s24^2 + s13*s14*s23*s24
       + 1/2*s13*s14*s23^2 + 1/4*s13*s14^2*s24 + 1/2*s13*s14^2*s23 + 1/2*s13^2
      *s24^2 + 1/2*s13^2*s23*s24 + 1/2*s13^2*s14*s24 + 1/4*s13^2*s14*s23 + 1/4
      *s13^3*s24 + 1/4*s12*s24^3 + 3/4*s12*s23*s24^2 + 3/4*s12*s23^2*s24 + 1/4
      *s12*s23^3 + 3/4*s12*s14*s24^2 + 2*s12*s14*s23*s24 + 5/4*s12*s14*s23^2
       + 3/4*s12*s14^2*s24 + 5/4*s12*s14^2*s23 + 1/4*s12*s14^3 + 5/4*s12*s13*
      s24^2 + 2*s12*s13*s23*s24 + 3/4*s12*s13*s23^2 + 2*s12*s13*s14*s24 + 2*
      s12*s13*s14*s23 + 3/4*s12*s13*s14^2 + 5/4*s12*s13^2*s24 + 3/4*s12*s13^2*
      s23 + 3/4*s12*s13^2*s14 + 1/4*s12*s13^3 + 3/4*s12^2*s24^2 + 3/2*s12^2*
      s23*s24 + 3/4*s12^2*s23^2 + 3/2*s12^2*s14*s24 + 7/4*s12^2*s14*s23 + 3/4*
      s12^2*s14^2 + 7/4*s12^2*s13*s24 + 3/2*s12^2*s13*s23 + 3/2*s12^2*s13*s14
       + 3/4*s12^2*s13^2 + 3/4*s12^3*s24 + 3/4*s12^3*s23 + 3/4*s12^3*s14 + 3/4
      *s12^3*s13 + 1/4*s12^4 - 1/2*mh^2*s14*s23*s24 - 1/2*mh^2*s14*s23^2 - 1/2
      *mh^2*s14^2*s23 - 1/2*mh^2*s13*s24^2 - 1/2*mh^2*s13*s23*s24 - 1/2*mh^2*
      s13*s14*s24 - 1/2*mh^2*s13*s14*s23 - 1/2*mh^2*s13^2*s24 - 3/4*mh^2*s12*
      s24^2 - 3/2*mh^2*s12*s23*s24 - 3/4*mh^2*s12*s23^2 - 3/2*mh^2*s12*s14*s24
       - 2*mh^2*s12*s14*s23 - 3/4*mh^2*s12*s14^2 - 2*mh^2*s12*s13*s24 - 3/2*
      mh^2*s12*s13*s23 - 3/2*mh^2*s12*s13*s14 - 3/4*mh^2*s12*s13^2 - 3/2*mh^2*
      s12^2*s24 - 3/2*mh^2*s12^2*s23 - 3/2*mh^2*s12^2*s14 - 3/2*mh^2*s12^2*s13
       - 3/4*mh^2*s12^3 + 1/4*mh^4*s14*s23 + 1/4*mh^4*s13*s24 + 3/4*mh^4*s12*
      s24 + 3/4*mh^4*s12*s23 + 3/4*mh^4*s12*s14 + 3/4*mh^4*s12*s13 + 3/4*mh^4*
      s12^2 - 1/4*mh^6*s12 - 1/4*mt^2*s24^3 - 3/4*mt^2*s23*s24^2 - 3/4*mt^2*
      s23^2*s24 - 1/4*mt^2*s23^3 - 3/4*mt^2*s14*s24^2 - 5/2*mt^2*s14*s23*s24
       - 7/4*mt^2*s14*s23^2 - 3/4*mt^2*s14^2*s24 - 7/4*mt^2*s14^2*s23 - 1/4*
      mt^2*s14^3 - 7/4*mt^2*s13*s24^2 - 5/2*mt^2*s13*s23*s24 - 3/4*mt^2*s13*
      s23^2 - 5/2*mt^2*s13*s14*s24 - 5/2*mt^2*s13*s14*s23 - 3/4*mt^2*s13*s14^2
       - 7/4*mt^2*s13^2*s24 - 3/4*mt^2*s13^2*s23 - 3/4*mt^2*s13^2*s14 - 1/4*
      mt^2*s13^3 - 5/2*mt^2*s12*s24^2 - 5*mt^2*s12*s23*s24 - 5/2*mt^2*s12*
      s23^2 - 5*mt^2*s12*s14*s24 - 6*mt^2*s12*s14*s23 - 5/2*mt^2*s12*s14^2 - 6
      *mt^2*s12*s13*s24 - 5*mt^2*s12*s13*s23 - 5*mt^2*s12*s13*s14 - 5/2*mt^2*
      s12*s13^2 - 17/4*mt^2*s12^2*s24 - 17/4*mt^2*s12^2*s23 - 17/4*mt^2*s12^2*
      s14 - 17/4*mt^2*s12^2*s13 - 2*mt^2*s12^3 + 1/2*mt^2*mh^2*s24^2 + mt^2*
      mh^2*s23*s24 + 1/2*mt^2*mh^2*s23^2 + mt^2*mh^2*s14*s24 + 2*mt^2*mh^2*s14
      *s23 + 1/2*mt^2*mh^2*s14^2 + 2*mt^2*mh^2*s13*s24 + mt^2*mh^2*s13*s23 + 
      mt^2*mh^2*s13*s14 + 1/2*mt^2*mh^2*s13^2 + 9/2*mt^2*mh^2*s12*s24 + 9/2*
      mt^2*mh^2*s12*s23 + 9/2*mt^2*mh^2*s12*s14 + 9/2*mt^2*mh^2*s12*s13 + 4*
      mt^2*mh^2*s12^2 - 1/4*mt^2*mh^4*s24 - 1/4*mt^2*mh^4*s23 - 1/4*mt^2*mh^4*
      s14 - 1/4*mt^2*mh^4*s13 - 2*mt^2*mh^4*s12 + 3/2*mt^4*s24^2 + 3*mt^4*s23*
      s24 + 3/2*mt^4*s23^2 + 3*mt^4*s14*s24 + 4*mt^4*s14*s23 + 3/2*mt^4*s14^2
       + 4*mt^4*s13*s24 + 3*mt^4*s13*s23 + 3*mt^4*s13*s14 + 3/2*mt^4*s13^2 + 7
      *mt^4*s12*s24 + 7*mt^4*s12*s23 + 7*mt^4*s12*s14 + 7*mt^4*s12*s13 + 11/2*
      mt^4*s12^2 - 2*mt^4*mh^2*s24 - 2*mt^4*mh^2*s23 - 2*mt^4*mh^2*s14 - 2*
      mt^4*mh^2*s13 - 6*mt^4*mh^2*s12 + 1/2*mt^4*mh^4 - 3*mt^6*s24 - 3*mt^6*
      s23 - 3*mt^6*s14 - 3*mt^6*s13 - 6*mt^6*s12 + 2*mt^6*mh^2 + 2*mt^8 + 1/4*
      denom(1/2*s12)*s14^2*s23^2*s24 + 1/4*denom(1/2*s12)*s14^2*s23^3 + 1/4*
      denom(1/2*s12)*s14^3*s23^2 + 1/2*denom(1/2*s12)*s13*s14*s23*s24^2 + 1/2*
      denom(1/2*s12)*s13*s14*s23^2*s24 + 1/2*denom(1/2*s12)*s13*s14^2*s23*s24
       + 1/4*denom(1/2*s12)*s13*s14^2*s23^2 + 1/4*denom(1/2*s12)*s13^2*s24^3
       + 1/4*denom(1/2*s12)*s13^2*s23*s24^2 + 1/4*denom(1/2*s12)*s13^2*s14*
      s24^2 + 1/2*denom(1/2*s12)*s13^2*s14*s23*s24 + 1/4*denom(1/2*s12)*s13^3*
      s24^2 + 1/4*denom(1/2*s12)*s12*s14*s23*s24^2 + 1/2*denom(1/2*s12)*s12*
      s14*s23^2*s24 + 1/4*denom(1/2*s12)*s12*s14*s23^3 + 1/2*denom(1/2*s12)*
      s12*s14^2*s23*s24 + 3/4*denom(1/2*s12)*s12*s14^2*s23^2 + 1/4*denom(1/2*
      s12)*s12*s14^3*s23 + 1/4*denom(1/2*s12)*s12*s13*s24^3 + 1/2*denom(1/2*
      s12)*s12*s13*s23*s24^2 + 1/4*denom(1/2*s12)*s12*s13*s23^2*s24 + 1/2*
      denom(1/2*s12)*s12*s13*s14*s24^2 + 3/2*denom(1/2*s12)*s12*s13*s14*s23*
      s24 + 1/2*denom(1/2*s12)*s12*s13*s14*s23^2 + 1/4*denom(1/2*s12)*s12*s13*
      s14^2*s24 + 1/2*denom(1/2*s12)*s12*s13*s14^2*s23 + 3/4*denom(1/2*s12)*
      s12*s13^2*s24^2 + 1/2*denom(1/2*s12)*s12*s13^2*s23*s24 + 1/2*denom(1/2*
      s12)*s12*s13^2*s14*s24 + 1/4*denom(1/2*s12)*s12*s13^2*s14*s23 + 1/4*
      denom(1/2*s12)*s12*s13^3*s24 + 1/2*denom(1/2*s12)*s12^2*s14*s23*s24 + 1/
      2*denom(1/2*s12)*s12^2*s14*s23^2 + 1/2*denom(1/2*s12)*s12^2*s14^2*s23 + 
      1/2*denom(1/2*s12)*s12^2*s13*s24^2 + 1/2*denom(1/2*s12)*s12^2*s13*s23*
      s24 + 1/2*denom(1/2*s12)*s12^2*s13*s14*s24 + 1/2*denom(1/2*s12)*s12^2*
      s13*s14*s23 + 1/2*denom(1/2*s12)*s12^2*s13^2*s24 + 1/4*denom(1/2*s12)*
      s12^3*s14*s23 + 1/4*denom(1/2*s12)*s12^3*s13*s24 - 1/4*denom(1/2*s12)*
      mh^2*s14^2*s23^2 - 1/2*denom(1/2*s12)*mh^2*s13*s14*s23*s24 - 1/4*denom(1/
      2*s12)*mh^2*s13^2*s24^2 - 1/2*denom(1/2*s12)*mh^2*s12*s14*s23*s24 - 1/2*
      denom(1/2*s12)*mh^2*s12*s14*s23^2 - 1/2*denom(1/2*s12)*mh^2*s12*s14^2*
      s23 - 1/2*denom(1/2*s12)*mh^2*s12*s13*s24^2 - 1/2*denom(1/2*s12)*mh^2*
      s12*s13*s23*s24 - 1/2*denom(1/2*s12)*mh^2*s12*s13*s14*s24 - 1/2*denom(1/
      2*s12)*mh^2*s12*s13*s14*s23 - 1/2*denom(1/2*s12)*mh^2*s12*s13^2*s24 - 1/
      2*denom(1/2*s12)*mh^2*s12^2*s14*s23 - 1/2*denom(1/2*s12)*mh^2*s12^2*s13*
      s24 + 1/4*denom(1/2*s12)*mh^4*s12*s14*s23 + 1/4*denom(1/2*s12)*mh^4*s12*
      s13*s24 - 1/2*denom(1/2*s12)*mt^2*s14*s23*s24^2 - denom(1/2*s12)*mt^2*
      s14*s23^2*s24 - 1/2*denom(1/2*s12)*mt^2*s14*s23^3 - denom(1/2*s12)*mt^2*
      s14^2*s23*s24 - 3/2*denom(1/2*s12)*mt^2*s14^2*s23^2 - 1/2*denom(1/2*s12)
      *mt^2*s14^3*s23 - 1/2*denom(1/2*s12)*mt^2*s13*s24^3 - denom(1/2*s12)*
      mt^2*s13*s23*s24^2 - 1/2*denom(1/2*s12)*mt^2*s13*s23^2*s24 - denom(1/2*
      s12)*mt^2*s13*s14*s24^2 - 3*denom(1/2*s12)*mt^2*s13*s14*s23*s24 - denom(
      1/2*s12)*mt^2*s13*s14*s23^2 - 1/2*denom(1/2*s12)*mt^2*s13*s14^2*s24 - 
      denom(1/2*s12)*mt^2*s13*s14^2*s23 - 3/2*denom(1/2*s12)*mt^2*s13^2*s24^2
       - denom(1/2*s12)*mt^2*s13^2*s23*s24 - denom(1/2*s12)*mt^2*s13^2*s14*s24
       - 1/2*denom(1/2*s12)*mt^2*s13^2*s14*s23 - 1/2*denom(1/2*s12)*mt^2*s13^3
      *s24 - 1/4*denom(1/2*s12)*mt^2*s12*s24^3 - 3/4*denom(1/2*s12)*mt^2*s12*
      s23*s24^2 - 3/4*denom(1/2*s12)*mt^2*s12*s23^2*s24 - 1/4*denom(1/2*s12)*
      mt^2*s12*s23^3 - 3/4*denom(1/2*s12)*mt^2*s12*s14*s24^2 - 7/2*denom(1/2*
      s12)*mt^2*s12*s14*s23*s24 - 11/4*denom(1/2*s12)*mt^2*s12*s14*s23^2 - 3/4
      *denom(1/2*s12)*mt^2*s12*s14^2*s24 - 11/4*denom(1/2*s12)*mt^2*s12*s14^2*
      s23 - 1/4*denom(1/2*s12)*mt^2*s12*s14^3 - 11/4*denom(1/2*s12)*mt^2*s12*
      s13*s24^2 - 7/2*denom(1/2*s12)*mt^2*s12*s13*s23*s24 - 3/4*denom(1/2*s12)
      *mt^2*s12*s13*s23^2 - 7/2*denom(1/2*s12)*mt^2*s12*s13*s14*s24 - 7/2*
      denom(1/2*s12)*mt^2*s12*s13*s14*s23 - 3/4*denom(1/2*s12)*mt^2*s12*s13*
      s14^2 - 11/4*denom(1/2*s12)*mt^2*s12*s13^2*s24 - 3/4*denom(1/2*s12)*mt^2
      *s12*s13^2*s23 - 3/4*denom(1/2*s12)*mt^2*s12*s13^2*s14 - 1/4*denom(1/2*
      s12)*mt^2*s12*s13^3 - 1/2*denom(1/2*s12)*mt^2*s12^2*s24^2 - denom(1/2*
      s12)*mt^2*s12^2*s23*s24 - 1/2*denom(1/2*s12)*mt^2*s12^2*s23^2 - denom(1/
      2*s12)*mt^2*s12^2*s14*s24 - 5/2*denom(1/2*s12)*mt^2*s12^2*s14*s23 - 1/2*
      denom(1/2*s12)*mt^2*s12^2*s14^2 - 5/2*denom(1/2*s12)*mt^2*s12^2*s13*s24
       - denom(1/2*s12)*mt^2*s12^2*s13*s23 - denom(1/2*s12)*mt^2*s12^2*s13*s14
       - 1/2*denom(1/2*s12)*mt^2*s12^2*s13^2 - 1/4*denom(1/2*s12)*mt^2*s12^3*
      s24 - 1/4*denom(1/2*s12)*mt^2*s12^3*s23 - 1/4*denom(1/2*s12)*mt^2*s12^3*
      s14 - 1/4*denom(1/2*s12)*mt^2*s12^3*s13 + 1/2*denom(1/2*s12)*mt^2*mh^2*
      s14*s23*s24 + 1/2*denom(1/2*s12)*mt^2*mh^2*s14*s23^2 + 1/2*denom(1/2*s12
      )*mt^2*mh^2*s14^2*s23 + 1/2*denom(1/2*s12)*mt^2*mh^2*s13*s24^2 + 1/2*
      denom(1/2*s12)*mt^2*mh^2*s13*s23*s24 + 1/2*denom(1/2*s12)*mt^2*mh^2*s13*
      s14*s24 + 1/2*denom(1/2*s12)*mt^2*mh^2*s13*s14*s23 + 1/2*denom(1/2*s12)*
      mt^2*mh^2*s13^2*s24 + 1/2*denom(1/2*s12)*mt^2*mh^2*s12*s24^2 + denom(1/2
      *s12)*mt^2*mh^2*s12*s23*s24 + 1/2*denom(1/2*s12)*mt^2*mh^2*s12*s23^2 + 
      denom(1/2*s12)*mt^2*mh^2*s12*s14*s24 + 5/2*denom(1/2*s12)*mt^2*mh^2*s12*
      s14*s23 + 1/2*denom(1/2*s12)*mt^2*mh^2*s12*s14^2 + 5/2*denom(1/2*s12)*
      mt^2*mh^2*s12*s13*s24 + denom(1/2*s12)*mt^2*mh^2*s12*s13*s23 + denom(1/2
      *s12)*mt^2*mh^2*s12*s13*s14 + 1/2*denom(1/2*s12)*mt^2*mh^2*s12*s13^2 + 1/
      2*denom(1/2*s12)*mt^2*mh^2*s12^2*s24 + 1/2*denom(1/2*s12)*mt^2*mh^2*
      s12^2*s23 + 1/2*denom(1/2*s12)*mt^2*mh^2*s12^2*s14 + 1/2*denom(1/2*s12)*
      mt^2*mh^2*s12^2*s13 - 1/4*denom(1/2*s12)*mt^2*mh^4*s12*s24 - 1/4*denom(1/
      2*s12)*mt^2*mh^4*s12*s23 - 1/4*denom(1/2*s12)*mt^2*mh^4*s12*s14 - 1/4*
      denom(1/2*s12)*mt^2*mh^4*s12*s13 + 1/4*denom(1/2*s12)*mt^4*s24^3 + 3/4*
      denom(1/2*s12)*mt^4*s23*s24^2 + 3/4*denom(1/2*s12)*mt^4*s23^2*s24 + 1/4*
      denom(1/2*s12)*mt^4*s23^3 + 3/4*denom(1/2*s12)*mt^4*s14*s24^2 + 7/2*
      denom(1/2*s12)*mt^4*s14*s23*s24 + 11/4*denom(1/2*s12)*mt^4*s14*s23^2 + 3/
      4*denom(1/2*s12)*mt^4*s14^2*s24 + 11/4*denom(1/2*s12)*mt^4*s14^2*s23 + 1/
      4*denom(1/2*s12)*mt^4*s14^3 + 11/4*denom(1/2*s12)*mt^4*s13*s24^2 + 7/2*
      denom(1/2*s12)*mt^4*s13*s23*s24 + 3/4*denom(1/2*s12)*mt^4*s13*s23^2 + 7/
      2*denom(1/2*s12)*mt^4*s13*s14*s24 + 7/2*denom(1/2*s12)*mt^4*s13*s14*s23
       + 3/4*denom(1/2*s12)*mt^4*s13*s14^2 + 11/4*denom(1/2*s12)*mt^4*s13^2*
      s24 + 3/4*denom(1/2*s12)*mt^4*s13^2*s23 + 3/4*denom(1/2*s12)*mt^4*s13^2*
      s14 + 1/4*denom(1/2*s12)*mt^4*s13^3 + 9/4*denom(1/2*s12)*mt^4*s12*s24^2
       + 9/2*denom(1/2*s12)*mt^4*s12*s23*s24 + 9/4*denom(1/2*s12)*mt^4*s12*
      s23^2 + 9/2*denom(1/2*s12)*mt^4*s12*s14*s24 + 15/2*denom(1/2*s12)*mt^4*
      s12*s14*s23 + 9/4*denom(1/2*s12)*mt^4*s12*s14^2 + 15/2*denom(1/2*s12)*
      mt^4*s12*s13*s24 + 9/2*denom(1/2*s12)*mt^4*s12*s13*s23 + 9/2*denom(1/2*
      s12)*mt^4*s12*s13*s14 + 9/4*denom(1/2*s12)*mt^4*s12*s13^2 + 5/2*denom(1/
      2*s12)*mt^4*s12^2*s24 + 5/2*denom(1/2*s12)*mt^4*s12^2*s23 + 5/2*denom(1/
      2*s12)*mt^4*s12^2*s14 + 5/2*denom(1/2*s12)*mt^4*s12^2*s13 + 1/2*denom(1/
      2*s12)*mt^4*s12^3 - 1/4*denom(1/2*s12)*mt^4*mh^2*s24^2 - 1/2*denom(1/2*
      s12)*mt^4*mh^2*s23*s24 - 1/4*denom(1/2*s12)*mt^4*mh^2*s23^2 - 1/2*denom(
      1/2*s12)*mt^4*mh^2*s14*s24 - 3/2*denom(1/2*s12)*mt^4*mh^2*s14*s23 - 1/4*
      denom(1/2*s12)*mt^4*mh^2*s14^2 - 3/2*denom(1/2*s12)*mt^4*mh^2*s13*s24 - 
      1/2*denom(1/2*s12)*mt^4*mh^2*s13*s23 - 1/2*denom(1/2*s12)*mt^4*mh^2*s13*
      s14 - 1/4*denom(1/2*s12)*mt^4*mh^2*s13^2 - 5/2*denom(1/2*s12)*mt^4*mh^2*
      s12*s24 - 5/2*denom(1/2*s12)*mt^4*mh^2*s12*s23 - 5/2*denom(1/2*s12)*mt^4
      *mh^2*s12*s14 - 5/2*denom(1/2*s12)*mt^4*mh^2*s12*s13 - denom(1/2*s12)*
      mt^4*mh^2*s12^2 + 1/2*denom(1/2*s12)*mt^4*mh^4*s12 - 3/2*denom(1/2*s12)*
      mt^6*s24^2 - 3*denom(1/2*s12)*mt^6*s23*s24 - 3/2*denom(1/2*s12)*mt^6*
      s23^2 - 3*denom(1/2*s12)*mt^6*s14*s24 - 5*denom(1/2*s12)*mt^6*s14*s23 - 
      3/2*denom(1/2*s12)*mt^6*s14^2 - 5*denom(1/2*s12)*mt^6*s13*s24 - 3*denom(
      1/2*s12)*mt^6*s13*s23 - 3*denom(1/2*s12)*mt^6*s13*s14 - 3/2*denom(1/2*
      s12)*mt^6*s13^2 - 6*denom(1/2*s12)*mt^6*s12*s24 - 6*denom(1/2*s12)*mt^6*
      s12*s23 - 6*denom(1/2*s12)*mt^6*s12*s14 - 6*denom(1/2*s12)*mt^6*s12*s13
       - 3*denom(1/2*s12)*mt^6*s12^2 + denom(1/2*s12)*mt^6*mh^2*s24 + denom(1/
      2*s12)*mt^6*mh^2*s23 + denom(1/2*s12)*mt^6*mh^2*s14 + denom(1/2*s12)*
      mt^6*mh^2*s13 + 3*denom(1/2*s12)*mt^6*mh^2*s12 + 3*denom(1/2*s12)*mt^8*
      s24 + 3*denom(1/2*s12)*mt^8*s23 + 3*denom(1/2*s12)*mt^8*s14 + 3*denom(1/
      2*s12)*mt^8*s13 + 5*denom(1/2*s12)*mt^8*s12 - denom(1/2*s12)*mt^8*mh^2
       - 2*denom(1/2*s12)*mt^10 + 1/16*denom(1/4*s12^2)*s14^3*s23^3 + 3/16*
      denom(1/4*s12^2)*s13*s14^2*s23^2*s24 + 3/16*denom(1/4*s12^2)*s13^2*s14*
      s23*s24^2 + 1/16*denom(1/4*s12^2)*s13^3*s24^3 + 1/16*denom(1/4*s12^2)*
      s12*s14^2*s23^2*s24 + 1/16*denom(1/4*s12^2)*s12*s14^2*s23^3 + 1/16*
      denom(1/4*s12^2)*s12*s14^3*s23^2 + 1/8*denom(1/4*s12^2)*s12*s13*s14*s23*
      s24^2 + 1/8*denom(1/4*s12^2)*s12*s13*s14*s23^2*s24 + 1/8*denom(1/4*s12^2
      )*s12*s13*s14^2*s23*s24 + 1/16*denom(1/4*s12^2)*s12*s13*s14^2*s23^2 + 1/
      16*denom(1/4*s12^2)*s12*s13^2*s24^3 + 1/16*denom(1/4*s12^2)*s12*s13^2*
      s23*s24^2 + 1/16*denom(1/4*s12^2)*s12*s13^2*s14*s24^2 + 1/8*denom(1/4*
      s12^2)*s12*s13^2*s14*s23*s24 + 1/16*denom(1/4*s12^2)*s12*s13^3*s24^2 + 1/
      16*denom(1/4*s12^2)*s12^2*s14^2*s23^2 + 1/8*denom(1/4*s12^2)*s12^2*s13*
      s14*s23*s24 + 1/16*denom(1/4*s12^2)*s12^2*s13^2*s24^2 - 1/16*denom(1/4*
      s12^2)*mh^2*s12*s14^2*s23^2 - 1/8*denom(1/4*s12^2)*mh^2*s12*s13*s14*s23*
      s24 - 1/16*denom(1/4*s12^2)*mh^2*s12*s13^2*s24^2 - 3/16*denom(1/4*s12^2)
      *mt^2*s14^2*s23^2*s24 - 3/16*denom(1/4*s12^2)*mt^2*s14^2*s23^3 - 3/16*
      denom(1/4*s12^2)*mt^2*s14^3*s23^2 - 3/8*denom(1/4*s12^2)*mt^2*s13*s14*
      s23*s24^2 - 3/8*denom(1/4*s12^2)*mt^2*s13*s14*s23^2*s24 - 3/8*denom(1/4*
      s12^2)*mt^2*s13*s14^2*s23*s24 - 3/16*denom(1/4*s12^2)*mt^2*s13*s14^2*
      s23^2 - 3/16*denom(1/4*s12^2)*mt^2*s13^2*s24^3 - 3/16*denom(1/4*s12^2)*
      mt^2*s13^2*s23*s24^2 - 3/16*denom(1/4*s12^2)*mt^2*s13^2*s14*s24^2 - 3/8*
      denom(1/4*s12^2)*mt^2*s13^2*s14*s23*s24 - 3/16*denom(1/4*s12^2)*mt^2*
      s13^3*s24^2 - 1/8*denom(1/4*s12^2)*mt^2*s12*s14*s23*s24^2 - 1/4*denom(1/
      4*s12^2)*mt^2*s12*s14*s23^2*s24 - 1/8*denom(1/4*s12^2)*mt^2*s12*s14*
      s23^3 - 1/4*denom(1/4*s12^2)*mt^2*s12*s14^2*s23*s24 - 1/2*denom(1/4*
      s12^2)*mt^2*s12*s14^2*s23^2 - 1/8*denom(1/4*s12^2)*mt^2*s12*s14^3*s23 - 
      1/8*denom(1/4*s12^2)*mt^2*s12*s13*s24^3 - 1/4*denom(1/4*s12^2)*mt^2*s12*
      s13*s23*s24^2 - 1/8*denom(1/4*s12^2)*mt^2*s12*s13*s23^2*s24 - 1/4*denom(
      1/4*s12^2)*mt^2*s12*s13*s14*s24^2 - denom(1/4*s12^2)*mt^2*s12*s13*s14*
      s23*s24 - 1/4*denom(1/4*s12^2)*mt^2*s12*s13*s14*s23^2 - 1/8*denom(1/4*
      s12^2)*mt^2*s12*s13*s14^2*s24 - 1/4*denom(1/4*s12^2)*mt^2*s12*s13*s14^2*
      s23 - 1/2*denom(1/4*s12^2)*mt^2*s12*s13^2*s24^2 - 1/4*denom(1/4*s12^2)*
      mt^2*s12*s13^2*s23*s24 - 1/4*denom(1/4*s12^2)*mt^2*s12*s13^2*s14*s24 - 1/
      8*denom(1/4*s12^2)*mt^2*s12*s13^2*s14*s23 - 1/8*denom(1/4*s12^2)*mt^2*
      s12*s13^3*s24 - 1/8*denom(1/4*s12^2)*mt^2*s12^2*s14*s23*s24 - 1/8*denom(
      1/4*s12^2)*mt^2*s12^2*s14*s23^2 - 1/8*denom(1/4*s12^2)*mt^2*s12^2*s14^2*
      s23 - 1/8*denom(1/4*s12^2)*mt^2*s12^2*s13*s24^2 - 1/8*denom(1/4*s12^2)*
      mt^2*s12^2*s13*s23*s24 - 1/8*denom(1/4*s12^2)*mt^2*s12^2*s13*s14*s24 - 1/
      8*denom(1/4*s12^2)*mt^2*s12^2*s13*s14*s23 - 1/8*denom(1/4*s12^2)*mt^2*
      s12^2*s13^2*s24 + 1/8*denom(1/4*s12^2)*mt^2*mh^2*s12*s14*s23*s24 + 1/8*
      denom(1/4*s12^2)*mt^2*mh^2*s12*s14*s23^2 + 1/8*denom(1/4*s12^2)*mt^2*
      mh^2*s12*s14^2*s23 + 1/8*denom(1/4*s12^2)*mt^2*mh^2*s12*s13*s24^2 + 1/8*
      denom(1/4*s12^2)*mt^2*mh^2*s12*s13*s23*s24 + 1/8*denom(1/4*s12^2)*mt^2*
      mh^2*s12*s13*s14*s24 + 1/8*denom(1/4*s12^2)*mt^2*mh^2*s12*s13*s14*s23 + 
      1/8*denom(1/4*s12^2)*mt^2*mh^2*s12*s13^2*s24 + 3/16*denom(1/4*s12^2)*
      mt^4*s14*s23*s24^2 + 3/8*denom(1/4*s12^2)*mt^4*s14*s23^2*s24 + 3/16*
      denom(1/4*s12^2)*mt^4*s14*s23^3 + 3/8*denom(1/4*s12^2)*mt^4*s14^2*s23*
      s24 + 3/4*denom(1/4*s12^2)*mt^4*s14^2*s23^2 + 3/16*denom(1/4*s12^2)*mt^4
      *s14^3*s23 + 3/16*denom(1/4*s12^2)*mt^4*s13*s24^3 + 3/8*denom(1/4*s12^2)
      *mt^4*s13*s23*s24^2 + 3/16*denom(1/4*s12^2)*mt^4*s13*s23^2*s24 + 3/8*
      denom(1/4*s12^2)*mt^4*s13*s14*s24^2 + 3/2*denom(1/4*s12^2)*mt^4*s13*s14*
      s23*s24 + 3/8*denom(1/4*s12^2)*mt^4*s13*s14*s23^2 + 3/16*denom(1/4*s12^2
      )*mt^4*s13*s14^2*s24 + 3/8*denom(1/4*s12^2)*mt^4*s13*s14^2*s23 + 3/4*
      denom(1/4*s12^2)*mt^4*s13^2*s24^2 + 3/8*denom(1/4*s12^2)*mt^4*s13^2*s23*
      s24 + 3/8*denom(1/4*s12^2)*mt^4*s13^2*s14*s24 + 3/16*denom(1/4*s12^2)*
      mt^4*s13^2*s14*s23 + 3/16*denom(1/4*s12^2)*mt^4*s13^3*s24 + 1/16*denom(1/
      4*s12^2)*mt^4*s12*s24^3 + 3/16*denom(1/4*s12^2)*mt^4*s12*s23*s24^2 + 3/
      16*denom(1/4*s12^2)*mt^4*s12*s23^2*s24 + 1/16*denom(1/4*s12^2)*mt^4*s12*
      s23^3 + 3/16*denom(1/4*s12^2)*mt^4*s12*s14*s24^2 + 9/8*denom(1/4*s12^2)*
      mt^4*s12*s14*s23*s24 + 15/16*denom(1/4*s12^2)*mt^4*s12*s14*s23^2 + 3/16*
      denom(1/4*s12^2)*mt^4*s12*s14^2*s24 + 15/16*denom(1/4*s12^2)*mt^4*s12*
      s14^2*s23 + 1/16*denom(1/4*s12^2)*mt^4*s12*s14^3 + 15/16*denom(1/4*s12^2
      )*mt^4*s12*s13*s24^2 + 9/8*denom(1/4*s12^2)*mt^4*s12*s13*s23*s24 + 3/16*
      denom(1/4*s12^2)*mt^4*s12*s13*s23^2 + 9/8*denom(1/4*s12^2)*mt^4*s12*s13*
      s14*s24 + 9/8*denom(1/4*s12^2)*mt^4*s12*s13*s14*s23 + 3/16*denom(1/4*
      s12^2)*mt^4*s12*s13*s14^2 + 15/16*denom(1/4*s12^2)*mt^4*s12*s13^2*s24 + 
      3/16*denom(1/4*s12^2)*mt^4*s12*s13^2*s23 + 3/16*denom(1/4*s12^2)*mt^4*
      s12*s13^2*s14 + 1/16*denom(1/4*s12^2)*mt^4*s12*s13^3 + 1/16*denom(1/4*
      s12^2)*mt^4*s12^2*s24^2 + 1/8*denom(1/4*s12^2)*mt^4*s12^2*s23*s24 + 1/16
      *denom(1/4*s12^2)*mt^4*s12^2*s23^2 + 1/8*denom(1/4*s12^2)*mt^4*s12^2*s14
      *s24 + 3/8*denom(1/4*s12^2)*mt^4*s12^2*s14*s23 + 1/16*denom(1/4*s12^2)*
      mt^4*s12^2*s14^2 + 3/8*denom(1/4*s12^2)*mt^4*s12^2*s13*s24 + 1/8*denom(1/
      4*s12^2)*mt^4*s12^2*s13*s23 + 1/8*denom(1/4*s12^2)*mt^4*s12^2*s13*s14 + 
      1/16*denom(1/4*s12^2)*mt^4*s12^2*s13^2 - 1/16*denom(1/4*s12^2)*mt^4*mh^2
      *s12*s24^2 - 1/8*denom(1/4*s12^2)*mt^4*mh^2*s12*s23*s24 - 1/16*denom(1/4
      *s12^2)*mt^4*mh^2*s12*s23^2 - 1/8*denom(1/4*s12^2)*mt^4*mh^2*s12*s14*s24
       - 3/8*denom(1/4*s12^2)*mt^4*mh^2*s12*s14*s23 - 1/16*denom(1/4*s12^2)*
      mt^4*mh^2*s12*s14^2 - 3/8*denom(1/4*s12^2)*mt^4*mh^2*s12*s13*s24 - 1/8*
      denom(1/4*s12^2)*mt^4*mh^2*s12*s13*s23 - 1/8*denom(1/4*s12^2)*mt^4*mh^2*
      s12*s13*s14 - 1/16*denom(1/4*s12^2)*mt^4*mh^2*s12*s13^2 - 1/16*denom(1/4
      *s12^2)*mt^6*s24^3 - 3/16*denom(1/4*s12^2)*mt^6*s23*s24^2 - 3/16*denom(1/
      4*s12^2)*mt^6*s23^2*s24 - 1/16*denom(1/4*s12^2)*mt^6*s23^3 - 3/16*denom(
      1/4*s12^2)*mt^6*s14*s24^2 - 9/8*denom(1/4*s12^2)*mt^6*s14*s23*s24 - 15/
      16*denom(1/4*s12^2)*mt^6*s14*s23^2 - 3/16*denom(1/4*s12^2)*mt^6*s14^2*
      s24 - 15/16*denom(1/4*s12^2)*mt^6*s14^2*s23 - 1/16*denom(1/4*s12^2)*mt^6
      *s14^3 - 15/16*denom(1/4*s12^2)*mt^6*s13*s24^2 - 9/8*denom(1/4*s12^2)*
      mt^6*s13*s23*s24 - 3/16*denom(1/4*s12^2)*mt^6*s13*s23^2 - 9/8*denom(1/4*
      s12^2)*mt^6*s13*s14*s24 - 9/8*denom(1/4*s12^2)*mt^6*s13*s14*s23 - 3/16*
      denom(1/4*s12^2)*mt^6*s13*s14^2 - 15/16*denom(1/4*s12^2)*mt^6*s13^2*s24
       - 3/16*denom(1/4*s12^2)*mt^6*s13^2*s23 - 3/16*denom(1/4*s12^2)*mt^6*
      s13^2*s14 - 1/16*denom(1/4*s12^2)*mt^6*s13^3 - 1/2*denom(1/4*s12^2)*mt^6
      *s12*s24^2 - denom(1/4*s12^2)*mt^6*s12*s23*s24 - 1/2*denom(1/4*s12^2)*
      mt^6*s12*s23^2 - denom(1/4*s12^2)*mt^6*s12*s14*s24 - 2*denom(1/4*s12^2)*
      mt^6*s12*s14*s23 - 1/2*denom(1/4*s12^2)*mt^6*s12*s14^2 - 2*denom(1/4*
      s12^2)*mt^6*s12*s13*s24 - denom(1/4*s12^2)*mt^6*s12*s13*s23 - denom(1/4*
      s12^2)*mt^6*s12*s13*s14 - 1/2*denom(1/4*s12^2)*mt^6*s12*s13^2 - 1/4*
      denom(1/4*s12^2)*mt^6*s12^2*s24 - 1/4*denom(1/4*s12^2)*mt^6*s12^2*s23 - 
      1/4*denom(1/4*s12^2)*mt^6*s12^2*s14 - 1/4*denom(1/4*s12^2)*mt^6*s12^2*
      s13 + 1/4*denom(1/4*s12^2)*mt^6*mh^2*s12*s24 + 1/4*denom(1/4*s12^2)*mt^6
      *mh^2*s12*s23 + 1/4*denom(1/4*s12^2)*mt^6*mh^2*s12*s14 + 1/4*denom(1/4*
      s12^2)*mt^6*mh^2*s12*s13 + 3/8*denom(1/4*s12^2)*mt^8*s24^2 + 3/4*denom(1/
      4*s12^2)*mt^8*s23*s24 + 3/8*denom(1/4*s12^2)*mt^8*s23^2 + 3/4*denom(1/4*
      s12^2)*mt^8*s14*s24 + 3/2*denom(1/4*s12^2)*mt^8*s14*s23 + 3/8*denom(1/4*
      s12^2)*mt^8*s14^2 + 3/2*denom(1/4*s12^2)*mt^8*s13*s24 + 3/4*denom(1/4*
      s12^2)*mt^8*s13*s23 + 3/4*denom(1/4*s12^2)*mt^8*s13*s14 + 3/8*denom(1/4*
      s12^2)*mt^8*s13^2 + 5/4*denom(1/4*s12^2)*mt^8*s12*s24 + 5/4*denom(1/4*
      s12^2)*mt^8*s12*s23 + 5/4*denom(1/4*s12^2)*mt^8*s12*s14 + 5/4*denom(1/4*
      s12^2)*mt^8*s12*s13 + 1/4*denom(1/4*s12^2)*mt^8*s12^2 - 1/4*denom(1/4*
      s12^2)*mt^8*mh^2*s12 - 3/4*denom(1/4*s12^2)*mt^10*s24 - 3/4*denom(1/4*
      s12^2)*mt^10*s23 - 3/4*denom(1/4*s12^2)*mt^10*s14 - 3/4*denom(1/4*s12^2)
      *mt^10*s13 - denom(1/4*s12^2)*mt^10*s12 + 1/2*denom(1/4*s12^2)*mt^12;
 
 .sort
id KMatrix(9,9) =  2*mt^4*s23*s24 - 2*mt^6*s24 - 2*mt^6*s23 + 2*mt^8 - 2*
      denom(1/2*s12)*mt^2*s13*s23^2*s24 + 2*denom(1/2*s12)*mt^4*s23^2*s24 + 4*
      denom(1/2*s12)*mt^4*s13*s23*s24 + 2*denom(1/2*s12)*mt^4*s13*s23^2 - 4*
      denom(1/2*s12)*mt^6*s23*s24 - 2*denom(1/2*s12)*mt^6*s23^2 - 2*denom(1/2*
      s12)*mt^6*s13*s24 - 4*denom(1/2*s12)*mt^6*s13*s23 + 2*denom(1/2*s12)*
      mt^8*s24 + 4*denom(1/2*s12)*mt^8*s23 + 2*denom(1/2*s12)*mt^8*s13 - 2*
      denom(1/2*s12)*mt^10 + 1/2*denom(1/4*s12^2)*s13^2*s23^3*s24 - denom(1/4*
      s12^2)*mt^2*s13*s23^3*s24 - 3/2*denom(1/4*s12^2)*mt^2*s13^2*s23^2*s24 - 
      1/2*denom(1/4*s12^2)*mt^2*s13^2*s23^3 + 1/2*denom(1/4*s12^2)*mt^4*s23^3*
      s24 + 3*denom(1/4*s12^2)*mt^4*s13*s23^2*s24 + denom(1/4*s12^2)*mt^4*s13*
      s23^3 + 3/2*denom(1/4*s12^2)*mt^4*s13^2*s23*s24 + 3/2*denom(1/4*s12^2)*
      mt^4*s13^2*s23^2 - 3/2*denom(1/4*s12^2)*mt^6*s23^2*s24 - 1/2*denom(1/4*
      s12^2)*mt^6*s23^3 - 3*denom(1/4*s12^2)*mt^6*s13*s23*s24 - 3*denom(1/4*
      s12^2)*mt^6*s13*s23^2 - 1/2*denom(1/4*s12^2)*mt^6*s13^2*s24 - 3/2*denom(
      1/4*s12^2)*mt^6*s13^2*s23 + 3/2*denom(1/4*s12^2)*mt^8*s23*s24 + 3/2*
      denom(1/4*s12^2)*mt^8*s23^2 + denom(1/4*s12^2)*mt^8*s13*s24 + 3*denom(1/
      4*s12^2)*mt^8*s13*s23 + 1/2*denom(1/4*s12^2)*mt^8*s13^2 - 1/2*denom(1/4*
      s12^2)*mt^10*s24 - 3/2*denom(1/4*s12^2)*mt^10*s23 - denom(1/4*s12^2)*
      mt^10*s13 + 1/2*denom(1/4*s12^2)*mt^12;
 
 .sort
id KMatrix(9,10) =   - mt^2*s23*s24^2 - mt^2*s23^2*s24 - mt^2*s14*s23*s24 - 
      mt^2*s13*s23*s24 - mt^2*s12*s23*s24 + mt^2*mh^2*s23*s24 + mt^4*s24^2 + 4
      *mt^4*s23*s24 + mt^4*s23^2 + mt^4*s14*s24 + mt^4*s14*s23 + mt^4*s13*s24
       + mt^4*s13*s23 + mt^4*s12*s24 + mt^4*s12*s23 - mt^4*mh^2*s24 - mt^4*
      mh^2*s23 - 3*mt^6*s24 - 3*mt^6*s23 - mt^6*s14 - mt^6*s13 - mt^6*s12 + 
      mt^6*mh^2 + 2*mt^8 + 1/2*denom(1/2*s12)*s13*s23^2*s24^2 + 1/2*denom(1/2*
      s12)*s13*s23^3*s24 + 1/2*denom(1/2*s12)*s13*s14*s23^2*s24 + 1/2*denom(1/
      2*s12)*s13^2*s23^2*s24 + 1/2*denom(1/2*s12)*s12*s13*s23^2*s24 - 1/2*
      denom(1/2*s12)*mh^2*s13*s23^2*s24 - 1/2*denom(1/2*s12)*mt^2*s23^2*s24^2
       - 1/2*denom(1/2*s12)*mt^2*s23^3*s24 - denom(1/2*s12)*mt^2*s14*s23^2*s24
       - 3/2*denom(1/2*s12)*mt^2*s13*s23*s24^2 - 3*denom(1/2*s12)*mt^2*s13*
      s23^2*s24 - 1/2*denom(1/2*s12)*mt^2*s13*s23^3 - denom(1/2*s12)*mt^2*s13*
      s14*s23*s24 - 1/2*denom(1/2*s12)*mt^2*s13*s14*s23^2 - denom(1/2*s12)*
      mt^2*s13^2*s23*s24 - 1/2*denom(1/2*s12)*mt^2*s13^2*s23^2 - 1/2*denom(1/2
      *s12)*mt^2*s12*s23^2*s24 - denom(1/2*s12)*mt^2*s12*s13*s23*s24 - 1/2*
      denom(1/2*s12)*mt^2*s12*s13*s23^2 + 1/2*denom(1/2*s12)*mt^2*mh^2*s23^2*
      s24 + denom(1/2*s12)*mt^2*mh^2*s13*s23*s24 + 1/2*denom(1/2*s12)*mt^2*
      mh^2*s13*s23^2 + 3/2*denom(1/2*s12)*mt^4*s23*s24^2 + 3*denom(1/2*s12)*
      mt^4*s23^2*s24 + 1/2*denom(1/2*s12)*mt^4*s23^3 + 2*denom(1/2*s12)*mt^4*
      s14*s23*s24 + denom(1/2*s12)*mt^4*s14*s23^2 + denom(1/2*s12)*mt^4*s13*
      s24^2 + 11/2*denom(1/2*s12)*mt^4*s13*s23*s24 + 5/2*denom(1/2*s12)*mt^4*
      s13*s23^2 + 1/2*denom(1/2*s12)*mt^4*s13*s14*s24 + denom(1/2*s12)*mt^4*
      s13*s14*s23 + 1/2*denom(1/2*s12)*mt^4*s13^2*s24 + denom(1/2*s12)*mt^4*
      s13^2*s23 + denom(1/2*s12)*mt^4*s12*s23*s24 + 1/2*denom(1/2*s12)*mt^4*
      s12*s23^2 + 1/2*denom(1/2*s12)*mt^4*s12*s13*s24 + denom(1/2*s12)*mt^4*
      s12*s13*s23 - denom(1/2*s12)*mt^4*mh^2*s23*s24 - 1/2*denom(1/2*s12)*mt^4
      *mh^2*s23^2 - 1/2*denom(1/2*s12)*mt^4*mh^2*s13*s24 - denom(1/2*s12)*mt^4
      *mh^2*s13*s23 - denom(1/2*s12)*mt^6*s24^2 - 11/2*denom(1/2*s12)*mt^6*s23
      *s24 - 5/2*denom(1/2*s12)*mt^6*s23^2 - denom(1/2*s12)*mt^6*s14*s24 - 2*
      denom(1/2*s12)*mt^6*s14*s23 - 3*denom(1/2*s12)*mt^6*s13*s24 - 4*denom(1/
      2*s12)*mt^6*s13*s23 - 1/2*denom(1/2*s12)*mt^6*s13*s14 - 1/2*denom(1/2*
      s12)*mt^6*s13^2 - 1/2*denom(1/2*s12)*mt^6*s12*s24 - denom(1/2*s12)*mt^6*
      s12*s23 - 1/2*denom(1/2*s12)*mt^6*s12*s13 + 1/2*denom(1/2*s12)*mt^6*mh^2
      *s24 + denom(1/2*s12)*mt^6*mh^2*s23 + 1/2*denom(1/2*s12)*mt^6*mh^2*s13
       + 3*denom(1/2*s12)*mt^8*s24 + 4*denom(1/2*s12)*mt^8*s23 + denom(1/2*s12
      )*mt^8*s14 + 2*denom(1/2*s12)*mt^8*s13 + 1/2*denom(1/2*s12)*mt^8*s12 - 1/
      2*denom(1/2*s12)*mt^8*mh^2 - 2*denom(1/2*s12)*mt^10 + 1/4*denom(1/4*
      s12^2)*s13*s14*s23^3*s24 + 1/4*denom(1/4*s12^2)*s13^2*s23^2*s24^2 - 1/4*
      denom(1/4*s12^2)*mt^2*s14*s23^3*s24 - 1/2*denom(1/4*s12^2)*mt^2*s13*
      s23^2*s24^2 - 1/4*denom(1/4*s12^2)*mt^2*s13*s23^3*s24 - 3/4*denom(1/4*
      s12^2)*mt^2*s13*s14*s23^2*s24 - 1/4*denom(1/4*s12^2)*mt^2*s13*s14*s23^3
       - 1/2*denom(1/4*s12^2)*mt^2*s13^2*s23*s24^2 - 1/2*denom(1/4*s12^2)*mt^2
      *s13^2*s23^2*s24 + 1/4*denom(1/4*s12^2)*mt^4*s23^2*s24^2 + 1/4*denom(1/4
      *s12^2)*mt^4*s23^3*s24 + 3/4*denom(1/4*s12^2)*mt^4*s14*s23^2*s24 + 1/4*
      denom(1/4*s12^2)*mt^4*s14*s23^3 + denom(1/4*s12^2)*mt^4*s13*s23*s24^2 + 
      7/4*denom(1/4*s12^2)*mt^4*s13*s23^2*s24 + 1/4*denom(1/4*s12^2)*mt^4*s13*
      s23^3 + 3/4*denom(1/4*s12^2)*mt^4*s13*s14*s23*s24 + 3/4*denom(1/4*s12^2)
      *mt^4*s13*s14*s23^2 + 1/4*denom(1/4*s12^2)*mt^4*s13^2*s24^2 + denom(1/4*
      s12^2)*mt^4*s13^2*s23*s24 + 1/4*denom(1/4*s12^2)*mt^4*s13^2*s23^2 - 1/2*
      denom(1/4*s12^2)*mt^6*s23*s24^2 - 5/4*denom(1/4*s12^2)*mt^6*s23^2*s24 - 
      1/4*denom(1/4*s12^2)*mt^6*s23^3 - 3/4*denom(1/4*s12^2)*mt^6*s14*s23*s24
       - 3/4*denom(1/4*s12^2)*mt^6*s14*s23^2 - 1/2*denom(1/4*s12^2)*mt^6*s13*
      s24^2 - 11/4*denom(1/4*s12^2)*mt^6*s13*s23*s24 - 5/4*denom(1/4*s12^2)*
      mt^6*s13*s23^2 - 1/4*denom(1/4*s12^2)*mt^6*s13*s14*s24 - 3/4*denom(1/4*
      s12^2)*mt^6*s13*s14*s23 - 1/2*denom(1/4*s12^2)*mt^6*s13^2*s24 - 1/2*
      denom(1/4*s12^2)*mt^6*s13^2*s23 + 1/4*denom(1/4*s12^2)*mt^8*s24^2 + 7/4*
      denom(1/4*s12^2)*mt^8*s23*s24 + denom(1/4*s12^2)*mt^8*s23^2 + 1/4*denom(
      1/4*s12^2)*mt^8*s14*s24 + 3/4*denom(1/4*s12^2)*mt^8*s14*s23 + 5/4*denom(
      1/4*s12^2)*mt^8*s13*s24 + 7/4*denom(1/4*s12^2)*mt^8*s13*s23 + 1/4*denom(
      1/4*s12^2)*mt^8*s13*s14 + 1/4*denom(1/4*s12^2)*mt^8*s13^2 - 3/4*denom(1/
      4*s12^2)*mt^10*s24 - 5/4*denom(1/4*s12^2)*mt^10*s23 - 1/4*denom(1/4*
      s12^2)*mt^10*s14 - 3/4*denom(1/4*s12^2)*mt^10*s13 + 1/2*denom(1/4*s12^2)
      *mt^12;
 
 .sort
id KMatrix(9,11) =   - mt^2*s23*s24^2 - mt^2*s23^2*s24 - mt^2*s14*s23*s24 - 
      mt^2*s13*s23*s24 - mt^2*s12*s23*s24 + mt^2*mh^2*s23*s24 + mt^4*s24^2 + 4
      *mt^4*s23*s24 + mt^4*s23^2 + mt^4*s14*s24 + mt^4*s14*s23 + mt^4*s13*s24
       + mt^4*s13*s23 + mt^4*s12*s24 + mt^4*s12*s23 - mt^4*mh^2*s24 - mt^4*
      mh^2*s23 - 3*mt^6*s24 - 3*mt^6*s23 - mt^6*s14 - mt^6*s13 - mt^6*s12 + 
      mt^6*mh^2 + 2*mt^8 + 1/2*denom(1/2*s12)*s13*s23^2*s24^2 + 1/2*denom(1/2*
      s12)*s13*s23^3*s24 + 1/2*denom(1/2*s12)*s13*s14*s23^2*s24 + 1/2*denom(1/
      2*s12)*s13^2*s23^2*s24 + 1/2*denom(1/2*s12)*s12*s13*s23^2*s24 - 1/2*
      denom(1/2*s12)*mh^2*s13*s23^2*s24 - 1/2*denom(1/2*s12)*mt^2*s23^2*s24^2
       - 1/2*denom(1/2*s12)*mt^2*s23^3*s24 - denom(1/2*s12)*mt^2*s14*s23^2*s24
       - 3/2*denom(1/2*s12)*mt^2*s13*s23*s24^2 - 3*denom(1/2*s12)*mt^2*s13*
      s23^2*s24 - 1/2*denom(1/2*s12)*mt^2*s13*s23^3 - denom(1/2*s12)*mt^2*s13*
      s14*s23*s24 - 1/2*denom(1/2*s12)*mt^2*s13*s14*s23^2 - denom(1/2*s12)*
      mt^2*s13^2*s23*s24 - 1/2*denom(1/2*s12)*mt^2*s13^2*s23^2 - 1/2*denom(1/2
      *s12)*mt^2*s12*s23^2*s24 - denom(1/2*s12)*mt^2*s12*s13*s23*s24 - 1/2*
      denom(1/2*s12)*mt^2*s12*s13*s23^2 + 1/2*denom(1/2*s12)*mt^2*mh^2*s23^2*
      s24 + denom(1/2*s12)*mt^2*mh^2*s13*s23*s24 + 1/2*denom(1/2*s12)*mt^2*
      mh^2*s13*s23^2 + 3/2*denom(1/2*s12)*mt^4*s23*s24^2 + 3*denom(1/2*s12)*
      mt^4*s23^2*s24 + 1/2*denom(1/2*s12)*mt^4*s23^3 + 2*denom(1/2*s12)*mt^4*
      s14*s23*s24 + denom(1/2*s12)*mt^4*s14*s23^2 + denom(1/2*s12)*mt^4*s13*
      s24^2 + 11/2*denom(1/2*s12)*mt^4*s13*s23*s24 + 5/2*denom(1/2*s12)*mt^4*
      s13*s23^2 + 1/2*denom(1/2*s12)*mt^4*s13*s14*s24 + denom(1/2*s12)*mt^4*
      s13*s14*s23 + 1/2*denom(1/2*s12)*mt^4*s13^2*s24 + denom(1/2*s12)*mt^4*
      s13^2*s23 + denom(1/2*s12)*mt^4*s12*s23*s24 + 1/2*denom(1/2*s12)*mt^4*
      s12*s23^2 + 1/2*denom(1/2*s12)*mt^4*s12*s13*s24 + denom(1/2*s12)*mt^4*
      s12*s13*s23 - denom(1/2*s12)*mt^4*mh^2*s23*s24 - 1/2*denom(1/2*s12)*mt^4
      *mh^2*s23^2 - 1/2*denom(1/2*s12)*mt^4*mh^2*s13*s24 - denom(1/2*s12)*mt^4
      *mh^2*s13*s23 - denom(1/2*s12)*mt^6*s24^2 - 11/2*denom(1/2*s12)*mt^6*s23
      *s24 - 5/2*denom(1/2*s12)*mt^6*s23^2 - denom(1/2*s12)*mt^6*s14*s24 - 2*
      denom(1/2*s12)*mt^6*s14*s23 - 3*denom(1/2*s12)*mt^6*s13*s24 - 4*denom(1/
      2*s12)*mt^6*s13*s23 - 1/2*denom(1/2*s12)*mt^6*s13*s14 - 1/2*denom(1/2*
      s12)*mt^6*s13^2 - 1/2*denom(1/2*s12)*mt^6*s12*s24 - denom(1/2*s12)*mt^6*
      s12*s23 - 1/2*denom(1/2*s12)*mt^6*s12*s13 + 1/2*denom(1/2*s12)*mt^6*mh^2
      *s24 + denom(1/2*s12)*mt^6*mh^2*s23 + 1/2*denom(1/2*s12)*mt^6*mh^2*s13
       + 3*denom(1/2*s12)*mt^8*s24 + 4*denom(1/2*s12)*mt^8*s23 + denom(1/2*s12
      )*mt^8*s14 + 2*denom(1/2*s12)*mt^8*s13 + 1/2*denom(1/2*s12)*mt^8*s12 - 1/
      2*denom(1/2*s12)*mt^8*mh^2 - 2*denom(1/2*s12)*mt^10 + 1/4*denom(1/4*
      s12^2)*s13*s14*s23^3*s24 + 1/4*denom(1/4*s12^2)*s13^2*s23^2*s24^2 - 1/4*
      denom(1/4*s12^2)*mt^2*s14*s23^3*s24 - 1/2*denom(1/4*s12^2)*mt^2*s13*
      s23^2*s24^2 - 1/4*denom(1/4*s12^2)*mt^2*s13*s23^3*s24 - 3/4*denom(1/4*
      s12^2)*mt^2*s13*s14*s23^2*s24 - 1/4*denom(1/4*s12^2)*mt^2*s13*s14*s23^3
       - 1/2*denom(1/4*s12^2)*mt^2*s13^2*s23*s24^2 - 1/2*denom(1/4*s12^2)*mt^2
      *s13^2*s23^2*s24 + 1/4*denom(1/4*s12^2)*mt^4*s23^2*s24^2 + 1/4*denom(1/4
      *s12^2)*mt^4*s23^3*s24 + 3/4*denom(1/4*s12^2)*mt^4*s14*s23^2*s24 + 1/4*
      denom(1/4*s12^2)*mt^4*s14*s23^3 + denom(1/4*s12^2)*mt^4*s13*s23*s24^2 + 
      7/4*denom(1/4*s12^2)*mt^4*s13*s23^2*s24 + 1/4*denom(1/4*s12^2)*mt^4*s13*
      s23^3 + 3/4*denom(1/4*s12^2)*mt^4*s13*s14*s23*s24 + 3/4*denom(1/4*s12^2)
      *mt^4*s13*s14*s23^2 + 1/4*denom(1/4*s12^2)*mt^4*s13^2*s24^2 + denom(1/4*
      s12^2)*mt^4*s13^2*s23*s24 + 1/4*denom(1/4*s12^2)*mt^4*s13^2*s23^2 - 1/2*
      denom(1/4*s12^2)*mt^6*s23*s24^2 - 5/4*denom(1/4*s12^2)*mt^6*s23^2*s24 - 
      1/4*denom(1/4*s12^2)*mt^6*s23^3 - 3/4*denom(1/4*s12^2)*mt^6*s14*s23*s24
       - 3/4*denom(1/4*s12^2)*mt^6*s14*s23^2 - 1/2*denom(1/4*s12^2)*mt^6*s13*
      s24^2 - 11/4*denom(1/4*s12^2)*mt^6*s13*s23*s24 - 5/4*denom(1/4*s12^2)*
      mt^6*s13*s23^2 - 1/4*denom(1/4*s12^2)*mt^6*s13*s14*s24 - 3/4*denom(1/4*
      s12^2)*mt^6*s13*s14*s23 - 1/2*denom(1/4*s12^2)*mt^6*s13^2*s24 - 1/2*
      denom(1/4*s12^2)*mt^6*s13^2*s23 + 1/4*denom(1/4*s12^2)*mt^8*s24^2 + 7/4*
      denom(1/4*s12^2)*mt^8*s23*s24 + denom(1/4*s12^2)*mt^8*s23^2 + 1/4*denom(
      1/4*s12^2)*mt^8*s14*s24 + 3/4*denom(1/4*s12^2)*mt^8*s14*s23 + 5/4*denom(
      1/4*s12^2)*mt^8*s13*s24 + 7/4*denom(1/4*s12^2)*mt^8*s13*s23 + 1/4*denom(
      1/4*s12^2)*mt^8*s13*s14 + 1/4*denom(1/4*s12^2)*mt^8*s13^2 - 3/4*denom(1/
      4*s12^2)*mt^10*s24 - 5/4*denom(1/4*s12^2)*mt^10*s23 - 1/4*denom(1/4*
      s12^2)*mt^10*s14 - 3/4*denom(1/4*s12^2)*mt^10*s13 + 1/2*denom(1/4*s12^2)
      *mt^12;
 
 .sort
id KMatrix(9,12) =  1/2*s23*s24^3 + s23^2*s24^2 + 1/2*s23^3*s24 + s14*s23*
      s24^2 + s14*s23^2*s24 + 1/2*s14^2*s23*s24 + s13*s23*s24^2 + s13*s23^2*
      s24 + s13*s14*s23*s24 + 1/2*s13^2*s23*s24 + s12*s23*s24^2 + s12*s23^2*
      s24 + s12*s14*s23*s24 + s12*s13*s23*s24 + 1/2*s12^2*s23*s24 - mh^2*s23*
      s24^2 - mh^2*s23^2*s24 - mh^2*s14*s23*s24 - mh^2*s13*s23*s24 - mh^2*s12*
      s23*s24 + 1/2*mh^4*s23*s24 - 1/2*mt^2*s24^3 - 7/2*mt^2*s23*s24^2 - 7/2*
      mt^2*s23^2*s24 - 1/2*mt^2*s23^3 - mt^2*s14*s24^2 - 4*mt^2*s14*s23*s24 - 
      mt^2*s14*s23^2 - 1/2*mt^2*s14^2*s24 - 1/2*mt^2*s14^2*s23 - mt^2*s13*
      s24^2 - 4*mt^2*s13*s23*s24 - mt^2*s13*s23^2 - mt^2*s13*s14*s24 - mt^2*
      s13*s14*s23 - 1/2*mt^2*s13^2*s24 - 1/2*mt^2*s13^2*s23 - mt^2*s12*s24^2
       - 4*mt^2*s12*s23*s24 - mt^2*s12*s23^2 - mt^2*s12*s14*s24 - mt^2*s12*s14
      *s23 - mt^2*s12*s13*s24 - mt^2*s12*s13*s23 - 1/2*mt^2*s12^2*s24 - 1/2*
      mt^2*s12^2*s23 + mt^2*mh^2*s24^2 + 4*mt^2*mh^2*s23*s24 + mt^2*mh^2*s23^2
       + mt^2*mh^2*s14*s24 + mt^2*mh^2*s14*s23 + mt^2*mh^2*s13*s24 + mt^2*mh^2
      *s13*s23 + mt^2*mh^2*s12*s24 + mt^2*mh^2*s12*s23 - 1/2*mt^2*mh^4*s24 - 1/
      2*mt^2*mh^4*s23 + 5/2*mt^4*s24^2 + 7*mt^4*s23*s24 + 5/2*mt^4*s23^2 + 3*
      mt^4*s14*s24 + 3*mt^4*s14*s23 + 1/2*mt^4*s14^2 + 3*mt^4*s13*s24 + 3*mt^4
      *s13*s23 + mt^4*s13*s14 + 1/2*mt^4*s13^2 + 3*mt^4*s12*s24 + 3*mt^4*s12*
      s23 + mt^4*s12*s14 + mt^4*s12*s13 + 1/2*mt^4*s12^2 - 3*mt^4*mh^2*s24 - 3
      *mt^4*mh^2*s23 - mt^4*mh^2*s14 - mt^4*mh^2*s13 - mt^4*mh^2*s12 + 1/2*
      mt^4*mh^4 - 4*mt^6*s24 - 4*mt^6*s23 - 2*mt^6*s14 - 2*mt^6*s13 - 2*mt^6*
      s12 + 2*mt^6*mh^2 + 2*mt^8 + 1/2*denom(1/2*s12)*s14*s23^2*s24^2 + 1/2*
      denom(1/2*s12)*s14*s23^3*s24 + 1/2*denom(1/2*s12)*s14^2*s23^2*s24 + 1/2*
      denom(1/2*s12)*s13*s23*s24^3 + 1/2*denom(1/2*s12)*s13*s23^2*s24^2 + 1/2*
      denom(1/2*s12)*s13*s14*s23*s24^2 + 1/2*denom(1/2*s12)*s13*s14*s23^2*s24
       + 1/2*denom(1/2*s12)*s13^2*s23*s24^2 + 1/2*denom(1/2*s12)*s12*s14*s23^2
      *s24 + 1/2*denom(1/2*s12)*s12*s13*s23*s24^2 - 1/2*denom(1/2*s12)*mh^2*
      s14*s23^2*s24 - 1/2*denom(1/2*s12)*mh^2*s13*s23*s24^2 - 1/2*denom(1/2*
      s12)*mt^2*s23*s24^3 - denom(1/2*s12)*mt^2*s23^2*s24^2 - 1/2*denom(1/2*
      s12)*mt^2*s23^3*s24 - 3/2*denom(1/2*s12)*mt^2*s14*s23*s24^2 - 3*denom(1/
      2*s12)*mt^2*s14*s23^2*s24 - 1/2*denom(1/2*s12)*mt^2*s14*s23^3 - denom(1/
      2*s12)*mt^2*s14^2*s23*s24 - 1/2*denom(1/2*s12)*mt^2*s14^2*s23^2 - 1/2*
      denom(1/2*s12)*mt^2*s13*s24^3 - 3*denom(1/2*s12)*mt^2*s13*s23*s24^2 - 3/
      2*denom(1/2*s12)*mt^2*s13*s23^2*s24 - 1/2*denom(1/2*s12)*mt^2*s13*s14*
      s24^2 - 2*denom(1/2*s12)*mt^2*s13*s14*s23*s24 - 1/2*denom(1/2*s12)*mt^2*
      s13*s14*s23^2 - 1/2*denom(1/2*s12)*mt^2*s13^2*s24^2 - denom(1/2*s12)*
      mt^2*s13^2*s23*s24 - 1/2*denom(1/2*s12)*mt^2*s12*s23*s24^2 - 1/2*denom(1/
      2*s12)*mt^2*s12*s23^2*s24 - denom(1/2*s12)*mt^2*s12*s14*s23*s24 - 1/2*
      denom(1/2*s12)*mt^2*s12*s14*s23^2 - 1/2*denom(1/2*s12)*mt^2*s12*s13*
      s24^2 - denom(1/2*s12)*mt^2*s12*s13*s23*s24 + 1/2*denom(1/2*s12)*mt^2*
      mh^2*s23*s24^2 + 1/2*denom(1/2*s12)*mt^2*mh^2*s23^2*s24 + denom(1/2*s12)
      *mt^2*mh^2*s14*s23*s24 + 1/2*denom(1/2*s12)*mt^2*mh^2*s14*s23^2 + 1/2*
      denom(1/2*s12)*mt^2*mh^2*s13*s24^2 + denom(1/2*s12)*mt^2*mh^2*s13*s23*
      s24 + 1/2*denom(1/2*s12)*mt^4*s24^3 + 7/2*denom(1/2*s12)*mt^4*s23*s24^2
       + 7/2*denom(1/2*s12)*mt^4*s23^2*s24 + 1/2*denom(1/2*s12)*mt^4*s23^3 + 
      denom(1/2*s12)*mt^4*s14*s24^2 + 11/2*denom(1/2*s12)*mt^4*s14*s23*s24 + 5/
      2*denom(1/2*s12)*mt^4*s14*s23^2 + 1/2*denom(1/2*s12)*mt^4*s14^2*s24 + 
      denom(1/2*s12)*mt^4*s14^2*s23 + 5/2*denom(1/2*s12)*mt^4*s13*s24^2 + 11/2
      *denom(1/2*s12)*mt^4*s13*s23*s24 + denom(1/2*s12)*mt^4*s13*s23^2 + 3/2*
      denom(1/2*s12)*mt^4*s13*s14*s24 + 3/2*denom(1/2*s12)*mt^4*s13*s14*s23 + 
      denom(1/2*s12)*mt^4*s13^2*s24 + 1/2*denom(1/2*s12)*mt^4*s13^2*s23 + 1/2*
      denom(1/2*s12)*mt^4*s12*s24^2 + 2*denom(1/2*s12)*mt^4*s12*s23*s24 + 1/2*
      denom(1/2*s12)*mt^4*s12*s23^2 + 1/2*denom(1/2*s12)*mt^4*s12*s14*s24 + 
      denom(1/2*s12)*mt^4*s12*s14*s23 + denom(1/2*s12)*mt^4*s12*s13*s24 + 1/2*
      denom(1/2*s12)*mt^4*s12*s13*s23 - 1/2*denom(1/2*s12)*mt^4*mh^2*s24^2 - 2
      *denom(1/2*s12)*mt^4*mh^2*s23*s24 - 1/2*denom(1/2*s12)*mt^4*mh^2*s23^2
       - 1/2*denom(1/2*s12)*mt^4*mh^2*s14*s24 - denom(1/2*s12)*mt^4*mh^2*s14*
      s23 - denom(1/2*s12)*mt^4*mh^2*s13*s24 - 1/2*denom(1/2*s12)*mt^4*mh^2*
      s13*s23 - 5/2*denom(1/2*s12)*mt^6*s24^2 - 7*denom(1/2*s12)*mt^6*s23*s24
       - 5/2*denom(1/2*s12)*mt^6*s23^2 - 3*denom(1/2*s12)*mt^6*s14*s24 - 4*
      denom(1/2*s12)*mt^6*s14*s23 - 1/2*denom(1/2*s12)*mt^6*s14^2 - 4*denom(1/
      2*s12)*mt^6*s13*s24 - 3*denom(1/2*s12)*mt^6*s13*s23 - denom(1/2*s12)*
      mt^6*s13*s14 - 1/2*denom(1/2*s12)*mt^6*s13^2 - 3/2*denom(1/2*s12)*mt^6*
      s12*s24 - 3/2*denom(1/2*s12)*mt^6*s12*s23 - 1/2*denom(1/2*s12)*mt^6*s12*
      s14 - 1/2*denom(1/2*s12)*mt^6*s12*s13 + 3/2*denom(1/2*s12)*mt^6*mh^2*s24
       + 3/2*denom(1/2*s12)*mt^6*mh^2*s23 + 1/2*denom(1/2*s12)*mt^6*mh^2*s14
       + 1/2*denom(1/2*s12)*mt^6*mh^2*s13 + 4*denom(1/2*s12)*mt^8*s24 + 4*
      denom(1/2*s12)*mt^8*s23 + 2*denom(1/2*s12)*mt^8*s14 + 2*denom(1/2*s12)*
      mt^8*s13 + denom(1/2*s12)*mt^8*s12 - denom(1/2*s12)*mt^8*mh^2 - 2*denom(
      1/2*s12)*mt^10 + 1/8*denom(1/4*s12^2)*s14^2*s23^3*s24 + 1/4*denom(1/4*
      s12^2)*s13*s14*s23^2*s24^2 + 1/8*denom(1/4*s12^2)*s13^2*s23*s24^3 - 1/4*
      denom(1/4*s12^2)*mt^2*s14*s23^2*s24^2 - 1/4*denom(1/4*s12^2)*mt^2*s14*
      s23^3*s24 - 3/8*denom(1/4*s12^2)*mt^2*s14^2*s23^2*s24 - 1/8*denom(1/4*
      s12^2)*mt^2*s14^2*s23^3 - 1/4*denom(1/4*s12^2)*mt^2*s13*s23*s24^3 - 1/4*
      denom(1/4*s12^2)*mt^2*s13*s23^2*s24^2 - 1/2*denom(1/4*s12^2)*mt^2*s13*
      s14*s23*s24^2 - 1/2*denom(1/4*s12^2)*mt^2*s13*s14*s23^2*s24 - 1/8*denom(
      1/4*s12^2)*mt^2*s13^2*s24^3 - 3/8*denom(1/4*s12^2)*mt^2*s13^2*s23*s24^2
       + 1/8*denom(1/4*s12^2)*mt^4*s23*s24^3 + 1/4*denom(1/4*s12^2)*mt^4*s23^2
      *s24^2 + 1/8*denom(1/4*s12^2)*mt^4*s23^3*s24 + 1/2*denom(1/4*s12^2)*mt^4
      *s14*s23*s24^2 + 5/4*denom(1/4*s12^2)*mt^4*s14*s23^2*s24 + 1/4*denom(1/4
      *s12^2)*mt^4*s14*s23^3 + 3/8*denom(1/4*s12^2)*mt^4*s14^2*s23*s24 + 3/8*
      denom(1/4*s12^2)*mt^4*s14^2*s23^2 + 1/4*denom(1/4*s12^2)*mt^4*s13*s24^3
       + 5/4*denom(1/4*s12^2)*mt^4*s13*s23*s24^2 + 1/2*denom(1/4*s12^2)*mt^4*
      s13*s23^2*s24 + 1/4*denom(1/4*s12^2)*mt^4*s13*s14*s24^2 + denom(1/4*
      s12^2)*mt^4*s13*s14*s23*s24 + 1/4*denom(1/4*s12^2)*mt^4*s13*s14*s23^2 + 
      3/8*denom(1/4*s12^2)*mt^4*s13^2*s24^2 + 3/8*denom(1/4*s12^2)*mt^4*s13^2*
      s23*s24 - 1/8*denom(1/4*s12^2)*mt^6*s24^3 - 7/8*denom(1/4*s12^2)*mt^6*
      s23*s24^2 - 7/8*denom(1/4*s12^2)*mt^6*s23^2*s24 - 1/8*denom(1/4*s12^2)*
      mt^6*s23^3 - 1/4*denom(1/4*s12^2)*mt^6*s14*s24^2 - 7/4*denom(1/4*s12^2)*
      mt^6*s14*s23*s24 - denom(1/4*s12^2)*mt^6*s14*s23^2 - 1/8*denom(1/4*s12^2
      )*mt^6*s14^2*s24 - 3/8*denom(1/4*s12^2)*mt^6*s14^2*s23 - denom(1/4*s12^2
      )*mt^6*s13*s24^2 - 7/4*denom(1/4*s12^2)*mt^6*s13*s23*s24 - 1/4*denom(1/4
      *s12^2)*mt^6*s13*s23^2 - 1/2*denom(1/4*s12^2)*mt^6*s13*s14*s24 - 1/2*
      denom(1/4*s12^2)*mt^6*s13*s14*s23 - 3/8*denom(1/4*s12^2)*mt^6*s13^2*s24
       - 1/8*denom(1/4*s12^2)*mt^6*s13^2*s23 + 5/8*denom(1/4*s12^2)*mt^8*s24^2
       + 7/4*denom(1/4*s12^2)*mt^8*s23*s24 + 5/8*denom(1/4*s12^2)*mt^8*s23^2
       + 3/4*denom(1/4*s12^2)*mt^8*s14*s24 + 5/4*denom(1/4*s12^2)*mt^8*s14*s23
       + 1/8*denom(1/4*s12^2)*mt^8*s14^2 + 5/4*denom(1/4*s12^2)*mt^8*s13*s24
       + 3/4*denom(1/4*s12^2)*mt^8*s13*s23 + 1/4*denom(1/4*s12^2)*mt^8*s13*s14
       + 1/8*denom(1/4*s12^2)*mt^8*s13^2 - denom(1/4*s12^2)*mt^10*s24 - denom(
      1/4*s12^2)*mt^10*s23 - 1/2*denom(1/4*s12^2)*mt^10*s14 - 1/2*denom(1/4*
      s12^2)*mt^10*s13 + 1/2*denom(1/4*s12^2)*mt^12;
 
 .sort
id KMatrix(9,13) =   - 2*mt^5*s12*s23 + 2*mt^7*s12 + 2*denom(1/2*s12)*mt^3*s12
      *s13*s23^2 - 2*denom(1/2*s12)*mt^5*s12*s23^2 - 4*denom(1/2*s12)*mt^5*s12
      *s13*s23 + 4*denom(1/2*s12)*mt^7*s12*s23 + 2*denom(1/2*s12)*mt^7*s12*s13
       - 2*denom(1/2*s12)*mt^9*s12 - 1/2*denom(1/4*s12^2)*mt*s12*s13^2*s23^3
       + denom(1/4*s12^2)*mt^3*s12*s13*s23^3 + 3/2*denom(1/4*s12^2)*mt^3*s12*
      s13^2*s23^2 - 1/2*denom(1/4*s12^2)*mt^5*s12*s23^3 - 3*denom(1/4*s12^2)*
      mt^5*s12*s13*s23^2 - 3/2*denom(1/4*s12^2)*mt^5*s12*s13^2*s23 + 3/2*
      denom(1/4*s12^2)*mt^7*s12*s23^2 + 3*denom(1/4*s12^2)*mt^7*s12*s13*s23 + 
      1/2*denom(1/4*s12^2)*mt^7*s12*s13^2 - 3/2*denom(1/4*s12^2)*mt^9*s12*s23
       - denom(1/4*s12^2)*mt^9*s12*s13 + 1/2*denom(1/4*s12^2)*mt^11*s12;
 
 .sort
id KMatrix(9,14) =  mt^3*s12*s23*s24 + mt^3*s12*s23^2 + mt^3*s12*s14*s23 + 
      mt^3*s12*s13*s23 + mt^3*s12^2*s23 - mt^3*mh^2*s12*s23 - mt^5*s12*s24 - 3
      *mt^5*s12*s23 - mt^5*s12*s14 - mt^5*s12*s13 - mt^5*s12^2 + mt^5*mh^2*s12
       + 2*mt^7*s12 - 1/2*denom(1/2*s12)*mt*s12*s13*s23^2*s24 - 1/2*denom(1/2*
      s12)*mt*s12*s13*s23^3 - 1/2*denom(1/2*s12)*mt*s12*s13*s14*s23^2 - 1/2*
      denom(1/2*s12)*mt*s12*s13^2*s23^2 - 1/2*denom(1/2*s12)*mt*s12^2*s13*
      s23^2 + 1/2*denom(1/2*s12)*mt*mh^2*s12*s13*s23^2 + 1/2*denom(1/2*s12)*
      mt^3*s12*s23^2*s24 + 1/2*denom(1/2*s12)*mt^3*s12*s23^3 + denom(1/2*s12)*
      mt^3*s12*s14*s23^2 + 3/2*denom(1/2*s12)*mt^3*s12*s13*s23*s24 + 5/2*
      denom(1/2*s12)*mt^3*s12*s13*s23^2 + denom(1/2*s12)*mt^3*s12*s13*s14*s23
       + denom(1/2*s12)*mt^3*s12*s13^2*s23 + 1/2*denom(1/2*s12)*mt^3*s12^2*
      s23^2 + denom(1/2*s12)*mt^3*s12^2*s13*s23 - 1/2*denom(1/2*s12)*mt^3*mh^2
      *s12*s23^2 - denom(1/2*s12)*mt^3*mh^2*s12*s13*s23 - 3/2*denom(1/2*s12)*
      mt^5*s12*s23*s24 - 5/2*denom(1/2*s12)*mt^5*s12*s23^2 - 2*denom(1/2*s12)*
      mt^5*s12*s14*s23 - denom(1/2*s12)*mt^5*s12*s13*s24 - 4*denom(1/2*s12)*
      mt^5*s12*s13*s23 - 1/2*denom(1/2*s12)*mt^5*s12*s13*s14 - 1/2*denom(1/2*
      s12)*mt^5*s12*s13^2 - denom(1/2*s12)*mt^5*s12^2*s23 - 1/2*denom(1/2*s12)
      *mt^5*s12^2*s13 + denom(1/2*s12)*mt^5*mh^2*s12*s23 + 1/2*denom(1/2*s12)*
      mt^5*mh^2*s12*s13 + denom(1/2*s12)*mt^7*s12*s24 + 4*denom(1/2*s12)*mt^7*
      s12*s23 + denom(1/2*s12)*mt^7*s12*s14 + 2*denom(1/2*s12)*mt^7*s12*s13 + 
      1/2*denom(1/2*s12)*mt^7*s12^2 - 1/2*denom(1/2*s12)*mt^7*mh^2*s12 - 2*
      denom(1/2*s12)*mt^9*s12 - 1/4*denom(1/4*s12^2)*mt*s12*s13*s14*s23^3 - 1/
      4*denom(1/4*s12^2)*mt*s12*s13^2*s23^2*s24 + 1/4*denom(1/4*s12^2)*mt^3*
      s12*s14*s23^3 + 1/2*denom(1/4*s12^2)*mt^3*s12*s13*s23^2*s24 + 1/4*denom(
      1/4*s12^2)*mt^3*s12*s13*s23^3 + 3/4*denom(1/4*s12^2)*mt^3*s12*s13*s14*
      s23^2 + 1/2*denom(1/4*s12^2)*mt^3*s12*s13^2*s23*s24 + 1/4*denom(1/4*
      s12^2)*mt^3*s12*s13^2*s23^2 - 1/4*denom(1/4*s12^2)*mt^5*s12*s23^2*s24 - 
      1/4*denom(1/4*s12^2)*mt^5*s12*s23^3 - 3/4*denom(1/4*s12^2)*mt^5*s12*s14*
      s23^2 - denom(1/4*s12^2)*mt^5*s12*s13*s23*s24 - 5/4*denom(1/4*s12^2)*
      mt^5*s12*s13*s23^2 - 3/4*denom(1/4*s12^2)*mt^5*s12*s13*s14*s23 - 1/4*
      denom(1/4*s12^2)*mt^5*s12*s13^2*s24 - 1/2*denom(1/4*s12^2)*mt^5*s12*
      s13^2*s23 + 1/2*denom(1/4*s12^2)*mt^7*s12*s23*s24 + denom(1/4*s12^2)*
      mt^7*s12*s23^2 + 3/4*denom(1/4*s12^2)*mt^7*s12*s14*s23 + 1/2*denom(1/4*
      s12^2)*mt^7*s12*s13*s24 + 7/4*denom(1/4*s12^2)*mt^7*s12*s13*s23 + 1/4*
      denom(1/4*s12^2)*mt^7*s12*s13*s14 + 1/4*denom(1/4*s12^2)*mt^7*s12*s13^2
       - 1/4*denom(1/4*s12^2)*mt^9*s12*s24 - 5/4*denom(1/4*s12^2)*mt^9*s12*s23
       - 1/4*denom(1/4*s12^2)*mt^9*s12*s14 - 3/4*denom(1/4*s12^2)*mt^9*s12*s13
       + 1/2*denom(1/4*s12^2)*mt^11*s12;
 
 .sort
id KMatrix(9,15) =  mt^3*s12*s23*s24 + mt^3*s12*s23^2 + mt^3*s12*s14*s23 + 
      mt^3*s12*s13*s23 + mt^3*s12^2*s23 - mt^3*mh^2*s12*s23 - mt^5*s12*s24 - 3
      *mt^5*s12*s23 - mt^5*s12*s14 - mt^5*s12*s13 - mt^5*s12^2 + mt^5*mh^2*s12
       + 2*mt^7*s12 - 1/2*denom(1/2*s12)*mt*s12*s13*s23^2*s24 - 1/2*denom(1/2*
      s12)*mt*s12*s13*s23^3 - 1/2*denom(1/2*s12)*mt*s12*s13*s14*s23^2 - 1/2*
      denom(1/2*s12)*mt*s12*s13^2*s23^2 - 1/2*denom(1/2*s12)*mt*s12^2*s13*
      s23^2 + 1/2*denom(1/2*s12)*mt*mh^2*s12*s13*s23^2 + 1/2*denom(1/2*s12)*
      mt^3*s12*s23^2*s24 + 1/2*denom(1/2*s12)*mt^3*s12*s23^3 + denom(1/2*s12)*
      mt^3*s12*s14*s23^2 + 3/2*denom(1/2*s12)*mt^3*s12*s13*s23*s24 + 5/2*
      denom(1/2*s12)*mt^3*s12*s13*s23^2 + denom(1/2*s12)*mt^3*s12*s13*s14*s23
       + denom(1/2*s12)*mt^3*s12*s13^2*s23 + 1/2*denom(1/2*s12)*mt^3*s12^2*
      s23^2 + denom(1/2*s12)*mt^3*s12^2*s13*s23 - 1/2*denom(1/2*s12)*mt^3*mh^2
      *s12*s23^2 - denom(1/2*s12)*mt^3*mh^2*s12*s13*s23 - 3/2*denom(1/2*s12)*
      mt^5*s12*s23*s24 - 5/2*denom(1/2*s12)*mt^5*s12*s23^2 - 2*denom(1/2*s12)*
      mt^5*s12*s14*s23 - denom(1/2*s12)*mt^5*s12*s13*s24 - 4*denom(1/2*s12)*
      mt^5*s12*s13*s23 - 1/2*denom(1/2*s12)*mt^5*s12*s13*s14 - 1/2*denom(1/2*
      s12)*mt^5*s12*s13^2 - denom(1/2*s12)*mt^5*s12^2*s23 - 1/2*denom(1/2*s12)
      *mt^5*s12^2*s13 + denom(1/2*s12)*mt^5*mh^2*s12*s23 + 1/2*denom(1/2*s12)*
      mt^5*mh^2*s12*s13 + denom(1/2*s12)*mt^7*s12*s24 + 4*denom(1/2*s12)*mt^7*
      s12*s23 + denom(1/2*s12)*mt^7*s12*s14 + 2*denom(1/2*s12)*mt^7*s12*s13 + 
      1/2*denom(1/2*s12)*mt^7*s12^2 - 1/2*denom(1/2*s12)*mt^7*mh^2*s12 - 2*
      denom(1/2*s12)*mt^9*s12 - 1/4*denom(1/4*s12^2)*mt*s12*s13*s14*s23^3 - 1/
      4*denom(1/4*s12^2)*mt*s12*s13^2*s23^2*s24 + 1/4*denom(1/4*s12^2)*mt^3*
      s12*s14*s23^3 + 1/2*denom(1/4*s12^2)*mt^3*s12*s13*s23^2*s24 + 1/4*denom(
      1/4*s12^2)*mt^3*s12*s13*s23^3 + 3/4*denom(1/4*s12^2)*mt^3*s12*s13*s14*
      s23^2 + 1/2*denom(1/4*s12^2)*mt^3*s12*s13^2*s23*s24 + 1/4*denom(1/4*
      s12^2)*mt^3*s12*s13^2*s23^2 - 1/4*denom(1/4*s12^2)*mt^5*s12*s23^2*s24 - 
      1/4*denom(1/4*s12^2)*mt^5*s12*s23^3 - 3/4*denom(1/4*s12^2)*mt^5*s12*s14*
      s23^2 - denom(1/4*s12^2)*mt^5*s12*s13*s23*s24 - 5/4*denom(1/4*s12^2)*
      mt^5*s12*s13*s23^2 - 3/4*denom(1/4*s12^2)*mt^5*s12*s13*s14*s23 - 1/4*
      denom(1/4*s12^2)*mt^5*s12*s13^2*s24 - 1/2*denom(1/4*s12^2)*mt^5*s12*
      s13^2*s23 + 1/2*denom(1/4*s12^2)*mt^7*s12*s23*s24 + denom(1/4*s12^2)*
      mt^7*s12*s23^2 + 3/4*denom(1/4*s12^2)*mt^7*s12*s14*s23 + 1/2*denom(1/4*
      s12^2)*mt^7*s12*s13*s24 + 7/4*denom(1/4*s12^2)*mt^7*s12*s13*s23 + 1/4*
      denom(1/4*s12^2)*mt^7*s12*s13*s14 + 1/4*denom(1/4*s12^2)*mt^7*s12*s13^2
       - 1/4*denom(1/4*s12^2)*mt^9*s12*s24 - 5/4*denom(1/4*s12^2)*mt^9*s12*s23
       - 1/4*denom(1/4*s12^2)*mt^9*s12*s14 - 3/4*denom(1/4*s12^2)*mt^9*s12*s13
       + 1/2*denom(1/4*s12^2)*mt^11*s12;
 
 .sort
id KMatrix(9,16) =   - 1/2*mt*s12*s23*s24^2 - mt*s12*s23^2*s24 - 1/2*mt*s12*
      s23^3 - mt*s12*s14*s23*s24 - mt*s12*s14*s23^2 - 1/2*mt*s12*s14^2*s23 - 
      mt*s12*s13*s23*s24 - mt*s12*s13*s23^2 - mt*s12*s13*s14*s23 - 1/2*mt*s12*
      s13^2*s23 - mt*s12^2*s23*s24 - mt*s12^2*s23^2 - mt*s12^2*s14*s23 - mt*
      s12^2*s13*s23 - 1/2*mt*s12^3*s23 + mt*mh^2*s12*s23*s24 + mt*mh^2*s12*
      s23^2 + mt*mh^2*s12*s14*s23 + mt*mh^2*s12*s13*s23 + mt*mh^2*s12^2*s23 - 
      1/2*mt*mh^4*s12*s23 + 1/2*mt^3*s12*s24^2 + 3*mt^3*s12*s23*s24 + 5/2*mt^3
      *s12*s23^2 + mt^3*s12*s14*s24 + 3*mt^3*s12*s14*s23 + 1/2*mt^3*s12*s14^2
       + mt^3*s12*s13*s24 + 3*mt^3*s12*s13*s23 + mt^3*s12*s13*s14 + 1/2*mt^3*
      s12*s13^2 + mt^3*s12^2*s24 + 3*mt^3*s12^2*s23 + mt^3*s12^2*s14 + mt^3*
      s12^2*s13 + 1/2*mt^3*s12^3 - mt^3*mh^2*s12*s24 - 3*mt^3*mh^2*s12*s23 - 
      mt^3*mh^2*s12*s14 - mt^3*mh^2*s12*s13 - mt^3*mh^2*s12^2 + 1/2*mt^3*mh^4*
      s12 - 2*mt^5*s12*s24 - 4*mt^5*s12*s23 - 2*mt^5*s12*s14 - 2*mt^5*s12*s13
       - 2*mt^5*s12^2 + 2*mt^5*mh^2*s12 + 2*mt^7*s12 - 1/2*denom(1/2*s12)*mt*
      s12*s14*s23^2*s24 - 1/2*denom(1/2*s12)*mt*s12*s14*s23^3 - 1/2*denom(1/2*
      s12)*mt*s12*s14^2*s23^2 - 1/2*denom(1/2*s12)*mt*s12*s13*s23*s24^2 - 1/2*
      denom(1/2*s12)*mt*s12*s13*s23^2*s24 - 1/2*denom(1/2*s12)*mt*s12*s13*s14*
      s23*s24 - 1/2*denom(1/2*s12)*mt*s12*s13*s14*s23^2 - 1/2*denom(1/2*s12)*
      mt*s12*s13^2*s23*s24 - 1/2*denom(1/2*s12)*mt*s12^2*s14*s23^2 - 1/2*
      denom(1/2*s12)*mt*s12^2*s13*s23*s24 + 1/2*denom(1/2*s12)*mt*mh^2*s12*s14
      *s23^2 + 1/2*denom(1/2*s12)*mt*mh^2*s12*s13*s23*s24 + 1/2*denom(1/2*s12)
      *mt^3*s12*s23*s24^2 + denom(1/2*s12)*mt^3*s12*s23^2*s24 + 1/2*denom(1/2*
      s12)*mt^3*s12*s23^3 + 3/2*denom(1/2*s12)*mt^3*s12*s14*s23*s24 + 5/2*
      denom(1/2*s12)*mt^3*s12*s14*s23^2 + denom(1/2*s12)*mt^3*s12*s14^2*s23 + 
      1/2*denom(1/2*s12)*mt^3*s12*s13*s24^2 + 5/2*denom(1/2*s12)*mt^3*s12*s13*
      s23*s24 + denom(1/2*s12)*mt^3*s12*s13*s23^2 + 1/2*denom(1/2*s12)*mt^3*
      s12*s13*s14*s24 + 3/2*denom(1/2*s12)*mt^3*s12*s13*s14*s23 + 1/2*denom(1/
      2*s12)*mt^3*s12*s13^2*s24 + 1/2*denom(1/2*s12)*mt^3*s12*s13^2*s23 + 1/2*
      denom(1/2*s12)*mt^3*s12^2*s23*s24 + 1/2*denom(1/2*s12)*mt^3*s12^2*s23^2
       + denom(1/2*s12)*mt^3*s12^2*s14*s23 + 1/2*denom(1/2*s12)*mt^3*s12^2*s13
      *s24 + 1/2*denom(1/2*s12)*mt^3*s12^2*s13*s23 - 1/2*denom(1/2*s12)*mt^3*
      mh^2*s12*s23*s24 - 1/2*denom(1/2*s12)*mt^3*mh^2*s12*s23^2 - denom(1/2*
      s12)*mt^3*mh^2*s12*s14*s23 - 1/2*denom(1/2*s12)*mt^3*mh^2*s12*s13*s24 - 
      1/2*denom(1/2*s12)*mt^3*mh^2*s12*s13*s23 - 1/2*denom(1/2*s12)*mt^5*s12*
      s24^2 - 3*denom(1/2*s12)*mt^5*s12*s23*s24 - 5/2*denom(1/2*s12)*mt^5*s12*
      s23^2 - denom(1/2*s12)*mt^5*s12*s14*s24 - 4*denom(1/2*s12)*mt^5*s12*s14*
      s23 - 1/2*denom(1/2*s12)*mt^5*s12*s14^2 - 2*denom(1/2*s12)*mt^5*s12*s13*
      s24 - 3*denom(1/2*s12)*mt^5*s12*s13*s23 - denom(1/2*s12)*mt^5*s12*s13*
      s14 - 1/2*denom(1/2*s12)*mt^5*s12*s13^2 - 1/2*denom(1/2*s12)*mt^5*s12^2*
      s24 - 3/2*denom(1/2*s12)*mt^5*s12^2*s23 - 1/2*denom(1/2*s12)*mt^5*s12^2*
      s14 - 1/2*denom(1/2*s12)*mt^5*s12^2*s13 + 1/2*denom(1/2*s12)*mt^5*mh^2*
      s12*s24 + 3/2*denom(1/2*s12)*mt^5*mh^2*s12*s23 + 1/2*denom(1/2*s12)*mt^5
      *mh^2*s12*s14 + 1/2*denom(1/2*s12)*mt^5*mh^2*s12*s13 + 2*denom(1/2*s12)*
      mt^7*s12*s24 + 4*denom(1/2*s12)*mt^7*s12*s23 + 2*denom(1/2*s12)*mt^7*s12
      *s14 + 2*denom(1/2*s12)*mt^7*s12*s13 + denom(1/2*s12)*mt^7*s12^2 - 
      denom(1/2*s12)*mt^7*mh^2*s12 - 2*denom(1/2*s12)*mt^9*s12 - 1/8*denom(1/4
      *s12^2)*mt*s12*s14^2*s23^3 - 1/4*denom(1/4*s12^2)*mt*s12*s13*s14*s23^2*
      s24 - 1/8*denom(1/4*s12^2)*mt*s12*s13^2*s23*s24^2 + 1/4*denom(1/4*s12^2)
      *mt^3*s12*s14*s23^2*s24 + 1/4*denom(1/4*s12^2)*mt^3*s12*s14*s23^3 + 3/8*
      denom(1/4*s12^2)*mt^3*s12*s14^2*s23^2 + 1/4*denom(1/4*s12^2)*mt^3*s12*
      s13*s23*s24^2 + 1/4*denom(1/4*s12^2)*mt^3*s12*s13*s23^2*s24 + 1/2*denom(
      1/4*s12^2)*mt^3*s12*s13*s14*s23*s24 + 1/4*denom(1/4*s12^2)*mt^3*s12*s13*
      s14*s23^2 + 1/8*denom(1/4*s12^2)*mt^3*s12*s13^2*s24^2 + 1/4*denom(1/4*
      s12^2)*mt^3*s12*s13^2*s23*s24 - 1/8*denom(1/4*s12^2)*mt^5*s12*s23*s24^2
       - 1/4*denom(1/4*s12^2)*mt^5*s12*s23^2*s24 - 1/8*denom(1/4*s12^2)*mt^5*
      s12*s23^3 - 1/2*denom(1/4*s12^2)*mt^5*s12*s14*s23*s24 - denom(1/4*s12^2)
      *mt^5*s12*s14*s23^2 - 3/8*denom(1/4*s12^2)*mt^5*s12*s14^2*s23 - 1/4*
      denom(1/4*s12^2)*mt^5*s12*s13*s24^2 - denom(1/4*s12^2)*mt^5*s12*s13*s23*
      s24 - 1/4*denom(1/4*s12^2)*mt^5*s12*s13*s23^2 - 1/4*denom(1/4*s12^2)*
      mt^5*s12*s13*s14*s24 - 1/2*denom(1/4*s12^2)*mt^5*s12*s13*s14*s23 - 1/4*
      denom(1/4*s12^2)*mt^5*s12*s13^2*s24 - 1/8*denom(1/4*s12^2)*mt^5*s12*
      s13^2*s23 + 1/8*denom(1/4*s12^2)*mt^7*s12*s24^2 + 3/4*denom(1/4*s12^2)*
      mt^7*s12*s23*s24 + 5/8*denom(1/4*s12^2)*mt^7*s12*s23^2 + 1/4*denom(1/4*
      s12^2)*mt^7*s12*s14*s24 + 5/4*denom(1/4*s12^2)*mt^7*s12*s14*s23 + 1/8*
      denom(1/4*s12^2)*mt^7*s12*s14^2 + 3/4*denom(1/4*s12^2)*mt^7*s12*s13*s24
       + 3/4*denom(1/4*s12^2)*mt^7*s12*s13*s23 + 1/4*denom(1/4*s12^2)*mt^7*s12
      *s13*s14 + 1/8*denom(1/4*s12^2)*mt^7*s12*s13^2 - 1/2*denom(1/4*s12^2)*
      mt^9*s12*s24 - denom(1/4*s12^2)*mt^9*s12*s23 - 1/2*denom(1/4*s12^2)*mt^9
      *s12*s14 - 1/2*denom(1/4*s12^2)*mt^9*s12*s13 + 1/2*denom(1/4*s12^2)*
      mt^11*s12;
 
 .sort
id KMatrix(9,17) =  2*mt^3*s24 - 2*mt^3*s23 - 2*denom(1/2*s12)*mt*s13*s23*s24
       + 2*denom(1/2*s12)*mt*s13*s23^2 + 2*denom(1/2*s12)*mt^3*s23*s24 - 2*
      denom(1/2*s12)*mt^3*s23^2 + 2*denom(1/2*s12)*mt^3*s13*s24 - 2*denom(1/2*
      s12)*mt^3*s13*s23 - 2*denom(1/2*s12)*mt^5*s24 + 2*denom(1/2*s12)*mt^5*
      s23 + 1/2*denom(1/4*s12^2)*mt*s12*s13*s23*s24 - 1/2*denom(1/4*s12^2)*mt*
      s12*s13*s23^2 - 1/2*denom(1/4*s12^2)*mt^3*s12*s23*s24 + 1/2*denom(1/4*
      s12^2)*mt^3*s12*s23^2 - 1/2*denom(1/4*s12^2)*mt^3*s12*s13*s24 + 1/2*
      denom(1/4*s12^2)*mt^3*s12*s13*s23 + 1/2*denom(1/4*s12^2)*mt^5*s12*s24 - 
      1/2*denom(1/4*s12^2)*mt^5*s12*s23;
 
 .sort
id KMatrix(9,18) =  mt^2*s14*s23 + mt^2*s13*s24 + mt^2*s12*s24 + mt^2*s12*s23
       + mt^2*s12*s14 + mt^2*s12*s13 + mt^2*s12^2 - mt^2*mh^2*s12 - mt^4*s24
       - mt^4*s23 - mt^4*s14 - mt^4*s13 - 4*mt^4*s12 + 2*mt^6 - denom(1/2*s12)
      *s13*s14*s23^2 - denom(1/2*s12)*s13^2*s23*s24 - denom(1/2*s12)*s12*s13*
      s23*s24 - denom(1/2*s12)*s12*s13*s23^2 - denom(1/2*s12)*s12*s13*s14*s23
       - denom(1/2*s12)*s12*s13^2*s23 - denom(1/2*s12)*s12^2*s13*s23 + denom(1/
      2*s12)*mh^2*s12*s13*s23 + denom(1/2*s12)*mt^2*s14*s23^2 + 2*denom(1/2*
      s12)*mt^2*s13*s23*s24 + denom(1/2*s12)*mt^2*s13*s23^2 + 2*denom(1/2*s12)
      *mt^2*s13*s14*s23 + denom(1/2*s12)*mt^2*s13^2*s24 + denom(1/2*s12)*mt^2*
      s13^2*s23 + denom(1/2*s12)*mt^2*s12*s23*s24 + denom(1/2*s12)*mt^2*s12*
      s23^2 + denom(1/2*s12)*mt^2*s12*s14*s23 + denom(1/2*s12)*mt^2*s12*s13*
      s24 + 6*denom(1/2*s12)*mt^2*s12*s13*s23 + denom(1/2*s12)*mt^2*s12*s13*
      s14 + denom(1/2*s12)*mt^2*s12*s13^2 + denom(1/2*s12)*mt^2*s12^2*s23 + 
      denom(1/2*s12)*mt^2*s12^2*s13 - denom(1/2*s12)*mt^2*mh^2*s12*s23 - 
      denom(1/2*s12)*mt^2*mh^2*s12*s13 - denom(1/2*s12)*mt^4*s23*s24 - denom(1/
      2*s12)*mt^4*s23^2 - 2*denom(1/2*s12)*mt^4*s14*s23 - 2*denom(1/2*s12)*
      mt^4*s13*s24 - 4*denom(1/2*s12)*mt^4*s13*s23 - denom(1/2*s12)*mt^4*s13*
      s14 - denom(1/2*s12)*mt^4*s13^2 - denom(1/2*s12)*mt^4*s12*s24 - 5*denom(
      1/2*s12)*mt^4*s12*s23 - denom(1/2*s12)*mt^4*s12*s14 - 5*denom(1/2*s12)*
      mt^4*s12*s13 - denom(1/2*s12)*mt^4*s12^2 + denom(1/2*s12)*mt^4*mh^2*s12
       + denom(1/2*s12)*mt^6*s24 + 3*denom(1/2*s12)*mt^6*s23 + denom(1/2*s12)*
      mt^6*s14 + 3*denom(1/2*s12)*mt^6*s13 + 4*denom(1/2*s12)*mt^6*s12 - 2*
      denom(1/2*s12)*mt^8 + 1/4*denom(1/4*s12^2)*s12*s13*s14*s23^2 + 1/4*
      denom(1/4*s12^2)*s12*s13^2*s23*s24 + 1/4*denom(1/4*s12^2)*s12^2*s13*s23*
      s24 + 1/4*denom(1/4*s12^2)*s12^2*s13*s23^2 + 1/4*denom(1/4*s12^2)*s12^2*
      s13*s14*s23 + 1/4*denom(1/4*s12^2)*s12^2*s13^2*s23 + 1/4*denom(1/4*s12^2
      )*s12^3*s13*s23 - 1/4*denom(1/4*s12^2)*mh^2*s12^2*s13*s23 - 1/4*denom(1/
      4*s12^2)*mt^2*s12*s14*s23^2 - 1/2*denom(1/4*s12^2)*mt^2*s12*s13*s23*s24
       - 1/4*denom(1/4*s12^2)*mt^2*s12*s13*s23^2 - 1/2*denom(1/4*s12^2)*mt^2*
      s12*s13*s14*s23 - 1/4*denom(1/4*s12^2)*mt^2*s12*s13^2*s24 - 1/4*denom(1/
      4*s12^2)*mt^2*s12*s13^2*s23 - 1/4*denom(1/4*s12^2)*mt^2*s12^2*s23*s24 - 
      1/4*denom(1/4*s12^2)*mt^2*s12^2*s23^2 - 1/4*denom(1/4*s12^2)*mt^2*s12^2*
      s14*s23 - 1/4*denom(1/4*s12^2)*mt^2*s12^2*s13*s24 - 3/2*denom(1/4*s12^2)
      *mt^2*s12^2*s13*s23 - 1/4*denom(1/4*s12^2)*mt^2*s12^2*s13*s14 - 1/4*
      denom(1/4*s12^2)*mt^2*s12^2*s13^2 - 1/4*denom(1/4*s12^2)*mt^2*s12^3*s23
       - 1/4*denom(1/4*s12^2)*mt^2*s12^3*s13 + 1/4*denom(1/4*s12^2)*mt^2*mh^2*
      s12^2*s23 + 1/4*denom(1/4*s12^2)*mt^2*mh^2*s12^2*s13 + 1/4*denom(1/4*
      s12^2)*mt^4*s12*s23*s24 + 1/4*denom(1/4*s12^2)*mt^4*s12*s23^2 + 1/2*
      denom(1/4*s12^2)*mt^4*s12*s14*s23 + 1/2*denom(1/4*s12^2)*mt^4*s12*s13*
      s24 + denom(1/4*s12^2)*mt^4*s12*s13*s23 + 1/4*denom(1/4*s12^2)*mt^4*s12*
      s13*s14 + 1/4*denom(1/4*s12^2)*mt^4*s12*s13^2 + 1/4*denom(1/4*s12^2)*
      mt^4*s12^2*s24 + 5/4*denom(1/4*s12^2)*mt^4*s12^2*s23 + 1/4*denom(1/4*
      s12^2)*mt^4*s12^2*s14 + 5/4*denom(1/4*s12^2)*mt^4*s12^2*s13 + 1/4*denom(
      1/4*s12^2)*mt^4*s12^3 - 1/4*denom(1/4*s12^2)*mt^4*mh^2*s12^2 - 1/4*
      denom(1/4*s12^2)*mt^6*s12*s24 - 3/4*denom(1/4*s12^2)*mt^6*s12*s23 - 1/4*
      denom(1/4*s12^2)*mt^6*s12*s14 - 3/4*denom(1/4*s12^2)*mt^6*s12*s13 - 
      denom(1/4*s12^2)*mt^6*s12^2 + 1/2*denom(1/4*s12^2)*mt^8*s12;
 
 .sort
id KMatrix(9,19) =  2*mt^2*s23*s24 - 2*mt^4*s24 - 2*mt^4*s23 + 2*mt^6 - 2*
      denom(1/2*s12)*s13*s23^2*s24 + 2*denom(1/2*s12)*mt^2*s23^2*s24 + 4*
      denom(1/2*s12)*mt^2*s13*s23*s24 + 2*denom(1/2*s12)*mt^2*s13*s23^2 - 4*
      denom(1/2*s12)*mt^4*s23*s24 - 2*denom(1/2*s12)*mt^4*s23^2 - 2*denom(1/2*
      s12)*mt^4*s13*s24 - 4*denom(1/2*s12)*mt^4*s13*s23 + 2*denom(1/2*s12)*
      mt^6*s24 + 4*denom(1/2*s12)*mt^6*s23 + 2*denom(1/2*s12)*mt^6*s13 - 2*
      denom(1/2*s12)*mt^8 + 1/2*denom(1/4*s12^2)*s12*s13*s23^2*s24 - 1/2*
      denom(1/4*s12^2)*mt^2*s12*s23^2*s24 - denom(1/4*s12^2)*mt^2*s12*s13*s23*
      s24 - 1/2*denom(1/4*s12^2)*mt^2*s12*s13*s23^2 + denom(1/4*s12^2)*mt^4*
      s12*s23*s24 + 1/2*denom(1/4*s12^2)*mt^4*s12*s23^2 + 1/2*denom(1/4*s12^2)
      *mt^4*s12*s13*s24 + denom(1/4*s12^2)*mt^4*s12*s13*s23 - 1/2*denom(1/4*
      s12^2)*mt^6*s12*s24 - denom(1/4*s12^2)*mt^6*s12*s23 - 1/2*denom(1/4*
      s12^2)*mt^6*s12*s13 + 1/2*denom(1/4*s12^2)*mt^8*s12;
 
 .sort
id KMatrix(9,20) =   - mt^2*s23*s24 - mt^2*s23^2 - mt^2*s14*s23 - mt^2*s13*s23
       - mt^2*s12*s23 + mt^2*mh^2*s23 + 3*mt^4*s24 + 3*mt^4*s23 + mt^4*s14 + 
      mt^4*s13 + mt^4*s12 - mt^4*mh^2 - 4*mt^6 + 1/2*denom(1/2*s12)*s13*s23^2*
      s24 + 1/2*denom(1/2*s12)*s13*s23^3 + 1/2*denom(1/2*s12)*s13*s14*s23^2 + 
      1/2*denom(1/2*s12)*s13^2*s23^2 + 1/2*denom(1/2*s12)*s12*s13*s23^2 - 1/2*
      denom(1/2*s12)*mh^2*s13*s23^2 - 1/2*denom(1/2*s12)*mt^2*s23^2*s24 - 1/2*
      denom(1/2*s12)*mt^2*s23^3 - denom(1/2*s12)*mt^2*s14*s23^2 - 7/2*denom(1/
      2*s12)*mt^2*s13*s23*s24 - 5/2*denom(1/2*s12)*mt^2*s13*s23^2 - denom(1/2*
      s12)*mt^2*s13*s14*s23 - denom(1/2*s12)*mt^2*s13^2*s23 - 1/2*denom(1/2*
      s12)*mt^2*s12*s23^2 - denom(1/2*s12)*mt^2*s12*s13*s23 + 1/2*denom(1/2*
      s12)*mt^2*mh^2*s23^2 + denom(1/2*s12)*mt^2*mh^2*s13*s23 + 7/2*denom(1/2*
      s12)*mt^4*s23*s24 + 5/2*denom(1/2*s12)*mt^4*s23^2 + 2*denom(1/2*s12)*
      mt^4*s14*s23 + 3*denom(1/2*s12)*mt^4*s13*s24 + 6*denom(1/2*s12)*mt^4*s13
      *s23 + 1/2*denom(1/2*s12)*mt^4*s13*s14 + 1/2*denom(1/2*s12)*mt^4*s13^2
       + denom(1/2*s12)*mt^4*s12*s23 + 1/2*denom(1/2*s12)*mt^4*s12*s13 - 
      denom(1/2*s12)*mt^4*mh^2*s23 - 1/2*denom(1/2*s12)*mt^4*mh^2*s13 - 3*
      denom(1/2*s12)*mt^6*s24 - 6*denom(1/2*s12)*mt^6*s23 - denom(1/2*s12)*
      mt^6*s14 - 4*denom(1/2*s12)*mt^6*s13 - 1/2*denom(1/2*s12)*mt^6*s12 + 1/2
      *denom(1/2*s12)*mt^6*mh^2 + 4*denom(1/2*s12)*mt^8 + 1/4*denom(1/4*s12^2)
      *s13*s14*s23^3 + 3/4*denom(1/4*s12^2)*s13^2*s23^2*s24 - 1/4*denom(1/4*
      s12^2)*mt^2*s14*s23^3 - 3/2*denom(1/4*s12^2)*mt^2*s13*s23^2*s24 - 1/4*
      denom(1/4*s12^2)*mt^2*s13*s23^3 - 3/4*denom(1/4*s12^2)*mt^2*s13*s14*
      s23^2 - 3/2*denom(1/4*s12^2)*mt^2*s13^2*s23*s24 - 3/4*denom(1/4*s12^2)*
      mt^2*s13^2*s23^2 + 3/4*denom(1/4*s12^2)*mt^4*s23^2*s24 + 1/4*denom(1/4*
      s12^2)*mt^4*s23^3 + 3/4*denom(1/4*s12^2)*mt^4*s14*s23^2 + 3*denom(1/4*
      s12^2)*mt^4*s13*s23*s24 + 9/4*denom(1/4*s12^2)*mt^4*s13*s23^2 + 3/4*
      denom(1/4*s12^2)*mt^4*s13*s14*s23 + 3/4*denom(1/4*s12^2)*mt^4*s13^2*s24
       + 3/2*denom(1/4*s12^2)*mt^4*s13^2*s23 - 3/2*denom(1/4*s12^2)*mt^6*s23*
      s24 - 3/2*denom(1/4*s12^2)*mt^6*s23^2 - 3/4*denom(1/4*s12^2)*mt^6*s14*
      s23 - 3/2*denom(1/4*s12^2)*mt^6*s13*s24 - 15/4*denom(1/4*s12^2)*mt^6*s13
      *s23 - 1/4*denom(1/4*s12^2)*mt^6*s13*s14 - 3/4*denom(1/4*s12^2)*mt^6*
      s13^2 + 3/4*denom(1/4*s12^2)*mt^8*s24 + 9/4*denom(1/4*s12^2)*mt^8*s23 + 
      1/4*denom(1/4*s12^2)*mt^8*s14 + 7/4*denom(1/4*s12^2)*mt^8*s13 - denom(1/
      4*s12^2)*mt^10;
 
 .sort
id KMatrix(9,21) =  1/2*s23*s24^2 + s23^2*s24 + 1/2*s23^3 + s14*s23*s24 + s14*
      s23^2 + 1/2*s14^2*s23 + s13*s23*s24 + s13*s23^2 + s13*s14*s23 + 1/2*
      s13^2*s23 + s12*s23*s24 + s12*s23^2 + s12*s14*s23 + s12*s13*s23 + 1/2*
      s12^2*s23 - mh^2*s23*s24 - mh^2*s23^2 - mh^2*s14*s23 - mh^2*s13*s23 - 
      mh^2*s12*s23 + 1/2*mh^4*s23 - 3/2*mt^2*s24^2 - 4*mt^2*s23*s24 - 5/2*mt^2
      *s23^2 - 2*mt^2*s14*s24 - 3*mt^2*s14*s23 - 1/2*mt^2*s14^2 - 2*mt^2*s13*
      s24 - 3*mt^2*s13*s23 - mt^2*s13*s14 - 1/2*mt^2*s13^2 - 2*mt^2*s12*s24 - 
      3*mt^2*s12*s23 - mt^2*s12*s14 - mt^2*s12*s13 - 1/2*mt^2*s12^2 + 2*mt^2*
      mh^2*s24 + 3*mt^2*mh^2*s23 + mt^2*mh^2*s14 + mt^2*mh^2*s13 + mt^2*mh^2*
      s12 - 1/2*mt^2*mh^4 + 5*mt^4*s24 + 5*mt^4*s23 + 3*mt^4*s14 + 3*mt^4*s13
       + 3*mt^4*s12 - 3*mt^4*mh^2 - 4*mt^6 + 1/2*denom(1/2*s12)*s14*s23^2*s24
       + 1/2*denom(1/2*s12)*s14*s23^3 + 1/2*denom(1/2*s12)*s14^2*s23^2 + 
      denom(1/2*s12)*s13*s23*s24^2 + denom(1/2*s12)*s13*s23^2*s24 + denom(1/2*
      s12)*s13*s14*s23*s24 + 1/2*denom(1/2*s12)*s13*s14*s23^2 + denom(1/2*s12)
      *s13^2*s23*s24 + 1/2*denom(1/2*s12)*s12*s14*s23^2 + denom(1/2*s12)*s12*
      s13*s23*s24 - 1/2*denom(1/2*s12)*mh^2*s14*s23^2 - denom(1/2*s12)*mh^2*
      s13*s23*s24 - denom(1/2*s12)*mt^2*s23*s24^2 - 3/2*denom(1/2*s12)*mt^2*
      s23^2*s24 - 1/2*denom(1/2*s12)*mt^2*s23^3 - 5/2*denom(1/2*s12)*mt^2*s14*
      s23*s24 - 5/2*denom(1/2*s12)*mt^2*s14*s23^2 - denom(1/2*s12)*mt^2*s14^2*
      s23 - 3/2*denom(1/2*s12)*mt^2*s13*s24^2 - 5*denom(1/2*s12)*mt^2*s13*s23*
      s24 - 3/2*denom(1/2*s12)*mt^2*s13*s23^2 - denom(1/2*s12)*mt^2*s13*s14*
      s24 - 2*denom(1/2*s12)*mt^2*s13*s14*s23 - denom(1/2*s12)*mt^2*s13^2*s24
       - denom(1/2*s12)*mt^2*s13^2*s23 - denom(1/2*s12)*mt^2*s12*s23*s24 - 1/2
      *denom(1/2*s12)*mt^2*s12*s23^2 - denom(1/2*s12)*mt^2*s12*s14*s23 - 
      denom(1/2*s12)*mt^2*s12*s13*s24 - denom(1/2*s12)*mt^2*s12*s13*s23 + 
      denom(1/2*s12)*mt^2*mh^2*s23*s24 + 1/2*denom(1/2*s12)*mt^2*mh^2*s23^2 + 
      denom(1/2*s12)*mt^2*mh^2*s14*s23 + denom(1/2*s12)*mt^2*mh^2*s13*s24 + 
      denom(1/2*s12)*mt^2*mh^2*s13*s23 + 3/2*denom(1/2*s12)*mt^4*s24^2 + 11/2*
      denom(1/2*s12)*mt^4*s23*s24 + 3*denom(1/2*s12)*mt^4*s23^2 + 2*denom(1/2*
      s12)*mt^4*s14*s24 + 5*denom(1/2*s12)*mt^4*s14*s23 + 1/2*denom(1/2*s12)*
      mt^4*s14^2 + 5*denom(1/2*s12)*mt^4*s13*s24 + 5*denom(1/2*s12)*mt^4*s13*
      s23 + 3/2*denom(1/2*s12)*mt^4*s13*s14 + denom(1/2*s12)*mt^4*s13^2 + 
      denom(1/2*s12)*mt^4*s12*s24 + 2*denom(1/2*s12)*mt^4*s12*s23 + 1/2*denom(
      1/2*s12)*mt^4*s12*s14 + denom(1/2*s12)*mt^4*s12*s13 - denom(1/2*s12)*
      mt^4*mh^2*s24 - 2*denom(1/2*s12)*mt^4*mh^2*s23 - 1/2*denom(1/2*s12)*mt^4
      *mh^2*s14 - denom(1/2*s12)*mt^4*mh^2*s13 - 5*denom(1/2*s12)*mt^6*s24 - 6
      *denom(1/2*s12)*mt^6*s23 - 3*denom(1/2*s12)*mt^6*s14 - 4*denom(1/2*s12)*
      mt^6*s13 - 3/2*denom(1/2*s12)*mt^6*s12 + 3/2*denom(1/2*s12)*mt^6*mh^2 + 
      4*denom(1/2*s12)*mt^8 + 1/8*denom(1/4*s12^2)*s14^2*s23^3 + 1/2*denom(1/4
      *s12^2)*s13*s14*s23^2*s24 + 3/8*denom(1/4*s12^2)*s13^2*s23*s24^2 - 1/2*
      denom(1/4*s12^2)*mt^2*s14*s23^2*s24 - 1/4*denom(1/4*s12^2)*mt^2*s14*
      s23^3 - 3/8*denom(1/4*s12^2)*mt^2*s14^2*s23^2 - 3/4*denom(1/4*s12^2)*
      mt^2*s13*s23*s24^2 - 1/2*denom(1/4*s12^2)*mt^2*s13*s23^2*s24 - denom(1/4
      *s12^2)*mt^2*s13*s14*s23*s24 - 1/2*denom(1/4*s12^2)*mt^2*s13*s14*s23^2
       - 3/8*denom(1/4*s12^2)*mt^2*s13^2*s24^2 - 3/4*denom(1/4*s12^2)*mt^2*
      s13^2*s23*s24 + 3/8*denom(1/4*s12^2)*mt^4*s23*s24^2 + 1/2*denom(1/4*
      s12^2)*mt^4*s23^2*s24 + 1/8*denom(1/4*s12^2)*mt^4*s23^3 + denom(1/4*
      s12^2)*mt^4*s14*s23*s24 + 5/4*denom(1/4*s12^2)*mt^4*s14*s23^2 + 3/8*
      denom(1/4*s12^2)*mt^4*s14^2*s23 + 3/4*denom(1/4*s12^2)*mt^4*s13*s24^2 + 
      5/2*denom(1/4*s12^2)*mt^4*s13*s23*s24 + 1/2*denom(1/4*s12^2)*mt^4*s13*
      s23^2 + 1/2*denom(1/4*s12^2)*mt^4*s13*s14*s24 + denom(1/4*s12^2)*mt^4*
      s13*s14*s23 + 3/4*denom(1/4*s12^2)*mt^4*s13^2*s24 + 3/8*denom(1/4*s12^2)
      *mt^4*s13^2*s23 - 3/8*denom(1/4*s12^2)*mt^6*s24^2 - 7/4*denom(1/4*s12^2)
      *mt^6*s23*s24 - 7/8*denom(1/4*s12^2)*mt^6*s23^2 - 1/2*denom(1/4*s12^2)*
      mt^6*s14*s24 - 7/4*denom(1/4*s12^2)*mt^6*s14*s23 - 1/8*denom(1/4*s12^2)*
      mt^6*s14^2 - 2*denom(1/4*s12^2)*mt^6*s13*s24 - 7/4*denom(1/4*s12^2)*mt^6
      *s13*s23 - 1/2*denom(1/4*s12^2)*mt^6*s13*s14 - 3/8*denom(1/4*s12^2)*mt^6
      *s13^2 + 5/4*denom(1/4*s12^2)*mt^8*s24 + 7/4*denom(1/4*s12^2)*mt^8*s23
       + 3/4*denom(1/4*s12^2)*mt^8*s14 + 5/4*denom(1/4*s12^2)*mt^8*s13 - 
      denom(1/4*s12^2)*mt^10;
 
 .sort
id KMatrix(9,22) =   - mt^2*s23*s24 - mt^2*s23^2 - mt^2*s14*s23 - mt^2*s13*s23
       - mt^2*s12*s23 + mt^2*mh^2*s23 + 3*mt^4*s24 + 3*mt^4*s23 + mt^4*s14 + 
      mt^4*s13 + mt^4*s12 - mt^4*mh^2 - 4*mt^6 + 1/2*denom(1/2*s12)*s13*s23^2*
      s24 + 1/2*denom(1/2*s12)*s13*s23^3 + 1/2*denom(1/2*s12)*s13*s14*s23^2 + 
      1/2*denom(1/2*s12)*s13^2*s23^2 + 1/2*denom(1/2*s12)*s12*s13*s23^2 - 1/2*
      denom(1/2*s12)*mh^2*s13*s23^2 - 1/2*denom(1/2*s12)*mt^2*s23^2*s24 - 1/2*
      denom(1/2*s12)*mt^2*s23^3 - denom(1/2*s12)*mt^2*s14*s23^2 - 7/2*denom(1/
      2*s12)*mt^2*s13*s23*s24 - 5/2*denom(1/2*s12)*mt^2*s13*s23^2 - denom(1/2*
      s12)*mt^2*s13*s14*s23 - denom(1/2*s12)*mt^2*s13^2*s23 - 1/2*denom(1/2*
      s12)*mt^2*s12*s23^2 - denom(1/2*s12)*mt^2*s12*s13*s23 + 1/2*denom(1/2*
      s12)*mt^2*mh^2*s23^2 + denom(1/2*s12)*mt^2*mh^2*s13*s23 + 7/2*denom(1/2*
      s12)*mt^4*s23*s24 + 5/2*denom(1/2*s12)*mt^4*s23^2 + 2*denom(1/2*s12)*
      mt^4*s14*s23 + 3*denom(1/2*s12)*mt^4*s13*s24 + 6*denom(1/2*s12)*mt^4*s13
      *s23 + 1/2*denom(1/2*s12)*mt^4*s13*s14 + 1/2*denom(1/2*s12)*mt^4*s13^2
       + denom(1/2*s12)*mt^4*s12*s23 + 1/2*denom(1/2*s12)*mt^4*s12*s13 - 
      denom(1/2*s12)*mt^4*mh^2*s23 - 1/2*denom(1/2*s12)*mt^4*mh^2*s13 - 3*
      denom(1/2*s12)*mt^6*s24 - 6*denom(1/2*s12)*mt^6*s23 - denom(1/2*s12)*
      mt^6*s14 - 4*denom(1/2*s12)*mt^6*s13 - 1/2*denom(1/2*s12)*mt^6*s12 + 1/2
      *denom(1/2*s12)*mt^6*mh^2 + 4*denom(1/2*s12)*mt^8 + 1/4*denom(1/4*s12^2)
      *s13*s14*s23^3 + 3/4*denom(1/4*s12^2)*s13^2*s23^2*s24 - 1/4*denom(1/4*
      s12^2)*mt^2*s14*s23^3 - 3/2*denom(1/4*s12^2)*mt^2*s13*s23^2*s24 - 1/4*
      denom(1/4*s12^2)*mt^2*s13*s23^3 - 3/4*denom(1/4*s12^2)*mt^2*s13*s14*
      s23^2 - 3/2*denom(1/4*s12^2)*mt^2*s13^2*s23*s24 - 3/4*denom(1/4*s12^2)*
      mt^2*s13^2*s23^2 + 3/4*denom(1/4*s12^2)*mt^4*s23^2*s24 + 1/4*denom(1/4*
      s12^2)*mt^4*s23^3 + 3/4*denom(1/4*s12^2)*mt^4*s14*s23^2 + 3*denom(1/4*
      s12^2)*mt^4*s13*s23*s24 + 9/4*denom(1/4*s12^2)*mt^4*s13*s23^2 + 3/4*
      denom(1/4*s12^2)*mt^4*s13*s14*s23 + 3/4*denom(1/4*s12^2)*mt^4*s13^2*s24
       + 3/2*denom(1/4*s12^2)*mt^4*s13^2*s23 - 3/2*denom(1/4*s12^2)*mt^6*s23*
      s24 - 3/2*denom(1/4*s12^2)*mt^6*s23^2 - 3/4*denom(1/4*s12^2)*mt^6*s14*
      s23 - 3/2*denom(1/4*s12^2)*mt^6*s13*s24 - 15/4*denom(1/4*s12^2)*mt^6*s13
      *s23 - 1/4*denom(1/4*s12^2)*mt^6*s13*s14 - 3/4*denom(1/4*s12^2)*mt^6*
      s13^2 + 3/4*denom(1/4*s12^2)*mt^8*s24 + 9/4*denom(1/4*s12^2)*mt^8*s23 + 
      1/4*denom(1/4*s12^2)*mt^8*s14 + 7/4*denom(1/4*s12^2)*mt^8*s13 - denom(1/
      4*s12^2)*mt^10;
 
 .sort
id KMatrix(9,23) =  1/2*s23*s24^2 + s23^2*s24 + 1/2*s23^3 + s14*s23*s24 + s14*
      s23^2 + 1/2*s14^2*s23 + s13*s23*s24 + s13*s23^2 + s13*s14*s23 + 1/2*
      s13^2*s23 + s12*s23*s24 + s12*s23^2 + s12*s14*s23 + s12*s13*s23 + 1/2*
      s12^2*s23 - mh^2*s23*s24 - mh^2*s23^2 - mh^2*s14*s23 - mh^2*s13*s23 - 
      mh^2*s12*s23 + 1/2*mh^4*s23 - 3/2*mt^2*s24^2 - 4*mt^2*s23*s24 - 5/2*mt^2
      *s23^2 - 2*mt^2*s14*s24 - 3*mt^2*s14*s23 - 1/2*mt^2*s14^2 - 2*mt^2*s13*
      s24 - 3*mt^2*s13*s23 - mt^2*s13*s14 - 1/2*mt^2*s13^2 - 2*mt^2*s12*s24 - 
      3*mt^2*s12*s23 - mt^2*s12*s14 - mt^2*s12*s13 - 1/2*mt^2*s12^2 + 2*mt^2*
      mh^2*s24 + 3*mt^2*mh^2*s23 + mt^2*mh^2*s14 + mt^2*mh^2*s13 + mt^2*mh^2*
      s12 - 1/2*mt^2*mh^4 + 5*mt^4*s24 + 5*mt^4*s23 + 3*mt^4*s14 + 3*mt^4*s13
       + 3*mt^4*s12 - 3*mt^4*mh^2 - 4*mt^6 + 1/2*denom(1/2*s12)*s14*s23^2*s24
       + 1/2*denom(1/2*s12)*s14*s23^3 + 1/2*denom(1/2*s12)*s14^2*s23^2 + 
      denom(1/2*s12)*s13*s23*s24^2 + denom(1/2*s12)*s13*s23^2*s24 + denom(1/2*
      s12)*s13*s14*s23*s24 + 1/2*denom(1/2*s12)*s13*s14*s23^2 + denom(1/2*s12)
      *s13^2*s23*s24 + 1/2*denom(1/2*s12)*s12*s14*s23^2 + denom(1/2*s12)*s12*
      s13*s23*s24 - 1/2*denom(1/2*s12)*mh^2*s14*s23^2 - denom(1/2*s12)*mh^2*
      s13*s23*s24 - denom(1/2*s12)*mt^2*s23*s24^2 - 3/2*denom(1/2*s12)*mt^2*
      s23^2*s24 - 1/2*denom(1/2*s12)*mt^2*s23^3 - 5/2*denom(1/2*s12)*mt^2*s14*
      s23*s24 - 5/2*denom(1/2*s12)*mt^2*s14*s23^2 - denom(1/2*s12)*mt^2*s14^2*
      s23 - 3/2*denom(1/2*s12)*mt^2*s13*s24^2 - 5*denom(1/2*s12)*mt^2*s13*s23*
      s24 - 3/2*denom(1/2*s12)*mt^2*s13*s23^2 - denom(1/2*s12)*mt^2*s13*s14*
      s24 - 2*denom(1/2*s12)*mt^2*s13*s14*s23 - denom(1/2*s12)*mt^2*s13^2*s24
       - denom(1/2*s12)*mt^2*s13^2*s23 - denom(1/2*s12)*mt^2*s12*s23*s24 - 1/2
      *denom(1/2*s12)*mt^2*s12*s23^2 - denom(1/2*s12)*mt^2*s12*s14*s23 - 
      denom(1/2*s12)*mt^2*s12*s13*s24 - denom(1/2*s12)*mt^2*s12*s13*s23 + 
      denom(1/2*s12)*mt^2*mh^2*s23*s24 + 1/2*denom(1/2*s12)*mt^2*mh^2*s23^2 + 
      denom(1/2*s12)*mt^2*mh^2*s14*s23 + denom(1/2*s12)*mt^2*mh^2*s13*s24 + 
      denom(1/2*s12)*mt^2*mh^2*s13*s23 + 3/2*denom(1/2*s12)*mt^4*s24^2 + 11/2*
      denom(1/2*s12)*mt^4*s23*s24 + 3*denom(1/2*s12)*mt^4*s23^2 + 2*denom(1/2*
      s12)*mt^4*s14*s24 + 5*denom(1/2*s12)*mt^4*s14*s23 + 1/2*denom(1/2*s12)*
      mt^4*s14^2 + 5*denom(1/2*s12)*mt^4*s13*s24 + 5*denom(1/2*s12)*mt^4*s13*
      s23 + 3/2*denom(1/2*s12)*mt^4*s13*s14 + denom(1/2*s12)*mt^4*s13^2 + 
      denom(1/2*s12)*mt^4*s12*s24 + 2*denom(1/2*s12)*mt^4*s12*s23 + 1/2*denom(
      1/2*s12)*mt^4*s12*s14 + denom(1/2*s12)*mt^4*s12*s13 - denom(1/2*s12)*
      mt^4*mh^2*s24 - 2*denom(1/2*s12)*mt^4*mh^2*s23 - 1/2*denom(1/2*s12)*mt^4
      *mh^2*s14 - denom(1/2*s12)*mt^4*mh^2*s13 - 5*denom(1/2*s12)*mt^6*s24 - 6
      *denom(1/2*s12)*mt^6*s23 - 3*denom(1/2*s12)*mt^6*s14 - 4*denom(1/2*s12)*
      mt^6*s13 - 3/2*denom(1/2*s12)*mt^6*s12 + 3/2*denom(1/2*s12)*mt^6*mh^2 + 
      4*denom(1/2*s12)*mt^8 + 1/8*denom(1/4*s12^2)*s14^2*s23^3 + 1/2*denom(1/4
      *s12^2)*s13*s14*s23^2*s24 + 3/8*denom(1/4*s12^2)*s13^2*s23*s24^2 - 1/2*
      denom(1/4*s12^2)*mt^2*s14*s23^2*s24 - 1/4*denom(1/4*s12^2)*mt^2*s14*
      s23^3 - 3/8*denom(1/4*s12^2)*mt^2*s14^2*s23^2 - 3/4*denom(1/4*s12^2)*
      mt^2*s13*s23*s24^2 - 1/2*denom(1/4*s12^2)*mt^2*s13*s23^2*s24 - denom(1/4
      *s12^2)*mt^2*s13*s14*s23*s24 - 1/2*denom(1/4*s12^2)*mt^2*s13*s14*s23^2
       - 3/8*denom(1/4*s12^2)*mt^2*s13^2*s24^2 - 3/4*denom(1/4*s12^2)*mt^2*
      s13^2*s23*s24 + 3/8*denom(1/4*s12^2)*mt^4*s23*s24^2 + 1/2*denom(1/4*
      s12^2)*mt^4*s23^2*s24 + 1/8*denom(1/4*s12^2)*mt^4*s23^3 + denom(1/4*
      s12^2)*mt^4*s14*s23*s24 + 5/4*denom(1/4*s12^2)*mt^4*s14*s23^2 + 3/8*
      denom(1/4*s12^2)*mt^4*s14^2*s23 + 3/4*denom(1/4*s12^2)*mt^4*s13*s24^2 + 
      5/2*denom(1/4*s12^2)*mt^4*s13*s23*s24 + 1/2*denom(1/4*s12^2)*mt^4*s13*
      s23^2 + 1/2*denom(1/4*s12^2)*mt^4*s13*s14*s24 + denom(1/4*s12^2)*mt^4*
      s13*s14*s23 + 3/4*denom(1/4*s12^2)*mt^4*s13^2*s24 + 3/8*denom(1/4*s12^2)
      *mt^4*s13^2*s23 - 3/8*denom(1/4*s12^2)*mt^6*s24^2 - 7/4*denom(1/4*s12^2)
      *mt^6*s23*s24 - 7/8*denom(1/4*s12^2)*mt^6*s23^2 - 1/2*denom(1/4*s12^2)*
      mt^6*s14*s24 - 7/4*denom(1/4*s12^2)*mt^6*s14*s23 - 1/8*denom(1/4*s12^2)*
      mt^6*s14^2 - 2*denom(1/4*s12^2)*mt^6*s13*s24 - 7/4*denom(1/4*s12^2)*mt^6
      *s13*s23 - 1/2*denom(1/4*s12^2)*mt^6*s13*s14 - 3/8*denom(1/4*s12^2)*mt^6
      *s13^2 + 5/4*denom(1/4*s12^2)*mt^8*s24 + 7/4*denom(1/4*s12^2)*mt^8*s23
       + 3/4*denom(1/4*s12^2)*mt^8*s14 + 5/4*denom(1/4*s12^2)*mt^8*s13 - 
      denom(1/4*s12^2)*mt^10;
 
 .sort
id KMatrix(9,24) =   - 2*mt^3*s12*s23 + 2*mt^5*s12 + 2*denom(1/2*s12)*mt*s12*
      s13*s23^2 - 2*denom(1/2*s12)*mt^3*s12*s23^2 - 4*denom(1/2*s12)*mt^3*s12*
      s13*s23 + 4*denom(1/2*s12)*mt^5*s12*s23 + 2*denom(1/2*s12)*mt^5*s12*s13
       - 2*denom(1/2*s12)*mt^7*s12 - 1/2*denom(1/4*s12^2)*mt*s12^2*s13*s23^2
       + 1/2*denom(1/4*s12^2)*mt^3*s12^2*s23^2 + denom(1/4*s12^2)*mt^3*s12^2*
      s13*s23 - denom(1/4*s12^2)*mt^5*s12^2*s23 - 1/2*denom(1/4*s12^2)*mt^5*
      s12^2*s13 + 1/2*denom(1/4*s12^2)*mt^7*s12^2;
 
 .sort
id KMatrix(9,25) =  2*mt^3*s24 - 2*mt^3*s23 - 2*denom(1/2*s12)*mt*s13*s23*s24
       + 2*denom(1/2*s12)*mt*s13*s23^2 + 2*denom(1/2*s12)*mt^3*s23*s24 - 2*
      denom(1/2*s12)*mt^3*s23^2 + 2*denom(1/2*s12)*mt^3*s13*s24 - 2*denom(1/2*
      s12)*mt^3*s13*s23 - 2*denom(1/2*s12)*mt^5*s24 + 2*denom(1/2*s12)*mt^5*
      s23 + 1/2*denom(1/4*s12^2)*mt*s12*s13*s23*s24 - 1/2*denom(1/4*s12^2)*mt*
      s12*s13*s23^2 - 1/2*denom(1/4*s12^2)*mt^3*s12*s23*s24 + 1/2*denom(1/4*
      s12^2)*mt^3*s12*s23^2 - 1/2*denom(1/4*s12^2)*mt^3*s12*s13*s24 + 1/2*
      denom(1/4*s12^2)*mt^3*s12*s13*s23 + 1/2*denom(1/4*s12^2)*mt^5*s12*s24 - 
      1/2*denom(1/4*s12^2)*mt^5*s12*s23;
 
 .sort
id KMatrix(9,26) =   - mt^3*s12*s24 - mt^3*s12*s23 - mt^3*s12*s14 - mt^3*s12*
      s13 - mt^3*s12^2 + mt^3*mh^2*s12 + 4*mt^5*s12 + 1/2*denom(1/2*s12)*mt*
      s12*s13*s23*s24 + 1/2*denom(1/2*s12)*mt*s12*s13*s23^2 + 1/2*denom(1/2*
      s12)*mt*s12*s13*s14*s23 + 1/2*denom(1/2*s12)*mt*s12*s13^2*s23 + 1/2*
      denom(1/2*s12)*mt*s12^2*s13*s23 - 1/2*denom(1/2*s12)*mt*mh^2*s12*s13*s23
       - 1/2*denom(1/2*s12)*mt^3*s12*s23*s24 - 1/2*denom(1/2*s12)*mt^3*s12*
      s23^2 - denom(1/2*s12)*mt^3*s12*s14*s23 - denom(1/2*s12)*mt^3*s12*s13*
      s24 - 4*denom(1/2*s12)*mt^3*s12*s13*s23 - 1/2*denom(1/2*s12)*mt^3*s12*
      s13*s14 - 1/2*denom(1/2*s12)*mt^3*s12*s13^2 - 1/2*denom(1/2*s12)*mt^3*
      s12^2*s23 - 1/2*denom(1/2*s12)*mt^3*s12^2*s13 + 1/2*denom(1/2*s12)*mt^3*
      mh^2*s12*s23 + 1/2*denom(1/2*s12)*mt^3*mh^2*s12*s13 + denom(1/2*s12)*
      mt^5*s12*s24 + 4*denom(1/2*s12)*mt^5*s12*s23 + denom(1/2*s12)*mt^5*s12*
      s14 + 4*denom(1/2*s12)*mt^5*s12*s13 + 1/2*denom(1/2*s12)*mt^5*s12^2 - 1/
      2*denom(1/2*s12)*mt^5*mh^2*s12 - 4*denom(1/2*s12)*mt^7*s12 + 1/4*denom(1/
      4*s12^2)*mt*s12*s13*s14*s23^2 + 1/4*denom(1/4*s12^2)*mt*s12*s13^2*s23*
      s24 + 1/2*denom(1/4*s12^2)*mt*s12*s13^2*s23^2 - 1/4*denom(1/4*s12^2)*
      mt^3*s12*s14*s23^2 - 1/2*denom(1/4*s12^2)*mt^3*s12*s13*s23*s24 - 5/4*
      denom(1/4*s12^2)*mt^3*s12*s13*s23^2 - 1/2*denom(1/4*s12^2)*mt^3*s12*s13*
      s14*s23 - 1/4*denom(1/4*s12^2)*mt^3*s12*s13^2*s24 - 5/4*denom(1/4*s12^2)
      *mt^3*s12*s13^2*s23 + 1/4*denom(1/4*s12^2)*mt^5*s12*s23*s24 + 3/4*denom(
      1/4*s12^2)*mt^5*s12*s23^2 + 1/2*denom(1/4*s12^2)*mt^5*s12*s14*s23 + 1/2*
      denom(1/4*s12^2)*mt^5*s12*s13*s24 + 3*denom(1/4*s12^2)*mt^5*s12*s13*s23
       + 1/4*denom(1/4*s12^2)*mt^5*s12*s13*s14 + 3/4*denom(1/4*s12^2)*mt^5*s12
      *s13^2 - 1/4*denom(1/4*s12^2)*mt^7*s12*s24 - 7/4*denom(1/4*s12^2)*mt^7*
      s12*s23 - 1/4*denom(1/4*s12^2)*mt^7*s12*s14 - 7/4*denom(1/4*s12^2)*mt^7*
      s12*s13 + denom(1/4*s12^2)*mt^9*s12;
 
 .sort
id KMatrix(9,27) =   0;
 
 .sort
id KMatrix(9,28) =  1/2*mt*s12*s24^2 + mt*s12*s23*s24 + 1/2*mt*s12*s23^2 + mt*
      s12*s14*s24 + mt*s12*s14*s23 + 1/2*mt*s12*s14^2 + mt*s12*s13*s24 + mt*
      s12*s13*s23 + mt*s12*s13*s14 + 1/2*mt*s12*s13^2 + mt*s12^2*s24 + mt*
      s12^2*s23 + mt*s12^2*s14 + mt*s12^2*s13 + 1/2*mt*s12^3 - mt*mh^2*s12*s24
       - mt*mh^2*s12*s23 - mt*mh^2*s12*s14 - mt*mh^2*s12*s13 - mt*mh^2*s12^2
       + 1/2*mt*mh^4*s12 - 3*mt^3*s12*s24 - 3*mt^3*s12*s23 - 3*mt^3*s12*s14 - 
      3*mt^3*s12*s13 - 3*mt^3*s12^2 + 3*mt^3*mh^2*s12 + 4*mt^5*s12 + 1/2*
      denom(1/2*s12)*mt*s12*s14*s23*s24 + 1/2*denom(1/2*s12)*mt*s12*s14*s23^2
       + 1/2*denom(1/2*s12)*mt*s12*s14^2*s23 + 1/2*denom(1/2*s12)*mt*s12*s13*
      s24^2 + denom(1/2*s12)*mt*s12*s13*s23*s24 + 1/2*denom(1/2*s12)*mt*s12*
      s13*s23^2 + 1/2*denom(1/2*s12)*mt*s12*s13*s14*s24 + denom(1/2*s12)*mt*
      s12*s13*s14*s23 + 1/2*denom(1/2*s12)*mt*s12*s13^2*s24 + 1/2*denom(1/2*
      s12)*mt*s12*s13^2*s23 + 1/2*denom(1/2*s12)*mt*s12^2*s14*s23 + 1/2*denom(
      1/2*s12)*mt*s12^2*s13*s24 + 1/2*denom(1/2*s12)*mt*s12^2*s13*s23 - 1/2*
      denom(1/2*s12)*mt*mh^2*s12*s14*s23 - 1/2*denom(1/2*s12)*mt*mh^2*s12*s13*
      s24 - 1/2*denom(1/2*s12)*mt*mh^2*s12*s13*s23 - 1/2*denom(1/2*s12)*mt^3*
      s12*s24^2 - 3/2*denom(1/2*s12)*mt^3*s12*s23*s24 - denom(1/2*s12)*mt^3*
      s12*s23^2 - denom(1/2*s12)*mt^3*s12*s14*s24 - 3*denom(1/2*s12)*mt^3*s12*
      s14*s23 - 1/2*denom(1/2*s12)*mt^3*s12*s14^2 - 3*denom(1/2*s12)*mt^3*s12*
      s13*s24 - 3*denom(1/2*s12)*mt^3*s12*s13*s23 - 3/2*denom(1/2*s12)*mt^3*
      s12*s13*s14 - denom(1/2*s12)*mt^3*s12*s13^2 - 1/2*denom(1/2*s12)*mt^3*
      s12^2*s24 - denom(1/2*s12)*mt^3*s12^2*s23 - 1/2*denom(1/2*s12)*mt^3*
      s12^2*s14 - denom(1/2*s12)*mt^3*s12^2*s13 + 1/2*denom(1/2*s12)*mt^3*mh^2
      *s12*s24 + denom(1/2*s12)*mt^3*mh^2*s12*s23 + 1/2*denom(1/2*s12)*mt^3*
      mh^2*s12*s14 + denom(1/2*s12)*mt^3*mh^2*s12*s13 + 3*denom(1/2*s12)*mt^5*
      s12*s24 + 4*denom(1/2*s12)*mt^5*s12*s23 + 3*denom(1/2*s12)*mt^5*s12*s14
       + 4*denom(1/2*s12)*mt^5*s12*s13 + 3/2*denom(1/2*s12)*mt^5*s12^2 - 3/2*
      denom(1/2*s12)*mt^5*mh^2*s12 - 4*denom(1/2*s12)*mt^7*s12 + 1/8*denom(1/4
      *s12^2)*mt*s12*s14^2*s23^2 + 1/4*denom(1/4*s12^2)*mt*s12*s13*s14*s23*s24
       + 1/4*denom(1/4*s12^2)*mt*s12*s13*s14*s23^2 + 1/8*denom(1/4*s12^2)*mt*
      s12*s13^2*s24^2 + 1/4*denom(1/4*s12^2)*mt*s12*s13^2*s23*s24 - 1/4*denom(
      1/4*s12^2)*mt^3*s12*s14*s23*s24 - 1/2*denom(1/4*s12^2)*mt^3*s12*s14*
      s23^2 - 1/4*denom(1/4*s12^2)*mt^3*s12*s14^2*s23 - 1/4*denom(1/4*s12^2)*
      mt^3*s12*s13*s24^2 - 3/4*denom(1/4*s12^2)*mt^3*s12*s13*s23*s24 - 1/4*
      denom(1/4*s12^2)*mt^3*s12*s13*s23^2 - 1/4*denom(1/4*s12^2)*mt^3*s12*s13*
      s14*s24 - 3/4*denom(1/4*s12^2)*mt^3*s12*s13*s14*s23 - 1/2*denom(1/4*
      s12^2)*mt^3*s12*s13^2*s24 - 1/4*denom(1/4*s12^2)*mt^3*s12*s13^2*s23 + 1/
      8*denom(1/4*s12^2)*mt^5*s12*s24^2 + 1/2*denom(1/4*s12^2)*mt^5*s12*s23*
      s24 + 3/8*denom(1/4*s12^2)*mt^5*s12*s23^2 + 1/4*denom(1/4*s12^2)*mt^5*
      s12*s14*s24 + 5/4*denom(1/4*s12^2)*mt^5*s12*s14*s23 + 1/8*denom(1/4*
      s12^2)*mt^5*s12*s14^2 + 5/4*denom(1/4*s12^2)*mt^5*s12*s13*s24 + 5/4*
      denom(1/4*s12^2)*mt^5*s12*s13*s23 + 1/2*denom(1/4*s12^2)*mt^5*s12*s13*
      s14 + 3/8*denom(1/4*s12^2)*mt^5*s12*s13^2 - 3/4*denom(1/4*s12^2)*mt^7*
      s12*s24 - 5/4*denom(1/4*s12^2)*mt^7*s12*s23 - 3/4*denom(1/4*s12^2)*mt^7*
      s12*s14 - 5/4*denom(1/4*s12^2)*mt^7*s12*s13 + denom(1/4*s12^2)*mt^9*s12;
 
 .sort
id KMatrix(9,29) =   0;
 
 .sort
id KMatrix(9,30) =   - mt^3*s12*s24 - mt^3*s12*s23 - mt^3*s12*s14 - mt^3*s12*
      s13 - mt^3*s12^2 + mt^3*mh^2*s12 + 4*mt^5*s12 + 1/2*denom(1/2*s12)*mt*
      s12*s13*s23*s24 + 1/2*denom(1/2*s12)*mt*s12*s13*s23^2 + 1/2*denom(1/2*
      s12)*mt*s12*s13*s14*s23 + 1/2*denom(1/2*s12)*mt*s12*s13^2*s23 + 1/2*
      denom(1/2*s12)*mt*s12^2*s13*s23 - 1/2*denom(1/2*s12)*mt*mh^2*s12*s13*s23
       - 1/2*denom(1/2*s12)*mt^3*s12*s23*s24 - 1/2*denom(1/2*s12)*mt^3*s12*
      s23^2 - denom(1/2*s12)*mt^3*s12*s14*s23 - denom(1/2*s12)*mt^3*s12*s13*
      s24 - 4*denom(1/2*s12)*mt^3*s12*s13*s23 - 1/2*denom(1/2*s12)*mt^3*s12*
      s13*s14 - 1/2*denom(1/2*s12)*mt^3*s12*s13^2 - 1/2*denom(1/2*s12)*mt^3*
      s12^2*s23 - 1/2*denom(1/2*s12)*mt^3*s12^2*s13 + 1/2*denom(1/2*s12)*mt^3*
      mh^2*s12*s23 + 1/2*denom(1/2*s12)*mt^3*mh^2*s12*s13 + denom(1/2*s12)*
      mt^5*s12*s24 + 4*denom(1/2*s12)*mt^5*s12*s23 + denom(1/2*s12)*mt^5*s12*
      s14 + 4*denom(1/2*s12)*mt^5*s12*s13 + 1/2*denom(1/2*s12)*mt^5*s12^2 - 1/
      2*denom(1/2*s12)*mt^5*mh^2*s12 - 4*denom(1/2*s12)*mt^7*s12 + 1/4*denom(1/
      4*s12^2)*mt*s12*s13*s14*s23^2 + 1/4*denom(1/4*s12^2)*mt*s12*s13^2*s23*
      s24 + 1/2*denom(1/4*s12^2)*mt*s12*s13^2*s23^2 - 1/4*denom(1/4*s12^2)*
      mt^3*s12*s14*s23^2 - 1/2*denom(1/4*s12^2)*mt^3*s12*s13*s23*s24 - 5/4*
      denom(1/4*s12^2)*mt^3*s12*s13*s23^2 - 1/2*denom(1/4*s12^2)*mt^3*s12*s13*
      s14*s23 - 1/4*denom(1/4*s12^2)*mt^3*s12*s13^2*s24 - 5/4*denom(1/4*s12^2)
      *mt^3*s12*s13^2*s23 + 1/4*denom(1/4*s12^2)*mt^5*s12*s23*s24 + 3/4*denom(
      1/4*s12^2)*mt^5*s12*s23^2 + 1/2*denom(1/4*s12^2)*mt^5*s12*s14*s23 + 1/2*
      denom(1/4*s12^2)*mt^5*s12*s13*s24 + 3*denom(1/4*s12^2)*mt^5*s12*s13*s23
       + 1/4*denom(1/4*s12^2)*mt^5*s12*s13*s14 + 3/4*denom(1/4*s12^2)*mt^5*s12
      *s13^2 - 1/4*denom(1/4*s12^2)*mt^7*s12*s24 - 7/4*denom(1/4*s12^2)*mt^7*
      s12*s23 - 1/4*denom(1/4*s12^2)*mt^7*s12*s14 - 7/4*denom(1/4*s12^2)*mt^7*
      s12*s13 + denom(1/4*s12^2)*mt^9*s12;
 
 .sort
id KMatrix(9,31) =   0;
 
 .sort
id KMatrix(9,32) =  1/2*mt*s12*s24^2 + mt*s12*s23*s24 + 1/2*mt*s12*s23^2 + mt*
      s12*s14*s24 + mt*s12*s14*s23 + 1/2*mt*s12*s14^2 + mt*s12*s13*s24 + mt*
      s12*s13*s23 + mt*s12*s13*s14 + 1/2*mt*s12*s13^2 + mt*s12^2*s24 + mt*
      s12^2*s23 + mt*s12^2*s14 + mt*s12^2*s13 + 1/2*mt*s12^3 - mt*mh^2*s12*s24
       - mt*mh^2*s12*s23 - mt*mh^2*s12*s14 - mt*mh^2*s12*s13 - mt*mh^2*s12^2
       + 1/2*mt*mh^4*s12 - 3*mt^3*s12*s24 - 3*mt^3*s12*s23 - 3*mt^3*s12*s14 - 
      3*mt^3*s12*s13 - 3*mt^3*s12^2 + 3*mt^3*mh^2*s12 + 4*mt^5*s12 + 1/2*
      denom(1/2*s12)*mt*s12*s14*s23*s24 + 1/2*denom(1/2*s12)*mt*s12*s14*s23^2
       + 1/2*denom(1/2*s12)*mt*s12*s14^2*s23 + 1/2*denom(1/2*s12)*mt*s12*s13*
      s24^2 + denom(1/2*s12)*mt*s12*s13*s23*s24 + 1/2*denom(1/2*s12)*mt*s12*
      s13*s23^2 + 1/2*denom(1/2*s12)*mt*s12*s13*s14*s24 + denom(1/2*s12)*mt*
      s12*s13*s14*s23 + 1/2*denom(1/2*s12)*mt*s12*s13^2*s24 + 1/2*denom(1/2*
      s12)*mt*s12*s13^2*s23 + 1/2*denom(1/2*s12)*mt*s12^2*s14*s23 + 1/2*denom(
      1/2*s12)*mt*s12^2*s13*s24 + 1/2*denom(1/2*s12)*mt*s12^2*s13*s23 - 1/2*
      denom(1/2*s12)*mt*mh^2*s12*s14*s23 - 1/2*denom(1/2*s12)*mt*mh^2*s12*s13*
      s24 - 1/2*denom(1/2*s12)*mt*mh^2*s12*s13*s23 - 1/2*denom(1/2*s12)*mt^3*
      s12*s24^2 - 3/2*denom(1/2*s12)*mt^3*s12*s23*s24 - denom(1/2*s12)*mt^3*
      s12*s23^2 - denom(1/2*s12)*mt^3*s12*s14*s24 - 3*denom(1/2*s12)*mt^3*s12*
      s14*s23 - 1/2*denom(1/2*s12)*mt^3*s12*s14^2 - 3*denom(1/2*s12)*mt^3*s12*
      s13*s24 - 3*denom(1/2*s12)*mt^3*s12*s13*s23 - 3/2*denom(1/2*s12)*mt^3*
      s12*s13*s14 - denom(1/2*s12)*mt^3*s12*s13^2 - 1/2*denom(1/2*s12)*mt^3*
      s12^2*s24 - denom(1/2*s12)*mt^3*s12^2*s23 - 1/2*denom(1/2*s12)*mt^3*
      s12^2*s14 - denom(1/2*s12)*mt^3*s12^2*s13 + 1/2*denom(1/2*s12)*mt^3*mh^2
      *s12*s24 + denom(1/2*s12)*mt^3*mh^2*s12*s23 + 1/2*denom(1/2*s12)*mt^3*
      mh^2*s12*s14 + denom(1/2*s12)*mt^3*mh^2*s12*s13 + 3*denom(1/2*s12)*mt^5*
      s12*s24 + 4*denom(1/2*s12)*mt^5*s12*s23 + 3*denom(1/2*s12)*mt^5*s12*s14
       + 4*denom(1/2*s12)*mt^5*s12*s13 + 3/2*denom(1/2*s12)*mt^5*s12^2 - 3/2*
      denom(1/2*s12)*mt^5*mh^2*s12 - 4*denom(1/2*s12)*mt^7*s12 + 1/8*denom(1/4
      *s12^2)*mt*s12*s14^2*s23^2 + 1/4*denom(1/4*s12^2)*mt*s12*s13*s14*s23*s24
       + 1/4*denom(1/4*s12^2)*mt*s12*s13*s14*s23^2 + 1/8*denom(1/4*s12^2)*mt*
      s12*s13^2*s24^2 + 1/4*denom(1/4*s12^2)*mt*s12*s13^2*s23*s24 - 1/4*denom(
      1/4*s12^2)*mt^3*s12*s14*s23*s24 - 1/2*denom(1/4*s12^2)*mt^3*s12*s14*
      s23^2 - 1/4*denom(1/4*s12^2)*mt^3*s12*s14^2*s23 - 1/4*denom(1/4*s12^2)*
      mt^3*s12*s13*s24^2 - 3/4*denom(1/4*s12^2)*mt^3*s12*s13*s23*s24 - 1/4*
      denom(1/4*s12^2)*mt^3*s12*s13*s23^2 - 1/4*denom(1/4*s12^2)*mt^3*s12*s13*
      s14*s24 - 3/4*denom(1/4*s12^2)*mt^3*s12*s13*s14*s23 - 1/2*denom(1/4*
      s12^2)*mt^3*s12*s13^2*s24 - 1/4*denom(1/4*s12^2)*mt^3*s12*s13^2*s23 + 1/
      8*denom(1/4*s12^2)*mt^5*s12*s24^2 + 1/2*denom(1/4*s12^2)*mt^5*s12*s23*
      s24 + 3/8*denom(1/4*s12^2)*mt^5*s12*s23^2 + 1/4*denom(1/4*s12^2)*mt^5*
      s12*s14*s24 + 5/4*denom(1/4*s12^2)*mt^5*s12*s14*s23 + 1/8*denom(1/4*
      s12^2)*mt^5*s12*s14^2 + 5/4*denom(1/4*s12^2)*mt^5*s12*s13*s24 + 5/4*
      denom(1/4*s12^2)*mt^5*s12*s13*s23 + 1/2*denom(1/4*s12^2)*mt^5*s12*s13*
      s14 + 3/8*denom(1/4*s12^2)*mt^5*s12*s13^2 - 3/4*denom(1/4*s12^2)*mt^7*
      s12*s24 - 5/4*denom(1/4*s12^2)*mt^7*s12*s23 - 3/4*denom(1/4*s12^2)*mt^7*
      s12*s14 - 5/4*denom(1/4*s12^2)*mt^7*s12*s13 + denom(1/4*s12^2)*mt^9*s12;
 
 .sort
id KMatrix(9,33) =   0;
 
 .sort
id KMatrix(9,34) =  mt^2*s14*s23 + mt^2*s13*s24 + mt^2*s12*s24 + mt^2*s12*s23
       + mt^2*s12*s14 + mt^2*s12*s13 + mt^2*s12^2 - mt^2*mh^2*s12 - mt^4*s24
       - mt^4*s23 - mt^4*s14 - mt^4*s13 - 4*mt^4*s12 + 2*mt^6 - denom(1/2*s12)
      *s13*s14*s23^2 - denom(1/2*s12)*s13^2*s23*s24 - denom(1/2*s12)*s12*s13*
      s23*s24 - denom(1/2*s12)*s12*s13*s23^2 - denom(1/2*s12)*s12*s13*s14*s23
       - denom(1/2*s12)*s12*s13^2*s23 - denom(1/2*s12)*s12^2*s13*s23 + denom(1/
      2*s12)*mh^2*s12*s13*s23 + denom(1/2*s12)*mt^2*s14*s23^2 + 2*denom(1/2*
      s12)*mt^2*s13*s23*s24 + denom(1/2*s12)*mt^2*s13*s23^2 + 2*denom(1/2*s12)
      *mt^2*s13*s14*s23 + denom(1/2*s12)*mt^2*s13^2*s24 + denom(1/2*s12)*mt^2*
      s13^2*s23 + denom(1/2*s12)*mt^2*s12*s23*s24 + denom(1/2*s12)*mt^2*s12*
      s23^2 + denom(1/2*s12)*mt^2*s12*s14*s23 + denom(1/2*s12)*mt^2*s12*s13*
      s24 + 6*denom(1/2*s12)*mt^2*s12*s13*s23 + denom(1/2*s12)*mt^2*s12*s13*
      s14 + denom(1/2*s12)*mt^2*s12*s13^2 + denom(1/2*s12)*mt^2*s12^2*s23 + 
      denom(1/2*s12)*mt^2*s12^2*s13 - denom(1/2*s12)*mt^2*mh^2*s12*s23 - 
      denom(1/2*s12)*mt^2*mh^2*s12*s13 - denom(1/2*s12)*mt^4*s23*s24 - denom(1/
      2*s12)*mt^4*s23^2 - 2*denom(1/2*s12)*mt^4*s14*s23 - 2*denom(1/2*s12)*
      mt^4*s13*s24 - 4*denom(1/2*s12)*mt^4*s13*s23 - denom(1/2*s12)*mt^4*s13*
      s14 - denom(1/2*s12)*mt^4*s13^2 - denom(1/2*s12)*mt^4*s12*s24 - 5*denom(
      1/2*s12)*mt^4*s12*s23 - denom(1/2*s12)*mt^4*s12*s14 - 5*denom(1/2*s12)*
      mt^4*s12*s13 - denom(1/2*s12)*mt^4*s12^2 + denom(1/2*s12)*mt^4*mh^2*s12
       + denom(1/2*s12)*mt^6*s24 + 3*denom(1/2*s12)*mt^6*s23 + denom(1/2*s12)*
      mt^6*s14 + 3*denom(1/2*s12)*mt^6*s13 + 4*denom(1/2*s12)*mt^6*s12 - 2*
      denom(1/2*s12)*mt^8 + 1/4*denom(1/4*s12^2)*s12*s13*s14*s23^2 + 1/4*
      denom(1/4*s12^2)*s12*s13^2*s23*s24 + 1/4*denom(1/4*s12^2)*s12^2*s13*s23*
      s24 + 1/4*denom(1/4*s12^2)*s12^2*s13*s23^2 + 1/4*denom(1/4*s12^2)*s12^2*
      s13*s14*s23 + 1/4*denom(1/4*s12^2)*s12^2*s13^2*s23 + 1/4*denom(1/4*s12^2
      )*s12^3*s13*s23 - 1/4*denom(1/4*s12^2)*mh^2*s12^2*s13*s23 - 1/4*denom(1/
      4*s12^2)*mt^2*s12*s14*s23^2 - 1/2*denom(1/4*s12^2)*mt^2*s12*s13*s23*s24
       - 1/4*denom(1/4*s12^2)*mt^2*s12*s13*s23^2 - 1/2*denom(1/4*s12^2)*mt^2*
      s12*s13*s14*s23 - 1/4*denom(1/4*s12^2)*mt^2*s12*s13^2*s24 - 1/4*denom(1/
      4*s12^2)*mt^2*s12*s13^2*s23 - 1/4*denom(1/4*s12^2)*mt^2*s12^2*s23*s24 - 
      1/4*denom(1/4*s12^2)*mt^2*s12^2*s23^2 - 1/4*denom(1/4*s12^2)*mt^2*s12^2*
      s14*s23 - 1/4*denom(1/4*s12^2)*mt^2*s12^2*s13*s24 - 3/2*denom(1/4*s12^2)
      *mt^2*s12^2*s13*s23 - 1/4*denom(1/4*s12^2)*mt^2*s12^2*s13*s14 - 1/4*
      denom(1/4*s12^2)*mt^2*s12^2*s13^2 - 1/4*denom(1/4*s12^2)*mt^2*s12^3*s23
       - 1/4*denom(1/4*s12^2)*mt^2*s12^3*s13 + 1/4*denom(1/4*s12^2)*mt^2*mh^2*
      s12^2*s23 + 1/4*denom(1/4*s12^2)*mt^2*mh^2*s12^2*s13 + 1/4*denom(1/4*
      s12^2)*mt^4*s12*s23*s24 + 1/4*denom(1/4*s12^2)*mt^4*s12*s23^2 + 1/2*
      denom(1/4*s12^2)*mt^4*s12*s14*s23 + 1/2*denom(1/4*s12^2)*mt^4*s12*s13*
      s24 + denom(1/4*s12^2)*mt^4*s12*s13*s23 + 1/4*denom(1/4*s12^2)*mt^4*s12*
      s13*s14 + 1/4*denom(1/4*s12^2)*mt^4*s12*s13^2 + 1/4*denom(1/4*s12^2)*
      mt^4*s12^2*s24 + 5/4*denom(1/4*s12^2)*mt^4*s12^2*s23 + 1/4*denom(1/4*
      s12^2)*mt^4*s12^2*s14 + 5/4*denom(1/4*s12^2)*mt^4*s12^2*s13 + 1/4*denom(
      1/4*s12^2)*mt^4*s12^3 - 1/4*denom(1/4*s12^2)*mt^4*mh^2*s12^2 - 1/4*
      denom(1/4*s12^2)*mt^6*s12*s24 - 3/4*denom(1/4*s12^2)*mt^6*s12*s23 - 1/4*
      denom(1/4*s12^2)*mt^6*s12*s14 - 3/4*denom(1/4*s12^2)*mt^6*s12*s13 - 
      denom(1/4*s12^2)*mt^6*s12^2 + 1/2*denom(1/4*s12^2)*mt^8*s12;
 
 .sort
id KMatrix(9,35) =  2*mt^2*s23*s24 - 2*mt^4*s24 - 2*mt^4*s23 + 2*mt^6 - 2*
      denom(1/2*s12)*s13*s23^2*s24 + 2*denom(1/2*s12)*mt^2*s23^2*s24 + 4*
      denom(1/2*s12)*mt^2*s13*s23*s24 + 2*denom(1/2*s12)*mt^2*s13*s23^2 - 4*
      denom(1/2*s12)*mt^4*s23*s24 - 2*denom(1/2*s12)*mt^4*s23^2 - 2*denom(1/2*
      s12)*mt^4*s13*s24 - 4*denom(1/2*s12)*mt^4*s13*s23 + 2*denom(1/2*s12)*
      mt^6*s24 + 4*denom(1/2*s12)*mt^6*s23 + 2*denom(1/2*s12)*mt^6*s13 - 2*
      denom(1/2*s12)*mt^8 + 1/2*denom(1/4*s12^2)*s12*s13*s23^2*s24 - 1/2*
      denom(1/4*s12^2)*mt^2*s12*s23^2*s24 - denom(1/4*s12^2)*mt^2*s12*s13*s23*
      s24 - 1/2*denom(1/4*s12^2)*mt^2*s12*s13*s23^2 + denom(1/4*s12^2)*mt^4*
      s12*s23*s24 + 1/2*denom(1/4*s12^2)*mt^4*s12*s23^2 + 1/2*denom(1/4*s12^2)
      *mt^4*s12*s13*s24 + denom(1/4*s12^2)*mt^4*s12*s13*s23 - 1/2*denom(1/4*
      s12^2)*mt^6*s12*s24 - denom(1/4*s12^2)*mt^6*s12*s23 - 1/2*denom(1/4*
      s12^2)*mt^6*s12*s13 + 1/2*denom(1/4*s12^2)*mt^8*s12;
 
 .sort
id KMatrix(9,36) =   - 2*mt^3*s12*s23 + 2*mt^5*s12 + 2*denom(1/2*s12)*mt*s12*
      s13*s23^2 - 2*denom(1/2*s12)*mt^3*s12*s23^2 - 4*denom(1/2*s12)*mt^3*s12*
      s13*s23 + 4*denom(1/2*s12)*mt^5*s12*s23 + 2*denom(1/2*s12)*mt^5*s12*s13
       - 2*denom(1/2*s12)*mt^7*s12 - 1/2*denom(1/4*s12^2)*mt*s12^2*s13*s23^2
       + 1/2*denom(1/4*s12^2)*mt^3*s12^2*s23^2 + denom(1/4*s12^2)*mt^3*s12^2*
      s13*s23 - denom(1/4*s12^2)*mt^5*s12^2*s23 - 1/2*denom(1/4*s12^2)*mt^5*
      s12^2*s13 + 1/2*denom(1/4*s12^2)*mt^7*s12^2;
 
 .sort
id KMatrix(10,1) =   - mt^3*s24^2 + mt^3*s23^2 - mt^3*s14*s24 + mt^3*s14*s23
       - mt^3*s13*s24 + mt^3*s13*s23 - mt^3*s12*s24 + mt^3*s12*s23 + mt^3*mh^2
      *s24 - mt^3*mh^2*s23 + 2*mt^5*s24 - 2*mt^5*s23 + 1/2*denom(1/2*s12)*mt*
      s13*s23*s24^2 - 1/2*denom(1/2*s12)*mt*s13*s23^3 + 1/2*denom(1/2*s12)*mt*
      s13*s14*s23*s24 - 1/2*denom(1/2*s12)*mt*s13*s14*s23^2 + 1/2*denom(1/2*
      s12)*mt*s13^2*s23*s24 - 1/2*denom(1/2*s12)*mt*s13^2*s23^2 + 1/2*denom(1/
      2*s12)*mt*s12*s13*s23*s24 - 1/2*denom(1/2*s12)*mt*s12*s13*s23^2 - 1/2*
      denom(1/2*s12)*mt*mh^2*s13*s23*s24 + 1/2*denom(1/2*s12)*mt*mh^2*s13*
      s23^2 - 1/2*denom(1/2*s12)*mt^3*s23*s24^2 + 1/2*denom(1/2*s12)*mt^3*
      s23^3 - denom(1/2*s12)*mt^3*s14*s23*s24 + denom(1/2*s12)*mt^3*s14*s23^2
       - denom(1/2*s12)*mt^3*s13*s24^2 - denom(1/2*s12)*mt^3*s13*s23*s24 + 2*
      denom(1/2*s12)*mt^3*s13*s23^2 - 1/2*denom(1/2*s12)*mt^3*s13*s14*s24 + 1/
      2*denom(1/2*s12)*mt^3*s13*s14*s23 - 1/2*denom(1/2*s12)*mt^3*s13^2*s24 + 
      1/2*denom(1/2*s12)*mt^3*s13^2*s23 - 1/2*denom(1/2*s12)*mt^3*s12*s23*s24
       + 1/2*denom(1/2*s12)*mt^3*s12*s23^2 - 1/2*denom(1/2*s12)*mt^3*s12*s13*
      s24 + 1/2*denom(1/2*s12)*mt^3*s12*s13*s23 + 1/2*denom(1/2*s12)*mt^3*mh^2
      *s23*s24 - 1/2*denom(1/2*s12)*mt^3*mh^2*s23^2 + 1/2*denom(1/2*s12)*mt^3*
      mh^2*s13*s24 - 1/2*denom(1/2*s12)*mt^3*mh^2*s13*s23 + denom(1/2*s12)*
      mt^5*s24^2 + denom(1/2*s12)*mt^5*s23*s24 - 2*denom(1/2*s12)*mt^5*s23^2
       + denom(1/2*s12)*mt^5*s14*s24 - denom(1/2*s12)*mt^5*s14*s23 + 2*denom(1/
      2*s12)*mt^5*s13*s24 - 2*denom(1/2*s12)*mt^5*s13*s23 + 1/2*denom(1/2*s12)
      *mt^5*s12*s24 - 1/2*denom(1/2*s12)*mt^5*s12*s23 - 1/2*denom(1/2*s12)*
      mt^5*mh^2*s24 + 1/2*denom(1/2*s12)*mt^5*mh^2*s23 - 2*denom(1/2*s12)*mt^7
      *s24 + 2*denom(1/2*s12)*mt^7*s23 + 1/4*denom(1/4*s12^2)*mt*s13*s14*s23^2
      *s24 - 1/4*denom(1/4*s12^2)*mt*s13*s14*s23^3 + 1/4*denom(1/4*s12^2)*mt*
      s13^2*s23*s24^2 - 1/4*denom(1/4*s12^2)*mt*s13^2*s23^2*s24 - 1/4*denom(1/
      4*s12^2)*mt^3*s14*s23^2*s24 + 1/4*denom(1/4*s12^2)*mt^3*s14*s23^3 - 1/2*
      denom(1/4*s12^2)*mt^3*s13*s23*s24^2 + 1/4*denom(1/4*s12^2)*mt^3*s13*
      s23^2*s24 + 1/4*denom(1/4*s12^2)*mt^3*s13*s23^3 - 1/2*denom(1/4*s12^2)*
      mt^3*s13*s14*s23*s24 + 1/2*denom(1/4*s12^2)*mt^3*s13*s14*s23^2 - 1/4*
      denom(1/4*s12^2)*mt^3*s13^2*s24^2 + 1/4*denom(1/4*s12^2)*mt^3*s13^2*
      s23^2 + 1/4*denom(1/4*s12^2)*mt^5*s23*s24^2 - 1/4*denom(1/4*s12^2)*mt^5*
      s23^3 + 1/2*denom(1/4*s12^2)*mt^5*s14*s23*s24 - 1/2*denom(1/4*s12^2)*
      mt^5*s14*s23^2 + 1/2*denom(1/4*s12^2)*mt^5*s13*s24^2 + 1/2*denom(1/4*
      s12^2)*mt^5*s13*s23*s24 - denom(1/4*s12^2)*mt^5*s13*s23^2 + 1/4*denom(1/
      4*s12^2)*mt^5*s13*s14*s24 - 1/4*denom(1/4*s12^2)*mt^5*s13*s14*s23 + 1/4*
      denom(1/4*s12^2)*mt^5*s13^2*s24 - 1/4*denom(1/4*s12^2)*mt^5*s13^2*s23 - 
      1/4*denom(1/4*s12^2)*mt^7*s24^2 - 1/2*denom(1/4*s12^2)*mt^7*s23*s24 + 3/
      4*denom(1/4*s12^2)*mt^7*s23^2 - 1/4*denom(1/4*s12^2)*mt^7*s14*s24 + 1/4*
      denom(1/4*s12^2)*mt^7*s14*s23 - 3/4*denom(1/4*s12^2)*mt^7*s13*s24 + 3/4*
      denom(1/4*s12^2)*mt^7*s13*s23 + 1/2*denom(1/4*s12^2)*mt^9*s24 - 1/2*
      denom(1/4*s12^2)*mt^9*s23;
 
 .sort
id KMatrix(10,2) =  2*mt^5*s24 - 2*mt^5*s23 - denom(1/2*s12)*mt^3*s14*s24^2 + 
      denom(1/2*s12)*mt^3*s14*s23*s24 - denom(1/2*s12)*mt^3*s13*s23*s24 + 
      denom(1/2*s12)*mt^3*s13*s23^2 + denom(1/2*s12)*mt^5*s24^2 - denom(1/2*
      s12)*mt^5*s23^2 + denom(1/2*s12)*mt^5*s14*s24 - denom(1/2*s12)*mt^5*s14*
      s23 + denom(1/2*s12)*mt^5*s13*s24 - denom(1/2*s12)*mt^5*s13*s23 - 2*
      denom(1/2*s12)*mt^7*s24 + 2*denom(1/2*s12)*mt^7*s23 + 1/2*denom(1/4*
      s12^2)*mt*s13*s14*s23*s24^2 - 1/2*denom(1/4*s12^2)*mt*s13*s14*s23^2*s24
       - 1/2*denom(1/4*s12^2)*mt^3*s14*s23*s24^2 + 1/2*denom(1/4*s12^2)*mt^3*
      s14*s23^2*s24 - 1/2*denom(1/4*s12^2)*mt^3*s13*s23*s24^2 + 1/2*denom(1/4*
      s12^2)*mt^3*s13*s23^2*s24 - 1/2*denom(1/4*s12^2)*mt^3*s13*s14*s24^2 + 1/
      2*denom(1/4*s12^2)*mt^3*s13*s14*s23^2 + 1/2*denom(1/4*s12^2)*mt^5*s23*
      s24^2 - 1/2*denom(1/4*s12^2)*mt^5*s23^2*s24 + 1/2*denom(1/4*s12^2)*mt^5*
      s14*s24^2 - 1/2*denom(1/4*s12^2)*mt^5*s14*s23^2 + 1/2*denom(1/4*s12^2)*
      mt^5*s13*s24^2 - 1/2*denom(1/4*s12^2)*mt^5*s13*s23^2 + 1/2*denom(1/4*
      s12^2)*mt^5*s13*s14*s24 - 1/2*denom(1/4*s12^2)*mt^5*s13*s14*s23 - 1/2*
      denom(1/4*s12^2)*mt^7*s24^2 + 1/2*denom(1/4*s12^2)*mt^7*s23^2 - 1/2*
      denom(1/4*s12^2)*mt^7*s14*s24 + 1/2*denom(1/4*s12^2)*mt^7*s14*s23 - 1/2*
      denom(1/4*s12^2)*mt^7*s13*s24 + 1/2*denom(1/4*s12^2)*mt^7*s13*s23 + 1/2*
      denom(1/4*s12^2)*mt^9*s24 - 1/2*denom(1/4*s12^2)*mt^9*s23;
 
 .sort
id KMatrix(10,3) =  1/2*mt*s24^3 + 1/2*mt*s23*s24^2 - 1/2*mt*s23^2*s24 - 1/2*
      mt*s23^3 + mt*s14*s24^2 - mt*s14*s23^2 + 1/2*mt*s14^2*s24 - 1/2*mt*s14^2
      *s23 + mt*s13*s24^2 - mt*s13*s23^2 + mt*s13*s14*s24 - mt*s13*s14*s23 + 1/
      2*mt*s13^2*s24 - 1/2*mt*s13^2*s23 + mt*s12*s24^2 - mt*s12*s23^2 + mt*s12
      *s14*s24 - mt*s12*s14*s23 + mt*s12*s13*s24 - mt*s12*s13*s23 + 1/2*mt*
      s12^2*s24 - 1/2*mt*s12^2*s23 - mt*mh^2*s24^2 + mt*mh^2*s23^2 - mt*mh^2*
      s14*s24 + mt*mh^2*s14*s23 - mt*mh^2*s13*s24 + mt*mh^2*s13*s23 - mt*mh^2*
      s12*s24 + mt*mh^2*s12*s23 + 1/2*mt*mh^4*s24 - 1/2*mt*mh^4*s23 - 2*mt^3*
      s24^2 + 2*mt^3*s23^2 - 2*mt^3*s14*s24 + 2*mt^3*s14*s23 - 2*mt^3*s13*s24
       + 2*mt^3*s13*s23 - 2*mt^3*s12*s24 + 2*mt^3*s12*s23 + 2*mt^3*mh^2*s24 - 
      2*mt^3*mh^2*s23 + 2*mt^5*s24 - 2*mt^5*s23 + 1/2*denom(1/2*s12)*mt*s14*
      s23*s24^2 - 1/2*denom(1/2*s12)*mt*s14*s23^3 + 1/2*denom(1/2*s12)*mt*
      s14^2*s23*s24 - 1/2*denom(1/2*s12)*mt*s14^2*s23^2 + 1/2*denom(1/2*s12)*
      mt*s13*s24^3 - 1/2*denom(1/2*s12)*mt*s13*s23^2*s24 + 1/2*denom(1/2*s12)*
      mt*s13*s14*s24^2 - 1/2*denom(1/2*s12)*mt*s13*s14*s23^2 + 1/2*denom(1/2*
      s12)*mt*s13^2*s24^2 - 1/2*denom(1/2*s12)*mt*s13^2*s23*s24 + 1/2*denom(1/
      2*s12)*mt*s12*s14*s23*s24 - 1/2*denom(1/2*s12)*mt*s12*s14*s23^2 + 1/2*
      denom(1/2*s12)*mt*s12*s13*s24^2 - 1/2*denom(1/2*s12)*mt*s12*s13*s23*s24
       - 1/2*denom(1/2*s12)*mt*mh^2*s14*s23*s24 + 1/2*denom(1/2*s12)*mt*mh^2*
      s14*s23^2 - 1/2*denom(1/2*s12)*mt*mh^2*s13*s24^2 + 1/2*denom(1/2*s12)*mt
      *mh^2*s13*s23*s24 - 1/2*denom(1/2*s12)*mt^3*s24^3 - 1/2*denom(1/2*s12)*
      mt^3*s23*s24^2 + 1/2*denom(1/2*s12)*mt^3*s23^2*s24 + 1/2*denom(1/2*s12)*
      mt^3*s23^3 - denom(1/2*s12)*mt^3*s14*s24^2 - denom(1/2*s12)*mt^3*s14*s23
      *s24 + 2*denom(1/2*s12)*mt^3*s14*s23^2 - 1/2*denom(1/2*s12)*mt^3*s14^2*
      s24 + 1/2*denom(1/2*s12)*mt^3*s14^2*s23 - 2*denom(1/2*s12)*mt^3*s13*
      s24^2 + denom(1/2*s12)*mt^3*s13*s23*s24 + denom(1/2*s12)*mt^3*s13*s23^2
       - denom(1/2*s12)*mt^3*s13*s14*s24 + denom(1/2*s12)*mt^3*s13*s14*s23 - 1/
      2*denom(1/2*s12)*mt^3*s13^2*s24 + 1/2*denom(1/2*s12)*mt^3*s13^2*s23 - 1/
      2*denom(1/2*s12)*mt^3*s12*s24^2 + 1/2*denom(1/2*s12)*mt^3*s12*s23^2 - 1/
      2*denom(1/2*s12)*mt^3*s12*s14*s24 + 1/2*denom(1/2*s12)*mt^3*s12*s14*s23
       - 1/2*denom(1/2*s12)*mt^3*s12*s13*s24 + 1/2*denom(1/2*s12)*mt^3*s12*s13
      *s23 + 1/2*denom(1/2*s12)*mt^3*mh^2*s24^2 - 1/2*denom(1/2*s12)*mt^3*mh^2
      *s23^2 + 1/2*denom(1/2*s12)*mt^3*mh^2*s14*s24 - 1/2*denom(1/2*s12)*mt^3*
      mh^2*s14*s23 + 1/2*denom(1/2*s12)*mt^3*mh^2*s13*s24 - 1/2*denom(1/2*s12)
      *mt^3*mh^2*s13*s23 + 2*denom(1/2*s12)*mt^5*s24^2 - 2*denom(1/2*s12)*mt^5
      *s23^2 + 2*denom(1/2*s12)*mt^5*s14*s24 - 2*denom(1/2*s12)*mt^5*s14*s23
       + 2*denom(1/2*s12)*mt^5*s13*s24 - 2*denom(1/2*s12)*mt^5*s13*s23 + 
      denom(1/2*s12)*mt^5*s12*s24 - denom(1/2*s12)*mt^5*s12*s23 - denom(1/2*
      s12)*mt^5*mh^2*s24 + denom(1/2*s12)*mt^5*mh^2*s23 - 2*denom(1/2*s12)*
      mt^7*s24 + 2*denom(1/2*s12)*mt^7*s23 + 1/8*denom(1/4*s12^2)*mt*s14^2*
      s23^2*s24 - 1/8*denom(1/4*s12^2)*mt*s14^2*s23^3 + 1/4*denom(1/4*s12^2)*
      mt*s13*s14*s23*s24^2 - 1/4*denom(1/4*s12^2)*mt*s13*s14*s23^2*s24 + 1/8*
      denom(1/4*s12^2)*mt*s13^2*s24^3 - 1/8*denom(1/4*s12^2)*mt*s13^2*s23*
      s24^2 - 1/4*denom(1/4*s12^2)*mt^3*s14*s23*s24^2 + 1/4*denom(1/4*s12^2)*
      mt^3*s14*s23^3 - 1/4*denom(1/4*s12^2)*mt^3*s14^2*s23*s24 + 1/4*denom(1/4
      *s12^2)*mt^3*s14^2*s23^2 - 1/4*denom(1/4*s12^2)*mt^3*s13*s24^3 + 1/4*
      denom(1/4*s12^2)*mt^3*s13*s23^2*s24 - 1/4*denom(1/4*s12^2)*mt^3*s13*s14*
      s24^2 + 1/4*denom(1/4*s12^2)*mt^3*s13*s14*s23^2 - 1/4*denom(1/4*s12^2)*
      mt^3*s13^2*s24^2 + 1/4*denom(1/4*s12^2)*mt^3*s13^2*s23*s24 + 1/8*denom(1/
      4*s12^2)*mt^5*s24^3 + 1/8*denom(1/4*s12^2)*mt^5*s23*s24^2 - 1/8*denom(1/
      4*s12^2)*mt^5*s23^2*s24 - 1/8*denom(1/4*s12^2)*mt^5*s23^3 + 1/4*denom(1/
      4*s12^2)*mt^5*s14*s24^2 + 1/2*denom(1/4*s12^2)*mt^5*s14*s23*s24 - 3/4*
      denom(1/4*s12^2)*mt^5*s14*s23^2 + 1/8*denom(1/4*s12^2)*mt^5*s14^2*s24 - 
      1/8*denom(1/4*s12^2)*mt^5*s14^2*s23 + 3/4*denom(1/4*s12^2)*mt^5*s13*
      s24^2 - 1/2*denom(1/4*s12^2)*mt^5*s13*s23*s24 - 1/4*denom(1/4*s12^2)*
      mt^5*s13*s23^2 + 1/4*denom(1/4*s12^2)*mt^5*s13*s14*s24 - 1/4*denom(1/4*
      s12^2)*mt^5*s13*s14*s23 + 1/8*denom(1/4*s12^2)*mt^5*s13^2*s24 - 1/8*
      denom(1/4*s12^2)*mt^5*s13^2*s23 - 1/2*denom(1/4*s12^2)*mt^7*s24^2 + 1/2*
      denom(1/4*s12^2)*mt^7*s23^2 - 1/2*denom(1/4*s12^2)*mt^7*s14*s24 + 1/2*
      denom(1/4*s12^2)*mt^7*s14*s23 - 1/2*denom(1/4*s12^2)*mt^7*s13*s24 + 1/2*
      denom(1/4*s12^2)*mt^7*s13*s23 + 1/2*denom(1/4*s12^2)*mt^9*s24 - 1/2*
      denom(1/4*s12^2)*mt^9*s23;
 
 .sort
id KMatrix(10,4) =   - mt^3*s24^2 + mt^3*s23^2 - mt^3*s14*s24 + mt^3*s14*s23
       - mt^3*s13*s24 + mt^3*s13*s23 - mt^3*s12*s24 + mt^3*s12*s23 + mt^3*mh^2
      *s24 - mt^3*mh^2*s23 + 2*mt^5*s24 - 2*mt^5*s23 + 1/2*denom(1/2*s12)*mt*
      s14*s24^3 - 1/2*denom(1/2*s12)*mt*s14*s23^2*s24 + 1/2*denom(1/2*s12)*mt*
      s14^2*s24^2 - 1/2*denom(1/2*s12)*mt*s14^2*s23*s24 + 1/2*denom(1/2*s12)*
      mt*s13*s14*s24^2 - 1/2*denom(1/2*s12)*mt*s13*s14*s23*s24 + 1/2*denom(1/2
      *s12)*mt*s12*s14*s24^2 - 1/2*denom(1/2*s12)*mt*s12*s14*s23*s24 - 1/2*
      denom(1/2*s12)*mt*mh^2*s14*s24^2 + 1/2*denom(1/2*s12)*mt*mh^2*s14*s23*
      s24 - 1/2*denom(1/2*s12)*mt^3*s24^3 + 1/2*denom(1/2*s12)*mt^3*s23^2*s24
       - 2*denom(1/2*s12)*mt^3*s14*s24^2 + denom(1/2*s12)*mt^3*s14*s23*s24 + 
      denom(1/2*s12)*mt^3*s14*s23^2 - 1/2*denom(1/2*s12)*mt^3*s14^2*s24 + 1/2*
      denom(1/2*s12)*mt^3*s14^2*s23 - denom(1/2*s12)*mt^3*s13*s24^2 + denom(1/
      2*s12)*mt^3*s13*s23*s24 - 1/2*denom(1/2*s12)*mt^3*s13*s14*s24 + 1/2*
      denom(1/2*s12)*mt^3*s13*s14*s23 - 1/2*denom(1/2*s12)*mt^3*s12*s24^2 + 1/
      2*denom(1/2*s12)*mt^3*s12*s23*s24 - 1/2*denom(1/2*s12)*mt^3*s12*s14*s24
       + 1/2*denom(1/2*s12)*mt^3*s12*s14*s23 + 1/2*denom(1/2*s12)*mt^3*mh^2*
      s24^2 - 1/2*denom(1/2*s12)*mt^3*mh^2*s23*s24 + 1/2*denom(1/2*s12)*mt^3*
      mh^2*s14*s24 - 1/2*denom(1/2*s12)*mt^3*mh^2*s14*s23 + 2*denom(1/2*s12)*
      mt^5*s24^2 - denom(1/2*s12)*mt^5*s23*s24 - denom(1/2*s12)*mt^5*s23^2 + 2
      *denom(1/2*s12)*mt^5*s14*s24 - 2*denom(1/2*s12)*mt^5*s14*s23 + denom(1/2
      *s12)*mt^5*s13*s24 - denom(1/2*s12)*mt^5*s13*s23 + 1/2*denom(1/2*s12)*
      mt^5*s12*s24 - 1/2*denom(1/2*s12)*mt^5*s12*s23 - 1/2*denom(1/2*s12)*mt^5
      *mh^2*s24 + 1/2*denom(1/2*s12)*mt^5*mh^2*s23 - 2*denom(1/2*s12)*mt^7*s24
       + 2*denom(1/2*s12)*mt^7*s23 + 1/4*denom(1/4*s12^2)*mt*s14^2*s23*s24^2
       - 1/4*denom(1/4*s12^2)*mt*s14^2*s23^2*s24 + 1/4*denom(1/4*s12^2)*mt*s13
      *s14*s24^3 - 1/4*denom(1/4*s12^2)*mt*s13*s14*s23*s24^2 - 1/4*denom(1/4*
      s12^2)*mt^3*s14*s24^3 - 1/4*denom(1/4*s12^2)*mt^3*s14*s23*s24^2 + 1/2*
      denom(1/4*s12^2)*mt^3*s14*s23^2*s24 - 1/4*denom(1/4*s12^2)*mt^3*s14^2*
      s24^2 + 1/4*denom(1/4*s12^2)*mt^3*s14^2*s23^2 - 1/4*denom(1/4*s12^2)*
      mt^3*s13*s24^3 + 1/4*denom(1/4*s12^2)*mt^3*s13*s23*s24^2 - 1/2*denom(1/4
      *s12^2)*mt^3*s13*s14*s24^2 + 1/2*denom(1/4*s12^2)*mt^3*s13*s14*s23*s24
       + 1/4*denom(1/4*s12^2)*mt^5*s24^3 - 1/4*denom(1/4*s12^2)*mt^5*s23^2*s24
       + denom(1/4*s12^2)*mt^5*s14*s24^2 - 1/2*denom(1/4*s12^2)*mt^5*s14*s23*
      s24 - 1/2*denom(1/4*s12^2)*mt^5*s14*s23^2 + 1/4*denom(1/4*s12^2)*mt^5*
      s14^2*s24 - 1/4*denom(1/4*s12^2)*mt^5*s14^2*s23 + 1/2*denom(1/4*s12^2)*
      mt^5*s13*s24^2 - 1/2*denom(1/4*s12^2)*mt^5*s13*s23*s24 + 1/4*denom(1/4*
      s12^2)*mt^5*s13*s14*s24 - 1/4*denom(1/4*s12^2)*mt^5*s13*s14*s23 - 3/4*
      denom(1/4*s12^2)*mt^7*s24^2 + 1/2*denom(1/4*s12^2)*mt^7*s23*s24 + 1/4*
      denom(1/4*s12^2)*mt^7*s23^2 - 3/4*denom(1/4*s12^2)*mt^7*s14*s24 + 3/4*
      denom(1/4*s12^2)*mt^7*s14*s23 - 1/4*denom(1/4*s12^2)*mt^7*s13*s24 + 1/4*
      denom(1/4*s12^2)*mt^7*s13*s23 + 1/2*denom(1/4*s12^2)*mt^9*s24 - 1/2*
      denom(1/4*s12^2)*mt^9*s23;
 
 .sort
id KMatrix(10,5) =   - 1/2*mt^2*s14*s23*s24 - 1/2*mt^2*s14*s23^2 - 1/2*mt^2*
      s14^2*s23 - 1/2*mt^2*s13*s24^2 - 1/2*mt^2*s13*s23*s24 - 1/2*mt^2*s13*s14
      *s24 - 1/2*mt^2*s13*s14*s23 - 1/2*mt^2*s13^2*s24 - 1/2*mt^2*s12*s24^2 - 
      mt^2*s12*s23*s24 - 1/2*mt^2*s12*s23^2 - mt^2*s12*s14*s24 - 3/2*mt^2*s12*
      s14*s23 - 1/2*mt^2*s12*s14^2 - 3/2*mt^2*s12*s13*s24 - mt^2*s12*s13*s23
       - mt^2*s12*s13*s14 - 1/2*mt^2*s12*s13^2 - mt^2*s12^2*s24 - mt^2*s12^2*
      s23 - mt^2*s12^2*s14 - mt^2*s12^2*s13 - 1/2*mt^2*s12^3 + 1/2*mt^2*mh^2*
      s14*s23 + 1/2*mt^2*mh^2*s13*s24 + mt^2*mh^2*s12*s24 + mt^2*mh^2*s12*s23
       + mt^2*mh^2*s12*s14 + mt^2*mh^2*s12*s13 + mt^2*mh^2*s12^2 - 1/2*mt^2*
      mh^4*s12 + 1/2*mt^4*s24^2 + mt^4*s23*s24 + 1/2*mt^4*s23^2 + mt^4*s14*s24
       + 2*mt^4*s14*s23 + 1/2*mt^4*s14^2 + 2*mt^4*s13*s24 + mt^4*s13*s23 + 
      mt^4*s13*s14 + 1/2*mt^4*s13^2 + 7/2*mt^4*s12*s24 + 7/2*mt^4*s12*s23 + 7/
      2*mt^4*s12*s14 + 7/2*mt^4*s12*s13 + 3*mt^4*s12^2 - 1/2*mt^4*mh^2*s24 - 1/
      2*mt^4*mh^2*s23 - 1/2*mt^4*mh^2*s14 - 1/2*mt^4*mh^2*s13 - 3*mt^4*mh^2*
      s12 - 2*mt^6*s24 - 2*mt^6*s23 - 2*mt^6*s14 - 2*mt^6*s13 - 5*mt^6*s12 + 
      mt^6*mh^2 + 2*mt^8 + 1/4*denom(1/2*s12)*s13*s14*s23^2*s24 + 1/4*denom(1/
      2*s12)*s13*s14*s23^3 + 1/4*denom(1/2*s12)*s13*s14^2*s23^2 + 1/4*denom(1/
      2*s12)*s13^2*s23*s24^2 + 1/4*denom(1/2*s12)*s13^2*s23^2*s24 + 1/4*denom(
      1/2*s12)*s13^2*s14*s23*s24 + 1/4*denom(1/2*s12)*s13^2*s14*s23^2 + 1/4*
      denom(1/2*s12)*s13^3*s23*s24 + 1/4*denom(1/2*s12)*s12*s13*s23*s24^2 + 1/
      2*denom(1/2*s12)*s12*s13*s23^2*s24 + 1/4*denom(1/2*s12)*s12*s13*s23^3 + 
      1/2*denom(1/2*s12)*s12*s13*s14*s23*s24 + 3/4*denom(1/2*s12)*s12*s13*s14*
      s23^2 + 1/4*denom(1/2*s12)*s12*s13*s14^2*s23 + 3/4*denom(1/2*s12)*s12*
      s13^2*s23*s24 + 1/2*denom(1/2*s12)*s12*s13^2*s23^2 + 1/2*denom(1/2*s12)*
      s12*s13^2*s14*s23 + 1/4*denom(1/2*s12)*s12*s13^3*s23 + 1/2*denom(1/2*s12
      )*s12^2*s13*s23*s24 + 1/2*denom(1/2*s12)*s12^2*s13*s23^2 + 1/2*denom(1/2
      *s12)*s12^2*s13*s14*s23 + 1/2*denom(1/2*s12)*s12^2*s13^2*s23 + 1/4*
      denom(1/2*s12)*s12^3*s13*s23 - 1/4*denom(1/2*s12)*mh^2*s13*s14*s23^2 - 1/
      4*denom(1/2*s12)*mh^2*s13^2*s23*s24 - 1/2*denom(1/2*s12)*mh^2*s12*s13*
      s23*s24 - 1/2*denom(1/2*s12)*mh^2*s12*s13*s23^2 - 1/2*denom(1/2*s12)*
      mh^2*s12*s13*s14*s23 - 1/2*denom(1/2*s12)*mh^2*s12*s13^2*s23 - 1/2*
      denom(1/2*s12)*mh^2*s12^2*s13*s23 + 1/4*denom(1/2*s12)*mh^4*s12*s13*s23
       - 1/4*denom(1/2*s12)*mt^2*s14*s23^2*s24 - 1/4*denom(1/2*s12)*mt^2*s14*
      s23^3 - 1/2*denom(1/2*s12)*mt^2*s14^2*s23^2 - 1/2*denom(1/2*s12)*mt^2*
      s13*s23*s24^2 - 3/4*denom(1/2*s12)*mt^2*s13*s23^2*s24 - 1/4*denom(1/2*
      s12)*mt^2*s13*s23^3 - 3/2*denom(1/2*s12)*mt^2*s13*s14*s23*s24 - 3/2*
      denom(1/2*s12)*mt^2*s13*s14*s23^2 - 1/2*denom(1/2*s12)*mt^2*s13*s14^2*
      s23 - 1/2*denom(1/2*s12)*mt^2*s13^2*s24^2 - 3/2*denom(1/2*s12)*mt^2*
      s13^2*s23*s24 - 1/2*denom(1/2*s12)*mt^2*s13^2*s23^2 - 1/4*denom(1/2*s12)
      *mt^2*s13^2*s14*s24 - 3/4*denom(1/2*s12)*mt^2*s13^2*s14*s23 - 1/4*denom(
      1/2*s12)*mt^2*s13^3*s24 - 1/4*denom(1/2*s12)*mt^2*s13^3*s23 - 1/4*denom(
      1/2*s12)*mt^2*s12*s23*s24^2 - 1/2*denom(1/2*s12)*mt^2*s12*s23^2*s24 - 1/
      4*denom(1/2*s12)*mt^2*s12*s23^3 - 3/4*denom(1/2*s12)*mt^2*s12*s14*s23*
      s24 - denom(1/2*s12)*mt^2*s12*s14*s23^2 - 1/2*denom(1/2*s12)*mt^2*s12*
      s14^2*s23 - 1/2*denom(1/2*s12)*mt^2*s12*s13*s24^2 - 13/4*denom(1/2*s12)*
      mt^2*s12*s13*s23*s24 - 5/2*denom(1/2*s12)*mt^2*s12*s13*s23^2 - 3/4*
      denom(1/2*s12)*mt^2*s12*s13*s14*s24 - 13/4*denom(1/2*s12)*mt^2*s12*s13*
      s14*s23 - 1/4*denom(1/2*s12)*mt^2*s12*s13*s14^2 - denom(1/2*s12)*mt^2*
      s12*s13^2*s24 - 5/2*denom(1/2*s12)*mt^2*s12*s13^2*s23 - 1/2*denom(1/2*
      s12)*mt^2*s12*s13^2*s14 - 1/4*denom(1/2*s12)*mt^2*s12*s13^3 - 1/2*denom(
      1/2*s12)*mt^2*s12^2*s23*s24 - 1/2*denom(1/2*s12)*mt^2*s12^2*s23^2 - 3/4*
      denom(1/2*s12)*mt^2*s12^2*s14*s23 - 3/4*denom(1/2*s12)*mt^2*s12^2*s13*
      s24 - 5/2*denom(1/2*s12)*mt^2*s12^2*s13*s23 - 1/2*denom(1/2*s12)*mt^2*
      s12^2*s13*s14 - 1/2*denom(1/2*s12)*mt^2*s12^2*s13^2 - 1/4*denom(1/2*s12)
      *mt^2*s12^3*s23 - 1/4*denom(1/2*s12)*mt^2*s12^3*s13 + 1/4*denom(1/2*s12)
      *mt^2*mh^2*s14*s23^2 + 1/2*denom(1/2*s12)*mt^2*mh^2*s13*s23*s24 + 1/4*
      denom(1/2*s12)*mt^2*mh^2*s13*s23^2 + 1/2*denom(1/2*s12)*mt^2*mh^2*s13*
      s14*s23 + 1/4*denom(1/2*s12)*mt^2*mh^2*s13^2*s24 + 1/4*denom(1/2*s12)*
      mt^2*mh^2*s13^2*s23 + 1/2*denom(1/2*s12)*mt^2*mh^2*s12*s23*s24 + 1/2*
      denom(1/2*s12)*mt^2*mh^2*s12*s23^2 + 3/4*denom(1/2*s12)*mt^2*mh^2*s12*
      s14*s23 + 3/4*denom(1/2*s12)*mt^2*mh^2*s12*s13*s24 + 5/2*denom(1/2*s12)*
      mt^2*mh^2*s12*s13*s23 + 1/2*denom(1/2*s12)*mt^2*mh^2*s12*s13*s14 + 1/2*
      denom(1/2*s12)*mt^2*mh^2*s12*s13^2 + 1/2*denom(1/2*s12)*mt^2*mh^2*s12^2*
      s23 + 1/2*denom(1/2*s12)*mt^2*mh^2*s12^2*s13 - 1/4*denom(1/2*s12)*mt^2*
      mh^4*s12*s23 - 1/4*denom(1/2*s12)*mt^2*mh^4*s12*s13 + 1/4*denom(1/2*s12)
      *mt^4*s23*s24^2 + 1/2*denom(1/2*s12)*mt^4*s23^2*s24 + 1/4*denom(1/2*s12)
      *mt^4*s23^3 + 5/4*denom(1/2*s12)*mt^4*s14*s23*s24 + 7/4*denom(1/2*s12)*
      mt^4*s14*s23^2 + denom(1/2*s12)*mt^4*s14^2*s23 + denom(1/2*s12)*mt^4*s13
      *s24^2 + 13/4*denom(1/2*s12)*mt^4*s13*s23*s24 + 7/4*denom(1/2*s12)*mt^4*
      s13*s23^2 + 5/4*denom(1/2*s12)*mt^4*s13*s14*s24 + 13/4*denom(1/2*s12)*
      mt^4*s13*s14*s23 + 1/4*denom(1/2*s12)*mt^4*s13*s14^2 + 7/4*denom(1/2*s12
      )*mt^4*s13^2*s24 + 7/4*denom(1/2*s12)*mt^4*s13^2*s23 + 1/2*denom(1/2*s12
      )*mt^4*s13^2*s14 + 1/4*denom(1/2*s12)*mt^4*s13^3 + 1/2*denom(1/2*s12)*
      mt^4*s12*s24^2 + 11/4*denom(1/2*s12)*mt^4*s12*s23*s24 + 9/4*denom(1/2*
      s12)*mt^4*s12*s23^2 + denom(1/2*s12)*mt^4*s12*s14*s24 + 4*denom(1/2*s12)
      *mt^4*s12*s14*s23 + 1/2*denom(1/2*s12)*mt^4*s12*s14^2 + 4*denom(1/2*s12)
      *mt^4*s12*s13*s24 + 7*denom(1/2*s12)*mt^4*s12*s13*s23 + 11/4*denom(1/2*
      s12)*mt^4*s12*s13*s14 + 9/4*denom(1/2*s12)*mt^4*s12*s13^2 + 3/4*denom(1/
      2*s12)*mt^4*s12^2*s24 + 9/4*denom(1/2*s12)*mt^4*s12^2*s23 + 3/4*denom(1/
      2*s12)*mt^4*s12^2*s14 + 9/4*denom(1/2*s12)*mt^4*s12^2*s13 + 1/4*denom(1/
      2*s12)*mt^4*s12^3 - 1/4*denom(1/2*s12)*mt^4*mh^2*s23*s24 - 1/4*denom(1/2
      *s12)*mt^4*mh^2*s23^2 - 1/2*denom(1/2*s12)*mt^4*mh^2*s14*s23 - 1/2*
      denom(1/2*s12)*mt^4*mh^2*s13*s24 - denom(1/2*s12)*mt^4*mh^2*s13*s23 - 1/
      4*denom(1/2*s12)*mt^4*mh^2*s13*s14 - 1/4*denom(1/2*s12)*mt^4*mh^2*s13^2
       - 3/4*denom(1/2*s12)*mt^4*mh^2*s12*s24 - 9/4*denom(1/2*s12)*mt^4*mh^2*
      s12*s23 - 3/4*denom(1/2*s12)*mt^4*mh^2*s12*s14 - 9/4*denom(1/2*s12)*mt^4
      *mh^2*s12*s13 - 1/2*denom(1/2*s12)*mt^4*mh^2*s12^2 + 1/4*denom(1/2*s12)*
      mt^4*mh^4*s12 - 1/2*denom(1/2*s12)*mt^6*s24^2 - 2*denom(1/2*s12)*mt^6*
      s23*s24 - 3/2*denom(1/2*s12)*mt^6*s23^2 - denom(1/2*s12)*mt^6*s14*s24 - 
      7/2*denom(1/2*s12)*mt^6*s14*s23 - 1/2*denom(1/2*s12)*mt^6*s14^2 - 7/2*
      denom(1/2*s12)*mt^6*s13*s24 - 4*denom(1/2*s12)*mt^6*s13*s23 - 2*denom(1/
      2*s12)*mt^6*s13*s14 - 3/2*denom(1/2*s12)*mt^6*s13^2 - 13/4*denom(1/2*s12
      )*mt^6*s12*s24 - 23/4*denom(1/2*s12)*mt^6*s12*s23 - 13/4*denom(1/2*s12)*
      mt^6*s12*s14 - 23/4*denom(1/2*s12)*mt^6*s12*s13 - 2*denom(1/2*s12)*mt^6*
      s12^2 + 1/4*denom(1/2*s12)*mt^6*mh^2*s24 + 3/4*denom(1/2*s12)*mt^6*mh^2*
      s23 + 1/4*denom(1/2*s12)*mt^6*mh^2*s14 + 3/4*denom(1/2*s12)*mt^6*mh^2*
      s13 + 2*denom(1/2*s12)*mt^6*mh^2*s12 + 2*denom(1/2*s12)*mt^8*s24 + 3*
      denom(1/2*s12)*mt^8*s23 + 2*denom(1/2*s12)*mt^8*s14 + 3*denom(1/2*s12)*
      mt^8*s13 + 9/2*denom(1/2*s12)*mt^8*s12 - 1/2*denom(1/2*s12)*mt^8*mh^2 - 
      2*denom(1/2*s12)*mt^10 + 1/8*denom(1/4*s12^2)*s13*s14^2*s23^3 + 1/4*
      denom(1/4*s12^2)*s13^2*s14*s23^2*s24 + 1/8*denom(1/4*s12^2)*s13^3*s23*
      s24^2 + 1/8*denom(1/4*s12^2)*s12*s13*s14*s23^2*s24 + 1/8*denom(1/4*s12^2
      )*s12*s13*s14*s23^3 + 1/8*denom(1/4*s12^2)*s12*s13*s14^2*s23^2 + 1/8*
      denom(1/4*s12^2)*s12*s13^2*s23*s24^2 + 1/8*denom(1/4*s12^2)*s12*s13^2*
      s23^2*s24 + 1/8*denom(1/4*s12^2)*s12*s13^2*s14*s23*s24 + 1/8*denom(1/4*
      s12^2)*s12*s13^2*s14*s23^2 + 1/8*denom(1/4*s12^2)*s12*s13^3*s23*s24 + 1/
      8*denom(1/4*s12^2)*s12^2*s13*s14*s23^2 + 1/8*denom(1/4*s12^2)*s12^2*
      s13^2*s23*s24 - 1/8*denom(1/4*s12^2)*mh^2*s12*s13*s14*s23^2 - 1/8*denom(
      1/4*s12^2)*mh^2*s12*s13^2*s23*s24 - 1/8*denom(1/4*s12^2)*mt^2*s14^2*
      s23^3 - 1/2*denom(1/4*s12^2)*mt^2*s13*s14*s23^2*s24 - 1/4*denom(1/4*
      s12^2)*mt^2*s13*s14*s23^3 - 3/8*denom(1/4*s12^2)*mt^2*s13*s14^2*s23^2 - 
      3/8*denom(1/4*s12^2)*mt^2*s13^2*s23*s24^2 - 1/4*denom(1/4*s12^2)*mt^2*
      s13^2*s23^2*s24 - 1/2*denom(1/4*s12^2)*mt^2*s13^2*s14*s23*s24 - 1/4*
      denom(1/4*s12^2)*mt^2*s13^2*s14*s23^2 - 1/8*denom(1/4*s12^2)*mt^2*s13^3*
      s24^2 - 1/4*denom(1/4*s12^2)*mt^2*s13^3*s23*s24 - 1/8*denom(1/4*s12^2)*
      mt^2*s12*s14*s23^2*s24 - 1/8*denom(1/4*s12^2)*mt^2*s12*s14*s23^3 - 1/8*
      denom(1/4*s12^2)*mt^2*s12*s14^2*s23^2 - 1/4*denom(1/4*s12^2)*mt^2*s12*
      s13*s23*s24^2 - 3/8*denom(1/4*s12^2)*mt^2*s12*s13*s23^2*s24 - 1/8*denom(
      1/4*s12^2)*mt^2*s12*s13*s23^3 - 1/2*denom(1/4*s12^2)*mt^2*s12*s13*s14*
      s23*s24 - denom(1/4*s12^2)*mt^2*s12*s13*s14*s23^2 - 1/4*denom(1/4*s12^2)
      *mt^2*s12*s13*s14^2*s23 - 1/8*denom(1/4*s12^2)*mt^2*s12*s13^2*s24^2 - 
      denom(1/4*s12^2)*mt^2*s12*s13^2*s23*s24 - 1/4*denom(1/4*s12^2)*mt^2*s12*
      s13^2*s23^2 - 1/8*denom(1/4*s12^2)*mt^2*s12*s13^2*s14*s24 - 3/8*denom(1/
      4*s12^2)*mt^2*s12*s13^2*s14*s23 - 1/8*denom(1/4*s12^2)*mt^2*s12*s13^3*
      s24 - 1/8*denom(1/4*s12^2)*mt^2*s12*s13^3*s23 - 1/8*denom(1/4*s12^2)*
      mt^2*s12^2*s14*s23^2 - 1/4*denom(1/4*s12^2)*mt^2*s12^2*s13*s23*s24 - 1/8
      *denom(1/4*s12^2)*mt^2*s12^2*s13*s23^2 - 1/4*denom(1/4*s12^2)*mt^2*s12^2
      *s13*s14*s23 - 1/8*denom(1/4*s12^2)*mt^2*s12^2*s13^2*s24 - 1/8*denom(1/4
      *s12^2)*mt^2*s12^2*s13^2*s23 + 1/8*denom(1/4*s12^2)*mt^2*mh^2*s12*s14*
      s23^2 + 1/4*denom(1/4*s12^2)*mt^2*mh^2*s12*s13*s23*s24 + 1/8*denom(1/4*
      s12^2)*mt^2*mh^2*s12*s13*s23^2 + 1/4*denom(1/4*s12^2)*mt^2*mh^2*s12*s13*
      s14*s23 + 1/8*denom(1/4*s12^2)*mt^2*mh^2*s12*s13^2*s24 + 1/8*denom(1/4*
      s12^2)*mt^2*mh^2*s12*s13^2*s23 + 1/4*denom(1/4*s12^2)*mt^4*s14*s23^2*s24
       + 1/4*denom(1/4*s12^2)*mt^4*s14*s23^3 + 3/8*denom(1/4*s12^2)*mt^4*s14^2
      *s23^2 + 3/8*denom(1/4*s12^2)*mt^4*s13*s23*s24^2 + 1/2*denom(1/4*s12^2)*
      mt^4*s13*s23^2*s24 + 1/8*denom(1/4*s12^2)*mt^4*s13*s23^3 + denom(1/4*
      s12^2)*mt^4*s13*s14*s23*s24 + 5/4*denom(1/4*s12^2)*mt^4*s13*s14*s23^2 + 
      3/8*denom(1/4*s12^2)*mt^4*s13*s14^2*s23 + 3/8*denom(1/4*s12^2)*mt^4*
      s13^2*s24^2 + 5/4*denom(1/4*s12^2)*mt^4*s13^2*s23*s24 + 1/4*denom(1/4*
      s12^2)*mt^4*s13^2*s23^2 + 1/4*denom(1/4*s12^2)*mt^4*s13^2*s14*s24 + 1/2*
      denom(1/4*s12^2)*mt^4*s13^2*s14*s23 + 1/4*denom(1/4*s12^2)*mt^4*s13^3*
      s24 + 1/8*denom(1/4*s12^2)*mt^4*s13^3*s23 + 1/8*denom(1/4*s12^2)*mt^4*
      s12*s23*s24^2 + 1/4*denom(1/4*s12^2)*mt^4*s12*s23^2*s24 + 1/8*denom(1/4*
      s12^2)*mt^4*s12*s23^3 + 3/8*denom(1/4*s12^2)*mt^4*s12*s14*s23*s24 + 7/8*
      denom(1/4*s12^2)*mt^4*s12*s14*s23^2 + 1/4*denom(1/4*s12^2)*mt^4*s12*
      s14^2*s23 + 1/4*denom(1/4*s12^2)*mt^4*s12*s13*s24^2 + 15/8*denom(1/4*
      s12^2)*mt^4*s12*s13*s23*s24 + 9/8*denom(1/4*s12^2)*mt^4*s12*s13*s23^2 + 
      3/8*denom(1/4*s12^2)*mt^4*s12*s13*s14*s24 + 15/8*denom(1/4*s12^2)*mt^4*
      s12*s13*s14*s23 + 1/8*denom(1/4*s12^2)*mt^4*s12*s13*s14^2 + 7/8*denom(1/
      4*s12^2)*mt^4*s12*s13^2*s24 + 9/8*denom(1/4*s12^2)*mt^4*s12*s13^2*s23 + 
      1/4*denom(1/4*s12^2)*mt^4*s12*s13^2*s14 + 1/8*denom(1/4*s12^2)*mt^4*s12*
      s13^3 + 1/8*denom(1/4*s12^2)*mt^4*s12^2*s23*s24 + 1/8*denom(1/4*s12^2)*
      mt^4*s12^2*s23^2 + 1/4*denom(1/4*s12^2)*mt^4*s12^2*s14*s23 + 1/4*denom(1/
      4*s12^2)*mt^4*s12^2*s13*s24 + 1/2*denom(1/4*s12^2)*mt^4*s12^2*s13*s23 + 
      1/8*denom(1/4*s12^2)*mt^4*s12^2*s13*s14 + 1/8*denom(1/4*s12^2)*mt^4*
      s12^2*s13^2 - 1/8*denom(1/4*s12^2)*mt^4*mh^2*s12*s23*s24 - 1/8*denom(1/4
      *s12^2)*mt^4*mh^2*s12*s23^2 - 1/4*denom(1/4*s12^2)*mt^4*mh^2*s12*s14*s23
       - 1/4*denom(1/4*s12^2)*mt^4*mh^2*s12*s13*s24 - 1/2*denom(1/4*s12^2)*
      mt^4*mh^2*s12*s13*s23 - 1/8*denom(1/4*s12^2)*mt^4*mh^2*s12*s13*s14 - 1/8
      *denom(1/4*s12^2)*mt^4*mh^2*s12*s13^2 - 1/8*denom(1/4*s12^2)*mt^6*s23*
      s24^2 - 1/4*denom(1/4*s12^2)*mt^6*s23^2*s24 - 1/8*denom(1/4*s12^2)*mt^6*
      s23^3 - 1/2*denom(1/4*s12^2)*mt^6*s14*s23*s24 - denom(1/4*s12^2)*mt^6*
      s14*s23^2 - 3/8*denom(1/4*s12^2)*mt^6*s14^2*s23 - 3/8*denom(1/4*s12^2)*
      mt^6*s13*s24^2 - 7/4*denom(1/4*s12^2)*mt^6*s13*s23*s24 - 7/8*denom(1/4*
      s12^2)*mt^6*s13*s23^2 - 1/2*denom(1/4*s12^2)*mt^6*s13*s14*s24 - 7/4*
      denom(1/4*s12^2)*mt^6*s13*s14*s23 - 1/8*denom(1/4*s12^2)*mt^6*s13*s14^2
       - denom(1/4*s12^2)*mt^6*s13^2*s24 - 7/8*denom(1/4*s12^2)*mt^6*s13^2*s23
       - 1/4*denom(1/4*s12^2)*mt^6*s13^2*s14 - 1/8*denom(1/4*s12^2)*mt^6*s13^3
       - 1/8*denom(1/4*s12^2)*mt^6*s12*s24^2 - denom(1/4*s12^2)*mt^6*s12*s23*
      s24 - 7/8*denom(1/4*s12^2)*mt^6*s12*s23^2 - 1/4*denom(1/4*s12^2)*mt^6*
      s12*s14*s24 - 3/2*denom(1/4*s12^2)*mt^6*s12*s14*s23 - 1/8*denom(1/4*
      s12^2)*mt^6*s12*s14^2 - 3/2*denom(1/4*s12^2)*mt^6*s12*s13*s24 - 11/4*
      denom(1/4*s12^2)*mt^6*s12*s13*s23 - denom(1/4*s12^2)*mt^6*s12*s13*s14 - 
      7/8*denom(1/4*s12^2)*mt^6*s12*s13^2 - 1/8*denom(1/4*s12^2)*mt^6*s12^2*
      s24 - 3/8*denom(1/4*s12^2)*mt^6*s12^2*s23 - 1/8*denom(1/4*s12^2)*mt^6*
      s12^2*s14 - 3/8*denom(1/4*s12^2)*mt^6*s12^2*s13 + 1/8*denom(1/4*s12^2)*
      mt^6*mh^2*s12*s24 + 3/8*denom(1/4*s12^2)*mt^6*mh^2*s12*s23 + 1/8*denom(1/
      4*s12^2)*mt^6*mh^2*s12*s14 + 3/8*denom(1/4*s12^2)*mt^6*mh^2*s12*s13 + 1/
      8*denom(1/4*s12^2)*mt^8*s24^2 + 3/4*denom(1/4*s12^2)*mt^8*s23*s24 + 5/8*
      denom(1/4*s12^2)*mt^8*s23^2 + 1/4*denom(1/4*s12^2)*mt^8*s14*s24 + 5/4*
      denom(1/4*s12^2)*mt^8*s14*s23 + 1/8*denom(1/4*s12^2)*mt^8*s14^2 + 5/4*
      denom(1/4*s12^2)*mt^8*s13*s24 + 7/4*denom(1/4*s12^2)*mt^8*s13*s23 + 3/4*
      denom(1/4*s12^2)*mt^8*s13*s14 + 5/8*denom(1/4*s12^2)*mt^8*s13^2 + 3/4*
      denom(1/4*s12^2)*mt^8*s12*s24 + 7/4*denom(1/4*s12^2)*mt^8*s12*s23 + 3/4*
      denom(1/4*s12^2)*mt^8*s12*s14 + 7/4*denom(1/4*s12^2)*mt^8*s12*s13 + 1/4*
      denom(1/4*s12^2)*mt^8*s12^2 - 1/4*denom(1/4*s12^2)*mt^8*mh^2*s12 - 1/2*
      denom(1/4*s12^2)*mt^10*s24 - denom(1/4*s12^2)*mt^10*s23 - 1/2*denom(1/4*
      s12^2)*mt^10*s14 - denom(1/4*s12^2)*mt^10*s13 - denom(1/4*s12^2)*mt^10*
      s12 + 1/2*denom(1/4*s12^2)*mt^12;
 
 .sort
id KMatrix(10,6) =  mt^4*s14*s23 + mt^4*s13*s24 + mt^4*s12*s24 + mt^4*s12*s23
       + mt^4*s12*s14 + mt^4*s12*s13 + mt^4*s12^2 - mt^4*mh^2*s12 - mt^6*s24
       - mt^6*s23 - mt^6*s14 - mt^6*s13 - 4*mt^6*s12 + 2*mt^8 - 1/2*denom(1/2*
      s12)*mt^2*s14^2*s23*s24 - 1/2*denom(1/2*s12)*mt^2*s13*s14*s24^2 - 1/2*
      denom(1/2*s12)*mt^2*s13*s14*s23^2 - 1/2*denom(1/2*s12)*mt^2*s13^2*s23*
      s24 - 1/2*denom(1/2*s12)*mt^2*s12*s14*s24^2 - 1/2*denom(1/2*s12)*mt^2*
      s12*s14*s23*s24 - 1/2*denom(1/2*s12)*mt^2*s12*s14^2*s24 - 1/2*denom(1/2*
      s12)*mt^2*s12*s13*s23*s24 - 1/2*denom(1/2*s12)*mt^2*s12*s13*s23^2 - 1/2*
      denom(1/2*s12)*mt^2*s12*s13*s14*s24 - 1/2*denom(1/2*s12)*mt^2*s12*s13*
      s14*s23 - 1/2*denom(1/2*s12)*mt^2*s12*s13^2*s23 - 1/2*denom(1/2*s12)*
      mt^2*s12^2*s14*s24 - 1/2*denom(1/2*s12)*mt^2*s12^2*s13*s23 + 1/2*denom(1/
      2*s12)*mt^2*mh^2*s12*s14*s24 + 1/2*denom(1/2*s12)*mt^2*mh^2*s12*s13*s23
       + 1/2*denom(1/2*s12)*mt^4*s14*s24^2 + denom(1/2*s12)*mt^4*s14*s23*s24
       + 1/2*denom(1/2*s12)*mt^4*s14*s23^2 + 1/2*denom(1/2*s12)*mt^4*s14^2*s24
       + 1/2*denom(1/2*s12)*mt^4*s14^2*s23 + 1/2*denom(1/2*s12)*mt^4*s13*s24^2
       + denom(1/2*s12)*mt^4*s13*s23*s24 + 1/2*denom(1/2*s12)*mt^4*s13*s23^2
       + denom(1/2*s12)*mt^4*s13*s14*s24 + denom(1/2*s12)*mt^4*s13*s14*s23 + 1/
      2*denom(1/2*s12)*mt^4*s13^2*s24 + 1/2*denom(1/2*s12)*mt^4*s13^2*s23 + 1/
      2*denom(1/2*s12)*mt^4*s12*s24^2 + denom(1/2*s12)*mt^4*s12*s23*s24 + 1/2*
      denom(1/2*s12)*mt^4*s12*s23^2 + 3*denom(1/2*s12)*mt^4*s12*s14*s24 + 
      denom(1/2*s12)*mt^4*s12*s14*s23 + 1/2*denom(1/2*s12)*mt^4*s12*s14^2 + 
      denom(1/2*s12)*mt^4*s12*s13*s24 + 3*denom(1/2*s12)*mt^4*s12*s13*s23 + 
      denom(1/2*s12)*mt^4*s12*s13*s14 + 1/2*denom(1/2*s12)*mt^4*s12*s13^2 + 1/
      2*denom(1/2*s12)*mt^4*s12^2*s24 + 1/2*denom(1/2*s12)*mt^4*s12^2*s23 + 1/
      2*denom(1/2*s12)*mt^4*s12^2*s14 + 1/2*denom(1/2*s12)*mt^4*s12^2*s13 - 1/
      2*denom(1/2*s12)*mt^4*mh^2*s12*s24 - 1/2*denom(1/2*s12)*mt^4*mh^2*s12*
      s23 - 1/2*denom(1/2*s12)*mt^4*mh^2*s12*s14 - 1/2*denom(1/2*s12)*mt^4*
      mh^2*s12*s13 - 1/2*denom(1/2*s12)*mt^6*s24^2 - denom(1/2*s12)*mt^6*s23*
      s24 - 1/2*denom(1/2*s12)*mt^6*s23^2 - 2*denom(1/2*s12)*mt^6*s14*s24 - 2*
      denom(1/2*s12)*mt^6*s14*s23 - 1/2*denom(1/2*s12)*mt^6*s14^2 - 2*denom(1/
      2*s12)*mt^6*s13*s24 - 2*denom(1/2*s12)*mt^6*s13*s23 - denom(1/2*s12)*
      mt^6*s13*s14 - 1/2*denom(1/2*s12)*mt^6*s13^2 - 3*denom(1/2*s12)*mt^6*s12
      *s24 - 3*denom(1/2*s12)*mt^6*s12*s23 - 3*denom(1/2*s12)*mt^6*s12*s14 - 3
      *denom(1/2*s12)*mt^6*s12*s13 - denom(1/2*s12)*mt^6*s12^2 + denom(1/2*s12
      )*mt^6*mh^2*s12 + 2*denom(1/2*s12)*mt^8*s24 + 2*denom(1/2*s12)*mt^8*s23
       + 2*denom(1/2*s12)*mt^8*s14 + 2*denom(1/2*s12)*mt^8*s13 + 4*denom(1/2*
      s12)*mt^8*s12 - 2*denom(1/2*s12)*mt^10 + 1/4*denom(1/4*s12^2)*s13*s14^2*
      s23^2*s24 + 1/4*denom(1/4*s12^2)*s13^2*s14*s23*s24^2 + 1/4*denom(1/4*
      s12^2)*s12*s13*s14*s23*s24^2 + 1/4*denom(1/4*s12^2)*s12*s13*s14*s23^2*
      s24 + 1/4*denom(1/4*s12^2)*s12*s13*s14^2*s23*s24 + 1/4*denom(1/4*s12^2)*
      s12*s13^2*s14*s23*s24 + 1/4*denom(1/4*s12^2)*s12^2*s13*s14*s23*s24 - 1/4
      *denom(1/4*s12^2)*mh^2*s12*s13*s14*s23*s24 - 1/4*denom(1/4*s12^2)*mt^2*
      s14^2*s23^2*s24 - 1/2*denom(1/4*s12^2)*mt^2*s13*s14*s23*s24^2 - 1/2*
      denom(1/4*s12^2)*mt^2*s13*s14*s23^2*s24 - 1/2*denom(1/4*s12^2)*mt^2*s13*
      s14^2*s23*s24 - 1/4*denom(1/4*s12^2)*mt^2*s13*s14^2*s23^2 - 1/4*denom(1/
      4*s12^2)*mt^2*s13^2*s23*s24^2 - 1/4*denom(1/4*s12^2)*mt^2*s13^2*s14*
      s24^2 - 1/2*denom(1/4*s12^2)*mt^2*s13^2*s14*s23*s24 - 1/4*denom(1/4*
      s12^2)*mt^2*s12*s14*s23*s24^2 - 1/4*denom(1/4*s12^2)*mt^2*s12*s14*s23^2*
      s24 - 1/4*denom(1/4*s12^2)*mt^2*s12*s14^2*s23*s24 - 1/4*denom(1/4*s12^2)
      *mt^2*s12*s13*s23*s24^2 - 1/4*denom(1/4*s12^2)*mt^2*s12*s13*s23^2*s24 - 
      1/4*denom(1/4*s12^2)*mt^2*s12*s13*s14*s24^2 - 2*denom(1/4*s12^2)*mt^2*
      s12*s13*s14*s23*s24 - 1/4*denom(1/4*s12^2)*mt^2*s12*s13*s14*s23^2 - 1/4*
      denom(1/4*s12^2)*mt^2*s12*s13*s14^2*s24 - 1/4*denom(1/4*s12^2)*mt^2*s12*
      s13*s14^2*s23 - 1/4*denom(1/4*s12^2)*mt^2*s12*s13^2*s23*s24 - 1/4*denom(
      1/4*s12^2)*mt^2*s12*s13^2*s14*s24 - 1/4*denom(1/4*s12^2)*mt^2*s12*s13^2*
      s14*s23 - 1/4*denom(1/4*s12^2)*mt^2*s12^2*s14*s23*s24 - 1/4*denom(1/4*
      s12^2)*mt^2*s12^2*s13*s23*s24 - 1/4*denom(1/4*s12^2)*mt^2*s12^2*s13*s14*
      s24 - 1/4*denom(1/4*s12^2)*mt^2*s12^2*s13*s14*s23 + 1/4*denom(1/4*s12^2)
      *mt^2*mh^2*s12*s14*s23*s24 + 1/4*denom(1/4*s12^2)*mt^2*mh^2*s12*s13*s23*
      s24 + 1/4*denom(1/4*s12^2)*mt^2*mh^2*s12*s13*s14*s24 + 1/4*denom(1/4*
      s12^2)*mt^2*mh^2*s12*s13*s14*s23 + 1/4*denom(1/4*s12^2)*mt^4*s14*s23*
      s24^2 + 1/2*denom(1/4*s12^2)*mt^4*s14*s23^2*s24 + 1/2*denom(1/4*s12^2)*
      mt^4*s14^2*s23*s24 + 1/4*denom(1/4*s12^2)*mt^4*s14^2*s23^2 + 1/2*denom(1/
      4*s12^2)*mt^4*s13*s23*s24^2 + 1/4*denom(1/4*s12^2)*mt^4*s13*s23^2*s24 + 
      1/2*denom(1/4*s12^2)*mt^4*s13*s14*s24^2 + 2*denom(1/4*s12^2)*mt^4*s13*
      s14*s23*s24 + 1/2*denom(1/4*s12^2)*mt^4*s13*s14*s23^2 + 1/4*denom(1/4*
      s12^2)*mt^4*s13*s14^2*s24 + 1/2*denom(1/4*s12^2)*mt^4*s13*s14^2*s23 + 1/
      4*denom(1/4*s12^2)*mt^4*s13^2*s24^2 + 1/2*denom(1/4*s12^2)*mt^4*s13^2*
      s23*s24 + 1/2*denom(1/4*s12^2)*mt^4*s13^2*s14*s24 + 1/4*denom(1/4*s12^2)
      *mt^4*s13^2*s14*s23 + 1/4*denom(1/4*s12^2)*mt^4*s12*s23*s24^2 + 1/4*
      denom(1/4*s12^2)*mt^4*s12*s23^2*s24 + 1/4*denom(1/4*s12^2)*mt^4*s12*s14*
      s24^2 + 7/4*denom(1/4*s12^2)*mt^4*s12*s14*s23*s24 + 1/4*denom(1/4*s12^2)
      *mt^4*s12*s14*s23^2 + 1/4*denom(1/4*s12^2)*mt^4*s12*s14^2*s24 + 1/4*
      denom(1/4*s12^2)*mt^4*s12*s14^2*s23 + 1/4*denom(1/4*s12^2)*mt^4*s12*s13*
      s24^2 + 7/4*denom(1/4*s12^2)*mt^4*s12*s13*s23*s24 + 1/4*denom(1/4*s12^2)
      *mt^4*s12*s13*s23^2 + 7/4*denom(1/4*s12^2)*mt^4*s12*s13*s14*s24 + 7/4*
      denom(1/4*s12^2)*mt^4*s12*s13*s14*s23 + 1/4*denom(1/4*s12^2)*mt^4*s12*
      s13*s14^2 + 1/4*denom(1/4*s12^2)*mt^4*s12*s13^2*s24 + 1/4*denom(1/4*
      s12^2)*mt^4*s12*s13^2*s23 + 1/4*denom(1/4*s12^2)*mt^4*s12*s13^2*s14 + 1/
      4*denom(1/4*s12^2)*mt^4*s12^2*s23*s24 + 1/4*denom(1/4*s12^2)*mt^4*s12^2*
      s14*s24 + 1/4*denom(1/4*s12^2)*mt^4*s12^2*s14*s23 + 1/4*denom(1/4*s12^2)
      *mt^4*s12^2*s13*s24 + 1/4*denom(1/4*s12^2)*mt^4*s12^2*s13*s23 + 1/4*
      denom(1/4*s12^2)*mt^4*s12^2*s13*s14 - 1/4*denom(1/4*s12^2)*mt^4*mh^2*s12
      *s23*s24 - 1/4*denom(1/4*s12^2)*mt^4*mh^2*s12*s14*s24 - 1/4*denom(1/4*
      s12^2)*mt^4*mh^2*s12*s14*s23 - 1/4*denom(1/4*s12^2)*mt^4*mh^2*s12*s13*
      s24 - 1/4*denom(1/4*s12^2)*mt^4*mh^2*s12*s13*s23 - 1/4*denom(1/4*s12^2)*
      mt^4*mh^2*s12*s13*s14 - 1/4*denom(1/4*s12^2)*mt^6*s23*s24^2 - 1/4*denom(
      1/4*s12^2)*mt^6*s23^2*s24 - 1/4*denom(1/4*s12^2)*mt^6*s14*s24^2 - 3/2*
      denom(1/4*s12^2)*mt^6*s14*s23*s24 - 1/2*denom(1/4*s12^2)*mt^6*s14*s23^2
       - 1/4*denom(1/4*s12^2)*mt^6*s14^2*s24 - 1/2*denom(1/4*s12^2)*mt^6*s14^2
      *s23 - 1/2*denom(1/4*s12^2)*mt^6*s13*s24^2 - 3/2*denom(1/4*s12^2)*mt^6*
      s13*s23*s24 - 1/4*denom(1/4*s12^2)*mt^6*s13*s23^2 - 3/2*denom(1/4*s12^2)
      *mt^6*s13*s14*s24 - 3/2*denom(1/4*s12^2)*mt^6*s13*s14*s23 - 1/4*denom(1/
      4*s12^2)*mt^6*s13*s14^2 - 1/2*denom(1/4*s12^2)*mt^6*s13^2*s24 - 1/4*
      denom(1/4*s12^2)*mt^6*s13^2*s23 - 1/4*denom(1/4*s12^2)*mt^6*s13^2*s14 - 
      1/4*denom(1/4*s12^2)*mt^6*s12*s24^2 - 3/2*denom(1/4*s12^2)*mt^6*s12*s23*
      s24 - 1/4*denom(1/4*s12^2)*mt^6*s12*s23^2 - 3/2*denom(1/4*s12^2)*mt^6*
      s12*s14*s24 - 3/2*denom(1/4*s12^2)*mt^6*s12*s14*s23 - 1/4*denom(1/4*
      s12^2)*mt^6*s12*s14^2 - 3/2*denom(1/4*s12^2)*mt^6*s12*s13*s24 - 3/2*
      denom(1/4*s12^2)*mt^6*s12*s13*s23 - 3/2*denom(1/4*s12^2)*mt^6*s12*s13*
      s14 - 1/4*denom(1/4*s12^2)*mt^6*s12*s13^2 - 1/4*denom(1/4*s12^2)*mt^6*
      s12^2*s24 - 1/4*denom(1/4*s12^2)*mt^6*s12^2*s23 - 1/4*denom(1/4*s12^2)*
      mt^6*s12^2*s14 - 1/4*denom(1/4*s12^2)*mt^6*s12^2*s13 + 1/4*denom(1/4*
      s12^2)*mt^6*mh^2*s12*s24 + 1/4*denom(1/4*s12^2)*mt^6*mh^2*s12*s23 + 1/4*
      denom(1/4*s12^2)*mt^6*mh^2*s12*s14 + 1/4*denom(1/4*s12^2)*mt^6*mh^2*s12*
      s13 + 1/4*denom(1/4*s12^2)*mt^8*s24^2 + denom(1/4*s12^2)*mt^8*s23*s24 + 
      1/4*denom(1/4*s12^2)*mt^8*s23^2 + denom(1/4*s12^2)*mt^8*s14*s24 + 5/4*
      denom(1/4*s12^2)*mt^8*s14*s23 + 1/4*denom(1/4*s12^2)*mt^8*s14^2 + 5/4*
      denom(1/4*s12^2)*mt^8*s13*s24 + denom(1/4*s12^2)*mt^8*s13*s23 + denom(1/
      4*s12^2)*mt^8*s13*s14 + 1/4*denom(1/4*s12^2)*mt^8*s13^2 + 5/4*denom(1/4*
      s12^2)*mt^8*s12*s24 + 5/4*denom(1/4*s12^2)*mt^8*s12*s23 + 5/4*denom(1/4*
      s12^2)*mt^8*s12*s14 + 5/4*denom(1/4*s12^2)*mt^8*s12*s13 + 1/4*denom(1/4*
      s12^2)*mt^8*s12^2 - 1/4*denom(1/4*s12^2)*mt^8*mh^2*s12 - 3/4*denom(1/4*
      s12^2)*mt^10*s24 - 3/4*denom(1/4*s12^2)*mt^10*s23 - 3/4*denom(1/4*s12^2)
      *mt^10*s14 - 3/4*denom(1/4*s12^2)*mt^10*s13 - denom(1/4*s12^2)*mt^10*s12
       + 1/2*denom(1/4*s12^2)*mt^12;
 
 .sort
id KMatrix(10,7) =  1/4*s14*s23*s24^2 + 1/2*s14*s23^2*s24 + 1/4*s14*s23^3 + 1/
      2*s14^2*s23*s24 + 1/2*s14^2*s23^2 + 1/4*s14^3*s23 + 1/4*s13*s24^3 + 1/2*
      s13*s23*s24^2 + 1/4*s13*s23^2*s24 + 1/2*s13*s14*s24^2 + s13*s14*s23*s24
       + 1/2*s13*s14*s23^2 + 1/4*s13*s14^2*s24 + 1/2*s13*s14^2*s23 + 1/2*s13^2
      *s24^2 + 1/2*s13^2*s23*s24 + 1/2*s13^2*s14*s24 + 1/4*s13^2*s14*s23 + 1/4
      *s13^3*s24 + 1/4*s12*s24^3 + 3/4*s12*s23*s24^2 + 3/4*s12*s23^2*s24 + 1/4
      *s12*s23^3 + 3/4*s12*s14*s24^2 + 2*s12*s14*s23*s24 + 5/4*s12*s14*s23^2
       + 3/4*s12*s14^2*s24 + 5/4*s12*s14^2*s23 + 1/4*s12*s14^3 + 5/4*s12*s13*
      s24^2 + 2*s12*s13*s23*s24 + 3/4*s12*s13*s23^2 + 2*s12*s13*s14*s24 + 2*
      s12*s13*s14*s23 + 3/4*s12*s13*s14^2 + 5/4*s12*s13^2*s24 + 3/4*s12*s13^2*
      s23 + 3/4*s12*s13^2*s14 + 1/4*s12*s13^3 + 3/4*s12^2*s24^2 + 3/2*s12^2*
      s23*s24 + 3/4*s12^2*s23^2 + 3/2*s12^2*s14*s24 + 7/4*s12^2*s14*s23 + 3/4*
      s12^2*s14^2 + 7/4*s12^2*s13*s24 + 3/2*s12^2*s13*s23 + 3/2*s12^2*s13*s14
       + 3/4*s12^2*s13^2 + 3/4*s12^3*s24 + 3/4*s12^3*s23 + 3/4*s12^3*s14 + 3/4
      *s12^3*s13 + 1/4*s12^4 - 1/2*mh^2*s14*s23*s24 - 1/2*mh^2*s14*s23^2 - 1/2
      *mh^2*s14^2*s23 - 1/2*mh^2*s13*s24^2 - 1/2*mh^2*s13*s23*s24 - 1/2*mh^2*
      s13*s14*s24 - 1/2*mh^2*s13*s14*s23 - 1/2*mh^2*s13^2*s24 - 3/4*mh^2*s12*
      s24^2 - 3/2*mh^2*s12*s23*s24 - 3/4*mh^2*s12*s23^2 - 3/2*mh^2*s12*s14*s24
       - 2*mh^2*s12*s14*s23 - 3/4*mh^2*s12*s14^2 - 2*mh^2*s12*s13*s24 - 3/2*
      mh^2*s12*s13*s23 - 3/2*mh^2*s12*s13*s14 - 3/4*mh^2*s12*s13^2 - 3/2*mh^2*
      s12^2*s24 - 3/2*mh^2*s12^2*s23 - 3/2*mh^2*s12^2*s14 - 3/2*mh^2*s12^2*s13
       - 3/4*mh^2*s12^3 + 1/4*mh^4*s14*s23 + 1/4*mh^4*s13*s24 + 3/4*mh^4*s12*
      s24 + 3/4*mh^4*s12*s23 + 3/4*mh^4*s12*s14 + 3/4*mh^4*s12*s13 + 3/4*mh^4*
      s12^2 - 1/4*mh^6*s12 - 1/4*mt^2*s24^3 - 3/4*mt^2*s23*s24^2 - 3/4*mt^2*
      s23^2*s24 - 1/4*mt^2*s23^3 - 3/4*mt^2*s14*s24^2 - 5/2*mt^2*s14*s23*s24
       - 7/4*mt^2*s14*s23^2 - 3/4*mt^2*s14^2*s24 - 7/4*mt^2*s14^2*s23 - 1/4*
      mt^2*s14^3 - 7/4*mt^2*s13*s24^2 - 5/2*mt^2*s13*s23*s24 - 3/4*mt^2*s13*
      s23^2 - 5/2*mt^2*s13*s14*s24 - 5/2*mt^2*s13*s14*s23 - 3/4*mt^2*s13*s14^2
       - 7/4*mt^2*s13^2*s24 - 3/4*mt^2*s13^2*s23 - 3/4*mt^2*s13^2*s14 - 1/4*
      mt^2*s13^3 - 5/2*mt^2*s12*s24^2 - 5*mt^2*s12*s23*s24 - 5/2*mt^2*s12*
      s23^2 - 5*mt^2*s12*s14*s24 - 6*mt^2*s12*s14*s23 - 5/2*mt^2*s12*s14^2 - 6
      *mt^2*s12*s13*s24 - 5*mt^2*s12*s13*s23 - 5*mt^2*s12*s13*s14 - 5/2*mt^2*
      s12*s13^2 - 17/4*mt^2*s12^2*s24 - 17/4*mt^2*s12^2*s23 - 17/4*mt^2*s12^2*
      s14 - 17/4*mt^2*s12^2*s13 - 2*mt^2*s12^3 + 1/2*mt^2*mh^2*s24^2 + mt^2*
      mh^2*s23*s24 + 1/2*mt^2*mh^2*s23^2 + mt^2*mh^2*s14*s24 + 2*mt^2*mh^2*s14
      *s23 + 1/2*mt^2*mh^2*s14^2 + 2*mt^2*mh^2*s13*s24 + mt^2*mh^2*s13*s23 + 
      mt^2*mh^2*s13*s14 + 1/2*mt^2*mh^2*s13^2 + 9/2*mt^2*mh^2*s12*s24 + 9/2*
      mt^2*mh^2*s12*s23 + 9/2*mt^2*mh^2*s12*s14 + 9/2*mt^2*mh^2*s12*s13 + 4*
      mt^2*mh^2*s12^2 - 1/4*mt^2*mh^4*s24 - 1/4*mt^2*mh^4*s23 - 1/4*mt^2*mh^4*
      s14 - 1/4*mt^2*mh^4*s13 - 2*mt^2*mh^4*s12 + 3/2*mt^4*s24^2 + 3*mt^4*s23*
      s24 + 3/2*mt^4*s23^2 + 3*mt^4*s14*s24 + 4*mt^4*s14*s23 + 3/2*mt^4*s14^2
       + 4*mt^4*s13*s24 + 3*mt^4*s13*s23 + 3*mt^4*s13*s14 + 3/2*mt^4*s13^2 + 7
      *mt^4*s12*s24 + 7*mt^4*s12*s23 + 7*mt^4*s12*s14 + 7*mt^4*s12*s13 + 11/2*
      mt^4*s12^2 - 2*mt^4*mh^2*s24 - 2*mt^4*mh^2*s23 - 2*mt^4*mh^2*s14 - 2*
      mt^4*mh^2*s13 - 6*mt^4*mh^2*s12 + 1/2*mt^4*mh^4 - 3*mt^6*s24 - 3*mt^6*
      s23 - 3*mt^6*s14 - 3*mt^6*s13 - 6*mt^6*s12 + 2*mt^6*mh^2 + 2*mt^8 + 1/4*
      denom(1/2*s12)*s14^2*s23^2*s24 + 1/4*denom(1/2*s12)*s14^2*s23^3 + 1/4*
      denom(1/2*s12)*s14^3*s23^2 + 1/2*denom(1/2*s12)*s13*s14*s23*s24^2 + 1/2*
      denom(1/2*s12)*s13*s14*s23^2*s24 + 1/2*denom(1/2*s12)*s13*s14^2*s23*s24
       + 1/4*denom(1/2*s12)*s13*s14^2*s23^2 + 1/4*denom(1/2*s12)*s13^2*s24^3
       + 1/4*denom(1/2*s12)*s13^2*s23*s24^2 + 1/4*denom(1/2*s12)*s13^2*s14*
      s24^2 + 1/2*denom(1/2*s12)*s13^2*s14*s23*s24 + 1/4*denom(1/2*s12)*s13^3*
      s24^2 + 1/4*denom(1/2*s12)*s12*s14*s23*s24^2 + 1/2*denom(1/2*s12)*s12*
      s14*s23^2*s24 + 1/4*denom(1/2*s12)*s12*s14*s23^3 + 1/2*denom(1/2*s12)*
      s12*s14^2*s23*s24 + 3/4*denom(1/2*s12)*s12*s14^2*s23^2 + 1/4*denom(1/2*
      s12)*s12*s14^3*s23 + 1/4*denom(1/2*s12)*s12*s13*s24^3 + 1/2*denom(1/2*
      s12)*s12*s13*s23*s24^2 + 1/4*denom(1/2*s12)*s12*s13*s23^2*s24 + 1/2*
      denom(1/2*s12)*s12*s13*s14*s24^2 + 3/2*denom(1/2*s12)*s12*s13*s14*s23*
      s24 + 1/2*denom(1/2*s12)*s12*s13*s14*s23^2 + 1/4*denom(1/2*s12)*s12*s13*
      s14^2*s24 + 1/2*denom(1/2*s12)*s12*s13*s14^2*s23 + 3/4*denom(1/2*s12)*
      s12*s13^2*s24^2 + 1/2*denom(1/2*s12)*s12*s13^2*s23*s24 + 1/2*denom(1/2*
      s12)*s12*s13^2*s14*s24 + 1/4*denom(1/2*s12)*s12*s13^2*s14*s23 + 1/4*
      denom(1/2*s12)*s12*s13^3*s24 + 1/2*denom(1/2*s12)*s12^2*s14*s23*s24 + 1/
      2*denom(1/2*s12)*s12^2*s14*s23^2 + 1/2*denom(1/2*s12)*s12^2*s14^2*s23 + 
      1/2*denom(1/2*s12)*s12^2*s13*s24^2 + 1/2*denom(1/2*s12)*s12^2*s13*s23*
      s24 + 1/2*denom(1/2*s12)*s12^2*s13*s14*s24 + 1/2*denom(1/2*s12)*s12^2*
      s13*s14*s23 + 1/2*denom(1/2*s12)*s12^2*s13^2*s24 + 1/4*denom(1/2*s12)*
      s12^3*s14*s23 + 1/4*denom(1/2*s12)*s12^3*s13*s24 - 1/4*denom(1/2*s12)*
      mh^2*s14^2*s23^2 - 1/2*denom(1/2*s12)*mh^2*s13*s14*s23*s24 - 1/4*denom(1/
      2*s12)*mh^2*s13^2*s24^2 - 1/2*denom(1/2*s12)*mh^2*s12*s14*s23*s24 - 1/2*
      denom(1/2*s12)*mh^2*s12*s14*s23^2 - 1/2*denom(1/2*s12)*mh^2*s12*s14^2*
      s23 - 1/2*denom(1/2*s12)*mh^2*s12*s13*s24^2 - 1/2*denom(1/2*s12)*mh^2*
      s12*s13*s23*s24 - 1/2*denom(1/2*s12)*mh^2*s12*s13*s14*s24 - 1/2*denom(1/
      2*s12)*mh^2*s12*s13*s14*s23 - 1/2*denom(1/2*s12)*mh^2*s12*s13^2*s24 - 1/
      2*denom(1/2*s12)*mh^2*s12^2*s14*s23 - 1/2*denom(1/2*s12)*mh^2*s12^2*s13*
      s24 + 1/4*denom(1/2*s12)*mh^4*s12*s14*s23 + 1/4*denom(1/2*s12)*mh^4*s12*
      s13*s24 - 1/2*denom(1/2*s12)*mt^2*s14*s23*s24^2 - denom(1/2*s12)*mt^2*
      s14*s23^2*s24 - 1/2*denom(1/2*s12)*mt^2*s14*s23^3 - denom(1/2*s12)*mt^2*
      s14^2*s23*s24 - 3/2*denom(1/2*s12)*mt^2*s14^2*s23^2 - 1/2*denom(1/2*s12)
      *mt^2*s14^3*s23 - 1/2*denom(1/2*s12)*mt^2*s13*s24^3 - denom(1/2*s12)*
      mt^2*s13*s23*s24^2 - 1/2*denom(1/2*s12)*mt^2*s13*s23^2*s24 - denom(1/2*
      s12)*mt^2*s13*s14*s24^2 - 3*denom(1/2*s12)*mt^2*s13*s14*s23*s24 - denom(
      1/2*s12)*mt^2*s13*s14*s23^2 - 1/2*denom(1/2*s12)*mt^2*s13*s14^2*s24 - 
      denom(1/2*s12)*mt^2*s13*s14^2*s23 - 3/2*denom(1/2*s12)*mt^2*s13^2*s24^2
       - denom(1/2*s12)*mt^2*s13^2*s23*s24 - denom(1/2*s12)*mt^2*s13^2*s14*s24
       - 1/2*denom(1/2*s12)*mt^2*s13^2*s14*s23 - 1/2*denom(1/2*s12)*mt^2*s13^3
      *s24 - 1/4*denom(1/2*s12)*mt^2*s12*s24^3 - 3/4*denom(1/2*s12)*mt^2*s12*
      s23*s24^2 - 3/4*denom(1/2*s12)*mt^2*s12*s23^2*s24 - 1/4*denom(1/2*s12)*
      mt^2*s12*s23^3 - 3/4*denom(1/2*s12)*mt^2*s12*s14*s24^2 - 7/2*denom(1/2*
      s12)*mt^2*s12*s14*s23*s24 - 11/4*denom(1/2*s12)*mt^2*s12*s14*s23^2 - 3/4
      *denom(1/2*s12)*mt^2*s12*s14^2*s24 - 11/4*denom(1/2*s12)*mt^2*s12*s14^2*
      s23 - 1/4*denom(1/2*s12)*mt^2*s12*s14^3 - 11/4*denom(1/2*s12)*mt^2*s12*
      s13*s24^2 - 7/2*denom(1/2*s12)*mt^2*s12*s13*s23*s24 - 3/4*denom(1/2*s12)
      *mt^2*s12*s13*s23^2 - 7/2*denom(1/2*s12)*mt^2*s12*s13*s14*s24 - 7/2*
      denom(1/2*s12)*mt^2*s12*s13*s14*s23 - 3/4*denom(1/2*s12)*mt^2*s12*s13*
      s14^2 - 11/4*denom(1/2*s12)*mt^2*s12*s13^2*s24 - 3/4*denom(1/2*s12)*mt^2
      *s12*s13^2*s23 - 3/4*denom(1/2*s12)*mt^2*s12*s13^2*s14 - 1/4*denom(1/2*
      s12)*mt^2*s12*s13^3 - 1/2*denom(1/2*s12)*mt^2*s12^2*s24^2 - denom(1/2*
      s12)*mt^2*s12^2*s23*s24 - 1/2*denom(1/2*s12)*mt^2*s12^2*s23^2 - denom(1/
      2*s12)*mt^2*s12^2*s14*s24 - 5/2*denom(1/2*s12)*mt^2*s12^2*s14*s23 - 1/2*
      denom(1/2*s12)*mt^2*s12^2*s14^2 - 5/2*denom(1/2*s12)*mt^2*s12^2*s13*s24
       - denom(1/2*s12)*mt^2*s12^2*s13*s23 - denom(1/2*s12)*mt^2*s12^2*s13*s14
       - 1/2*denom(1/2*s12)*mt^2*s12^2*s13^2 - 1/4*denom(1/2*s12)*mt^2*s12^3*
      s24 - 1/4*denom(1/2*s12)*mt^2*s12^3*s23 - 1/4*denom(1/2*s12)*mt^2*s12^3*
      s14 - 1/4*denom(1/2*s12)*mt^2*s12^3*s13 + 1/2*denom(1/2*s12)*mt^2*mh^2*
      s14*s23*s24 + 1/2*denom(1/2*s12)*mt^2*mh^2*s14*s23^2 + 1/2*denom(1/2*s12
      )*mt^2*mh^2*s14^2*s23 + 1/2*denom(1/2*s12)*mt^2*mh^2*s13*s24^2 + 1/2*
      denom(1/2*s12)*mt^2*mh^2*s13*s23*s24 + 1/2*denom(1/2*s12)*mt^2*mh^2*s13*
      s14*s24 + 1/2*denom(1/2*s12)*mt^2*mh^2*s13*s14*s23 + 1/2*denom(1/2*s12)*
      mt^2*mh^2*s13^2*s24 + 1/2*denom(1/2*s12)*mt^2*mh^2*s12*s24^2 + denom(1/2
      *s12)*mt^2*mh^2*s12*s23*s24 + 1/2*denom(1/2*s12)*mt^2*mh^2*s12*s23^2 + 
      denom(1/2*s12)*mt^2*mh^2*s12*s14*s24 + 5/2*denom(1/2*s12)*mt^2*mh^2*s12*
      s14*s23 + 1/2*denom(1/2*s12)*mt^2*mh^2*s12*s14^2 + 5/2*denom(1/2*s12)*
      mt^2*mh^2*s12*s13*s24 + denom(1/2*s12)*mt^2*mh^2*s12*s13*s23 + denom(1/2
      *s12)*mt^2*mh^2*s12*s13*s14 + 1/2*denom(1/2*s12)*mt^2*mh^2*s12*s13^2 + 1/
      2*denom(1/2*s12)*mt^2*mh^2*s12^2*s24 + 1/2*denom(1/2*s12)*mt^2*mh^2*
      s12^2*s23 + 1/2*denom(1/2*s12)*mt^2*mh^2*s12^2*s14 + 1/2*denom(1/2*s12)*
      mt^2*mh^2*s12^2*s13 - 1/4*denom(1/2*s12)*mt^2*mh^4*s12*s24 - 1/4*denom(1/
      2*s12)*mt^2*mh^4*s12*s23 - 1/4*denom(1/2*s12)*mt^2*mh^4*s12*s14 - 1/4*
      denom(1/2*s12)*mt^2*mh^4*s12*s13 + 1/4*denom(1/2*s12)*mt^4*s24^3 + 3/4*
      denom(1/2*s12)*mt^4*s23*s24^2 + 3/4*denom(1/2*s12)*mt^4*s23^2*s24 + 1/4*
      denom(1/2*s12)*mt^4*s23^3 + 3/4*denom(1/2*s12)*mt^4*s14*s24^2 + 7/2*
      denom(1/2*s12)*mt^4*s14*s23*s24 + 11/4*denom(1/2*s12)*mt^4*s14*s23^2 + 3/
      4*denom(1/2*s12)*mt^4*s14^2*s24 + 11/4*denom(1/2*s12)*mt^4*s14^2*s23 + 1/
      4*denom(1/2*s12)*mt^4*s14^3 + 11/4*denom(1/2*s12)*mt^4*s13*s24^2 + 7/2*
      denom(1/2*s12)*mt^4*s13*s23*s24 + 3/4*denom(1/2*s12)*mt^4*s13*s23^2 + 7/
      2*denom(1/2*s12)*mt^4*s13*s14*s24 + 7/2*denom(1/2*s12)*mt^4*s13*s14*s23
       + 3/4*denom(1/2*s12)*mt^4*s13*s14^2 + 11/4*denom(1/2*s12)*mt^4*s13^2*
      s24 + 3/4*denom(1/2*s12)*mt^4*s13^2*s23 + 3/4*denom(1/2*s12)*mt^4*s13^2*
      s14 + 1/4*denom(1/2*s12)*mt^4*s13^3 + 9/4*denom(1/2*s12)*mt^4*s12*s24^2
       + 9/2*denom(1/2*s12)*mt^4*s12*s23*s24 + 9/4*denom(1/2*s12)*mt^4*s12*
      s23^2 + 9/2*denom(1/2*s12)*mt^4*s12*s14*s24 + 15/2*denom(1/2*s12)*mt^4*
      s12*s14*s23 + 9/4*denom(1/2*s12)*mt^4*s12*s14^2 + 15/2*denom(1/2*s12)*
      mt^4*s12*s13*s24 + 9/2*denom(1/2*s12)*mt^4*s12*s13*s23 + 9/2*denom(1/2*
      s12)*mt^4*s12*s13*s14 + 9/4*denom(1/2*s12)*mt^4*s12*s13^2 + 5/2*denom(1/
      2*s12)*mt^4*s12^2*s24 + 5/2*denom(1/2*s12)*mt^4*s12^2*s23 + 5/2*denom(1/
      2*s12)*mt^4*s12^2*s14 + 5/2*denom(1/2*s12)*mt^4*s12^2*s13 + 1/2*denom(1/
      2*s12)*mt^4*s12^3 - 1/4*denom(1/2*s12)*mt^4*mh^2*s24^2 - 1/2*denom(1/2*
      s12)*mt^4*mh^2*s23*s24 - 1/4*denom(1/2*s12)*mt^4*mh^2*s23^2 - 1/2*denom(
      1/2*s12)*mt^4*mh^2*s14*s24 - 3/2*denom(1/2*s12)*mt^4*mh^2*s14*s23 - 1/4*
      denom(1/2*s12)*mt^4*mh^2*s14^2 - 3/2*denom(1/2*s12)*mt^4*mh^2*s13*s24 - 
      1/2*denom(1/2*s12)*mt^4*mh^2*s13*s23 - 1/2*denom(1/2*s12)*mt^4*mh^2*s13*
      s14 - 1/4*denom(1/2*s12)*mt^4*mh^2*s13^2 - 5/2*denom(1/2*s12)*mt^4*mh^2*
      s12*s24 - 5/2*denom(1/2*s12)*mt^4*mh^2*s12*s23 - 5/2*denom(1/2*s12)*mt^4
      *mh^2*s12*s14 - 5/2*denom(1/2*s12)*mt^4*mh^2*s12*s13 - denom(1/2*s12)*
      mt^4*mh^2*s12^2 + 1/2*denom(1/2*s12)*mt^4*mh^4*s12 - 3/2*denom(1/2*s12)*
      mt^6*s24^2 - 3*denom(1/2*s12)*mt^6*s23*s24 - 3/2*denom(1/2*s12)*mt^6*
      s23^2 - 3*denom(1/2*s12)*mt^6*s14*s24 - 5*denom(1/2*s12)*mt^6*s14*s23 - 
      3/2*denom(1/2*s12)*mt^6*s14^2 - 5*denom(1/2*s12)*mt^6*s13*s24 - 3*denom(
      1/2*s12)*mt^6*s13*s23 - 3*denom(1/2*s12)*mt^6*s13*s14 - 3/2*denom(1/2*
      s12)*mt^6*s13^2 - 6*denom(1/2*s12)*mt^6*s12*s24 - 6*denom(1/2*s12)*mt^6*
      s12*s23 - 6*denom(1/2*s12)*mt^6*s12*s14 - 6*denom(1/2*s12)*mt^6*s12*s13
       - 3*denom(1/2*s12)*mt^6*s12^2 + denom(1/2*s12)*mt^6*mh^2*s24 + denom(1/
      2*s12)*mt^6*mh^2*s23 + denom(1/2*s12)*mt^6*mh^2*s14 + denom(1/2*s12)*
      mt^6*mh^2*s13 + 3*denom(1/2*s12)*mt^6*mh^2*s12 + 3*denom(1/2*s12)*mt^8*
      s24 + 3*denom(1/2*s12)*mt^8*s23 + 3*denom(1/2*s12)*mt^8*s14 + 3*denom(1/
      2*s12)*mt^8*s13 + 5*denom(1/2*s12)*mt^8*s12 - denom(1/2*s12)*mt^8*mh^2
       - 2*denom(1/2*s12)*mt^10 + 1/16*denom(1/4*s12^2)*s14^3*s23^3 + 3/16*
      denom(1/4*s12^2)*s13*s14^2*s23^2*s24 + 3/16*denom(1/4*s12^2)*s13^2*s14*
      s23*s24^2 + 1/16*denom(1/4*s12^2)*s13^3*s24^3 + 1/16*denom(1/4*s12^2)*
      s12*s14^2*s23^2*s24 + 1/16*denom(1/4*s12^2)*s12*s14^2*s23^3 + 1/16*
      denom(1/4*s12^2)*s12*s14^3*s23^2 + 1/8*denom(1/4*s12^2)*s12*s13*s14*s23*
      s24^2 + 1/8*denom(1/4*s12^2)*s12*s13*s14*s23^2*s24 + 1/8*denom(1/4*s12^2
      )*s12*s13*s14^2*s23*s24 + 1/16*denom(1/4*s12^2)*s12*s13*s14^2*s23^2 + 1/
      16*denom(1/4*s12^2)*s12*s13^2*s24^3 + 1/16*denom(1/4*s12^2)*s12*s13^2*
      s23*s24^2 + 1/16*denom(1/4*s12^2)*s12*s13^2*s14*s24^2 + 1/8*denom(1/4*
      s12^2)*s12*s13^2*s14*s23*s24 + 1/16*denom(1/4*s12^2)*s12*s13^3*s24^2 + 1/
      16*denom(1/4*s12^2)*s12^2*s14^2*s23^2 + 1/8*denom(1/4*s12^2)*s12^2*s13*
      s14*s23*s24 + 1/16*denom(1/4*s12^2)*s12^2*s13^2*s24^2 - 1/16*denom(1/4*
      s12^2)*mh^2*s12*s14^2*s23^2 - 1/8*denom(1/4*s12^2)*mh^2*s12*s13*s14*s23*
      s24 - 1/16*denom(1/4*s12^2)*mh^2*s12*s13^2*s24^2 - 3/16*denom(1/4*s12^2)
      *mt^2*s14^2*s23^2*s24 - 3/16*denom(1/4*s12^2)*mt^2*s14^2*s23^3 - 3/16*
      denom(1/4*s12^2)*mt^2*s14^3*s23^2 - 3/8*denom(1/4*s12^2)*mt^2*s13*s14*
      s23*s24^2 - 3/8*denom(1/4*s12^2)*mt^2*s13*s14*s23^2*s24 - 3/8*denom(1/4*
      s12^2)*mt^2*s13*s14^2*s23*s24 - 3/16*denom(1/4*s12^2)*mt^2*s13*s14^2*
      s23^2 - 3/16*denom(1/4*s12^2)*mt^2*s13^2*s24^3 - 3/16*denom(1/4*s12^2)*
      mt^2*s13^2*s23*s24^2 - 3/16*denom(1/4*s12^2)*mt^2*s13^2*s14*s24^2 - 3/8*
      denom(1/4*s12^2)*mt^2*s13^2*s14*s23*s24 - 3/16*denom(1/4*s12^2)*mt^2*
      s13^3*s24^2 - 1/8*denom(1/4*s12^2)*mt^2*s12*s14*s23*s24^2 - 1/4*denom(1/
      4*s12^2)*mt^2*s12*s14*s23^2*s24 - 1/8*denom(1/4*s12^2)*mt^2*s12*s14*
      s23^3 - 1/4*denom(1/4*s12^2)*mt^2*s12*s14^2*s23*s24 - 1/2*denom(1/4*
      s12^2)*mt^2*s12*s14^2*s23^2 - 1/8*denom(1/4*s12^2)*mt^2*s12*s14^3*s23 - 
      1/8*denom(1/4*s12^2)*mt^2*s12*s13*s24^3 - 1/4*denom(1/4*s12^2)*mt^2*s12*
      s13*s23*s24^2 - 1/8*denom(1/4*s12^2)*mt^2*s12*s13*s23^2*s24 - 1/4*denom(
      1/4*s12^2)*mt^2*s12*s13*s14*s24^2 - denom(1/4*s12^2)*mt^2*s12*s13*s14*
      s23*s24 - 1/4*denom(1/4*s12^2)*mt^2*s12*s13*s14*s23^2 - 1/8*denom(1/4*
      s12^2)*mt^2*s12*s13*s14^2*s24 - 1/4*denom(1/4*s12^2)*mt^2*s12*s13*s14^2*
      s23 - 1/2*denom(1/4*s12^2)*mt^2*s12*s13^2*s24^2 - 1/4*denom(1/4*s12^2)*
      mt^2*s12*s13^2*s23*s24 - 1/4*denom(1/4*s12^2)*mt^2*s12*s13^2*s14*s24 - 1/
      8*denom(1/4*s12^2)*mt^2*s12*s13^2*s14*s23 - 1/8*denom(1/4*s12^2)*mt^2*
      s12*s13^3*s24 - 1/8*denom(1/4*s12^2)*mt^2*s12^2*s14*s23*s24 - 1/8*denom(
      1/4*s12^2)*mt^2*s12^2*s14*s23^2 - 1/8*denom(1/4*s12^2)*mt^2*s12^2*s14^2*
      s23 - 1/8*denom(1/4*s12^2)*mt^2*s12^2*s13*s24^2 - 1/8*denom(1/4*s12^2)*
      mt^2*s12^2*s13*s23*s24 - 1/8*denom(1/4*s12^2)*mt^2*s12^2*s13*s14*s24 - 1/
      8*denom(1/4*s12^2)*mt^2*s12^2*s13*s14*s23 - 1/8*denom(1/4*s12^2)*mt^2*
      s12^2*s13^2*s24 + 1/8*denom(1/4*s12^2)*mt^2*mh^2*s12*s14*s23*s24 + 1/8*
      denom(1/4*s12^2)*mt^2*mh^2*s12*s14*s23^2 + 1/8*denom(1/4*s12^2)*mt^2*
      mh^2*s12*s14^2*s23 + 1/8*denom(1/4*s12^2)*mt^2*mh^2*s12*s13*s24^2 + 1/8*
      denom(1/4*s12^2)*mt^2*mh^2*s12*s13*s23*s24 + 1/8*denom(1/4*s12^2)*mt^2*
      mh^2*s12*s13*s14*s24 + 1/8*denom(1/4*s12^2)*mt^2*mh^2*s12*s13*s14*s23 + 
      1/8*denom(1/4*s12^2)*mt^2*mh^2*s12*s13^2*s24 + 3/16*denom(1/4*s12^2)*
      mt^4*s14*s23*s24^2 + 3/8*denom(1/4*s12^2)*mt^4*s14*s23^2*s24 + 3/16*
      denom(1/4*s12^2)*mt^4*s14*s23^3 + 3/8*denom(1/4*s12^2)*mt^4*s14^2*s23*
      s24 + 3/4*denom(1/4*s12^2)*mt^4*s14^2*s23^2 + 3/16*denom(1/4*s12^2)*mt^4
      *s14^3*s23 + 3/16*denom(1/4*s12^2)*mt^4*s13*s24^3 + 3/8*denom(1/4*s12^2)
      *mt^4*s13*s23*s24^2 + 3/16*denom(1/4*s12^2)*mt^4*s13*s23^2*s24 + 3/8*
      denom(1/4*s12^2)*mt^4*s13*s14*s24^2 + 3/2*denom(1/4*s12^2)*mt^4*s13*s14*
      s23*s24 + 3/8*denom(1/4*s12^2)*mt^4*s13*s14*s23^2 + 3/16*denom(1/4*s12^2
      )*mt^4*s13*s14^2*s24 + 3/8*denom(1/4*s12^2)*mt^4*s13*s14^2*s23 + 3/4*
      denom(1/4*s12^2)*mt^4*s13^2*s24^2 + 3/8*denom(1/4*s12^2)*mt^4*s13^2*s23*
      s24 + 3/8*denom(1/4*s12^2)*mt^4*s13^2*s14*s24 + 3/16*denom(1/4*s12^2)*
      mt^4*s13^2*s14*s23 + 3/16*denom(1/4*s12^2)*mt^4*s13^3*s24 + 1/16*denom(1/
      4*s12^2)*mt^4*s12*s24^3 + 3/16*denom(1/4*s12^2)*mt^4*s12*s23*s24^2 + 3/
      16*denom(1/4*s12^2)*mt^4*s12*s23^2*s24 + 1/16*denom(1/4*s12^2)*mt^4*s12*
      s23^3 + 3/16*denom(1/4*s12^2)*mt^4*s12*s14*s24^2 + 9/8*denom(1/4*s12^2)*
      mt^4*s12*s14*s23*s24 + 15/16*denom(1/4*s12^2)*mt^4*s12*s14*s23^2 + 3/16*
      denom(1/4*s12^2)*mt^4*s12*s14^2*s24 + 15/16*denom(1/4*s12^2)*mt^4*s12*
      s14^2*s23 + 1/16*denom(1/4*s12^2)*mt^4*s12*s14^3 + 15/16*denom(1/4*s12^2
      )*mt^4*s12*s13*s24^2 + 9/8*denom(1/4*s12^2)*mt^4*s12*s13*s23*s24 + 3/16*
      denom(1/4*s12^2)*mt^4*s12*s13*s23^2 + 9/8*denom(1/4*s12^2)*mt^4*s12*s13*
      s14*s24 + 9/8*denom(1/4*s12^2)*mt^4*s12*s13*s14*s23 + 3/16*denom(1/4*
      s12^2)*mt^4*s12*s13*s14^2 + 15/16*denom(1/4*s12^2)*mt^4*s12*s13^2*s24 + 
      3/16*denom(1/4*s12^2)*mt^4*s12*s13^2*s23 + 3/16*denom(1/4*s12^2)*mt^4*
      s12*s13^2*s14 + 1/16*denom(1/4*s12^2)*mt^4*s12*s13^3 + 1/16*denom(1/4*
      s12^2)*mt^4*s12^2*s24^2 + 1/8*denom(1/4*s12^2)*mt^4*s12^2*s23*s24 + 1/16
      *denom(1/4*s12^2)*mt^4*s12^2*s23^2 + 1/8*denom(1/4*s12^2)*mt^4*s12^2*s14
      *s24 + 3/8*denom(1/4*s12^2)*mt^4*s12^2*s14*s23 + 1/16*denom(1/4*s12^2)*
      mt^4*s12^2*s14^2 + 3/8*denom(1/4*s12^2)*mt^4*s12^2*s13*s24 + 1/8*denom(1/
      4*s12^2)*mt^4*s12^2*s13*s23 + 1/8*denom(1/4*s12^2)*mt^4*s12^2*s13*s14 + 
      1/16*denom(1/4*s12^2)*mt^4*s12^2*s13^2 - 1/16*denom(1/4*s12^2)*mt^4*mh^2
      *s12*s24^2 - 1/8*denom(1/4*s12^2)*mt^4*mh^2*s12*s23*s24 - 1/16*denom(1/4
      *s12^2)*mt^4*mh^2*s12*s23^2 - 1/8*denom(1/4*s12^2)*mt^4*mh^2*s12*s14*s24
       - 3/8*denom(1/4*s12^2)*mt^4*mh^2*s12*s14*s23 - 1/16*denom(1/4*s12^2)*
      mt^4*mh^2*s12*s14^2 - 3/8*denom(1/4*s12^2)*mt^4*mh^2*s12*s13*s24 - 1/8*
      denom(1/4*s12^2)*mt^4*mh^2*s12*s13*s23 - 1/8*denom(1/4*s12^2)*mt^4*mh^2*
      s12*s13*s14 - 1/16*denom(1/4*s12^2)*mt^4*mh^2*s12*s13^2 - 1/16*denom(1/4
      *s12^2)*mt^6*s24^3 - 3/16*denom(1/4*s12^2)*mt^6*s23*s24^2 - 3/16*denom(1/
      4*s12^2)*mt^6*s23^2*s24 - 1/16*denom(1/4*s12^2)*mt^6*s23^3 - 3/16*denom(
      1/4*s12^2)*mt^6*s14*s24^2 - 9/8*denom(1/4*s12^2)*mt^6*s14*s23*s24 - 15/
      16*denom(1/4*s12^2)*mt^6*s14*s23^2 - 3/16*denom(1/4*s12^2)*mt^6*s14^2*
      s24 - 15/16*denom(1/4*s12^2)*mt^6*s14^2*s23 - 1/16*denom(1/4*s12^2)*mt^6
      *s14^3 - 15/16*denom(1/4*s12^2)*mt^6*s13*s24^2 - 9/8*denom(1/4*s12^2)*
      mt^6*s13*s23*s24 - 3/16*denom(1/4*s12^2)*mt^6*s13*s23^2 - 9/8*denom(1/4*
      s12^2)*mt^6*s13*s14*s24 - 9/8*denom(1/4*s12^2)*mt^6*s13*s14*s23 - 3/16*
      denom(1/4*s12^2)*mt^6*s13*s14^2 - 15/16*denom(1/4*s12^2)*mt^6*s13^2*s24
       - 3/16*denom(1/4*s12^2)*mt^6*s13^2*s23 - 3/16*denom(1/4*s12^2)*mt^6*
      s13^2*s14 - 1/16*denom(1/4*s12^2)*mt^6*s13^3 - 1/2*denom(1/4*s12^2)*mt^6
      *s12*s24^2 - denom(1/4*s12^2)*mt^6*s12*s23*s24 - 1/2*denom(1/4*s12^2)*
      mt^6*s12*s23^2 - denom(1/4*s12^2)*mt^6*s12*s14*s24 - 2*denom(1/4*s12^2)*
      mt^6*s12*s14*s23 - 1/2*denom(1/4*s12^2)*mt^6*s12*s14^2 - 2*denom(1/4*
      s12^2)*mt^6*s12*s13*s24 - denom(1/4*s12^2)*mt^6*s12*s13*s23 - denom(1/4*
      s12^2)*mt^6*s12*s13*s14 - 1/2*denom(1/4*s12^2)*mt^6*s12*s13^2 - 1/4*
      denom(1/4*s12^2)*mt^6*s12^2*s24 - 1/4*denom(1/4*s12^2)*mt^6*s12^2*s23 - 
      1/4*denom(1/4*s12^2)*mt^6*s12^2*s14 - 1/4*denom(1/4*s12^2)*mt^6*s12^2*
      s13 + 1/4*denom(1/4*s12^2)*mt^6*mh^2*s12*s24 + 1/4*denom(1/4*s12^2)*mt^6
      *mh^2*s12*s23 + 1/4*denom(1/4*s12^2)*mt^6*mh^2*s12*s14 + 1/4*denom(1/4*
      s12^2)*mt^6*mh^2*s12*s13 + 3/8*denom(1/4*s12^2)*mt^8*s24^2 + 3/4*denom(1/
      4*s12^2)*mt^8*s23*s24 + 3/8*denom(1/4*s12^2)*mt^8*s23^2 + 3/4*denom(1/4*
      s12^2)*mt^8*s14*s24 + 3/2*denom(1/4*s12^2)*mt^8*s14*s23 + 3/8*denom(1/4*
      s12^2)*mt^8*s14^2 + 3/2*denom(1/4*s12^2)*mt^8*s13*s24 + 3/4*denom(1/4*
      s12^2)*mt^8*s13*s23 + 3/4*denom(1/4*s12^2)*mt^8*s13*s14 + 3/8*denom(1/4*
      s12^2)*mt^8*s13^2 + 5/4*denom(1/4*s12^2)*mt^8*s12*s24 + 5/4*denom(1/4*
      s12^2)*mt^8*s12*s23 + 5/4*denom(1/4*s12^2)*mt^8*s12*s14 + 5/4*denom(1/4*
      s12^2)*mt^8*s12*s13 + 1/4*denom(1/4*s12^2)*mt^8*s12^2 - 1/4*denom(1/4*
      s12^2)*mt^8*mh^2*s12 - 3/4*denom(1/4*s12^2)*mt^10*s24 - 3/4*denom(1/4*
      s12^2)*mt^10*s23 - 3/4*denom(1/4*s12^2)*mt^10*s14 - 3/4*denom(1/4*s12^2)
      *mt^10*s13 - denom(1/4*s12^2)*mt^10*s12 + 1/2*denom(1/4*s12^2)*mt^12;
 
 .sort
id KMatrix(10,8) =   - 1/2*mt^2*s14*s23*s24 - 1/2*mt^2*s14*s23^2 - 1/2*mt^2*
      s14^2*s23 - 1/2*mt^2*s13*s24^2 - 1/2*mt^2*s13*s23*s24 - 1/2*mt^2*s13*s14
      *s24 - 1/2*mt^2*s13*s14*s23 - 1/2*mt^2*s13^2*s24 - 1/2*mt^2*s12*s24^2 - 
      mt^2*s12*s23*s24 - 1/2*mt^2*s12*s23^2 - mt^2*s12*s14*s24 - 3/2*mt^2*s12*
      s14*s23 - 1/2*mt^2*s12*s14^2 - 3/2*mt^2*s12*s13*s24 - mt^2*s12*s13*s23
       - mt^2*s12*s13*s14 - 1/2*mt^2*s12*s13^2 - mt^2*s12^2*s24 - mt^2*s12^2*
      s23 - mt^2*s12^2*s14 - mt^2*s12^2*s13 - 1/2*mt^2*s12^3 + 1/2*mt^2*mh^2*
      s14*s23 + 1/2*mt^2*mh^2*s13*s24 + mt^2*mh^2*s12*s24 + mt^2*mh^2*s12*s23
       + mt^2*mh^2*s12*s14 + mt^2*mh^2*s12*s13 + mt^2*mh^2*s12^2 - 1/2*mt^2*
      mh^4*s12 + 1/2*mt^4*s24^2 + mt^4*s23*s24 + 1/2*mt^4*s23^2 + mt^4*s14*s24
       + 2*mt^4*s14*s23 + 1/2*mt^4*s14^2 + 2*mt^4*s13*s24 + mt^4*s13*s23 + 
      mt^4*s13*s14 + 1/2*mt^4*s13^2 + 7/2*mt^4*s12*s24 + 7/2*mt^4*s12*s23 + 7/
      2*mt^4*s12*s14 + 7/2*mt^4*s12*s13 + 3*mt^4*s12^2 - 1/2*mt^4*mh^2*s24 - 1/
      2*mt^4*mh^2*s23 - 1/2*mt^4*mh^2*s14 - 1/2*mt^4*mh^2*s13 - 3*mt^4*mh^2*
      s12 - 2*mt^6*s24 - 2*mt^6*s23 - 2*mt^6*s14 - 2*mt^6*s13 - 5*mt^6*s12 + 
      mt^6*mh^2 + 2*mt^8 + 1/4*denom(1/2*s12)*s14^2*s23*s24^2 + 1/4*denom(1/2*
      s12)*s14^2*s23^2*s24 + 1/4*denom(1/2*s12)*s14^3*s23*s24 + 1/4*denom(1/2*
      s12)*s13*s14*s24^3 + 1/4*denom(1/2*s12)*s13*s14*s23*s24^2 + 1/4*denom(1/
      2*s12)*s13*s14^2*s24^2 + 1/4*denom(1/2*s12)*s13*s14^2*s23*s24 + 1/4*
      denom(1/2*s12)*s13^2*s14*s24^2 + 1/4*denom(1/2*s12)*s12*s14*s24^3 + 1/2*
      denom(1/2*s12)*s12*s14*s23*s24^2 + 1/4*denom(1/2*s12)*s12*s14*s23^2*s24
       + 1/2*denom(1/2*s12)*s12*s14^2*s24^2 + 3/4*denom(1/2*s12)*s12*s14^2*s23
      *s24 + 1/4*denom(1/2*s12)*s12*s14^3*s24 + 3/4*denom(1/2*s12)*s12*s13*s14
      *s24^2 + 1/2*denom(1/2*s12)*s12*s13*s14*s23*s24 + 1/2*denom(1/2*s12)*s12
      *s13*s14^2*s24 + 1/4*denom(1/2*s12)*s12*s13^2*s14*s24 + 1/2*denom(1/2*
      s12)*s12^2*s14*s24^2 + 1/2*denom(1/2*s12)*s12^2*s14*s23*s24 + 1/2*denom(
      1/2*s12)*s12^2*s14^2*s24 + 1/2*denom(1/2*s12)*s12^2*s13*s14*s24 + 1/4*
      denom(1/2*s12)*s12^3*s14*s24 - 1/4*denom(1/2*s12)*mh^2*s14^2*s23*s24 - 1/
      4*denom(1/2*s12)*mh^2*s13*s14*s24^2 - 1/2*denom(1/2*s12)*mh^2*s12*s14*
      s24^2 - 1/2*denom(1/2*s12)*mh^2*s12*s14*s23*s24 - 1/2*denom(1/2*s12)*
      mh^2*s12*s14^2*s24 - 1/2*denom(1/2*s12)*mh^2*s12*s13*s14*s24 - 1/2*
      denom(1/2*s12)*mh^2*s12^2*s14*s24 + 1/4*denom(1/2*s12)*mh^4*s12*s14*s24
       - 1/4*denom(1/2*s12)*mt^2*s14*s24^3 - 3/4*denom(1/2*s12)*mt^2*s14*s23*
      s24^2 - 1/2*denom(1/2*s12)*mt^2*s14*s23^2*s24 - 1/2*denom(1/2*s12)*mt^2*
      s14^2*s24^2 - 3/2*denom(1/2*s12)*mt^2*s14^2*s23*s24 - 1/2*denom(1/2*s12)
      *mt^2*s14^2*s23^2 - 1/4*denom(1/2*s12)*mt^2*s14^3*s24 - 1/4*denom(1/2*
      s12)*mt^2*s14^3*s23 - 1/4*denom(1/2*s12)*mt^2*s13*s24^3 - 1/4*denom(1/2*
      s12)*mt^2*s13*s23*s24^2 - 3/2*denom(1/2*s12)*mt^2*s13*s14*s24^2 - 3/2*
      denom(1/2*s12)*mt^2*s13*s14*s23*s24 - 3/4*denom(1/2*s12)*mt^2*s13*s14^2*
      s24 - 1/4*denom(1/2*s12)*mt^2*s13*s14^2*s23 - 1/2*denom(1/2*s12)*mt^2*
      s13^2*s24^2 - 1/2*denom(1/2*s12)*mt^2*s13^2*s14*s24 - 1/4*denom(1/2*s12)
      *mt^2*s12*s24^3 - 1/2*denom(1/2*s12)*mt^2*s12*s23*s24^2 - 1/4*denom(1/2*
      s12)*mt^2*s12*s23^2*s24 - 5/2*denom(1/2*s12)*mt^2*s12*s14*s24^2 - 13/4*
      denom(1/2*s12)*mt^2*s12*s14*s23*s24 - 1/2*denom(1/2*s12)*mt^2*s12*s14*
      s23^2 - 5/2*denom(1/2*s12)*mt^2*s12*s14^2*s24 - denom(1/2*s12)*mt^2*s12*
      s14^2*s23 - 1/4*denom(1/2*s12)*mt^2*s12*s14^3 - denom(1/2*s12)*mt^2*s12*
      s13*s24^2 - 3/4*denom(1/2*s12)*mt^2*s12*s13*s23*s24 - 13/4*denom(1/2*s12
      )*mt^2*s12*s13*s14*s24 - 3/4*denom(1/2*s12)*mt^2*s12*s13*s14*s23 - 1/2*
      denom(1/2*s12)*mt^2*s12*s13*s14^2 - 1/2*denom(1/2*s12)*mt^2*s12*s13^2*
      s24 - 1/4*denom(1/2*s12)*mt^2*s12*s13^2*s14 - 1/2*denom(1/2*s12)*mt^2*
      s12^2*s24^2 - 1/2*denom(1/2*s12)*mt^2*s12^2*s23*s24 - 5/2*denom(1/2*s12)
      *mt^2*s12^2*s14*s24 - 3/4*denom(1/2*s12)*mt^2*s12^2*s14*s23 - 1/2*denom(
      1/2*s12)*mt^2*s12^2*s14^2 - 3/4*denom(1/2*s12)*mt^2*s12^2*s13*s24 - 1/2*
      denom(1/2*s12)*mt^2*s12^2*s13*s14 - 1/4*denom(1/2*s12)*mt^2*s12^3*s24 - 
      1/4*denom(1/2*s12)*mt^2*s12^3*s14 + 1/4*denom(1/2*s12)*mt^2*mh^2*s14*
      s24^2 + 1/2*denom(1/2*s12)*mt^2*mh^2*s14*s23*s24 + 1/4*denom(1/2*s12)*
      mt^2*mh^2*s14^2*s24 + 1/4*denom(1/2*s12)*mt^2*mh^2*s14^2*s23 + 1/4*
      denom(1/2*s12)*mt^2*mh^2*s13*s24^2 + 1/2*denom(1/2*s12)*mt^2*mh^2*s13*
      s14*s24 + 1/2*denom(1/2*s12)*mt^2*mh^2*s12*s24^2 + 1/2*denom(1/2*s12)*
      mt^2*mh^2*s12*s23*s24 + 5/2*denom(1/2*s12)*mt^2*mh^2*s12*s14*s24 + 3/4*
      denom(1/2*s12)*mt^2*mh^2*s12*s14*s23 + 1/2*denom(1/2*s12)*mt^2*mh^2*s12*
      s14^2 + 3/4*denom(1/2*s12)*mt^2*mh^2*s12*s13*s24 + 1/2*denom(1/2*s12)*
      mt^2*mh^2*s12*s13*s14 + 1/2*denom(1/2*s12)*mt^2*mh^2*s12^2*s24 + 1/2*
      denom(1/2*s12)*mt^2*mh^2*s12^2*s14 - 1/4*denom(1/2*s12)*mt^2*mh^4*s12*
      s24 - 1/4*denom(1/2*s12)*mt^2*mh^4*s12*s14 + 1/4*denom(1/2*s12)*mt^4*
      s24^3 + 1/2*denom(1/2*s12)*mt^4*s23*s24^2 + 1/4*denom(1/2*s12)*mt^4*
      s23^2*s24 + 7/4*denom(1/2*s12)*mt^4*s14*s24^2 + 13/4*denom(1/2*s12)*mt^4
      *s14*s23*s24 + denom(1/2*s12)*mt^4*s14*s23^2 + 7/4*denom(1/2*s12)*mt^4*
      s14^2*s24 + 7/4*denom(1/2*s12)*mt^4*s14^2*s23 + 1/4*denom(1/2*s12)*mt^4*
      s14^3 + 7/4*denom(1/2*s12)*mt^4*s13*s24^2 + 5/4*denom(1/2*s12)*mt^4*s13*
      s23*s24 + 13/4*denom(1/2*s12)*mt^4*s13*s14*s24 + 5/4*denom(1/2*s12)*mt^4
      *s13*s14*s23 + 1/2*denom(1/2*s12)*mt^4*s13*s14^2 + denom(1/2*s12)*mt^4*
      s13^2*s24 + 1/4*denom(1/2*s12)*mt^4*s13^2*s14 + 9/4*denom(1/2*s12)*mt^4*
      s12*s24^2 + 11/4*denom(1/2*s12)*mt^4*s12*s23*s24 + 1/2*denom(1/2*s12)*
      mt^4*s12*s23^2 + 7*denom(1/2*s12)*mt^4*s12*s14*s24 + 4*denom(1/2*s12)*
      mt^4*s12*s14*s23 + 9/4*denom(1/2*s12)*mt^4*s12*s14^2 + 4*denom(1/2*s12)*
      mt^4*s12*s13*s24 + denom(1/2*s12)*mt^4*s12*s13*s23 + 11/4*denom(1/2*s12)
      *mt^4*s12*s13*s14 + 1/2*denom(1/2*s12)*mt^4*s12*s13^2 + 9/4*denom(1/2*
      s12)*mt^4*s12^2*s24 + 3/4*denom(1/2*s12)*mt^4*s12^2*s23 + 9/4*denom(1/2*
      s12)*mt^4*s12^2*s14 + 3/4*denom(1/2*s12)*mt^4*s12^2*s13 + 1/4*denom(1/2*
      s12)*mt^4*s12^3 - 1/4*denom(1/2*s12)*mt^4*mh^2*s24^2 - 1/4*denom(1/2*s12
      )*mt^4*mh^2*s23*s24 - denom(1/2*s12)*mt^4*mh^2*s14*s24 - 1/2*denom(1/2*
      s12)*mt^4*mh^2*s14*s23 - 1/4*denom(1/2*s12)*mt^4*mh^2*s14^2 - 1/2*denom(
      1/2*s12)*mt^4*mh^2*s13*s24 - 1/4*denom(1/2*s12)*mt^4*mh^2*s13*s14 - 9/4*
      denom(1/2*s12)*mt^4*mh^2*s12*s24 - 3/4*denom(1/2*s12)*mt^4*mh^2*s12*s23
       - 9/4*denom(1/2*s12)*mt^4*mh^2*s12*s14 - 3/4*denom(1/2*s12)*mt^4*mh^2*
      s12*s13 - 1/2*denom(1/2*s12)*mt^4*mh^2*s12^2 + 1/4*denom(1/2*s12)*mt^4*
      mh^4*s12 - 3/2*denom(1/2*s12)*mt^6*s24^2 - 2*denom(1/2*s12)*mt^6*s23*s24
       - 1/2*denom(1/2*s12)*mt^6*s23^2 - 4*denom(1/2*s12)*mt^6*s14*s24 - 7/2*
      denom(1/2*s12)*mt^6*s14*s23 - 3/2*denom(1/2*s12)*mt^6*s14^2 - 7/2*denom(
      1/2*s12)*mt^6*s13*s24 - denom(1/2*s12)*mt^6*s13*s23 - 2*denom(1/2*s12)*
      mt^6*s13*s14 - 1/2*denom(1/2*s12)*mt^6*s13^2 - 23/4*denom(1/2*s12)*mt^6*
      s12*s24 - 13/4*denom(1/2*s12)*mt^6*s12*s23 - 23/4*denom(1/2*s12)*mt^6*
      s12*s14 - 13/4*denom(1/2*s12)*mt^6*s12*s13 - 2*denom(1/2*s12)*mt^6*s12^2
       + 3/4*denom(1/2*s12)*mt^6*mh^2*s24 + 1/4*denom(1/2*s12)*mt^6*mh^2*s23
       + 3/4*denom(1/2*s12)*mt^6*mh^2*s14 + 1/4*denom(1/2*s12)*mt^6*mh^2*s13
       + 2*denom(1/2*s12)*mt^6*mh^2*s12 + 3*denom(1/2*s12)*mt^8*s24 + 2*denom(
      1/2*s12)*mt^8*s23 + 3*denom(1/2*s12)*mt^8*s14 + 2*denom(1/2*s12)*mt^8*
      s13 + 9/2*denom(1/2*s12)*mt^8*s12 - 1/2*denom(1/2*s12)*mt^8*mh^2 - 2*
      denom(1/2*s12)*mt^10 + 1/8*denom(1/4*s12^2)*s14^3*s23^2*s24 + 1/4*denom(
      1/4*s12^2)*s13*s14^2*s23*s24^2 + 1/8*denom(1/4*s12^2)*s13^2*s14*s24^3 + 
      1/8*denom(1/4*s12^2)*s12*s14^2*s23*s24^2 + 1/8*denom(1/4*s12^2)*s12*
      s14^2*s23^2*s24 + 1/8*denom(1/4*s12^2)*s12*s14^3*s23*s24 + 1/8*denom(1/4
      *s12^2)*s12*s13*s14*s24^3 + 1/8*denom(1/4*s12^2)*s12*s13*s14*s23*s24^2
       + 1/8*denom(1/4*s12^2)*s12*s13*s14^2*s24^2 + 1/8*denom(1/4*s12^2)*s12*
      s13*s14^2*s23*s24 + 1/8*denom(1/4*s12^2)*s12*s13^2*s14*s24^2 + 1/8*
      denom(1/4*s12^2)*s12^2*s14^2*s23*s24 + 1/8*denom(1/4*s12^2)*s12^2*s13*
      s14*s24^2 - 1/8*denom(1/4*s12^2)*mh^2*s12*s14^2*s23*s24 - 1/8*denom(1/4*
      s12^2)*mh^2*s12*s13*s14*s24^2 - 1/4*denom(1/4*s12^2)*mt^2*s14^2*s23*
      s24^2 - 3/8*denom(1/4*s12^2)*mt^2*s14^2*s23^2*s24 - 1/4*denom(1/4*s12^2)
      *mt^2*s14^3*s23*s24 - 1/8*denom(1/4*s12^2)*mt^2*s14^3*s23^2 - 1/4*denom(
      1/4*s12^2)*mt^2*s13*s14*s24^3 - 1/2*denom(1/4*s12^2)*mt^2*s13*s14*s23*
      s24^2 - 1/4*denom(1/4*s12^2)*mt^2*s13*s14^2*s24^2 - 1/2*denom(1/4*s12^2)
      *mt^2*s13*s14^2*s23*s24 - 1/8*denom(1/4*s12^2)*mt^2*s13^2*s24^3 - 3/8*
      denom(1/4*s12^2)*mt^2*s13^2*s14*s24^2 - 1/8*denom(1/4*s12^2)*mt^2*s12*
      s14*s24^3 - 3/8*denom(1/4*s12^2)*mt^2*s12*s14*s23*s24^2 - 1/4*denom(1/4*
      s12^2)*mt^2*s12*s14*s23^2*s24 - 1/4*denom(1/4*s12^2)*mt^2*s12*s14^2*
      s24^2 - denom(1/4*s12^2)*mt^2*s12*s14^2*s23*s24 - 1/8*denom(1/4*s12^2)*
      mt^2*s12*s14^2*s23^2 - 1/8*denom(1/4*s12^2)*mt^2*s12*s14^3*s24 - 1/8*
      denom(1/4*s12^2)*mt^2*s12*s14^3*s23 - 1/8*denom(1/4*s12^2)*mt^2*s12*s13*
      s24^3 - 1/8*denom(1/4*s12^2)*mt^2*s12*s13*s23*s24^2 - denom(1/4*s12^2)*
      mt^2*s12*s13*s14*s24^2 - 1/2*denom(1/4*s12^2)*mt^2*s12*s13*s14*s23*s24
       - 3/8*denom(1/4*s12^2)*mt^2*s12*s13*s14^2*s24 - 1/8*denom(1/4*s12^2)*
      mt^2*s12*s13*s14^2*s23 - 1/8*denom(1/4*s12^2)*mt^2*s12*s13^2*s24^2 - 1/4
      *denom(1/4*s12^2)*mt^2*s12*s13^2*s14*s24 - 1/8*denom(1/4*s12^2)*mt^2*
      s12^2*s14*s24^2 - 1/4*denom(1/4*s12^2)*mt^2*s12^2*s14*s23*s24 - 1/8*
      denom(1/4*s12^2)*mt^2*s12^2*s14^2*s24 - 1/8*denom(1/4*s12^2)*mt^2*s12^2*
      s14^2*s23 - 1/8*denom(1/4*s12^2)*mt^2*s12^2*s13*s24^2 - 1/4*denom(1/4*
      s12^2)*mt^2*s12^2*s13*s14*s24 + 1/8*denom(1/4*s12^2)*mt^2*mh^2*s12*s14*
      s24^2 + 1/4*denom(1/4*s12^2)*mt^2*mh^2*s12*s14*s23*s24 + 1/8*denom(1/4*
      s12^2)*mt^2*mh^2*s12*s14^2*s24 + 1/8*denom(1/4*s12^2)*mt^2*mh^2*s12*
      s14^2*s23 + 1/8*denom(1/4*s12^2)*mt^2*mh^2*s12*s13*s24^2 + 1/4*denom(1/4
      *s12^2)*mt^2*mh^2*s12*s13*s14*s24 + 1/8*denom(1/4*s12^2)*mt^4*s14*s24^3
       + 1/2*denom(1/4*s12^2)*mt^4*s14*s23*s24^2 + 3/8*denom(1/4*s12^2)*mt^4*
      s14*s23^2*s24 + 1/4*denom(1/4*s12^2)*mt^4*s14^2*s24^2 + 5/4*denom(1/4*
      s12^2)*mt^4*s14^2*s23*s24 + 3/8*denom(1/4*s12^2)*mt^4*s14^2*s23^2 + 1/8*
      denom(1/4*s12^2)*mt^4*s14^3*s24 + 1/4*denom(1/4*s12^2)*mt^4*s14^3*s23 + 
      1/4*denom(1/4*s12^2)*mt^4*s13*s24^3 + 1/4*denom(1/4*s12^2)*mt^4*s13*s23*
      s24^2 + 5/4*denom(1/4*s12^2)*mt^4*s13*s14*s24^2 + denom(1/4*s12^2)*mt^4*
      s13*s14*s23*s24 + 1/2*denom(1/4*s12^2)*mt^4*s13*s14^2*s24 + 1/4*denom(1/
      4*s12^2)*mt^4*s13*s14^2*s23 + 3/8*denom(1/4*s12^2)*mt^4*s13^2*s24^2 + 3/
      8*denom(1/4*s12^2)*mt^4*s13^2*s14*s24 + 1/8*denom(1/4*s12^2)*mt^4*s12*
      s24^3 + 1/4*denom(1/4*s12^2)*mt^4*s12*s23*s24^2 + 1/8*denom(1/4*s12^2)*
      mt^4*s12*s23^2*s24 + 9/8*denom(1/4*s12^2)*mt^4*s12*s14*s24^2 + 15/8*
      denom(1/4*s12^2)*mt^4*s12*s14*s23*s24 + 1/4*denom(1/4*s12^2)*mt^4*s12*
      s14*s23^2 + 9/8*denom(1/4*s12^2)*mt^4*s12*s14^2*s24 + 7/8*denom(1/4*
      s12^2)*mt^4*s12*s14^2*s23 + 1/8*denom(1/4*s12^2)*mt^4*s12*s14^3 + 7/8*
      denom(1/4*s12^2)*mt^4*s12*s13*s24^2 + 3/8*denom(1/4*s12^2)*mt^4*s12*s13*
      s23*s24 + 15/8*denom(1/4*s12^2)*mt^4*s12*s13*s14*s24 + 3/8*denom(1/4*
      s12^2)*mt^4*s12*s13*s14*s23 + 1/4*denom(1/4*s12^2)*mt^4*s12*s13*s14^2 + 
      1/4*denom(1/4*s12^2)*mt^4*s12*s13^2*s24 + 1/8*denom(1/4*s12^2)*mt^4*s12*
      s13^2*s14 + 1/8*denom(1/4*s12^2)*mt^4*s12^2*s24^2 + 1/8*denom(1/4*s12^2)
      *mt^4*s12^2*s23*s24 + 1/2*denom(1/4*s12^2)*mt^4*s12^2*s14*s24 + 1/4*
      denom(1/4*s12^2)*mt^4*s12^2*s14*s23 + 1/8*denom(1/4*s12^2)*mt^4*s12^2*
      s14^2 + 1/4*denom(1/4*s12^2)*mt^4*s12^2*s13*s24 + 1/8*denom(1/4*s12^2)*
      mt^4*s12^2*s13*s14 - 1/8*denom(1/4*s12^2)*mt^4*mh^2*s12*s24^2 - 1/8*
      denom(1/4*s12^2)*mt^4*mh^2*s12*s23*s24 - 1/2*denom(1/4*s12^2)*mt^4*mh^2*
      s12*s14*s24 - 1/4*denom(1/4*s12^2)*mt^4*mh^2*s12*s14*s23 - 1/8*denom(1/4
      *s12^2)*mt^4*mh^2*s12*s14^2 - 1/4*denom(1/4*s12^2)*mt^4*mh^2*s12*s13*s24
       - 1/8*denom(1/4*s12^2)*mt^4*mh^2*s12*s13*s14 - 1/8*denom(1/4*s12^2)*
      mt^6*s24^3 - 1/4*denom(1/4*s12^2)*mt^6*s23*s24^2 - 1/8*denom(1/4*s12^2)*
      mt^6*s23^2*s24 - 7/8*denom(1/4*s12^2)*mt^6*s14*s24^2 - 7/4*denom(1/4*
      s12^2)*mt^6*s14*s23*s24 - 3/8*denom(1/4*s12^2)*mt^6*s14*s23^2 - 7/8*
      denom(1/4*s12^2)*mt^6*s14^2*s24 - denom(1/4*s12^2)*mt^6*s14^2*s23 - 1/8*
      denom(1/4*s12^2)*mt^6*s14^3 - denom(1/4*s12^2)*mt^6*s13*s24^2 - 1/2*
      denom(1/4*s12^2)*mt^6*s13*s23*s24 - 7/4*denom(1/4*s12^2)*mt^6*s13*s14*
      s24 - 1/2*denom(1/4*s12^2)*mt^6*s13*s14*s23 - 1/4*denom(1/4*s12^2)*mt^6*
      s13*s14^2 - 3/8*denom(1/4*s12^2)*mt^6*s13^2*s24 - 1/8*denom(1/4*s12^2)*
      mt^6*s13^2*s14 - 7/8*denom(1/4*s12^2)*mt^6*s12*s24^2 - denom(1/4*s12^2)*
      mt^6*s12*s23*s24 - 1/8*denom(1/4*s12^2)*mt^6*s12*s23^2 - 11/4*denom(1/4*
      s12^2)*mt^6*s12*s14*s24 - 3/2*denom(1/4*s12^2)*mt^6*s12*s14*s23 - 7/8*
      denom(1/4*s12^2)*mt^6*s12*s14^2 - 3/2*denom(1/4*s12^2)*mt^6*s12*s13*s24
       - 1/4*denom(1/4*s12^2)*mt^6*s12*s13*s23 - denom(1/4*s12^2)*mt^6*s12*s13
      *s14 - 1/8*denom(1/4*s12^2)*mt^6*s12*s13^2 - 3/8*denom(1/4*s12^2)*mt^6*
      s12^2*s24 - 1/8*denom(1/4*s12^2)*mt^6*s12^2*s23 - 3/8*denom(1/4*s12^2)*
      mt^6*s12^2*s14 - 1/8*denom(1/4*s12^2)*mt^6*s12^2*s13 + 3/8*denom(1/4*
      s12^2)*mt^6*mh^2*s12*s24 + 1/8*denom(1/4*s12^2)*mt^6*mh^2*s12*s23 + 3/8*
      denom(1/4*s12^2)*mt^6*mh^2*s12*s14 + 1/8*denom(1/4*s12^2)*mt^6*mh^2*s12*
      s13 + 5/8*denom(1/4*s12^2)*mt^8*s24^2 + 3/4*denom(1/4*s12^2)*mt^8*s23*
      s24 + 1/8*denom(1/4*s12^2)*mt^8*s23^2 + 7/4*denom(1/4*s12^2)*mt^8*s14*
      s24 + 5/4*denom(1/4*s12^2)*mt^8*s14*s23 + 5/8*denom(1/4*s12^2)*mt^8*
      s14^2 + 5/4*denom(1/4*s12^2)*mt^8*s13*s24 + 1/4*denom(1/4*s12^2)*mt^8*
      s13*s23 + 3/4*denom(1/4*s12^2)*mt^8*s13*s14 + 1/8*denom(1/4*s12^2)*mt^8*
      s13^2 + 7/4*denom(1/4*s12^2)*mt^8*s12*s24 + 3/4*denom(1/4*s12^2)*mt^8*
      s12*s23 + 7/4*denom(1/4*s12^2)*mt^8*s12*s14 + 3/4*denom(1/4*s12^2)*mt^8*
      s12*s13 + 1/4*denom(1/4*s12^2)*mt^8*s12^2 - 1/4*denom(1/4*s12^2)*mt^8*
      mh^2*s12 - denom(1/4*s12^2)*mt^10*s24 - 1/2*denom(1/4*s12^2)*mt^10*s23
       - denom(1/4*s12^2)*mt^10*s14 - 1/2*denom(1/4*s12^2)*mt^10*s13 - denom(1/
      4*s12^2)*mt^10*s12 + 1/2*denom(1/4*s12^2)*mt^12;
 
 .sort
id KMatrix(10,9) =   - mt^2*s23*s24^2 - mt^2*s23^2*s24 - mt^2*s14*s23*s24 - 
      mt^2*s13*s23*s24 - mt^2*s12*s23*s24 + mt^2*mh^2*s23*s24 + mt^4*s24^2 + 4
      *mt^4*s23*s24 + mt^4*s23^2 + mt^4*s14*s24 + mt^4*s14*s23 + mt^4*s13*s24
       + mt^4*s13*s23 + mt^4*s12*s24 + mt^4*s12*s23 - mt^4*mh^2*s24 - mt^4*
      mh^2*s23 - 3*mt^6*s24 - 3*mt^6*s23 - mt^6*s14 - mt^6*s13 - mt^6*s12 + 
      mt^6*mh^2 + 2*mt^8 + 1/2*denom(1/2*s12)*s13*s23^2*s24^2 + 1/2*denom(1/2*
      s12)*s13*s23^3*s24 + 1/2*denom(1/2*s12)*s13*s14*s23^2*s24 + 1/2*denom(1/
      2*s12)*s13^2*s23^2*s24 + 1/2*denom(1/2*s12)*s12*s13*s23^2*s24 - 1/2*
      denom(1/2*s12)*mh^2*s13*s23^2*s24 - 1/2*denom(1/2*s12)*mt^2*s23^2*s24^2
       - 1/2*denom(1/2*s12)*mt^2*s23^3*s24 - denom(1/2*s12)*mt^2*s14*s23^2*s24
       - 3/2*denom(1/2*s12)*mt^2*s13*s23*s24^2 - 3*denom(1/2*s12)*mt^2*s13*
      s23^2*s24 - 1/2*denom(1/2*s12)*mt^2*s13*s23^3 - denom(1/2*s12)*mt^2*s13*
      s14*s23*s24 - 1/2*denom(1/2*s12)*mt^2*s13*s14*s23^2 - denom(1/2*s12)*
      mt^2*s13^2*s23*s24 - 1/2*denom(1/2*s12)*mt^2*s13^2*s23^2 - 1/2*denom(1/2
      *s12)*mt^2*s12*s23^2*s24 - denom(1/2*s12)*mt^2*s12*s13*s23*s24 - 1/2*
      denom(1/2*s12)*mt^2*s12*s13*s23^2 + 1/2*denom(1/2*s12)*mt^2*mh^2*s23^2*
      s24 + denom(1/2*s12)*mt^2*mh^2*s13*s23*s24 + 1/2*denom(1/2*s12)*mt^2*
      mh^2*s13*s23^2 + 3/2*denom(1/2*s12)*mt^4*s23*s24^2 + 3*denom(1/2*s12)*
      mt^4*s23^2*s24 + 1/2*denom(1/2*s12)*mt^4*s23^3 + 2*denom(1/2*s12)*mt^4*
      s14*s23*s24 + denom(1/2*s12)*mt^4*s14*s23^2 + denom(1/2*s12)*mt^4*s13*
      s24^2 + 11/2*denom(1/2*s12)*mt^4*s13*s23*s24 + 5/2*denom(1/2*s12)*mt^4*
      s13*s23^2 + 1/2*denom(1/2*s12)*mt^4*s13*s14*s24 + denom(1/2*s12)*mt^4*
      s13*s14*s23 + 1/2*denom(1/2*s12)*mt^4*s13^2*s24 + denom(1/2*s12)*mt^4*
      s13^2*s23 + denom(1/2*s12)*mt^4*s12*s23*s24 + 1/2*denom(1/2*s12)*mt^4*
      s12*s23^2 + 1/2*denom(1/2*s12)*mt^4*s12*s13*s24 + denom(1/2*s12)*mt^4*
      s12*s13*s23 - denom(1/2*s12)*mt^4*mh^2*s23*s24 - 1/2*denom(1/2*s12)*mt^4
      *mh^2*s23^2 - 1/2*denom(1/2*s12)*mt^4*mh^2*s13*s24 - denom(1/2*s12)*mt^4
      *mh^2*s13*s23 - denom(1/2*s12)*mt^6*s24^2 - 11/2*denom(1/2*s12)*mt^6*s23
      *s24 - 5/2*denom(1/2*s12)*mt^6*s23^2 - denom(1/2*s12)*mt^6*s14*s24 - 2*
      denom(1/2*s12)*mt^6*s14*s23 - 3*denom(1/2*s12)*mt^6*s13*s24 - 4*denom(1/
      2*s12)*mt^6*s13*s23 - 1/2*denom(1/2*s12)*mt^6*s13*s14 - 1/2*denom(1/2*
      s12)*mt^6*s13^2 - 1/2*denom(1/2*s12)*mt^6*s12*s24 - denom(1/2*s12)*mt^6*
      s12*s23 - 1/2*denom(1/2*s12)*mt^6*s12*s13 + 1/2*denom(1/2*s12)*mt^6*mh^2
      *s24 + denom(1/2*s12)*mt^6*mh^2*s23 + 1/2*denom(1/2*s12)*mt^6*mh^2*s13
       + 3*denom(1/2*s12)*mt^8*s24 + 4*denom(1/2*s12)*mt^8*s23 + denom(1/2*s12
      )*mt^8*s14 + 2*denom(1/2*s12)*mt^8*s13 + 1/2*denom(1/2*s12)*mt^8*s12 - 1/
      2*denom(1/2*s12)*mt^8*mh^2 - 2*denom(1/2*s12)*mt^10 + 1/4*denom(1/4*
      s12^2)*s13*s14*s23^3*s24 + 1/4*denom(1/4*s12^2)*s13^2*s23^2*s24^2 - 1/4*
      denom(1/4*s12^2)*mt^2*s14*s23^3*s24 - 1/2*denom(1/4*s12^2)*mt^2*s13*
      s23^2*s24^2 - 1/4*denom(1/4*s12^2)*mt^2*s13*s23^3*s24 - 3/4*denom(1/4*
      s12^2)*mt^2*s13*s14*s23^2*s24 - 1/4*denom(1/4*s12^2)*mt^2*s13*s14*s23^3
       - 1/2*denom(1/4*s12^2)*mt^2*s13^2*s23*s24^2 - 1/2*denom(1/4*s12^2)*mt^2
      *s13^2*s23^2*s24 + 1/4*denom(1/4*s12^2)*mt^4*s23^2*s24^2 + 1/4*denom(1/4
      *s12^2)*mt^4*s23^3*s24 + 3/4*denom(1/4*s12^2)*mt^4*s14*s23^2*s24 + 1/4*
      denom(1/4*s12^2)*mt^4*s14*s23^3 + denom(1/4*s12^2)*mt^4*s13*s23*s24^2 + 
      7/4*denom(1/4*s12^2)*mt^4*s13*s23^2*s24 + 1/4*denom(1/4*s12^2)*mt^4*s13*
      s23^3 + 3/4*denom(1/4*s12^2)*mt^4*s13*s14*s23*s24 + 3/4*denom(1/4*s12^2)
      *mt^4*s13*s14*s23^2 + 1/4*denom(1/4*s12^2)*mt^4*s13^2*s24^2 + denom(1/4*
      s12^2)*mt^4*s13^2*s23*s24 + 1/4*denom(1/4*s12^2)*mt^4*s13^2*s23^2 - 1/2*
      denom(1/4*s12^2)*mt^6*s23*s24^2 - 5/4*denom(1/4*s12^2)*mt^6*s23^2*s24 - 
      1/4*denom(1/4*s12^2)*mt^6*s23^3 - 3/4*denom(1/4*s12^2)*mt^6*s14*s23*s24
       - 3/4*denom(1/4*s12^2)*mt^6*s14*s23^2 - 1/2*denom(1/4*s12^2)*mt^6*s13*
      s24^2 - 11/4*denom(1/4*s12^2)*mt^6*s13*s23*s24 - 5/4*denom(1/4*s12^2)*
      mt^6*s13*s23^2 - 1/4*denom(1/4*s12^2)*mt^6*s13*s14*s24 - 3/4*denom(1/4*
      s12^2)*mt^6*s13*s14*s23 - 1/2*denom(1/4*s12^2)*mt^6*s13^2*s24 - 1/2*
      denom(1/4*s12^2)*mt^6*s13^2*s23 + 1/4*denom(1/4*s12^2)*mt^8*s24^2 + 7/4*
      denom(1/4*s12^2)*mt^8*s23*s24 + denom(1/4*s12^2)*mt^8*s23^2 + 1/4*denom(
      1/4*s12^2)*mt^8*s14*s24 + 3/4*denom(1/4*s12^2)*mt^8*s14*s23 + 5/4*denom(
      1/4*s12^2)*mt^8*s13*s24 + 7/4*denom(1/4*s12^2)*mt^8*s13*s23 + 1/4*denom(
      1/4*s12^2)*mt^8*s13*s14 + 1/4*denom(1/4*s12^2)*mt^8*s13^2 - 3/4*denom(1/
      4*s12^2)*mt^10*s24 - 5/4*denom(1/4*s12^2)*mt^10*s23 - 1/4*denom(1/4*
      s12^2)*mt^10*s14 - 3/4*denom(1/4*s12^2)*mt^10*s13 + 1/2*denom(1/4*s12^2)
      *mt^12;
 
 .sort
id KMatrix(10,10) =  2*mt^4*s23*s24 - 2*mt^6*s24 - 2*mt^6*s23 + 2*mt^8 - 
      denom(1/2*s12)*mt^2*s14*s23*s24^2 - denom(1/2*s12)*mt^2*s13*s23^2*s24 + 
      denom(1/2*s12)*mt^4*s23*s24^2 + denom(1/2*s12)*mt^4*s23^2*s24 + denom(1/
      2*s12)*mt^4*s14*s24^2 + 2*denom(1/2*s12)*mt^4*s14*s23*s24 + 2*denom(1/2*
      s12)*mt^4*s13*s23*s24 + denom(1/2*s12)*mt^4*s13*s23^2 - denom(1/2*s12)*
      mt^6*s24^2 - 4*denom(1/2*s12)*mt^6*s23*s24 - denom(1/2*s12)*mt^6*s23^2
       - 2*denom(1/2*s12)*mt^6*s14*s24 - denom(1/2*s12)*mt^6*s14*s23 - denom(1/
      2*s12)*mt^6*s13*s24 - 2*denom(1/2*s12)*mt^6*s13*s23 + 3*denom(1/2*s12)*
      mt^8*s24 + 3*denom(1/2*s12)*mt^8*s23 + denom(1/2*s12)*mt^8*s14 + denom(1/
      2*s12)*mt^8*s13 - 2*denom(1/2*s12)*mt^10 + 1/2*denom(1/4*s12^2)*s13*s14*
      s23^2*s24^2 - 1/2*denom(1/4*s12^2)*mt^2*s14*s23^2*s24^2 - 1/2*denom(1/4*
      s12^2)*mt^2*s13*s23^2*s24^2 - denom(1/4*s12^2)*mt^2*s13*s14*s23*s24^2 - 
      denom(1/4*s12^2)*mt^2*s13*s14*s23^2*s24 + 1/2*denom(1/4*s12^2)*mt^4*
      s23^2*s24^2 + denom(1/4*s12^2)*mt^4*s14*s23*s24^2 + denom(1/4*s12^2)*
      mt^4*s14*s23^2*s24 + denom(1/4*s12^2)*mt^4*s13*s23*s24^2 + denom(1/4*
      s12^2)*mt^4*s13*s23^2*s24 + 1/2*denom(1/4*s12^2)*mt^4*s13*s14*s24^2 + 2*
      denom(1/4*s12^2)*mt^4*s13*s14*s23*s24 + 1/2*denom(1/4*s12^2)*mt^4*s13*
      s14*s23^2 - denom(1/4*s12^2)*mt^6*s23*s24^2 - denom(1/4*s12^2)*mt^6*
      s23^2*s24 - 1/2*denom(1/4*s12^2)*mt^6*s14*s24^2 - 2*denom(1/4*s12^2)*
      mt^6*s14*s23*s24 - 1/2*denom(1/4*s12^2)*mt^6*s14*s23^2 - 1/2*denom(1/4*
      s12^2)*mt^6*s13*s24^2 - 2*denom(1/4*s12^2)*mt^6*s13*s23*s24 - 1/2*denom(
      1/4*s12^2)*mt^6*s13*s23^2 - denom(1/4*s12^2)*mt^6*s13*s14*s24 - denom(1/
      4*s12^2)*mt^6*s13*s14*s23 + 1/2*denom(1/4*s12^2)*mt^8*s24^2 + 2*denom(1/
      4*s12^2)*mt^8*s23*s24 + 1/2*denom(1/4*s12^2)*mt^8*s23^2 + denom(1/4*
      s12^2)*mt^8*s14*s24 + denom(1/4*s12^2)*mt^8*s14*s23 + denom(1/4*s12^2)*
      mt^8*s13*s24 + denom(1/4*s12^2)*mt^8*s13*s23 + 1/2*denom(1/4*s12^2)*mt^8
      *s13*s14 - denom(1/4*s12^2)*mt^10*s24 - denom(1/4*s12^2)*mt^10*s23 - 1/2
      *denom(1/4*s12^2)*mt^10*s14 - 1/2*denom(1/4*s12^2)*mt^10*s13 + 1/2*
      denom(1/4*s12^2)*mt^12;
 
 .sort
id KMatrix(10,11) =  1/2*s23*s24^3 + s23^2*s24^2 + 1/2*s23^3*s24 + s14*s23*
      s24^2 + s14*s23^2*s24 + 1/2*s14^2*s23*s24 + s13*s23*s24^2 + s13*s23^2*
      s24 + s13*s14*s23*s24 + 1/2*s13^2*s23*s24 + s12*s23*s24^2 + s12*s23^2*
      s24 + s12*s14*s23*s24 + s12*s13*s23*s24 + 1/2*s12^2*s23*s24 - mh^2*s23*
      s24^2 - mh^2*s23^2*s24 - mh^2*s14*s23*s24 - mh^2*s13*s23*s24 - mh^2*s12*
      s23*s24 + 1/2*mh^4*s23*s24 - 1/2*mt^2*s24^3 - 7/2*mt^2*s23*s24^2 - 7/2*
      mt^2*s23^2*s24 - 1/2*mt^2*s23^3 - mt^2*s14*s24^2 - 4*mt^2*s14*s23*s24 - 
      mt^2*s14*s23^2 - 1/2*mt^2*s14^2*s24 - 1/2*mt^2*s14^2*s23 - mt^2*s13*
      s24^2 - 4*mt^2*s13*s23*s24 - mt^2*s13*s23^2 - mt^2*s13*s14*s24 - mt^2*
      s13*s14*s23 - 1/2*mt^2*s13^2*s24 - 1/2*mt^2*s13^2*s23 - mt^2*s12*s24^2
       - 4*mt^2*s12*s23*s24 - mt^2*s12*s23^2 - mt^2*s12*s14*s24 - mt^2*s12*s14
      *s23 - mt^2*s12*s13*s24 - mt^2*s12*s13*s23 - 1/2*mt^2*s12^2*s24 - 1/2*
      mt^2*s12^2*s23 + mt^2*mh^2*s24^2 + 4*mt^2*mh^2*s23*s24 + mt^2*mh^2*s23^2
       + mt^2*mh^2*s14*s24 + mt^2*mh^2*s14*s23 + mt^2*mh^2*s13*s24 + mt^2*mh^2
      *s13*s23 + mt^2*mh^2*s12*s24 + mt^2*mh^2*s12*s23 - 1/2*mt^2*mh^4*s24 - 1/
      2*mt^2*mh^4*s23 + 5/2*mt^4*s24^2 + 7*mt^4*s23*s24 + 5/2*mt^4*s23^2 + 3*
      mt^4*s14*s24 + 3*mt^4*s14*s23 + 1/2*mt^4*s14^2 + 3*mt^4*s13*s24 + 3*mt^4
      *s13*s23 + mt^4*s13*s14 + 1/2*mt^4*s13^2 + 3*mt^4*s12*s24 + 3*mt^4*s12*
      s23 + mt^4*s12*s14 + mt^4*s12*s13 + 1/2*mt^4*s12^2 - 3*mt^4*mh^2*s24 - 3
      *mt^4*mh^2*s23 - mt^4*mh^2*s14 - mt^4*mh^2*s13 - mt^4*mh^2*s12 + 1/2*
      mt^4*mh^4 - 4*mt^6*s24 - 4*mt^6*s23 - 2*mt^6*s14 - 2*mt^6*s13 - 2*mt^6*
      s12 + 2*mt^6*mh^2 + 2*mt^8 + 1/2*denom(1/2*s12)*s14*s23^2*s24^2 + 1/2*
      denom(1/2*s12)*s14*s23^3*s24 + 1/2*denom(1/2*s12)*s14^2*s23^2*s24 + 1/2*
      denom(1/2*s12)*s13*s23*s24^3 + 1/2*denom(1/2*s12)*s13*s23^2*s24^2 + 1/2*
      denom(1/2*s12)*s13*s14*s23*s24^2 + 1/2*denom(1/2*s12)*s13*s14*s23^2*s24
       + 1/2*denom(1/2*s12)*s13^2*s23*s24^2 + 1/2*denom(1/2*s12)*s12*s14*s23^2
      *s24 + 1/2*denom(1/2*s12)*s12*s13*s23*s24^2 - 1/2*denom(1/2*s12)*mh^2*
      s14*s23^2*s24 - 1/2*denom(1/2*s12)*mh^2*s13*s23*s24^2 - 1/2*denom(1/2*
      s12)*mt^2*s23*s24^3 - denom(1/2*s12)*mt^2*s23^2*s24^2 - 1/2*denom(1/2*
      s12)*mt^2*s23^3*s24 - 3/2*denom(1/2*s12)*mt^2*s14*s23*s24^2 - 3*denom(1/
      2*s12)*mt^2*s14*s23^2*s24 - 1/2*denom(1/2*s12)*mt^2*s14*s23^3 - denom(1/
      2*s12)*mt^2*s14^2*s23*s24 - 1/2*denom(1/2*s12)*mt^2*s14^2*s23^2 - 1/2*
      denom(1/2*s12)*mt^2*s13*s24^3 - 3*denom(1/2*s12)*mt^2*s13*s23*s24^2 - 3/
      2*denom(1/2*s12)*mt^2*s13*s23^2*s24 - 1/2*denom(1/2*s12)*mt^2*s13*s14*
      s24^2 - 2*denom(1/2*s12)*mt^2*s13*s14*s23*s24 - 1/2*denom(1/2*s12)*mt^2*
      s13*s14*s23^2 - 1/2*denom(1/2*s12)*mt^2*s13^2*s24^2 - denom(1/2*s12)*
      mt^2*s13^2*s23*s24 - 1/2*denom(1/2*s12)*mt^2*s12*s23*s24^2 - 1/2*denom(1/
      2*s12)*mt^2*s12*s23^2*s24 - denom(1/2*s12)*mt^2*s12*s14*s23*s24 - 1/2*
      denom(1/2*s12)*mt^2*s12*s14*s23^2 - 1/2*denom(1/2*s12)*mt^2*s12*s13*
      s24^2 - denom(1/2*s12)*mt^2*s12*s13*s23*s24 + 1/2*denom(1/2*s12)*mt^2*
      mh^2*s23*s24^2 + 1/2*denom(1/2*s12)*mt^2*mh^2*s23^2*s24 + denom(1/2*s12)
      *mt^2*mh^2*s14*s23*s24 + 1/2*denom(1/2*s12)*mt^2*mh^2*s14*s23^2 + 1/2*
      denom(1/2*s12)*mt^2*mh^2*s13*s24^2 + denom(1/2*s12)*mt^2*mh^2*s13*s23*
      s24 + 1/2*denom(1/2*s12)*mt^4*s24^3 + 7/2*denom(1/2*s12)*mt^4*s23*s24^2
       + 7/2*denom(1/2*s12)*mt^4*s23^2*s24 + 1/2*denom(1/2*s12)*mt^4*s23^3 + 
      denom(1/2*s12)*mt^4*s14*s24^2 + 11/2*denom(1/2*s12)*mt^4*s14*s23*s24 + 5/
      2*denom(1/2*s12)*mt^4*s14*s23^2 + 1/2*denom(1/2*s12)*mt^4*s14^2*s24 + 
      denom(1/2*s12)*mt^4*s14^2*s23 + 5/2*denom(1/2*s12)*mt^4*s13*s24^2 + 11/2
      *denom(1/2*s12)*mt^4*s13*s23*s24 + denom(1/2*s12)*mt^4*s13*s23^2 + 3/2*
      denom(1/2*s12)*mt^4*s13*s14*s24 + 3/2*denom(1/2*s12)*mt^4*s13*s14*s23 + 
      denom(1/2*s12)*mt^4*s13^2*s24 + 1/2*denom(1/2*s12)*mt^4*s13^2*s23 + 1/2*
      denom(1/2*s12)*mt^4*s12*s24^2 + 2*denom(1/2*s12)*mt^4*s12*s23*s24 + 1/2*
      denom(1/2*s12)*mt^4*s12*s23^2 + 1/2*denom(1/2*s12)*mt^4*s12*s14*s24 + 
      denom(1/2*s12)*mt^4*s12*s14*s23 + denom(1/2*s12)*mt^4*s12*s13*s24 + 1/2*
      denom(1/2*s12)*mt^4*s12*s13*s23 - 1/2*denom(1/2*s12)*mt^4*mh^2*s24^2 - 2
      *denom(1/2*s12)*mt^4*mh^2*s23*s24 - 1/2*denom(1/2*s12)*mt^4*mh^2*s23^2
       - 1/2*denom(1/2*s12)*mt^4*mh^2*s14*s24 - denom(1/2*s12)*mt^4*mh^2*s14*
      s23 - denom(1/2*s12)*mt^4*mh^2*s13*s24 - 1/2*denom(1/2*s12)*mt^4*mh^2*
      s13*s23 - 5/2*denom(1/2*s12)*mt^6*s24^2 - 7*denom(1/2*s12)*mt^6*s23*s24
       - 5/2*denom(1/2*s12)*mt^6*s23^2 - 3*denom(1/2*s12)*mt^6*s14*s24 - 4*
      denom(1/2*s12)*mt^6*s14*s23 - 1/2*denom(1/2*s12)*mt^6*s14^2 - 4*denom(1/
      2*s12)*mt^6*s13*s24 - 3*denom(1/2*s12)*mt^6*s13*s23 - denom(1/2*s12)*
      mt^6*s13*s14 - 1/2*denom(1/2*s12)*mt^6*s13^2 - 3/2*denom(1/2*s12)*mt^6*
      s12*s24 - 3/2*denom(1/2*s12)*mt^6*s12*s23 - 1/2*denom(1/2*s12)*mt^6*s12*
      s14 - 1/2*denom(1/2*s12)*mt^6*s12*s13 + 3/2*denom(1/2*s12)*mt^6*mh^2*s24
       + 3/2*denom(1/2*s12)*mt^6*mh^2*s23 + 1/2*denom(1/2*s12)*mt^6*mh^2*s14
       + 1/2*denom(1/2*s12)*mt^6*mh^2*s13 + 4*denom(1/2*s12)*mt^8*s24 + 4*
      denom(1/2*s12)*mt^8*s23 + 2*denom(1/2*s12)*mt^8*s14 + 2*denom(1/2*s12)*
      mt^8*s13 + denom(1/2*s12)*mt^8*s12 - denom(1/2*s12)*mt^8*mh^2 - 2*denom(
      1/2*s12)*mt^10 + 1/8*denom(1/4*s12^2)*s14^2*s23^3*s24 + 1/4*denom(1/4*
      s12^2)*s13*s14*s23^2*s24^2 + 1/8*denom(1/4*s12^2)*s13^2*s23*s24^3 - 1/4*
      denom(1/4*s12^2)*mt^2*s14*s23^2*s24^2 - 1/4*denom(1/4*s12^2)*mt^2*s14*
      s23^3*s24 - 3/8*denom(1/4*s12^2)*mt^2*s14^2*s23^2*s24 - 1/8*denom(1/4*
      s12^2)*mt^2*s14^2*s23^3 - 1/4*denom(1/4*s12^2)*mt^2*s13*s23*s24^3 - 1/4*
      denom(1/4*s12^2)*mt^2*s13*s23^2*s24^2 - 1/2*denom(1/4*s12^2)*mt^2*s13*
      s14*s23*s24^2 - 1/2*denom(1/4*s12^2)*mt^2*s13*s14*s23^2*s24 - 1/8*denom(
      1/4*s12^2)*mt^2*s13^2*s24^3 - 3/8*denom(1/4*s12^2)*mt^2*s13^2*s23*s24^2
       + 1/8*denom(1/4*s12^2)*mt^4*s23*s24^3 + 1/4*denom(1/4*s12^2)*mt^4*s23^2
      *s24^2 + 1/8*denom(1/4*s12^2)*mt^4*s23^3*s24 + 1/2*denom(1/4*s12^2)*mt^4
      *s14*s23*s24^2 + 5/4*denom(1/4*s12^2)*mt^4*s14*s23^2*s24 + 1/4*denom(1/4
      *s12^2)*mt^4*s14*s23^3 + 3/8*denom(1/4*s12^2)*mt^4*s14^2*s23*s24 + 3/8*
      denom(1/4*s12^2)*mt^4*s14^2*s23^2 + 1/4*denom(1/4*s12^2)*mt^4*s13*s24^3
       + 5/4*denom(1/4*s12^2)*mt^4*s13*s23*s24^2 + 1/2*denom(1/4*s12^2)*mt^4*
      s13*s23^2*s24 + 1/4*denom(1/4*s12^2)*mt^4*s13*s14*s24^2 + denom(1/4*
      s12^2)*mt^4*s13*s14*s23*s24 + 1/4*denom(1/4*s12^2)*mt^4*s13*s14*s23^2 + 
      3/8*denom(1/4*s12^2)*mt^4*s13^2*s24^2 + 3/8*denom(1/4*s12^2)*mt^4*s13^2*
      s23*s24 - 1/8*denom(1/4*s12^2)*mt^6*s24^3 - 7/8*denom(1/4*s12^2)*mt^6*
      s23*s24^2 - 7/8*denom(1/4*s12^2)*mt^6*s23^2*s24 - 1/8*denom(1/4*s12^2)*
      mt^6*s23^3 - 1/4*denom(1/4*s12^2)*mt^6*s14*s24^2 - 7/4*denom(1/4*s12^2)*
      mt^6*s14*s23*s24 - denom(1/4*s12^2)*mt^6*s14*s23^2 - 1/8*denom(1/4*s12^2
      )*mt^6*s14^2*s24 - 3/8*denom(1/4*s12^2)*mt^6*s14^2*s23 - denom(1/4*s12^2
      )*mt^6*s13*s24^2 - 7/4*denom(1/4*s12^2)*mt^6*s13*s23*s24 - 1/4*denom(1/4
      *s12^2)*mt^6*s13*s23^2 - 1/2*denom(1/4*s12^2)*mt^6*s13*s14*s24 - 1/2*
      denom(1/4*s12^2)*mt^6*s13*s14*s23 - 3/8*denom(1/4*s12^2)*mt^6*s13^2*s24
       - 1/8*denom(1/4*s12^2)*mt^6*s13^2*s23 + 5/8*denom(1/4*s12^2)*mt^8*s24^2
       + 7/4*denom(1/4*s12^2)*mt^8*s23*s24 + 5/8*denom(1/4*s12^2)*mt^8*s23^2
       + 3/4*denom(1/4*s12^2)*mt^8*s14*s24 + 5/4*denom(1/4*s12^2)*mt^8*s14*s23
       + 1/8*denom(1/4*s12^2)*mt^8*s14^2 + 5/4*denom(1/4*s12^2)*mt^8*s13*s24
       + 3/4*denom(1/4*s12^2)*mt^8*s13*s23 + 1/4*denom(1/4*s12^2)*mt^8*s13*s14
       + 1/8*denom(1/4*s12^2)*mt^8*s13^2 - denom(1/4*s12^2)*mt^10*s24 - denom(
      1/4*s12^2)*mt^10*s23 - 1/2*denom(1/4*s12^2)*mt^10*s14 - 1/2*denom(1/4*
      s12^2)*mt^10*s13 + 1/2*denom(1/4*s12^2)*mt^12;
 
 .sort
id KMatrix(10,12) =   - mt^2*s23*s24^2 - mt^2*s23^2*s24 - mt^2*s14*s23*s24 - 
      mt^2*s13*s23*s24 - mt^2*s12*s23*s24 + mt^2*mh^2*s23*s24 + mt^4*s24^2 + 4
      *mt^4*s23*s24 + mt^4*s23^2 + mt^4*s14*s24 + mt^4*s14*s23 + mt^4*s13*s24
       + mt^4*s13*s23 + mt^4*s12*s24 + mt^4*s12*s23 - mt^4*mh^2*s24 - mt^4*
      mh^2*s23 - 3*mt^6*s24 - 3*mt^6*s23 - mt^6*s14 - mt^6*s13 - mt^6*s12 + 
      mt^6*mh^2 + 2*mt^8 + 1/2*denom(1/2*s12)*s14*s23*s24^3 + 1/2*denom(1/2*
      s12)*s14*s23^2*s24^2 + 1/2*denom(1/2*s12)*s14^2*s23*s24^2 + 1/2*denom(1/
      2*s12)*s13*s14*s23*s24^2 + 1/2*denom(1/2*s12)*s12*s14*s23*s24^2 - 1/2*
      denom(1/2*s12)*mh^2*s14*s23*s24^2 - 1/2*denom(1/2*s12)*mt^2*s23*s24^3 - 
      1/2*denom(1/2*s12)*mt^2*s23^2*s24^2 - 1/2*denom(1/2*s12)*mt^2*s14*s24^3
       - 3*denom(1/2*s12)*mt^2*s14*s23*s24^2 - 3/2*denom(1/2*s12)*mt^2*s14*
      s23^2*s24 - 1/2*denom(1/2*s12)*mt^2*s14^2*s24^2 - denom(1/2*s12)*mt^2*
      s14^2*s23*s24 - denom(1/2*s12)*mt^2*s13*s23*s24^2 - 1/2*denom(1/2*s12)*
      mt^2*s13*s14*s24^2 - denom(1/2*s12)*mt^2*s13*s14*s23*s24 - 1/2*denom(1/2
      *s12)*mt^2*s12*s23*s24^2 - 1/2*denom(1/2*s12)*mt^2*s12*s14*s24^2 - 
      denom(1/2*s12)*mt^2*s12*s14*s23*s24 + 1/2*denom(1/2*s12)*mt^2*mh^2*s23*
      s24^2 + 1/2*denom(1/2*s12)*mt^2*mh^2*s14*s24^2 + denom(1/2*s12)*mt^2*
      mh^2*s14*s23*s24 + 1/2*denom(1/2*s12)*mt^4*s24^3 + 3*denom(1/2*s12)*mt^4
      *s23*s24^2 + 3/2*denom(1/2*s12)*mt^4*s23^2*s24 + 5/2*denom(1/2*s12)*mt^4
      *s14*s24^2 + 11/2*denom(1/2*s12)*mt^4*s14*s23*s24 + denom(1/2*s12)*mt^4*
      s14*s23^2 + denom(1/2*s12)*mt^4*s14^2*s24 + 1/2*denom(1/2*s12)*mt^4*
      s14^2*s23 + denom(1/2*s12)*mt^4*s13*s24^2 + 2*denom(1/2*s12)*mt^4*s13*
      s23*s24 + denom(1/2*s12)*mt^4*s13*s14*s24 + 1/2*denom(1/2*s12)*mt^4*s13*
      s14*s23 + 1/2*denom(1/2*s12)*mt^4*s12*s24^2 + denom(1/2*s12)*mt^4*s12*
      s23*s24 + denom(1/2*s12)*mt^4*s12*s14*s24 + 1/2*denom(1/2*s12)*mt^4*s12*
      s14*s23 - 1/2*denom(1/2*s12)*mt^4*mh^2*s24^2 - denom(1/2*s12)*mt^4*mh^2*
      s23*s24 - denom(1/2*s12)*mt^4*mh^2*s14*s24 - 1/2*denom(1/2*s12)*mt^4*
      mh^2*s14*s23 - 5/2*denom(1/2*s12)*mt^6*s24^2 - 11/2*denom(1/2*s12)*mt^6*
      s23*s24 - denom(1/2*s12)*mt^6*s23^2 - 4*denom(1/2*s12)*mt^6*s14*s24 - 3*
      denom(1/2*s12)*mt^6*s14*s23 - 1/2*denom(1/2*s12)*mt^6*s14^2 - 2*denom(1/
      2*s12)*mt^6*s13*s24 - denom(1/2*s12)*mt^6*s13*s23 - 1/2*denom(1/2*s12)*
      mt^6*s13*s14 - denom(1/2*s12)*mt^6*s12*s24 - 1/2*denom(1/2*s12)*mt^6*s12
      *s23 - 1/2*denom(1/2*s12)*mt^6*s12*s14 + denom(1/2*s12)*mt^6*mh^2*s24 + 
      1/2*denom(1/2*s12)*mt^6*mh^2*s23 + 1/2*denom(1/2*s12)*mt^6*mh^2*s14 + 4*
      denom(1/2*s12)*mt^8*s24 + 3*denom(1/2*s12)*mt^8*s23 + 2*denom(1/2*s12)*
      mt^8*s14 + denom(1/2*s12)*mt^8*s13 + 1/2*denom(1/2*s12)*mt^8*s12 - 1/2*
      denom(1/2*s12)*mt^8*mh^2 - 2*denom(1/2*s12)*mt^10 + 1/4*denom(1/4*s12^2)
      *s14^2*s23^2*s24^2 + 1/4*denom(1/4*s12^2)*s13*s14*s23*s24^3 - 1/4*denom(
      1/4*s12^2)*mt^2*s14*s23*s24^3 - 1/2*denom(1/4*s12^2)*mt^2*s14*s23^2*
      s24^2 - 1/2*denom(1/4*s12^2)*mt^2*s14^2*s23*s24^2 - 1/2*denom(1/4*s12^2)
      *mt^2*s14^2*s23^2*s24 - 1/4*denom(1/4*s12^2)*mt^2*s13*s23*s24^3 - 1/4*
      denom(1/4*s12^2)*mt^2*s13*s14*s24^3 - 3/4*denom(1/4*s12^2)*mt^2*s13*s14*
      s23*s24^2 + 1/4*denom(1/4*s12^2)*mt^4*s23*s24^3 + 1/4*denom(1/4*s12^2)*
      mt^4*s23^2*s24^2 + 1/4*denom(1/4*s12^2)*mt^4*s14*s24^3 + 7/4*denom(1/4*
      s12^2)*mt^4*s14*s23*s24^2 + denom(1/4*s12^2)*mt^4*s14*s23^2*s24 + 1/4*
      denom(1/4*s12^2)*mt^4*s14^2*s24^2 + denom(1/4*s12^2)*mt^4*s14^2*s23*s24
       + 1/4*denom(1/4*s12^2)*mt^4*s14^2*s23^2 + 1/4*denom(1/4*s12^2)*mt^4*s13
      *s24^3 + 3/4*denom(1/4*s12^2)*mt^4*s13*s23*s24^2 + 3/4*denom(1/4*s12^2)*
      mt^4*s13*s14*s24^2 + 3/4*denom(1/4*s12^2)*mt^4*s13*s14*s23*s24 - 1/4*
      denom(1/4*s12^2)*mt^6*s24^3 - 5/4*denom(1/4*s12^2)*mt^6*s23*s24^2 - 1/2*
      denom(1/4*s12^2)*mt^6*s23^2*s24 - 5/4*denom(1/4*s12^2)*mt^6*s14*s24^2 - 
      11/4*denom(1/4*s12^2)*mt^6*s14*s23*s24 - 1/2*denom(1/4*s12^2)*mt^6*s14*
      s23^2 - 1/2*denom(1/4*s12^2)*mt^6*s14^2*s24 - 1/2*denom(1/4*s12^2)*mt^6*
      s14^2*s23 - 3/4*denom(1/4*s12^2)*mt^6*s13*s24^2 - 3/4*denom(1/4*s12^2)*
      mt^6*s13*s23*s24 - 3/4*denom(1/4*s12^2)*mt^6*s13*s14*s24 - 1/4*denom(1/4
      *s12^2)*mt^6*s13*s14*s23 + denom(1/4*s12^2)*mt^8*s24^2 + 7/4*denom(1/4*
      s12^2)*mt^8*s23*s24 + 1/4*denom(1/4*s12^2)*mt^8*s23^2 + 7/4*denom(1/4*
      s12^2)*mt^8*s14*s24 + 5/4*denom(1/4*s12^2)*mt^8*s14*s23 + 1/4*denom(1/4*
      s12^2)*mt^8*s14^2 + 3/4*denom(1/4*s12^2)*mt^8*s13*s24 + 1/4*denom(1/4*
      s12^2)*mt^8*s13*s23 + 1/4*denom(1/4*s12^2)*mt^8*s13*s14 - 5/4*denom(1/4*
      s12^2)*mt^10*s24 - 3/4*denom(1/4*s12^2)*mt^10*s23 - 3/4*denom(1/4*s12^2)
      *mt^10*s14 - 1/4*denom(1/4*s12^2)*mt^10*s13 + 1/2*denom(1/4*s12^2)*mt^12
      ;
 
 .sort
id KMatrix(10,13) =  mt^3*s12*s23*s24 + mt^3*s12*s23^2 + mt^3*s12*s14*s23 + 
      mt^3*s12*s13*s23 + mt^3*s12^2*s23 - mt^3*mh^2*s12*s23 - mt^5*s12*s24 - 3
      *mt^5*s12*s23 - mt^5*s12*s14 - mt^5*s12*s13 - mt^5*s12^2 + mt^5*mh^2*s12
       + 2*mt^7*s12 - 1/2*denom(1/2*s12)*mt*s12*s13*s23^2*s24 - 1/2*denom(1/2*
      s12)*mt*s12*s13*s23^3 - 1/2*denom(1/2*s12)*mt*s12*s13*s14*s23^2 - 1/2*
      denom(1/2*s12)*mt*s12*s13^2*s23^2 - 1/2*denom(1/2*s12)*mt*s12^2*s13*
      s23^2 + 1/2*denom(1/2*s12)*mt*mh^2*s12*s13*s23^2 + 1/2*denom(1/2*s12)*
      mt^3*s12*s23^2*s24 + 1/2*denom(1/2*s12)*mt^3*s12*s23^3 + denom(1/2*s12)*
      mt^3*s12*s14*s23^2 + 3/2*denom(1/2*s12)*mt^3*s12*s13*s23*s24 + 5/2*
      denom(1/2*s12)*mt^3*s12*s13*s23^2 + denom(1/2*s12)*mt^3*s12*s13*s14*s23
       + denom(1/2*s12)*mt^3*s12*s13^2*s23 + 1/2*denom(1/2*s12)*mt^3*s12^2*
      s23^2 + denom(1/2*s12)*mt^3*s12^2*s13*s23 - 1/2*denom(1/2*s12)*mt^3*mh^2
      *s12*s23^2 - denom(1/2*s12)*mt^3*mh^2*s12*s13*s23 - 3/2*denom(1/2*s12)*
      mt^5*s12*s23*s24 - 5/2*denom(1/2*s12)*mt^5*s12*s23^2 - 2*denom(1/2*s12)*
      mt^5*s12*s14*s23 - denom(1/2*s12)*mt^5*s12*s13*s24 - 4*denom(1/2*s12)*
      mt^5*s12*s13*s23 - 1/2*denom(1/2*s12)*mt^5*s12*s13*s14 - 1/2*denom(1/2*
      s12)*mt^5*s12*s13^2 - denom(1/2*s12)*mt^5*s12^2*s23 - 1/2*denom(1/2*s12)
      *mt^5*s12^2*s13 + denom(1/2*s12)*mt^5*mh^2*s12*s23 + 1/2*denom(1/2*s12)*
      mt^5*mh^2*s12*s13 + denom(1/2*s12)*mt^7*s12*s24 + 4*denom(1/2*s12)*mt^7*
      s12*s23 + denom(1/2*s12)*mt^7*s12*s14 + 2*denom(1/2*s12)*mt^7*s12*s13 + 
      1/2*denom(1/2*s12)*mt^7*s12^2 - 1/2*denom(1/2*s12)*mt^7*mh^2*s12 - 2*
      denom(1/2*s12)*mt^9*s12 - 1/4*denom(1/4*s12^2)*mt*s12*s13*s14*s23^3 - 1/
      4*denom(1/4*s12^2)*mt*s12*s13^2*s23^2*s24 + 1/4*denom(1/4*s12^2)*mt^3*
      s12*s14*s23^3 + 1/2*denom(1/4*s12^2)*mt^3*s12*s13*s23^2*s24 + 1/4*denom(
      1/4*s12^2)*mt^3*s12*s13*s23^3 + 3/4*denom(1/4*s12^2)*mt^3*s12*s13*s14*
      s23^2 + 1/2*denom(1/4*s12^2)*mt^3*s12*s13^2*s23*s24 + 1/4*denom(1/4*
      s12^2)*mt^3*s12*s13^2*s23^2 - 1/4*denom(1/4*s12^2)*mt^5*s12*s23^2*s24 - 
      1/4*denom(1/4*s12^2)*mt^5*s12*s23^3 - 3/4*denom(1/4*s12^2)*mt^5*s12*s14*
      s23^2 - denom(1/4*s12^2)*mt^5*s12*s13*s23*s24 - 5/4*denom(1/4*s12^2)*
      mt^5*s12*s13*s23^2 - 3/4*denom(1/4*s12^2)*mt^5*s12*s13*s14*s23 - 1/4*
      denom(1/4*s12^2)*mt^5*s12*s13^2*s24 - 1/2*denom(1/4*s12^2)*mt^5*s12*
      s13^2*s23 + 1/2*denom(1/4*s12^2)*mt^7*s12*s23*s24 + denom(1/4*s12^2)*
      mt^7*s12*s23^2 + 3/4*denom(1/4*s12^2)*mt^7*s12*s14*s23 + 1/2*denom(1/4*
      s12^2)*mt^7*s12*s13*s24 + 7/4*denom(1/4*s12^2)*mt^7*s12*s13*s23 + 1/4*
      denom(1/4*s12^2)*mt^7*s12*s13*s14 + 1/4*denom(1/4*s12^2)*mt^7*s12*s13^2
       - 1/4*denom(1/4*s12^2)*mt^9*s12*s24 - 5/4*denom(1/4*s12^2)*mt^9*s12*s23
       - 1/4*denom(1/4*s12^2)*mt^9*s12*s14 - 3/4*denom(1/4*s12^2)*mt^9*s12*s13
       + 1/2*denom(1/4*s12^2)*mt^11*s12;
 
 .sort
id KMatrix(10,14) =   - 2*mt^5*s12*s23 + 2*mt^7*s12 + denom(1/2*s12)*mt^3*s12*
      s14*s23*s24 + denom(1/2*s12)*mt^3*s12*s13*s23^2 - denom(1/2*s12)*mt^5*
      s12*s23*s24 - denom(1/2*s12)*mt^5*s12*s23^2 - denom(1/2*s12)*mt^5*s12*
      s14*s24 - denom(1/2*s12)*mt^5*s12*s14*s23 - 2*denom(1/2*s12)*mt^5*s12*
      s13*s23 + denom(1/2*s12)*mt^7*s12*s24 + 3*denom(1/2*s12)*mt^7*s12*s23 + 
      denom(1/2*s12)*mt^7*s12*s14 + denom(1/2*s12)*mt^7*s12*s13 - 2*denom(1/2*
      s12)*mt^9*s12 - 1/2*denom(1/4*s12^2)*mt*s12*s13*s14*s23^2*s24 + 1/2*
      denom(1/4*s12^2)*mt^3*s12*s14*s23^2*s24 + 1/2*denom(1/4*s12^2)*mt^3*s12*
      s13*s23^2*s24 + denom(1/4*s12^2)*mt^3*s12*s13*s14*s23*s24 + 1/2*denom(1/
      4*s12^2)*mt^3*s12*s13*s14*s23^2 - 1/2*denom(1/4*s12^2)*mt^5*s12*s23^2*
      s24 - denom(1/4*s12^2)*mt^5*s12*s14*s23*s24 - 1/2*denom(1/4*s12^2)*mt^5*
      s12*s14*s23^2 - denom(1/4*s12^2)*mt^5*s12*s13*s23*s24 - 1/2*denom(1/4*
      s12^2)*mt^5*s12*s13*s23^2 - 1/2*denom(1/4*s12^2)*mt^5*s12*s13*s14*s24 - 
      denom(1/4*s12^2)*mt^5*s12*s13*s14*s23 + denom(1/4*s12^2)*mt^7*s12*s23*
      s24 + 1/2*denom(1/4*s12^2)*mt^7*s12*s23^2 + 1/2*denom(1/4*s12^2)*mt^7*
      s12*s14*s24 + denom(1/4*s12^2)*mt^7*s12*s14*s23 + 1/2*denom(1/4*s12^2)*
      mt^7*s12*s13*s24 + denom(1/4*s12^2)*mt^7*s12*s13*s23 + 1/2*denom(1/4*
      s12^2)*mt^7*s12*s13*s14 - 1/2*denom(1/4*s12^2)*mt^9*s12*s24 - denom(1/4*
      s12^2)*mt^9*s12*s23 - 1/2*denom(1/4*s12^2)*mt^9*s12*s14 - 1/2*denom(1/4*
      s12^2)*mt^9*s12*s13 + 1/2*denom(1/4*s12^2)*mt^11*s12;
 
 .sort
id KMatrix(10,15) =   - 1/2*mt*s12*s23*s24^2 - mt*s12*s23^2*s24 - 1/2*mt*s12*
      s23^3 - mt*s12*s14*s23*s24 - mt*s12*s14*s23^2 - 1/2*mt*s12*s14^2*s23 - 
      mt*s12*s13*s23*s24 - mt*s12*s13*s23^2 - mt*s12*s13*s14*s23 - 1/2*mt*s12*
      s13^2*s23 - mt*s12^2*s23*s24 - mt*s12^2*s23^2 - mt*s12^2*s14*s23 - mt*
      s12^2*s13*s23 - 1/2*mt*s12^3*s23 + mt*mh^2*s12*s23*s24 + mt*mh^2*s12*
      s23^2 + mt*mh^2*s12*s14*s23 + mt*mh^2*s12*s13*s23 + mt*mh^2*s12^2*s23 - 
      1/2*mt*mh^4*s12*s23 + 1/2*mt^3*s12*s24^2 + 3*mt^3*s12*s23*s24 + 5/2*mt^3
      *s12*s23^2 + mt^3*s12*s14*s24 + 3*mt^3*s12*s14*s23 + 1/2*mt^3*s12*s14^2
       + mt^3*s12*s13*s24 + 3*mt^3*s12*s13*s23 + mt^3*s12*s13*s14 + 1/2*mt^3*
      s12*s13^2 + mt^3*s12^2*s24 + 3*mt^3*s12^2*s23 + mt^3*s12^2*s14 + mt^3*
      s12^2*s13 + 1/2*mt^3*s12^3 - mt^3*mh^2*s12*s24 - 3*mt^3*mh^2*s12*s23 - 
      mt^3*mh^2*s12*s14 - mt^3*mh^2*s12*s13 - mt^3*mh^2*s12^2 + 1/2*mt^3*mh^4*
      s12 - 2*mt^5*s12*s24 - 4*mt^5*s12*s23 - 2*mt^5*s12*s14 - 2*mt^5*s12*s13
       - 2*mt^5*s12^2 + 2*mt^5*mh^2*s12 + 2*mt^7*s12 - 1/2*denom(1/2*s12)*mt*
      s12*s14*s23^2*s24 - 1/2*denom(1/2*s12)*mt*s12*s14*s23^3 - 1/2*denom(1/2*
      s12)*mt*s12*s14^2*s23^2 - 1/2*denom(1/2*s12)*mt*s12*s13*s23*s24^2 - 1/2*
      denom(1/2*s12)*mt*s12*s13*s23^2*s24 - 1/2*denom(1/2*s12)*mt*s12*s13*s14*
      s23*s24 - 1/2*denom(1/2*s12)*mt*s12*s13*s14*s23^2 - 1/2*denom(1/2*s12)*
      mt*s12*s13^2*s23*s24 - 1/2*denom(1/2*s12)*mt*s12^2*s14*s23^2 - 1/2*
      denom(1/2*s12)*mt*s12^2*s13*s23*s24 + 1/2*denom(1/2*s12)*mt*mh^2*s12*s14
      *s23^2 + 1/2*denom(1/2*s12)*mt*mh^2*s12*s13*s23*s24 + 1/2*denom(1/2*s12)
      *mt^3*s12*s23*s24^2 + denom(1/2*s12)*mt^3*s12*s23^2*s24 + 1/2*denom(1/2*
      s12)*mt^3*s12*s23^3 + 3/2*denom(1/2*s12)*mt^3*s12*s14*s23*s24 + 5/2*
      denom(1/2*s12)*mt^3*s12*s14*s23^2 + denom(1/2*s12)*mt^3*s12*s14^2*s23 + 
      1/2*denom(1/2*s12)*mt^3*s12*s13*s24^2 + 5/2*denom(1/2*s12)*mt^3*s12*s13*
      s23*s24 + denom(1/2*s12)*mt^3*s12*s13*s23^2 + 1/2*denom(1/2*s12)*mt^3*
      s12*s13*s14*s24 + 3/2*denom(1/2*s12)*mt^3*s12*s13*s14*s23 + 1/2*denom(1/
      2*s12)*mt^3*s12*s13^2*s24 + 1/2*denom(1/2*s12)*mt^3*s12*s13^2*s23 + 1/2*
      denom(1/2*s12)*mt^3*s12^2*s23*s24 + 1/2*denom(1/2*s12)*mt^3*s12^2*s23^2
       + denom(1/2*s12)*mt^3*s12^2*s14*s23 + 1/2*denom(1/2*s12)*mt^3*s12^2*s13
      *s24 + 1/2*denom(1/2*s12)*mt^3*s12^2*s13*s23 - 1/2*denom(1/2*s12)*mt^3*
      mh^2*s12*s23*s24 - 1/2*denom(1/2*s12)*mt^3*mh^2*s12*s23^2 - denom(1/2*
      s12)*mt^3*mh^2*s12*s14*s23 - 1/2*denom(1/2*s12)*mt^3*mh^2*s12*s13*s24 - 
      1/2*denom(1/2*s12)*mt^3*mh^2*s12*s13*s23 - 1/2*denom(1/2*s12)*mt^5*s12*
      s24^2 - 3*denom(1/2*s12)*mt^5*s12*s23*s24 - 5/2*denom(1/2*s12)*mt^5*s12*
      s23^2 - denom(1/2*s12)*mt^5*s12*s14*s24 - 4*denom(1/2*s12)*mt^5*s12*s14*
      s23 - 1/2*denom(1/2*s12)*mt^5*s12*s14^2 - 2*denom(1/2*s12)*mt^5*s12*s13*
      s24 - 3*denom(1/2*s12)*mt^5*s12*s13*s23 - denom(1/2*s12)*mt^5*s12*s13*
      s14 - 1/2*denom(1/2*s12)*mt^5*s12*s13^2 - 1/2*denom(1/2*s12)*mt^5*s12^2*
      s24 - 3/2*denom(1/2*s12)*mt^5*s12^2*s23 - 1/2*denom(1/2*s12)*mt^5*s12^2*
      s14 - 1/2*denom(1/2*s12)*mt^5*s12^2*s13 + 1/2*denom(1/2*s12)*mt^5*mh^2*
      s12*s24 + 3/2*denom(1/2*s12)*mt^5*mh^2*s12*s23 + 1/2*denom(1/2*s12)*mt^5
      *mh^2*s12*s14 + 1/2*denom(1/2*s12)*mt^5*mh^2*s12*s13 + 2*denom(1/2*s12)*
      mt^7*s12*s24 + 4*denom(1/2*s12)*mt^7*s12*s23 + 2*denom(1/2*s12)*mt^7*s12
      *s14 + 2*denom(1/2*s12)*mt^7*s12*s13 + denom(1/2*s12)*mt^7*s12^2 - 
      denom(1/2*s12)*mt^7*mh^2*s12 - 2*denom(1/2*s12)*mt^9*s12 - 1/8*denom(1/4
      *s12^2)*mt*s12*s14^2*s23^3 - 1/4*denom(1/4*s12^2)*mt*s12*s13*s14*s23^2*
      s24 - 1/8*denom(1/4*s12^2)*mt*s12*s13^2*s23*s24^2 + 1/4*denom(1/4*s12^2)
      *mt^3*s12*s14*s23^2*s24 + 1/4*denom(1/4*s12^2)*mt^3*s12*s14*s23^3 + 3/8*
      denom(1/4*s12^2)*mt^3*s12*s14^2*s23^2 + 1/4*denom(1/4*s12^2)*mt^3*s12*
      s13*s23*s24^2 + 1/4*denom(1/4*s12^2)*mt^3*s12*s13*s23^2*s24 + 1/2*denom(
      1/4*s12^2)*mt^3*s12*s13*s14*s23*s24 + 1/4*denom(1/4*s12^2)*mt^3*s12*s13*
      s14*s23^2 + 1/8*denom(1/4*s12^2)*mt^3*s12*s13^2*s24^2 + 1/4*denom(1/4*
      s12^2)*mt^3*s12*s13^2*s23*s24 - 1/8*denom(1/4*s12^2)*mt^5*s12*s23*s24^2
       - 1/4*denom(1/4*s12^2)*mt^5*s12*s23^2*s24 - 1/8*denom(1/4*s12^2)*mt^5*
      s12*s23^3 - 1/2*denom(1/4*s12^2)*mt^5*s12*s14*s23*s24 - denom(1/4*s12^2)
      *mt^5*s12*s14*s23^2 - 3/8*denom(1/4*s12^2)*mt^5*s12*s14^2*s23 - 1/4*
      denom(1/4*s12^2)*mt^5*s12*s13*s24^2 - denom(1/4*s12^2)*mt^5*s12*s13*s23*
      s24 - 1/4*denom(1/4*s12^2)*mt^5*s12*s13*s23^2 - 1/4*denom(1/4*s12^2)*
      mt^5*s12*s13*s14*s24 - 1/2*denom(1/4*s12^2)*mt^5*s12*s13*s14*s23 - 1/4*
      denom(1/4*s12^2)*mt^5*s12*s13^2*s24 - 1/8*denom(1/4*s12^2)*mt^5*s12*
      s13^2*s23 + 1/8*denom(1/4*s12^2)*mt^7*s12*s24^2 + 3/4*denom(1/4*s12^2)*
      mt^7*s12*s23*s24 + 5/8*denom(1/4*s12^2)*mt^7*s12*s23^2 + 1/4*denom(1/4*
      s12^2)*mt^7*s12*s14*s24 + 5/4*denom(1/4*s12^2)*mt^7*s12*s14*s23 + 1/8*
      denom(1/4*s12^2)*mt^7*s12*s14^2 + 3/4*denom(1/4*s12^2)*mt^7*s12*s13*s24
       + 3/4*denom(1/4*s12^2)*mt^7*s12*s13*s23 + 1/4*denom(1/4*s12^2)*mt^7*s12
      *s13*s14 + 1/8*denom(1/4*s12^2)*mt^7*s12*s13^2 - 1/2*denom(1/4*s12^2)*
      mt^9*s12*s24 - denom(1/4*s12^2)*mt^9*s12*s23 - 1/2*denom(1/4*s12^2)*mt^9
      *s12*s14 - 1/2*denom(1/4*s12^2)*mt^9*s12*s13 + 1/2*denom(1/4*s12^2)*
      mt^11*s12;
 
 .sort
id KMatrix(10,16) =  mt^3*s12*s23*s24 + mt^3*s12*s23^2 + mt^3*s12*s14*s23 + 
      mt^3*s12*s13*s23 + mt^3*s12^2*s23 - mt^3*mh^2*s12*s23 - mt^5*s12*s24 - 3
      *mt^5*s12*s23 - mt^5*s12*s14 - mt^5*s12*s13 - mt^5*s12^2 + mt^5*mh^2*s12
       + 2*mt^7*s12 - 1/2*denom(1/2*s12)*mt*s12*s14*s23*s24^2 - 1/2*denom(1/2*
      s12)*mt*s12*s14*s23^2*s24 - 1/2*denom(1/2*s12)*mt*s12*s14^2*s23*s24 - 1/
      2*denom(1/2*s12)*mt*s12*s13*s14*s23*s24 - 1/2*denom(1/2*s12)*mt*s12^2*
      s14*s23*s24 + 1/2*denom(1/2*s12)*mt*mh^2*s12*s14*s23*s24 + 1/2*denom(1/2
      *s12)*mt^3*s12*s23*s24^2 + 1/2*denom(1/2*s12)*mt^3*s12*s23^2*s24 + 1/2*
      denom(1/2*s12)*mt^3*s12*s14*s24^2 + 5/2*denom(1/2*s12)*mt^3*s12*s14*s23*
      s24 + denom(1/2*s12)*mt^3*s12*s14*s23^2 + 1/2*denom(1/2*s12)*mt^3*s12*
      s14^2*s24 + 1/2*denom(1/2*s12)*mt^3*s12*s14^2*s23 + denom(1/2*s12)*mt^3*
      s12*s13*s23*s24 + 1/2*denom(1/2*s12)*mt^3*s12*s13*s14*s24 + 1/2*denom(1/
      2*s12)*mt^3*s12*s13*s14*s23 + 1/2*denom(1/2*s12)*mt^3*s12^2*s23*s24 + 1/
      2*denom(1/2*s12)*mt^3*s12^2*s14*s24 + 1/2*denom(1/2*s12)*mt^3*s12^2*s14*
      s23 - 1/2*denom(1/2*s12)*mt^3*mh^2*s12*s23*s24 - 1/2*denom(1/2*s12)*mt^3
      *mh^2*s12*s14*s24 - 1/2*denom(1/2*s12)*mt^3*mh^2*s12*s14*s23 - 1/2*
      denom(1/2*s12)*mt^5*s12*s24^2 - 5/2*denom(1/2*s12)*mt^5*s12*s23*s24 - 
      denom(1/2*s12)*mt^5*s12*s23^2 - 2*denom(1/2*s12)*mt^5*s12*s14*s24 - 3*
      denom(1/2*s12)*mt^5*s12*s14*s23 - 1/2*denom(1/2*s12)*mt^5*s12*s14^2 - 
      denom(1/2*s12)*mt^5*s12*s13*s24 - denom(1/2*s12)*mt^5*s12*s13*s23 - 1/2*
      denom(1/2*s12)*mt^5*s12*s13*s14 - 1/2*denom(1/2*s12)*mt^5*s12^2*s24 - 1/
      2*denom(1/2*s12)*mt^5*s12^2*s23 - 1/2*denom(1/2*s12)*mt^5*s12^2*s14 + 1/
      2*denom(1/2*s12)*mt^5*mh^2*s12*s24 + 1/2*denom(1/2*s12)*mt^5*mh^2*s12*
      s23 + 1/2*denom(1/2*s12)*mt^5*mh^2*s12*s14 + 2*denom(1/2*s12)*mt^7*s12*
      s24 + 3*denom(1/2*s12)*mt^7*s12*s23 + 2*denom(1/2*s12)*mt^7*s12*s14 + 
      denom(1/2*s12)*mt^7*s12*s13 + 1/2*denom(1/2*s12)*mt^7*s12^2 - 1/2*denom(
      1/2*s12)*mt^7*mh^2*s12 - 2*denom(1/2*s12)*mt^9*s12 - 1/4*denom(1/4*s12^2
      )*mt*s12*s14^2*s23^2*s24 - 1/4*denom(1/4*s12^2)*mt*s12*s13*s14*s23*s24^2
       + 1/4*denom(1/4*s12^2)*mt^3*s12*s14*s23*s24^2 + 1/2*denom(1/4*s12^2)*
      mt^3*s12*s14*s23^2*s24 + 1/2*denom(1/4*s12^2)*mt^3*s12*s14^2*s23*s24 + 1/
      4*denom(1/4*s12^2)*mt^3*s12*s14^2*s23^2 + 1/4*denom(1/4*s12^2)*mt^3*s12*
      s13*s23*s24^2 + 1/4*denom(1/4*s12^2)*mt^3*s12*s13*s14*s24^2 + 1/2*denom(
      1/4*s12^2)*mt^3*s12*s13*s14*s23*s24 - 1/4*denom(1/4*s12^2)*mt^5*s12*s23*
      s24^2 - 1/4*denom(1/4*s12^2)*mt^5*s12*s23^2*s24 - 1/4*denom(1/4*s12^2)*
      mt^5*s12*s14*s24^2 - 3/2*denom(1/4*s12^2)*mt^5*s12*s14*s23*s24 - 1/2*
      denom(1/4*s12^2)*mt^5*s12*s14*s23^2 - 1/4*denom(1/4*s12^2)*mt^5*s12*
      s14^2*s24 - 1/2*denom(1/4*s12^2)*mt^5*s12*s14^2*s23 - 1/4*denom(1/4*
      s12^2)*mt^5*s12*s13*s24^2 - 1/2*denom(1/4*s12^2)*mt^5*s12*s13*s23*s24 - 
      1/2*denom(1/4*s12^2)*mt^5*s12*s13*s14*s24 - 1/4*denom(1/4*s12^2)*mt^5*
      s12*s13*s14*s23 + 1/4*denom(1/4*s12^2)*mt^7*s12*s24^2 + denom(1/4*s12^2)
      *mt^7*s12*s23*s24 + 1/4*denom(1/4*s12^2)*mt^7*s12*s23^2 + denom(1/4*
      s12^2)*mt^7*s12*s14*s24 + 5/4*denom(1/4*s12^2)*mt^7*s12*s14*s23 + 1/4*
      denom(1/4*s12^2)*mt^7*s12*s14^2 + 1/2*denom(1/4*s12^2)*mt^7*s12*s13*s24
       + 1/4*denom(1/4*s12^2)*mt^7*s12*s13*s23 + 1/4*denom(1/4*s12^2)*mt^7*s12
      *s13*s14 - 3/4*denom(1/4*s12^2)*mt^9*s12*s24 - 3/4*denom(1/4*s12^2)*mt^9
      *s12*s23 - 3/4*denom(1/4*s12^2)*mt^9*s12*s14 - 1/4*denom(1/4*s12^2)*mt^9
      *s12*s13 + 1/2*denom(1/4*s12^2)*mt^11*s12;
 
 .sort
id KMatrix(10,17) =   - mt*s24^2 + mt*s23^2 - mt*s14*s24 + mt*s14*s23 - mt*s13
      *s24 + mt*s13*s23 - mt*s12*s24 + mt*s12*s23 + mt*mh^2*s24 - mt*mh^2*s23
       + 2*mt^3*s24 - 2*mt^3*s23 - denom(1/2*s12)*mt*s14*s23*s24 + denom(1/2*
      s12)*mt*s14*s23^2 - denom(1/2*s12)*mt*s13*s24^2 + denom(1/2*s12)*mt*s13*
      s23*s24 + denom(1/2*s12)*mt^3*s24^2 - denom(1/2*s12)*mt^3*s23^2 + denom(
      1/2*s12)*mt^3*s14*s24 - denom(1/2*s12)*mt^3*s14*s23 + denom(1/2*s12)*
      mt^3*s13*s24 - denom(1/2*s12)*mt^3*s13*s23 - 2*denom(1/2*s12)*mt^5*s24
       + 2*denom(1/2*s12)*mt^5*s23 + 1/4*denom(1/4*s12^2)*mt*s12*s14*s23*s24
       - 1/4*denom(1/4*s12^2)*mt*s12*s14*s23^2 + 1/4*denom(1/4*s12^2)*mt*s12*
      s13*s24^2 - 1/4*denom(1/4*s12^2)*mt*s12*s13*s23*s24 - 1/4*denom(1/4*
      s12^2)*mt^3*s12*s24^2 + 1/4*denom(1/4*s12^2)*mt^3*s12*s23^2 - 1/4*denom(
      1/4*s12^2)*mt^3*s12*s14*s24 + 1/4*denom(1/4*s12^2)*mt^3*s12*s14*s23 - 1/
      4*denom(1/4*s12^2)*mt^3*s12*s13*s24 + 1/4*denom(1/4*s12^2)*mt^3*s12*s13*
      s23 + 1/2*denom(1/4*s12^2)*mt^5*s12*s24 - 1/2*denom(1/4*s12^2)*mt^5*s12*
      s23;
 
 .sort
id KMatrix(10,18) =   - 1/2*s14*s23*s24 - 1/2*s14*s23^2 - 1/2*s14^2*s23 - 1/2*
      s13*s24^2 - 1/2*s13*s23*s24 - 1/2*s13*s14*s24 - 1/2*s13*s14*s23 - 1/2*
      s13^2*s24 - 1/2*s12*s24^2 - s12*s23*s24 - 1/2*s12*s23^2 - s12*s14*s24 - 
      3/2*s12*s14*s23 - 1/2*s12*s14^2 - 3/2*s12*s13*s24 - s12*s13*s23 - s12*
      s13*s14 - 1/2*s12*s13^2 - s12^2*s24 - s12^2*s23 - s12^2*s14 - s12^2*s13
       - 1/2*s12^3 + 1/2*mh^2*s14*s23 + 1/2*mh^2*s13*s24 + mh^2*s12*s24 + mh^2
      *s12*s23 + mh^2*s12*s14 + mh^2*s12*s13 + mh^2*s12^2 - 1/2*mh^4*s12 + 1/2
      *mt^2*s24^2 + mt^2*s23*s24 + 1/2*mt^2*s23^2 + mt^2*s14*s24 + 2*mt^2*s14*
      s23 + 1/2*mt^2*s14^2 + 2*mt^2*s13*s24 + mt^2*s13*s23 + mt^2*s13*s14 + 1/
      2*mt^2*s13^2 + 7/2*mt^2*s12*s24 + 7/2*mt^2*s12*s23 + 7/2*mt^2*s12*s14 + 
      7/2*mt^2*s12*s13 + 3*mt^2*s12^2 - 1/2*mt^2*mh^2*s24 - 1/2*mt^2*mh^2*s23
       - 1/2*mt^2*mh^2*s14 - 1/2*mt^2*mh^2*s13 - 3*mt^2*mh^2*s12 - 2*mt^4*s24
       - 2*mt^4*s23 - 2*mt^4*s14 - 2*mt^4*s13 - 5*mt^4*s12 + mt^4*mh^2 + 2*
      mt^6 - 1/2*denom(1/2*s12)*s14^2*s23^2 - denom(1/2*s12)*s13*s14*s23*s24
       - 1/2*denom(1/2*s12)*s13^2*s24^2 - 1/2*denom(1/2*s12)*s12*s14*s23*s24
       - 1/2*denom(1/2*s12)*s12*s14*s23^2 - 1/2*denom(1/2*s12)*s12*s14^2*s23
       - 1/2*denom(1/2*s12)*s12*s13*s24^2 - 1/2*denom(1/2*s12)*s12*s13*s23*s24
       - 1/2*denom(1/2*s12)*s12*s13*s14*s24 - 1/2*denom(1/2*s12)*s12*s13*s14*
      s23 - 1/2*denom(1/2*s12)*s12*s13^2*s24 - 1/2*denom(1/2*s12)*s12^2*s14*
      s23 - 1/2*denom(1/2*s12)*s12^2*s13*s24 + 1/2*denom(1/2*s12)*mh^2*s12*s14
      *s23 + 1/2*denom(1/2*s12)*mh^2*s12*s13*s24 + denom(1/2*s12)*mt^2*s14*s23
      *s24 + denom(1/2*s12)*mt^2*s14*s23^2 + denom(1/2*s12)*mt^2*s14^2*s23 + 
      denom(1/2*s12)*mt^2*s13*s24^2 + denom(1/2*s12)*mt^2*s13*s23*s24 + denom(
      1/2*s12)*mt^2*s13*s14*s24 + denom(1/2*s12)*mt^2*s13*s14*s23 + denom(1/2*
      s12)*mt^2*s13^2*s24 + 1/2*denom(1/2*s12)*mt^2*s12*s24^2 + denom(1/2*s12)
      *mt^2*s12*s23*s24 + 1/2*denom(1/2*s12)*mt^2*s12*s23^2 + denom(1/2*s12)*
      mt^2*s12*s14*s24 + 3*denom(1/2*s12)*mt^2*s12*s14*s23 + 1/2*denom(1/2*s12
      )*mt^2*s12*s14^2 + 3*denom(1/2*s12)*mt^2*s12*s13*s24 + denom(1/2*s12)*
      mt^2*s12*s13*s23 + denom(1/2*s12)*mt^2*s12*s13*s14 + 1/2*denom(1/2*s12)*
      mt^2*s12*s13^2 + 1/2*denom(1/2*s12)*mt^2*s12^2*s24 + 1/2*denom(1/2*s12)*
      mt^2*s12^2*s23 + 1/2*denom(1/2*s12)*mt^2*s12^2*s14 + 1/2*denom(1/2*s12)*
      mt^2*s12^2*s13 - 1/2*denom(1/2*s12)*mt^2*mh^2*s12*s24 - 1/2*denom(1/2*
      s12)*mt^2*mh^2*s12*s23 - 1/2*denom(1/2*s12)*mt^2*mh^2*s12*s14 - 1/2*
      denom(1/2*s12)*mt^2*mh^2*s12*s13 - 1/2*denom(1/2*s12)*mt^4*s24^2 - 
      denom(1/2*s12)*mt^4*s23*s24 - 1/2*denom(1/2*s12)*mt^4*s23^2 - denom(1/2*
      s12)*mt^4*s14*s24 - 3*denom(1/2*s12)*mt^4*s14*s23 - 1/2*denom(1/2*s12)*
      mt^4*s14^2 - 3*denom(1/2*s12)*mt^4*s13*s24 - denom(1/2*s12)*mt^4*s13*s23
       - denom(1/2*s12)*mt^4*s13*s14 - 1/2*denom(1/2*s12)*mt^4*s13^2 - 3*
      denom(1/2*s12)*mt^4*s12*s24 - 3*denom(1/2*s12)*mt^4*s12*s23 - 3*denom(1/
      2*s12)*mt^4*s12*s14 - 3*denom(1/2*s12)*mt^4*s12*s13 - denom(1/2*s12)*
      mt^4*s12^2 + denom(1/2*s12)*mt^4*mh^2*s12 + 2*denom(1/2*s12)*mt^6*s24 + 
      2*denom(1/2*s12)*mt^6*s23 + 2*denom(1/2*s12)*mt^6*s14 + 2*denom(1/2*s12)
      *mt^6*s13 + 4*denom(1/2*s12)*mt^6*s12 - 2*denom(1/2*s12)*mt^8 + 1/8*
      denom(1/4*s12^2)*s12*s14^2*s23^2 + 1/4*denom(1/4*s12^2)*s12*s13*s14*s23*
      s24 + 1/8*denom(1/4*s12^2)*s12*s13^2*s24^2 + 1/8*denom(1/4*s12^2)*s12^2*
      s14*s23*s24 + 1/8*denom(1/4*s12^2)*s12^2*s14*s23^2 + 1/8*denom(1/4*s12^2
      )*s12^2*s14^2*s23 + 1/8*denom(1/4*s12^2)*s12^2*s13*s24^2 + 1/8*denom(1/4
      *s12^2)*s12^2*s13*s23*s24 + 1/8*denom(1/4*s12^2)*s12^2*s13*s14*s24 + 1/8
      *denom(1/4*s12^2)*s12^2*s13*s14*s23 + 1/8*denom(1/4*s12^2)*s12^2*s13^2*
      s24 + 1/8*denom(1/4*s12^2)*s12^3*s14*s23 + 1/8*denom(1/4*s12^2)*s12^3*
      s13*s24 - 1/8*denom(1/4*s12^2)*mh^2*s12^2*s14*s23 - 1/8*denom(1/4*s12^2)
      *mh^2*s12^2*s13*s24 - 1/4*denom(1/4*s12^2)*mt^2*s12*s14*s23*s24 - 1/4*
      denom(1/4*s12^2)*mt^2*s12*s14*s23^2 - 1/4*denom(1/4*s12^2)*mt^2*s12*
      s14^2*s23 - 1/4*denom(1/4*s12^2)*mt^2*s12*s13*s24^2 - 1/4*denom(1/4*
      s12^2)*mt^2*s12*s13*s23*s24 - 1/4*denom(1/4*s12^2)*mt^2*s12*s13*s14*s24
       - 1/4*denom(1/4*s12^2)*mt^2*s12*s13*s14*s23 - 1/4*denom(1/4*s12^2)*mt^2
      *s12*s13^2*s24 - 1/8*denom(1/4*s12^2)*mt^2*s12^2*s24^2 - 1/4*denom(1/4*
      s12^2)*mt^2*s12^2*s23*s24 - 1/8*denom(1/4*s12^2)*mt^2*s12^2*s23^2 - 1/4*
      denom(1/4*s12^2)*mt^2*s12^2*s14*s24 - 3/4*denom(1/4*s12^2)*mt^2*s12^2*
      s14*s23 - 1/8*denom(1/4*s12^2)*mt^2*s12^2*s14^2 - 3/4*denom(1/4*s12^2)*
      mt^2*s12^2*s13*s24 - 1/4*denom(1/4*s12^2)*mt^2*s12^2*s13*s23 - 1/4*
      denom(1/4*s12^2)*mt^2*s12^2*s13*s14 - 1/8*denom(1/4*s12^2)*mt^2*s12^2*
      s13^2 - 1/8*denom(1/4*s12^2)*mt^2*s12^3*s24 - 1/8*denom(1/4*s12^2)*mt^2*
      s12^3*s23 - 1/8*denom(1/4*s12^2)*mt^2*s12^3*s14 - 1/8*denom(1/4*s12^2)*
      mt^2*s12^3*s13 + 1/8*denom(1/4*s12^2)*mt^2*mh^2*s12^2*s24 + 1/8*denom(1/
      4*s12^2)*mt^2*mh^2*s12^2*s23 + 1/8*denom(1/4*s12^2)*mt^2*mh^2*s12^2*s14
       + 1/8*denom(1/4*s12^2)*mt^2*mh^2*s12^2*s13 + 1/8*denom(1/4*s12^2)*mt^4*
      s12*s24^2 + 1/4*denom(1/4*s12^2)*mt^4*s12*s23*s24 + 1/8*denom(1/4*s12^2)
      *mt^4*s12*s23^2 + 1/4*denom(1/4*s12^2)*mt^4*s12*s14*s24 + 3/4*denom(1/4*
      s12^2)*mt^4*s12*s14*s23 + 1/8*denom(1/4*s12^2)*mt^4*s12*s14^2 + 3/4*
      denom(1/4*s12^2)*mt^4*s12*s13*s24 + 1/4*denom(1/4*s12^2)*mt^4*s12*s13*
      s23 + 1/4*denom(1/4*s12^2)*mt^4*s12*s13*s14 + 1/8*denom(1/4*s12^2)*mt^4*
      s12*s13^2 + 3/4*denom(1/4*s12^2)*mt^4*s12^2*s24 + 3/4*denom(1/4*s12^2)*
      mt^4*s12^2*s23 + 3/4*denom(1/4*s12^2)*mt^4*s12^2*s14 + 3/4*denom(1/4*
      s12^2)*mt^4*s12^2*s13 + 1/4*denom(1/4*s12^2)*mt^4*s12^3 - 1/4*denom(1/4*
      s12^2)*mt^4*mh^2*s12^2 - 1/2*denom(1/4*s12^2)*mt^6*s12*s24 - 1/2*denom(1/
      4*s12^2)*mt^6*s12*s23 - 1/2*denom(1/4*s12^2)*mt^6*s12*s14 - 1/2*denom(1/
      4*s12^2)*mt^6*s12*s13 - denom(1/4*s12^2)*mt^6*s12^2 + 1/2*denom(1/4*
      s12^2)*mt^8*s12;
 
 .sort
id KMatrix(10,19) =   - s23*s24^2 - s23^2*s24 - s14*s23*s24 - s13*s23*s24 - 
      s12*s23*s24 + mh^2*s23*s24 + mt^2*s24^2 + 4*mt^2*s23*s24 + mt^2*s23^2 + 
      mt^2*s14*s24 + mt^2*s14*s23 + mt^2*s13*s24 + mt^2*s13*s23 + mt^2*s12*s24
       + mt^2*s12*s23 - mt^2*mh^2*s24 - mt^2*mh^2*s23 - 3*mt^4*s24 - 3*mt^4*
      s23 - mt^4*s14 - mt^4*s13 - mt^4*s12 + mt^4*mh^2 + 2*mt^6 - denom(1/2*
      s12)*s14*s23^2*s24 - denom(1/2*s12)*s13*s23*s24^2 + denom(1/2*s12)*mt^2*
      s23*s24^2 + denom(1/2*s12)*mt^2*s23^2*s24 + 2*denom(1/2*s12)*mt^2*s14*
      s23*s24 + denom(1/2*s12)*mt^2*s14*s23^2 + denom(1/2*s12)*mt^2*s13*s24^2
       + 2*denom(1/2*s12)*mt^2*s13*s23*s24 - denom(1/2*s12)*mt^4*s24^2 - 4*
      denom(1/2*s12)*mt^4*s23*s24 - denom(1/2*s12)*mt^4*s23^2 - denom(1/2*s12)
      *mt^4*s14*s24 - 2*denom(1/2*s12)*mt^4*s14*s23 - 2*denom(1/2*s12)*mt^4*
      s13*s24 - denom(1/2*s12)*mt^4*s13*s23 + 3*denom(1/2*s12)*mt^6*s24 + 3*
      denom(1/2*s12)*mt^6*s23 + denom(1/2*s12)*mt^6*s14 + denom(1/2*s12)*mt^6*
      s13 - 2*denom(1/2*s12)*mt^8 + 1/4*denom(1/4*s12^2)*s12*s14*s23^2*s24 + 1/
      4*denom(1/4*s12^2)*s12*s13*s23*s24^2 - 1/4*denom(1/4*s12^2)*mt^2*s12*s23
      *s24^2 - 1/4*denom(1/4*s12^2)*mt^2*s12*s23^2*s24 - 1/2*denom(1/4*s12^2)*
      mt^2*s12*s14*s23*s24 - 1/4*denom(1/4*s12^2)*mt^2*s12*s14*s23^2 - 1/4*
      denom(1/4*s12^2)*mt^2*s12*s13*s24^2 - 1/2*denom(1/4*s12^2)*mt^2*s12*s13*
      s23*s24 + 1/4*denom(1/4*s12^2)*mt^4*s12*s24^2 + denom(1/4*s12^2)*mt^4*
      s12*s23*s24 + 1/4*denom(1/4*s12^2)*mt^4*s12*s23^2 + 1/4*denom(1/4*s12^2)
      *mt^4*s12*s14*s24 + 1/2*denom(1/4*s12^2)*mt^4*s12*s14*s23 + 1/2*denom(1/
      4*s12^2)*mt^4*s12*s13*s24 + 1/4*denom(1/4*s12^2)*mt^4*s12*s13*s23 - 3/4*
      denom(1/4*s12^2)*mt^6*s12*s24 - 3/4*denom(1/4*s12^2)*mt^6*s12*s23 - 1/4*
      denom(1/4*s12^2)*mt^6*s12*s14 - 1/4*denom(1/4*s12^2)*mt^6*s12*s13 + 1/2*
      denom(1/4*s12^2)*mt^8*s12;
 
 .sort
id KMatrix(10,20) =  1/2*s23*s24^2 + s23^2*s24 + 1/2*s23^3 + s14*s23*s24 + s14
      *s23^2 + 1/2*s14^2*s23 + s13*s23*s24 + s13*s23^2 + s13*s14*s23 + 1/2*
      s13^2*s23 + s12*s23*s24 + s12*s23^2 + s12*s14*s23 + s12*s13*s23 + 1/2*
      s12^2*s23 - mh^2*s23*s24 - mh^2*s23^2 - mh^2*s14*s23 - mh^2*s13*s23 - 
      mh^2*s12*s23 + 1/2*mh^4*s23 - 3/2*mt^2*s24^2 - 4*mt^2*s23*s24 - 5/2*mt^2
      *s23^2 - 2*mt^2*s14*s24 - 3*mt^2*s14*s23 - 1/2*mt^2*s14^2 - 2*mt^2*s13*
      s24 - 3*mt^2*s13*s23 - mt^2*s13*s14 - 1/2*mt^2*s13^2 - 2*mt^2*s12*s24 - 
      3*mt^2*s12*s23 - mt^2*s12*s14 - mt^2*s12*s13 - 1/2*mt^2*s12^2 + 2*mt^2*
      mh^2*s24 + 3*mt^2*mh^2*s23 + mt^2*mh^2*s14 + mt^2*mh^2*s13 + mt^2*mh^2*
      s12 - 1/2*mt^2*mh^4 + 5*mt^4*s24 + 5*mt^4*s23 + 3*mt^4*s14 + 3*mt^4*s13
       + 3*mt^4*s12 - 3*mt^4*mh^2 - 4*mt^6 + 1/2*denom(1/2*s12)*s14*s23^2*s24
       + 1/2*denom(1/2*s12)*s14*s23^3 + 1/2*denom(1/2*s12)*s14^2*s23^2 + 
      denom(1/2*s12)*s13*s23*s24^2 + denom(1/2*s12)*s13*s23^2*s24 + denom(1/2*
      s12)*s13*s14*s23*s24 + 1/2*denom(1/2*s12)*s13*s14*s23^2 + denom(1/2*s12)
      *s13^2*s23*s24 + 1/2*denom(1/2*s12)*s12*s14*s23^2 + denom(1/2*s12)*s12*
      s13*s23*s24 - 1/2*denom(1/2*s12)*mh^2*s14*s23^2 - denom(1/2*s12)*mh^2*
      s13*s23*s24 - denom(1/2*s12)*mt^2*s23*s24^2 - 3/2*denom(1/2*s12)*mt^2*
      s23^2*s24 - 1/2*denom(1/2*s12)*mt^2*s23^3 - 5/2*denom(1/2*s12)*mt^2*s14*
      s23*s24 - 5/2*denom(1/2*s12)*mt^2*s14*s23^2 - denom(1/2*s12)*mt^2*s14^2*
      s23 - 3/2*denom(1/2*s12)*mt^2*s13*s24^2 - 5*denom(1/2*s12)*mt^2*s13*s23*
      s24 - 3/2*denom(1/2*s12)*mt^2*s13*s23^2 - denom(1/2*s12)*mt^2*s13*s14*
      s24 - 2*denom(1/2*s12)*mt^2*s13*s14*s23 - denom(1/2*s12)*mt^2*s13^2*s24
       - denom(1/2*s12)*mt^2*s13^2*s23 - denom(1/2*s12)*mt^2*s12*s23*s24 - 1/2
      *denom(1/2*s12)*mt^2*s12*s23^2 - denom(1/2*s12)*mt^2*s12*s14*s23 - 
      denom(1/2*s12)*mt^2*s12*s13*s24 - denom(1/2*s12)*mt^2*s12*s13*s23 + 
      denom(1/2*s12)*mt^2*mh^2*s23*s24 + 1/2*denom(1/2*s12)*mt^2*mh^2*s23^2 + 
      denom(1/2*s12)*mt^2*mh^2*s14*s23 + denom(1/2*s12)*mt^2*mh^2*s13*s24 + 
      denom(1/2*s12)*mt^2*mh^2*s13*s23 + 3/2*denom(1/2*s12)*mt^4*s24^2 + 11/2*
      denom(1/2*s12)*mt^4*s23*s24 + 3*denom(1/2*s12)*mt^4*s23^2 + 2*denom(1/2*
      s12)*mt^4*s14*s24 + 5*denom(1/2*s12)*mt^4*s14*s23 + 1/2*denom(1/2*s12)*
      mt^4*s14^2 + 5*denom(1/2*s12)*mt^4*s13*s24 + 5*denom(1/2*s12)*mt^4*s13*
      s23 + 3/2*denom(1/2*s12)*mt^4*s13*s14 + denom(1/2*s12)*mt^4*s13^2 + 
      denom(1/2*s12)*mt^4*s12*s24 + 2*denom(1/2*s12)*mt^4*s12*s23 + 1/2*denom(
      1/2*s12)*mt^4*s12*s14 + denom(1/2*s12)*mt^4*s12*s13 - denom(1/2*s12)*
      mt^4*mh^2*s24 - 2*denom(1/2*s12)*mt^4*mh^2*s23 - 1/2*denom(1/2*s12)*mt^4
      *mh^2*s14 - denom(1/2*s12)*mt^4*mh^2*s13 - 5*denom(1/2*s12)*mt^6*s24 - 6
      *denom(1/2*s12)*mt^6*s23 - 3*denom(1/2*s12)*mt^6*s14 - 4*denom(1/2*s12)*
      mt^6*s13 - 3/2*denom(1/2*s12)*mt^6*s12 + 3/2*denom(1/2*s12)*mt^6*mh^2 + 
      4*denom(1/2*s12)*mt^8 + 1/8*denom(1/4*s12^2)*s14^2*s23^3 + 1/2*denom(1/4
      *s12^2)*s13*s14*s23^2*s24 + 3/8*denom(1/4*s12^2)*s13^2*s23*s24^2 - 1/2*
      denom(1/4*s12^2)*mt^2*s14*s23^2*s24 - 1/4*denom(1/4*s12^2)*mt^2*s14*
      s23^3 - 3/8*denom(1/4*s12^2)*mt^2*s14^2*s23^2 - 3/4*denom(1/4*s12^2)*
      mt^2*s13*s23*s24^2 - 1/2*denom(1/4*s12^2)*mt^2*s13*s23^2*s24 - denom(1/4
      *s12^2)*mt^2*s13*s14*s23*s24 - 1/2*denom(1/4*s12^2)*mt^2*s13*s14*s23^2
       - 3/8*denom(1/4*s12^2)*mt^2*s13^2*s24^2 - 3/4*denom(1/4*s12^2)*mt^2*
      s13^2*s23*s24 + 3/8*denom(1/4*s12^2)*mt^4*s23*s24^2 + 1/2*denom(1/4*
      s12^2)*mt^4*s23^2*s24 + 1/8*denom(1/4*s12^2)*mt^4*s23^3 + denom(1/4*
      s12^2)*mt^4*s14*s23*s24 + 5/4*denom(1/4*s12^2)*mt^4*s14*s23^2 + 3/8*
      denom(1/4*s12^2)*mt^4*s14^2*s23 + 3/4*denom(1/4*s12^2)*mt^4*s13*s24^2 + 
      5/2*denom(1/4*s12^2)*mt^4*s13*s23*s24 + 1/2*denom(1/4*s12^2)*mt^4*s13*
      s23^2 + 1/2*denom(1/4*s12^2)*mt^4*s13*s14*s24 + denom(1/4*s12^2)*mt^4*
      s13*s14*s23 + 3/4*denom(1/4*s12^2)*mt^4*s13^2*s24 + 3/8*denom(1/4*s12^2)
      *mt^4*s13^2*s23 - 3/8*denom(1/4*s12^2)*mt^6*s24^2 - 7/4*denom(1/4*s12^2)
      *mt^6*s23*s24 - 7/8*denom(1/4*s12^2)*mt^6*s23^2 - 1/2*denom(1/4*s12^2)*
      mt^6*s14*s24 - 7/4*denom(1/4*s12^2)*mt^6*s14*s23 - 1/8*denom(1/4*s12^2)*
      mt^6*s14^2 - 2*denom(1/4*s12^2)*mt^6*s13*s24 - 7/4*denom(1/4*s12^2)*mt^6
      *s13*s23 - 1/2*denom(1/4*s12^2)*mt^6*s13*s14 - 3/8*denom(1/4*s12^2)*mt^6
      *s13^2 + 5/4*denom(1/4*s12^2)*mt^8*s24 + 7/4*denom(1/4*s12^2)*mt^8*s23
       + 3/4*denom(1/4*s12^2)*mt^8*s14 + 5/4*denom(1/4*s12^2)*mt^8*s13 - 
      denom(1/4*s12^2)*mt^10;
 
 .sort
id KMatrix(10,21) =   - mt^2*s23*s24 - mt^2*s23^2 - mt^2*s14*s23 - mt^2*s13*
      s23 - mt^2*s12*s23 + mt^2*mh^2*s23 + 3*mt^4*s24 + 3*mt^4*s23 + mt^4*s14
       + mt^4*s13 + mt^4*s12 - mt^4*mh^2 - 4*mt^6 + 1/2*denom(1/2*s12)*s14*s23
      *s24^2 + 1/2*denom(1/2*s12)*s14*s23^2*s24 + 1/2*denom(1/2*s12)*s14^2*s23
      *s24 + 1/2*denom(1/2*s12)*s13*s14*s23*s24 + 1/2*denom(1/2*s12)*s12*s14*
      s23*s24 - 1/2*denom(1/2*s12)*mh^2*s14*s23*s24 - 1/2*denom(1/2*s12)*mt^2*
      s23*s24^2 - 1/2*denom(1/2*s12)*mt^2*s23^2*s24 - 3/2*denom(1/2*s12)*mt^2*
      s14*s24^2 - 5/2*denom(1/2*s12)*mt^2*s14*s23*s24 - denom(1/2*s12)*mt^2*
      s14*s23^2 - 1/2*denom(1/2*s12)*mt^2*s14^2*s24 - 1/2*denom(1/2*s12)*mt^2*
      s14^2*s23 - 2*denom(1/2*s12)*mt^2*s13*s23*s24 - 1/2*denom(1/2*s12)*mt^2*
      s13*s14*s24 - 1/2*denom(1/2*s12)*mt^2*s13*s14*s23 - 1/2*denom(1/2*s12)*
      mt^2*s12*s23*s24 - 1/2*denom(1/2*s12)*mt^2*s12*s14*s24 - 1/2*denom(1/2*
      s12)*mt^2*s12*s14*s23 + 1/2*denom(1/2*s12)*mt^2*mh^2*s23*s24 + 1/2*
      denom(1/2*s12)*mt^2*mh^2*s14*s24 + 1/2*denom(1/2*s12)*mt^2*mh^2*s14*s23
       + 3/2*denom(1/2*s12)*mt^4*s24^2 + 7/2*denom(1/2*s12)*mt^4*s23*s24 + 
      denom(1/2*s12)*mt^4*s23^2 + 4*denom(1/2*s12)*mt^4*s14*s24 + 3*denom(1/2*
      s12)*mt^4*s14*s23 + 1/2*denom(1/2*s12)*mt^4*s14^2 + 2*denom(1/2*s12)*
      mt^4*s13*s24 + 2*denom(1/2*s12)*mt^4*s13*s23 + 1/2*denom(1/2*s12)*mt^4*
      s13*s14 + 1/2*denom(1/2*s12)*mt^4*s12*s24 + 1/2*denom(1/2*s12)*mt^4*s12*
      s23 + 1/2*denom(1/2*s12)*mt^4*s12*s14 - 1/2*denom(1/2*s12)*mt^4*mh^2*s24
       - 1/2*denom(1/2*s12)*mt^4*mh^2*s23 - 1/2*denom(1/2*s12)*mt^4*mh^2*s14
       - 5*denom(1/2*s12)*mt^6*s24 - 4*denom(1/2*s12)*mt^6*s23 - 3*denom(1/2*
      s12)*mt^6*s14 - 2*denom(1/2*s12)*mt^6*s13 - 1/2*denom(1/2*s12)*mt^6*s12
       + 1/2*denom(1/2*s12)*mt^6*mh^2 + 4*denom(1/2*s12)*mt^8 + 1/4*denom(1/4*
      s12^2)*s14^2*s23^2*s24 + 3/4*denom(1/4*s12^2)*s13*s14*s23*s24^2 - 3/4*
      denom(1/4*s12^2)*mt^2*s14*s23*s24^2 - 1/2*denom(1/4*s12^2)*mt^2*s14*
      s23^2*s24 - 1/2*denom(1/4*s12^2)*mt^2*s14^2*s23*s24 - 1/4*denom(1/4*
      s12^2)*mt^2*s14^2*s23^2 - 3/4*denom(1/4*s12^2)*mt^2*s13*s23*s24^2 - 3/4*
      denom(1/4*s12^2)*mt^2*s13*s14*s24^2 - 3/2*denom(1/4*s12^2)*mt^2*s13*s14*
      s23*s24 + 3/4*denom(1/4*s12^2)*mt^4*s23*s24^2 + 1/4*denom(1/4*s12^2)*
      mt^4*s23^2*s24 + 3/4*denom(1/4*s12^2)*mt^4*s14*s24^2 + 5/2*denom(1/4*
      s12^2)*mt^4*s14*s23*s24 + 1/2*denom(1/4*s12^2)*mt^4*s14*s23^2 + 1/4*
      denom(1/4*s12^2)*mt^4*s14^2*s24 + 1/2*denom(1/4*s12^2)*mt^4*s14^2*s23 + 
      3/4*denom(1/4*s12^2)*mt^4*s13*s24^2 + 3/2*denom(1/4*s12^2)*mt^4*s13*s23*
      s24 + 3/2*denom(1/4*s12^2)*mt^4*s13*s14*s24 + 3/4*denom(1/4*s12^2)*mt^4*
      s13*s14*s23 - 3/4*denom(1/4*s12^2)*mt^6*s24^2 - 2*denom(1/4*s12^2)*mt^6*
      s23*s24 - 1/4*denom(1/4*s12^2)*mt^6*s23^2 - 2*denom(1/4*s12^2)*mt^6*s14*
      s24 - 7/4*denom(1/4*s12^2)*mt^6*s14*s23 - 1/4*denom(1/4*s12^2)*mt^6*
      s14^2 - 3/2*denom(1/4*s12^2)*mt^6*s13*s24 - 3/4*denom(1/4*s12^2)*mt^6*
      s13*s23 - 3/4*denom(1/4*s12^2)*mt^6*s13*s14 + 7/4*denom(1/4*s12^2)*mt^8*
      s24 + 5/4*denom(1/4*s12^2)*mt^8*s23 + 5/4*denom(1/4*s12^2)*mt^8*s14 + 3/
      4*denom(1/4*s12^2)*mt^8*s13 - denom(1/4*s12^2)*mt^10;
 
 .sort
id KMatrix(10,22) =   - mt^2*s24^2 - mt^2*s23*s24 - mt^2*s14*s24 - mt^2*s13*
      s24 - mt^2*s12*s24 + mt^2*mh^2*s24 + 3*mt^4*s24 + 3*mt^4*s23 + mt^4*s14
       + mt^4*s13 + mt^4*s12 - mt^4*mh^2 - 4*mt^6 + 1/2*denom(1/2*s12)*s13*s23
      *s24^2 + 1/2*denom(1/2*s12)*s13*s23^2*s24 + 1/2*denom(1/2*s12)*s13*s14*
      s23*s24 + 1/2*denom(1/2*s12)*s13^2*s23*s24 + 1/2*denom(1/2*s12)*s12*s13*
      s23*s24 - 1/2*denom(1/2*s12)*mh^2*s13*s23*s24 - 1/2*denom(1/2*s12)*mt^2*
      s23*s24^2 - 1/2*denom(1/2*s12)*mt^2*s23^2*s24 - 2*denom(1/2*s12)*mt^2*
      s14*s23*s24 - denom(1/2*s12)*mt^2*s13*s24^2 - 5/2*denom(1/2*s12)*mt^2*
      s13*s23*s24 - 3/2*denom(1/2*s12)*mt^2*s13*s23^2 - 1/2*denom(1/2*s12)*
      mt^2*s13*s14*s24 - 1/2*denom(1/2*s12)*mt^2*s13*s14*s23 - 1/2*denom(1/2*
      s12)*mt^2*s13^2*s24 - 1/2*denom(1/2*s12)*mt^2*s13^2*s23 - 1/2*denom(1/2*
      s12)*mt^2*s12*s23*s24 - 1/2*denom(1/2*s12)*mt^2*s12*s13*s24 - 1/2*denom(
      1/2*s12)*mt^2*s12*s13*s23 + 1/2*denom(1/2*s12)*mt^2*mh^2*s23*s24 + 1/2*
      denom(1/2*s12)*mt^2*mh^2*s13*s24 + 1/2*denom(1/2*s12)*mt^2*mh^2*s13*s23
       + denom(1/2*s12)*mt^4*s24^2 + 7/2*denom(1/2*s12)*mt^4*s23*s24 + 3/2*
      denom(1/2*s12)*mt^4*s23^2 + 2*denom(1/2*s12)*mt^4*s14*s24 + 2*denom(1/2*
      s12)*mt^4*s14*s23 + 3*denom(1/2*s12)*mt^4*s13*s24 + 4*denom(1/2*s12)*
      mt^4*s13*s23 + 1/2*denom(1/2*s12)*mt^4*s13*s14 + 1/2*denom(1/2*s12)*mt^4
      *s13^2 + 1/2*denom(1/2*s12)*mt^4*s12*s24 + 1/2*denom(1/2*s12)*mt^4*s12*
      s23 + 1/2*denom(1/2*s12)*mt^4*s12*s13 - 1/2*denom(1/2*s12)*mt^4*mh^2*s24
       - 1/2*denom(1/2*s12)*mt^4*mh^2*s23 - 1/2*denom(1/2*s12)*mt^4*mh^2*s13
       - 4*denom(1/2*s12)*mt^6*s24 - 5*denom(1/2*s12)*mt^6*s23 - 2*denom(1/2*
      s12)*mt^6*s14 - 3*denom(1/2*s12)*mt^6*s13 - 1/2*denom(1/2*s12)*mt^6*s12
       + 1/2*denom(1/2*s12)*mt^6*mh^2 + 4*denom(1/2*s12)*mt^8 + 3/4*denom(1/4*
      s12^2)*s13*s14*s23^2*s24 + 1/4*denom(1/4*s12^2)*s13^2*s23*s24^2 - 3/4*
      denom(1/4*s12^2)*mt^2*s14*s23^2*s24 - 1/2*denom(1/4*s12^2)*mt^2*s13*s23*
      s24^2 - 3/4*denom(1/4*s12^2)*mt^2*s13*s23^2*s24 - 3/2*denom(1/4*s12^2)*
      mt^2*s13*s14*s23*s24 - 3/4*denom(1/4*s12^2)*mt^2*s13*s14*s23^2 - 1/4*
      denom(1/4*s12^2)*mt^2*s13^2*s24^2 - 1/2*denom(1/4*s12^2)*mt^2*s13^2*s23*
      s24 + 1/4*denom(1/4*s12^2)*mt^4*s23*s24^2 + 3/4*denom(1/4*s12^2)*mt^4*
      s23^2*s24 + 3/2*denom(1/4*s12^2)*mt^4*s14*s23*s24 + 3/4*denom(1/4*s12^2)
      *mt^4*s14*s23^2 + 1/2*denom(1/4*s12^2)*mt^4*s13*s24^2 + 5/2*denom(1/4*
      s12^2)*mt^4*s13*s23*s24 + 3/4*denom(1/4*s12^2)*mt^4*s13*s23^2 + 3/4*
      denom(1/4*s12^2)*mt^4*s13*s14*s24 + 3/2*denom(1/4*s12^2)*mt^4*s13*s14*
      s23 + 1/2*denom(1/4*s12^2)*mt^4*s13^2*s24 + 1/4*denom(1/4*s12^2)*mt^4*
      s13^2*s23 - 1/4*denom(1/4*s12^2)*mt^6*s24^2 - 2*denom(1/4*s12^2)*mt^6*
      s23*s24 - 3/4*denom(1/4*s12^2)*mt^6*s23^2 - 3/4*denom(1/4*s12^2)*mt^6*
      s14*s24 - 3/2*denom(1/4*s12^2)*mt^6*s14*s23 - 7/4*denom(1/4*s12^2)*mt^6*
      s13*s24 - 2*denom(1/4*s12^2)*mt^6*s13*s23 - 3/4*denom(1/4*s12^2)*mt^6*
      s13*s14 - 1/4*denom(1/4*s12^2)*mt^6*s13^2 + 5/4*denom(1/4*s12^2)*mt^8*
      s24 + 7/4*denom(1/4*s12^2)*mt^8*s23 + 3/4*denom(1/4*s12^2)*mt^8*s14 + 5/
      4*denom(1/4*s12^2)*mt^8*s13 - denom(1/4*s12^2)*mt^10;
 
 .sort
id KMatrix(10,23) =  1/2*s24^3 + s23*s24^2 + 1/2*s23^2*s24 + s14*s24^2 + s14*
      s23*s24 + 1/2*s14^2*s24 + s13*s24^2 + s13*s23*s24 + s13*s14*s24 + 1/2*
      s13^2*s24 + s12*s24^2 + s12*s23*s24 + s12*s14*s24 + s12*s13*s24 + 1/2*
      s12^2*s24 - mh^2*s24^2 - mh^2*s23*s24 - mh^2*s14*s24 - mh^2*s13*s24 - 
      mh^2*s12*s24 + 1/2*mh^4*s24 - 5/2*mt^2*s24^2 - 4*mt^2*s23*s24 - 3/2*mt^2
      *s23^2 - 3*mt^2*s14*s24 - 2*mt^2*s14*s23 - 1/2*mt^2*s14^2 - 3*mt^2*s13*
      s24 - 2*mt^2*s13*s23 - mt^2*s13*s14 - 1/2*mt^2*s13^2 - 3*mt^2*s12*s24 - 
      2*mt^2*s12*s23 - mt^2*s12*s14 - mt^2*s12*s13 - 1/2*mt^2*s12^2 + 3*mt^2*
      mh^2*s24 + 2*mt^2*mh^2*s23 + mt^2*mh^2*s14 + mt^2*mh^2*s13 + mt^2*mh^2*
      s12 - 1/2*mt^2*mh^4 + 5*mt^4*s24 + 5*mt^4*s23 + 3*mt^4*s14 + 3*mt^4*s13
       + 3*mt^4*s12 - 3*mt^4*mh^2 - 4*mt^6 + denom(1/2*s12)*s14*s23*s24^2 + 
      denom(1/2*s12)*s14*s23^2*s24 + denom(1/2*s12)*s14^2*s23*s24 + 1/2*denom(
      1/2*s12)*s13*s24^3 + 1/2*denom(1/2*s12)*s13*s23*s24^2 + 1/2*denom(1/2*
      s12)*s13*s14*s24^2 + denom(1/2*s12)*s13*s14*s23*s24 + 1/2*denom(1/2*s12)
      *s13^2*s24^2 + denom(1/2*s12)*s12*s14*s23*s24 + 1/2*denom(1/2*s12)*s12*
      s13*s24^2 - denom(1/2*s12)*mh^2*s14*s23*s24 - 1/2*denom(1/2*s12)*mh^2*
      s13*s24^2 - 1/2*denom(1/2*s12)*mt^2*s24^3 - 3/2*denom(1/2*s12)*mt^2*s23*
      s24^2 - denom(1/2*s12)*mt^2*s23^2*s24 - 3/2*denom(1/2*s12)*mt^2*s14*
      s24^2 - 5*denom(1/2*s12)*mt^2*s14*s23*s24 - 3/2*denom(1/2*s12)*mt^2*s14*
      s23^2 - denom(1/2*s12)*mt^2*s14^2*s24 - denom(1/2*s12)*mt^2*s14^2*s23 - 
      5/2*denom(1/2*s12)*mt^2*s13*s24^2 - 5/2*denom(1/2*s12)*mt^2*s13*s23*s24
       - 2*denom(1/2*s12)*mt^2*s13*s14*s24 - denom(1/2*s12)*mt^2*s13*s14*s23
       - denom(1/2*s12)*mt^2*s13^2*s24 - 1/2*denom(1/2*s12)*mt^2*s12*s24^2 - 
      denom(1/2*s12)*mt^2*s12*s23*s24 - denom(1/2*s12)*mt^2*s12*s14*s24 - 
      denom(1/2*s12)*mt^2*s12*s14*s23 - denom(1/2*s12)*mt^2*s12*s13*s24 + 1/2*
      denom(1/2*s12)*mt^2*mh^2*s24^2 + denom(1/2*s12)*mt^2*mh^2*s23*s24 + 
      denom(1/2*s12)*mt^2*mh^2*s14*s24 + denom(1/2*s12)*mt^2*mh^2*s14*s23 + 
      denom(1/2*s12)*mt^2*mh^2*s13*s24 + 3*denom(1/2*s12)*mt^4*s24^2 + 11/2*
      denom(1/2*s12)*mt^4*s23*s24 + 3/2*denom(1/2*s12)*mt^4*s23^2 + 5*denom(1/
      2*s12)*mt^4*s14*s24 + 5*denom(1/2*s12)*mt^4*s14*s23 + denom(1/2*s12)*
      mt^4*s14^2 + 5*denom(1/2*s12)*mt^4*s13*s24 + 2*denom(1/2*s12)*mt^4*s13*
      s23 + 3/2*denom(1/2*s12)*mt^4*s13*s14 + 1/2*denom(1/2*s12)*mt^4*s13^2 + 
      2*denom(1/2*s12)*mt^4*s12*s24 + denom(1/2*s12)*mt^4*s12*s23 + denom(1/2*
      s12)*mt^4*s12*s14 + 1/2*denom(1/2*s12)*mt^4*s12*s13 - 2*denom(1/2*s12)*
      mt^4*mh^2*s24 - denom(1/2*s12)*mt^4*mh^2*s23 - denom(1/2*s12)*mt^4*mh^2*
      s14 - 1/2*denom(1/2*s12)*mt^4*mh^2*s13 - 6*denom(1/2*s12)*mt^6*s24 - 5*
      denom(1/2*s12)*mt^6*s23 - 4*denom(1/2*s12)*mt^6*s14 - 3*denom(1/2*s12)*
      mt^6*s13 - 3/2*denom(1/2*s12)*mt^6*s12 + 3/2*denom(1/2*s12)*mt^6*mh^2 + 
      4*denom(1/2*s12)*mt^8 + 3/8*denom(1/4*s12^2)*s14^2*s23^2*s24 + 1/2*
      denom(1/4*s12^2)*s13*s14*s23*s24^2 + 1/8*denom(1/4*s12^2)*s13^2*s24^3 - 
      1/2*denom(1/4*s12^2)*mt^2*s14*s23*s24^2 - 3/4*denom(1/4*s12^2)*mt^2*s14*
      s23^2*s24 - 3/4*denom(1/4*s12^2)*mt^2*s14^2*s23*s24 - 3/8*denom(1/4*
      s12^2)*mt^2*s14^2*s23^2 - 1/4*denom(1/4*s12^2)*mt^2*s13*s24^3 - 1/2*
      denom(1/4*s12^2)*mt^2*s13*s23*s24^2 - 1/2*denom(1/4*s12^2)*mt^2*s13*s14*
      s24^2 - denom(1/4*s12^2)*mt^2*s13*s14*s23*s24 - 3/8*denom(1/4*s12^2)*
      mt^2*s13^2*s24^2 + 1/8*denom(1/4*s12^2)*mt^4*s24^3 + 1/2*denom(1/4*s12^2
      )*mt^4*s23*s24^2 + 3/8*denom(1/4*s12^2)*mt^4*s23^2*s24 + 1/2*denom(1/4*
      s12^2)*mt^4*s14*s24^2 + 5/2*denom(1/4*s12^2)*mt^4*s14*s23*s24 + 3/4*
      denom(1/4*s12^2)*mt^4*s14*s23^2 + 3/8*denom(1/4*s12^2)*mt^4*s14^2*s24 + 
      3/4*denom(1/4*s12^2)*mt^4*s14^2*s23 + 5/4*denom(1/4*s12^2)*mt^4*s13*
      s24^2 + denom(1/4*s12^2)*mt^4*s13*s23*s24 + denom(1/4*s12^2)*mt^4*s13*
      s14*s24 + 1/2*denom(1/4*s12^2)*mt^4*s13*s14*s23 + 3/8*denom(1/4*s12^2)*
      mt^4*s13^2*s24 - 7/8*denom(1/4*s12^2)*mt^6*s24^2 - 7/4*denom(1/4*s12^2)*
      mt^6*s23*s24 - 3/8*denom(1/4*s12^2)*mt^6*s23^2 - 7/4*denom(1/4*s12^2)*
      mt^6*s14*s24 - 2*denom(1/4*s12^2)*mt^6*s14*s23 - 3/8*denom(1/4*s12^2)*
      mt^6*s14^2 - 7/4*denom(1/4*s12^2)*mt^6*s13*s24 - 1/2*denom(1/4*s12^2)*
      mt^6*s13*s23 - 1/2*denom(1/4*s12^2)*mt^6*s13*s14 - 1/8*denom(1/4*s12^2)*
      mt^6*s13^2 + 7/4*denom(1/4*s12^2)*mt^8*s24 + 5/4*denom(1/4*s12^2)*mt^8*
      s23 + 5/4*denom(1/4*s12^2)*mt^8*s14 + 3/4*denom(1/4*s12^2)*mt^8*s13 - 
      denom(1/4*s12^2)*mt^10;
 
 .sort
id KMatrix(10,24) =  mt*s12*s23*s24 + mt*s12*s23^2 + mt*s12*s14*s23 + mt*s12*
      s13*s23 + mt*s12^2*s23 - mt*mh^2*s12*s23 - mt^3*s12*s24 - 3*mt^3*s12*s23
       - mt^3*s12*s14 - mt^3*s12*s13 - mt^3*s12^2 + mt^3*mh^2*s12 + 2*mt^5*s12
       + denom(1/2*s12)*mt*s12*s14*s23^2 + denom(1/2*s12)*mt*s12*s13*s23*s24
       - denom(1/2*s12)*mt^3*s12*s23*s24 - denom(1/2*s12)*mt^3*s12*s23^2 - 2*
      denom(1/2*s12)*mt^3*s12*s14*s23 - denom(1/2*s12)*mt^3*s12*s13*s24 - 
      denom(1/2*s12)*mt^3*s12*s13*s23 + denom(1/2*s12)*mt^5*s12*s24 + 3*denom(
      1/2*s12)*mt^5*s12*s23 + denom(1/2*s12)*mt^5*s12*s14 + denom(1/2*s12)*
      mt^5*s12*s13 - 2*denom(1/2*s12)*mt^7*s12 - 1/4*denom(1/4*s12^2)*mt*s12^2
      *s14*s23^2 - 1/4*denom(1/4*s12^2)*mt*s12^2*s13*s23*s24 + 1/4*denom(1/4*
      s12^2)*mt^3*s12^2*s23*s24 + 1/4*denom(1/4*s12^2)*mt^3*s12^2*s23^2 + 1/2*
      denom(1/4*s12^2)*mt^3*s12^2*s14*s23 + 1/4*denom(1/4*s12^2)*mt^3*s12^2*
      s13*s24 + 1/4*denom(1/4*s12^2)*mt^3*s12^2*s13*s23 - 1/4*denom(1/4*s12^2)
      *mt^5*s12^2*s24 - 3/4*denom(1/4*s12^2)*mt^5*s12^2*s23 - 1/4*denom(1/4*
      s12^2)*mt^5*s12^2*s14 - 1/4*denom(1/4*s12^2)*mt^5*s12^2*s13 + 1/2*denom(
      1/4*s12^2)*mt^7*s12^2;
 
 .sort
id KMatrix(10,25) =   - mt*s24^2 + mt*s23^2 - mt*s14*s24 + mt*s14*s23 - mt*s13
      *s24 + mt*s13*s23 - mt*s12*s24 + mt*s12*s23 + mt*mh^2*s24 - mt*mh^2*s23
       + 2*mt^3*s24 - 2*mt^3*s23 - denom(1/2*s12)*mt*s14*s23*s24 + denom(1/2*
      s12)*mt*s14*s23^2 - denom(1/2*s12)*mt*s13*s24^2 + denom(1/2*s12)*mt*s13*
      s23*s24 + denom(1/2*s12)*mt^3*s24^2 - denom(1/2*s12)*mt^3*s23^2 + denom(
      1/2*s12)*mt^3*s14*s24 - denom(1/2*s12)*mt^3*s14*s23 + denom(1/2*s12)*
      mt^3*s13*s24 - denom(1/2*s12)*mt^3*s13*s23 - 2*denom(1/2*s12)*mt^5*s24
       + 2*denom(1/2*s12)*mt^5*s23 + 1/4*denom(1/4*s12^2)*mt*s12*s14*s23*s24
       - 1/4*denom(1/4*s12^2)*mt*s12*s14*s23^2 + 1/4*denom(1/4*s12^2)*mt*s12*
      s13*s24^2 - 1/4*denom(1/4*s12^2)*mt*s12*s13*s23*s24 - 1/4*denom(1/4*
      s12^2)*mt^3*s12*s24^2 + 1/4*denom(1/4*s12^2)*mt^3*s12*s23^2 - 1/4*denom(
      1/4*s12^2)*mt^3*s12*s14*s24 + 1/4*denom(1/4*s12^2)*mt^3*s12*s14*s23 - 1/
      4*denom(1/4*s12^2)*mt^3*s12*s13*s24 + 1/4*denom(1/4*s12^2)*mt^3*s12*s13*
      s23 + 1/2*denom(1/4*s12^2)*mt^5*s12*s24 - 1/2*denom(1/4*s12^2)*mt^5*s12*
      s23;
 
 .sort
id KMatrix(10,26) =  1/2*mt*s12*s24^2 + mt*s12*s23*s24 + 1/2*mt*s12*s23^2 + mt
      *s12*s14*s24 + mt*s12*s14*s23 + 1/2*mt*s12*s14^2 + mt*s12*s13*s24 + mt*
      s12*s13*s23 + mt*s12*s13*s14 + 1/2*mt*s12*s13^2 + mt*s12^2*s24 + mt*
      s12^2*s23 + mt*s12^2*s14 + mt*s12^2*s13 + 1/2*mt*s12^3 - mt*mh^2*s12*s24
       - mt*mh^2*s12*s23 - mt*mh^2*s12*s14 - mt*mh^2*s12*s13 - mt*mh^2*s12^2
       + 1/2*mt*mh^4*s12 - 3*mt^3*s12*s24 - 3*mt^3*s12*s23 - 3*mt^3*s12*s14 - 
      3*mt^3*s12*s13 - 3*mt^3*s12^2 + 3*mt^3*mh^2*s12 + 4*mt^5*s12 + 1/2*
      denom(1/2*s12)*mt*s12*s14*s23*s24 + 1/2*denom(1/2*s12)*mt*s12*s14*s23^2
       + 1/2*denom(1/2*s12)*mt*s12*s14^2*s23 + 1/2*denom(1/2*s12)*mt*s12*s13*
      s24^2 + denom(1/2*s12)*mt*s12*s13*s23*s24 + 1/2*denom(1/2*s12)*mt*s12*
      s13*s23^2 + 1/2*denom(1/2*s12)*mt*s12*s13*s14*s24 + denom(1/2*s12)*mt*
      s12*s13*s14*s23 + 1/2*denom(1/2*s12)*mt*s12*s13^2*s24 + 1/2*denom(1/2*
      s12)*mt*s12*s13^2*s23 + 1/2*denom(1/2*s12)*mt*s12^2*s14*s23 + 1/2*denom(
      1/2*s12)*mt*s12^2*s13*s24 + 1/2*denom(1/2*s12)*mt*s12^2*s13*s23 - 1/2*
      denom(1/2*s12)*mt*mh^2*s12*s14*s23 - 1/2*denom(1/2*s12)*mt*mh^2*s12*s13*
      s24 - 1/2*denom(1/2*s12)*mt*mh^2*s12*s13*s23 - 1/2*denom(1/2*s12)*mt^3*
      s12*s24^2 - 3/2*denom(1/2*s12)*mt^3*s12*s23*s24 - denom(1/2*s12)*mt^3*
      s12*s23^2 - denom(1/2*s12)*mt^3*s12*s14*s24 - 3*denom(1/2*s12)*mt^3*s12*
      s14*s23 - 1/2*denom(1/2*s12)*mt^3*s12*s14^2 - 3*denom(1/2*s12)*mt^3*s12*
      s13*s24 - 3*denom(1/2*s12)*mt^3*s12*s13*s23 - 3/2*denom(1/2*s12)*mt^3*
      s12*s13*s14 - denom(1/2*s12)*mt^3*s12*s13^2 - 1/2*denom(1/2*s12)*mt^3*
      s12^2*s24 - denom(1/2*s12)*mt^3*s12^2*s23 - 1/2*denom(1/2*s12)*mt^3*
      s12^2*s14 - denom(1/2*s12)*mt^3*s12^2*s13 + 1/2*denom(1/2*s12)*mt^3*mh^2
      *s12*s24 + denom(1/2*s12)*mt^3*mh^2*s12*s23 + 1/2*denom(1/2*s12)*mt^3*
      mh^2*s12*s14 + denom(1/2*s12)*mt^3*mh^2*s12*s13 + 3*denom(1/2*s12)*mt^5*
      s12*s24 + 4*denom(1/2*s12)*mt^5*s12*s23 + 3*denom(1/2*s12)*mt^5*s12*s14
       + 4*denom(1/2*s12)*mt^5*s12*s13 + 3/2*denom(1/2*s12)*mt^5*s12^2 - 3/2*
      denom(1/2*s12)*mt^5*mh^2*s12 - 4*denom(1/2*s12)*mt^7*s12 + 1/8*denom(1/4
      *s12^2)*mt*s12*s14^2*s23^2 + 1/4*denom(1/4*s12^2)*mt*s12*s13*s14*s23*s24
       + 1/4*denom(1/4*s12^2)*mt*s12*s13*s14*s23^2 + 1/8*denom(1/4*s12^2)*mt*
      s12*s13^2*s24^2 + 1/4*denom(1/4*s12^2)*mt*s12*s13^2*s23*s24 - 1/4*denom(
      1/4*s12^2)*mt^3*s12*s14*s23*s24 - 1/2*denom(1/4*s12^2)*mt^3*s12*s14*
      s23^2 - 1/4*denom(1/4*s12^2)*mt^3*s12*s14^2*s23 - 1/4*denom(1/4*s12^2)*
      mt^3*s12*s13*s24^2 - 3/4*denom(1/4*s12^2)*mt^3*s12*s13*s23*s24 - 1/4*
      denom(1/4*s12^2)*mt^3*s12*s13*s23^2 - 1/4*denom(1/4*s12^2)*mt^3*s12*s13*
      s14*s24 - 3/4*denom(1/4*s12^2)*mt^3*s12*s13*s14*s23 - 1/2*denom(1/4*
      s12^2)*mt^3*s12*s13^2*s24 - 1/4*denom(1/4*s12^2)*mt^3*s12*s13^2*s23 + 1/
      8*denom(1/4*s12^2)*mt^5*s12*s24^2 + 1/2*denom(1/4*s12^2)*mt^5*s12*s23*
      s24 + 3/8*denom(1/4*s12^2)*mt^5*s12*s23^2 + 1/4*denom(1/4*s12^2)*mt^5*
      s12*s14*s24 + 5/4*denom(1/4*s12^2)*mt^5*s12*s14*s23 + 1/8*denom(1/4*
      s12^2)*mt^5*s12*s14^2 + 5/4*denom(1/4*s12^2)*mt^5*s12*s13*s24 + 5/4*
      denom(1/4*s12^2)*mt^5*s12*s13*s23 + 1/2*denom(1/4*s12^2)*mt^5*s12*s13*
      s14 + 3/8*denom(1/4*s12^2)*mt^5*s12*s13^2 - 3/4*denom(1/4*s12^2)*mt^7*
      s12*s24 - 5/4*denom(1/4*s12^2)*mt^7*s12*s23 - 3/4*denom(1/4*s12^2)*mt^7*
      s12*s14 - 5/4*denom(1/4*s12^2)*mt^7*s12*s13 + denom(1/4*s12^2)*mt^9*s12;
 
 .sort
id KMatrix(10,27) =   0;
 
 .sort
id KMatrix(10,28) =   - mt^3*s12*s24 - mt^3*s12*s23 - mt^3*s12*s14 - mt^3*s12*
      s13 - mt^3*s12^2 + mt^3*mh^2*s12 + 4*mt^5*s12 + 1/2*denom(1/2*s12)*mt*
      s12*s14*s24^2 + 1/2*denom(1/2*s12)*mt*s12*s14*s23*s24 + 1/2*denom(1/2*
      s12)*mt*s12*s14^2*s24 + 1/2*denom(1/2*s12)*mt*s12*s13*s14*s24 + 1/2*
      denom(1/2*s12)*mt*s12^2*s14*s24 - 1/2*denom(1/2*s12)*mt*mh^2*s12*s14*s24
       - 1/2*denom(1/2*s12)*mt^3*s12*s24^2 - 1/2*denom(1/2*s12)*mt^3*s12*s23*
      s24 - 3*denom(1/2*s12)*mt^3*s12*s14*s24 - denom(1/2*s12)*mt^3*s12*s14*
      s23 - 1/2*denom(1/2*s12)*mt^3*s12*s14^2 - denom(1/2*s12)*mt^3*s12*s13*
      s24 - denom(1/2*s12)*mt^3*s12*s13*s23 - 1/2*denom(1/2*s12)*mt^3*s12*s13*
      s14 - 1/2*denom(1/2*s12)*mt^3*s12^2*s24 - 1/2*denom(1/2*s12)*mt^3*s12^2*
      s14 + 1/2*denom(1/2*s12)*mt^3*mh^2*s12*s24 + 1/2*denom(1/2*s12)*mt^3*
      mh^2*s12*s14 + 3*denom(1/2*s12)*mt^5*s12*s24 + 2*denom(1/2*s12)*mt^5*s12
      *s23 + 3*denom(1/2*s12)*mt^5*s12*s14 + 2*denom(1/2*s12)*mt^5*s12*s13 + 1/
      2*denom(1/2*s12)*mt^5*s12^2 - 1/2*denom(1/2*s12)*mt^5*mh^2*s12 - 4*
      denom(1/2*s12)*mt^7*s12 + 1/4*denom(1/4*s12^2)*mt*s12*s14^2*s23*s24 + 1/
      4*denom(1/4*s12^2)*mt*s12*s13*s14*s24^2 + 1/2*denom(1/4*s12^2)*mt*s12*
      s13*s14*s23*s24 - 1/4*denom(1/4*s12^2)*mt^3*s12*s14*s24^2 - denom(1/4*
      s12^2)*mt^3*s12*s14*s23*s24 - 1/4*denom(1/4*s12^2)*mt^3*s12*s14^2*s24 - 
      1/4*denom(1/4*s12^2)*mt^3*s12*s14^2*s23 - 1/4*denom(1/4*s12^2)*mt^3*s12*
      s13*s24^2 - 1/2*denom(1/4*s12^2)*mt^3*s12*s13*s23*s24 - denom(1/4*s12^2)
      *mt^3*s12*s13*s14*s24 - 1/2*denom(1/4*s12^2)*mt^3*s12*s13*s14*s23 + 1/4*
      denom(1/4*s12^2)*mt^5*s12*s24^2 + 3/4*denom(1/4*s12^2)*mt^5*s12*s23*s24
       + 3/2*denom(1/4*s12^2)*mt^5*s12*s14*s24 + denom(1/4*s12^2)*mt^5*s12*s14
      *s23 + 1/4*denom(1/4*s12^2)*mt^5*s12*s14^2 + denom(1/4*s12^2)*mt^5*s12*
      s13*s24 + 1/2*denom(1/4*s12^2)*mt^5*s12*s13*s23 + 3/4*denom(1/4*s12^2)*
      mt^5*s12*s13*s14 - 5/4*denom(1/4*s12^2)*mt^7*s12*s24 - 3/4*denom(1/4*
      s12^2)*mt^7*s12*s23 - 5/4*denom(1/4*s12^2)*mt^7*s12*s14 - 3/4*denom(1/4*
      s12^2)*mt^7*s12*s13 + denom(1/4*s12^2)*mt^9*s12;
 
 .sort
id KMatrix(10,29) =   0;
 
 .sort
id KMatrix(10,30) =   - mt^3*s12*s24 - mt^3*s12*s23 - mt^3*s12*s14 - mt^3*s12*
      s13 - mt^3*s12^2 + mt^3*mh^2*s12 + 4*mt^5*s12 + 1/2*denom(1/2*s12)*mt*
      s12*s13*s23*s24 + 1/2*denom(1/2*s12)*mt*s12*s13*s23^2 + 1/2*denom(1/2*
      s12)*mt*s12*s13*s14*s23 + 1/2*denom(1/2*s12)*mt*s12*s13^2*s23 + 1/2*
      denom(1/2*s12)*mt*s12^2*s13*s23 - 1/2*denom(1/2*s12)*mt*mh^2*s12*s13*s23
       - 1/2*denom(1/2*s12)*mt^3*s12*s23*s24 - 1/2*denom(1/2*s12)*mt^3*s12*
      s23^2 - denom(1/2*s12)*mt^3*s12*s14*s24 - denom(1/2*s12)*mt^3*s12*s14*
      s23 - denom(1/2*s12)*mt^3*s12*s13*s24 - 3*denom(1/2*s12)*mt^3*s12*s13*
      s23 - 1/2*denom(1/2*s12)*mt^3*s12*s13*s14 - 1/2*denom(1/2*s12)*mt^3*s12*
      s13^2 - 1/2*denom(1/2*s12)*mt^3*s12^2*s23 - 1/2*denom(1/2*s12)*mt^3*
      s12^2*s13 + 1/2*denom(1/2*s12)*mt^3*mh^2*s12*s23 + 1/2*denom(1/2*s12)*
      mt^3*mh^2*s12*s13 + 2*denom(1/2*s12)*mt^5*s12*s24 + 3*denom(1/2*s12)*
      mt^5*s12*s23 + 2*denom(1/2*s12)*mt^5*s12*s14 + 3*denom(1/2*s12)*mt^5*s12
      *s13 + 1/2*denom(1/2*s12)*mt^5*s12^2 - 1/2*denom(1/2*s12)*mt^5*mh^2*s12
       - 4*denom(1/2*s12)*mt^7*s12 + 1/2*denom(1/4*s12^2)*mt*s12*s13*s14*s23*
      s24 + 1/4*denom(1/4*s12^2)*mt*s12*s13*s14*s23^2 + 1/4*denom(1/4*s12^2)*
      mt*s12*s13^2*s23*s24 - 1/2*denom(1/4*s12^2)*mt^3*s12*s14*s23*s24 - 1/4*
      denom(1/4*s12^2)*mt^3*s12*s14*s23^2 - denom(1/4*s12^2)*mt^3*s12*s13*s23*
      s24 - 1/4*denom(1/4*s12^2)*mt^3*s12*s13*s23^2 - 1/2*denom(1/4*s12^2)*
      mt^3*s12*s13*s14*s24 - denom(1/4*s12^2)*mt^3*s12*s13*s14*s23 - 1/4*
      denom(1/4*s12^2)*mt^3*s12*s13^2*s24 - 1/4*denom(1/4*s12^2)*mt^3*s12*
      s13^2*s23 + 3/4*denom(1/4*s12^2)*mt^5*s12*s23*s24 + 1/4*denom(1/4*s12^2)
      *mt^5*s12*s23^2 + 1/2*denom(1/4*s12^2)*mt^5*s12*s14*s24 + denom(1/4*
      s12^2)*mt^5*s12*s14*s23 + denom(1/4*s12^2)*mt^5*s12*s13*s24 + 3/2*denom(
      1/4*s12^2)*mt^5*s12*s13*s23 + 3/4*denom(1/4*s12^2)*mt^5*s12*s13*s14 + 1/
      4*denom(1/4*s12^2)*mt^5*s12*s13^2 - 3/4*denom(1/4*s12^2)*mt^7*s12*s24 - 
      5/4*denom(1/4*s12^2)*mt^7*s12*s23 - 3/4*denom(1/4*s12^2)*mt^7*s12*s14 - 
      5/4*denom(1/4*s12^2)*mt^7*s12*s13 + denom(1/4*s12^2)*mt^9*s12;
 
 .sort
id KMatrix(10,31) =   0;
 
 .sort
id KMatrix(10,32) =  1/2*mt*s12*s24^2 + mt*s12*s23*s24 + 1/2*mt*s12*s23^2 + mt
      *s12*s14*s24 + mt*s12*s14*s23 + 1/2*mt*s12*s14^2 + mt*s12*s13*s24 + mt*
      s12*s13*s23 + mt*s12*s13*s14 + 1/2*mt*s12*s13^2 + mt*s12^2*s24 + mt*
      s12^2*s23 + mt*s12^2*s14 + mt*s12^2*s13 + 1/2*mt*s12^3 - mt*mh^2*s12*s24
       - mt*mh^2*s12*s23 - mt*mh^2*s12*s14 - mt*mh^2*s12*s13 - mt*mh^2*s12^2
       + 1/2*mt*mh^4*s12 - 3*mt^3*s12*s24 - 3*mt^3*s12*s23 - 3*mt^3*s12*s14 - 
      3*mt^3*s12*s13 - 3*mt^3*s12^2 + 3*mt^3*mh^2*s12 + 4*mt^5*s12 + 1/2*
      denom(1/2*s12)*mt*s12*s14*s24^2 + denom(1/2*s12)*mt*s12*s14*s23*s24 + 1/
      2*denom(1/2*s12)*mt*s12*s14*s23^2 + 1/2*denom(1/2*s12)*mt*s12*s14^2*s24
       + 1/2*denom(1/2*s12)*mt*s12*s14^2*s23 + 1/2*denom(1/2*s12)*mt*s12*s13*
      s24^2 + 1/2*denom(1/2*s12)*mt*s12*s13*s23*s24 + denom(1/2*s12)*mt*s12*
      s13*s14*s24 + 1/2*denom(1/2*s12)*mt*s12*s13*s14*s23 + 1/2*denom(1/2*s12)
      *mt*s12*s13^2*s24 + 1/2*denom(1/2*s12)*mt*s12^2*s14*s24 + 1/2*denom(1/2*
      s12)*mt*s12^2*s14*s23 + 1/2*denom(1/2*s12)*mt*s12^2*s13*s24 - 1/2*denom(
      1/2*s12)*mt*mh^2*s12*s14*s24 - 1/2*denom(1/2*s12)*mt*mh^2*s12*s14*s23 - 
      1/2*denom(1/2*s12)*mt*mh^2*s12*s13*s24 - denom(1/2*s12)*mt^3*s12*s24^2
       - 3/2*denom(1/2*s12)*mt^3*s12*s23*s24 - 1/2*denom(1/2*s12)*mt^3*s12*
      s23^2 - 3*denom(1/2*s12)*mt^3*s12*s14*s24 - 3*denom(1/2*s12)*mt^3*s12*
      s14*s23 - denom(1/2*s12)*mt^3*s12*s14^2 - 3*denom(1/2*s12)*mt^3*s12*s13*
      s24 - denom(1/2*s12)*mt^3*s12*s13*s23 - 3/2*denom(1/2*s12)*mt^3*s12*s13*
      s14 - 1/2*denom(1/2*s12)*mt^3*s12*s13^2 - denom(1/2*s12)*mt^3*s12^2*s24
       - 1/2*denom(1/2*s12)*mt^3*s12^2*s23 - denom(1/2*s12)*mt^3*s12^2*s14 - 1/
      2*denom(1/2*s12)*mt^3*s12^2*s13 + denom(1/2*s12)*mt^3*mh^2*s12*s24 + 1/2
      *denom(1/2*s12)*mt^3*mh^2*s12*s23 + denom(1/2*s12)*mt^3*mh^2*s12*s14 + 1/
      2*denom(1/2*s12)*mt^3*mh^2*s12*s13 + 4*denom(1/2*s12)*mt^5*s12*s24 + 3*
      denom(1/2*s12)*mt^5*s12*s23 + 4*denom(1/2*s12)*mt^5*s12*s14 + 3*denom(1/
      2*s12)*mt^5*s12*s13 + 3/2*denom(1/2*s12)*mt^5*s12^2 - 3/2*denom(1/2*s12)
      *mt^5*mh^2*s12 - 4*denom(1/2*s12)*mt^7*s12 + 1/4*denom(1/4*s12^2)*mt*s12
      *s14^2*s23*s24 + 1/8*denom(1/4*s12^2)*mt*s12*s14^2*s23^2 + 1/4*denom(1/4
      *s12^2)*mt*s12*s13*s14*s24^2 + 1/4*denom(1/4*s12^2)*mt*s12*s13*s14*s23*
      s24 + 1/8*denom(1/4*s12^2)*mt*s12*s13^2*s24^2 - 1/4*denom(1/4*s12^2)*
      mt^3*s12*s14*s24^2 - 3/4*denom(1/4*s12^2)*mt^3*s12*s14*s23*s24 - 1/4*
      denom(1/4*s12^2)*mt^3*s12*s14*s23^2 - 1/4*denom(1/4*s12^2)*mt^3*s12*
      s14^2*s24 - 1/2*denom(1/4*s12^2)*mt^3*s12*s14^2*s23 - 1/2*denom(1/4*
      s12^2)*mt^3*s12*s13*s24^2 - 1/4*denom(1/4*s12^2)*mt^3*s12*s13*s23*s24 - 
      3/4*denom(1/4*s12^2)*mt^3*s12*s13*s14*s24 - 1/4*denom(1/4*s12^2)*mt^3*
      s12*s13*s14*s23 - 1/4*denom(1/4*s12^2)*mt^3*s12*s13^2*s24 + 3/8*denom(1/
      4*s12^2)*mt^5*s12*s24^2 + 1/2*denom(1/4*s12^2)*mt^5*s12*s23*s24 + 1/8*
      denom(1/4*s12^2)*mt^5*s12*s23^2 + 5/4*denom(1/4*s12^2)*mt^5*s12*s14*s24
       + 5/4*denom(1/4*s12^2)*mt^5*s12*s14*s23 + 3/8*denom(1/4*s12^2)*mt^5*s12
      *s14^2 + 5/4*denom(1/4*s12^2)*mt^5*s12*s13*s24 + 1/4*denom(1/4*s12^2)*
      mt^5*s12*s13*s23 + 1/2*denom(1/4*s12^2)*mt^5*s12*s13*s14 + 1/8*denom(1/4
      *s12^2)*mt^5*s12*s13^2 - 5/4*denom(1/4*s12^2)*mt^7*s12*s24 - 3/4*denom(1/
      4*s12^2)*mt^7*s12*s23 - 5/4*denom(1/4*s12^2)*mt^7*s12*s14 - 3/4*denom(1/
      4*s12^2)*mt^7*s12*s13 + denom(1/4*s12^2)*mt^9*s12;
 
 .sort
id KMatrix(10,33) =   0;
 
 .sort
id KMatrix(10,34) =   - 1/2*s14*s23*s24 - 1/2*s14*s23^2 - 1/2*s14^2*s23 - 1/2*
      s13*s24^2 - 1/2*s13*s23*s24 - 1/2*s13*s14*s24 - 1/2*s13*s14*s23 - 1/2*
      s13^2*s24 - s12*s24^2 - 2*s12*s23*s24 - s12*s23^2 - 2*s12*s14*s24 - 5/2*
      s12*s14*s23 - s12*s14^2 - 5/2*s12*s13*s24 - 2*s12*s13*s23 - 2*s12*s13*
      s14 - s12*s13^2 - 2*s12^2*s24 - 2*s12^2*s23 - 2*s12^2*s14 - 2*s12^2*s13
       - s12^3 + 1/2*mh^2*s14*s23 + 1/2*mh^2*s13*s24 + 2*mh^2*s12*s24 + 2*mh^2
      *s12*s23 + 2*mh^2*s12*s14 + 2*mh^2*s12*s13 + 2*mh^2*s12^2 - mh^4*s12 + 1/
      2*mt^2*s24^2 + mt^2*s23*s24 + 1/2*mt^2*s23^2 + mt^2*s14*s24 + 2*mt^2*s14
      *s23 + 1/2*mt^2*s14^2 + 2*mt^2*s13*s24 + mt^2*s13*s23 + mt^2*s13*s14 + 1/
      2*mt^2*s13^2 + 11/2*mt^2*s12*s24 + 11/2*mt^2*s12*s23 + 11/2*mt^2*s12*s14
       + 11/2*mt^2*s12*s13 + 5*mt^2*s12^2 - 1/2*mt^2*mh^2*s24 - 1/2*mt^2*mh^2*
      s23 - 1/2*mt^2*mh^2*s14 - 1/2*mt^2*mh^2*s13 - 5*mt^2*mh^2*s12 - 2*mt^4*
      s24 - 2*mt^4*s23 - 2*mt^4*s14 - 2*mt^4*s13 - 5*mt^4*s12 + mt^4*mh^2 + 2*
      mt^6 - 1/2*denom(1/2*s12)*s14^2*s23^2 - denom(1/2*s12)*s13*s14*s23*s24
       - 1/2*denom(1/2*s12)*s13^2*s24^2 - denom(1/2*s12)*s12*s14*s23*s24 - 
      denom(1/2*s12)*s12*s14*s23^2 - denom(1/2*s12)*s12*s14^2*s23 - denom(1/2*
      s12)*s12*s13*s24^2 - denom(1/2*s12)*s12*s13*s23*s24 - denom(1/2*s12)*s12
      *s13*s14*s24 - denom(1/2*s12)*s12*s13*s14*s23 - denom(1/2*s12)*s12*s13^2
      *s24 - denom(1/2*s12)*s12^2*s14*s23 - denom(1/2*s12)*s12^2*s13*s24 + 
      denom(1/2*s12)*mh^2*s12*s14*s23 + denom(1/2*s12)*mh^2*s12*s13*s24 + 
      denom(1/2*s12)*mt^2*s14*s23*s24 + denom(1/2*s12)*mt^2*s14*s23^2 + denom(
      1/2*s12)*mt^2*s14^2*s23 + denom(1/2*s12)*mt^2*s13*s24^2 + denom(1/2*s12)
      *mt^2*s13*s23*s24 + denom(1/2*s12)*mt^2*s13*s14*s24 + denom(1/2*s12)*
      mt^2*s13*s14*s23 + denom(1/2*s12)*mt^2*s13^2*s24 + denom(1/2*s12)*mt^2*
      s12*s24^2 + 2*denom(1/2*s12)*mt^2*s12*s23*s24 + denom(1/2*s12)*mt^2*s12*
      s23^2 + denom(1/2*s12)*mt^2*s12*s14*s24 + 5*denom(1/2*s12)*mt^2*s12*s14*
      s23 + denom(1/2*s12)*mt^2*s12*s14^2 + 5*denom(1/2*s12)*mt^2*s12*s13*s24
       + denom(1/2*s12)*mt^2*s12*s13*s23 + 2*denom(1/2*s12)*mt^2*s12*s13*s14
       + denom(1/2*s12)*mt^2*s12*s13^2 + denom(1/2*s12)*mt^2*s12^2*s24 + 
      denom(1/2*s12)*mt^2*s12^2*s23 + denom(1/2*s12)*mt^2*s12^2*s14 + denom(1/
      2*s12)*mt^2*s12^2*s13 - denom(1/2*s12)*mt^2*mh^2*s12*s24 - denom(1/2*s12
      )*mt^2*mh^2*s12*s23 - denom(1/2*s12)*mt^2*mh^2*s12*s14 - denom(1/2*s12)*
      mt^2*mh^2*s12*s13 - 1/2*denom(1/2*s12)*mt^4*s24^2 - denom(1/2*s12)*mt^4*
      s23*s24 - 1/2*denom(1/2*s12)*mt^4*s23^2 - denom(1/2*s12)*mt^4*s14*s24 - 
      3*denom(1/2*s12)*mt^4*s14*s23 - 1/2*denom(1/2*s12)*mt^4*s14^2 - 3*denom(
      1/2*s12)*mt^4*s13*s24 - denom(1/2*s12)*mt^4*s13*s23 - denom(1/2*s12)*
      mt^4*s13*s14 - 1/2*denom(1/2*s12)*mt^4*s13^2 - 4*denom(1/2*s12)*mt^4*s12
      *s24 - 4*denom(1/2*s12)*mt^4*s12*s23 - 4*denom(1/2*s12)*mt^4*s12*s14 - 4
      *denom(1/2*s12)*mt^4*s12*s13 - 2*denom(1/2*s12)*mt^4*s12^2 + 2*denom(1/2
      *s12)*mt^4*mh^2*s12 + 2*denom(1/2*s12)*mt^6*s24 + 2*denom(1/2*s12)*mt^6*
      s23 + 2*denom(1/2*s12)*mt^6*s14 + 2*denom(1/2*s12)*mt^6*s13 + 4*denom(1/
      2*s12)*mt^6*s12 - 2*denom(1/2*s12)*mt^8 + 1/2*denom(1/4*s12^2)*s12*s13*
      s14*s23*s24 + 1/8*denom(1/4*s12^2)*s12^2*s14*s23*s24 + 1/8*denom(1/4*
      s12^2)*s12^2*s14*s23^2 + 1/8*denom(1/4*s12^2)*s12^2*s14^2*s23 + 1/8*
      denom(1/4*s12^2)*s12^2*s13*s24^2 + 1/8*denom(1/4*s12^2)*s12^2*s13*s23*
      s24 + 1/8*denom(1/4*s12^2)*s12^2*s13*s14*s24 + 1/8*denom(1/4*s12^2)*
      s12^2*s13*s14*s23 + 1/8*denom(1/4*s12^2)*s12^2*s13^2*s24 + 1/8*denom(1/4
      *s12^2)*s12^3*s14*s23 + 1/8*denom(1/4*s12^2)*s12^3*s13*s24 - 1/8*denom(1/
      4*s12^2)*mh^2*s12^2*s14*s23 - 1/8*denom(1/4*s12^2)*mh^2*s12^2*s13*s24 - 
      1/2*denom(1/4*s12^2)*mt^2*s12*s14*s23*s24 - 1/2*denom(1/4*s12^2)*mt^2*
      s12*s13*s23*s24 - 1/2*denom(1/4*s12^2)*mt^2*s12*s13*s14*s24 - 1/2*denom(
      1/4*s12^2)*mt^2*s12*s13*s14*s23 - 1/8*denom(1/4*s12^2)*mt^2*s12^2*s24^2
       - 1/4*denom(1/4*s12^2)*mt^2*s12^2*s23*s24 - 1/8*denom(1/4*s12^2)*mt^2*
      s12^2*s23^2 - 1/4*denom(1/4*s12^2)*mt^2*s12^2*s14*s24 - 3/4*denom(1/4*
      s12^2)*mt^2*s12^2*s14*s23 - 1/8*denom(1/4*s12^2)*mt^2*s12^2*s14^2 - 3/4*
      denom(1/4*s12^2)*mt^2*s12^2*s13*s24 - 1/4*denom(1/4*s12^2)*mt^2*s12^2*
      s13*s23 - 1/4*denom(1/4*s12^2)*mt^2*s12^2*s13*s14 - 1/8*denom(1/4*s12^2)
      *mt^2*s12^2*s13^2 - 1/8*denom(1/4*s12^2)*mt^2*s12^3*s24 - 1/8*denom(1/4*
      s12^2)*mt^2*s12^3*s23 - 1/8*denom(1/4*s12^2)*mt^2*s12^3*s14 - 1/8*denom(
      1/4*s12^2)*mt^2*s12^3*s13 + 1/8*denom(1/4*s12^2)*mt^2*mh^2*s12^2*s24 + 1/
      8*denom(1/4*s12^2)*mt^2*mh^2*s12^2*s23 + 1/8*denom(1/4*s12^2)*mt^2*mh^2*
      s12^2*s14 + 1/8*denom(1/4*s12^2)*mt^2*mh^2*s12^2*s13 + 1/2*denom(1/4*
      s12^2)*mt^4*s12*s23*s24 + 1/2*denom(1/4*s12^2)*mt^4*s12*s14*s24 + 1/2*
      denom(1/4*s12^2)*mt^4*s12*s14*s23 + 1/2*denom(1/4*s12^2)*mt^4*s12*s13*
      s24 + 1/2*denom(1/4*s12^2)*mt^4*s12*s13*s23 + 1/2*denom(1/4*s12^2)*mt^4*
      s12*s13*s14 + 3/4*denom(1/4*s12^2)*mt^4*s12^2*s24 + 3/4*denom(1/4*s12^2)
      *mt^4*s12^2*s23 + 3/4*denom(1/4*s12^2)*mt^4*s12^2*s14 + 3/4*denom(1/4*
      s12^2)*mt^4*s12^2*s13 + 1/4*denom(1/4*s12^2)*mt^4*s12^3 - 1/4*denom(1/4*
      s12^2)*mt^4*mh^2*s12^2 - 1/2*denom(1/4*s12^2)*mt^6*s12*s24 - 1/2*denom(1/
      4*s12^2)*mt^6*s12*s23 - 1/2*denom(1/4*s12^2)*mt^6*s12*s14 - 1/2*denom(1/
      4*s12^2)*mt^6*s12*s13 - denom(1/4*s12^2)*mt^6*s12^2 + 1/2*denom(1/4*
      s12^2)*mt^8*s12;
 
 .sort
id KMatrix(10,35) =   - s23*s24^2 - s23^2*s24 - s14*s23*s24 - s13*s23*s24 - 
      s12*s23*s24 + mh^2*s23*s24 + mt^2*s24^2 + 4*mt^2*s23*s24 + mt^2*s23^2 + 
      mt^2*s14*s24 + mt^2*s14*s23 + mt^2*s13*s24 + mt^2*s13*s23 + mt^2*s12*s24
       + mt^2*s12*s23 - mt^2*mh^2*s24 - mt^2*mh^2*s23 - 3*mt^4*s24 - 3*mt^4*
      s23 - mt^4*s14 - mt^4*s13 - mt^4*s12 + mt^4*mh^2 + 2*mt^6 - denom(1/2*
      s12)*s14*s23^2*s24 - denom(1/2*s12)*s13*s23*s24^2 + denom(1/2*s12)*mt^2*
      s23*s24^2 + denom(1/2*s12)*mt^2*s23^2*s24 + 2*denom(1/2*s12)*mt^2*s14*
      s23*s24 + denom(1/2*s12)*mt^2*s14*s23^2 + denom(1/2*s12)*mt^2*s13*s24^2
       + 2*denom(1/2*s12)*mt^2*s13*s23*s24 - denom(1/2*s12)*mt^4*s24^2 - 4*
      denom(1/2*s12)*mt^4*s23*s24 - denom(1/2*s12)*mt^4*s23^2 - denom(1/2*s12)
      *mt^4*s14*s24 - 2*denom(1/2*s12)*mt^4*s14*s23 - 2*denom(1/2*s12)*mt^4*
      s13*s24 - denom(1/2*s12)*mt^4*s13*s23 + 3*denom(1/2*s12)*mt^6*s24 + 3*
      denom(1/2*s12)*mt^6*s23 + denom(1/2*s12)*mt^6*s14 + denom(1/2*s12)*mt^6*
      s13 - 2*denom(1/2*s12)*mt^8 + 1/4*denom(1/4*s12^2)*s12*s14*s23^2*s24 + 1/
      4*denom(1/4*s12^2)*s12*s13*s23*s24^2 - 1/4*denom(1/4*s12^2)*mt^2*s12*s23
      *s24^2 - 1/4*denom(1/4*s12^2)*mt^2*s12*s23^2*s24 - 1/2*denom(1/4*s12^2)*
      mt^2*s12*s14*s23*s24 - 1/4*denom(1/4*s12^2)*mt^2*s12*s14*s23^2 - 1/4*
      denom(1/4*s12^2)*mt^2*s12*s13*s24^2 - 1/2*denom(1/4*s12^2)*mt^2*s12*s13*
      s23*s24 + 1/4*denom(1/4*s12^2)*mt^4*s12*s24^2 + denom(1/4*s12^2)*mt^4*
      s12*s23*s24 + 1/4*denom(1/4*s12^2)*mt^4*s12*s23^2 + 1/4*denom(1/4*s12^2)
      *mt^4*s12*s14*s24 + 1/2*denom(1/4*s12^2)*mt^4*s12*s14*s23 + 1/2*denom(1/
      4*s12^2)*mt^4*s12*s13*s24 + 1/4*denom(1/4*s12^2)*mt^4*s12*s13*s23 - 3/4*
      denom(1/4*s12^2)*mt^6*s12*s24 - 3/4*denom(1/4*s12^2)*mt^6*s12*s23 - 1/4*
      denom(1/4*s12^2)*mt^6*s12*s14 - 1/4*denom(1/4*s12^2)*mt^6*s12*s13 + 1/2*
      denom(1/4*s12^2)*mt^8*s12;
 
 .sort
id KMatrix(10,36) =  mt*s12*s23*s24 + mt*s12*s23^2 + mt*s12*s14*s23 + mt*s12*
      s13*s23 + mt*s12^2*s23 - mt*mh^2*s12*s23 - mt^3*s12*s24 - 3*mt^3*s12*s23
       - mt^3*s12*s14 - mt^3*s12*s13 - mt^3*s12^2 + mt^3*mh^2*s12 + 2*mt^5*s12
       + denom(1/2*s12)*mt*s12*s14*s23^2 + denom(1/2*s12)*mt*s12*s13*s23*s24
       - denom(1/2*s12)*mt^3*s12*s23*s24 - denom(1/2*s12)*mt^3*s12*s23^2 - 2*
      denom(1/2*s12)*mt^3*s12*s14*s23 - denom(1/2*s12)*mt^3*s12*s13*s24 - 
      denom(1/2*s12)*mt^3*s12*s13*s23 + denom(1/2*s12)*mt^5*s12*s24 + 3*denom(
      1/2*s12)*mt^5*s12*s23 + denom(1/2*s12)*mt^5*s12*s14 + denom(1/2*s12)*
      mt^5*s12*s13 - 2*denom(1/2*s12)*mt^7*s12 - 1/4*denom(1/4*s12^2)*mt*s12^2
      *s14*s23^2 - 1/4*denom(1/4*s12^2)*mt*s12^2*s13*s23*s24 + 1/4*denom(1/4*
      s12^2)*mt^3*s12^2*s23*s24 + 1/4*denom(1/4*s12^2)*mt^3*s12^2*s23^2 + 1/2*
      denom(1/4*s12^2)*mt^3*s12^2*s14*s23 + 1/4*denom(1/4*s12^2)*mt^3*s12^2*
      s13*s24 + 1/4*denom(1/4*s12^2)*mt^3*s12^2*s13*s23 - 1/4*denom(1/4*s12^2)
      *mt^5*s12^2*s24 - 3/4*denom(1/4*s12^2)*mt^5*s12^2*s23 - 1/4*denom(1/4*
      s12^2)*mt^5*s12^2*s14 - 1/4*denom(1/4*s12^2)*mt^5*s12^2*s13 + 1/2*denom(
      1/4*s12^2)*mt^7*s12^2;
 
 .sort
id KMatrix(11,1) =   - mt^3*s24^2 + mt^3*s23^2 - mt^3*s14*s24 + mt^3*s14*s23
       - mt^3*s13*s24 + mt^3*s13*s23 - mt^3*s12*s24 + mt^3*s12*s23 + mt^3*mh^2
      *s24 - mt^3*mh^2*s23 + 2*mt^5*s24 - 2*mt^5*s23 + 1/2*denom(1/2*s12)*mt*
      s13*s23*s24^2 - 1/2*denom(1/2*s12)*mt*s13*s23^3 + 1/2*denom(1/2*s12)*mt*
      s13*s14*s23*s24 - 1/2*denom(1/2*s12)*mt*s13*s14*s23^2 + 1/2*denom(1/2*
      s12)*mt*s13^2*s23*s24 - 1/2*denom(1/2*s12)*mt*s13^2*s23^2 + 1/2*denom(1/
      2*s12)*mt*s12*s13*s23*s24 - 1/2*denom(1/2*s12)*mt*s12*s13*s23^2 - 1/2*
      denom(1/2*s12)*mt*mh^2*s13*s23*s24 + 1/2*denom(1/2*s12)*mt*mh^2*s13*
      s23^2 - 1/2*denom(1/2*s12)*mt^3*s23*s24^2 + 1/2*denom(1/2*s12)*mt^3*
      s23^3 - denom(1/2*s12)*mt^3*s14*s23*s24 + denom(1/2*s12)*mt^3*s14*s23^2
       - denom(1/2*s12)*mt^3*s13*s24^2 - denom(1/2*s12)*mt^3*s13*s23*s24 + 2*
      denom(1/2*s12)*mt^3*s13*s23^2 - 1/2*denom(1/2*s12)*mt^3*s13*s14*s24 + 1/
      2*denom(1/2*s12)*mt^3*s13*s14*s23 - 1/2*denom(1/2*s12)*mt^3*s13^2*s24 + 
      1/2*denom(1/2*s12)*mt^3*s13^2*s23 - 1/2*denom(1/2*s12)*mt^3*s12*s23*s24
       + 1/2*denom(1/2*s12)*mt^3*s12*s23^2 - 1/2*denom(1/2*s12)*mt^3*s12*s13*
      s24 + 1/2*denom(1/2*s12)*mt^3*s12*s13*s23 + 1/2*denom(1/2*s12)*mt^3*mh^2
      *s23*s24 - 1/2*denom(1/2*s12)*mt^3*mh^2*s23^2 + 1/2*denom(1/2*s12)*mt^3*
      mh^2*s13*s24 - 1/2*denom(1/2*s12)*mt^3*mh^2*s13*s23 + denom(1/2*s12)*
      mt^5*s24^2 + denom(1/2*s12)*mt^5*s23*s24 - 2*denom(1/2*s12)*mt^5*s23^2
       + denom(1/2*s12)*mt^5*s14*s24 - denom(1/2*s12)*mt^5*s14*s23 + 2*denom(1/
      2*s12)*mt^5*s13*s24 - 2*denom(1/2*s12)*mt^5*s13*s23 + 1/2*denom(1/2*s12)
      *mt^5*s12*s24 - 1/2*denom(1/2*s12)*mt^5*s12*s23 - 1/2*denom(1/2*s12)*
      mt^5*mh^2*s24 + 1/2*denom(1/2*s12)*mt^5*mh^2*s23 - 2*denom(1/2*s12)*mt^7
      *s24 + 2*denom(1/2*s12)*mt^7*s23 + 1/4*denom(1/4*s12^2)*mt*s13*s14*s23^2
      *s24 - 1/4*denom(1/4*s12^2)*mt*s13*s14*s23^3 + 1/4*denom(1/4*s12^2)*mt*
      s13^2*s23*s24^2 - 1/4*denom(1/4*s12^2)*mt*s13^2*s23^2*s24 - 1/4*denom(1/
      4*s12^2)*mt^3*s14*s23^2*s24 + 1/4*denom(1/4*s12^2)*mt^3*s14*s23^3 - 1/2*
      denom(1/4*s12^2)*mt^3*s13*s23*s24^2 + 1/4*denom(1/4*s12^2)*mt^3*s13*
      s23^2*s24 + 1/4*denom(1/4*s12^2)*mt^3*s13*s23^3 - 1/2*denom(1/4*s12^2)*
      mt^3*s13*s14*s23*s24 + 1/2*denom(1/4*s12^2)*mt^3*s13*s14*s23^2 - 1/4*
      denom(1/4*s12^2)*mt^3*s13^2*s24^2 + 1/4*denom(1/4*s12^2)*mt^3*s13^2*
      s23^2 + 1/4*denom(1/4*s12^2)*mt^5*s23*s24^2 - 1/4*denom(1/4*s12^2)*mt^5*
      s23^3 + 1/2*denom(1/4*s12^2)*mt^5*s14*s23*s24 - 1/2*denom(1/4*s12^2)*
      mt^5*s14*s23^2 + 1/2*denom(1/4*s12^2)*mt^5*s13*s24^2 + 1/2*denom(1/4*
      s12^2)*mt^5*s13*s23*s24 - denom(1/4*s12^2)*mt^5*s13*s23^2 + 1/4*denom(1/
      4*s12^2)*mt^5*s13*s14*s24 - 1/4*denom(1/4*s12^2)*mt^5*s13*s14*s23 + 1/4*
      denom(1/4*s12^2)*mt^5*s13^2*s24 - 1/4*denom(1/4*s12^2)*mt^5*s13^2*s23 - 
      1/4*denom(1/4*s12^2)*mt^7*s24^2 - 1/2*denom(1/4*s12^2)*mt^7*s23*s24 + 3/
      4*denom(1/4*s12^2)*mt^7*s23^2 - 1/4*denom(1/4*s12^2)*mt^7*s14*s24 + 1/4*
      denom(1/4*s12^2)*mt^7*s14*s23 - 3/4*denom(1/4*s12^2)*mt^7*s13*s24 + 3/4*
      denom(1/4*s12^2)*mt^7*s13*s23 + 1/2*denom(1/4*s12^2)*mt^9*s24 - 1/2*
      denom(1/4*s12^2)*mt^9*s23;
 
 .sort
id KMatrix(11,2) =  1/2*mt*s24^3 + 1/2*mt*s23*s24^2 - 1/2*mt*s23^2*s24 - 1/2*
      mt*s23^3 + mt*s14*s24^2 - mt*s14*s23^2 + 1/2*mt*s14^2*s24 - 1/2*mt*s14^2
      *s23 + mt*s13*s24^2 - mt*s13*s23^2 + mt*s13*s14*s24 - mt*s13*s14*s23 + 1/
      2*mt*s13^2*s24 - 1/2*mt*s13^2*s23 + mt*s12*s24^2 - mt*s12*s23^2 + mt*s12
      *s14*s24 - mt*s12*s14*s23 + mt*s12*s13*s24 - mt*s12*s13*s23 + 1/2*mt*
      s12^2*s24 - 1/2*mt*s12^2*s23 - mt*mh^2*s24^2 + mt*mh^2*s23^2 - mt*mh^2*
      s14*s24 + mt*mh^2*s14*s23 - mt*mh^2*s13*s24 + mt*mh^2*s13*s23 - mt*mh^2*
      s12*s24 + mt*mh^2*s12*s23 + 1/2*mt*mh^4*s24 - 1/2*mt*mh^4*s23 - 2*mt^3*
      s24^2 + 2*mt^3*s23^2 - 2*mt^3*s14*s24 + 2*mt^3*s14*s23 - 2*mt^3*s13*s24
       + 2*mt^3*s13*s23 - 2*mt^3*s12*s24 + 2*mt^3*s12*s23 + 2*mt^3*mh^2*s24 - 
      2*mt^3*mh^2*s23 + 2*mt^5*s24 - 2*mt^5*s23 + 1/2*denom(1/2*s12)*mt*s14*
      s23*s24^2 - 1/2*denom(1/2*s12)*mt*s14*s23^3 + 1/2*denom(1/2*s12)*mt*
      s14^2*s23*s24 - 1/2*denom(1/2*s12)*mt*s14^2*s23^2 + 1/2*denom(1/2*s12)*
      mt*s13*s24^3 - 1/2*denom(1/2*s12)*mt*s13*s23^2*s24 + 1/2*denom(1/2*s12)*
      mt*s13*s14*s24^2 - 1/2*denom(1/2*s12)*mt*s13*s14*s23^2 + 1/2*denom(1/2*
      s12)*mt*s13^2*s24^2 - 1/2*denom(1/2*s12)*mt*s13^2*s23*s24 + 1/2*denom(1/
      2*s12)*mt*s12*s14*s23*s24 - 1/2*denom(1/2*s12)*mt*s12*s14*s23^2 + 1/2*
      denom(1/2*s12)*mt*s12*s13*s24^2 - 1/2*denom(1/2*s12)*mt*s12*s13*s23*s24
       - 1/2*denom(1/2*s12)*mt*mh^2*s14*s23*s24 + 1/2*denom(1/2*s12)*mt*mh^2*
      s14*s23^2 - 1/2*denom(1/2*s12)*mt*mh^2*s13*s24^2 + 1/2*denom(1/2*s12)*mt
      *mh^2*s13*s23*s24 - 1/2*denom(1/2*s12)*mt^3*s24^3 - 1/2*denom(1/2*s12)*
      mt^3*s23*s24^2 + 1/2*denom(1/2*s12)*mt^3*s23^2*s24 + 1/2*denom(1/2*s12)*
      mt^3*s23^3 - denom(1/2*s12)*mt^3*s14*s24^2 - denom(1/2*s12)*mt^3*s14*s23
      *s24 + 2*denom(1/2*s12)*mt^3*s14*s23^2 - 1/2*denom(1/2*s12)*mt^3*s14^2*
      s24 + 1/2*denom(1/2*s12)*mt^3*s14^2*s23 - 2*denom(1/2*s12)*mt^3*s13*
      s24^2 + denom(1/2*s12)*mt^3*s13*s23*s24 + denom(1/2*s12)*mt^3*s13*s23^2
       - denom(1/2*s12)*mt^3*s13*s14*s24 + denom(1/2*s12)*mt^3*s13*s14*s23 - 1/
      2*denom(1/2*s12)*mt^3*s13^2*s24 + 1/2*denom(1/2*s12)*mt^3*s13^2*s23 - 1/
      2*denom(1/2*s12)*mt^3*s12*s24^2 + 1/2*denom(1/2*s12)*mt^3*s12*s23^2 - 1/
      2*denom(1/2*s12)*mt^3*s12*s14*s24 + 1/2*denom(1/2*s12)*mt^3*s12*s14*s23
       - 1/2*denom(1/2*s12)*mt^3*s12*s13*s24 + 1/2*denom(1/2*s12)*mt^3*s12*s13
      *s23 + 1/2*denom(1/2*s12)*mt^3*mh^2*s24^2 - 1/2*denom(1/2*s12)*mt^3*mh^2
      *s23^2 + 1/2*denom(1/2*s12)*mt^3*mh^2*s14*s24 - 1/2*denom(1/2*s12)*mt^3*
      mh^2*s14*s23 + 1/2*denom(1/2*s12)*mt^3*mh^2*s13*s24 - 1/2*denom(1/2*s12)
      *mt^3*mh^2*s13*s23 + 2*denom(1/2*s12)*mt^5*s24^2 - 2*denom(1/2*s12)*mt^5
      *s23^2 + 2*denom(1/2*s12)*mt^5*s14*s24 - 2*denom(1/2*s12)*mt^5*s14*s23
       + 2*denom(1/2*s12)*mt^5*s13*s24 - 2*denom(1/2*s12)*mt^5*s13*s23 + 
      denom(1/2*s12)*mt^5*s12*s24 - denom(1/2*s12)*mt^5*s12*s23 - denom(1/2*
      s12)*mt^5*mh^2*s24 + denom(1/2*s12)*mt^5*mh^2*s23 - 2*denom(1/2*s12)*
      mt^7*s24 + 2*denom(1/2*s12)*mt^7*s23 + 1/8*denom(1/4*s12^2)*mt*s14^2*
      s23^2*s24 - 1/8*denom(1/4*s12^2)*mt*s14^2*s23^3 + 1/4*denom(1/4*s12^2)*
      mt*s13*s14*s23*s24^2 - 1/4*denom(1/4*s12^2)*mt*s13*s14*s23^2*s24 + 1/8*
      denom(1/4*s12^2)*mt*s13^2*s24^3 - 1/8*denom(1/4*s12^2)*mt*s13^2*s23*
      s24^2 - 1/4*denom(1/4*s12^2)*mt^3*s14*s23*s24^2 + 1/4*denom(1/4*s12^2)*
      mt^3*s14*s23^3 - 1/4*denom(1/4*s12^2)*mt^3*s14^2*s23*s24 + 1/4*denom(1/4
      *s12^2)*mt^3*s14^2*s23^2 - 1/4*denom(1/4*s12^2)*mt^3*s13*s24^3 + 1/4*
      denom(1/4*s12^2)*mt^3*s13*s23^2*s24 - 1/4*denom(1/4*s12^2)*mt^3*s13*s14*
      s24^2 + 1/4*denom(1/4*s12^2)*mt^3*s13*s14*s23^2 - 1/4*denom(1/4*s12^2)*
      mt^3*s13^2*s24^2 + 1/4*denom(1/4*s12^2)*mt^3*s13^2*s23*s24 + 1/8*denom(1/
      4*s12^2)*mt^5*s24^3 + 1/8*denom(1/4*s12^2)*mt^5*s23*s24^2 - 1/8*denom(1/
      4*s12^2)*mt^5*s23^2*s24 - 1/8*denom(1/4*s12^2)*mt^5*s23^3 + 1/4*denom(1/
      4*s12^2)*mt^5*s14*s24^2 + 1/2*denom(1/4*s12^2)*mt^5*s14*s23*s24 - 3/4*
      denom(1/4*s12^2)*mt^5*s14*s23^2 + 1/8*denom(1/4*s12^2)*mt^5*s14^2*s24 - 
      1/8*denom(1/4*s12^2)*mt^5*s14^2*s23 + 3/4*denom(1/4*s12^2)*mt^5*s13*
      s24^2 - 1/2*denom(1/4*s12^2)*mt^5*s13*s23*s24 - 1/4*denom(1/4*s12^2)*
      mt^5*s13*s23^2 + 1/4*denom(1/4*s12^2)*mt^5*s13*s14*s24 - 1/4*denom(1/4*
      s12^2)*mt^5*s13*s14*s23 + 1/8*denom(1/4*s12^2)*mt^5*s13^2*s24 - 1/8*
      denom(1/4*s12^2)*mt^5*s13^2*s23 - 1/2*denom(1/4*s12^2)*mt^7*s24^2 + 1/2*
      denom(1/4*s12^2)*mt^7*s23^2 - 1/2*denom(1/4*s12^2)*mt^7*s14*s24 + 1/2*
      denom(1/4*s12^2)*mt^7*s14*s23 - 1/2*denom(1/4*s12^2)*mt^7*s13*s24 + 1/2*
      denom(1/4*s12^2)*mt^7*s13*s23 + 1/2*denom(1/4*s12^2)*mt^9*s24 - 1/2*
      denom(1/4*s12^2)*mt^9*s23;
 
 .sort
id KMatrix(11,3) =  2*mt^5*s24 - 2*mt^5*s23 - denom(1/2*s12)*mt^3*s14*s24^2 + 
      denom(1/2*s12)*mt^3*s14*s23*s24 - denom(1/2*s12)*mt^3*s13*s23*s24 + 
      denom(1/2*s12)*mt^3*s13*s23^2 + denom(1/2*s12)*mt^5*s24^2 - denom(1/2*
      s12)*mt^5*s23^2 + denom(1/2*s12)*mt^5*s14*s24 - denom(1/2*s12)*mt^5*s14*
      s23 + denom(1/2*s12)*mt^5*s13*s24 - denom(1/2*s12)*mt^5*s13*s23 - 2*
      denom(1/2*s12)*mt^7*s24 + 2*denom(1/2*s12)*mt^7*s23 + 1/2*denom(1/4*
      s12^2)*mt*s13*s14*s23*s24^2 - 1/2*denom(1/4*s12^2)*mt*s13*s14*s23^2*s24
       - 1/2*denom(1/4*s12^2)*mt^3*s14*s23*s24^2 + 1/2*denom(1/4*s12^2)*mt^3*
      s14*s23^2*s24 - 1/2*denom(1/4*s12^2)*mt^3*s13*s23*s24^2 + 1/2*denom(1/4*
      s12^2)*mt^3*s13*s23^2*s24 - 1/2*denom(1/4*s12^2)*mt^3*s13*s14*s24^2 + 1/
      2*denom(1/4*s12^2)*mt^3*s13*s14*s23^2 + 1/2*denom(1/4*s12^2)*mt^5*s23*
      s24^2 - 1/2*denom(1/4*s12^2)*mt^5*s23^2*s24 + 1/2*denom(1/4*s12^2)*mt^5*
      s14*s24^2 - 1/2*denom(1/4*s12^2)*mt^5*s14*s23^2 + 1/2*denom(1/4*s12^2)*
      mt^5*s13*s24^2 - 1/2*denom(1/4*s12^2)*mt^5*s13*s23^2 + 1/2*denom(1/4*
      s12^2)*mt^5*s13*s14*s24 - 1/2*denom(1/4*s12^2)*mt^5*s13*s14*s23 - 1/2*
      denom(1/4*s12^2)*mt^7*s24^2 + 1/2*denom(1/4*s12^2)*mt^7*s23^2 - 1/2*
      denom(1/4*s12^2)*mt^7*s14*s24 + 1/2*denom(1/4*s12^2)*mt^7*s14*s23 - 1/2*
      denom(1/4*s12^2)*mt^7*s13*s24 + 1/2*denom(1/4*s12^2)*mt^7*s13*s23 + 1/2*
      denom(1/4*s12^2)*mt^9*s24 - 1/2*denom(1/4*s12^2)*mt^9*s23;
 
 .sort
id KMatrix(11,4) =   - mt^3*s24^2 + mt^3*s23^2 - mt^3*s14*s24 + mt^3*s14*s23
       - mt^3*s13*s24 + mt^3*s13*s23 - mt^3*s12*s24 + mt^3*s12*s23 + mt^3*mh^2
      *s24 - mt^3*mh^2*s23 + 2*mt^5*s24 - 2*mt^5*s23 + 1/2*denom(1/2*s12)*mt*
      s14*s24^3 - 1/2*denom(1/2*s12)*mt*s14*s23^2*s24 + 1/2*denom(1/2*s12)*mt*
      s14^2*s24^2 - 1/2*denom(1/2*s12)*mt*s14^2*s23*s24 + 1/2*denom(1/2*s12)*
      mt*s13*s14*s24^2 - 1/2*denom(1/2*s12)*mt*s13*s14*s23*s24 + 1/2*denom(1/2
      *s12)*mt*s12*s14*s24^2 - 1/2*denom(1/2*s12)*mt*s12*s14*s23*s24 - 1/2*
      denom(1/2*s12)*mt*mh^2*s14*s24^2 + 1/2*denom(1/2*s12)*mt*mh^2*s14*s23*
      s24 - 1/2*denom(1/2*s12)*mt^3*s24^3 + 1/2*denom(1/2*s12)*mt^3*s23^2*s24
       - 2*denom(1/2*s12)*mt^3*s14*s24^2 + denom(1/2*s12)*mt^3*s14*s23*s24 + 
      denom(1/2*s12)*mt^3*s14*s23^2 - 1/2*denom(1/2*s12)*mt^3*s14^2*s24 + 1/2*
      denom(1/2*s12)*mt^3*s14^2*s23 - denom(1/2*s12)*mt^3*s13*s24^2 + denom(1/
      2*s12)*mt^3*s13*s23*s24 - 1/2*denom(1/2*s12)*mt^3*s13*s14*s24 + 1/2*
      denom(1/2*s12)*mt^3*s13*s14*s23 - 1/2*denom(1/2*s12)*mt^3*s12*s24^2 + 1/
      2*denom(1/2*s12)*mt^3*s12*s23*s24 - 1/2*denom(1/2*s12)*mt^3*s12*s14*s24
       + 1/2*denom(1/2*s12)*mt^3*s12*s14*s23 + 1/2*denom(1/2*s12)*mt^3*mh^2*
      s24^2 - 1/2*denom(1/2*s12)*mt^3*mh^2*s23*s24 + 1/2*denom(1/2*s12)*mt^3*
      mh^2*s14*s24 - 1/2*denom(1/2*s12)*mt^3*mh^2*s14*s23 + 2*denom(1/2*s12)*
      mt^5*s24^2 - denom(1/2*s12)*mt^5*s23*s24 - denom(1/2*s12)*mt^5*s23^2 + 2
      *denom(1/2*s12)*mt^5*s14*s24 - 2*denom(1/2*s12)*mt^5*s14*s23 + denom(1/2
      *s12)*mt^5*s13*s24 - denom(1/2*s12)*mt^5*s13*s23 + 1/2*denom(1/2*s12)*
      mt^5*s12*s24 - 1/2*denom(1/2*s12)*mt^5*s12*s23 - 1/2*denom(1/2*s12)*mt^5
      *mh^2*s24 + 1/2*denom(1/2*s12)*mt^5*mh^2*s23 - 2*denom(1/2*s12)*mt^7*s24
       + 2*denom(1/2*s12)*mt^7*s23 + 1/4*denom(1/4*s12^2)*mt*s14^2*s23*s24^2
       - 1/4*denom(1/4*s12^2)*mt*s14^2*s23^2*s24 + 1/4*denom(1/4*s12^2)*mt*s13
      *s14*s24^3 - 1/4*denom(1/4*s12^2)*mt*s13*s14*s23*s24^2 - 1/4*denom(1/4*
      s12^2)*mt^3*s14*s24^3 - 1/4*denom(1/4*s12^2)*mt^3*s14*s23*s24^2 + 1/2*
      denom(1/4*s12^2)*mt^3*s14*s23^2*s24 - 1/4*denom(1/4*s12^2)*mt^3*s14^2*
      s24^2 + 1/4*denom(1/4*s12^2)*mt^3*s14^2*s23^2 - 1/4*denom(1/4*s12^2)*
      mt^3*s13*s24^3 + 1/4*denom(1/4*s12^2)*mt^3*s13*s23*s24^2 - 1/2*denom(1/4
      *s12^2)*mt^3*s13*s14*s24^2 + 1/2*denom(1/4*s12^2)*mt^3*s13*s14*s23*s24
       + 1/4*denom(1/4*s12^2)*mt^5*s24^3 - 1/4*denom(1/4*s12^2)*mt^5*s23^2*s24
       + denom(1/4*s12^2)*mt^5*s14*s24^2 - 1/2*denom(1/4*s12^2)*mt^5*s14*s23*
      s24 - 1/2*denom(1/4*s12^2)*mt^5*s14*s23^2 + 1/4*denom(1/4*s12^2)*mt^5*
      s14^2*s24 - 1/4*denom(1/4*s12^2)*mt^5*s14^2*s23 + 1/2*denom(1/4*s12^2)*
      mt^5*s13*s24^2 - 1/2*denom(1/4*s12^2)*mt^5*s13*s23*s24 + 1/4*denom(1/4*
      s12^2)*mt^5*s13*s14*s24 - 1/4*denom(1/4*s12^2)*mt^5*s13*s14*s23 - 3/4*
      denom(1/4*s12^2)*mt^7*s24^2 + 1/2*denom(1/4*s12^2)*mt^7*s23*s24 + 1/4*
      denom(1/4*s12^2)*mt^7*s23^2 - 3/4*denom(1/4*s12^2)*mt^7*s14*s24 + 3/4*
      denom(1/4*s12^2)*mt^7*s14*s23 - 1/4*denom(1/4*s12^2)*mt^7*s13*s24 + 1/4*
      denom(1/4*s12^2)*mt^7*s13*s23 + 1/2*denom(1/4*s12^2)*mt^9*s24 - 1/2*
      denom(1/4*s12^2)*mt^9*s23;
 
 .sort
id KMatrix(11,5) =   - 1/2*mt^2*s14*s23*s24 - 1/2*mt^2*s14*s23^2 - 1/2*mt^2*
      s14^2*s23 - 1/2*mt^2*s13*s24^2 - 1/2*mt^2*s13*s23*s24 - 1/2*mt^2*s13*s14
      *s24 - 1/2*mt^2*s13*s14*s23 - 1/2*mt^2*s13^2*s24 - 1/2*mt^2*s12*s24^2 - 
      mt^2*s12*s23*s24 - 1/2*mt^2*s12*s23^2 - mt^2*s12*s14*s24 - 3/2*mt^2*s12*
      s14*s23 - 1/2*mt^2*s12*s14^2 - 3/2*mt^2*s12*s13*s24 - mt^2*s12*s13*s23
       - mt^2*s12*s13*s14 - 1/2*mt^2*s12*s13^2 - mt^2*s12^2*s24 - mt^2*s12^2*
      s23 - mt^2*s12^2*s14 - mt^2*s12^2*s13 - 1/2*mt^2*s12^3 + 1/2*mt^2*mh^2*
      s14*s23 + 1/2*mt^2*mh^2*s13*s24 + mt^2*mh^2*s12*s24 + mt^2*mh^2*s12*s23
       + mt^2*mh^2*s12*s14 + mt^2*mh^2*s12*s13 + mt^2*mh^2*s12^2 - 1/2*mt^2*
      mh^4*s12 + 1/2*mt^4*s24^2 + mt^4*s23*s24 + 1/2*mt^4*s23^2 + mt^4*s14*s24
       + 2*mt^4*s14*s23 + 1/2*mt^4*s14^2 + 2*mt^4*s13*s24 + mt^4*s13*s23 + 
      mt^4*s13*s14 + 1/2*mt^4*s13^2 + 7/2*mt^4*s12*s24 + 7/2*mt^4*s12*s23 + 7/
      2*mt^4*s12*s14 + 7/2*mt^4*s12*s13 + 3*mt^4*s12^2 - 1/2*mt^4*mh^2*s24 - 1/
      2*mt^4*mh^2*s23 - 1/2*mt^4*mh^2*s14 - 1/2*mt^4*mh^2*s13 - 3*mt^4*mh^2*
      s12 - 2*mt^6*s24 - 2*mt^6*s23 - 2*mt^6*s14 - 2*mt^6*s13 - 5*mt^6*s12 + 
      mt^6*mh^2 + 2*mt^8 + 1/4*denom(1/2*s12)*s13*s14*s23^2*s24 + 1/4*denom(1/
      2*s12)*s13*s14*s23^3 + 1/4*denom(1/2*s12)*s13*s14^2*s23^2 + 1/4*denom(1/
      2*s12)*s13^2*s23*s24^2 + 1/4*denom(1/2*s12)*s13^2*s23^2*s24 + 1/4*denom(
      1/2*s12)*s13^2*s14*s23*s24 + 1/4*denom(1/2*s12)*s13^2*s14*s23^2 + 1/4*
      denom(1/2*s12)*s13^3*s23*s24 + 1/4*denom(1/2*s12)*s12*s13*s23*s24^2 + 1/
      2*denom(1/2*s12)*s12*s13*s23^2*s24 + 1/4*denom(1/2*s12)*s12*s13*s23^3 + 
      1/2*denom(1/2*s12)*s12*s13*s14*s23*s24 + 3/4*denom(1/2*s12)*s12*s13*s14*
      s23^2 + 1/4*denom(1/2*s12)*s12*s13*s14^2*s23 + 3/4*denom(1/2*s12)*s12*
      s13^2*s23*s24 + 1/2*denom(1/2*s12)*s12*s13^2*s23^2 + 1/2*denom(1/2*s12)*
      s12*s13^2*s14*s23 + 1/4*denom(1/2*s12)*s12*s13^3*s23 + 1/2*denom(1/2*s12
      )*s12^2*s13*s23*s24 + 1/2*denom(1/2*s12)*s12^2*s13*s23^2 + 1/2*denom(1/2
      *s12)*s12^2*s13*s14*s23 + 1/2*denom(1/2*s12)*s12^2*s13^2*s23 + 1/4*
      denom(1/2*s12)*s12^3*s13*s23 - 1/4*denom(1/2*s12)*mh^2*s13*s14*s23^2 - 1/
      4*denom(1/2*s12)*mh^2*s13^2*s23*s24 - 1/2*denom(1/2*s12)*mh^2*s12*s13*
      s23*s24 - 1/2*denom(1/2*s12)*mh^2*s12*s13*s23^2 - 1/2*denom(1/2*s12)*
      mh^2*s12*s13*s14*s23 - 1/2*denom(1/2*s12)*mh^2*s12*s13^2*s23 - 1/2*
      denom(1/2*s12)*mh^2*s12^2*s13*s23 + 1/4*denom(1/2*s12)*mh^4*s12*s13*s23
       - 1/4*denom(1/2*s12)*mt^2*s14*s23^2*s24 - 1/4*denom(1/2*s12)*mt^2*s14*
      s23^3 - 1/2*denom(1/2*s12)*mt^2*s14^2*s23^2 - 1/2*denom(1/2*s12)*mt^2*
      s13*s23*s24^2 - 3/4*denom(1/2*s12)*mt^2*s13*s23^2*s24 - 1/4*denom(1/2*
      s12)*mt^2*s13*s23^3 - 3/2*denom(1/2*s12)*mt^2*s13*s14*s23*s24 - 3/2*
      denom(1/2*s12)*mt^2*s13*s14*s23^2 - 1/2*denom(1/2*s12)*mt^2*s13*s14^2*
      s23 - 1/2*denom(1/2*s12)*mt^2*s13^2*s24^2 - 3/2*denom(1/2*s12)*mt^2*
      s13^2*s23*s24 - 1/2*denom(1/2*s12)*mt^2*s13^2*s23^2 - 1/4*denom(1/2*s12)
      *mt^2*s13^2*s14*s24 - 3/4*denom(1/2*s12)*mt^2*s13^2*s14*s23 - 1/4*denom(
      1/2*s12)*mt^2*s13^3*s24 - 1/4*denom(1/2*s12)*mt^2*s13^3*s23 - 1/4*denom(
      1/2*s12)*mt^2*s12*s23*s24^2 - 1/2*denom(1/2*s12)*mt^2*s12*s23^2*s24 - 1/
      4*denom(1/2*s12)*mt^2*s12*s23^3 - 3/4*denom(1/2*s12)*mt^2*s12*s14*s23*
      s24 - denom(1/2*s12)*mt^2*s12*s14*s23^2 - 1/2*denom(1/2*s12)*mt^2*s12*
      s14^2*s23 - 1/2*denom(1/2*s12)*mt^2*s12*s13*s24^2 - 13/4*denom(1/2*s12)*
      mt^2*s12*s13*s23*s24 - 5/2*denom(1/2*s12)*mt^2*s12*s13*s23^2 - 3/4*
      denom(1/2*s12)*mt^2*s12*s13*s14*s24 - 13/4*denom(1/2*s12)*mt^2*s12*s13*
      s14*s23 - 1/4*denom(1/2*s12)*mt^2*s12*s13*s14^2 - denom(1/2*s12)*mt^2*
      s12*s13^2*s24 - 5/2*denom(1/2*s12)*mt^2*s12*s13^2*s23 - 1/2*denom(1/2*
      s12)*mt^2*s12*s13^2*s14 - 1/4*denom(1/2*s12)*mt^2*s12*s13^3 - 1/2*denom(
      1/2*s12)*mt^2*s12^2*s23*s24 - 1/2*denom(1/2*s12)*mt^2*s12^2*s23^2 - 3/4*
      denom(1/2*s12)*mt^2*s12^2*s14*s23 - 3/4*denom(1/2*s12)*mt^2*s12^2*s13*
      s24 - 5/2*denom(1/2*s12)*mt^2*s12^2*s13*s23 - 1/2*denom(1/2*s12)*mt^2*
      s12^2*s13*s14 - 1/2*denom(1/2*s12)*mt^2*s12^2*s13^2 - 1/4*denom(1/2*s12)
      *mt^2*s12^3*s23 - 1/4*denom(1/2*s12)*mt^2*s12^3*s13 + 1/4*denom(1/2*s12)
      *mt^2*mh^2*s14*s23^2 + 1/2*denom(1/2*s12)*mt^2*mh^2*s13*s23*s24 + 1/4*
      denom(1/2*s12)*mt^2*mh^2*s13*s23^2 + 1/2*denom(1/2*s12)*mt^2*mh^2*s13*
      s14*s23 + 1/4*denom(1/2*s12)*mt^2*mh^2*s13^2*s24 + 1/4*denom(1/2*s12)*
      mt^2*mh^2*s13^2*s23 + 1/2*denom(1/2*s12)*mt^2*mh^2*s12*s23*s24 + 1/2*
      denom(1/2*s12)*mt^2*mh^2*s12*s23^2 + 3/4*denom(1/2*s12)*mt^2*mh^2*s12*
      s14*s23 + 3/4*denom(1/2*s12)*mt^2*mh^2*s12*s13*s24 + 5/2*denom(1/2*s12)*
      mt^2*mh^2*s12*s13*s23 + 1/2*denom(1/2*s12)*mt^2*mh^2*s12*s13*s14 + 1/2*
      denom(1/2*s12)*mt^2*mh^2*s12*s13^2 + 1/2*denom(1/2*s12)*mt^2*mh^2*s12^2*
      s23 + 1/2*denom(1/2*s12)*mt^2*mh^2*s12^2*s13 - 1/4*denom(1/2*s12)*mt^2*
      mh^4*s12*s23 - 1/4*denom(1/2*s12)*mt^2*mh^4*s12*s13 + 1/4*denom(1/2*s12)
      *mt^4*s23*s24^2 + 1/2*denom(1/2*s12)*mt^4*s23^2*s24 + 1/4*denom(1/2*s12)
      *mt^4*s23^3 + 5/4*denom(1/2*s12)*mt^4*s14*s23*s24 + 7/4*denom(1/2*s12)*
      mt^4*s14*s23^2 + denom(1/2*s12)*mt^4*s14^2*s23 + denom(1/2*s12)*mt^4*s13
      *s24^2 + 13/4*denom(1/2*s12)*mt^4*s13*s23*s24 + 7/4*denom(1/2*s12)*mt^4*
      s13*s23^2 + 5/4*denom(1/2*s12)*mt^4*s13*s14*s24 + 13/4*denom(1/2*s12)*
      mt^4*s13*s14*s23 + 1/4*denom(1/2*s12)*mt^4*s13*s14^2 + 7/4*denom(1/2*s12
      )*mt^4*s13^2*s24 + 7/4*denom(1/2*s12)*mt^4*s13^2*s23 + 1/2*denom(1/2*s12
      )*mt^4*s13^2*s14 + 1/4*denom(1/2*s12)*mt^4*s13^3 + 1/2*denom(1/2*s12)*
      mt^4*s12*s24^2 + 11/4*denom(1/2*s12)*mt^4*s12*s23*s24 + 9/4*denom(1/2*
      s12)*mt^4*s12*s23^2 + denom(1/2*s12)*mt^4*s12*s14*s24 + 4*denom(1/2*s12)
      *mt^4*s12*s14*s23 + 1/2*denom(1/2*s12)*mt^4*s12*s14^2 + 4*denom(1/2*s12)
      *mt^4*s12*s13*s24 + 7*denom(1/2*s12)*mt^4*s12*s13*s23 + 11/4*denom(1/2*
      s12)*mt^4*s12*s13*s14 + 9/4*denom(1/2*s12)*mt^4*s12*s13^2 + 3/4*denom(1/
      2*s12)*mt^4*s12^2*s24 + 9/4*denom(1/2*s12)*mt^4*s12^2*s23 + 3/4*denom(1/
      2*s12)*mt^4*s12^2*s14 + 9/4*denom(1/2*s12)*mt^4*s12^2*s13 + 1/4*denom(1/
      2*s12)*mt^4*s12^3 - 1/4*denom(1/2*s12)*mt^4*mh^2*s23*s24 - 1/4*denom(1/2
      *s12)*mt^4*mh^2*s23^2 - 1/2*denom(1/2*s12)*mt^4*mh^2*s14*s23 - 1/2*
      denom(1/2*s12)*mt^4*mh^2*s13*s24 - denom(1/2*s12)*mt^4*mh^2*s13*s23 - 1/
      4*denom(1/2*s12)*mt^4*mh^2*s13*s14 - 1/4*denom(1/2*s12)*mt^4*mh^2*s13^2
       - 3/4*denom(1/2*s12)*mt^4*mh^2*s12*s24 - 9/4*denom(1/2*s12)*mt^4*mh^2*
      s12*s23 - 3/4*denom(1/2*s12)*mt^4*mh^2*s12*s14 - 9/4*denom(1/2*s12)*mt^4
      *mh^2*s12*s13 - 1/2*denom(1/2*s12)*mt^4*mh^2*s12^2 + 1/4*denom(1/2*s12)*
      mt^4*mh^4*s12 - 1/2*denom(1/2*s12)*mt^6*s24^2 - 2*denom(1/2*s12)*mt^6*
      s23*s24 - 3/2*denom(1/2*s12)*mt^6*s23^2 - denom(1/2*s12)*mt^6*s14*s24 - 
      7/2*denom(1/2*s12)*mt^6*s14*s23 - 1/2*denom(1/2*s12)*mt^6*s14^2 - 7/2*
      denom(1/2*s12)*mt^6*s13*s24 - 4*denom(1/2*s12)*mt^6*s13*s23 - 2*denom(1/
      2*s12)*mt^6*s13*s14 - 3/2*denom(1/2*s12)*mt^6*s13^2 - 13/4*denom(1/2*s12
      )*mt^6*s12*s24 - 23/4*denom(1/2*s12)*mt^6*s12*s23 - 13/4*denom(1/2*s12)*
      mt^6*s12*s14 - 23/4*denom(1/2*s12)*mt^6*s12*s13 - 2*denom(1/2*s12)*mt^6*
      s12^2 + 1/4*denom(1/2*s12)*mt^6*mh^2*s24 + 3/4*denom(1/2*s12)*mt^6*mh^2*
      s23 + 1/4*denom(1/2*s12)*mt^6*mh^2*s14 + 3/4*denom(1/2*s12)*mt^6*mh^2*
      s13 + 2*denom(1/2*s12)*mt^6*mh^2*s12 + 2*denom(1/2*s12)*mt^8*s24 + 3*
      denom(1/2*s12)*mt^8*s23 + 2*denom(1/2*s12)*mt^8*s14 + 3*denom(1/2*s12)*
      mt^8*s13 + 9/2*denom(1/2*s12)*mt^8*s12 - 1/2*denom(1/2*s12)*mt^8*mh^2 - 
      2*denom(1/2*s12)*mt^10 + 1/8*denom(1/4*s12^2)*s13*s14^2*s23^3 + 1/4*
      denom(1/4*s12^2)*s13^2*s14*s23^2*s24 + 1/8*denom(1/4*s12^2)*s13^3*s23*
      s24^2 + 1/8*denom(1/4*s12^2)*s12*s13*s14*s23^2*s24 + 1/8*denom(1/4*s12^2
      )*s12*s13*s14*s23^3 + 1/8*denom(1/4*s12^2)*s12*s13*s14^2*s23^2 + 1/8*
      denom(1/4*s12^2)*s12*s13^2*s23*s24^2 + 1/8*denom(1/4*s12^2)*s12*s13^2*
      s23^2*s24 + 1/8*denom(1/4*s12^2)*s12*s13^2*s14*s23*s24 + 1/8*denom(1/4*
      s12^2)*s12*s13^2*s14*s23^2 + 1/8*denom(1/4*s12^2)*s12*s13^3*s23*s24 + 1/
      8*denom(1/4*s12^2)*s12^2*s13*s14*s23^2 + 1/8*denom(1/4*s12^2)*s12^2*
      s13^2*s23*s24 - 1/8*denom(1/4*s12^2)*mh^2*s12*s13*s14*s23^2 - 1/8*denom(
      1/4*s12^2)*mh^2*s12*s13^2*s23*s24 - 1/8*denom(1/4*s12^2)*mt^2*s14^2*
      s23^3 - 1/2*denom(1/4*s12^2)*mt^2*s13*s14*s23^2*s24 - 1/4*denom(1/4*
      s12^2)*mt^2*s13*s14*s23^3 - 3/8*denom(1/4*s12^2)*mt^2*s13*s14^2*s23^2 - 
      3/8*denom(1/4*s12^2)*mt^2*s13^2*s23*s24^2 - 1/4*denom(1/4*s12^2)*mt^2*
      s13^2*s23^2*s24 - 1/2*denom(1/4*s12^2)*mt^2*s13^2*s14*s23*s24 - 1/4*
      denom(1/4*s12^2)*mt^2*s13^2*s14*s23^2 - 1/8*denom(1/4*s12^2)*mt^2*s13^3*
      s24^2 - 1/4*denom(1/4*s12^2)*mt^2*s13^3*s23*s24 - 1/8*denom(1/4*s12^2)*
      mt^2*s12*s14*s23^2*s24 - 1/8*denom(1/4*s12^2)*mt^2*s12*s14*s23^3 - 1/8*
      denom(1/4*s12^2)*mt^2*s12*s14^2*s23^2 - 1/4*denom(1/4*s12^2)*mt^2*s12*
      s13*s23*s24^2 - 3/8*denom(1/4*s12^2)*mt^2*s12*s13*s23^2*s24 - 1/8*denom(
      1/4*s12^2)*mt^2*s12*s13*s23^3 - 1/2*denom(1/4*s12^2)*mt^2*s12*s13*s14*
      s23*s24 - denom(1/4*s12^2)*mt^2*s12*s13*s14*s23^2 - 1/4*denom(1/4*s12^2)
      *mt^2*s12*s13*s14^2*s23 - 1/8*denom(1/4*s12^2)*mt^2*s12*s13^2*s24^2 - 
      denom(1/4*s12^2)*mt^2*s12*s13^2*s23*s24 - 1/4*denom(1/4*s12^2)*mt^2*s12*
      s13^2*s23^2 - 1/8*denom(1/4*s12^2)*mt^2*s12*s13^2*s14*s24 - 3/8*denom(1/
      4*s12^2)*mt^2*s12*s13^2*s14*s23 - 1/8*denom(1/4*s12^2)*mt^2*s12*s13^3*
      s24 - 1/8*denom(1/4*s12^2)*mt^2*s12*s13^3*s23 - 1/8*denom(1/4*s12^2)*
      mt^2*s12^2*s14*s23^2 - 1/4*denom(1/4*s12^2)*mt^2*s12^2*s13*s23*s24 - 1/8
      *denom(1/4*s12^2)*mt^2*s12^2*s13*s23^2 - 1/4*denom(1/4*s12^2)*mt^2*s12^2
      *s13*s14*s23 - 1/8*denom(1/4*s12^2)*mt^2*s12^2*s13^2*s24 - 1/8*denom(1/4
      *s12^2)*mt^2*s12^2*s13^2*s23 + 1/8*denom(1/4*s12^2)*mt^2*mh^2*s12*s14*
      s23^2 + 1/4*denom(1/4*s12^2)*mt^2*mh^2*s12*s13*s23*s24 + 1/8*denom(1/4*
      s12^2)*mt^2*mh^2*s12*s13*s23^2 + 1/4*denom(1/4*s12^2)*mt^2*mh^2*s12*s13*
      s14*s23 + 1/8*denom(1/4*s12^2)*mt^2*mh^2*s12*s13^2*s24 + 1/8*denom(1/4*
      s12^2)*mt^2*mh^2*s12*s13^2*s23 + 1/4*denom(1/4*s12^2)*mt^4*s14*s23^2*s24
       + 1/4*denom(1/4*s12^2)*mt^4*s14*s23^3 + 3/8*denom(1/4*s12^2)*mt^4*s14^2
      *s23^2 + 3/8*denom(1/4*s12^2)*mt^4*s13*s23*s24^2 + 1/2*denom(1/4*s12^2)*
      mt^4*s13*s23^2*s24 + 1/8*denom(1/4*s12^2)*mt^4*s13*s23^3 + denom(1/4*
      s12^2)*mt^4*s13*s14*s23*s24 + 5/4*denom(1/4*s12^2)*mt^4*s13*s14*s23^2 + 
      3/8*denom(1/4*s12^2)*mt^4*s13*s14^2*s23 + 3/8*denom(1/4*s12^2)*mt^4*
      s13^2*s24^2 + 5/4*denom(1/4*s12^2)*mt^4*s13^2*s23*s24 + 1/4*denom(1/4*
      s12^2)*mt^4*s13^2*s23^2 + 1/4*denom(1/4*s12^2)*mt^4*s13^2*s14*s24 + 1/2*
      denom(1/4*s12^2)*mt^4*s13^2*s14*s23 + 1/4*denom(1/4*s12^2)*mt^4*s13^3*
      s24 + 1/8*denom(1/4*s12^2)*mt^4*s13^3*s23 + 1/8*denom(1/4*s12^2)*mt^4*
      s12*s23*s24^2 + 1/4*denom(1/4*s12^2)*mt^4*s12*s23^2*s24 + 1/8*denom(1/4*
      s12^2)*mt^4*s12*s23^3 + 3/8*denom(1/4*s12^2)*mt^4*s12*s14*s23*s24 + 7/8*
      denom(1/4*s12^2)*mt^4*s12*s14*s23^2 + 1/4*denom(1/4*s12^2)*mt^4*s12*
      s14^2*s23 + 1/4*denom(1/4*s12^2)*mt^4*s12*s13*s24^2 + 15/8*denom(1/4*
      s12^2)*mt^4*s12*s13*s23*s24 + 9/8*denom(1/4*s12^2)*mt^4*s12*s13*s23^2 + 
      3/8*denom(1/4*s12^2)*mt^4*s12*s13*s14*s24 + 15/8*denom(1/4*s12^2)*mt^4*
      s12*s13*s14*s23 + 1/8*denom(1/4*s12^2)*mt^4*s12*s13*s14^2 + 7/8*denom(1/
      4*s12^2)*mt^4*s12*s13^2*s24 + 9/8*denom(1/4*s12^2)*mt^4*s12*s13^2*s23 + 
      1/4*denom(1/4*s12^2)*mt^4*s12*s13^2*s14 + 1/8*denom(1/4*s12^2)*mt^4*s12*
      s13^3 + 1/8*denom(1/4*s12^2)*mt^4*s12^2*s23*s24 + 1/8*denom(1/4*s12^2)*
      mt^4*s12^2*s23^2 + 1/4*denom(1/4*s12^2)*mt^4*s12^2*s14*s23 + 1/4*denom(1/
      4*s12^2)*mt^4*s12^2*s13*s24 + 1/2*denom(1/4*s12^2)*mt^4*s12^2*s13*s23 + 
      1/8*denom(1/4*s12^2)*mt^4*s12^2*s13*s14 + 1/8*denom(1/4*s12^2)*mt^4*
      s12^2*s13^2 - 1/8*denom(1/4*s12^2)*mt^4*mh^2*s12*s23*s24 - 1/8*denom(1/4
      *s12^2)*mt^4*mh^2*s12*s23^2 - 1/4*denom(1/4*s12^2)*mt^4*mh^2*s12*s14*s23
       - 1/4*denom(1/4*s12^2)*mt^4*mh^2*s12*s13*s24 - 1/2*denom(1/4*s12^2)*
      mt^4*mh^2*s12*s13*s23 - 1/8*denom(1/4*s12^2)*mt^4*mh^2*s12*s13*s14 - 1/8
      *denom(1/4*s12^2)*mt^4*mh^2*s12*s13^2 - 1/8*denom(1/4*s12^2)*mt^6*s23*
      s24^2 - 1/4*denom(1/4*s12^2)*mt^6*s23^2*s24 - 1/8*denom(1/4*s12^2)*mt^6*
      s23^3 - 1/2*denom(1/4*s12^2)*mt^6*s14*s23*s24 - denom(1/4*s12^2)*mt^6*
      s14*s23^2 - 3/8*denom(1/4*s12^2)*mt^6*s14^2*s23 - 3/8*denom(1/4*s12^2)*
      mt^6*s13*s24^2 - 7/4*denom(1/4*s12^2)*mt^6*s13*s23*s24 - 7/8*denom(1/4*
      s12^2)*mt^6*s13*s23^2 - 1/2*denom(1/4*s12^2)*mt^6*s13*s14*s24 - 7/4*
      denom(1/4*s12^2)*mt^6*s13*s14*s23 - 1/8*denom(1/4*s12^2)*mt^6*s13*s14^2
       - denom(1/4*s12^2)*mt^6*s13^2*s24 - 7/8*denom(1/4*s12^2)*mt^6*s13^2*s23
       - 1/4*denom(1/4*s12^2)*mt^6*s13^2*s14 - 1/8*denom(1/4*s12^2)*mt^6*s13^3
       - 1/8*denom(1/4*s12^2)*mt^6*s12*s24^2 - denom(1/4*s12^2)*mt^6*s12*s23*
      s24 - 7/8*denom(1/4*s12^2)*mt^6*s12*s23^2 - 1/4*denom(1/4*s12^2)*mt^6*
      s12*s14*s24 - 3/2*denom(1/4*s12^2)*mt^6*s12*s14*s23 - 1/8*denom(1/4*
      s12^2)*mt^6*s12*s14^2 - 3/2*denom(1/4*s12^2)*mt^6*s12*s13*s24 - 11/4*
      denom(1/4*s12^2)*mt^6*s12*s13*s23 - denom(1/4*s12^2)*mt^6*s12*s13*s14 - 
      7/8*denom(1/4*s12^2)*mt^6*s12*s13^2 - 1/8*denom(1/4*s12^2)*mt^6*s12^2*
      s24 - 3/8*denom(1/4*s12^2)*mt^6*s12^2*s23 - 1/8*denom(1/4*s12^2)*mt^6*
      s12^2*s14 - 3/8*denom(1/4*s12^2)*mt^6*s12^2*s13 + 1/8*denom(1/4*s12^2)*
      mt^6*mh^2*s12*s24 + 3/8*denom(1/4*s12^2)*mt^6*mh^2*s12*s23 + 1/8*denom(1/
      4*s12^2)*mt^6*mh^2*s12*s14 + 3/8*denom(1/4*s12^2)*mt^6*mh^2*s12*s13 + 1/
      8*denom(1/4*s12^2)*mt^8*s24^2 + 3/4*denom(1/4*s12^2)*mt^8*s23*s24 + 5/8*
      denom(1/4*s12^2)*mt^8*s23^2 + 1/4*denom(1/4*s12^2)*mt^8*s14*s24 + 5/4*
      denom(1/4*s12^2)*mt^8*s14*s23 + 1/8*denom(1/4*s12^2)*mt^8*s14^2 + 5/4*
      denom(1/4*s12^2)*mt^8*s13*s24 + 7/4*denom(1/4*s12^2)*mt^8*s13*s23 + 3/4*
      denom(1/4*s12^2)*mt^8*s13*s14 + 5/8*denom(1/4*s12^2)*mt^8*s13^2 + 3/4*
      denom(1/4*s12^2)*mt^8*s12*s24 + 7/4*denom(1/4*s12^2)*mt^8*s12*s23 + 3/4*
      denom(1/4*s12^2)*mt^8*s12*s14 + 7/4*denom(1/4*s12^2)*mt^8*s12*s13 + 1/4*
      denom(1/4*s12^2)*mt^8*s12^2 - 1/4*denom(1/4*s12^2)*mt^8*mh^2*s12 - 1/2*
      denom(1/4*s12^2)*mt^10*s24 - denom(1/4*s12^2)*mt^10*s23 - 1/2*denom(1/4*
      s12^2)*mt^10*s14 - denom(1/4*s12^2)*mt^10*s13 - denom(1/4*s12^2)*mt^10*
      s12 + 1/2*denom(1/4*s12^2)*mt^12;
 
 .sort
id KMatrix(11,6) =  1/4*s14*s23*s24^2 + 1/2*s14*s23^2*s24 + 1/4*s14*s23^3 + 1/
      2*s14^2*s23*s24 + 1/2*s14^2*s23^2 + 1/4*s14^3*s23 + 1/4*s13*s24^3 + 1/2*
      s13*s23*s24^2 + 1/4*s13*s23^2*s24 + 1/2*s13*s14*s24^2 + s13*s14*s23*s24
       + 1/2*s13*s14*s23^2 + 1/4*s13*s14^2*s24 + 1/2*s13*s14^2*s23 + 1/2*s13^2
      *s24^2 + 1/2*s13^2*s23*s24 + 1/2*s13^2*s14*s24 + 1/4*s13^2*s14*s23 + 1/4
      *s13^3*s24 + 1/4*s12*s24^3 + 3/4*s12*s23*s24^2 + 3/4*s12*s23^2*s24 + 1/4
      *s12*s23^3 + 3/4*s12*s14*s24^2 + 2*s12*s14*s23*s24 + 5/4*s12*s14*s23^2
       + 3/4*s12*s14^2*s24 + 5/4*s12*s14^2*s23 + 1/4*s12*s14^3 + 5/4*s12*s13*
      s24^2 + 2*s12*s13*s23*s24 + 3/4*s12*s13*s23^2 + 2*s12*s13*s14*s24 + 2*
      s12*s13*s14*s23 + 3/4*s12*s13*s14^2 + 5/4*s12*s13^2*s24 + 3/4*s12*s13^2*
      s23 + 3/4*s12*s13^2*s14 + 1/4*s12*s13^3 + 3/4*s12^2*s24^2 + 3/2*s12^2*
      s23*s24 + 3/4*s12^2*s23^2 + 3/2*s12^2*s14*s24 + 7/4*s12^2*s14*s23 + 3/4*
      s12^2*s14^2 + 7/4*s12^2*s13*s24 + 3/2*s12^2*s13*s23 + 3/2*s12^2*s13*s14
       + 3/4*s12^2*s13^2 + 3/4*s12^3*s24 + 3/4*s12^3*s23 + 3/4*s12^3*s14 + 3/4
      *s12^3*s13 + 1/4*s12^4 - 1/2*mh^2*s14*s23*s24 - 1/2*mh^2*s14*s23^2 - 1/2
      *mh^2*s14^2*s23 - 1/2*mh^2*s13*s24^2 - 1/2*mh^2*s13*s23*s24 - 1/2*mh^2*
      s13*s14*s24 - 1/2*mh^2*s13*s14*s23 - 1/2*mh^2*s13^2*s24 - 3/4*mh^2*s12*
      s24^2 - 3/2*mh^2*s12*s23*s24 - 3/4*mh^2*s12*s23^2 - 3/2*mh^2*s12*s14*s24
       - 2*mh^2*s12*s14*s23 - 3/4*mh^2*s12*s14^2 - 2*mh^2*s12*s13*s24 - 3/2*
      mh^2*s12*s13*s23 - 3/2*mh^2*s12*s13*s14 - 3/4*mh^2*s12*s13^2 - 3/2*mh^2*
      s12^2*s24 - 3/2*mh^2*s12^2*s23 - 3/2*mh^2*s12^2*s14 - 3/2*mh^2*s12^2*s13
       - 3/4*mh^2*s12^3 + 1/4*mh^4*s14*s23 + 1/4*mh^4*s13*s24 + 3/4*mh^4*s12*
      s24 + 3/4*mh^4*s12*s23 + 3/4*mh^4*s12*s14 + 3/4*mh^4*s12*s13 + 3/4*mh^4*
      s12^2 - 1/4*mh^6*s12 - 1/4*mt^2*s24^3 - 3/4*mt^2*s23*s24^2 - 3/4*mt^2*
      s23^2*s24 - 1/4*mt^2*s23^3 - 3/4*mt^2*s14*s24^2 - 5/2*mt^2*s14*s23*s24
       - 7/4*mt^2*s14*s23^2 - 3/4*mt^2*s14^2*s24 - 7/4*mt^2*s14^2*s23 - 1/4*
      mt^2*s14^3 - 7/4*mt^2*s13*s24^2 - 5/2*mt^2*s13*s23*s24 - 3/4*mt^2*s13*
      s23^2 - 5/2*mt^2*s13*s14*s24 - 5/2*mt^2*s13*s14*s23 - 3/4*mt^2*s13*s14^2
       - 7/4*mt^2*s13^2*s24 - 3/4*mt^2*s13^2*s23 - 3/4*mt^2*s13^2*s14 - 1/4*
      mt^2*s13^3 - 5/2*mt^2*s12*s24^2 - 5*mt^2*s12*s23*s24 - 5/2*mt^2*s12*
      s23^2 - 5*mt^2*s12*s14*s24 - 6*mt^2*s12*s14*s23 - 5/2*mt^2*s12*s14^2 - 6
      *mt^2*s12*s13*s24 - 5*mt^2*s12*s13*s23 - 5*mt^2*s12*s13*s14 - 5/2*mt^2*
      s12*s13^2 - 17/4*mt^2*s12^2*s24 - 17/4*mt^2*s12^2*s23 - 17/4*mt^2*s12^2*
      s14 - 17/4*mt^2*s12^2*s13 - 2*mt^2*s12^3 + 1/2*mt^2*mh^2*s24^2 + mt^2*
      mh^2*s23*s24 + 1/2*mt^2*mh^2*s23^2 + mt^2*mh^2*s14*s24 + 2*mt^2*mh^2*s14
      *s23 + 1/2*mt^2*mh^2*s14^2 + 2*mt^2*mh^2*s13*s24 + mt^2*mh^2*s13*s23 + 
      mt^2*mh^2*s13*s14 + 1/2*mt^2*mh^2*s13^2 + 9/2*mt^2*mh^2*s12*s24 + 9/2*
      mt^2*mh^2*s12*s23 + 9/2*mt^2*mh^2*s12*s14 + 9/2*mt^2*mh^2*s12*s13 + 4*
      mt^2*mh^2*s12^2 - 1/4*mt^2*mh^4*s24 - 1/4*mt^2*mh^4*s23 - 1/4*mt^2*mh^4*
      s14 - 1/4*mt^2*mh^4*s13 - 2*mt^2*mh^4*s12 + 3/2*mt^4*s24^2 + 3*mt^4*s23*
      s24 + 3/2*mt^4*s23^2 + 3*mt^4*s14*s24 + 4*mt^4*s14*s23 + 3/2*mt^4*s14^2
       + 4*mt^4*s13*s24 + 3*mt^4*s13*s23 + 3*mt^4*s13*s14 + 3/2*mt^4*s13^2 + 7
      *mt^4*s12*s24 + 7*mt^4*s12*s23 + 7*mt^4*s12*s14 + 7*mt^4*s12*s13 + 11/2*
      mt^4*s12^2 - 2*mt^4*mh^2*s24 - 2*mt^4*mh^2*s23 - 2*mt^4*mh^2*s14 - 2*
      mt^4*mh^2*s13 - 6*mt^4*mh^2*s12 + 1/2*mt^4*mh^4 - 3*mt^6*s24 - 3*mt^6*
      s23 - 3*mt^6*s14 - 3*mt^6*s13 - 6*mt^6*s12 + 2*mt^6*mh^2 + 2*mt^8 + 1/4*
      denom(1/2*s12)*s14^2*s23^2*s24 + 1/4*denom(1/2*s12)*s14^2*s23^3 + 1/4*
      denom(1/2*s12)*s14^3*s23^2 + 1/2*denom(1/2*s12)*s13*s14*s23*s24^2 + 1/2*
      denom(1/2*s12)*s13*s14*s23^2*s24 + 1/2*denom(1/2*s12)*s13*s14^2*s23*s24
       + 1/4*denom(1/2*s12)*s13*s14^2*s23^2 + 1/4*denom(1/2*s12)*s13^2*s24^3
       + 1/4*denom(1/2*s12)*s13^2*s23*s24^2 + 1/4*denom(1/2*s12)*s13^2*s14*
      s24^2 + 1/2*denom(1/2*s12)*s13^2*s14*s23*s24 + 1/4*denom(1/2*s12)*s13^3*
      s24^2 + 1/4*denom(1/2*s12)*s12*s14*s23*s24^2 + 1/2*denom(1/2*s12)*s12*
      s14*s23^2*s24 + 1/4*denom(1/2*s12)*s12*s14*s23^3 + 1/2*denom(1/2*s12)*
      s12*s14^2*s23*s24 + 3/4*denom(1/2*s12)*s12*s14^2*s23^2 + 1/4*denom(1/2*
      s12)*s12*s14^3*s23 + 1/4*denom(1/2*s12)*s12*s13*s24^3 + 1/2*denom(1/2*
      s12)*s12*s13*s23*s24^2 + 1/4*denom(1/2*s12)*s12*s13*s23^2*s24 + 1/2*
      denom(1/2*s12)*s12*s13*s14*s24^2 + 3/2*denom(1/2*s12)*s12*s13*s14*s23*
      s24 + 1/2*denom(1/2*s12)*s12*s13*s14*s23^2 + 1/4*denom(1/2*s12)*s12*s13*
      s14^2*s24 + 1/2*denom(1/2*s12)*s12*s13*s14^2*s23 + 3/4*denom(1/2*s12)*
      s12*s13^2*s24^2 + 1/2*denom(1/2*s12)*s12*s13^2*s23*s24 + 1/2*denom(1/2*
      s12)*s12*s13^2*s14*s24 + 1/4*denom(1/2*s12)*s12*s13^2*s14*s23 + 1/4*
      denom(1/2*s12)*s12*s13^3*s24 + 1/2*denom(1/2*s12)*s12^2*s14*s23*s24 + 1/
      2*denom(1/2*s12)*s12^2*s14*s23^2 + 1/2*denom(1/2*s12)*s12^2*s14^2*s23 + 
      1/2*denom(1/2*s12)*s12^2*s13*s24^2 + 1/2*denom(1/2*s12)*s12^2*s13*s23*
      s24 + 1/2*denom(1/2*s12)*s12^2*s13*s14*s24 + 1/2*denom(1/2*s12)*s12^2*
      s13*s14*s23 + 1/2*denom(1/2*s12)*s12^2*s13^2*s24 + 1/4*denom(1/2*s12)*
      s12^3*s14*s23 + 1/4*denom(1/2*s12)*s12^3*s13*s24 - 1/4*denom(1/2*s12)*
      mh^2*s14^2*s23^2 - 1/2*denom(1/2*s12)*mh^2*s13*s14*s23*s24 - 1/4*denom(1/
      2*s12)*mh^2*s13^2*s24^2 - 1/2*denom(1/2*s12)*mh^2*s12*s14*s23*s24 - 1/2*
      denom(1/2*s12)*mh^2*s12*s14*s23^2 - 1/2*denom(1/2*s12)*mh^2*s12*s14^2*
      s23 - 1/2*denom(1/2*s12)*mh^2*s12*s13*s24^2 - 1/2*denom(1/2*s12)*mh^2*
      s12*s13*s23*s24 - 1/2*denom(1/2*s12)*mh^2*s12*s13*s14*s24 - 1/2*denom(1/
      2*s12)*mh^2*s12*s13*s14*s23 - 1/2*denom(1/2*s12)*mh^2*s12*s13^2*s24 - 1/
      2*denom(1/2*s12)*mh^2*s12^2*s14*s23 - 1/2*denom(1/2*s12)*mh^2*s12^2*s13*
      s24 + 1/4*denom(1/2*s12)*mh^4*s12*s14*s23 + 1/4*denom(1/2*s12)*mh^4*s12*
      s13*s24 - 1/2*denom(1/2*s12)*mt^2*s14*s23*s24^2 - denom(1/2*s12)*mt^2*
      s14*s23^2*s24 - 1/2*denom(1/2*s12)*mt^2*s14*s23^3 - denom(1/2*s12)*mt^2*
      s14^2*s23*s24 - 3/2*denom(1/2*s12)*mt^2*s14^2*s23^2 - 1/2*denom(1/2*s12)
      *mt^2*s14^3*s23 - 1/2*denom(1/2*s12)*mt^2*s13*s24^3 - denom(1/2*s12)*
      mt^2*s13*s23*s24^2 - 1/2*denom(1/2*s12)*mt^2*s13*s23^2*s24 - denom(1/2*
      s12)*mt^2*s13*s14*s24^2 - 3*denom(1/2*s12)*mt^2*s13*s14*s23*s24 - denom(
      1/2*s12)*mt^2*s13*s14*s23^2 - 1/2*denom(1/2*s12)*mt^2*s13*s14^2*s24 - 
      denom(1/2*s12)*mt^2*s13*s14^2*s23 - 3/2*denom(1/2*s12)*mt^2*s13^2*s24^2
       - denom(1/2*s12)*mt^2*s13^2*s23*s24 - denom(1/2*s12)*mt^2*s13^2*s14*s24
       - 1/2*denom(1/2*s12)*mt^2*s13^2*s14*s23 - 1/2*denom(1/2*s12)*mt^2*s13^3
      *s24 - 1/4*denom(1/2*s12)*mt^2*s12*s24^3 - 3/4*denom(1/2*s12)*mt^2*s12*
      s23*s24^2 - 3/4*denom(1/2*s12)*mt^2*s12*s23^2*s24 - 1/4*denom(1/2*s12)*
      mt^2*s12*s23^3 - 3/4*denom(1/2*s12)*mt^2*s12*s14*s24^2 - 7/2*denom(1/2*
      s12)*mt^2*s12*s14*s23*s24 - 11/4*denom(1/2*s12)*mt^2*s12*s14*s23^2 - 3/4
      *denom(1/2*s12)*mt^2*s12*s14^2*s24 - 11/4*denom(1/2*s12)*mt^2*s12*s14^2*
      s23 - 1/4*denom(1/2*s12)*mt^2*s12*s14^3 - 11/4*denom(1/2*s12)*mt^2*s12*
      s13*s24^2 - 7/2*denom(1/2*s12)*mt^2*s12*s13*s23*s24 - 3/4*denom(1/2*s12)
      *mt^2*s12*s13*s23^2 - 7/2*denom(1/2*s12)*mt^2*s12*s13*s14*s24 - 7/2*
      denom(1/2*s12)*mt^2*s12*s13*s14*s23 - 3/4*denom(1/2*s12)*mt^2*s12*s13*
      s14^2 - 11/4*denom(1/2*s12)*mt^2*s12*s13^2*s24 - 3/4*denom(1/2*s12)*mt^2
      *s12*s13^2*s23 - 3/4*denom(1/2*s12)*mt^2*s12*s13^2*s14 - 1/4*denom(1/2*
      s12)*mt^2*s12*s13^3 - 1/2*denom(1/2*s12)*mt^2*s12^2*s24^2 - denom(1/2*
      s12)*mt^2*s12^2*s23*s24 - 1/2*denom(1/2*s12)*mt^2*s12^2*s23^2 - denom(1/
      2*s12)*mt^2*s12^2*s14*s24 - 5/2*denom(1/2*s12)*mt^2*s12^2*s14*s23 - 1/2*
      denom(1/2*s12)*mt^2*s12^2*s14^2 - 5/2*denom(1/2*s12)*mt^2*s12^2*s13*s24
       - denom(1/2*s12)*mt^2*s12^2*s13*s23 - denom(1/2*s12)*mt^2*s12^2*s13*s14
       - 1/2*denom(1/2*s12)*mt^2*s12^2*s13^2 - 1/4*denom(1/2*s12)*mt^2*s12^3*
      s24 - 1/4*denom(1/2*s12)*mt^2*s12^3*s23 - 1/4*denom(1/2*s12)*mt^2*s12^3*
      s14 - 1/4*denom(1/2*s12)*mt^2*s12^3*s13 + 1/2*denom(1/2*s12)*mt^2*mh^2*
      s14*s23*s24 + 1/2*denom(1/2*s12)*mt^2*mh^2*s14*s23^2 + 1/2*denom(1/2*s12
      )*mt^2*mh^2*s14^2*s23 + 1/2*denom(1/2*s12)*mt^2*mh^2*s13*s24^2 + 1/2*
      denom(1/2*s12)*mt^2*mh^2*s13*s23*s24 + 1/2*denom(1/2*s12)*mt^2*mh^2*s13*
      s14*s24 + 1/2*denom(1/2*s12)*mt^2*mh^2*s13*s14*s23 + 1/2*denom(1/2*s12)*
      mt^2*mh^2*s13^2*s24 + 1/2*denom(1/2*s12)*mt^2*mh^2*s12*s24^2 + denom(1/2
      *s12)*mt^2*mh^2*s12*s23*s24 + 1/2*denom(1/2*s12)*mt^2*mh^2*s12*s23^2 + 
      denom(1/2*s12)*mt^2*mh^2*s12*s14*s24 + 5/2*denom(1/2*s12)*mt^2*mh^2*s12*
      s14*s23 + 1/2*denom(1/2*s12)*mt^2*mh^2*s12*s14^2 + 5/2*denom(1/2*s12)*
      mt^2*mh^2*s12*s13*s24 + denom(1/2*s12)*mt^2*mh^2*s12*s13*s23 + denom(1/2
      *s12)*mt^2*mh^2*s12*s13*s14 + 1/2*denom(1/2*s12)*mt^2*mh^2*s12*s13^2 + 1/
      2*denom(1/2*s12)*mt^2*mh^2*s12^2*s24 + 1/2*denom(1/2*s12)*mt^2*mh^2*
      s12^2*s23 + 1/2*denom(1/2*s12)*mt^2*mh^2*s12^2*s14 + 1/2*denom(1/2*s12)*
      mt^2*mh^2*s12^2*s13 - 1/4*denom(1/2*s12)*mt^2*mh^4*s12*s24 - 1/4*denom(1/
      2*s12)*mt^2*mh^4*s12*s23 - 1/4*denom(1/2*s12)*mt^2*mh^4*s12*s14 - 1/4*
      denom(1/2*s12)*mt^2*mh^4*s12*s13 + 1/4*denom(1/2*s12)*mt^4*s24^3 + 3/4*
      denom(1/2*s12)*mt^4*s23*s24^2 + 3/4*denom(1/2*s12)*mt^4*s23^2*s24 + 1/4*
      denom(1/2*s12)*mt^4*s23^3 + 3/4*denom(1/2*s12)*mt^4*s14*s24^2 + 7/2*
      denom(1/2*s12)*mt^4*s14*s23*s24 + 11/4*denom(1/2*s12)*mt^4*s14*s23^2 + 3/
      4*denom(1/2*s12)*mt^4*s14^2*s24 + 11/4*denom(1/2*s12)*mt^4*s14^2*s23 + 1/
      4*denom(1/2*s12)*mt^4*s14^3 + 11/4*denom(1/2*s12)*mt^4*s13*s24^2 + 7/2*
      denom(1/2*s12)*mt^4*s13*s23*s24 + 3/4*denom(1/2*s12)*mt^4*s13*s23^2 + 7/
      2*denom(1/2*s12)*mt^4*s13*s14*s24 + 7/2*denom(1/2*s12)*mt^4*s13*s14*s23
       + 3/4*denom(1/2*s12)*mt^4*s13*s14^2 + 11/4*denom(1/2*s12)*mt^4*s13^2*
      s24 + 3/4*denom(1/2*s12)*mt^4*s13^2*s23 + 3/4*denom(1/2*s12)*mt^4*s13^2*
      s14 + 1/4*denom(1/2*s12)*mt^4*s13^3 + 9/4*denom(1/2*s12)*mt^4*s12*s24^2
       + 9/2*denom(1/2*s12)*mt^4*s12*s23*s24 + 9/4*denom(1/2*s12)*mt^4*s12*
      s23^2 + 9/2*denom(1/2*s12)*mt^4*s12*s14*s24 + 15/2*denom(1/2*s12)*mt^4*
      s12*s14*s23 + 9/4*denom(1/2*s12)*mt^4*s12*s14^2 + 15/2*denom(1/2*s12)*
      mt^4*s12*s13*s24 + 9/2*denom(1/2*s12)*mt^4*s12*s13*s23 + 9/2*denom(1/2*
      s12)*mt^4*s12*s13*s14 + 9/4*denom(1/2*s12)*mt^4*s12*s13^2 + 5/2*denom(1/
      2*s12)*mt^4*s12^2*s24 + 5/2*denom(1/2*s12)*mt^4*s12^2*s23 + 5/2*denom(1/
      2*s12)*mt^4*s12^2*s14 + 5/2*denom(1/2*s12)*mt^4*s12^2*s13 + 1/2*denom(1/
      2*s12)*mt^4*s12^3 - 1/4*denom(1/2*s12)*mt^4*mh^2*s24^2 - 1/2*denom(1/2*
      s12)*mt^4*mh^2*s23*s24 - 1/4*denom(1/2*s12)*mt^4*mh^2*s23^2 - 1/2*denom(
      1/2*s12)*mt^4*mh^2*s14*s24 - 3/2*denom(1/2*s12)*mt^4*mh^2*s14*s23 - 1/4*
      denom(1/2*s12)*mt^4*mh^2*s14^2 - 3/2*denom(1/2*s12)*mt^4*mh^2*s13*s24 - 
      1/2*denom(1/2*s12)*mt^4*mh^2*s13*s23 - 1/2*denom(1/2*s12)*mt^4*mh^2*s13*
      s14 - 1/4*denom(1/2*s12)*mt^4*mh^2*s13^2 - 5/2*denom(1/2*s12)*mt^4*mh^2*
      s12*s24 - 5/2*denom(1/2*s12)*mt^4*mh^2*s12*s23 - 5/2*denom(1/2*s12)*mt^4
      *mh^2*s12*s14 - 5/2*denom(1/2*s12)*mt^4*mh^2*s12*s13 - denom(1/2*s12)*
      mt^4*mh^2*s12^2 + 1/2*denom(1/2*s12)*mt^4*mh^4*s12 - 3/2*denom(1/2*s12)*
      mt^6*s24^2 - 3*denom(1/2*s12)*mt^6*s23*s24 - 3/2*denom(1/2*s12)*mt^6*
      s23^2 - 3*denom(1/2*s12)*mt^6*s14*s24 - 5*denom(1/2*s12)*mt^6*s14*s23 - 
      3/2*denom(1/2*s12)*mt^6*s14^2 - 5*denom(1/2*s12)*mt^6*s13*s24 - 3*denom(
      1/2*s12)*mt^6*s13*s23 - 3*denom(1/2*s12)*mt^6*s13*s14 - 3/2*denom(1/2*
      s12)*mt^6*s13^2 - 6*denom(1/2*s12)*mt^6*s12*s24 - 6*denom(1/2*s12)*mt^6*
      s12*s23 - 6*denom(1/2*s12)*mt^6*s12*s14 - 6*denom(1/2*s12)*mt^6*s12*s13
       - 3*denom(1/2*s12)*mt^6*s12^2 + denom(1/2*s12)*mt^6*mh^2*s24 + denom(1/
      2*s12)*mt^6*mh^2*s23 + denom(1/2*s12)*mt^6*mh^2*s14 + denom(1/2*s12)*
      mt^6*mh^2*s13 + 3*denom(1/2*s12)*mt^6*mh^2*s12 + 3*denom(1/2*s12)*mt^8*
      s24 + 3*denom(1/2*s12)*mt^8*s23 + 3*denom(1/2*s12)*mt^8*s14 + 3*denom(1/
      2*s12)*mt^8*s13 + 5*denom(1/2*s12)*mt^8*s12 - denom(1/2*s12)*mt^8*mh^2
       - 2*denom(1/2*s12)*mt^10 + 1/16*denom(1/4*s12^2)*s14^3*s23^3 + 3/16*
      denom(1/4*s12^2)*s13*s14^2*s23^2*s24 + 3/16*denom(1/4*s12^2)*s13^2*s14*
      s23*s24^2 + 1/16*denom(1/4*s12^2)*s13^3*s24^3 + 1/16*denom(1/4*s12^2)*
      s12*s14^2*s23^2*s24 + 1/16*denom(1/4*s12^2)*s12*s14^2*s23^3 + 1/16*
      denom(1/4*s12^2)*s12*s14^3*s23^2 + 1/8*denom(1/4*s12^2)*s12*s13*s14*s23*
      s24^2 + 1/8*denom(1/4*s12^2)*s12*s13*s14*s23^2*s24 + 1/8*denom(1/4*s12^2
      )*s12*s13*s14^2*s23*s24 + 1/16*denom(1/4*s12^2)*s12*s13*s14^2*s23^2 + 1/
      16*denom(1/4*s12^2)*s12*s13^2*s24^3 + 1/16*denom(1/4*s12^2)*s12*s13^2*
      s23*s24^2 + 1/16*denom(1/4*s12^2)*s12*s13^2*s14*s24^2 + 1/8*denom(1/4*
      s12^2)*s12*s13^2*s14*s23*s24 + 1/16*denom(1/4*s12^2)*s12*s13^3*s24^2 + 1/
      16*denom(1/4*s12^2)*s12^2*s14^2*s23^2 + 1/8*denom(1/4*s12^2)*s12^2*s13*
      s14*s23*s24 + 1/16*denom(1/4*s12^2)*s12^2*s13^2*s24^2 - 1/16*denom(1/4*
      s12^2)*mh^2*s12*s14^2*s23^2 - 1/8*denom(1/4*s12^2)*mh^2*s12*s13*s14*s23*
      s24 - 1/16*denom(1/4*s12^2)*mh^2*s12*s13^2*s24^2 - 3/16*denom(1/4*s12^2)
      *mt^2*s14^2*s23^2*s24 - 3/16*denom(1/4*s12^2)*mt^2*s14^2*s23^3 - 3/16*
      denom(1/4*s12^2)*mt^2*s14^3*s23^2 - 3/8*denom(1/4*s12^2)*mt^2*s13*s14*
      s23*s24^2 - 3/8*denom(1/4*s12^2)*mt^2*s13*s14*s23^2*s24 - 3/8*denom(1/4*
      s12^2)*mt^2*s13*s14^2*s23*s24 - 3/16*denom(1/4*s12^2)*mt^2*s13*s14^2*
      s23^2 - 3/16*denom(1/4*s12^2)*mt^2*s13^2*s24^3 - 3/16*denom(1/4*s12^2)*
      mt^2*s13^2*s23*s24^2 - 3/16*denom(1/4*s12^2)*mt^2*s13^2*s14*s24^2 - 3/8*
      denom(1/4*s12^2)*mt^2*s13^2*s14*s23*s24 - 3/16*denom(1/4*s12^2)*mt^2*
      s13^3*s24^2 - 1/8*denom(1/4*s12^2)*mt^2*s12*s14*s23*s24^2 - 1/4*denom(1/
      4*s12^2)*mt^2*s12*s14*s23^2*s24 - 1/8*denom(1/4*s12^2)*mt^2*s12*s14*
      s23^3 - 1/4*denom(1/4*s12^2)*mt^2*s12*s14^2*s23*s24 - 1/2*denom(1/4*
      s12^2)*mt^2*s12*s14^2*s23^2 - 1/8*denom(1/4*s12^2)*mt^2*s12*s14^3*s23 - 
      1/8*denom(1/4*s12^2)*mt^2*s12*s13*s24^3 - 1/4*denom(1/4*s12^2)*mt^2*s12*
      s13*s23*s24^2 - 1/8*denom(1/4*s12^2)*mt^2*s12*s13*s23^2*s24 - 1/4*denom(
      1/4*s12^2)*mt^2*s12*s13*s14*s24^2 - denom(1/4*s12^2)*mt^2*s12*s13*s14*
      s23*s24 - 1/4*denom(1/4*s12^2)*mt^2*s12*s13*s14*s23^2 - 1/8*denom(1/4*
      s12^2)*mt^2*s12*s13*s14^2*s24 - 1/4*denom(1/4*s12^2)*mt^2*s12*s13*s14^2*
      s23 - 1/2*denom(1/4*s12^2)*mt^2*s12*s13^2*s24^2 - 1/4*denom(1/4*s12^2)*
      mt^2*s12*s13^2*s23*s24 - 1/4*denom(1/4*s12^2)*mt^2*s12*s13^2*s14*s24 - 1/
      8*denom(1/4*s12^2)*mt^2*s12*s13^2*s14*s23 - 1/8*denom(1/4*s12^2)*mt^2*
      s12*s13^3*s24 - 1/8*denom(1/4*s12^2)*mt^2*s12^2*s14*s23*s24 - 1/8*denom(
      1/4*s12^2)*mt^2*s12^2*s14*s23^2 - 1/8*denom(1/4*s12^2)*mt^2*s12^2*s14^2*
      s23 - 1/8*denom(1/4*s12^2)*mt^2*s12^2*s13*s24^2 - 1/8*denom(1/4*s12^2)*
      mt^2*s12^2*s13*s23*s24 - 1/8*denom(1/4*s12^2)*mt^2*s12^2*s13*s14*s24 - 1/
      8*denom(1/4*s12^2)*mt^2*s12^2*s13*s14*s23 - 1/8*denom(1/4*s12^2)*mt^2*
      s12^2*s13^2*s24 + 1/8*denom(1/4*s12^2)*mt^2*mh^2*s12*s14*s23*s24 + 1/8*
      denom(1/4*s12^2)*mt^2*mh^2*s12*s14*s23^2 + 1/8*denom(1/4*s12^2)*mt^2*
      mh^2*s12*s14^2*s23 + 1/8*denom(1/4*s12^2)*mt^2*mh^2*s12*s13*s24^2 + 1/8*
      denom(1/4*s12^2)*mt^2*mh^2*s12*s13*s23*s24 + 1/8*denom(1/4*s12^2)*mt^2*
      mh^2*s12*s13*s14*s24 + 1/8*denom(1/4*s12^2)*mt^2*mh^2*s12*s13*s14*s23 + 
      1/8*denom(1/4*s12^2)*mt^2*mh^2*s12*s13^2*s24 + 3/16*denom(1/4*s12^2)*
      mt^4*s14*s23*s24^2 + 3/8*denom(1/4*s12^2)*mt^4*s14*s23^2*s24 + 3/16*
      denom(1/4*s12^2)*mt^4*s14*s23^3 + 3/8*denom(1/4*s12^2)*mt^4*s14^2*s23*
      s24 + 3/4*denom(1/4*s12^2)*mt^4*s14^2*s23^2 + 3/16*denom(1/4*s12^2)*mt^4
      *s14^3*s23 + 3/16*denom(1/4*s12^2)*mt^4*s13*s24^3 + 3/8*denom(1/4*s12^2)
      *mt^4*s13*s23*s24^2 + 3/16*denom(1/4*s12^2)*mt^4*s13*s23^2*s24 + 3/8*
      denom(1/4*s12^2)*mt^4*s13*s14*s24^2 + 3/2*denom(1/4*s12^2)*mt^4*s13*s14*
      s23*s24 + 3/8*denom(1/4*s12^2)*mt^4*s13*s14*s23^2 + 3/16*denom(1/4*s12^2
      )*mt^4*s13*s14^2*s24 + 3/8*denom(1/4*s12^2)*mt^4*s13*s14^2*s23 + 3/4*
      denom(1/4*s12^2)*mt^4*s13^2*s24^2 + 3/8*denom(1/4*s12^2)*mt^4*s13^2*s23*
      s24 + 3/8*denom(1/4*s12^2)*mt^4*s13^2*s14*s24 + 3/16*denom(1/4*s12^2)*
      mt^4*s13^2*s14*s23 + 3/16*denom(1/4*s12^2)*mt^4*s13^3*s24 + 1/16*denom(1/
      4*s12^2)*mt^4*s12*s24^3 + 3/16*denom(1/4*s12^2)*mt^4*s12*s23*s24^2 + 3/
      16*denom(1/4*s12^2)*mt^4*s12*s23^2*s24 + 1/16*denom(1/4*s12^2)*mt^4*s12*
      s23^3 + 3/16*denom(1/4*s12^2)*mt^4*s12*s14*s24^2 + 9/8*denom(1/4*s12^2)*
      mt^4*s12*s14*s23*s24 + 15/16*denom(1/4*s12^2)*mt^4*s12*s14*s23^2 + 3/16*
      denom(1/4*s12^2)*mt^4*s12*s14^2*s24 + 15/16*denom(1/4*s12^2)*mt^4*s12*
      s14^2*s23 + 1/16*denom(1/4*s12^2)*mt^4*s12*s14^3 + 15/16*denom(1/4*s12^2
      )*mt^4*s12*s13*s24^2 + 9/8*denom(1/4*s12^2)*mt^4*s12*s13*s23*s24 + 3/16*
      denom(1/4*s12^2)*mt^4*s12*s13*s23^2 + 9/8*denom(1/4*s12^2)*mt^4*s12*s13*
      s14*s24 + 9/8*denom(1/4*s12^2)*mt^4*s12*s13*s14*s23 + 3/16*denom(1/4*
      s12^2)*mt^4*s12*s13*s14^2 + 15/16*denom(1/4*s12^2)*mt^4*s12*s13^2*s24 + 
      3/16*denom(1/4*s12^2)*mt^4*s12*s13^2*s23 + 3/16*denom(1/4*s12^2)*mt^4*
      s12*s13^2*s14 + 1/16*denom(1/4*s12^2)*mt^4*s12*s13^3 + 1/16*denom(1/4*
      s12^2)*mt^4*s12^2*s24^2 + 1/8*denom(1/4*s12^2)*mt^4*s12^2*s23*s24 + 1/16
      *denom(1/4*s12^2)*mt^4*s12^2*s23^2 + 1/8*denom(1/4*s12^2)*mt^4*s12^2*s14
      *s24 + 3/8*denom(1/4*s12^2)*mt^4*s12^2*s14*s23 + 1/16*denom(1/4*s12^2)*
      mt^4*s12^2*s14^2 + 3/8*denom(1/4*s12^2)*mt^4*s12^2*s13*s24 + 1/8*denom(1/
      4*s12^2)*mt^4*s12^2*s13*s23 + 1/8*denom(1/4*s12^2)*mt^4*s12^2*s13*s14 + 
      1/16*denom(1/4*s12^2)*mt^4*s12^2*s13^2 - 1/16*denom(1/4*s12^2)*mt^4*mh^2
      *s12*s24^2 - 1/8*denom(1/4*s12^2)*mt^4*mh^2*s12*s23*s24 - 1/16*denom(1/4
      *s12^2)*mt^4*mh^2*s12*s23^2 - 1/8*denom(1/4*s12^2)*mt^4*mh^2*s12*s14*s24
       - 3/8*denom(1/4*s12^2)*mt^4*mh^2*s12*s14*s23 - 1/16*denom(1/4*s12^2)*
      mt^4*mh^2*s12*s14^2 - 3/8*denom(1/4*s12^2)*mt^4*mh^2*s12*s13*s24 - 1/8*
      denom(1/4*s12^2)*mt^4*mh^2*s12*s13*s23 - 1/8*denom(1/4*s12^2)*mt^4*mh^2*
      s12*s13*s14 - 1/16*denom(1/4*s12^2)*mt^4*mh^2*s12*s13^2 - 1/16*denom(1/4
      *s12^2)*mt^6*s24^3 - 3/16*denom(1/4*s12^2)*mt^6*s23*s24^2 - 3/16*denom(1/
      4*s12^2)*mt^6*s23^2*s24 - 1/16*denom(1/4*s12^2)*mt^6*s23^3 - 3/16*denom(
      1/4*s12^2)*mt^6*s14*s24^2 - 9/8*denom(1/4*s12^2)*mt^6*s14*s23*s24 - 15/
      16*denom(1/4*s12^2)*mt^6*s14*s23^2 - 3/16*denom(1/4*s12^2)*mt^6*s14^2*
      s24 - 15/16*denom(1/4*s12^2)*mt^6*s14^2*s23 - 1/16*denom(1/4*s12^2)*mt^6
      *s14^3 - 15/16*denom(1/4*s12^2)*mt^6*s13*s24^2 - 9/8*denom(1/4*s12^2)*
      mt^6*s13*s23*s24 - 3/16*denom(1/4*s12^2)*mt^6*s13*s23^2 - 9/8*denom(1/4*
      s12^2)*mt^6*s13*s14*s24 - 9/8*denom(1/4*s12^2)*mt^6*s13*s14*s23 - 3/16*
      denom(1/4*s12^2)*mt^6*s13*s14^2 - 15/16*denom(1/4*s12^2)*mt^6*s13^2*s24
       - 3/16*denom(1/4*s12^2)*mt^6*s13^2*s23 - 3/16*denom(1/4*s12^2)*mt^6*
      s13^2*s14 - 1/16*denom(1/4*s12^2)*mt^6*s13^3 - 1/2*denom(1/4*s12^2)*mt^6
      *s12*s24^2 - denom(1/4*s12^2)*mt^6*s12*s23*s24 - 1/2*denom(1/4*s12^2)*
      mt^6*s12*s23^2 - denom(1/4*s12^2)*mt^6*s12*s14*s24 - 2*denom(1/4*s12^2)*
      mt^6*s12*s14*s23 - 1/2*denom(1/4*s12^2)*mt^6*s12*s14^2 - 2*denom(1/4*
      s12^2)*mt^6*s12*s13*s24 - denom(1/4*s12^2)*mt^6*s12*s13*s23 - denom(1/4*
      s12^2)*mt^6*s12*s13*s14 - 1/2*denom(1/4*s12^2)*mt^6*s12*s13^2 - 1/4*
      denom(1/4*s12^2)*mt^6*s12^2*s24 - 1/4*denom(1/4*s12^2)*mt^6*s12^2*s23 - 
      1/4*denom(1/4*s12^2)*mt^6*s12^2*s14 - 1/4*denom(1/4*s12^2)*mt^6*s12^2*
      s13 + 1/4*denom(1/4*s12^2)*mt^6*mh^2*s12*s24 + 1/4*denom(1/4*s12^2)*mt^6
      *mh^2*s12*s23 + 1/4*denom(1/4*s12^2)*mt^6*mh^2*s12*s14 + 1/4*denom(1/4*
      s12^2)*mt^6*mh^2*s12*s13 + 3/8*denom(1/4*s12^2)*mt^8*s24^2 + 3/4*denom(1/
      4*s12^2)*mt^8*s23*s24 + 3/8*denom(1/4*s12^2)*mt^8*s23^2 + 3/4*denom(1/4*
      s12^2)*mt^8*s14*s24 + 3/2*denom(1/4*s12^2)*mt^8*s14*s23 + 3/8*denom(1/4*
      s12^2)*mt^8*s14^2 + 3/2*denom(1/4*s12^2)*mt^8*s13*s24 + 3/4*denom(1/4*
      s12^2)*mt^8*s13*s23 + 3/4*denom(1/4*s12^2)*mt^8*s13*s14 + 3/8*denom(1/4*
      s12^2)*mt^8*s13^2 + 5/4*denom(1/4*s12^2)*mt^8*s12*s24 + 5/4*denom(1/4*
      s12^2)*mt^8*s12*s23 + 5/4*denom(1/4*s12^2)*mt^8*s12*s14 + 5/4*denom(1/4*
      s12^2)*mt^8*s12*s13 + 1/4*denom(1/4*s12^2)*mt^8*s12^2 - 1/4*denom(1/4*
      s12^2)*mt^8*mh^2*s12 - 3/4*denom(1/4*s12^2)*mt^10*s24 - 3/4*denom(1/4*
      s12^2)*mt^10*s23 - 3/4*denom(1/4*s12^2)*mt^10*s14 - 3/4*denom(1/4*s12^2)
      *mt^10*s13 - denom(1/4*s12^2)*mt^10*s12 + 1/2*denom(1/4*s12^2)*mt^12;
 
 .sort
id KMatrix(11,7) =  mt^4*s14*s23 + mt^4*s13*s24 + mt^4*s12*s24 + mt^4*s12*s23
       + mt^4*s12*s14 + mt^4*s12*s13 + mt^4*s12^2 - mt^4*mh^2*s12 - mt^6*s24
       - mt^6*s23 - mt^6*s14 - mt^6*s13 - 4*mt^6*s12 + 2*mt^8 - 1/2*denom(1/2*
      s12)*mt^2*s14^2*s23*s24 - 1/2*denom(1/2*s12)*mt^2*s13*s14*s24^2 - 1/2*
      denom(1/2*s12)*mt^2*s13*s14*s23^2 - 1/2*denom(1/2*s12)*mt^2*s13^2*s23*
      s24 - 1/2*denom(1/2*s12)*mt^2*s12*s14*s24^2 - 1/2*denom(1/2*s12)*mt^2*
      s12*s14*s23*s24 - 1/2*denom(1/2*s12)*mt^2*s12*s14^2*s24 - 1/2*denom(1/2*
      s12)*mt^2*s12*s13*s23*s24 - 1/2*denom(1/2*s12)*mt^2*s12*s13*s23^2 - 1/2*
      denom(1/2*s12)*mt^2*s12*s13*s14*s24 - 1/2*denom(1/2*s12)*mt^2*s12*s13*
      s14*s23 - 1/2*denom(1/2*s12)*mt^2*s12*s13^2*s23 - 1/2*denom(1/2*s12)*
      mt^2*s12^2*s14*s24 - 1/2*denom(1/2*s12)*mt^2*s12^2*s13*s23 + 1/2*denom(1/
      2*s12)*mt^2*mh^2*s12*s14*s24 + 1/2*denom(1/2*s12)*mt^2*mh^2*s12*s13*s23
       + 1/2*denom(1/2*s12)*mt^4*s14*s24^2 + denom(1/2*s12)*mt^4*s14*s23*s24
       + 1/2*denom(1/2*s12)*mt^4*s14*s23^2 + 1/2*denom(1/2*s12)*mt^4*s14^2*s24
       + 1/2*denom(1/2*s12)*mt^4*s14^2*s23 + 1/2*denom(1/2*s12)*mt^4*s13*s24^2
       + denom(1/2*s12)*mt^4*s13*s23*s24 + 1/2*denom(1/2*s12)*mt^4*s13*s23^2
       + denom(1/2*s12)*mt^4*s13*s14*s24 + denom(1/2*s12)*mt^4*s13*s14*s23 + 1/
      2*denom(1/2*s12)*mt^4*s13^2*s24 + 1/2*denom(1/2*s12)*mt^4*s13^2*s23 + 1/
      2*denom(1/2*s12)*mt^4*s12*s24^2 + denom(1/2*s12)*mt^4*s12*s23*s24 + 1/2*
      denom(1/2*s12)*mt^4*s12*s23^2 + 3*denom(1/2*s12)*mt^4*s12*s14*s24 + 
      denom(1/2*s12)*mt^4*s12*s14*s23 + 1/2*denom(1/2*s12)*mt^4*s12*s14^2 + 
      denom(1/2*s12)*mt^4*s12*s13*s24 + 3*denom(1/2*s12)*mt^4*s12*s13*s23 + 
      denom(1/2*s12)*mt^4*s12*s13*s14 + 1/2*denom(1/2*s12)*mt^4*s12*s13^2 + 1/
      2*denom(1/2*s12)*mt^4*s12^2*s24 + 1/2*denom(1/2*s12)*mt^4*s12^2*s23 + 1/
      2*denom(1/2*s12)*mt^4*s12^2*s14 + 1/2*denom(1/2*s12)*mt^4*s12^2*s13 - 1/
      2*denom(1/2*s12)*mt^4*mh^2*s12*s24 - 1/2*denom(1/2*s12)*mt^4*mh^2*s12*
      s23 - 1/2*denom(1/2*s12)*mt^4*mh^2*s12*s14 - 1/2*denom(1/2*s12)*mt^4*
      mh^2*s12*s13 - 1/2*denom(1/2*s12)*mt^6*s24^2 - denom(1/2*s12)*mt^6*s23*
      s24 - 1/2*denom(1/2*s12)*mt^6*s23^2 - 2*denom(1/2*s12)*mt^6*s14*s24 - 2*
      denom(1/2*s12)*mt^6*s14*s23 - 1/2*denom(1/2*s12)*mt^6*s14^2 - 2*denom(1/
      2*s12)*mt^6*s13*s24 - 2*denom(1/2*s12)*mt^6*s13*s23 - denom(1/2*s12)*
      mt^6*s13*s14 - 1/2*denom(1/2*s12)*mt^6*s13^2 - 3*denom(1/2*s12)*mt^6*s12
      *s24 - 3*denom(1/2*s12)*mt^6*s12*s23 - 3*denom(1/2*s12)*mt^6*s12*s14 - 3
      *denom(1/2*s12)*mt^6*s12*s13 - denom(1/2*s12)*mt^6*s12^2 + denom(1/2*s12
      )*mt^6*mh^2*s12 + 2*denom(1/2*s12)*mt^8*s24 + 2*denom(1/2*s12)*mt^8*s23
       + 2*denom(1/2*s12)*mt^8*s14 + 2*denom(1/2*s12)*mt^8*s13 + 4*denom(1/2*
      s12)*mt^8*s12 - 2*denom(1/2*s12)*mt^10 + 1/4*denom(1/4*s12^2)*s13*s14^2*
      s23^2*s24 + 1/4*denom(1/4*s12^2)*s13^2*s14*s23*s24^2 + 1/4*denom(1/4*
      s12^2)*s12*s13*s14*s23*s24^2 + 1/4*denom(1/4*s12^2)*s12*s13*s14*s23^2*
      s24 + 1/4*denom(1/4*s12^2)*s12*s13*s14^2*s23*s24 + 1/4*denom(1/4*s12^2)*
      s12*s13^2*s14*s23*s24 + 1/4*denom(1/4*s12^2)*s12^2*s13*s14*s23*s24 - 1/4
      *denom(1/4*s12^2)*mh^2*s12*s13*s14*s23*s24 - 1/4*denom(1/4*s12^2)*mt^2*
      s14^2*s23^2*s24 - 1/2*denom(1/4*s12^2)*mt^2*s13*s14*s23*s24^2 - 1/2*
      denom(1/4*s12^2)*mt^2*s13*s14*s23^2*s24 - 1/2*denom(1/4*s12^2)*mt^2*s13*
      s14^2*s23*s24 - 1/4*denom(1/4*s12^2)*mt^2*s13*s14^2*s23^2 - 1/4*denom(1/
      4*s12^2)*mt^2*s13^2*s23*s24^2 - 1/4*denom(1/4*s12^2)*mt^2*s13^2*s14*
      s24^2 - 1/2*denom(1/4*s12^2)*mt^2*s13^2*s14*s23*s24 - 1/4*denom(1/4*
      s12^2)*mt^2*s12*s14*s23*s24^2 - 1/4*denom(1/4*s12^2)*mt^2*s12*s14*s23^2*
      s24 - 1/4*denom(1/4*s12^2)*mt^2*s12*s14^2*s23*s24 - 1/4*denom(1/4*s12^2)
      *mt^2*s12*s13*s23*s24^2 - 1/4*denom(1/4*s12^2)*mt^2*s12*s13*s23^2*s24 - 
      1/4*denom(1/4*s12^2)*mt^2*s12*s13*s14*s24^2 - 2*denom(1/4*s12^2)*mt^2*
      s12*s13*s14*s23*s24 - 1/4*denom(1/4*s12^2)*mt^2*s12*s13*s14*s23^2 - 1/4*
      denom(1/4*s12^2)*mt^2*s12*s13*s14^2*s24 - 1/4*denom(1/4*s12^2)*mt^2*s12*
      s13*s14^2*s23 - 1/4*denom(1/4*s12^2)*mt^2*s12*s13^2*s23*s24 - 1/4*denom(
      1/4*s12^2)*mt^2*s12*s13^2*s14*s24 - 1/4*denom(1/4*s12^2)*mt^2*s12*s13^2*
      s14*s23 - 1/4*denom(1/4*s12^2)*mt^2*s12^2*s14*s23*s24 - 1/4*denom(1/4*
      s12^2)*mt^2*s12^2*s13*s23*s24 - 1/4*denom(1/4*s12^2)*mt^2*s12^2*s13*s14*
      s24 - 1/4*denom(1/4*s12^2)*mt^2*s12^2*s13*s14*s23 + 1/4*denom(1/4*s12^2)
      *mt^2*mh^2*s12*s14*s23*s24 + 1/4*denom(1/4*s12^2)*mt^2*mh^2*s12*s13*s23*
      s24 + 1/4*denom(1/4*s12^2)*mt^2*mh^2*s12*s13*s14*s24 + 1/4*denom(1/4*
      s12^2)*mt^2*mh^2*s12*s13*s14*s23 + 1/4*denom(1/4*s12^2)*mt^4*s14*s23*
      s24^2 + 1/2*denom(1/4*s12^2)*mt^4*s14*s23^2*s24 + 1/2*denom(1/4*s12^2)*
      mt^4*s14^2*s23*s24 + 1/4*denom(1/4*s12^2)*mt^4*s14^2*s23^2 + 1/2*denom(1/
      4*s12^2)*mt^4*s13*s23*s24^2 + 1/4*denom(1/4*s12^2)*mt^4*s13*s23^2*s24 + 
      1/2*denom(1/4*s12^2)*mt^4*s13*s14*s24^2 + 2*denom(1/4*s12^2)*mt^4*s13*
      s14*s23*s24 + 1/2*denom(1/4*s12^2)*mt^4*s13*s14*s23^2 + 1/4*denom(1/4*
      s12^2)*mt^4*s13*s14^2*s24 + 1/2*denom(1/4*s12^2)*mt^4*s13*s14^2*s23 + 1/
      4*denom(1/4*s12^2)*mt^4*s13^2*s24^2 + 1/2*denom(1/4*s12^2)*mt^4*s13^2*
      s23*s24 + 1/2*denom(1/4*s12^2)*mt^4*s13^2*s14*s24 + 1/4*denom(1/4*s12^2)
      *mt^4*s13^2*s14*s23 + 1/4*denom(1/4*s12^2)*mt^4*s12*s23*s24^2 + 1/4*
      denom(1/4*s12^2)*mt^4*s12*s23^2*s24 + 1/4*denom(1/4*s12^2)*mt^4*s12*s14*
      s24^2 + 7/4*denom(1/4*s12^2)*mt^4*s12*s14*s23*s24 + 1/4*denom(1/4*s12^2)
      *mt^4*s12*s14*s23^2 + 1/4*denom(1/4*s12^2)*mt^4*s12*s14^2*s24 + 1/4*
      denom(1/4*s12^2)*mt^4*s12*s14^2*s23 + 1/4*denom(1/4*s12^2)*mt^4*s12*s13*
      s24^2 + 7/4*denom(1/4*s12^2)*mt^4*s12*s13*s23*s24 + 1/4*denom(1/4*s12^2)
      *mt^4*s12*s13*s23^2 + 7/4*denom(1/4*s12^2)*mt^4*s12*s13*s14*s24 + 7/4*
      denom(1/4*s12^2)*mt^4*s12*s13*s14*s23 + 1/4*denom(1/4*s12^2)*mt^4*s12*
      s13*s14^2 + 1/4*denom(1/4*s12^2)*mt^4*s12*s13^2*s24 + 1/4*denom(1/4*
      s12^2)*mt^4*s12*s13^2*s23 + 1/4*denom(1/4*s12^2)*mt^4*s12*s13^2*s14 + 1/
      4*denom(1/4*s12^2)*mt^4*s12^2*s23*s24 + 1/4*denom(1/4*s12^2)*mt^4*s12^2*
      s14*s24 + 1/4*denom(1/4*s12^2)*mt^4*s12^2*s14*s23 + 1/4*denom(1/4*s12^2)
      *mt^4*s12^2*s13*s24 + 1/4*denom(1/4*s12^2)*mt^4*s12^2*s13*s23 + 1/4*
      denom(1/4*s12^2)*mt^4*s12^2*s13*s14 - 1/4*denom(1/4*s12^2)*mt^4*mh^2*s12
      *s23*s24 - 1/4*denom(1/4*s12^2)*mt^4*mh^2*s12*s14*s24 - 1/4*denom(1/4*
      s12^2)*mt^4*mh^2*s12*s14*s23 - 1/4*denom(1/4*s12^2)*mt^4*mh^2*s12*s13*
      s24 - 1/4*denom(1/4*s12^2)*mt^4*mh^2*s12*s13*s23 - 1/4*denom(1/4*s12^2)*
      mt^4*mh^2*s12*s13*s14 - 1/4*denom(1/4*s12^2)*mt^6*s23*s24^2 - 1/4*denom(
      1/4*s12^2)*mt^6*s23^2*s24 - 1/4*denom(1/4*s12^2)*mt^6*s14*s24^2 - 3/2*
      denom(1/4*s12^2)*mt^6*s14*s23*s24 - 1/2*denom(1/4*s12^2)*mt^6*s14*s23^2
       - 1/4*denom(1/4*s12^2)*mt^6*s14^2*s24 - 1/2*denom(1/4*s12^2)*mt^6*s14^2
      *s23 - 1/2*denom(1/4*s12^2)*mt^6*s13*s24^2 - 3/2*denom(1/4*s12^2)*mt^6*
      s13*s23*s24 - 1/4*denom(1/4*s12^2)*mt^6*s13*s23^2 - 3/2*denom(1/4*s12^2)
      *mt^6*s13*s14*s24 - 3/2*denom(1/4*s12^2)*mt^6*s13*s14*s23 - 1/4*denom(1/
      4*s12^2)*mt^6*s13*s14^2 - 1/2*denom(1/4*s12^2)*mt^6*s13^2*s24 - 1/4*
      denom(1/4*s12^2)*mt^6*s13^2*s23 - 1/4*denom(1/4*s12^2)*mt^6*s13^2*s14 - 
      1/4*denom(1/4*s12^2)*mt^6*s12*s24^2 - 3/2*denom(1/4*s12^2)*mt^6*s12*s23*
      s24 - 1/4*denom(1/4*s12^2)*mt^6*s12*s23^2 - 3/2*denom(1/4*s12^2)*mt^6*
      s12*s14*s24 - 3/2*denom(1/4*s12^2)*mt^6*s12*s14*s23 - 1/4*denom(1/4*
      s12^2)*mt^6*s12*s14^2 - 3/2*denom(1/4*s12^2)*mt^6*s12*s13*s24 - 3/2*
      denom(1/4*s12^2)*mt^6*s12*s13*s23 - 3/2*denom(1/4*s12^2)*mt^6*s12*s13*
      s14 - 1/4*denom(1/4*s12^2)*mt^6*s12*s13^2 - 1/4*denom(1/4*s12^2)*mt^6*
      s12^2*s24 - 1/4*denom(1/4*s12^2)*mt^6*s12^2*s23 - 1/4*denom(1/4*s12^2)*
      mt^6*s12^2*s14 - 1/4*denom(1/4*s12^2)*mt^6*s12^2*s13 + 1/4*denom(1/4*
      s12^2)*mt^6*mh^2*s12*s24 + 1/4*denom(1/4*s12^2)*mt^6*mh^2*s12*s23 + 1/4*
      denom(1/4*s12^2)*mt^6*mh^2*s12*s14 + 1/4*denom(1/4*s12^2)*mt^6*mh^2*s12*
      s13 + 1/4*denom(1/4*s12^2)*mt^8*s24^2 + denom(1/4*s12^2)*mt^8*s23*s24 + 
      1/4*denom(1/4*s12^2)*mt^8*s23^2 + denom(1/4*s12^2)*mt^8*s14*s24 + 5/4*
      denom(1/4*s12^2)*mt^8*s14*s23 + 1/4*denom(1/4*s12^2)*mt^8*s14^2 + 5/4*
      denom(1/4*s12^2)*mt^8*s13*s24 + denom(1/4*s12^2)*mt^8*s13*s23 + denom(1/
      4*s12^2)*mt^8*s13*s14 + 1/4*denom(1/4*s12^2)*mt^8*s13^2 + 5/4*denom(1/4*
      s12^2)*mt^8*s12*s24 + 5/4*denom(1/4*s12^2)*mt^8*s12*s23 + 5/4*denom(1/4*
      s12^2)*mt^8*s12*s14 + 5/4*denom(1/4*s12^2)*mt^8*s12*s13 + 1/4*denom(1/4*
      s12^2)*mt^8*s12^2 - 1/4*denom(1/4*s12^2)*mt^8*mh^2*s12 - 3/4*denom(1/4*
      s12^2)*mt^10*s24 - 3/4*denom(1/4*s12^2)*mt^10*s23 - 3/4*denom(1/4*s12^2)
      *mt^10*s14 - 3/4*denom(1/4*s12^2)*mt^10*s13 - denom(1/4*s12^2)*mt^10*s12
       + 1/2*denom(1/4*s12^2)*mt^12;
 
 .sort
id KMatrix(11,8) =   - 1/2*mt^2*s14*s23*s24 - 1/2*mt^2*s14*s23^2 - 1/2*mt^2*
      s14^2*s23 - 1/2*mt^2*s13*s24^2 - 1/2*mt^2*s13*s23*s24 - 1/2*mt^2*s13*s14
      *s24 - 1/2*mt^2*s13*s14*s23 - 1/2*mt^2*s13^2*s24 - 1/2*mt^2*s12*s24^2 - 
      mt^2*s12*s23*s24 - 1/2*mt^2*s12*s23^2 - mt^2*s12*s14*s24 - 3/2*mt^2*s12*
      s14*s23 - 1/2*mt^2*s12*s14^2 - 3/2*mt^2*s12*s13*s24 - mt^2*s12*s13*s23
       - mt^2*s12*s13*s14 - 1/2*mt^2*s12*s13^2 - mt^2*s12^2*s24 - mt^2*s12^2*
      s23 - mt^2*s12^2*s14 - mt^2*s12^2*s13 - 1/2*mt^2*s12^3 + 1/2*mt^2*mh^2*
      s14*s23 + 1/2*mt^2*mh^2*s13*s24 + mt^2*mh^2*s12*s24 + mt^2*mh^2*s12*s23
       + mt^2*mh^2*s12*s14 + mt^2*mh^2*s12*s13 + mt^2*mh^2*s12^2 - 1/2*mt^2*
      mh^4*s12 + 1/2*mt^4*s24^2 + mt^4*s23*s24 + 1/2*mt^4*s23^2 + mt^4*s14*s24
       + 2*mt^4*s14*s23 + 1/2*mt^4*s14^2 + 2*mt^4*s13*s24 + mt^4*s13*s23 + 
      mt^4*s13*s14 + 1/2*mt^4*s13^2 + 7/2*mt^4*s12*s24 + 7/2*mt^4*s12*s23 + 7/
      2*mt^4*s12*s14 + 7/2*mt^4*s12*s13 + 3*mt^4*s12^2 - 1/2*mt^4*mh^2*s24 - 1/
      2*mt^4*mh^2*s23 - 1/2*mt^4*mh^2*s14 - 1/2*mt^4*mh^2*s13 - 3*mt^4*mh^2*
      s12 - 2*mt^6*s24 - 2*mt^6*s23 - 2*mt^6*s14 - 2*mt^6*s13 - 5*mt^6*s12 + 
      mt^6*mh^2 + 2*mt^8 + 1/4*denom(1/2*s12)*s14^2*s23*s24^2 + 1/4*denom(1/2*
      s12)*s14^2*s23^2*s24 + 1/4*denom(1/2*s12)*s14^3*s23*s24 + 1/4*denom(1/2*
      s12)*s13*s14*s24^3 + 1/4*denom(1/2*s12)*s13*s14*s23*s24^2 + 1/4*denom(1/
      2*s12)*s13*s14^2*s24^2 + 1/4*denom(1/2*s12)*s13*s14^2*s23*s24 + 1/4*
      denom(1/2*s12)*s13^2*s14*s24^2 + 1/4*denom(1/2*s12)*s12*s14*s24^3 + 1/2*
      denom(1/2*s12)*s12*s14*s23*s24^2 + 1/4*denom(1/2*s12)*s12*s14*s23^2*s24
       + 1/2*denom(1/2*s12)*s12*s14^2*s24^2 + 3/4*denom(1/2*s12)*s12*s14^2*s23
      *s24 + 1/4*denom(1/2*s12)*s12*s14^3*s24 + 3/4*denom(1/2*s12)*s12*s13*s14
      *s24^2 + 1/2*denom(1/2*s12)*s12*s13*s14*s23*s24 + 1/2*denom(1/2*s12)*s12
      *s13*s14^2*s24 + 1/4*denom(1/2*s12)*s12*s13^2*s14*s24 + 1/2*denom(1/2*
      s12)*s12^2*s14*s24^2 + 1/2*denom(1/2*s12)*s12^2*s14*s23*s24 + 1/2*denom(
      1/2*s12)*s12^2*s14^2*s24 + 1/2*denom(1/2*s12)*s12^2*s13*s14*s24 + 1/4*
      denom(1/2*s12)*s12^3*s14*s24 - 1/4*denom(1/2*s12)*mh^2*s14^2*s23*s24 - 1/
      4*denom(1/2*s12)*mh^2*s13*s14*s24^2 - 1/2*denom(1/2*s12)*mh^2*s12*s14*
      s24^2 - 1/2*denom(1/2*s12)*mh^2*s12*s14*s23*s24 - 1/2*denom(1/2*s12)*
      mh^2*s12*s14^2*s24 - 1/2*denom(1/2*s12)*mh^2*s12*s13*s14*s24 - 1/2*
      denom(1/2*s12)*mh^2*s12^2*s14*s24 + 1/4*denom(1/2*s12)*mh^4*s12*s14*s24
       - 1/4*denom(1/2*s12)*mt^2*s14*s24^3 - 3/4*denom(1/2*s12)*mt^2*s14*s23*
      s24^2 - 1/2*denom(1/2*s12)*mt^2*s14*s23^2*s24 - 1/2*denom(1/2*s12)*mt^2*
      s14^2*s24^2 - 3/2*denom(1/2*s12)*mt^2*s14^2*s23*s24 - 1/2*denom(1/2*s12)
      *mt^2*s14^2*s23^2 - 1/4*denom(1/2*s12)*mt^2*s14^3*s24 - 1/4*denom(1/2*
      s12)*mt^2*s14^3*s23 - 1/4*denom(1/2*s12)*mt^2*s13*s24^3 - 1/4*denom(1/2*
      s12)*mt^2*s13*s23*s24^2 - 3/2*denom(1/2*s12)*mt^2*s13*s14*s24^2 - 3/2*
      denom(1/2*s12)*mt^2*s13*s14*s23*s24 - 3/4*denom(1/2*s12)*mt^2*s13*s14^2*
      s24 - 1/4*denom(1/2*s12)*mt^2*s13*s14^2*s23 - 1/2*denom(1/2*s12)*mt^2*
      s13^2*s24^2 - 1/2*denom(1/2*s12)*mt^2*s13^2*s14*s24 - 1/4*denom(1/2*s12)
      *mt^2*s12*s24^3 - 1/2*denom(1/2*s12)*mt^2*s12*s23*s24^2 - 1/4*denom(1/2*
      s12)*mt^2*s12*s23^2*s24 - 5/2*denom(1/2*s12)*mt^2*s12*s14*s24^2 - 13/4*
      denom(1/2*s12)*mt^2*s12*s14*s23*s24 - 1/2*denom(1/2*s12)*mt^2*s12*s14*
      s23^2 - 5/2*denom(1/2*s12)*mt^2*s12*s14^2*s24 - denom(1/2*s12)*mt^2*s12*
      s14^2*s23 - 1/4*denom(1/2*s12)*mt^2*s12*s14^3 - denom(1/2*s12)*mt^2*s12*
      s13*s24^2 - 3/4*denom(1/2*s12)*mt^2*s12*s13*s23*s24 - 13/4*denom(1/2*s12
      )*mt^2*s12*s13*s14*s24 - 3/4*denom(1/2*s12)*mt^2*s12*s13*s14*s23 - 1/2*
      denom(1/2*s12)*mt^2*s12*s13*s14^2 - 1/2*denom(1/2*s12)*mt^2*s12*s13^2*
      s24 - 1/4*denom(1/2*s12)*mt^2*s12*s13^2*s14 - 1/2*denom(1/2*s12)*mt^2*
      s12^2*s24^2 - 1/2*denom(1/2*s12)*mt^2*s12^2*s23*s24 - 5/2*denom(1/2*s12)
      *mt^2*s12^2*s14*s24 - 3/4*denom(1/2*s12)*mt^2*s12^2*s14*s23 - 1/2*denom(
      1/2*s12)*mt^2*s12^2*s14^2 - 3/4*denom(1/2*s12)*mt^2*s12^2*s13*s24 - 1/2*
      denom(1/2*s12)*mt^2*s12^2*s13*s14 - 1/4*denom(1/2*s12)*mt^2*s12^3*s24 - 
      1/4*denom(1/2*s12)*mt^2*s12^3*s14 + 1/4*denom(1/2*s12)*mt^2*mh^2*s14*
      s24^2 + 1/2*denom(1/2*s12)*mt^2*mh^2*s14*s23*s24 + 1/4*denom(1/2*s12)*
      mt^2*mh^2*s14^2*s24 + 1/4*denom(1/2*s12)*mt^2*mh^2*s14^2*s23 + 1/4*
      denom(1/2*s12)*mt^2*mh^2*s13*s24^2 + 1/2*denom(1/2*s12)*mt^2*mh^2*s13*
      s14*s24 + 1/2*denom(1/2*s12)*mt^2*mh^2*s12*s24^2 + 1/2*denom(1/2*s12)*
      mt^2*mh^2*s12*s23*s24 + 5/2*denom(1/2*s12)*mt^2*mh^2*s12*s14*s24 + 3/4*
      denom(1/2*s12)*mt^2*mh^2*s12*s14*s23 + 1/2*denom(1/2*s12)*mt^2*mh^2*s12*
      s14^2 + 3/4*denom(1/2*s12)*mt^2*mh^2*s12*s13*s24 + 1/2*denom(1/2*s12)*
      mt^2*mh^2*s12*s13*s14 + 1/2*denom(1/2*s12)*mt^2*mh^2*s12^2*s24 + 1/2*
      denom(1/2*s12)*mt^2*mh^2*s12^2*s14 - 1/4*denom(1/2*s12)*mt^2*mh^4*s12*
      s24 - 1/4*denom(1/2*s12)*mt^2*mh^4*s12*s14 + 1/4*denom(1/2*s12)*mt^4*
      s24^3 + 1/2*denom(1/2*s12)*mt^4*s23*s24^2 + 1/4*denom(1/2*s12)*mt^4*
      s23^2*s24 + 7/4*denom(1/2*s12)*mt^4*s14*s24^2 + 13/4*denom(1/2*s12)*mt^4
      *s14*s23*s24 + denom(1/2*s12)*mt^4*s14*s23^2 + 7/4*denom(1/2*s12)*mt^4*
      s14^2*s24 + 7/4*denom(1/2*s12)*mt^4*s14^2*s23 + 1/4*denom(1/2*s12)*mt^4*
      s14^3 + 7/4*denom(1/2*s12)*mt^4*s13*s24^2 + 5/4*denom(1/2*s12)*mt^4*s13*
      s23*s24 + 13/4*denom(1/2*s12)*mt^4*s13*s14*s24 + 5/4*denom(1/2*s12)*mt^4
      *s13*s14*s23 + 1/2*denom(1/2*s12)*mt^4*s13*s14^2 + denom(1/2*s12)*mt^4*
      s13^2*s24 + 1/4*denom(1/2*s12)*mt^4*s13^2*s14 + 9/4*denom(1/2*s12)*mt^4*
      s12*s24^2 + 11/4*denom(1/2*s12)*mt^4*s12*s23*s24 + 1/2*denom(1/2*s12)*
      mt^4*s12*s23^2 + 7*denom(1/2*s12)*mt^4*s12*s14*s24 + 4*denom(1/2*s12)*
      mt^4*s12*s14*s23 + 9/4*denom(1/2*s12)*mt^4*s12*s14^2 + 4*denom(1/2*s12)*
      mt^4*s12*s13*s24 + denom(1/2*s12)*mt^4*s12*s13*s23 + 11/4*denom(1/2*s12)
      *mt^4*s12*s13*s14 + 1/2*denom(1/2*s12)*mt^4*s12*s13^2 + 9/4*denom(1/2*
      s12)*mt^4*s12^2*s24 + 3/4*denom(1/2*s12)*mt^4*s12^2*s23 + 9/4*denom(1/2*
      s12)*mt^4*s12^2*s14 + 3/4*denom(1/2*s12)*mt^4*s12^2*s13 + 1/4*denom(1/2*
      s12)*mt^4*s12^3 - 1/4*denom(1/2*s12)*mt^4*mh^2*s24^2 - 1/4*denom(1/2*s12
      )*mt^4*mh^2*s23*s24 - denom(1/2*s12)*mt^4*mh^2*s14*s24 - 1/2*denom(1/2*
      s12)*mt^4*mh^2*s14*s23 - 1/4*denom(1/2*s12)*mt^4*mh^2*s14^2 - 1/2*denom(
      1/2*s12)*mt^4*mh^2*s13*s24 - 1/4*denom(1/2*s12)*mt^4*mh^2*s13*s14 - 9/4*
      denom(1/2*s12)*mt^4*mh^2*s12*s24 - 3/4*denom(1/2*s12)*mt^4*mh^2*s12*s23
       - 9/4*denom(1/2*s12)*mt^4*mh^2*s12*s14 - 3/4*denom(1/2*s12)*mt^4*mh^2*
      s12*s13 - 1/2*denom(1/2*s12)*mt^4*mh^2*s12^2 + 1/4*denom(1/2*s12)*mt^4*
      mh^4*s12 - 3/2*denom(1/2*s12)*mt^6*s24^2 - 2*denom(1/2*s12)*mt^6*s23*s24
       - 1/2*denom(1/2*s12)*mt^6*s23^2 - 4*denom(1/2*s12)*mt^6*s14*s24 - 7/2*
      denom(1/2*s12)*mt^6*s14*s23 - 3/2*denom(1/2*s12)*mt^6*s14^2 - 7/2*denom(
      1/2*s12)*mt^6*s13*s24 - denom(1/2*s12)*mt^6*s13*s23 - 2*denom(1/2*s12)*
      mt^6*s13*s14 - 1/2*denom(1/2*s12)*mt^6*s13^2 - 23/4*denom(1/2*s12)*mt^6*
      s12*s24 - 13/4*denom(1/2*s12)*mt^6*s12*s23 - 23/4*denom(1/2*s12)*mt^6*
      s12*s14 - 13/4*denom(1/2*s12)*mt^6*s12*s13 - 2*denom(1/2*s12)*mt^6*s12^2
       + 3/4*denom(1/2*s12)*mt^6*mh^2*s24 + 1/4*denom(1/2*s12)*mt^6*mh^2*s23
       + 3/4*denom(1/2*s12)*mt^6*mh^2*s14 + 1/4*denom(1/2*s12)*mt^6*mh^2*s13
       + 2*denom(1/2*s12)*mt^6*mh^2*s12 + 3*denom(1/2*s12)*mt^8*s24 + 2*denom(
      1/2*s12)*mt^8*s23 + 3*denom(1/2*s12)*mt^8*s14 + 2*denom(1/2*s12)*mt^8*
      s13 + 9/2*denom(1/2*s12)*mt^8*s12 - 1/2*denom(1/2*s12)*mt^8*mh^2 - 2*
      denom(1/2*s12)*mt^10 + 1/8*denom(1/4*s12^2)*s14^3*s23^2*s24 + 1/4*denom(
      1/4*s12^2)*s13*s14^2*s23*s24^2 + 1/8*denom(1/4*s12^2)*s13^2*s14*s24^3 + 
      1/8*denom(1/4*s12^2)*s12*s14^2*s23*s24^2 + 1/8*denom(1/4*s12^2)*s12*
      s14^2*s23^2*s24 + 1/8*denom(1/4*s12^2)*s12*s14^3*s23*s24 + 1/8*denom(1/4
      *s12^2)*s12*s13*s14*s24^3 + 1/8*denom(1/4*s12^2)*s12*s13*s14*s23*s24^2
       + 1/8*denom(1/4*s12^2)*s12*s13*s14^2*s24^2 + 1/8*denom(1/4*s12^2)*s12*
      s13*s14^2*s23*s24 + 1/8*denom(1/4*s12^2)*s12*s13^2*s14*s24^2 + 1/8*
      denom(1/4*s12^2)*s12^2*s14^2*s23*s24 + 1/8*denom(1/4*s12^2)*s12^2*s13*
      s14*s24^2 - 1/8*denom(1/4*s12^2)*mh^2*s12*s14^2*s23*s24 - 1/8*denom(1/4*
      s12^2)*mh^2*s12*s13*s14*s24^2 - 1/4*denom(1/4*s12^2)*mt^2*s14^2*s23*
      s24^2 - 3/8*denom(1/4*s12^2)*mt^2*s14^2*s23^2*s24 - 1/4*denom(1/4*s12^2)
      *mt^2*s14^3*s23*s24 - 1/8*denom(1/4*s12^2)*mt^2*s14^3*s23^2 - 1/4*denom(
      1/4*s12^2)*mt^2*s13*s14*s24^3 - 1/2*denom(1/4*s12^2)*mt^2*s13*s14*s23*
      s24^2 - 1/4*denom(1/4*s12^2)*mt^2*s13*s14^2*s24^2 - 1/2*denom(1/4*s12^2)
      *mt^2*s13*s14^2*s23*s24 - 1/8*denom(1/4*s12^2)*mt^2*s13^2*s24^3 - 3/8*
      denom(1/4*s12^2)*mt^2*s13^2*s14*s24^2 - 1/8*denom(1/4*s12^2)*mt^2*s12*
      s14*s24^3 - 3/8*denom(1/4*s12^2)*mt^2*s12*s14*s23*s24^2 - 1/4*denom(1/4*
      s12^2)*mt^2*s12*s14*s23^2*s24 - 1/4*denom(1/4*s12^2)*mt^2*s12*s14^2*
      s24^2 - denom(1/4*s12^2)*mt^2*s12*s14^2*s23*s24 - 1/8*denom(1/4*s12^2)*
      mt^2*s12*s14^2*s23^2 - 1/8*denom(1/4*s12^2)*mt^2*s12*s14^3*s24 - 1/8*
      denom(1/4*s12^2)*mt^2*s12*s14^3*s23 - 1/8*denom(1/4*s12^2)*mt^2*s12*s13*
      s24^3 - 1/8*denom(1/4*s12^2)*mt^2*s12*s13*s23*s24^2 - denom(1/4*s12^2)*
      mt^2*s12*s13*s14*s24^2 - 1/2*denom(1/4*s12^2)*mt^2*s12*s13*s14*s23*s24
       - 3/8*denom(1/4*s12^2)*mt^2*s12*s13*s14^2*s24 - 1/8*denom(1/4*s12^2)*
      mt^2*s12*s13*s14^2*s23 - 1/8*denom(1/4*s12^2)*mt^2*s12*s13^2*s24^2 - 1/4
      *denom(1/4*s12^2)*mt^2*s12*s13^2*s14*s24 - 1/8*denom(1/4*s12^2)*mt^2*
      s12^2*s14*s24^2 - 1/4*denom(1/4*s12^2)*mt^2*s12^2*s14*s23*s24 - 1/8*
      denom(1/4*s12^2)*mt^2*s12^2*s14^2*s24 - 1/8*denom(1/4*s12^2)*mt^2*s12^2*
      s14^2*s23 - 1/8*denom(1/4*s12^2)*mt^2*s12^2*s13*s24^2 - 1/4*denom(1/4*
      s12^2)*mt^2*s12^2*s13*s14*s24 + 1/8*denom(1/4*s12^2)*mt^2*mh^2*s12*s14*
      s24^2 + 1/4*denom(1/4*s12^2)*mt^2*mh^2*s12*s14*s23*s24 + 1/8*denom(1/4*
      s12^2)*mt^2*mh^2*s12*s14^2*s24 + 1/8*denom(1/4*s12^2)*mt^2*mh^2*s12*
      s14^2*s23 + 1/8*denom(1/4*s12^2)*mt^2*mh^2*s12*s13*s24^2 + 1/4*denom(1/4
      *s12^2)*mt^2*mh^2*s12*s13*s14*s24 + 1/8*denom(1/4*s12^2)*mt^4*s14*s24^3
       + 1/2*denom(1/4*s12^2)*mt^4*s14*s23*s24^2 + 3/8*denom(1/4*s12^2)*mt^4*
      s14*s23^2*s24 + 1/4*denom(1/4*s12^2)*mt^4*s14^2*s24^2 + 5/4*denom(1/4*
      s12^2)*mt^4*s14^2*s23*s24 + 3/8*denom(1/4*s12^2)*mt^4*s14^2*s23^2 + 1/8*
      denom(1/4*s12^2)*mt^4*s14^3*s24 + 1/4*denom(1/4*s12^2)*mt^4*s14^3*s23 + 
      1/4*denom(1/4*s12^2)*mt^4*s13*s24^3 + 1/4*denom(1/4*s12^2)*mt^4*s13*s23*
      s24^2 + 5/4*denom(1/4*s12^2)*mt^4*s13*s14*s24^2 + denom(1/4*s12^2)*mt^4*
      s13*s14*s23*s24 + 1/2*denom(1/4*s12^2)*mt^4*s13*s14^2*s24 + 1/4*denom(1/
      4*s12^2)*mt^4*s13*s14^2*s23 + 3/8*denom(1/4*s12^2)*mt^4*s13^2*s24^2 + 3/
      8*denom(1/4*s12^2)*mt^4*s13^2*s14*s24 + 1/8*denom(1/4*s12^2)*mt^4*s12*
      s24^3 + 1/4*denom(1/4*s12^2)*mt^4*s12*s23*s24^2 + 1/8*denom(1/4*s12^2)*
      mt^4*s12*s23^2*s24 + 9/8*denom(1/4*s12^2)*mt^4*s12*s14*s24^2 + 15/8*
      denom(1/4*s12^2)*mt^4*s12*s14*s23*s24 + 1/4*denom(1/4*s12^2)*mt^4*s12*
      s14*s23^2 + 9/8*denom(1/4*s12^2)*mt^4*s12*s14^2*s24 + 7/8*denom(1/4*
      s12^2)*mt^4*s12*s14^2*s23 + 1/8*denom(1/4*s12^2)*mt^4*s12*s14^3 + 7/8*
      denom(1/4*s12^2)*mt^4*s12*s13*s24^2 + 3/8*denom(1/4*s12^2)*mt^4*s12*s13*
      s23*s24 + 15/8*denom(1/4*s12^2)*mt^4*s12*s13*s14*s24 + 3/8*denom(1/4*
      s12^2)*mt^4*s12*s13*s14*s23 + 1/4*denom(1/4*s12^2)*mt^4*s12*s13*s14^2 + 
      1/4*denom(1/4*s12^2)*mt^4*s12*s13^2*s24 + 1/8*denom(1/4*s12^2)*mt^4*s12*
      s13^2*s14 + 1/8*denom(1/4*s12^2)*mt^4*s12^2*s24^2 + 1/8*denom(1/4*s12^2)
      *mt^4*s12^2*s23*s24 + 1/2*denom(1/4*s12^2)*mt^4*s12^2*s14*s24 + 1/4*
      denom(1/4*s12^2)*mt^4*s12^2*s14*s23 + 1/8*denom(1/4*s12^2)*mt^4*s12^2*
      s14^2 + 1/4*denom(1/4*s12^2)*mt^4*s12^2*s13*s24 + 1/8*denom(1/4*s12^2)*
      mt^4*s12^2*s13*s14 - 1/8*denom(1/4*s12^2)*mt^4*mh^2*s12*s24^2 - 1/8*
      denom(1/4*s12^2)*mt^4*mh^2*s12*s23*s24 - 1/2*denom(1/4*s12^2)*mt^4*mh^2*
      s12*s14*s24 - 1/4*denom(1/4*s12^2)*mt^4*mh^2*s12*s14*s23 - 1/8*denom(1/4
      *s12^2)*mt^4*mh^2*s12*s14^2 - 1/4*denom(1/4*s12^2)*mt^4*mh^2*s12*s13*s24
       - 1/8*denom(1/4*s12^2)*mt^4*mh^2*s12*s13*s14 - 1/8*denom(1/4*s12^2)*
      mt^6*s24^3 - 1/4*denom(1/4*s12^2)*mt^6*s23*s24^2 - 1/8*denom(1/4*s12^2)*
      mt^6*s23^2*s24 - 7/8*denom(1/4*s12^2)*mt^6*s14*s24^2 - 7/4*denom(1/4*
      s12^2)*mt^6*s14*s23*s24 - 3/8*denom(1/4*s12^2)*mt^6*s14*s23^2 - 7/8*
      denom(1/4*s12^2)*mt^6*s14^2*s24 - denom(1/4*s12^2)*mt^6*s14^2*s23 - 1/8*
      denom(1/4*s12^2)*mt^6*s14^3 - denom(1/4*s12^2)*mt^6*s13*s24^2 - 1/2*
      denom(1/4*s12^2)*mt^6*s13*s23*s24 - 7/4*denom(1/4*s12^2)*mt^6*s13*s14*
      s24 - 1/2*denom(1/4*s12^2)*mt^6*s13*s14*s23 - 1/4*denom(1/4*s12^2)*mt^6*
      s13*s14^2 - 3/8*denom(1/4*s12^2)*mt^6*s13^2*s24 - 1/8*denom(1/4*s12^2)*
      mt^6*s13^2*s14 - 7/8*denom(1/4*s12^2)*mt^6*s12*s24^2 - denom(1/4*s12^2)*
      mt^6*s12*s23*s24 - 1/8*denom(1/4*s12^2)*mt^6*s12*s23^2 - 11/4*denom(1/4*
      s12^2)*mt^6*s12*s14*s24 - 3/2*denom(1/4*s12^2)*mt^6*s12*s14*s23 - 7/8*
      denom(1/4*s12^2)*mt^6*s12*s14^2 - 3/2*denom(1/4*s12^2)*mt^6*s12*s13*s24
       - 1/4*denom(1/4*s12^2)*mt^6*s12*s13*s23 - denom(1/4*s12^2)*mt^6*s12*s13
      *s14 - 1/8*denom(1/4*s12^2)*mt^6*s12*s13^2 - 3/8*denom(1/4*s12^2)*mt^6*
      s12^2*s24 - 1/8*denom(1/4*s12^2)*mt^6*s12^2*s23 - 3/8*denom(1/4*s12^2)*
      mt^6*s12^2*s14 - 1/8*denom(1/4*s12^2)*mt^6*s12^2*s13 + 3/8*denom(1/4*
      s12^2)*mt^6*mh^2*s12*s24 + 1/8*denom(1/4*s12^2)*mt^6*mh^2*s12*s23 + 3/8*
      denom(1/4*s12^2)*mt^6*mh^2*s12*s14 + 1/8*denom(1/4*s12^2)*mt^6*mh^2*s12*
      s13 + 5/8*denom(1/4*s12^2)*mt^8*s24^2 + 3/4*denom(1/4*s12^2)*mt^8*s23*
      s24 + 1/8*denom(1/4*s12^2)*mt^8*s23^2 + 7/4*denom(1/4*s12^2)*mt^8*s14*
      s24 + 5/4*denom(1/4*s12^2)*mt^8*s14*s23 + 5/8*denom(1/4*s12^2)*mt^8*
      s14^2 + 5/4*denom(1/4*s12^2)*mt^8*s13*s24 + 1/4*denom(1/4*s12^2)*mt^8*
      s13*s23 + 3/4*denom(1/4*s12^2)*mt^8*s13*s14 + 1/8*denom(1/4*s12^2)*mt^8*
      s13^2 + 7/4*denom(1/4*s12^2)*mt^8*s12*s24 + 3/4*denom(1/4*s12^2)*mt^8*
      s12*s23 + 7/4*denom(1/4*s12^2)*mt^8*s12*s14 + 3/4*denom(1/4*s12^2)*mt^8*
      s12*s13 + 1/4*denom(1/4*s12^2)*mt^8*s12^2 - 1/4*denom(1/4*s12^2)*mt^8*
      mh^2*s12 - denom(1/4*s12^2)*mt^10*s24 - 1/2*denom(1/4*s12^2)*mt^10*s23
       - denom(1/4*s12^2)*mt^10*s14 - 1/2*denom(1/4*s12^2)*mt^10*s13 - denom(1/
      4*s12^2)*mt^10*s12 + 1/2*denom(1/4*s12^2)*mt^12;
 
 .sort
id KMatrix(11,9) =   - mt^2*s23*s24^2 - mt^2*s23^2*s24 - mt^2*s14*s23*s24 - 
      mt^2*s13*s23*s24 - mt^2*s12*s23*s24 + mt^2*mh^2*s23*s24 + mt^4*s24^2 + 4
      *mt^4*s23*s24 + mt^4*s23^2 + mt^4*s14*s24 + mt^4*s14*s23 + mt^4*s13*s24
       + mt^4*s13*s23 + mt^4*s12*s24 + mt^4*s12*s23 - mt^4*mh^2*s24 - mt^4*
      mh^2*s23 - 3*mt^6*s24 - 3*mt^6*s23 - mt^6*s14 - mt^6*s13 - mt^6*s12 + 
      mt^6*mh^2 + 2*mt^8 + 1/2*denom(1/2*s12)*s13*s23^2*s24^2 + 1/2*denom(1/2*
      s12)*s13*s23^3*s24 + 1/2*denom(1/2*s12)*s13*s14*s23^2*s24 + 1/2*denom(1/
      2*s12)*s13^2*s23^2*s24 + 1/2*denom(1/2*s12)*s12*s13*s23^2*s24 - 1/2*
      denom(1/2*s12)*mh^2*s13*s23^2*s24 - 1/2*denom(1/2*s12)*mt^2*s23^2*s24^2
       - 1/2*denom(1/2*s12)*mt^2*s23^3*s24 - denom(1/2*s12)*mt^2*s14*s23^2*s24
       - 3/2*denom(1/2*s12)*mt^2*s13*s23*s24^2 - 3*denom(1/2*s12)*mt^2*s13*
      s23^2*s24 - 1/2*denom(1/2*s12)*mt^2*s13*s23^3 - denom(1/2*s12)*mt^2*s13*
      s14*s23*s24 - 1/2*denom(1/2*s12)*mt^2*s13*s14*s23^2 - denom(1/2*s12)*
      mt^2*s13^2*s23*s24 - 1/2*denom(1/2*s12)*mt^2*s13^2*s23^2 - 1/2*denom(1/2
      *s12)*mt^2*s12*s23^2*s24 - denom(1/2*s12)*mt^2*s12*s13*s23*s24 - 1/2*
      denom(1/2*s12)*mt^2*s12*s13*s23^2 + 1/2*denom(1/2*s12)*mt^2*mh^2*s23^2*
      s24 + denom(1/2*s12)*mt^2*mh^2*s13*s23*s24 + 1/2*denom(1/2*s12)*mt^2*
      mh^2*s13*s23^2 + 3/2*denom(1/2*s12)*mt^4*s23*s24^2 + 3*denom(1/2*s12)*
      mt^4*s23^2*s24 + 1/2*denom(1/2*s12)*mt^4*s23^3 + 2*denom(1/2*s12)*mt^4*
      s14*s23*s24 + denom(1/2*s12)*mt^4*s14*s23^2 + denom(1/2*s12)*mt^4*s13*
      s24^2 + 11/2*denom(1/2*s12)*mt^4*s13*s23*s24 + 5/2*denom(1/2*s12)*mt^4*
      s13*s23^2 + 1/2*denom(1/2*s12)*mt^4*s13*s14*s24 + denom(1/2*s12)*mt^4*
      s13*s14*s23 + 1/2*denom(1/2*s12)*mt^4*s13^2*s24 + denom(1/2*s12)*mt^4*
      s13^2*s23 + denom(1/2*s12)*mt^4*s12*s23*s24 + 1/2*denom(1/2*s12)*mt^4*
      s12*s23^2 + 1/2*denom(1/2*s12)*mt^4*s12*s13*s24 + denom(1/2*s12)*mt^4*
      s12*s13*s23 - denom(1/2*s12)*mt^4*mh^2*s23*s24 - 1/2*denom(1/2*s12)*mt^4
      *mh^2*s23^2 - 1/2*denom(1/2*s12)*mt^4*mh^2*s13*s24 - denom(1/2*s12)*mt^4
      *mh^2*s13*s23 - denom(1/2*s12)*mt^6*s24^2 - 11/2*denom(1/2*s12)*mt^6*s23
      *s24 - 5/2*denom(1/2*s12)*mt^6*s23^2 - denom(1/2*s12)*mt^6*s14*s24 - 2*
      denom(1/2*s12)*mt^6*s14*s23 - 3*denom(1/2*s12)*mt^6*s13*s24 - 4*denom(1/
      2*s12)*mt^6*s13*s23 - 1/2*denom(1/2*s12)*mt^6*s13*s14 - 1/2*denom(1/2*
      s12)*mt^6*s13^2 - 1/2*denom(1/2*s12)*mt^6*s12*s24 - denom(1/2*s12)*mt^6*
      s12*s23 - 1/2*denom(1/2*s12)*mt^6*s12*s13 + 1/2*denom(1/2*s12)*mt^6*mh^2
      *s24 + denom(1/2*s12)*mt^6*mh^2*s23 + 1/2*denom(1/2*s12)*mt^6*mh^2*s13
       + 3*denom(1/2*s12)*mt^8*s24 + 4*denom(1/2*s12)*mt^8*s23 + denom(1/2*s12
      )*mt^8*s14 + 2*denom(1/2*s12)*mt^8*s13 + 1/2*denom(1/2*s12)*mt^8*s12 - 1/
      2*denom(1/2*s12)*mt^8*mh^2 - 2*denom(1/2*s12)*mt^10 + 1/4*denom(1/4*
      s12^2)*s13*s14*s23^3*s24 + 1/4*denom(1/4*s12^2)*s13^2*s23^2*s24^2 - 1/4*
      denom(1/4*s12^2)*mt^2*s14*s23^3*s24 - 1/2*denom(1/4*s12^2)*mt^2*s13*
      s23^2*s24^2 - 1/4*denom(1/4*s12^2)*mt^2*s13*s23^3*s24 - 3/4*denom(1/4*
      s12^2)*mt^2*s13*s14*s23^2*s24 - 1/4*denom(1/4*s12^2)*mt^2*s13*s14*s23^3
       - 1/2*denom(1/4*s12^2)*mt^2*s13^2*s23*s24^2 - 1/2*denom(1/4*s12^2)*mt^2
      *s13^2*s23^2*s24 + 1/4*denom(1/4*s12^2)*mt^4*s23^2*s24^2 + 1/4*denom(1/4
      *s12^2)*mt^4*s23^3*s24 + 3/4*denom(1/4*s12^2)*mt^4*s14*s23^2*s24 + 1/4*
      denom(1/4*s12^2)*mt^4*s14*s23^3 + denom(1/4*s12^2)*mt^4*s13*s23*s24^2 + 
      7/4*denom(1/4*s12^2)*mt^4*s13*s23^2*s24 + 1/4*denom(1/4*s12^2)*mt^4*s13*
      s23^3 + 3/4*denom(1/4*s12^2)*mt^4*s13*s14*s23*s24 + 3/4*denom(1/4*s12^2)
      *mt^4*s13*s14*s23^2 + 1/4*denom(1/4*s12^2)*mt^4*s13^2*s24^2 + denom(1/4*
      s12^2)*mt^4*s13^2*s23*s24 + 1/4*denom(1/4*s12^2)*mt^4*s13^2*s23^2 - 1/2*
      denom(1/4*s12^2)*mt^6*s23*s24^2 - 5/4*denom(1/4*s12^2)*mt^6*s23^2*s24 - 
      1/4*denom(1/4*s12^2)*mt^6*s23^3 - 3/4*denom(1/4*s12^2)*mt^6*s14*s23*s24
       - 3/4*denom(1/4*s12^2)*mt^6*s14*s23^2 - 1/2*denom(1/4*s12^2)*mt^6*s13*
      s24^2 - 11/4*denom(1/4*s12^2)*mt^6*s13*s23*s24 - 5/4*denom(1/4*s12^2)*
      mt^6*s13*s23^2 - 1/4*denom(1/4*s12^2)*mt^6*s13*s14*s24 - 3/4*denom(1/4*
      s12^2)*mt^6*s13*s14*s23 - 1/2*denom(1/4*s12^2)*mt^6*s13^2*s24 - 1/2*
      denom(1/4*s12^2)*mt^6*s13^2*s23 + 1/4*denom(1/4*s12^2)*mt^8*s24^2 + 7/4*
      denom(1/4*s12^2)*mt^8*s23*s24 + denom(1/4*s12^2)*mt^8*s23^2 + 1/4*denom(
      1/4*s12^2)*mt^8*s14*s24 + 3/4*denom(1/4*s12^2)*mt^8*s14*s23 + 5/4*denom(
      1/4*s12^2)*mt^8*s13*s24 + 7/4*denom(1/4*s12^2)*mt^8*s13*s23 + 1/4*denom(
      1/4*s12^2)*mt^8*s13*s14 + 1/4*denom(1/4*s12^2)*mt^8*s13^2 - 3/4*denom(1/
      4*s12^2)*mt^10*s24 - 5/4*denom(1/4*s12^2)*mt^10*s23 - 1/4*denom(1/4*
      s12^2)*mt^10*s14 - 3/4*denom(1/4*s12^2)*mt^10*s13 + 1/2*denom(1/4*s12^2)
      *mt^12;
 
 .sort
id KMatrix(11,10) =  1/2*s23*s24^3 + s23^2*s24^2 + 1/2*s23^3*s24 + s14*s23*
      s24^2 + s14*s23^2*s24 + 1/2*s14^2*s23*s24 + s13*s23*s24^2 + s13*s23^2*
      s24 + s13*s14*s23*s24 + 1/2*s13^2*s23*s24 + s12*s23*s24^2 + s12*s23^2*
      s24 + s12*s14*s23*s24 + s12*s13*s23*s24 + 1/2*s12^2*s23*s24 - mh^2*s23*
      s24^2 - mh^2*s23^2*s24 - mh^2*s14*s23*s24 - mh^2*s13*s23*s24 - mh^2*s12*
      s23*s24 + 1/2*mh^4*s23*s24 - 1/2*mt^2*s24^3 - 7/2*mt^2*s23*s24^2 - 7/2*
      mt^2*s23^2*s24 - 1/2*mt^2*s23^3 - mt^2*s14*s24^2 - 4*mt^2*s14*s23*s24 - 
      mt^2*s14*s23^2 - 1/2*mt^2*s14^2*s24 - 1/2*mt^2*s14^2*s23 - mt^2*s13*
      s24^2 - 4*mt^2*s13*s23*s24 - mt^2*s13*s23^2 - mt^2*s13*s14*s24 - mt^2*
      s13*s14*s23 - 1/2*mt^2*s13^2*s24 - 1/2*mt^2*s13^2*s23 - mt^2*s12*s24^2
       - 4*mt^2*s12*s23*s24 - mt^2*s12*s23^2 - mt^2*s12*s14*s24 - mt^2*s12*s14
      *s23 - mt^2*s12*s13*s24 - mt^2*s12*s13*s23 - 1/2*mt^2*s12^2*s24 - 1/2*
      mt^2*s12^2*s23 + mt^2*mh^2*s24^2 + 4*mt^2*mh^2*s23*s24 + mt^2*mh^2*s23^2
       + mt^2*mh^2*s14*s24 + mt^2*mh^2*s14*s23 + mt^2*mh^2*s13*s24 + mt^2*mh^2
      *s13*s23 + mt^2*mh^2*s12*s24 + mt^2*mh^2*s12*s23 - 1/2*mt^2*mh^4*s24 - 1/
      2*mt^2*mh^4*s23 + 5/2*mt^4*s24^2 + 7*mt^4*s23*s24 + 5/2*mt^4*s23^2 + 3*
      mt^4*s14*s24 + 3*mt^4*s14*s23 + 1/2*mt^4*s14^2 + 3*mt^4*s13*s24 + 3*mt^4
      *s13*s23 + mt^4*s13*s14 + 1/2*mt^4*s13^2 + 3*mt^4*s12*s24 + 3*mt^4*s12*
      s23 + mt^4*s12*s14 + mt^4*s12*s13 + 1/2*mt^4*s12^2 - 3*mt^4*mh^2*s24 - 3
      *mt^4*mh^2*s23 - mt^4*mh^2*s14 - mt^4*mh^2*s13 - mt^4*mh^2*s12 + 1/2*
      mt^4*mh^4 - 4*mt^6*s24 - 4*mt^6*s23 - 2*mt^6*s14 - 2*mt^6*s13 - 2*mt^6*
      s12 + 2*mt^6*mh^2 + 2*mt^8 + 1/2*denom(1/2*s12)*s14*s23^2*s24^2 + 1/2*
      denom(1/2*s12)*s14*s23^3*s24 + 1/2*denom(1/2*s12)*s14^2*s23^2*s24 + 1/2*
      denom(1/2*s12)*s13*s23*s24^3 + 1/2*denom(1/2*s12)*s13*s23^2*s24^2 + 1/2*
      denom(1/2*s12)*s13*s14*s23*s24^2 + 1/2*denom(1/2*s12)*s13*s14*s23^2*s24
       + 1/2*denom(1/2*s12)*s13^2*s23*s24^2 + 1/2*denom(1/2*s12)*s12*s14*s23^2
      *s24 + 1/2*denom(1/2*s12)*s12*s13*s23*s24^2 - 1/2*denom(1/2*s12)*mh^2*
      s14*s23^2*s24 - 1/2*denom(1/2*s12)*mh^2*s13*s23*s24^2 - 1/2*denom(1/2*
      s12)*mt^2*s23*s24^3 - denom(1/2*s12)*mt^2*s23^2*s24^2 - 1/2*denom(1/2*
      s12)*mt^2*s23^3*s24 - 3/2*denom(1/2*s12)*mt^2*s14*s23*s24^2 - 3*denom(1/
      2*s12)*mt^2*s14*s23^2*s24 - 1/2*denom(1/2*s12)*mt^2*s14*s23^3 - denom(1/
      2*s12)*mt^2*s14^2*s23*s24 - 1/2*denom(1/2*s12)*mt^2*s14^2*s23^2 - 1/2*
      denom(1/2*s12)*mt^2*s13*s24^3 - 3*denom(1/2*s12)*mt^2*s13*s23*s24^2 - 3/
      2*denom(1/2*s12)*mt^2*s13*s23^2*s24 - 1/2*denom(1/2*s12)*mt^2*s13*s14*
      s24^2 - 2*denom(1/2*s12)*mt^2*s13*s14*s23*s24 - 1/2*denom(1/2*s12)*mt^2*
      s13*s14*s23^2 - 1/2*denom(1/2*s12)*mt^2*s13^2*s24^2 - denom(1/2*s12)*
      mt^2*s13^2*s23*s24 - 1/2*denom(1/2*s12)*mt^2*s12*s23*s24^2 - 1/2*denom(1/
      2*s12)*mt^2*s12*s23^2*s24 - denom(1/2*s12)*mt^2*s12*s14*s23*s24 - 1/2*
      denom(1/2*s12)*mt^2*s12*s14*s23^2 - 1/2*denom(1/2*s12)*mt^2*s12*s13*
      s24^2 - denom(1/2*s12)*mt^2*s12*s13*s23*s24 + 1/2*denom(1/2*s12)*mt^2*
      mh^2*s23*s24^2 + 1/2*denom(1/2*s12)*mt^2*mh^2*s23^2*s24 + denom(1/2*s12)
      *mt^2*mh^2*s14*s23*s24 + 1/2*denom(1/2*s12)*mt^2*mh^2*s14*s23^2 + 1/2*
      denom(1/2*s12)*mt^2*mh^2*s13*s24^2 + denom(1/2*s12)*mt^2*mh^2*s13*s23*
      s24 + 1/2*denom(1/2*s12)*mt^4*s24^3 + 7/2*denom(1/2*s12)*mt^4*s23*s24^2
       + 7/2*denom(1/2*s12)*mt^4*s23^2*s24 + 1/2*denom(1/2*s12)*mt^4*s23^3 + 
      denom(1/2*s12)*mt^4*s14*s24^2 + 11/2*denom(1/2*s12)*mt^4*s14*s23*s24 + 5/
      2*denom(1/2*s12)*mt^4*s14*s23^2 + 1/2*denom(1/2*s12)*mt^4*s14^2*s24 + 
      denom(1/2*s12)*mt^4*s14^2*s23 + 5/2*denom(1/2*s12)*mt^4*s13*s24^2 + 11/2
      *denom(1/2*s12)*mt^4*s13*s23*s24 + denom(1/2*s12)*mt^4*s13*s23^2 + 3/2*
      denom(1/2*s12)*mt^4*s13*s14*s24 + 3/2*denom(1/2*s12)*mt^4*s13*s14*s23 + 
      denom(1/2*s12)*mt^4*s13^2*s24 + 1/2*denom(1/2*s12)*mt^4*s13^2*s23 + 1/2*
      denom(1/2*s12)*mt^4*s12*s24^2 + 2*denom(1/2*s12)*mt^4*s12*s23*s24 + 1/2*
      denom(1/2*s12)*mt^4*s12*s23^2 + 1/2*denom(1/2*s12)*mt^4*s12*s14*s24 + 
      denom(1/2*s12)*mt^4*s12*s14*s23 + denom(1/2*s12)*mt^4*s12*s13*s24 + 1/2*
      denom(1/2*s12)*mt^4*s12*s13*s23 - 1/2*denom(1/2*s12)*mt^4*mh^2*s24^2 - 2
      *denom(1/2*s12)*mt^4*mh^2*s23*s24 - 1/2*denom(1/2*s12)*mt^4*mh^2*s23^2
       - 1/2*denom(1/2*s12)*mt^4*mh^2*s14*s24 - denom(1/2*s12)*mt^4*mh^2*s14*
      s23 - denom(1/2*s12)*mt^4*mh^2*s13*s24 - 1/2*denom(1/2*s12)*mt^4*mh^2*
      s13*s23 - 5/2*denom(1/2*s12)*mt^6*s24^2 - 7*denom(1/2*s12)*mt^6*s23*s24
       - 5/2*denom(1/2*s12)*mt^6*s23^2 - 3*denom(1/2*s12)*mt^6*s14*s24 - 4*
      denom(1/2*s12)*mt^6*s14*s23 - 1/2*denom(1/2*s12)*mt^6*s14^2 - 4*denom(1/
      2*s12)*mt^6*s13*s24 - 3*denom(1/2*s12)*mt^6*s13*s23 - denom(1/2*s12)*
      mt^6*s13*s14 - 1/2*denom(1/2*s12)*mt^6*s13^2 - 3/2*denom(1/2*s12)*mt^6*
      s12*s24 - 3/2*denom(1/2*s12)*mt^6*s12*s23 - 1/2*denom(1/2*s12)*mt^6*s12*
      s14 - 1/2*denom(1/2*s12)*mt^6*s12*s13 + 3/2*denom(1/2*s12)*mt^6*mh^2*s24
       + 3/2*denom(1/2*s12)*mt^6*mh^2*s23 + 1/2*denom(1/2*s12)*mt^6*mh^2*s14
       + 1/2*denom(1/2*s12)*mt^6*mh^2*s13 + 4*denom(1/2*s12)*mt^8*s24 + 4*
      denom(1/2*s12)*mt^8*s23 + 2*denom(1/2*s12)*mt^8*s14 + 2*denom(1/2*s12)*
      mt^8*s13 + denom(1/2*s12)*mt^8*s12 - denom(1/2*s12)*mt^8*mh^2 - 2*denom(
      1/2*s12)*mt^10 + 1/8*denom(1/4*s12^2)*s14^2*s23^3*s24 + 1/4*denom(1/4*
      s12^2)*s13*s14*s23^2*s24^2 + 1/8*denom(1/4*s12^2)*s13^2*s23*s24^3 - 1/4*
      denom(1/4*s12^2)*mt^2*s14*s23^2*s24^2 - 1/4*denom(1/4*s12^2)*mt^2*s14*
      s23^3*s24 - 3/8*denom(1/4*s12^2)*mt^2*s14^2*s23^2*s24 - 1/8*denom(1/4*
      s12^2)*mt^2*s14^2*s23^3 - 1/4*denom(1/4*s12^2)*mt^2*s13*s23*s24^3 - 1/4*
      denom(1/4*s12^2)*mt^2*s13*s23^2*s24^2 - 1/2*denom(1/4*s12^2)*mt^2*s13*
      s14*s23*s24^2 - 1/2*denom(1/4*s12^2)*mt^2*s13*s14*s23^2*s24 - 1/8*denom(
      1/4*s12^2)*mt^2*s13^2*s24^3 - 3/8*denom(1/4*s12^2)*mt^2*s13^2*s23*s24^2
       + 1/8*denom(1/4*s12^2)*mt^4*s23*s24^3 + 1/4*denom(1/4*s12^2)*mt^4*s23^2
      *s24^2 + 1/8*denom(1/4*s12^2)*mt^4*s23^3*s24 + 1/2*denom(1/4*s12^2)*mt^4
      *s14*s23*s24^2 + 5/4*denom(1/4*s12^2)*mt^4*s14*s23^2*s24 + 1/4*denom(1/4
      *s12^2)*mt^4*s14*s23^3 + 3/8*denom(1/4*s12^2)*mt^4*s14^2*s23*s24 + 3/8*
      denom(1/4*s12^2)*mt^4*s14^2*s23^2 + 1/4*denom(1/4*s12^2)*mt^4*s13*s24^3
       + 5/4*denom(1/4*s12^2)*mt^4*s13*s23*s24^2 + 1/2*denom(1/4*s12^2)*mt^4*
      s13*s23^2*s24 + 1/4*denom(1/4*s12^2)*mt^4*s13*s14*s24^2 + denom(1/4*
      s12^2)*mt^4*s13*s14*s23*s24 + 1/4*denom(1/4*s12^2)*mt^4*s13*s14*s23^2 + 
      3/8*denom(1/4*s12^2)*mt^4*s13^2*s24^2 + 3/8*denom(1/4*s12^2)*mt^4*s13^2*
      s23*s24 - 1/8*denom(1/4*s12^2)*mt^6*s24^3 - 7/8*denom(1/4*s12^2)*mt^6*
      s23*s24^2 - 7/8*denom(1/4*s12^2)*mt^6*s23^2*s24 - 1/8*denom(1/4*s12^2)*
      mt^6*s23^3 - 1/4*denom(1/4*s12^2)*mt^6*s14*s24^2 - 7/4*denom(1/4*s12^2)*
      mt^6*s14*s23*s24 - denom(1/4*s12^2)*mt^6*s14*s23^2 - 1/8*denom(1/4*s12^2
      )*mt^6*s14^2*s24 - 3/8*denom(1/4*s12^2)*mt^6*s14^2*s23 - denom(1/4*s12^2
      )*mt^6*s13*s24^2 - 7/4*denom(1/4*s12^2)*mt^6*s13*s23*s24 - 1/4*denom(1/4
      *s12^2)*mt^6*s13*s23^2 - 1/2*denom(1/4*s12^2)*mt^6*s13*s14*s24 - 1/2*
      denom(1/4*s12^2)*mt^6*s13*s14*s23 - 3/8*denom(1/4*s12^2)*mt^6*s13^2*s24
       - 1/8*denom(1/4*s12^2)*mt^6*s13^2*s23 + 5/8*denom(1/4*s12^2)*mt^8*s24^2
       + 7/4*denom(1/4*s12^2)*mt^8*s23*s24 + 5/8*denom(1/4*s12^2)*mt^8*s23^2
       + 3/4*denom(1/4*s12^2)*mt^8*s14*s24 + 5/4*denom(1/4*s12^2)*mt^8*s14*s23
       + 1/8*denom(1/4*s12^2)*mt^8*s14^2 + 5/4*denom(1/4*s12^2)*mt^8*s13*s24
       + 3/4*denom(1/4*s12^2)*mt^8*s13*s23 + 1/4*denom(1/4*s12^2)*mt^8*s13*s14
       + 1/8*denom(1/4*s12^2)*mt^8*s13^2 - denom(1/4*s12^2)*mt^10*s24 - denom(
      1/4*s12^2)*mt^10*s23 - 1/2*denom(1/4*s12^2)*mt^10*s14 - 1/2*denom(1/4*
      s12^2)*mt^10*s13 + 1/2*denom(1/4*s12^2)*mt^12;
 
 .sort
id KMatrix(11,11) =  2*mt^4*s23*s24 - 2*mt^6*s24 - 2*mt^6*s23 + 2*mt^8 - 
      denom(1/2*s12)*mt^2*s14*s23*s24^2 - denom(1/2*s12)*mt^2*s13*s23^2*s24 + 
      denom(1/2*s12)*mt^4*s23*s24^2 + denom(1/2*s12)*mt^4*s23^2*s24 + denom(1/
      2*s12)*mt^4*s14*s24^2 + 2*denom(1/2*s12)*mt^4*s14*s23*s24 + 2*denom(1/2*
      s12)*mt^4*s13*s23*s24 + denom(1/2*s12)*mt^4*s13*s23^2 - denom(1/2*s12)*
      mt^6*s24^2 - 4*denom(1/2*s12)*mt^6*s23*s24 - denom(1/2*s12)*mt^6*s23^2
       - 2*denom(1/2*s12)*mt^6*s14*s24 - denom(1/2*s12)*mt^6*s14*s23 - denom(1/
      2*s12)*mt^6*s13*s24 - 2*denom(1/2*s12)*mt^6*s13*s23 + 3*denom(1/2*s12)*
      mt^8*s24 + 3*denom(1/2*s12)*mt^8*s23 + denom(1/2*s12)*mt^8*s14 + denom(1/
      2*s12)*mt^8*s13 - 2*denom(1/2*s12)*mt^10 + 1/2*denom(1/4*s12^2)*s13*s14*
      s23^2*s24^2 - 1/2*denom(1/4*s12^2)*mt^2*s14*s23^2*s24^2 - 1/2*denom(1/4*
      s12^2)*mt^2*s13*s23^2*s24^2 - denom(1/4*s12^2)*mt^2*s13*s14*s23*s24^2 - 
      denom(1/4*s12^2)*mt^2*s13*s14*s23^2*s24 + 1/2*denom(1/4*s12^2)*mt^4*
      s23^2*s24^2 + denom(1/4*s12^2)*mt^4*s14*s23*s24^2 + denom(1/4*s12^2)*
      mt^4*s14*s23^2*s24 + denom(1/4*s12^2)*mt^4*s13*s23*s24^2 + denom(1/4*
      s12^2)*mt^4*s13*s23^2*s24 + 1/2*denom(1/4*s12^2)*mt^4*s13*s14*s24^2 + 2*
      denom(1/4*s12^2)*mt^4*s13*s14*s23*s24 + 1/2*denom(1/4*s12^2)*mt^4*s13*
      s14*s23^2 - denom(1/4*s12^2)*mt^6*s23*s24^2 - denom(1/4*s12^2)*mt^6*
      s23^2*s24 - 1/2*denom(1/4*s12^2)*mt^6*s14*s24^2 - 2*denom(1/4*s12^2)*
      mt^6*s14*s23*s24 - 1/2*denom(1/4*s12^2)*mt^6*s14*s23^2 - 1/2*denom(1/4*
      s12^2)*mt^6*s13*s24^2 - 2*denom(1/4*s12^2)*mt^6*s13*s23*s24 - 1/2*denom(
      1/4*s12^2)*mt^6*s13*s23^2 - denom(1/4*s12^2)*mt^6*s13*s14*s24 - denom(1/
      4*s12^2)*mt^6*s13*s14*s23 + 1/2*denom(1/4*s12^2)*mt^8*s24^2 + 2*denom(1/
      4*s12^2)*mt^8*s23*s24 + 1/2*denom(1/4*s12^2)*mt^8*s23^2 + denom(1/4*
      s12^2)*mt^8*s14*s24 + denom(1/4*s12^2)*mt^8*s14*s23 + denom(1/4*s12^2)*
      mt^8*s13*s24 + denom(1/4*s12^2)*mt^8*s13*s23 + 1/2*denom(1/4*s12^2)*mt^8
      *s13*s14 - denom(1/4*s12^2)*mt^10*s24 - denom(1/4*s12^2)*mt^10*s23 - 1/2
      *denom(1/4*s12^2)*mt^10*s14 - 1/2*denom(1/4*s12^2)*mt^10*s13 + 1/2*
      denom(1/4*s12^2)*mt^12;
 
 .sort
id KMatrix(11,12) =   - mt^2*s23*s24^2 - mt^2*s23^2*s24 - mt^2*s14*s23*s24 - 
      mt^2*s13*s23*s24 - mt^2*s12*s23*s24 + mt^2*mh^2*s23*s24 + mt^4*s24^2 + 4
      *mt^4*s23*s24 + mt^4*s23^2 + mt^4*s14*s24 + mt^4*s14*s23 + mt^4*s13*s24
       + mt^4*s13*s23 + mt^4*s12*s24 + mt^4*s12*s23 - mt^4*mh^2*s24 - mt^4*
      mh^2*s23 - 3*mt^6*s24 - 3*mt^6*s23 - mt^6*s14 - mt^6*s13 - mt^6*s12 + 
      mt^6*mh^2 + 2*mt^8 + 1/2*denom(1/2*s12)*s14*s23*s24^3 + 1/2*denom(1/2*
      s12)*s14*s23^2*s24^2 + 1/2*denom(1/2*s12)*s14^2*s23*s24^2 + 1/2*denom(1/
      2*s12)*s13*s14*s23*s24^2 + 1/2*denom(1/2*s12)*s12*s14*s23*s24^2 - 1/2*
      denom(1/2*s12)*mh^2*s14*s23*s24^2 - 1/2*denom(1/2*s12)*mt^2*s23*s24^3 - 
      1/2*denom(1/2*s12)*mt^2*s23^2*s24^2 - 1/2*denom(1/2*s12)*mt^2*s14*s24^3
       - 3*denom(1/2*s12)*mt^2*s14*s23*s24^2 - 3/2*denom(1/2*s12)*mt^2*s14*
      s23^2*s24 - 1/2*denom(1/2*s12)*mt^2*s14^2*s24^2 - denom(1/2*s12)*mt^2*
      s14^2*s23*s24 - denom(1/2*s12)*mt^2*s13*s23*s24^2 - 1/2*denom(1/2*s12)*
      mt^2*s13*s14*s24^2 - denom(1/2*s12)*mt^2*s13*s14*s23*s24 - 1/2*denom(1/2
      *s12)*mt^2*s12*s23*s24^2 - 1/2*denom(1/2*s12)*mt^2*s12*s14*s24^2 - 
      denom(1/2*s12)*mt^2*s12*s14*s23*s24 + 1/2*denom(1/2*s12)*mt^2*mh^2*s23*
      s24^2 + 1/2*denom(1/2*s12)*mt^2*mh^2*s14*s24^2 + denom(1/2*s12)*mt^2*
      mh^2*s14*s23*s24 + 1/2*denom(1/2*s12)*mt^4*s24^3 + 3*denom(1/2*s12)*mt^4
      *s23*s24^2 + 3/2*denom(1/2*s12)*mt^4*s23^2*s24 + 5/2*denom(1/2*s12)*mt^4
      *s14*s24^2 + 11/2*denom(1/2*s12)*mt^4*s14*s23*s24 + denom(1/2*s12)*mt^4*
      s14*s23^2 + denom(1/2*s12)*mt^4*s14^2*s24 + 1/2*denom(1/2*s12)*mt^4*
      s14^2*s23 + denom(1/2*s12)*mt^4*s13*s24^2 + 2*denom(1/2*s12)*mt^4*s13*
      s23*s24 + denom(1/2*s12)*mt^4*s13*s14*s24 + 1/2*denom(1/2*s12)*mt^4*s13*
      s14*s23 + 1/2*denom(1/2*s12)*mt^4*s12*s24^2 + denom(1/2*s12)*mt^4*s12*
      s23*s24 + denom(1/2*s12)*mt^4*s12*s14*s24 + 1/2*denom(1/2*s12)*mt^4*s12*
      s14*s23 - 1/2*denom(1/2*s12)*mt^4*mh^2*s24^2 - denom(1/2*s12)*mt^4*mh^2*
      s23*s24 - denom(1/2*s12)*mt^4*mh^2*s14*s24 - 1/2*denom(1/2*s12)*mt^4*
      mh^2*s14*s23 - 5/2*denom(1/2*s12)*mt^6*s24^2 - 11/2*denom(1/2*s12)*mt^6*
      s23*s24 - denom(1/2*s12)*mt^6*s23^2 - 4*denom(1/2*s12)*mt^6*s14*s24 - 3*
      denom(1/2*s12)*mt^6*s14*s23 - 1/2*denom(1/2*s12)*mt^6*s14^2 - 2*denom(1/
      2*s12)*mt^6*s13*s24 - denom(1/2*s12)*mt^6*s13*s23 - 1/2*denom(1/2*s12)*
      mt^6*s13*s14 - denom(1/2*s12)*mt^6*s12*s24 - 1/2*denom(1/2*s12)*mt^6*s12
      *s23 - 1/2*denom(1/2*s12)*mt^6*s12*s14 + denom(1/2*s12)*mt^6*mh^2*s24 + 
      1/2*denom(1/2*s12)*mt^6*mh^2*s23 + 1/2*denom(1/2*s12)*mt^6*mh^2*s14 + 4*
      denom(1/2*s12)*mt^8*s24 + 3*denom(1/2*s12)*mt^8*s23 + 2*denom(1/2*s12)*
      mt^8*s14 + denom(1/2*s12)*mt^8*s13 + 1/2*denom(1/2*s12)*mt^8*s12 - 1/2*
      denom(1/2*s12)*mt^8*mh^2 - 2*denom(1/2*s12)*mt^10 + 1/4*denom(1/4*s12^2)
      *s14^2*s23^2*s24^2 + 1/4*denom(1/4*s12^2)*s13*s14*s23*s24^3 - 1/4*denom(
      1/4*s12^2)*mt^2*s14*s23*s24^3 - 1/2*denom(1/4*s12^2)*mt^2*s14*s23^2*
      s24^2 - 1/2*denom(1/4*s12^2)*mt^2*s14^2*s23*s24^2 - 1/2*denom(1/4*s12^2)
      *mt^2*s14^2*s23^2*s24 - 1/4*denom(1/4*s12^2)*mt^2*s13*s23*s24^3 - 1/4*
      denom(1/4*s12^2)*mt^2*s13*s14*s24^3 - 3/4*denom(1/4*s12^2)*mt^2*s13*s14*
      s23*s24^2 + 1/4*denom(1/4*s12^2)*mt^4*s23*s24^3 + 1/4*denom(1/4*s12^2)*
      mt^4*s23^2*s24^2 + 1/4*denom(1/4*s12^2)*mt^4*s14*s24^3 + 7/4*denom(1/4*
      s12^2)*mt^4*s14*s23*s24^2 + denom(1/4*s12^2)*mt^4*s14*s23^2*s24 + 1/4*
      denom(1/4*s12^2)*mt^4*s14^2*s24^2 + denom(1/4*s12^2)*mt^4*s14^2*s23*s24
       + 1/4*denom(1/4*s12^2)*mt^4*s14^2*s23^2 + 1/4*denom(1/4*s12^2)*mt^4*s13
      *s24^3 + 3/4*denom(1/4*s12^2)*mt^4*s13*s23*s24^2 + 3/4*denom(1/4*s12^2)*
      mt^4*s13*s14*s24^2 + 3/4*denom(1/4*s12^2)*mt^4*s13*s14*s23*s24 - 1/4*
      denom(1/4*s12^2)*mt^6*s24^3 - 5/4*denom(1/4*s12^2)*mt^6*s23*s24^2 - 1/2*
      denom(1/4*s12^2)*mt^6*s23^2*s24 - 5/4*denom(1/4*s12^2)*mt^6*s14*s24^2 - 
      11/4*denom(1/4*s12^2)*mt^6*s14*s23*s24 - 1/2*denom(1/4*s12^2)*mt^6*s14*
      s23^2 - 1/2*denom(1/4*s12^2)*mt^6*s14^2*s24 - 1/2*denom(1/4*s12^2)*mt^6*
      s14^2*s23 - 3/4*denom(1/4*s12^2)*mt^6*s13*s24^2 - 3/4*denom(1/4*s12^2)*
      mt^6*s13*s23*s24 - 3/4*denom(1/4*s12^2)*mt^6*s13*s14*s24 - 1/4*denom(1/4
      *s12^2)*mt^6*s13*s14*s23 + denom(1/4*s12^2)*mt^8*s24^2 + 7/4*denom(1/4*
      s12^2)*mt^8*s23*s24 + 1/4*denom(1/4*s12^2)*mt^8*s23^2 + 7/4*denom(1/4*
      s12^2)*mt^8*s14*s24 + 5/4*denom(1/4*s12^2)*mt^8*s14*s23 + 1/4*denom(1/4*
      s12^2)*mt^8*s14^2 + 3/4*denom(1/4*s12^2)*mt^8*s13*s24 + 1/4*denom(1/4*
      s12^2)*mt^8*s13*s23 + 1/4*denom(1/4*s12^2)*mt^8*s13*s14 - 5/4*denom(1/4*
      s12^2)*mt^10*s24 - 3/4*denom(1/4*s12^2)*mt^10*s23 - 3/4*denom(1/4*s12^2)
      *mt^10*s14 - 1/4*denom(1/4*s12^2)*mt^10*s13 + 1/2*denom(1/4*s12^2)*mt^12
      ;
 
 .sort
id KMatrix(11,13) =  mt^3*s12*s23*s24 + mt^3*s12*s23^2 + mt^3*s12*s14*s23 + 
      mt^3*s12*s13*s23 + mt^3*s12^2*s23 - mt^3*mh^2*s12*s23 - mt^5*s12*s24 - 3
      *mt^5*s12*s23 - mt^5*s12*s14 - mt^5*s12*s13 - mt^5*s12^2 + mt^5*mh^2*s12
       + 2*mt^7*s12 - 1/2*denom(1/2*s12)*mt*s12*s13*s23^2*s24 - 1/2*denom(1/2*
      s12)*mt*s12*s13*s23^3 - 1/2*denom(1/2*s12)*mt*s12*s13*s14*s23^2 - 1/2*
      denom(1/2*s12)*mt*s12*s13^2*s23^2 - 1/2*denom(1/2*s12)*mt*s12^2*s13*
      s23^2 + 1/2*denom(1/2*s12)*mt*mh^2*s12*s13*s23^2 + 1/2*denom(1/2*s12)*
      mt^3*s12*s23^2*s24 + 1/2*denom(1/2*s12)*mt^3*s12*s23^3 + denom(1/2*s12)*
      mt^3*s12*s14*s23^2 + 3/2*denom(1/2*s12)*mt^3*s12*s13*s23*s24 + 5/2*
      denom(1/2*s12)*mt^3*s12*s13*s23^2 + denom(1/2*s12)*mt^3*s12*s13*s14*s23
       + denom(1/2*s12)*mt^3*s12*s13^2*s23 + 1/2*denom(1/2*s12)*mt^3*s12^2*
      s23^2 + denom(1/2*s12)*mt^3*s12^2*s13*s23 - 1/2*denom(1/2*s12)*mt^3*mh^2
      *s12*s23^2 - denom(1/2*s12)*mt^3*mh^2*s12*s13*s23 - 3/2*denom(1/2*s12)*
      mt^5*s12*s23*s24 - 5/2*denom(1/2*s12)*mt^5*s12*s23^2 - 2*denom(1/2*s12)*
      mt^5*s12*s14*s23 - denom(1/2*s12)*mt^5*s12*s13*s24 - 4*denom(1/2*s12)*
      mt^5*s12*s13*s23 - 1/2*denom(1/2*s12)*mt^5*s12*s13*s14 - 1/2*denom(1/2*
      s12)*mt^5*s12*s13^2 - denom(1/2*s12)*mt^5*s12^2*s23 - 1/2*denom(1/2*s12)
      *mt^5*s12^2*s13 + denom(1/2*s12)*mt^5*mh^2*s12*s23 + 1/2*denom(1/2*s12)*
      mt^5*mh^2*s12*s13 + denom(1/2*s12)*mt^7*s12*s24 + 4*denom(1/2*s12)*mt^7*
      s12*s23 + denom(1/2*s12)*mt^7*s12*s14 + 2*denom(1/2*s12)*mt^7*s12*s13 + 
      1/2*denom(1/2*s12)*mt^7*s12^2 - 1/2*denom(1/2*s12)*mt^7*mh^2*s12 - 2*
      denom(1/2*s12)*mt^9*s12 - 1/4*denom(1/4*s12^2)*mt*s12*s13*s14*s23^3 - 1/
      4*denom(1/4*s12^2)*mt*s12*s13^2*s23^2*s24 + 1/4*denom(1/4*s12^2)*mt^3*
      s12*s14*s23^3 + 1/2*denom(1/4*s12^2)*mt^3*s12*s13*s23^2*s24 + 1/4*denom(
      1/4*s12^2)*mt^3*s12*s13*s23^3 + 3/4*denom(1/4*s12^2)*mt^3*s12*s13*s14*
      s23^2 + 1/2*denom(1/4*s12^2)*mt^3*s12*s13^2*s23*s24 + 1/4*denom(1/4*
      s12^2)*mt^3*s12*s13^2*s23^2 - 1/4*denom(1/4*s12^2)*mt^5*s12*s23^2*s24 - 
      1/4*denom(1/4*s12^2)*mt^5*s12*s23^3 - 3/4*denom(1/4*s12^2)*mt^5*s12*s14*
      s23^2 - denom(1/4*s12^2)*mt^5*s12*s13*s23*s24 - 5/4*denom(1/4*s12^2)*
      mt^5*s12*s13*s23^2 - 3/4*denom(1/4*s12^2)*mt^5*s12*s13*s14*s23 - 1/4*
      denom(1/4*s12^2)*mt^5*s12*s13^2*s24 - 1/2*denom(1/4*s12^2)*mt^5*s12*
      s13^2*s23 + 1/2*denom(1/4*s12^2)*mt^7*s12*s23*s24 + denom(1/4*s12^2)*
      mt^7*s12*s23^2 + 3/4*denom(1/4*s12^2)*mt^7*s12*s14*s23 + 1/2*denom(1/4*
      s12^2)*mt^7*s12*s13*s24 + 7/4*denom(1/4*s12^2)*mt^7*s12*s13*s23 + 1/4*
      denom(1/4*s12^2)*mt^7*s12*s13*s14 + 1/4*denom(1/4*s12^2)*mt^7*s12*s13^2
       - 1/4*denom(1/4*s12^2)*mt^9*s12*s24 - 5/4*denom(1/4*s12^2)*mt^9*s12*s23
       - 1/4*denom(1/4*s12^2)*mt^9*s12*s14 - 3/4*denom(1/4*s12^2)*mt^9*s12*s13
       + 1/2*denom(1/4*s12^2)*mt^11*s12;
 
 .sort
id KMatrix(11,14) =   - 1/2*mt*s12*s23*s24^2 - mt*s12*s23^2*s24 - 1/2*mt*s12*
      s23^3 - mt*s12*s14*s23*s24 - mt*s12*s14*s23^2 - 1/2*mt*s12*s14^2*s23 - 
      mt*s12*s13*s23*s24 - mt*s12*s13*s23^2 - mt*s12*s13*s14*s23 - 1/2*mt*s12*
      s13^2*s23 - mt*s12^2*s23*s24 - mt*s12^2*s23^2 - mt*s12^2*s14*s23 - mt*
      s12^2*s13*s23 - 1/2*mt*s12^3*s23 + mt*mh^2*s12*s23*s24 + mt*mh^2*s12*
      s23^2 + mt*mh^2*s12*s14*s23 + mt*mh^2*s12*s13*s23 + mt*mh^2*s12^2*s23 - 
      1/2*mt*mh^4*s12*s23 + 1/2*mt^3*s12*s24^2 + 3*mt^3*s12*s23*s24 + 5/2*mt^3
      *s12*s23^2 + mt^3*s12*s14*s24 + 3*mt^3*s12*s14*s23 + 1/2*mt^3*s12*s14^2
       + mt^3*s12*s13*s24 + 3*mt^3*s12*s13*s23 + mt^3*s12*s13*s14 + 1/2*mt^3*
      s12*s13^2 + mt^3*s12^2*s24 + 3*mt^3*s12^2*s23 + mt^3*s12^2*s14 + mt^3*
      s12^2*s13 + 1/2*mt^3*s12^3 - mt^3*mh^2*s12*s24 - 3*mt^3*mh^2*s12*s23 - 
      mt^3*mh^2*s12*s14 - mt^3*mh^2*s12*s13 - mt^3*mh^2*s12^2 + 1/2*mt^3*mh^4*
      s12 - 2*mt^5*s12*s24 - 4*mt^5*s12*s23 - 2*mt^5*s12*s14 - 2*mt^5*s12*s13
       - 2*mt^5*s12^2 + 2*mt^5*mh^2*s12 + 2*mt^7*s12 - 1/2*denom(1/2*s12)*mt*
      s12*s14*s23^2*s24 - 1/2*denom(1/2*s12)*mt*s12*s14*s23^3 - 1/2*denom(1/2*
      s12)*mt*s12*s14^2*s23^2 - 1/2*denom(1/2*s12)*mt*s12*s13*s23*s24^2 - 1/2*
      denom(1/2*s12)*mt*s12*s13*s23^2*s24 - 1/2*denom(1/2*s12)*mt*s12*s13*s14*
      s23*s24 - 1/2*denom(1/2*s12)*mt*s12*s13*s14*s23^2 - 1/2*denom(1/2*s12)*
      mt*s12*s13^2*s23*s24 - 1/2*denom(1/2*s12)*mt*s12^2*s14*s23^2 - 1/2*
      denom(1/2*s12)*mt*s12^2*s13*s23*s24 + 1/2*denom(1/2*s12)*mt*mh^2*s12*s14
      *s23^2 + 1/2*denom(1/2*s12)*mt*mh^2*s12*s13*s23*s24 + 1/2*denom(1/2*s12)
      *mt^3*s12*s23*s24^2 + denom(1/2*s12)*mt^3*s12*s23^2*s24 + 1/2*denom(1/2*
      s12)*mt^3*s12*s23^3 + 3/2*denom(1/2*s12)*mt^3*s12*s14*s23*s24 + 5/2*
      denom(1/2*s12)*mt^3*s12*s14*s23^2 + denom(1/2*s12)*mt^3*s12*s14^2*s23 + 
      1/2*denom(1/2*s12)*mt^3*s12*s13*s24^2 + 5/2*denom(1/2*s12)*mt^3*s12*s13*
      s23*s24 + denom(1/2*s12)*mt^3*s12*s13*s23^2 + 1/2*denom(1/2*s12)*mt^3*
      s12*s13*s14*s24 + 3/2*denom(1/2*s12)*mt^3*s12*s13*s14*s23 + 1/2*denom(1/
      2*s12)*mt^3*s12*s13^2*s24 + 1/2*denom(1/2*s12)*mt^3*s12*s13^2*s23 + 1/2*
      denom(1/2*s12)*mt^3*s12^2*s23*s24 + 1/2*denom(1/2*s12)*mt^3*s12^2*s23^2
       + denom(1/2*s12)*mt^3*s12^2*s14*s23 + 1/2*denom(1/2*s12)*mt^3*s12^2*s13
      *s24 + 1/2*denom(1/2*s12)*mt^3*s12^2*s13*s23 - 1/2*denom(1/2*s12)*mt^3*
      mh^2*s12*s23*s24 - 1/2*denom(1/2*s12)*mt^3*mh^2*s12*s23^2 - denom(1/2*
      s12)*mt^3*mh^2*s12*s14*s23 - 1/2*denom(1/2*s12)*mt^3*mh^2*s12*s13*s24 - 
      1/2*denom(1/2*s12)*mt^3*mh^2*s12*s13*s23 - 1/2*denom(1/2*s12)*mt^5*s12*
      s24^2 - 3*denom(1/2*s12)*mt^5*s12*s23*s24 - 5/2*denom(1/2*s12)*mt^5*s12*
      s23^2 - denom(1/2*s12)*mt^5*s12*s14*s24 - 4*denom(1/2*s12)*mt^5*s12*s14*
      s23 - 1/2*denom(1/2*s12)*mt^5*s12*s14^2 - 2*denom(1/2*s12)*mt^5*s12*s13*
      s24 - 3*denom(1/2*s12)*mt^5*s12*s13*s23 - denom(1/2*s12)*mt^5*s12*s13*
      s14 - 1/2*denom(1/2*s12)*mt^5*s12*s13^2 - 1/2*denom(1/2*s12)*mt^5*s12^2*
      s24 - 3/2*denom(1/2*s12)*mt^5*s12^2*s23 - 1/2*denom(1/2*s12)*mt^5*s12^2*
      s14 - 1/2*denom(1/2*s12)*mt^5*s12^2*s13 + 1/2*denom(1/2*s12)*mt^5*mh^2*
      s12*s24 + 3/2*denom(1/2*s12)*mt^5*mh^2*s12*s23 + 1/2*denom(1/2*s12)*mt^5
      *mh^2*s12*s14 + 1/2*denom(1/2*s12)*mt^5*mh^2*s12*s13 + 2*denom(1/2*s12)*
      mt^7*s12*s24 + 4*denom(1/2*s12)*mt^7*s12*s23 + 2*denom(1/2*s12)*mt^7*s12
      *s14 + 2*denom(1/2*s12)*mt^7*s12*s13 + denom(1/2*s12)*mt^7*s12^2 - 
      denom(1/2*s12)*mt^7*mh^2*s12 - 2*denom(1/2*s12)*mt^9*s12 - 1/8*denom(1/4
      *s12^2)*mt*s12*s14^2*s23^3 - 1/4*denom(1/4*s12^2)*mt*s12*s13*s14*s23^2*
      s24 - 1/8*denom(1/4*s12^2)*mt*s12*s13^2*s23*s24^2 + 1/4*denom(1/4*s12^2)
      *mt^3*s12*s14*s23^2*s24 + 1/4*denom(1/4*s12^2)*mt^3*s12*s14*s23^3 + 3/8*
      denom(1/4*s12^2)*mt^3*s12*s14^2*s23^2 + 1/4*denom(1/4*s12^2)*mt^3*s12*
      s13*s23*s24^2 + 1/4*denom(1/4*s12^2)*mt^3*s12*s13*s23^2*s24 + 1/2*denom(
      1/4*s12^2)*mt^3*s12*s13*s14*s23*s24 + 1/4*denom(1/4*s12^2)*mt^3*s12*s13*
      s14*s23^2 + 1/8*denom(1/4*s12^2)*mt^3*s12*s13^2*s24^2 + 1/4*denom(1/4*
      s12^2)*mt^3*s12*s13^2*s23*s24 - 1/8*denom(1/4*s12^2)*mt^5*s12*s23*s24^2
       - 1/4*denom(1/4*s12^2)*mt^5*s12*s23^2*s24 - 1/8*denom(1/4*s12^2)*mt^5*
      s12*s23^3 - 1/2*denom(1/4*s12^2)*mt^5*s12*s14*s23*s24 - denom(1/4*s12^2)
      *mt^5*s12*s14*s23^2 - 3/8*denom(1/4*s12^2)*mt^5*s12*s14^2*s23 - 1/4*
      denom(1/4*s12^2)*mt^5*s12*s13*s24^2 - denom(1/4*s12^2)*mt^5*s12*s13*s23*
      s24 - 1/4*denom(1/4*s12^2)*mt^5*s12*s13*s23^2 - 1/4*denom(1/4*s12^2)*
      mt^5*s12*s13*s14*s24 - 1/2*denom(1/4*s12^2)*mt^5*s12*s13*s14*s23 - 1/4*
      denom(1/4*s12^2)*mt^5*s12*s13^2*s24 - 1/8*denom(1/4*s12^2)*mt^5*s12*
      s13^2*s23 + 1/8*denom(1/4*s12^2)*mt^7*s12*s24^2 + 3/4*denom(1/4*s12^2)*
      mt^7*s12*s23*s24 + 5/8*denom(1/4*s12^2)*mt^7*s12*s23^2 + 1/4*denom(1/4*
      s12^2)*mt^7*s12*s14*s24 + 5/4*denom(1/4*s12^2)*mt^7*s12*s14*s23 + 1/8*
      denom(1/4*s12^2)*mt^7*s12*s14^2 + 3/4*denom(1/4*s12^2)*mt^7*s12*s13*s24
       + 3/4*denom(1/4*s12^2)*mt^7*s12*s13*s23 + 1/4*denom(1/4*s12^2)*mt^7*s12
      *s13*s14 + 1/8*denom(1/4*s12^2)*mt^7*s12*s13^2 - 1/2*denom(1/4*s12^2)*
      mt^9*s12*s24 - denom(1/4*s12^2)*mt^9*s12*s23 - 1/2*denom(1/4*s12^2)*mt^9
      *s12*s14 - 1/2*denom(1/4*s12^2)*mt^9*s12*s13 + 1/2*denom(1/4*s12^2)*
      mt^11*s12;
 
 .sort
id KMatrix(11,15) =   - 2*mt^5*s12*s23 + 2*mt^7*s12 + denom(1/2*s12)*mt^3*s12*
      s14*s23*s24 + denom(1/2*s12)*mt^3*s12*s13*s23^2 - denom(1/2*s12)*mt^5*
      s12*s23*s24 - denom(1/2*s12)*mt^5*s12*s23^2 - denom(1/2*s12)*mt^5*s12*
      s14*s24 - denom(1/2*s12)*mt^5*s12*s14*s23 - 2*denom(1/2*s12)*mt^5*s12*
      s13*s23 + denom(1/2*s12)*mt^7*s12*s24 + 3*denom(1/2*s12)*mt^7*s12*s23 + 
      denom(1/2*s12)*mt^7*s12*s14 + denom(1/2*s12)*mt^7*s12*s13 - 2*denom(1/2*
      s12)*mt^9*s12 - 1/2*denom(1/4*s12^2)*mt*s12*s13*s14*s23^2*s24 + 1/2*
      denom(1/4*s12^2)*mt^3*s12*s14*s23^2*s24 + 1/2*denom(1/4*s12^2)*mt^3*s12*
      s13*s23^2*s24 + denom(1/4*s12^2)*mt^3*s12*s13*s14*s23*s24 + 1/2*denom(1/
      4*s12^2)*mt^3*s12*s13*s14*s23^2 - 1/2*denom(1/4*s12^2)*mt^5*s12*s23^2*
      s24 - denom(1/4*s12^2)*mt^5*s12*s14*s23*s24 - 1/2*denom(1/4*s12^2)*mt^5*
      s12*s14*s23^2 - denom(1/4*s12^2)*mt^5*s12*s13*s23*s24 - 1/2*denom(1/4*
      s12^2)*mt^5*s12*s13*s23^2 - 1/2*denom(1/4*s12^2)*mt^5*s12*s13*s14*s24 - 
      denom(1/4*s12^2)*mt^5*s12*s13*s14*s23 + denom(1/4*s12^2)*mt^7*s12*s23*
      s24 + 1/2*denom(1/4*s12^2)*mt^7*s12*s23^2 + 1/2*denom(1/4*s12^2)*mt^7*
      s12*s14*s24 + denom(1/4*s12^2)*mt^7*s12*s14*s23 + 1/2*denom(1/4*s12^2)*
      mt^7*s12*s13*s24 + denom(1/4*s12^2)*mt^7*s12*s13*s23 + 1/2*denom(1/4*
      s12^2)*mt^7*s12*s13*s14 - 1/2*denom(1/4*s12^2)*mt^9*s12*s24 - denom(1/4*
      s12^2)*mt^9*s12*s23 - 1/2*denom(1/4*s12^2)*mt^9*s12*s14 - 1/2*denom(1/4*
      s12^2)*mt^9*s12*s13 + 1/2*denom(1/4*s12^2)*mt^11*s12;
 
 .sort
id KMatrix(11,16) =  mt^3*s12*s23*s24 + mt^3*s12*s23^2 + mt^3*s12*s14*s23 + 
      mt^3*s12*s13*s23 + mt^3*s12^2*s23 - mt^3*mh^2*s12*s23 - mt^5*s12*s24 - 3
      *mt^5*s12*s23 - mt^5*s12*s14 - mt^5*s12*s13 - mt^5*s12^2 + mt^5*mh^2*s12
       + 2*mt^7*s12 - 1/2*denom(1/2*s12)*mt*s12*s14*s23*s24^2 - 1/2*denom(1/2*
      s12)*mt*s12*s14*s23^2*s24 - 1/2*denom(1/2*s12)*mt*s12*s14^2*s23*s24 - 1/
      2*denom(1/2*s12)*mt*s12*s13*s14*s23*s24 - 1/2*denom(1/2*s12)*mt*s12^2*
      s14*s23*s24 + 1/2*denom(1/2*s12)*mt*mh^2*s12*s14*s23*s24 + 1/2*denom(1/2
      *s12)*mt^3*s12*s23*s24^2 + 1/2*denom(1/2*s12)*mt^3*s12*s23^2*s24 + 1/2*
      denom(1/2*s12)*mt^3*s12*s14*s24^2 + 5/2*denom(1/2*s12)*mt^3*s12*s14*s23*
      s24 + denom(1/2*s12)*mt^3*s12*s14*s23^2 + 1/2*denom(1/2*s12)*mt^3*s12*
      s14^2*s24 + 1/2*denom(1/2*s12)*mt^3*s12*s14^2*s23 + denom(1/2*s12)*mt^3*
      s12*s13*s23*s24 + 1/2*denom(1/2*s12)*mt^3*s12*s13*s14*s24 + 1/2*denom(1/
      2*s12)*mt^3*s12*s13*s14*s23 + 1/2*denom(1/2*s12)*mt^3*s12^2*s23*s24 + 1/
      2*denom(1/2*s12)*mt^3*s12^2*s14*s24 + 1/2*denom(1/2*s12)*mt^3*s12^2*s14*
      s23 - 1/2*denom(1/2*s12)*mt^3*mh^2*s12*s23*s24 - 1/2*denom(1/2*s12)*mt^3
      *mh^2*s12*s14*s24 - 1/2*denom(1/2*s12)*mt^3*mh^2*s12*s14*s23 - 1/2*
      denom(1/2*s12)*mt^5*s12*s24^2 - 5/2*denom(1/2*s12)*mt^5*s12*s23*s24 - 
      denom(1/2*s12)*mt^5*s12*s23^2 - 2*denom(1/2*s12)*mt^5*s12*s14*s24 - 3*
      denom(1/2*s12)*mt^5*s12*s14*s23 - 1/2*denom(1/2*s12)*mt^5*s12*s14^2 - 
      denom(1/2*s12)*mt^5*s12*s13*s24 - denom(1/2*s12)*mt^5*s12*s13*s23 - 1/2*
      denom(1/2*s12)*mt^5*s12*s13*s14 - 1/2*denom(1/2*s12)*mt^5*s12^2*s24 - 1/
      2*denom(1/2*s12)*mt^5*s12^2*s23 - 1/2*denom(1/2*s12)*mt^5*s12^2*s14 + 1/
      2*denom(1/2*s12)*mt^5*mh^2*s12*s24 + 1/2*denom(1/2*s12)*mt^5*mh^2*s12*
      s23 + 1/2*denom(1/2*s12)*mt^5*mh^2*s12*s14 + 2*denom(1/2*s12)*mt^7*s12*
      s24 + 3*denom(1/2*s12)*mt^7*s12*s23 + 2*denom(1/2*s12)*mt^7*s12*s14 + 
      denom(1/2*s12)*mt^7*s12*s13 + 1/2*denom(1/2*s12)*mt^7*s12^2 - 1/2*denom(
      1/2*s12)*mt^7*mh^2*s12 - 2*denom(1/2*s12)*mt^9*s12 - 1/4*denom(1/4*s12^2
      )*mt*s12*s14^2*s23^2*s24 - 1/4*denom(1/4*s12^2)*mt*s12*s13*s14*s23*s24^2
       + 1/4*denom(1/4*s12^2)*mt^3*s12*s14*s23*s24^2 + 1/2*denom(1/4*s12^2)*
      mt^3*s12*s14*s23^2*s24 + 1/2*denom(1/4*s12^2)*mt^3*s12*s14^2*s23*s24 + 1/
      4*denom(1/4*s12^2)*mt^3*s12*s14^2*s23^2 + 1/4*denom(1/4*s12^2)*mt^3*s12*
      s13*s23*s24^2 + 1/4*denom(1/4*s12^2)*mt^3*s12*s13*s14*s24^2 + 1/2*denom(
      1/4*s12^2)*mt^3*s12*s13*s14*s23*s24 - 1/4*denom(1/4*s12^2)*mt^5*s12*s23*
      s24^2 - 1/4*denom(1/4*s12^2)*mt^5*s12*s23^2*s24 - 1/4*denom(1/4*s12^2)*
      mt^5*s12*s14*s24^2 - 3/2*denom(1/4*s12^2)*mt^5*s12*s14*s23*s24 - 1/2*
      denom(1/4*s12^2)*mt^5*s12*s14*s23^2 - 1/4*denom(1/4*s12^2)*mt^5*s12*
      s14^2*s24 - 1/2*denom(1/4*s12^2)*mt^5*s12*s14^2*s23 - 1/4*denom(1/4*
      s12^2)*mt^5*s12*s13*s24^2 - 1/2*denom(1/4*s12^2)*mt^5*s12*s13*s23*s24 - 
      1/2*denom(1/4*s12^2)*mt^5*s12*s13*s14*s24 - 1/4*denom(1/4*s12^2)*mt^5*
      s12*s13*s14*s23 + 1/4*denom(1/4*s12^2)*mt^7*s12*s24^2 + denom(1/4*s12^2)
      *mt^7*s12*s23*s24 + 1/4*denom(1/4*s12^2)*mt^7*s12*s23^2 + denom(1/4*
      s12^2)*mt^7*s12*s14*s24 + 5/4*denom(1/4*s12^2)*mt^7*s12*s14*s23 + 1/4*
      denom(1/4*s12^2)*mt^7*s12*s14^2 + 1/2*denom(1/4*s12^2)*mt^7*s12*s13*s24
       + 1/4*denom(1/4*s12^2)*mt^7*s12*s13*s23 + 1/4*denom(1/4*s12^2)*mt^7*s12
      *s13*s14 - 3/4*denom(1/4*s12^2)*mt^9*s12*s24 - 3/4*denom(1/4*s12^2)*mt^9
      *s12*s23 - 3/4*denom(1/4*s12^2)*mt^9*s12*s14 - 1/4*denom(1/4*s12^2)*mt^9
      *s12*s13 + 1/2*denom(1/4*s12^2)*mt^11*s12;
 
 .sort
id KMatrix(11,17) =   - mt*s24^2 + mt*s23^2 - mt*s14*s24 + mt*s14*s23 - mt*s13
      *s24 + mt*s13*s23 - mt*s12*s24 + mt*s12*s23 + mt*mh^2*s24 - mt*mh^2*s23
       + 2*mt^3*s24 - 2*mt^3*s23 - denom(1/2*s12)*mt*s14*s23*s24 + denom(1/2*
      s12)*mt*s14*s23^2 - denom(1/2*s12)*mt*s13*s24^2 + denom(1/2*s12)*mt*s13*
      s23*s24 + denom(1/2*s12)*mt^3*s24^2 - denom(1/2*s12)*mt^3*s23^2 + denom(
      1/2*s12)*mt^3*s14*s24 - denom(1/2*s12)*mt^3*s14*s23 + denom(1/2*s12)*
      mt^3*s13*s24 - denom(1/2*s12)*mt^3*s13*s23 - 2*denom(1/2*s12)*mt^5*s24
       + 2*denom(1/2*s12)*mt^5*s23 + 1/4*denom(1/4*s12^2)*mt*s12*s14*s23*s24
       - 1/4*denom(1/4*s12^2)*mt*s12*s14*s23^2 + 1/4*denom(1/4*s12^2)*mt*s12*
      s13*s24^2 - 1/4*denom(1/4*s12^2)*mt*s12*s13*s23*s24 - 1/4*denom(1/4*
      s12^2)*mt^3*s12*s24^2 + 1/4*denom(1/4*s12^2)*mt^3*s12*s23^2 - 1/4*denom(
      1/4*s12^2)*mt^3*s12*s14*s24 + 1/4*denom(1/4*s12^2)*mt^3*s12*s14*s23 - 1/
      4*denom(1/4*s12^2)*mt^3*s12*s13*s24 + 1/4*denom(1/4*s12^2)*mt^3*s12*s13*
      s23 + 1/2*denom(1/4*s12^2)*mt^5*s12*s24 - 1/2*denom(1/4*s12^2)*mt^5*s12*
      s23;
 
 .sort
id KMatrix(11,18) =   - 1/2*s14*s23*s24 - 1/2*s14*s23^2 - 1/2*s14^2*s23 - 1/2*
      s13*s24^2 - 1/2*s13*s23*s24 - 1/2*s13*s14*s24 - 1/2*s13*s14*s23 - 1/2*
      s13^2*s24 - 1/2*s12*s24^2 - s12*s23*s24 - 1/2*s12*s23^2 - s12*s14*s24 - 
      3/2*s12*s14*s23 - 1/2*s12*s14^2 - 3/2*s12*s13*s24 - s12*s13*s23 - s12*
      s13*s14 - 1/2*s12*s13^2 - s12^2*s24 - s12^2*s23 - s12^2*s14 - s12^2*s13
       - 1/2*s12^3 + 1/2*mh^2*s14*s23 + 1/2*mh^2*s13*s24 + mh^2*s12*s24 + mh^2
      *s12*s23 + mh^2*s12*s14 + mh^2*s12*s13 + mh^2*s12^2 - 1/2*mh^4*s12 + 1/2
      *mt^2*s24^2 + mt^2*s23*s24 + 1/2*mt^2*s23^2 + mt^2*s14*s24 + 2*mt^2*s14*
      s23 + 1/2*mt^2*s14^2 + 2*mt^2*s13*s24 + mt^2*s13*s23 + mt^2*s13*s14 + 1/
      2*mt^2*s13^2 + 7/2*mt^2*s12*s24 + 7/2*mt^2*s12*s23 + 7/2*mt^2*s12*s14 + 
      7/2*mt^2*s12*s13 + 3*mt^2*s12^2 - 1/2*mt^2*mh^2*s24 - 1/2*mt^2*mh^2*s23
       - 1/2*mt^2*mh^2*s14 - 1/2*mt^2*mh^2*s13 - 3*mt^2*mh^2*s12 - 2*mt^4*s24
       - 2*mt^4*s23 - 2*mt^4*s14 - 2*mt^4*s13 - 5*mt^4*s12 + mt^4*mh^2 + 2*
      mt^6 - 1/2*denom(1/2*s12)*s14^2*s23^2 - denom(1/2*s12)*s13*s14*s23*s24
       - 1/2*denom(1/2*s12)*s13^2*s24^2 - 1/2*denom(1/2*s12)*s12*s14*s23*s24
       - 1/2*denom(1/2*s12)*s12*s14*s23^2 - 1/2*denom(1/2*s12)*s12*s14^2*s23
       - 1/2*denom(1/2*s12)*s12*s13*s24^2 - 1/2*denom(1/2*s12)*s12*s13*s23*s24
       - 1/2*denom(1/2*s12)*s12*s13*s14*s24 - 1/2*denom(1/2*s12)*s12*s13*s14*
      s23 - 1/2*denom(1/2*s12)*s12*s13^2*s24 - 1/2*denom(1/2*s12)*s12^2*s14*
      s23 - 1/2*denom(1/2*s12)*s12^2*s13*s24 + 1/2*denom(1/2*s12)*mh^2*s12*s14
      *s23 + 1/2*denom(1/2*s12)*mh^2*s12*s13*s24 + denom(1/2*s12)*mt^2*s14*s23
      *s24 + denom(1/2*s12)*mt^2*s14*s23^2 + denom(1/2*s12)*mt^2*s14^2*s23 + 
      denom(1/2*s12)*mt^2*s13*s24^2 + denom(1/2*s12)*mt^2*s13*s23*s24 + denom(
      1/2*s12)*mt^2*s13*s14*s24 + denom(1/2*s12)*mt^2*s13*s14*s23 + denom(1/2*
      s12)*mt^2*s13^2*s24 + 1/2*denom(1/2*s12)*mt^2*s12*s24^2 + denom(1/2*s12)
      *mt^2*s12*s23*s24 + 1/2*denom(1/2*s12)*mt^2*s12*s23^2 + denom(1/2*s12)*
      mt^2*s12*s14*s24 + 3*denom(1/2*s12)*mt^2*s12*s14*s23 + 1/2*denom(1/2*s12
      )*mt^2*s12*s14^2 + 3*denom(1/2*s12)*mt^2*s12*s13*s24 + denom(1/2*s12)*
      mt^2*s12*s13*s23 + denom(1/2*s12)*mt^2*s12*s13*s14 + 1/2*denom(1/2*s12)*
      mt^2*s12*s13^2 + 1/2*denom(1/2*s12)*mt^2*s12^2*s24 + 1/2*denom(1/2*s12)*
      mt^2*s12^2*s23 + 1/2*denom(1/2*s12)*mt^2*s12^2*s14 + 1/2*denom(1/2*s12)*
      mt^2*s12^2*s13 - 1/2*denom(1/2*s12)*mt^2*mh^2*s12*s24 - 1/2*denom(1/2*
      s12)*mt^2*mh^2*s12*s23 - 1/2*denom(1/2*s12)*mt^2*mh^2*s12*s14 - 1/2*
      denom(1/2*s12)*mt^2*mh^2*s12*s13 - 1/2*denom(1/2*s12)*mt^4*s24^2 - 
      denom(1/2*s12)*mt^4*s23*s24 - 1/2*denom(1/2*s12)*mt^4*s23^2 - denom(1/2*
      s12)*mt^4*s14*s24 - 3*denom(1/2*s12)*mt^4*s14*s23 - 1/2*denom(1/2*s12)*
      mt^4*s14^2 - 3*denom(1/2*s12)*mt^4*s13*s24 - denom(1/2*s12)*mt^4*s13*s23
       - denom(1/2*s12)*mt^4*s13*s14 - 1/2*denom(1/2*s12)*mt^4*s13^2 - 3*
      denom(1/2*s12)*mt^4*s12*s24 - 3*denom(1/2*s12)*mt^4*s12*s23 - 3*denom(1/
      2*s12)*mt^4*s12*s14 - 3*denom(1/2*s12)*mt^4*s12*s13 - denom(1/2*s12)*
      mt^4*s12^2 + denom(1/2*s12)*mt^4*mh^2*s12 + 2*denom(1/2*s12)*mt^6*s24 + 
      2*denom(1/2*s12)*mt^6*s23 + 2*denom(1/2*s12)*mt^6*s14 + 2*denom(1/2*s12)
      *mt^6*s13 + 4*denom(1/2*s12)*mt^6*s12 - 2*denom(1/2*s12)*mt^8 + 1/8*
      denom(1/4*s12^2)*s12*s14^2*s23^2 + 1/4*denom(1/4*s12^2)*s12*s13*s14*s23*
      s24 + 1/8*denom(1/4*s12^2)*s12*s13^2*s24^2 + 1/8*denom(1/4*s12^2)*s12^2*
      s14*s23*s24 + 1/8*denom(1/4*s12^2)*s12^2*s14*s23^2 + 1/8*denom(1/4*s12^2
      )*s12^2*s14^2*s23 + 1/8*denom(1/4*s12^2)*s12^2*s13*s24^2 + 1/8*denom(1/4
      *s12^2)*s12^2*s13*s23*s24 + 1/8*denom(1/4*s12^2)*s12^2*s13*s14*s24 + 1/8
      *denom(1/4*s12^2)*s12^2*s13*s14*s23 + 1/8*denom(1/4*s12^2)*s12^2*s13^2*
      s24 + 1/8*denom(1/4*s12^2)*s12^3*s14*s23 + 1/8*denom(1/4*s12^2)*s12^3*
      s13*s24 - 1/8*denom(1/4*s12^2)*mh^2*s12^2*s14*s23 - 1/8*denom(1/4*s12^2)
      *mh^2*s12^2*s13*s24 - 1/4*denom(1/4*s12^2)*mt^2*s12*s14*s23*s24 - 1/4*
      denom(1/4*s12^2)*mt^2*s12*s14*s23^2 - 1/4*denom(1/4*s12^2)*mt^2*s12*
      s14^2*s23 - 1/4*denom(1/4*s12^2)*mt^2*s12*s13*s24^2 - 1/4*denom(1/4*
      s12^2)*mt^2*s12*s13*s23*s24 - 1/4*denom(1/4*s12^2)*mt^2*s12*s13*s14*s24
       - 1/4*denom(1/4*s12^2)*mt^2*s12*s13*s14*s23 - 1/4*denom(1/4*s12^2)*mt^2
      *s12*s13^2*s24 - 1/8*denom(1/4*s12^2)*mt^2*s12^2*s24^2 - 1/4*denom(1/4*
      s12^2)*mt^2*s12^2*s23*s24 - 1/8*denom(1/4*s12^2)*mt^2*s12^2*s23^2 - 1/4*
      denom(1/4*s12^2)*mt^2*s12^2*s14*s24 - 3/4*denom(1/4*s12^2)*mt^2*s12^2*
      s14*s23 - 1/8*denom(1/4*s12^2)*mt^2*s12^2*s14^2 - 3/4*denom(1/4*s12^2)*
      mt^2*s12^2*s13*s24 - 1/4*denom(1/4*s12^2)*mt^2*s12^2*s13*s23 - 1/4*
      denom(1/4*s12^2)*mt^2*s12^2*s13*s14 - 1/8*denom(1/4*s12^2)*mt^2*s12^2*
      s13^2 - 1/8*denom(1/4*s12^2)*mt^2*s12^3*s24 - 1/8*denom(1/4*s12^2)*mt^2*
      s12^3*s23 - 1/8*denom(1/4*s12^2)*mt^2*s12^3*s14 - 1/8*denom(1/4*s12^2)*
      mt^2*s12^3*s13 + 1/8*denom(1/4*s12^2)*mt^2*mh^2*s12^2*s24 + 1/8*denom(1/
      4*s12^2)*mt^2*mh^2*s12^2*s23 + 1/8*denom(1/4*s12^2)*mt^2*mh^2*s12^2*s14
       + 1/8*denom(1/4*s12^2)*mt^2*mh^2*s12^2*s13 + 1/8*denom(1/4*s12^2)*mt^4*
      s12*s24^2 + 1/4*denom(1/4*s12^2)*mt^4*s12*s23*s24 + 1/8*denom(1/4*s12^2)
      *mt^4*s12*s23^2 + 1/4*denom(1/4*s12^2)*mt^4*s12*s14*s24 + 3/4*denom(1/4*
      s12^2)*mt^4*s12*s14*s23 + 1/8*denom(1/4*s12^2)*mt^4*s12*s14^2 + 3/4*
      denom(1/4*s12^2)*mt^4*s12*s13*s24 + 1/4*denom(1/4*s12^2)*mt^4*s12*s13*
      s23 + 1/4*denom(1/4*s12^2)*mt^4*s12*s13*s14 + 1/8*denom(1/4*s12^2)*mt^4*
      s12*s13^2 + 3/4*denom(1/4*s12^2)*mt^4*s12^2*s24 + 3/4*denom(1/4*s12^2)*
      mt^4*s12^2*s23 + 3/4*denom(1/4*s12^2)*mt^4*s12^2*s14 + 3/4*denom(1/4*
      s12^2)*mt^4*s12^2*s13 + 1/4*denom(1/4*s12^2)*mt^4*s12^3 - 1/4*denom(1/4*
      s12^2)*mt^4*mh^2*s12^2 - 1/2*denom(1/4*s12^2)*mt^6*s12*s24 - 1/2*denom(1/
      4*s12^2)*mt^6*s12*s23 - 1/2*denom(1/4*s12^2)*mt^6*s12*s14 - 1/2*denom(1/
      4*s12^2)*mt^6*s12*s13 - denom(1/4*s12^2)*mt^6*s12^2 + 1/2*denom(1/4*
      s12^2)*mt^8*s12;
 
 .sort
id KMatrix(11,19) =   - s23*s24^2 - s23^2*s24 - s14*s23*s24 - s13*s23*s24 - 
      s12*s23*s24 + mh^2*s23*s24 + mt^2*s24^2 + 4*mt^2*s23*s24 + mt^2*s23^2 + 
      mt^2*s14*s24 + mt^2*s14*s23 + mt^2*s13*s24 + mt^2*s13*s23 + mt^2*s12*s24
       + mt^2*s12*s23 - mt^2*mh^2*s24 - mt^2*mh^2*s23 - 3*mt^4*s24 - 3*mt^4*
      s23 - mt^4*s14 - mt^4*s13 - mt^4*s12 + mt^4*mh^2 + 2*mt^6 - denom(1/2*
      s12)*s14*s23^2*s24 - denom(1/2*s12)*s13*s23*s24^2 + denom(1/2*s12)*mt^2*
      s23*s24^2 + denom(1/2*s12)*mt^2*s23^2*s24 + 2*denom(1/2*s12)*mt^2*s14*
      s23*s24 + denom(1/2*s12)*mt^2*s14*s23^2 + denom(1/2*s12)*mt^2*s13*s24^2
       + 2*denom(1/2*s12)*mt^2*s13*s23*s24 - denom(1/2*s12)*mt^4*s24^2 - 4*
      denom(1/2*s12)*mt^4*s23*s24 - denom(1/2*s12)*mt^4*s23^2 - denom(1/2*s12)
      *mt^4*s14*s24 - 2*denom(1/2*s12)*mt^4*s14*s23 - 2*denom(1/2*s12)*mt^4*
      s13*s24 - denom(1/2*s12)*mt^4*s13*s23 + 3*denom(1/2*s12)*mt^6*s24 + 3*
      denom(1/2*s12)*mt^6*s23 + denom(1/2*s12)*mt^6*s14 + denom(1/2*s12)*mt^6*
      s13 - 2*denom(1/2*s12)*mt^8 + 1/4*denom(1/4*s12^2)*s12*s14*s23^2*s24 + 1/
      4*denom(1/4*s12^2)*s12*s13*s23*s24^2 - 1/4*denom(1/4*s12^2)*mt^2*s12*s23
      *s24^2 - 1/4*denom(1/4*s12^2)*mt^2*s12*s23^2*s24 - 1/2*denom(1/4*s12^2)*
      mt^2*s12*s14*s23*s24 - 1/4*denom(1/4*s12^2)*mt^2*s12*s14*s23^2 - 1/4*
      denom(1/4*s12^2)*mt^2*s12*s13*s24^2 - 1/2*denom(1/4*s12^2)*mt^2*s12*s13*
      s23*s24 + 1/4*denom(1/4*s12^2)*mt^4*s12*s24^2 + denom(1/4*s12^2)*mt^4*
      s12*s23*s24 + 1/4*denom(1/4*s12^2)*mt^4*s12*s23^2 + 1/4*denom(1/4*s12^2)
      *mt^4*s12*s14*s24 + 1/2*denom(1/4*s12^2)*mt^4*s12*s14*s23 + 1/2*denom(1/
      4*s12^2)*mt^4*s12*s13*s24 + 1/4*denom(1/4*s12^2)*mt^4*s12*s13*s23 - 3/4*
      denom(1/4*s12^2)*mt^6*s12*s24 - 3/4*denom(1/4*s12^2)*mt^6*s12*s23 - 1/4*
      denom(1/4*s12^2)*mt^6*s12*s14 - 1/4*denom(1/4*s12^2)*mt^6*s12*s13 + 1/2*
      denom(1/4*s12^2)*mt^8*s12;
 
 .sort
id KMatrix(11,20) =   - mt^2*s24^2 - mt^2*s23*s24 - mt^2*s14*s24 - mt^2*s13*
      s24 - mt^2*s12*s24 + mt^2*mh^2*s24 + 3*mt^4*s24 + 3*mt^4*s23 + mt^4*s14
       + mt^4*s13 + mt^4*s12 - mt^4*mh^2 - 4*mt^6 + 1/2*denom(1/2*s12)*s13*s23
      *s24^2 + 1/2*denom(1/2*s12)*s13*s23^2*s24 + 1/2*denom(1/2*s12)*s13*s14*
      s23*s24 + 1/2*denom(1/2*s12)*s13^2*s23*s24 + 1/2*denom(1/2*s12)*s12*s13*
      s23*s24 - 1/2*denom(1/2*s12)*mh^2*s13*s23*s24 - 1/2*denom(1/2*s12)*mt^2*
      s23*s24^2 - 1/2*denom(1/2*s12)*mt^2*s23^2*s24 - 2*denom(1/2*s12)*mt^2*
      s14*s23*s24 - denom(1/2*s12)*mt^2*s13*s24^2 - 5/2*denom(1/2*s12)*mt^2*
      s13*s23*s24 - 3/2*denom(1/2*s12)*mt^2*s13*s23^2 - 1/2*denom(1/2*s12)*
      mt^2*s13*s14*s24 - 1/2*denom(1/2*s12)*mt^2*s13*s14*s23 - 1/2*denom(1/2*
      s12)*mt^2*s13^2*s24 - 1/2*denom(1/2*s12)*mt^2*s13^2*s23 - 1/2*denom(1/2*
      s12)*mt^2*s12*s23*s24 - 1/2*denom(1/2*s12)*mt^2*s12*s13*s24 - 1/2*denom(
      1/2*s12)*mt^2*s12*s13*s23 + 1/2*denom(1/2*s12)*mt^2*mh^2*s23*s24 + 1/2*
      denom(1/2*s12)*mt^2*mh^2*s13*s24 + 1/2*denom(1/2*s12)*mt^2*mh^2*s13*s23
       + denom(1/2*s12)*mt^4*s24^2 + 7/2*denom(1/2*s12)*mt^4*s23*s24 + 3/2*
      denom(1/2*s12)*mt^4*s23^2 + 2*denom(1/2*s12)*mt^4*s14*s24 + 2*denom(1/2*
      s12)*mt^4*s14*s23 + 3*denom(1/2*s12)*mt^4*s13*s24 + 4*denom(1/2*s12)*
      mt^4*s13*s23 + 1/2*denom(1/2*s12)*mt^4*s13*s14 + 1/2*denom(1/2*s12)*mt^4
      *s13^2 + 1/2*denom(1/2*s12)*mt^4*s12*s24 + 1/2*denom(1/2*s12)*mt^4*s12*
      s23 + 1/2*denom(1/2*s12)*mt^4*s12*s13 - 1/2*denom(1/2*s12)*mt^4*mh^2*s24
       - 1/2*denom(1/2*s12)*mt^4*mh^2*s23 - 1/2*denom(1/2*s12)*mt^4*mh^2*s13
       - 4*denom(1/2*s12)*mt^6*s24 - 5*denom(1/2*s12)*mt^6*s23 - 2*denom(1/2*
      s12)*mt^6*s14 - 3*denom(1/2*s12)*mt^6*s13 - 1/2*denom(1/2*s12)*mt^6*s12
       + 1/2*denom(1/2*s12)*mt^6*mh^2 + 4*denom(1/2*s12)*mt^8 + 3/4*denom(1/4*
      s12^2)*s13*s14*s23^2*s24 + 1/4*denom(1/4*s12^2)*s13^2*s23*s24^2 - 3/4*
      denom(1/4*s12^2)*mt^2*s14*s23^2*s24 - 1/2*denom(1/4*s12^2)*mt^2*s13*s23*
      s24^2 - 3/4*denom(1/4*s12^2)*mt^2*s13*s23^2*s24 - 3/2*denom(1/4*s12^2)*
      mt^2*s13*s14*s23*s24 - 3/4*denom(1/4*s12^2)*mt^2*s13*s14*s23^2 - 1/4*
      denom(1/4*s12^2)*mt^2*s13^2*s24^2 - 1/2*denom(1/4*s12^2)*mt^2*s13^2*s23*
      s24 + 1/4*denom(1/4*s12^2)*mt^4*s23*s24^2 + 3/4*denom(1/4*s12^2)*mt^4*
      s23^2*s24 + 3/2*denom(1/4*s12^2)*mt^4*s14*s23*s24 + 3/4*denom(1/4*s12^2)
      *mt^4*s14*s23^2 + 1/2*denom(1/4*s12^2)*mt^4*s13*s24^2 + 5/2*denom(1/4*
      s12^2)*mt^4*s13*s23*s24 + 3/4*denom(1/4*s12^2)*mt^4*s13*s23^2 + 3/4*
      denom(1/4*s12^2)*mt^4*s13*s14*s24 + 3/2*denom(1/4*s12^2)*mt^4*s13*s14*
      s23 + 1/2*denom(1/4*s12^2)*mt^4*s13^2*s24 + 1/4*denom(1/4*s12^2)*mt^4*
      s13^2*s23 - 1/4*denom(1/4*s12^2)*mt^6*s24^2 - 2*denom(1/4*s12^2)*mt^6*
      s23*s24 - 3/4*denom(1/4*s12^2)*mt^6*s23^2 - 3/4*denom(1/4*s12^2)*mt^6*
      s14*s24 - 3/2*denom(1/4*s12^2)*mt^6*s14*s23 - 7/4*denom(1/4*s12^2)*mt^6*
      s13*s24 - 2*denom(1/4*s12^2)*mt^6*s13*s23 - 3/4*denom(1/4*s12^2)*mt^6*
      s13*s14 - 1/4*denom(1/4*s12^2)*mt^6*s13^2 + 5/4*denom(1/4*s12^2)*mt^8*
      s24 + 7/4*denom(1/4*s12^2)*mt^8*s23 + 3/4*denom(1/4*s12^2)*mt^8*s14 + 5/
      4*denom(1/4*s12^2)*mt^8*s13 - denom(1/4*s12^2)*mt^10;
 
 .sort
id KMatrix(11,21) =  1/2*s24^3 + s23*s24^2 + 1/2*s23^2*s24 + s14*s24^2 + s14*
      s23*s24 + 1/2*s14^2*s24 + s13*s24^2 + s13*s23*s24 + s13*s14*s24 + 1/2*
      s13^2*s24 + s12*s24^2 + s12*s23*s24 + s12*s14*s24 + s12*s13*s24 + 1/2*
      s12^2*s24 - mh^2*s24^2 - mh^2*s23*s24 - mh^2*s14*s24 - mh^2*s13*s24 - 
      mh^2*s12*s24 + 1/2*mh^4*s24 - 5/2*mt^2*s24^2 - 4*mt^2*s23*s24 - 3/2*mt^2
      *s23^2 - 3*mt^2*s14*s24 - 2*mt^2*s14*s23 - 1/2*mt^2*s14^2 - 3*mt^2*s13*
      s24 - 2*mt^2*s13*s23 - mt^2*s13*s14 - 1/2*mt^2*s13^2 - 3*mt^2*s12*s24 - 
      2*mt^2*s12*s23 - mt^2*s12*s14 - mt^2*s12*s13 - 1/2*mt^2*s12^2 + 3*mt^2*
      mh^2*s24 + 2*mt^2*mh^2*s23 + mt^2*mh^2*s14 + mt^2*mh^2*s13 + mt^2*mh^2*
      s12 - 1/2*mt^2*mh^4 + 5*mt^4*s24 + 5*mt^4*s23 + 3*mt^4*s14 + 3*mt^4*s13
       + 3*mt^4*s12 - 3*mt^4*mh^2 - 4*mt^6 + denom(1/2*s12)*s14*s23*s24^2 + 
      denom(1/2*s12)*s14*s23^2*s24 + denom(1/2*s12)*s14^2*s23*s24 + 1/2*denom(
      1/2*s12)*s13*s24^3 + 1/2*denom(1/2*s12)*s13*s23*s24^2 + 1/2*denom(1/2*
      s12)*s13*s14*s24^2 + denom(1/2*s12)*s13*s14*s23*s24 + 1/2*denom(1/2*s12)
      *s13^2*s24^2 + denom(1/2*s12)*s12*s14*s23*s24 + 1/2*denom(1/2*s12)*s12*
      s13*s24^2 - denom(1/2*s12)*mh^2*s14*s23*s24 - 1/2*denom(1/2*s12)*mh^2*
      s13*s24^2 - 1/2*denom(1/2*s12)*mt^2*s24^3 - 3/2*denom(1/2*s12)*mt^2*s23*
      s24^2 - denom(1/2*s12)*mt^2*s23^2*s24 - 3/2*denom(1/2*s12)*mt^2*s14*
      s24^2 - 5*denom(1/2*s12)*mt^2*s14*s23*s24 - 3/2*denom(1/2*s12)*mt^2*s14*
      s23^2 - denom(1/2*s12)*mt^2*s14^2*s24 - denom(1/2*s12)*mt^2*s14^2*s23 - 
      5/2*denom(1/2*s12)*mt^2*s13*s24^2 - 5/2*denom(1/2*s12)*mt^2*s13*s23*s24
       - 2*denom(1/2*s12)*mt^2*s13*s14*s24 - denom(1/2*s12)*mt^2*s13*s14*s23
       - denom(1/2*s12)*mt^2*s13^2*s24 - 1/2*denom(1/2*s12)*mt^2*s12*s24^2 - 
      denom(1/2*s12)*mt^2*s12*s23*s24 - denom(1/2*s12)*mt^2*s12*s14*s24 - 
      denom(1/2*s12)*mt^2*s12*s14*s23 - denom(1/2*s12)*mt^2*s12*s13*s24 + 1/2*
      denom(1/2*s12)*mt^2*mh^2*s24^2 + denom(1/2*s12)*mt^2*mh^2*s23*s24 + 
      denom(1/2*s12)*mt^2*mh^2*s14*s24 + denom(1/2*s12)*mt^2*mh^2*s14*s23 + 
      denom(1/2*s12)*mt^2*mh^2*s13*s24 + 3*denom(1/2*s12)*mt^4*s24^2 + 11/2*
      denom(1/2*s12)*mt^4*s23*s24 + 3/2*denom(1/2*s12)*mt^4*s23^2 + 5*denom(1/
      2*s12)*mt^4*s14*s24 + 5*denom(1/2*s12)*mt^4*s14*s23 + denom(1/2*s12)*
      mt^4*s14^2 + 5*denom(1/2*s12)*mt^4*s13*s24 + 2*denom(1/2*s12)*mt^4*s13*
      s23 + 3/2*denom(1/2*s12)*mt^4*s13*s14 + 1/2*denom(1/2*s12)*mt^4*s13^2 + 
      2*denom(1/2*s12)*mt^4*s12*s24 + denom(1/2*s12)*mt^4*s12*s23 + denom(1/2*
      s12)*mt^4*s12*s14 + 1/2*denom(1/2*s12)*mt^4*s12*s13 - 2*denom(1/2*s12)*
      mt^4*mh^2*s24 - denom(1/2*s12)*mt^4*mh^2*s23 - denom(1/2*s12)*mt^4*mh^2*
      s14 - 1/2*denom(1/2*s12)*mt^4*mh^2*s13 - 6*denom(1/2*s12)*mt^6*s24 - 5*
      denom(1/2*s12)*mt^6*s23 - 4*denom(1/2*s12)*mt^6*s14 - 3*denom(1/2*s12)*
      mt^6*s13 - 3/2*denom(1/2*s12)*mt^6*s12 + 3/2*denom(1/2*s12)*mt^6*mh^2 + 
      4*denom(1/2*s12)*mt^8 + 3/8*denom(1/4*s12^2)*s14^2*s23^2*s24 + 1/2*
      denom(1/4*s12^2)*s13*s14*s23*s24^2 + 1/8*denom(1/4*s12^2)*s13^2*s24^3 - 
      1/2*denom(1/4*s12^2)*mt^2*s14*s23*s24^2 - 3/4*denom(1/4*s12^2)*mt^2*s14*
      s23^2*s24 - 3/4*denom(1/4*s12^2)*mt^2*s14^2*s23*s24 - 3/8*denom(1/4*
      s12^2)*mt^2*s14^2*s23^2 - 1/4*denom(1/4*s12^2)*mt^2*s13*s24^3 - 1/2*
      denom(1/4*s12^2)*mt^2*s13*s23*s24^2 - 1/2*denom(1/4*s12^2)*mt^2*s13*s14*
      s24^2 - denom(1/4*s12^2)*mt^2*s13*s14*s23*s24 - 3/8*denom(1/4*s12^2)*
      mt^2*s13^2*s24^2 + 1/8*denom(1/4*s12^2)*mt^4*s24^3 + 1/2*denom(1/4*s12^2
      )*mt^4*s23*s24^2 + 3/8*denom(1/4*s12^2)*mt^4*s23^2*s24 + 1/2*denom(1/4*
      s12^2)*mt^4*s14*s24^2 + 5/2*denom(1/4*s12^2)*mt^4*s14*s23*s24 + 3/4*
      denom(1/4*s12^2)*mt^4*s14*s23^2 + 3/8*denom(1/4*s12^2)*mt^4*s14^2*s24 + 
      3/4*denom(1/4*s12^2)*mt^4*s14^2*s23 + 5/4*denom(1/4*s12^2)*mt^4*s13*
      s24^2 + denom(1/4*s12^2)*mt^4*s13*s23*s24 + denom(1/4*s12^2)*mt^4*s13*
      s14*s24 + 1/2*denom(1/4*s12^2)*mt^4*s13*s14*s23 + 3/8*denom(1/4*s12^2)*
      mt^4*s13^2*s24 - 7/8*denom(1/4*s12^2)*mt^6*s24^2 - 7/4*denom(1/4*s12^2)*
      mt^6*s23*s24 - 3/8*denom(1/4*s12^2)*mt^6*s23^2 - 7/4*denom(1/4*s12^2)*
      mt^6*s14*s24 - 2*denom(1/4*s12^2)*mt^6*s14*s23 - 3/8*denom(1/4*s12^2)*
      mt^6*s14^2 - 7/4*denom(1/4*s12^2)*mt^6*s13*s24 - 1/2*denom(1/4*s12^2)*
      mt^6*s13*s23 - 1/2*denom(1/4*s12^2)*mt^6*s13*s14 - 1/8*denom(1/4*s12^2)*
      mt^6*s13^2 + 7/4*denom(1/4*s12^2)*mt^8*s24 + 5/4*denom(1/4*s12^2)*mt^8*
      s23 + 5/4*denom(1/4*s12^2)*mt^8*s14 + 3/4*denom(1/4*s12^2)*mt^8*s13 - 
      denom(1/4*s12^2)*mt^10;
 
 .sort
id KMatrix(11,22) =  1/2*s23*s24^2 + s23^2*s24 + 1/2*s23^3 + s14*s23*s24 + s14
      *s23^2 + 1/2*s14^2*s23 + s13*s23*s24 + s13*s23^2 + s13*s14*s23 + 1/2*
      s13^2*s23 + s12*s23*s24 + s12*s23^2 + s12*s14*s23 + s12*s13*s23 + 1/2*
      s12^2*s23 - mh^2*s23*s24 - mh^2*s23^2 - mh^2*s14*s23 - mh^2*s13*s23 - 
      mh^2*s12*s23 + 1/2*mh^4*s23 - 3/2*mt^2*s24^2 - 4*mt^2*s23*s24 - 5/2*mt^2
      *s23^2 - 2*mt^2*s14*s24 - 3*mt^2*s14*s23 - 1/2*mt^2*s14^2 - 2*mt^2*s13*
      s24 - 3*mt^2*s13*s23 - mt^2*s13*s14 - 1/2*mt^2*s13^2 - 2*mt^2*s12*s24 - 
      3*mt^2*s12*s23 - mt^2*s12*s14 - mt^2*s12*s13 - 1/2*mt^2*s12^2 + 2*mt^2*
      mh^2*s24 + 3*mt^2*mh^2*s23 + mt^2*mh^2*s14 + mt^2*mh^2*s13 + mt^2*mh^2*
      s12 - 1/2*mt^2*mh^4 + 5*mt^4*s24 + 5*mt^4*s23 + 3*mt^4*s14 + 3*mt^4*s13
       + 3*mt^4*s12 - 3*mt^4*mh^2 - 4*mt^6 + 1/2*denom(1/2*s12)*s14*s23^2*s24
       + 1/2*denom(1/2*s12)*s14*s23^3 + 1/2*denom(1/2*s12)*s14^2*s23^2 + 
      denom(1/2*s12)*s13*s23*s24^2 + denom(1/2*s12)*s13*s23^2*s24 + denom(1/2*
      s12)*s13*s14*s23*s24 + 1/2*denom(1/2*s12)*s13*s14*s23^2 + denom(1/2*s12)
      *s13^2*s23*s24 + 1/2*denom(1/2*s12)*s12*s14*s23^2 + denom(1/2*s12)*s12*
      s13*s23*s24 - 1/2*denom(1/2*s12)*mh^2*s14*s23^2 - denom(1/2*s12)*mh^2*
      s13*s23*s24 - denom(1/2*s12)*mt^2*s23*s24^2 - 3/2*denom(1/2*s12)*mt^2*
      s23^2*s24 - 1/2*denom(1/2*s12)*mt^2*s23^3 - 5/2*denom(1/2*s12)*mt^2*s14*
      s23*s24 - 5/2*denom(1/2*s12)*mt^2*s14*s23^2 - denom(1/2*s12)*mt^2*s14^2*
      s23 - 3/2*denom(1/2*s12)*mt^2*s13*s24^2 - 5*denom(1/2*s12)*mt^2*s13*s23*
      s24 - 3/2*denom(1/2*s12)*mt^2*s13*s23^2 - denom(1/2*s12)*mt^2*s13*s14*
      s24 - 2*denom(1/2*s12)*mt^2*s13*s14*s23 - denom(1/2*s12)*mt^2*s13^2*s24
       - denom(1/2*s12)*mt^2*s13^2*s23 - denom(1/2*s12)*mt^2*s12*s23*s24 - 1/2
      *denom(1/2*s12)*mt^2*s12*s23^2 - denom(1/2*s12)*mt^2*s12*s14*s23 - 
      denom(1/2*s12)*mt^2*s12*s13*s24 - denom(1/2*s12)*mt^2*s12*s13*s23 + 
      denom(1/2*s12)*mt^2*mh^2*s23*s24 + 1/2*denom(1/2*s12)*mt^2*mh^2*s23^2 + 
      denom(1/2*s12)*mt^2*mh^2*s14*s23 + denom(1/2*s12)*mt^2*mh^2*s13*s24 + 
      denom(1/2*s12)*mt^2*mh^2*s13*s23 + 3/2*denom(1/2*s12)*mt^4*s24^2 + 11/2*
      denom(1/2*s12)*mt^4*s23*s24 + 3*denom(1/2*s12)*mt^4*s23^2 + 2*denom(1/2*
      s12)*mt^4*s14*s24 + 5*denom(1/2*s12)*mt^4*s14*s23 + 1/2*denom(1/2*s12)*
      mt^4*s14^2 + 5*denom(1/2*s12)*mt^4*s13*s24 + 5*denom(1/2*s12)*mt^4*s13*
      s23 + 3/2*denom(1/2*s12)*mt^4*s13*s14 + denom(1/2*s12)*mt^4*s13^2 + 
      denom(1/2*s12)*mt^4*s12*s24 + 2*denom(1/2*s12)*mt^4*s12*s23 + 1/2*denom(
      1/2*s12)*mt^4*s12*s14 + denom(1/2*s12)*mt^4*s12*s13 - denom(1/2*s12)*
      mt^4*mh^2*s24 - 2*denom(1/2*s12)*mt^4*mh^2*s23 - 1/2*denom(1/2*s12)*mt^4
      *mh^2*s14 - denom(1/2*s12)*mt^4*mh^2*s13 - 5*denom(1/2*s12)*mt^6*s24 - 6
      *denom(1/2*s12)*mt^6*s23 - 3*denom(1/2*s12)*mt^6*s14 - 4*denom(1/2*s12)*
      mt^6*s13 - 3/2*denom(1/2*s12)*mt^6*s12 + 3/2*denom(1/2*s12)*mt^6*mh^2 + 
      4*denom(1/2*s12)*mt^8 + 1/8*denom(1/4*s12^2)*s14^2*s23^3 + 1/2*denom(1/4
      *s12^2)*s13*s14*s23^2*s24 + 3/8*denom(1/4*s12^2)*s13^2*s23*s24^2 - 1/2*
      denom(1/4*s12^2)*mt^2*s14*s23^2*s24 - 1/4*denom(1/4*s12^2)*mt^2*s14*
      s23^3 - 3/8*denom(1/4*s12^2)*mt^2*s14^2*s23^2 - 3/4*denom(1/4*s12^2)*
      mt^2*s13*s23*s24^2 - 1/2*denom(1/4*s12^2)*mt^2*s13*s23^2*s24 - denom(1/4
      *s12^2)*mt^2*s13*s14*s23*s24 - 1/2*denom(1/4*s12^2)*mt^2*s13*s14*s23^2
       - 3/8*denom(1/4*s12^2)*mt^2*s13^2*s24^2 - 3/4*denom(1/4*s12^2)*mt^2*
      s13^2*s23*s24 + 3/8*denom(1/4*s12^2)*mt^4*s23*s24^2 + 1/2*denom(1/4*
      s12^2)*mt^4*s23^2*s24 + 1/8*denom(1/4*s12^2)*mt^4*s23^3 + denom(1/4*
      s12^2)*mt^4*s14*s23*s24 + 5/4*denom(1/4*s12^2)*mt^4*s14*s23^2 + 3/8*
      denom(1/4*s12^2)*mt^4*s14^2*s23 + 3/4*denom(1/4*s12^2)*mt^4*s13*s24^2 + 
      5/2*denom(1/4*s12^2)*mt^4*s13*s23*s24 + 1/2*denom(1/4*s12^2)*mt^4*s13*
      s23^2 + 1/2*denom(1/4*s12^2)*mt^4*s13*s14*s24 + denom(1/4*s12^2)*mt^4*
      s13*s14*s23 + 3/4*denom(1/4*s12^2)*mt^4*s13^2*s24 + 3/8*denom(1/4*s12^2)
      *mt^4*s13^2*s23 - 3/8*denom(1/4*s12^2)*mt^6*s24^2 - 7/4*denom(1/4*s12^2)
      *mt^6*s23*s24 - 7/8*denom(1/4*s12^2)*mt^6*s23^2 - 1/2*denom(1/4*s12^2)*
      mt^6*s14*s24 - 7/4*denom(1/4*s12^2)*mt^6*s14*s23 - 1/8*denom(1/4*s12^2)*
      mt^6*s14^2 - 2*denom(1/4*s12^2)*mt^6*s13*s24 - 7/4*denom(1/4*s12^2)*mt^6
      *s13*s23 - 1/2*denom(1/4*s12^2)*mt^6*s13*s14 - 3/8*denom(1/4*s12^2)*mt^6
      *s13^2 + 5/4*denom(1/4*s12^2)*mt^8*s24 + 7/4*denom(1/4*s12^2)*mt^8*s23
       + 3/4*denom(1/4*s12^2)*mt^8*s14 + 5/4*denom(1/4*s12^2)*mt^8*s13 - 
      denom(1/4*s12^2)*mt^10;
 
 .sort
id KMatrix(11,23) =   - mt^2*s23*s24 - mt^2*s23^2 - mt^2*s14*s23 - mt^2*s13*
      s23 - mt^2*s12*s23 + mt^2*mh^2*s23 + 3*mt^4*s24 + 3*mt^4*s23 + mt^4*s14
       + mt^4*s13 + mt^4*s12 - mt^4*mh^2 - 4*mt^6 + 1/2*denom(1/2*s12)*s14*s23
      *s24^2 + 1/2*denom(1/2*s12)*s14*s23^2*s24 + 1/2*denom(1/2*s12)*s14^2*s23
      *s24 + 1/2*denom(1/2*s12)*s13*s14*s23*s24 + 1/2*denom(1/2*s12)*s12*s14*
      s23*s24 - 1/2*denom(1/2*s12)*mh^2*s14*s23*s24 - 1/2*denom(1/2*s12)*mt^2*
      s23*s24^2 - 1/2*denom(1/2*s12)*mt^2*s23^2*s24 - 3/2*denom(1/2*s12)*mt^2*
      s14*s24^2 - 5/2*denom(1/2*s12)*mt^2*s14*s23*s24 - denom(1/2*s12)*mt^2*
      s14*s23^2 - 1/2*denom(1/2*s12)*mt^2*s14^2*s24 - 1/2*denom(1/2*s12)*mt^2*
      s14^2*s23 - 2*denom(1/2*s12)*mt^2*s13*s23*s24 - 1/2*denom(1/2*s12)*mt^2*
      s13*s14*s24 - 1/2*denom(1/2*s12)*mt^2*s13*s14*s23 - 1/2*denom(1/2*s12)*
      mt^2*s12*s23*s24 - 1/2*denom(1/2*s12)*mt^2*s12*s14*s24 - 1/2*denom(1/2*
      s12)*mt^2*s12*s14*s23 + 1/2*denom(1/2*s12)*mt^2*mh^2*s23*s24 + 1/2*
      denom(1/2*s12)*mt^2*mh^2*s14*s24 + 1/2*denom(1/2*s12)*mt^2*mh^2*s14*s23
       + 3/2*denom(1/2*s12)*mt^4*s24^2 + 7/2*denom(1/2*s12)*mt^4*s23*s24 + 
      denom(1/2*s12)*mt^4*s23^2 + 4*denom(1/2*s12)*mt^4*s14*s24 + 3*denom(1/2*
      s12)*mt^4*s14*s23 + 1/2*denom(1/2*s12)*mt^4*s14^2 + 2*denom(1/2*s12)*
      mt^4*s13*s24 + 2*denom(1/2*s12)*mt^4*s13*s23 + 1/2*denom(1/2*s12)*mt^4*
      s13*s14 + 1/2*denom(1/2*s12)*mt^4*s12*s24 + 1/2*denom(1/2*s12)*mt^4*s12*
      s23 + 1/2*denom(1/2*s12)*mt^4*s12*s14 - 1/2*denom(1/2*s12)*mt^4*mh^2*s24
       - 1/2*denom(1/2*s12)*mt^4*mh^2*s23 - 1/2*denom(1/2*s12)*mt^4*mh^2*s14
       - 5*denom(1/2*s12)*mt^6*s24 - 4*denom(1/2*s12)*mt^6*s23 - 3*denom(1/2*
      s12)*mt^6*s14 - 2*denom(1/2*s12)*mt^6*s13 - 1/2*denom(1/2*s12)*mt^6*s12
       + 1/2*denom(1/2*s12)*mt^6*mh^2 + 4*denom(1/2*s12)*mt^8 + 1/4*denom(1/4*
      s12^2)*s14^2*s23^2*s24 + 3/4*denom(1/4*s12^2)*s13*s14*s23*s24^2 - 3/4*
      denom(1/4*s12^2)*mt^2*s14*s23*s24^2 - 1/2*denom(1/4*s12^2)*mt^2*s14*
      s23^2*s24 - 1/2*denom(1/4*s12^2)*mt^2*s14^2*s23*s24 - 1/4*denom(1/4*
      s12^2)*mt^2*s14^2*s23^2 - 3/4*denom(1/4*s12^2)*mt^2*s13*s23*s24^2 - 3/4*
      denom(1/4*s12^2)*mt^2*s13*s14*s24^2 - 3/2*denom(1/4*s12^2)*mt^2*s13*s14*
      s23*s24 + 3/4*denom(1/4*s12^2)*mt^4*s23*s24^2 + 1/4*denom(1/4*s12^2)*
      mt^4*s23^2*s24 + 3/4*denom(1/4*s12^2)*mt^4*s14*s24^2 + 5/2*denom(1/4*
      s12^2)*mt^4*s14*s23*s24 + 1/2*denom(1/4*s12^2)*mt^4*s14*s23^2 + 1/4*
      denom(1/4*s12^2)*mt^4*s14^2*s24 + 1/2*denom(1/4*s12^2)*mt^4*s14^2*s23 + 
      3/4*denom(1/4*s12^2)*mt^4*s13*s24^2 + 3/2*denom(1/4*s12^2)*mt^4*s13*s23*
      s24 + 3/2*denom(1/4*s12^2)*mt^4*s13*s14*s24 + 3/4*denom(1/4*s12^2)*mt^4*
      s13*s14*s23 - 3/4*denom(1/4*s12^2)*mt^6*s24^2 - 2*denom(1/4*s12^2)*mt^6*
      s23*s24 - 1/4*denom(1/4*s12^2)*mt^6*s23^2 - 2*denom(1/4*s12^2)*mt^6*s14*
      s24 - 7/4*denom(1/4*s12^2)*mt^6*s14*s23 - 1/4*denom(1/4*s12^2)*mt^6*
      s14^2 - 3/2*denom(1/4*s12^2)*mt^6*s13*s24 - 3/4*denom(1/4*s12^2)*mt^6*
      s13*s23 - 3/4*denom(1/4*s12^2)*mt^6*s13*s14 + 7/4*denom(1/4*s12^2)*mt^8*
      s24 + 5/4*denom(1/4*s12^2)*mt^8*s23 + 5/4*denom(1/4*s12^2)*mt^8*s14 + 3/
      4*denom(1/4*s12^2)*mt^8*s13 - denom(1/4*s12^2)*mt^10;
 
 .sort
id KMatrix(11,24) =  mt*s12*s23*s24 + mt*s12*s23^2 + mt*s12*s14*s23 + mt*s12*
      s13*s23 + mt*s12^2*s23 - mt*mh^2*s12*s23 - mt^3*s12*s24 - 3*mt^3*s12*s23
       - mt^3*s12*s14 - mt^3*s12*s13 - mt^3*s12^2 + mt^3*mh^2*s12 + 2*mt^5*s12
       + denom(1/2*s12)*mt*s12*s14*s23^2 + denom(1/2*s12)*mt*s12*s13*s23*s24
       - denom(1/2*s12)*mt^3*s12*s23*s24 - denom(1/2*s12)*mt^3*s12*s23^2 - 2*
      denom(1/2*s12)*mt^3*s12*s14*s23 - denom(1/2*s12)*mt^3*s12*s13*s24 - 
      denom(1/2*s12)*mt^3*s12*s13*s23 + denom(1/2*s12)*mt^5*s12*s24 + 3*denom(
      1/2*s12)*mt^5*s12*s23 + denom(1/2*s12)*mt^5*s12*s14 + denom(1/2*s12)*
      mt^5*s12*s13 - 2*denom(1/2*s12)*mt^7*s12 - 1/4*denom(1/4*s12^2)*mt*s12^2
      *s14*s23^2 - 1/4*denom(1/4*s12^2)*mt*s12^2*s13*s23*s24 + 1/4*denom(1/4*
      s12^2)*mt^3*s12^2*s23*s24 + 1/4*denom(1/4*s12^2)*mt^3*s12^2*s23^2 + 1/2*
      denom(1/4*s12^2)*mt^3*s12^2*s14*s23 + 1/4*denom(1/4*s12^2)*mt^3*s12^2*
      s13*s24 + 1/4*denom(1/4*s12^2)*mt^3*s12^2*s13*s23 - 1/4*denom(1/4*s12^2)
      *mt^5*s12^2*s24 - 3/4*denom(1/4*s12^2)*mt^5*s12^2*s23 - 1/4*denom(1/4*
      s12^2)*mt^5*s12^2*s14 - 1/4*denom(1/4*s12^2)*mt^5*s12^2*s13 + 1/2*denom(
      1/4*s12^2)*mt^7*s12^2;
 
 .sort
id KMatrix(11,25) =   - mt*s24^2 + mt*s23^2 - mt*s14*s24 + mt*s14*s23 - mt*s13
      *s24 + mt*s13*s23 - mt*s12*s24 + mt*s12*s23 + mt*mh^2*s24 - mt*mh^2*s23
       + 2*mt^3*s24 - 2*mt^3*s23 - denom(1/2*s12)*mt*s14*s23*s24 + denom(1/2*
      s12)*mt*s14*s23^2 - denom(1/2*s12)*mt*s13*s24^2 + denom(1/2*s12)*mt*s13*
      s23*s24 + denom(1/2*s12)*mt^3*s24^2 - denom(1/2*s12)*mt^3*s23^2 + denom(
      1/2*s12)*mt^3*s14*s24 - denom(1/2*s12)*mt^3*s14*s23 + denom(1/2*s12)*
      mt^3*s13*s24 - denom(1/2*s12)*mt^3*s13*s23 - 2*denom(1/2*s12)*mt^5*s24
       + 2*denom(1/2*s12)*mt^5*s23 + 1/4*denom(1/4*s12^2)*mt*s12*s14*s23*s24
       - 1/4*denom(1/4*s12^2)*mt*s12*s14*s23^2 + 1/4*denom(1/4*s12^2)*mt*s12*
      s13*s24^2 - 1/4*denom(1/4*s12^2)*mt*s12*s13*s23*s24 - 1/4*denom(1/4*
      s12^2)*mt^3*s12*s24^2 + 1/4*denom(1/4*s12^2)*mt^3*s12*s23^2 - 1/4*denom(
      1/4*s12^2)*mt^3*s12*s14*s24 + 1/4*denom(1/4*s12^2)*mt^3*s12*s14*s23 - 1/
      4*denom(1/4*s12^2)*mt^3*s12*s13*s24 + 1/4*denom(1/4*s12^2)*mt^3*s12*s13*
      s23 + 1/2*denom(1/4*s12^2)*mt^5*s12*s24 - 1/2*denom(1/4*s12^2)*mt^5*s12*
      s23;
 
 .sort
id KMatrix(11,26) =   - mt^3*s12*s24 - mt^3*s12*s23 - mt^3*s12*s14 - mt^3*s12*
      s13 - mt^3*s12^2 + mt^3*mh^2*s12 + 4*mt^5*s12 + 1/2*denom(1/2*s12)*mt*
      s12*s13*s23*s24 + 1/2*denom(1/2*s12)*mt*s12*s13*s23^2 + 1/2*denom(1/2*
      s12)*mt*s12*s13*s14*s23 + 1/2*denom(1/2*s12)*mt*s12*s13^2*s23 + 1/2*
      denom(1/2*s12)*mt*s12^2*s13*s23 - 1/2*denom(1/2*s12)*mt*mh^2*s12*s13*s23
       - 1/2*denom(1/2*s12)*mt^3*s12*s23*s24 - 1/2*denom(1/2*s12)*mt^3*s12*
      s23^2 - denom(1/2*s12)*mt^3*s12*s14*s24 - denom(1/2*s12)*mt^3*s12*s14*
      s23 - denom(1/2*s12)*mt^3*s12*s13*s24 - 3*denom(1/2*s12)*mt^3*s12*s13*
      s23 - 1/2*denom(1/2*s12)*mt^3*s12*s13*s14 - 1/2*denom(1/2*s12)*mt^3*s12*
      s13^2 - 1/2*denom(1/2*s12)*mt^3*s12^2*s23 - 1/2*denom(1/2*s12)*mt^3*
      s12^2*s13 + 1/2*denom(1/2*s12)*mt^3*mh^2*s12*s23 + 1/2*denom(1/2*s12)*
      mt^3*mh^2*s12*s13 + 2*denom(1/2*s12)*mt^5*s12*s24 + 3*denom(1/2*s12)*
      mt^5*s12*s23 + 2*denom(1/2*s12)*mt^5*s12*s14 + 3*denom(1/2*s12)*mt^5*s12
      *s13 + 1/2*denom(1/2*s12)*mt^5*s12^2 - 1/2*denom(1/2*s12)*mt^5*mh^2*s12
       - 4*denom(1/2*s12)*mt^7*s12 + 1/2*denom(1/4*s12^2)*mt*s12*s13*s14*s23*
      s24 + 1/4*denom(1/4*s12^2)*mt*s12*s13*s14*s23^2 + 1/4*denom(1/4*s12^2)*
      mt*s12*s13^2*s23*s24 - 1/2*denom(1/4*s12^2)*mt^3*s12*s14*s23*s24 - 1/4*
      denom(1/4*s12^2)*mt^3*s12*s14*s23^2 - denom(1/4*s12^2)*mt^3*s12*s13*s23*
      s24 - 1/4*denom(1/4*s12^2)*mt^3*s12*s13*s23^2 - 1/2*denom(1/4*s12^2)*
      mt^3*s12*s13*s14*s24 - denom(1/4*s12^2)*mt^3*s12*s13*s14*s23 - 1/4*
      denom(1/4*s12^2)*mt^3*s12*s13^2*s24 - 1/4*denom(1/4*s12^2)*mt^3*s12*
      s13^2*s23 + 3/4*denom(1/4*s12^2)*mt^5*s12*s23*s24 + 1/4*denom(1/4*s12^2)
      *mt^5*s12*s23^2 + 1/2*denom(1/4*s12^2)*mt^5*s12*s14*s24 + denom(1/4*
      s12^2)*mt^5*s12*s14*s23 + denom(1/4*s12^2)*mt^5*s12*s13*s24 + 3/2*denom(
      1/4*s12^2)*mt^5*s12*s13*s23 + 3/4*denom(1/4*s12^2)*mt^5*s12*s13*s14 + 1/
      4*denom(1/4*s12^2)*mt^5*s12*s13^2 - 3/4*denom(1/4*s12^2)*mt^7*s12*s24 - 
      5/4*denom(1/4*s12^2)*mt^7*s12*s23 - 3/4*denom(1/4*s12^2)*mt^7*s12*s14 - 
      5/4*denom(1/4*s12^2)*mt^7*s12*s13 + denom(1/4*s12^2)*mt^9*s12;
 
 .sort
id KMatrix(11,27) =   0;
 
 .sort
id KMatrix(11,28) =  1/2*mt*s12*s24^2 + mt*s12*s23*s24 + 1/2*mt*s12*s23^2 + mt
      *s12*s14*s24 + mt*s12*s14*s23 + 1/2*mt*s12*s14^2 + mt*s12*s13*s24 + mt*
      s12*s13*s23 + mt*s12*s13*s14 + 1/2*mt*s12*s13^2 + mt*s12^2*s24 + mt*
      s12^2*s23 + mt*s12^2*s14 + mt*s12^2*s13 + 1/2*mt*s12^3 - mt*mh^2*s12*s24
       - mt*mh^2*s12*s23 - mt*mh^2*s12*s14 - mt*mh^2*s12*s13 - mt*mh^2*s12^2
       + 1/2*mt*mh^4*s12 - 3*mt^3*s12*s24 - 3*mt^3*s12*s23 - 3*mt^3*s12*s14 - 
      3*mt^3*s12*s13 - 3*mt^3*s12^2 + 3*mt^3*mh^2*s12 + 4*mt^5*s12 + 1/2*
      denom(1/2*s12)*mt*s12*s14*s24^2 + denom(1/2*s12)*mt*s12*s14*s23*s24 + 1/
      2*denom(1/2*s12)*mt*s12*s14*s23^2 + 1/2*denom(1/2*s12)*mt*s12*s14^2*s24
       + 1/2*denom(1/2*s12)*mt*s12*s14^2*s23 + 1/2*denom(1/2*s12)*mt*s12*s13*
      s24^2 + 1/2*denom(1/2*s12)*mt*s12*s13*s23*s24 + denom(1/2*s12)*mt*s12*
      s13*s14*s24 + 1/2*denom(1/2*s12)*mt*s12*s13*s14*s23 + 1/2*denom(1/2*s12)
      *mt*s12*s13^2*s24 + 1/2*denom(1/2*s12)*mt*s12^2*s14*s24 + 1/2*denom(1/2*
      s12)*mt*s12^2*s14*s23 + 1/2*denom(1/2*s12)*mt*s12^2*s13*s24 - 1/2*denom(
      1/2*s12)*mt*mh^2*s12*s14*s24 - 1/2*denom(1/2*s12)*mt*mh^2*s12*s14*s23 - 
      1/2*denom(1/2*s12)*mt*mh^2*s12*s13*s24 - denom(1/2*s12)*mt^3*s12*s24^2
       - 3/2*denom(1/2*s12)*mt^3*s12*s23*s24 - 1/2*denom(1/2*s12)*mt^3*s12*
      s23^2 - 3*denom(1/2*s12)*mt^3*s12*s14*s24 - 3*denom(1/2*s12)*mt^3*s12*
      s14*s23 - denom(1/2*s12)*mt^3*s12*s14^2 - 3*denom(1/2*s12)*mt^3*s12*s13*
      s24 - denom(1/2*s12)*mt^3*s12*s13*s23 - 3/2*denom(1/2*s12)*mt^3*s12*s13*
      s14 - 1/2*denom(1/2*s12)*mt^3*s12*s13^2 - denom(1/2*s12)*mt^3*s12^2*s24
       - 1/2*denom(1/2*s12)*mt^3*s12^2*s23 - denom(1/2*s12)*mt^3*s12^2*s14 - 1/
      2*denom(1/2*s12)*mt^3*s12^2*s13 + denom(1/2*s12)*mt^3*mh^2*s12*s24 + 1/2
      *denom(1/2*s12)*mt^3*mh^2*s12*s23 + denom(1/2*s12)*mt^3*mh^2*s12*s14 + 1/
      2*denom(1/2*s12)*mt^3*mh^2*s12*s13 + 4*denom(1/2*s12)*mt^5*s12*s24 + 3*
      denom(1/2*s12)*mt^5*s12*s23 + 4*denom(1/2*s12)*mt^5*s12*s14 + 3*denom(1/
      2*s12)*mt^5*s12*s13 + 3/2*denom(1/2*s12)*mt^5*s12^2 - 3/2*denom(1/2*s12)
      *mt^5*mh^2*s12 - 4*denom(1/2*s12)*mt^7*s12 + 1/4*denom(1/4*s12^2)*mt*s12
      *s14^2*s23*s24 + 1/8*denom(1/4*s12^2)*mt*s12*s14^2*s23^2 + 1/4*denom(1/4
      *s12^2)*mt*s12*s13*s14*s24^2 + 1/4*denom(1/4*s12^2)*mt*s12*s13*s14*s23*
      s24 + 1/8*denom(1/4*s12^2)*mt*s12*s13^2*s24^2 - 1/4*denom(1/4*s12^2)*
      mt^3*s12*s14*s24^2 - 3/4*denom(1/4*s12^2)*mt^3*s12*s14*s23*s24 - 1/4*
      denom(1/4*s12^2)*mt^3*s12*s14*s23^2 - 1/4*denom(1/4*s12^2)*mt^3*s12*
      s14^2*s24 - 1/2*denom(1/4*s12^2)*mt^3*s12*s14^2*s23 - 1/2*denom(1/4*
      s12^2)*mt^3*s12*s13*s24^2 - 1/4*denom(1/4*s12^2)*mt^3*s12*s13*s23*s24 - 
      3/4*denom(1/4*s12^2)*mt^3*s12*s13*s14*s24 - 1/4*denom(1/4*s12^2)*mt^3*
      s12*s13*s14*s23 - 1/4*denom(1/4*s12^2)*mt^3*s12*s13^2*s24 + 3/8*denom(1/
      4*s12^2)*mt^5*s12*s24^2 + 1/2*denom(1/4*s12^2)*mt^5*s12*s23*s24 + 1/8*
      denom(1/4*s12^2)*mt^5*s12*s23^2 + 5/4*denom(1/4*s12^2)*mt^5*s12*s14*s24
       + 5/4*denom(1/4*s12^2)*mt^5*s12*s14*s23 + 3/8*denom(1/4*s12^2)*mt^5*s12
      *s14^2 + 5/4*denom(1/4*s12^2)*mt^5*s12*s13*s24 + 1/4*denom(1/4*s12^2)*
      mt^5*s12*s13*s23 + 1/2*denom(1/4*s12^2)*mt^5*s12*s13*s14 + 1/8*denom(1/4
      *s12^2)*mt^5*s12*s13^2 - 5/4*denom(1/4*s12^2)*mt^7*s12*s24 - 3/4*denom(1/
      4*s12^2)*mt^7*s12*s23 - 5/4*denom(1/4*s12^2)*mt^7*s12*s14 - 3/4*denom(1/
      4*s12^2)*mt^7*s12*s13 + denom(1/4*s12^2)*mt^9*s12;
 
 .sort
id KMatrix(11,29) =   0;
 
 .sort
id KMatrix(11,30) =  1/2*mt*s12*s24^2 + mt*s12*s23*s24 + 1/2*mt*s12*s23^2 + mt
      *s12*s14*s24 + mt*s12*s14*s23 + 1/2*mt*s12*s14^2 + mt*s12*s13*s24 + mt*
      s12*s13*s23 + mt*s12*s13*s14 + 1/2*mt*s12*s13^2 + mt*s12^2*s24 + mt*
      s12^2*s23 + mt*s12^2*s14 + mt*s12^2*s13 + 1/2*mt*s12^3 - mt*mh^2*s12*s24
       - mt*mh^2*s12*s23 - mt*mh^2*s12*s14 - mt*mh^2*s12*s13 - mt*mh^2*s12^2
       + 1/2*mt*mh^4*s12 - 3*mt^3*s12*s24 - 3*mt^3*s12*s23 - 3*mt^3*s12*s14 - 
      3*mt^3*s12*s13 - 3*mt^3*s12^2 + 3*mt^3*mh^2*s12 + 4*mt^5*s12 + 1/2*
      denom(1/2*s12)*mt*s12*s14*s23*s24 + 1/2*denom(1/2*s12)*mt*s12*s14*s23^2
       + 1/2*denom(1/2*s12)*mt*s12*s14^2*s23 + 1/2*denom(1/2*s12)*mt*s12*s13*
      s24^2 + denom(1/2*s12)*mt*s12*s13*s23*s24 + 1/2*denom(1/2*s12)*mt*s12*
      s13*s23^2 + 1/2*denom(1/2*s12)*mt*s12*s13*s14*s24 + denom(1/2*s12)*mt*
      s12*s13*s14*s23 + 1/2*denom(1/2*s12)*mt*s12*s13^2*s24 + 1/2*denom(1/2*
      s12)*mt*s12*s13^2*s23 + 1/2*denom(1/2*s12)*mt*s12^2*s14*s23 + 1/2*denom(
      1/2*s12)*mt*s12^2*s13*s24 + 1/2*denom(1/2*s12)*mt*s12^2*s13*s23 - 1/2*
      denom(1/2*s12)*mt*mh^2*s12*s14*s23 - 1/2*denom(1/2*s12)*mt*mh^2*s12*s13*
      s24 - 1/2*denom(1/2*s12)*mt*mh^2*s12*s13*s23 - 1/2*denom(1/2*s12)*mt^3*
      s12*s24^2 - 3/2*denom(1/2*s12)*mt^3*s12*s23*s24 - denom(1/2*s12)*mt^3*
      s12*s23^2 - denom(1/2*s12)*mt^3*s12*s14*s24 - 3*denom(1/2*s12)*mt^3*s12*
      s14*s23 - 1/2*denom(1/2*s12)*mt^3*s12*s14^2 - 3*denom(1/2*s12)*mt^3*s12*
      s13*s24 - 3*denom(1/2*s12)*mt^3*s12*s13*s23 - 3/2*denom(1/2*s12)*mt^3*
      s12*s13*s14 - denom(1/2*s12)*mt^3*s12*s13^2 - 1/2*denom(1/2*s12)*mt^3*
      s12^2*s24 - denom(1/2*s12)*mt^3*s12^2*s23 - 1/2*denom(1/2*s12)*mt^3*
      s12^2*s14 - denom(1/2*s12)*mt^3*s12^2*s13 + 1/2*denom(1/2*s12)*mt^3*mh^2
      *s12*s24 + denom(1/2*s12)*mt^3*mh^2*s12*s23 + 1/2*denom(1/2*s12)*mt^3*
      mh^2*s12*s14 + denom(1/2*s12)*mt^3*mh^2*s12*s13 + 3*denom(1/2*s12)*mt^5*
      s12*s24 + 4*denom(1/2*s12)*mt^5*s12*s23 + 3*denom(1/2*s12)*mt^5*s12*s14
       + 4*denom(1/2*s12)*mt^5*s12*s13 + 3/2*denom(1/2*s12)*mt^5*s12^2 - 3/2*
      denom(1/2*s12)*mt^5*mh^2*s12 - 4*denom(1/2*s12)*mt^7*s12 + 1/8*denom(1/4
      *s12^2)*mt*s12*s14^2*s23^2 + 1/4*denom(1/4*s12^2)*mt*s12*s13*s14*s23*s24
       + 1/4*denom(1/4*s12^2)*mt*s12*s13*s14*s23^2 + 1/8*denom(1/4*s12^2)*mt*
      s12*s13^2*s24^2 + 1/4*denom(1/4*s12^2)*mt*s12*s13^2*s23*s24 - 1/4*denom(
      1/4*s12^2)*mt^3*s12*s14*s23*s24 - 1/2*denom(1/4*s12^2)*mt^3*s12*s14*
      s23^2 - 1/4*denom(1/4*s12^2)*mt^3*s12*s14^2*s23 - 1/4*denom(1/4*s12^2)*
      mt^3*s12*s13*s24^2 - 3/4*denom(1/4*s12^2)*mt^3*s12*s13*s23*s24 - 1/4*
      denom(1/4*s12^2)*mt^3*s12*s13*s23^2 - 1/4*denom(1/4*s12^2)*mt^3*s12*s13*
      s14*s24 - 3/4*denom(1/4*s12^2)*mt^3*s12*s13*s14*s23 - 1/2*denom(1/4*
      s12^2)*mt^3*s12*s13^2*s24 - 1/4*denom(1/4*s12^2)*mt^3*s12*s13^2*s23 + 1/
      8*denom(1/4*s12^2)*mt^5*s12*s24^2 + 1/2*denom(1/4*s12^2)*mt^5*s12*s23*
      s24 + 3/8*denom(1/4*s12^2)*mt^5*s12*s23^2 + 1/4*denom(1/4*s12^2)*mt^5*
      s12*s14*s24 + 5/4*denom(1/4*s12^2)*mt^5*s12*s14*s23 + 1/8*denom(1/4*
      s12^2)*mt^5*s12*s14^2 + 5/4*denom(1/4*s12^2)*mt^5*s12*s13*s24 + 5/4*
      denom(1/4*s12^2)*mt^5*s12*s13*s23 + 1/2*denom(1/4*s12^2)*mt^5*s12*s13*
      s14 + 3/8*denom(1/4*s12^2)*mt^5*s12*s13^2 - 3/4*denom(1/4*s12^2)*mt^7*
      s12*s24 - 5/4*denom(1/4*s12^2)*mt^7*s12*s23 - 3/4*denom(1/4*s12^2)*mt^7*
      s12*s14 - 5/4*denom(1/4*s12^2)*mt^7*s12*s13 + denom(1/4*s12^2)*mt^9*s12;
 
 .sort
id KMatrix(11,31) =   0;
 
 .sort
id KMatrix(11,32) =   - mt^3*s12*s24 - mt^3*s12*s23 - mt^3*s12*s14 - mt^3*s12*
      s13 - mt^3*s12^2 + mt^3*mh^2*s12 + 4*mt^5*s12 + 1/2*denom(1/2*s12)*mt*
      s12*s14*s24^2 + 1/2*denom(1/2*s12)*mt*s12*s14*s23*s24 + 1/2*denom(1/2*
      s12)*mt*s12*s14^2*s24 + 1/2*denom(1/2*s12)*mt*s12*s13*s14*s24 + 1/2*
      denom(1/2*s12)*mt*s12^2*s14*s24 - 1/2*denom(1/2*s12)*mt*mh^2*s12*s14*s24
       - 1/2*denom(1/2*s12)*mt^3*s12*s24^2 - 1/2*denom(1/2*s12)*mt^3*s12*s23*
      s24 - 3*denom(1/2*s12)*mt^3*s12*s14*s24 - denom(1/2*s12)*mt^3*s12*s14*
      s23 - 1/2*denom(1/2*s12)*mt^3*s12*s14^2 - denom(1/2*s12)*mt^3*s12*s13*
      s24 - denom(1/2*s12)*mt^3*s12*s13*s23 - 1/2*denom(1/2*s12)*mt^3*s12*s13*
      s14 - 1/2*denom(1/2*s12)*mt^3*s12^2*s24 - 1/2*denom(1/2*s12)*mt^3*s12^2*
      s14 + 1/2*denom(1/2*s12)*mt^3*mh^2*s12*s24 + 1/2*denom(1/2*s12)*mt^3*
      mh^2*s12*s14 + 3*denom(1/2*s12)*mt^5*s12*s24 + 2*denom(1/2*s12)*mt^5*s12
      *s23 + 3*denom(1/2*s12)*mt^5*s12*s14 + 2*denom(1/2*s12)*mt^5*s12*s13 + 1/
      2*denom(1/2*s12)*mt^5*s12^2 - 1/2*denom(1/2*s12)*mt^5*mh^2*s12 - 4*
      denom(1/2*s12)*mt^7*s12 + 1/4*denom(1/4*s12^2)*mt*s12*s14^2*s23*s24 + 1/
      4*denom(1/4*s12^2)*mt*s12*s13*s14*s24^2 + 1/2*denom(1/4*s12^2)*mt*s12*
      s13*s14*s23*s24 - 1/4*denom(1/4*s12^2)*mt^3*s12*s14*s24^2 - denom(1/4*
      s12^2)*mt^3*s12*s14*s23*s24 - 1/4*denom(1/4*s12^2)*mt^3*s12*s14^2*s24 - 
      1/4*denom(1/4*s12^2)*mt^3*s12*s14^2*s23 - 1/4*denom(1/4*s12^2)*mt^3*s12*
      s13*s24^2 - 1/2*denom(1/4*s12^2)*mt^3*s12*s13*s23*s24 - denom(1/4*s12^2)
      *mt^3*s12*s13*s14*s24 - 1/2*denom(1/4*s12^2)*mt^3*s12*s13*s14*s23 + 1/4*
      denom(1/4*s12^2)*mt^5*s12*s24^2 + 3/4*denom(1/4*s12^2)*mt^5*s12*s23*s24
       + 3/2*denom(1/4*s12^2)*mt^5*s12*s14*s24 + denom(1/4*s12^2)*mt^5*s12*s14
      *s23 + 1/4*denom(1/4*s12^2)*mt^5*s12*s14^2 + denom(1/4*s12^2)*mt^5*s12*
      s13*s24 + 1/2*denom(1/4*s12^2)*mt^5*s12*s13*s23 + 3/4*denom(1/4*s12^2)*
      mt^5*s12*s13*s14 - 5/4*denom(1/4*s12^2)*mt^7*s12*s24 - 3/4*denom(1/4*
      s12^2)*mt^7*s12*s23 - 5/4*denom(1/4*s12^2)*mt^7*s12*s14 - 3/4*denom(1/4*
      s12^2)*mt^7*s12*s13 + denom(1/4*s12^2)*mt^9*s12;
 
 .sort
id KMatrix(11,33) =   0;
 
 .sort
id KMatrix(11,34) =   - 1/2*s14*s23*s24 - 1/2*s14*s23^2 - 1/2*s14^2*s23 - 1/2*
      s13*s24^2 - 1/2*s13*s23*s24 - 1/2*s13*s14*s24 - 1/2*s13*s14*s23 - 1/2*
      s13^2*s24 - 1/2*s12*s14*s23 - 1/2*s12*s13*s24 + 1/2*mh^2*s14*s23 + 1/2*
      mh^2*s13*s24 + 1/2*mt^2*s24^2 + mt^2*s23*s24 + 1/2*mt^2*s23^2 + mt^2*s14
      *s24 + 2*mt^2*s14*s23 + 1/2*mt^2*s14^2 + 2*mt^2*s13*s24 + mt^2*s13*s23
       + mt^2*s13*s14 + 1/2*mt^2*s13^2 + 3/2*mt^2*s12*s24 + 3/2*mt^2*s12*s23
       + 3/2*mt^2*s12*s14 + 3/2*mt^2*s12*s13 + mt^2*s12^2 - 1/2*mt^2*mh^2*s24
       - 1/2*mt^2*mh^2*s23 - 1/2*mt^2*mh^2*s14 - 1/2*mt^2*mh^2*s13 - mt^2*mh^2
      *s12 - 2*mt^4*s24 - 2*mt^4*s23 - 2*mt^4*s14 - 2*mt^4*s13 - 5*mt^4*s12 + 
      mt^4*mh^2 + 2*mt^6 - 1/2*denom(1/2*s12)*s14^2*s23^2 - denom(1/2*s12)*s13
      *s14*s23*s24 - 1/2*denom(1/2*s12)*s13^2*s24^2 + denom(1/2*s12)*mt^2*s14*
      s23*s24 + denom(1/2*s12)*mt^2*s14*s23^2 + denom(1/2*s12)*mt^2*s14^2*s23
       + denom(1/2*s12)*mt^2*s13*s24^2 + denom(1/2*s12)*mt^2*s13*s23*s24 + 
      denom(1/2*s12)*mt^2*s13*s14*s24 + denom(1/2*s12)*mt^2*s13*s14*s23 + 
      denom(1/2*s12)*mt^2*s13^2*s24 + denom(1/2*s12)*mt^2*s12*s14*s24 + denom(
      1/2*s12)*mt^2*s12*s14*s23 + denom(1/2*s12)*mt^2*s12*s13*s24 + denom(1/2*
      s12)*mt^2*s12*s13*s23 - 1/2*denom(1/2*s12)*mt^4*s24^2 - denom(1/2*s12)*
      mt^4*s23*s24 - 1/2*denom(1/2*s12)*mt^4*s23^2 - denom(1/2*s12)*mt^4*s14*
      s24 - 3*denom(1/2*s12)*mt^4*s14*s23 - 1/2*denom(1/2*s12)*mt^4*s14^2 - 3*
      denom(1/2*s12)*mt^4*s13*s24 - denom(1/2*s12)*mt^4*s13*s23 - denom(1/2*
      s12)*mt^4*s13*s14 - 1/2*denom(1/2*s12)*mt^4*s13^2 - 2*denom(1/2*s12)*
      mt^4*s12*s24 - 2*denom(1/2*s12)*mt^4*s12*s23 - 2*denom(1/2*s12)*mt^4*s12
      *s14 - 2*denom(1/2*s12)*mt^4*s12*s13 + 2*denom(1/2*s12)*mt^6*s24 + 2*
      denom(1/2*s12)*mt^6*s23 + 2*denom(1/2*s12)*mt^6*s14 + 2*denom(1/2*s12)*
      mt^6*s13 + 4*denom(1/2*s12)*mt^6*s12 - 2*denom(1/2*s12)*mt^8 + 1/4*
      denom(1/4*s12^2)*s12*s14^2*s23^2 + 1/4*denom(1/4*s12^2)*s12*s13^2*s24^2
       + 1/8*denom(1/4*s12^2)*s12^2*s14*s23*s24 + 1/8*denom(1/4*s12^2)*s12^2*
      s14*s23^2 + 1/8*denom(1/4*s12^2)*s12^2*s14^2*s23 + 1/8*denom(1/4*s12^2)*
      s12^2*s13*s24^2 + 1/8*denom(1/4*s12^2)*s12^2*s13*s23*s24 + 1/8*denom(1/4
      *s12^2)*s12^2*s13*s14*s24 + 1/8*denom(1/4*s12^2)*s12^2*s13*s14*s23 + 1/8
      *denom(1/4*s12^2)*s12^2*s13^2*s24 + 1/8*denom(1/4*s12^2)*s12^3*s14*s23
       + 1/8*denom(1/4*s12^2)*s12^3*s13*s24 - 1/8*denom(1/4*s12^2)*mh^2*s12^2*
      s14*s23 - 1/8*denom(1/4*s12^2)*mh^2*s12^2*s13*s24 - 1/2*denom(1/4*s12^2)
      *mt^2*s12*s14*s23^2 - 1/2*denom(1/4*s12^2)*mt^2*s12*s14^2*s23 - 1/2*
      denom(1/4*s12^2)*mt^2*s12*s13*s24^2 - 1/2*denom(1/4*s12^2)*mt^2*s12*
      s13^2*s24 - 1/8*denom(1/4*s12^2)*mt^2*s12^2*s24^2 - 1/4*denom(1/4*s12^2)
      *mt^2*s12^2*s23*s24 - 1/8*denom(1/4*s12^2)*mt^2*s12^2*s23^2 - 1/4*denom(
      1/4*s12^2)*mt^2*s12^2*s14*s24 - 3/4*denom(1/4*s12^2)*mt^2*s12^2*s14*s23
       - 1/8*denom(1/4*s12^2)*mt^2*s12^2*s14^2 - 3/4*denom(1/4*s12^2)*mt^2*
      s12^2*s13*s24 - 1/4*denom(1/4*s12^2)*mt^2*s12^2*s13*s23 - 1/4*denom(1/4*
      s12^2)*mt^2*s12^2*s13*s14 - 1/8*denom(1/4*s12^2)*mt^2*s12^2*s13^2 - 1/8*
      denom(1/4*s12^2)*mt^2*s12^3*s24 - 1/8*denom(1/4*s12^2)*mt^2*s12^3*s23 - 
      1/8*denom(1/4*s12^2)*mt^2*s12^3*s14 - 1/8*denom(1/4*s12^2)*mt^2*s12^3*
      s13 + 1/8*denom(1/4*s12^2)*mt^2*mh^2*s12^2*s24 + 1/8*denom(1/4*s12^2)*
      mt^2*mh^2*s12^2*s23 + 1/8*denom(1/4*s12^2)*mt^2*mh^2*s12^2*s14 + 1/8*
      denom(1/4*s12^2)*mt^2*mh^2*s12^2*s13 + 1/4*denom(1/4*s12^2)*mt^4*s12*
      s24^2 + 1/4*denom(1/4*s12^2)*mt^4*s12*s23^2 + denom(1/4*s12^2)*mt^4*s12*
      s14*s23 + 1/4*denom(1/4*s12^2)*mt^4*s12*s14^2 + denom(1/4*s12^2)*mt^4*
      s12*s13*s24 + 1/4*denom(1/4*s12^2)*mt^4*s12*s13^2 + 3/4*denom(1/4*s12^2)
      *mt^4*s12^2*s24 + 3/4*denom(1/4*s12^2)*mt^4*s12^2*s23 + 3/4*denom(1/4*
      s12^2)*mt^4*s12^2*s14 + 3/4*denom(1/4*s12^2)*mt^4*s12^2*s13 + 1/4*denom(
      1/4*s12^2)*mt^4*s12^3 - 1/4*denom(1/4*s12^2)*mt^4*mh^2*s12^2 - 1/2*
      denom(1/4*s12^2)*mt^6*s12*s24 - 1/2*denom(1/4*s12^2)*mt^6*s12*s23 - 1/2*
      denom(1/4*s12^2)*mt^6*s12*s14 - 1/2*denom(1/4*s12^2)*mt^6*s12*s13 - 
      denom(1/4*s12^2)*mt^6*s12^2 + 1/2*denom(1/4*s12^2)*mt^8*s12;
 
 .sort
id KMatrix(11,35) =   - s23*s24^2 - s23^2*s24 - s14*s23*s24 - s13*s23*s24 - 
      s12*s23*s24 + mh^2*s23*s24 + mt^2*s24^2 + 4*mt^2*s23*s24 + mt^2*s23^2 + 
      mt^2*s14*s24 + mt^2*s14*s23 + mt^2*s13*s24 + mt^2*s13*s23 + mt^2*s12*s24
       + mt^2*s12*s23 - mt^2*mh^2*s24 - mt^2*mh^2*s23 - 3*mt^4*s24 - 3*mt^4*
      s23 - mt^4*s14 - mt^4*s13 - mt^4*s12 + mt^4*mh^2 + 2*mt^6 - denom(1/2*
      s12)*s14*s23^2*s24 - denom(1/2*s12)*s13*s23*s24^2 + denom(1/2*s12)*mt^2*
      s23*s24^2 + denom(1/2*s12)*mt^2*s23^2*s24 + 2*denom(1/2*s12)*mt^2*s14*
      s23*s24 + denom(1/2*s12)*mt^2*s14*s23^2 + denom(1/2*s12)*mt^2*s13*s24^2
       + 2*denom(1/2*s12)*mt^2*s13*s23*s24 - denom(1/2*s12)*mt^4*s24^2 - 4*
      denom(1/2*s12)*mt^4*s23*s24 - denom(1/2*s12)*mt^4*s23^2 - denom(1/2*s12)
      *mt^4*s14*s24 - 2*denom(1/2*s12)*mt^4*s14*s23 - 2*denom(1/2*s12)*mt^4*
      s13*s24 - denom(1/2*s12)*mt^4*s13*s23 + 3*denom(1/2*s12)*mt^6*s24 + 3*
      denom(1/2*s12)*mt^6*s23 + denom(1/2*s12)*mt^6*s14 + denom(1/2*s12)*mt^6*
      s13 - 2*denom(1/2*s12)*mt^8 + 1/4*denom(1/4*s12^2)*s12*s14*s23^2*s24 + 1/
      4*denom(1/4*s12^2)*s12*s13*s23*s24^2 - 1/4*denom(1/4*s12^2)*mt^2*s12*s23
      *s24^2 - 1/4*denom(1/4*s12^2)*mt^2*s12*s23^2*s24 - 1/2*denom(1/4*s12^2)*
      mt^2*s12*s14*s23*s24 - 1/4*denom(1/4*s12^2)*mt^2*s12*s14*s23^2 - 1/4*
      denom(1/4*s12^2)*mt^2*s12*s13*s24^2 - 1/2*denom(1/4*s12^2)*mt^2*s12*s13*
      s23*s24 + 1/4*denom(1/4*s12^2)*mt^4*s12*s24^2 + denom(1/4*s12^2)*mt^4*
      s12*s23*s24 + 1/4*denom(1/4*s12^2)*mt^4*s12*s23^2 + 1/4*denom(1/4*s12^2)
      *mt^4*s12*s14*s24 + 1/2*denom(1/4*s12^2)*mt^4*s12*s14*s23 + 1/2*denom(1/
      4*s12^2)*mt^4*s12*s13*s24 + 1/4*denom(1/4*s12^2)*mt^4*s12*s13*s23 - 3/4*
      denom(1/4*s12^2)*mt^6*s12*s24 - 3/4*denom(1/4*s12^2)*mt^6*s12*s23 - 1/4*
      denom(1/4*s12^2)*mt^6*s12*s14 - 1/4*denom(1/4*s12^2)*mt^6*s12*s13 + 1/2*
      denom(1/4*s12^2)*mt^8*s12;
 
 .sort
id KMatrix(11,36) =  mt*s12*s23*s24 + mt*s12*s23^2 + mt*s12*s14*s23 + mt*s12*
      s13*s23 + mt*s12^2*s23 - mt*mh^2*s12*s23 - mt^3*s12*s24 - 3*mt^3*s12*s23
       - mt^3*s12*s14 - mt^3*s12*s13 - mt^3*s12^2 + mt^3*mh^2*s12 + 2*mt^5*s12
       + denom(1/2*s12)*mt*s12*s14*s23^2 + denom(1/2*s12)*mt*s12*s13*s23*s24
       - denom(1/2*s12)*mt^3*s12*s23*s24 - denom(1/2*s12)*mt^3*s12*s23^2 - 2*
      denom(1/2*s12)*mt^3*s12*s14*s23 - denom(1/2*s12)*mt^3*s12*s13*s24 - 
      denom(1/2*s12)*mt^3*s12*s13*s23 + denom(1/2*s12)*mt^5*s12*s24 + 3*denom(
      1/2*s12)*mt^5*s12*s23 + denom(1/2*s12)*mt^5*s12*s14 + denom(1/2*s12)*
      mt^5*s12*s13 - 2*denom(1/2*s12)*mt^7*s12 - 1/4*denom(1/4*s12^2)*mt*s12^2
      *s14*s23^2 - 1/4*denom(1/4*s12^2)*mt*s12^2*s13*s23*s24 + 1/4*denom(1/4*
      s12^2)*mt^3*s12^2*s23*s24 + 1/4*denom(1/4*s12^2)*mt^3*s12^2*s23^2 + 1/2*
      denom(1/4*s12^2)*mt^3*s12^2*s14*s23 + 1/4*denom(1/4*s12^2)*mt^3*s12^2*
      s13*s24 + 1/4*denom(1/4*s12^2)*mt^3*s12^2*s13*s23 - 1/4*denom(1/4*s12^2)
      *mt^5*s12^2*s24 - 3/4*denom(1/4*s12^2)*mt^5*s12^2*s23 - 1/4*denom(1/4*
      s12^2)*mt^5*s12^2*s14 - 1/4*denom(1/4*s12^2)*mt^5*s12^2*s13 + 1/2*denom(
      1/4*s12^2)*mt^7*s12^2;
 
 .sort
id KMatrix(12,1) =  1/2*mt*s24^3 + 1/2*mt*s23*s24^2 - 1/2*mt*s23^2*s24 - 1/2*
      mt*s23^3 + mt*s14*s24^2 - mt*s14*s23^2 + 1/2*mt*s14^2*s24 - 1/2*mt*s14^2
      *s23 + mt*s13*s24^2 - mt*s13*s23^2 + mt*s13*s14*s24 - mt*s13*s14*s23 + 1/
      2*mt*s13^2*s24 - 1/2*mt*s13^2*s23 + mt*s12*s24^2 - mt*s12*s23^2 + mt*s12
      *s14*s24 - mt*s12*s14*s23 + mt*s12*s13*s24 - mt*s12*s13*s23 + 1/2*mt*
      s12^2*s24 - 1/2*mt*s12^2*s23 - mt*mh^2*s24^2 + mt*mh^2*s23^2 - mt*mh^2*
      s14*s24 + mt*mh^2*s14*s23 - mt*mh^2*s13*s24 + mt*mh^2*s13*s23 - mt*mh^2*
      s12*s24 + mt*mh^2*s12*s23 + 1/2*mt*mh^4*s24 - 1/2*mt*mh^4*s23 - 2*mt^3*
      s24^2 + 2*mt^3*s23^2 - 2*mt^3*s14*s24 + 2*mt^3*s14*s23 - 2*mt^3*s13*s24
       + 2*mt^3*s13*s23 - 2*mt^3*s12*s24 + 2*mt^3*s12*s23 + 2*mt^3*mh^2*s24 - 
      2*mt^3*mh^2*s23 + 2*mt^5*s24 - 2*mt^5*s23 + 1/2*denom(1/2*s12)*mt*s14*
      s23*s24^2 - 1/2*denom(1/2*s12)*mt*s14*s23^3 + 1/2*denom(1/2*s12)*mt*
      s14^2*s23*s24 - 1/2*denom(1/2*s12)*mt*s14^2*s23^2 + 1/2*denom(1/2*s12)*
      mt*s13*s24^3 - 1/2*denom(1/2*s12)*mt*s13*s23^2*s24 + 1/2*denom(1/2*s12)*
      mt*s13*s14*s24^2 - 1/2*denom(1/2*s12)*mt*s13*s14*s23^2 + 1/2*denom(1/2*
      s12)*mt*s13^2*s24^2 - 1/2*denom(1/2*s12)*mt*s13^2*s23*s24 + 1/2*denom(1/
      2*s12)*mt*s12*s14*s23*s24 - 1/2*denom(1/2*s12)*mt*s12*s14*s23^2 + 1/2*
      denom(1/2*s12)*mt*s12*s13*s24^2 - 1/2*denom(1/2*s12)*mt*s12*s13*s23*s24
       - 1/2*denom(1/2*s12)*mt*mh^2*s14*s23*s24 + 1/2*denom(1/2*s12)*mt*mh^2*
      s14*s23^2 - 1/2*denom(1/2*s12)*mt*mh^2*s13*s24^2 + 1/2*denom(1/2*s12)*mt
      *mh^2*s13*s23*s24 - 1/2*denom(1/2*s12)*mt^3*s24^3 - 1/2*denom(1/2*s12)*
      mt^3*s23*s24^2 + 1/2*denom(1/2*s12)*mt^3*s23^2*s24 + 1/2*denom(1/2*s12)*
      mt^3*s23^3 - denom(1/2*s12)*mt^3*s14*s24^2 - denom(1/2*s12)*mt^3*s14*s23
      *s24 + 2*denom(1/2*s12)*mt^3*s14*s23^2 - 1/2*denom(1/2*s12)*mt^3*s14^2*
      s24 + 1/2*denom(1/2*s12)*mt^3*s14^2*s23 - 2*denom(1/2*s12)*mt^3*s13*
      s24^2 + denom(1/2*s12)*mt^3*s13*s23*s24 + denom(1/2*s12)*mt^3*s13*s23^2
       - denom(1/2*s12)*mt^3*s13*s14*s24 + denom(1/2*s12)*mt^3*s13*s14*s23 - 1/
      2*denom(1/2*s12)*mt^3*s13^2*s24 + 1/2*denom(1/2*s12)*mt^3*s13^2*s23 - 1/
      2*denom(1/2*s12)*mt^3*s12*s24^2 + 1/2*denom(1/2*s12)*mt^3*s12*s23^2 - 1/
      2*denom(1/2*s12)*mt^3*s12*s14*s24 + 1/2*denom(1/2*s12)*mt^3*s12*s14*s23
       - 1/2*denom(1/2*s12)*mt^3*s12*s13*s24 + 1/2*denom(1/2*s12)*mt^3*s12*s13
      *s23 + 1/2*denom(1/2*s12)*mt^3*mh^2*s24^2 - 1/2*denom(1/2*s12)*mt^3*mh^2
      *s23^2 + 1/2*denom(1/2*s12)*mt^3*mh^2*s14*s24 - 1/2*denom(1/2*s12)*mt^3*
      mh^2*s14*s23 + 1/2*denom(1/2*s12)*mt^3*mh^2*s13*s24 - 1/2*denom(1/2*s12)
      *mt^3*mh^2*s13*s23 + 2*denom(1/2*s12)*mt^5*s24^2 - 2*denom(1/2*s12)*mt^5
      *s23^2 + 2*denom(1/2*s12)*mt^5*s14*s24 - 2*denom(1/2*s12)*mt^5*s14*s23
       + 2*denom(1/2*s12)*mt^5*s13*s24 - 2*denom(1/2*s12)*mt^5*s13*s23 + 
      denom(1/2*s12)*mt^5*s12*s24 - denom(1/2*s12)*mt^5*s12*s23 - denom(1/2*
      s12)*mt^5*mh^2*s24 + denom(1/2*s12)*mt^5*mh^2*s23 - 2*denom(1/2*s12)*
      mt^7*s24 + 2*denom(1/2*s12)*mt^7*s23 + 1/8*denom(1/4*s12^2)*mt*s14^2*
      s23^2*s24 - 1/8*denom(1/4*s12^2)*mt*s14^2*s23^3 + 1/4*denom(1/4*s12^2)*
      mt*s13*s14*s23*s24^2 - 1/4*denom(1/4*s12^2)*mt*s13*s14*s23^2*s24 + 1/8*
      denom(1/4*s12^2)*mt*s13^2*s24^3 - 1/8*denom(1/4*s12^2)*mt*s13^2*s23*
      s24^2 - 1/4*denom(1/4*s12^2)*mt^3*s14*s23*s24^2 + 1/4*denom(1/4*s12^2)*
      mt^3*s14*s23^3 - 1/4*denom(1/4*s12^2)*mt^3*s14^2*s23*s24 + 1/4*denom(1/4
      *s12^2)*mt^3*s14^2*s23^2 - 1/4*denom(1/4*s12^2)*mt^3*s13*s24^3 + 1/4*
      denom(1/4*s12^2)*mt^3*s13*s23^2*s24 - 1/4*denom(1/4*s12^2)*mt^3*s13*s14*
      s24^2 + 1/4*denom(1/4*s12^2)*mt^3*s13*s14*s23^2 - 1/4*denom(1/4*s12^2)*
      mt^3*s13^2*s24^2 + 1/4*denom(1/4*s12^2)*mt^3*s13^2*s23*s24 + 1/8*denom(1/
      4*s12^2)*mt^5*s24^3 + 1/8*denom(1/4*s12^2)*mt^5*s23*s24^2 - 1/8*denom(1/
      4*s12^2)*mt^5*s23^2*s24 - 1/8*denom(1/4*s12^2)*mt^5*s23^3 + 1/4*denom(1/
      4*s12^2)*mt^5*s14*s24^2 + 1/2*denom(1/4*s12^2)*mt^5*s14*s23*s24 - 3/4*
      denom(1/4*s12^2)*mt^5*s14*s23^2 + 1/8*denom(1/4*s12^2)*mt^5*s14^2*s24 - 
      1/8*denom(1/4*s12^2)*mt^5*s14^2*s23 + 3/4*denom(1/4*s12^2)*mt^5*s13*
      s24^2 - 1/2*denom(1/4*s12^2)*mt^5*s13*s23*s24 - 1/4*denom(1/4*s12^2)*
      mt^5*s13*s23^2 + 1/4*denom(1/4*s12^2)*mt^5*s13*s14*s24 - 1/4*denom(1/4*
      s12^2)*mt^5*s13*s14*s23 + 1/8*denom(1/4*s12^2)*mt^5*s13^2*s24 - 1/8*
      denom(1/4*s12^2)*mt^5*s13^2*s23 - 1/2*denom(1/4*s12^2)*mt^7*s24^2 + 1/2*
      denom(1/4*s12^2)*mt^7*s23^2 - 1/2*denom(1/4*s12^2)*mt^7*s14*s24 + 1/2*
      denom(1/4*s12^2)*mt^7*s14*s23 - 1/2*denom(1/4*s12^2)*mt^7*s13*s24 + 1/2*
      denom(1/4*s12^2)*mt^7*s13*s23 + 1/2*denom(1/4*s12^2)*mt^9*s24 - 1/2*
      denom(1/4*s12^2)*mt^9*s23;
 
 .sort
id KMatrix(12,2) =   - mt^3*s24^2 + mt^3*s23^2 - mt^3*s14*s24 + mt^3*s14*s23
       - mt^3*s13*s24 + mt^3*s13*s23 - mt^3*s12*s24 + mt^3*s12*s23 + mt^3*mh^2
      *s24 - mt^3*mh^2*s23 + 2*mt^5*s24 - 2*mt^5*s23 + 1/2*denom(1/2*s12)*mt*
      s14*s24^3 - 1/2*denom(1/2*s12)*mt*s14*s23^2*s24 + 1/2*denom(1/2*s12)*mt*
      s14^2*s24^2 - 1/2*denom(1/2*s12)*mt*s14^2*s23*s24 + 1/2*denom(1/2*s12)*
      mt*s13*s14*s24^2 - 1/2*denom(1/2*s12)*mt*s13*s14*s23*s24 + 1/2*denom(1/2
      *s12)*mt*s12*s14*s24^2 - 1/2*denom(1/2*s12)*mt*s12*s14*s23*s24 - 1/2*
      denom(1/2*s12)*mt*mh^2*s14*s24^2 + 1/2*denom(1/2*s12)*mt*mh^2*s14*s23*
      s24 - 1/2*denom(1/2*s12)*mt^3*s24^3 + 1/2*denom(1/2*s12)*mt^3*s23^2*s24
       - 2*denom(1/2*s12)*mt^3*s14*s24^2 + denom(1/2*s12)*mt^3*s14*s23*s24 + 
      denom(1/2*s12)*mt^3*s14*s23^2 - 1/2*denom(1/2*s12)*mt^3*s14^2*s24 + 1/2*
      denom(1/2*s12)*mt^3*s14^2*s23 - denom(1/2*s12)*mt^3*s13*s24^2 + denom(1/
      2*s12)*mt^3*s13*s23*s24 - 1/2*denom(1/2*s12)*mt^3*s13*s14*s24 + 1/2*
      denom(1/2*s12)*mt^3*s13*s14*s23 - 1/2*denom(1/2*s12)*mt^3*s12*s24^2 + 1/
      2*denom(1/2*s12)*mt^3*s12*s23*s24 - 1/2*denom(1/2*s12)*mt^3*s12*s14*s24
       + 1/2*denom(1/2*s12)*mt^3*s12*s14*s23 + 1/2*denom(1/2*s12)*mt^3*mh^2*
      s24^2 - 1/2*denom(1/2*s12)*mt^3*mh^2*s23*s24 + 1/2*denom(1/2*s12)*mt^3*
      mh^2*s14*s24 - 1/2*denom(1/2*s12)*mt^3*mh^2*s14*s23 + 2*denom(1/2*s12)*
      mt^5*s24^2 - denom(1/2*s12)*mt^5*s23*s24 - denom(1/2*s12)*mt^5*s23^2 + 2
      *denom(1/2*s12)*mt^5*s14*s24 - 2*denom(1/2*s12)*mt^5*s14*s23 + denom(1/2
      *s12)*mt^5*s13*s24 - denom(1/2*s12)*mt^5*s13*s23 + 1/2*denom(1/2*s12)*
      mt^5*s12*s24 - 1/2*denom(1/2*s12)*mt^5*s12*s23 - 1/2*denom(1/2*s12)*mt^5
      *mh^2*s24 + 1/2*denom(1/2*s12)*mt^5*mh^2*s23 - 2*denom(1/2*s12)*mt^7*s24
       + 2*denom(1/2*s12)*mt^7*s23 + 1/4*denom(1/4*s12^2)*mt*s14^2*s23*s24^2
       - 1/4*denom(1/4*s12^2)*mt*s14^2*s23^2*s24 + 1/4*denom(1/4*s12^2)*mt*s13
      *s14*s24^3 - 1/4*denom(1/4*s12^2)*mt*s13*s14*s23*s24^2 - 1/4*denom(1/4*
      s12^2)*mt^3*s14*s24^3 - 1/4*denom(1/4*s12^2)*mt^3*s14*s23*s24^2 + 1/2*
      denom(1/4*s12^2)*mt^3*s14*s23^2*s24 - 1/4*denom(1/4*s12^2)*mt^3*s14^2*
      s24^2 + 1/4*denom(1/4*s12^2)*mt^3*s14^2*s23^2 - 1/4*denom(1/4*s12^2)*
      mt^3*s13*s24^3 + 1/4*denom(1/4*s12^2)*mt^3*s13*s23*s24^2 - 1/2*denom(1/4
      *s12^2)*mt^3*s13*s14*s24^2 + 1/2*denom(1/4*s12^2)*mt^3*s13*s14*s23*s24
       + 1/4*denom(1/4*s12^2)*mt^5*s24^3 - 1/4*denom(1/4*s12^2)*mt^5*s23^2*s24
       + denom(1/4*s12^2)*mt^5*s14*s24^2 - 1/2*denom(1/4*s12^2)*mt^5*s14*s23*
      s24 - 1/2*denom(1/4*s12^2)*mt^5*s14*s23^2 + 1/4*denom(1/4*s12^2)*mt^5*
      s14^2*s24 - 1/4*denom(1/4*s12^2)*mt^5*s14^2*s23 + 1/2*denom(1/4*s12^2)*
      mt^5*s13*s24^2 - 1/2*denom(1/4*s12^2)*mt^5*s13*s23*s24 + 1/4*denom(1/4*
      s12^2)*mt^5*s13*s14*s24 - 1/4*denom(1/4*s12^2)*mt^5*s13*s14*s23 - 3/4*
      denom(1/4*s12^2)*mt^7*s24^2 + 1/2*denom(1/4*s12^2)*mt^7*s23*s24 + 1/4*
      denom(1/4*s12^2)*mt^7*s23^2 - 3/4*denom(1/4*s12^2)*mt^7*s14*s24 + 3/4*
      denom(1/4*s12^2)*mt^7*s14*s23 - 1/4*denom(1/4*s12^2)*mt^7*s13*s24 + 1/4*
      denom(1/4*s12^2)*mt^7*s13*s23 + 1/2*denom(1/4*s12^2)*mt^9*s24 - 1/2*
      denom(1/4*s12^2)*mt^9*s23;
 
 .sort
id KMatrix(12,3) =   - mt^3*s24^2 + mt^3*s23^2 - mt^3*s14*s24 + mt^3*s14*s23
       - mt^3*s13*s24 + mt^3*s13*s23 - mt^3*s12*s24 + mt^3*s12*s23 + mt^3*mh^2
      *s24 - mt^3*mh^2*s23 + 2*mt^5*s24 - 2*mt^5*s23 + 1/2*denom(1/2*s12)*mt*
      s14*s24^3 - 1/2*denom(1/2*s12)*mt*s14*s23^2*s24 + 1/2*denom(1/2*s12)*mt*
      s14^2*s24^2 - 1/2*denom(1/2*s12)*mt*s14^2*s23*s24 + 1/2*denom(1/2*s12)*
      mt*s13*s14*s24^2 - 1/2*denom(1/2*s12)*mt*s13*s14*s23*s24 + 1/2*denom(1/2
      *s12)*mt*s12*s14*s24^2 - 1/2*denom(1/2*s12)*mt*s12*s14*s23*s24 - 1/2*
      denom(1/2*s12)*mt*mh^2*s14*s24^2 + 1/2*denom(1/2*s12)*mt*mh^2*s14*s23*
      s24 - 1/2*denom(1/2*s12)*mt^3*s24^3 + 1/2*denom(1/2*s12)*mt^3*s23^2*s24
       - 2*denom(1/2*s12)*mt^3*s14*s24^2 + denom(1/2*s12)*mt^3*s14*s23*s24 + 
      denom(1/2*s12)*mt^3*s14*s23^2 - 1/2*denom(1/2*s12)*mt^3*s14^2*s24 + 1/2*
      denom(1/2*s12)*mt^3*s14^2*s23 - denom(1/2*s12)*mt^3*s13*s24^2 + denom(1/
      2*s12)*mt^3*s13*s23*s24 - 1/2*denom(1/2*s12)*mt^3*s13*s14*s24 + 1/2*
      denom(1/2*s12)*mt^3*s13*s14*s23 - 1/2*denom(1/2*s12)*mt^3*s12*s24^2 + 1/
      2*denom(1/2*s12)*mt^3*s12*s23*s24 - 1/2*denom(1/2*s12)*mt^3*s12*s14*s24
       + 1/2*denom(1/2*s12)*mt^3*s12*s14*s23 + 1/2*denom(1/2*s12)*mt^3*mh^2*
      s24^2 - 1/2*denom(1/2*s12)*mt^3*mh^2*s23*s24 + 1/2*denom(1/2*s12)*mt^3*
      mh^2*s14*s24 - 1/2*denom(1/2*s12)*mt^3*mh^2*s14*s23 + 2*denom(1/2*s12)*
      mt^5*s24^2 - denom(1/2*s12)*mt^5*s23*s24 - denom(1/2*s12)*mt^5*s23^2 + 2
      *denom(1/2*s12)*mt^5*s14*s24 - 2*denom(1/2*s12)*mt^5*s14*s23 + denom(1/2
      *s12)*mt^5*s13*s24 - denom(1/2*s12)*mt^5*s13*s23 + 1/2*denom(1/2*s12)*
      mt^5*s12*s24 - 1/2*denom(1/2*s12)*mt^5*s12*s23 - 1/2*denom(1/2*s12)*mt^5
      *mh^2*s24 + 1/2*denom(1/2*s12)*mt^5*mh^2*s23 - 2*denom(1/2*s12)*mt^7*s24
       + 2*denom(1/2*s12)*mt^7*s23 + 1/4*denom(1/4*s12^2)*mt*s14^2*s23*s24^2
       - 1/4*denom(1/4*s12^2)*mt*s14^2*s23^2*s24 + 1/4*denom(1/4*s12^2)*mt*s13
      *s14*s24^3 - 1/4*denom(1/4*s12^2)*mt*s13*s14*s23*s24^2 - 1/4*denom(1/4*
      s12^2)*mt^3*s14*s24^3 - 1/4*denom(1/4*s12^2)*mt^3*s14*s23*s24^2 + 1/2*
      denom(1/4*s12^2)*mt^3*s14*s23^2*s24 - 1/4*denom(1/4*s12^2)*mt^3*s14^2*
      s24^2 + 1/4*denom(1/4*s12^2)*mt^3*s14^2*s23^2 - 1/4*denom(1/4*s12^2)*
      mt^3*s13*s24^3 + 1/4*denom(1/4*s12^2)*mt^3*s13*s23*s24^2 - 1/2*denom(1/4
      *s12^2)*mt^3*s13*s14*s24^2 + 1/2*denom(1/4*s12^2)*mt^3*s13*s14*s23*s24
       + 1/4*denom(1/4*s12^2)*mt^5*s24^3 - 1/4*denom(1/4*s12^2)*mt^5*s23^2*s24
       + denom(1/4*s12^2)*mt^5*s14*s24^2 - 1/2*denom(1/4*s12^2)*mt^5*s14*s23*
      s24 - 1/2*denom(1/4*s12^2)*mt^5*s14*s23^2 + 1/4*denom(1/4*s12^2)*mt^5*
      s14^2*s24 - 1/4*denom(1/4*s12^2)*mt^5*s14^2*s23 + 1/2*denom(1/4*s12^2)*
      mt^5*s13*s24^2 - 1/2*denom(1/4*s12^2)*mt^5*s13*s23*s24 + 1/4*denom(1/4*
      s12^2)*mt^5*s13*s14*s24 - 1/4*denom(1/4*s12^2)*mt^5*s13*s14*s23 - 3/4*
      denom(1/4*s12^2)*mt^7*s24^2 + 1/2*denom(1/4*s12^2)*mt^7*s23*s24 + 1/4*
      denom(1/4*s12^2)*mt^7*s23^2 - 3/4*denom(1/4*s12^2)*mt^7*s14*s24 + 3/4*
      denom(1/4*s12^2)*mt^7*s14*s23 - 1/4*denom(1/4*s12^2)*mt^7*s13*s24 + 1/4*
      denom(1/4*s12^2)*mt^7*s13*s23 + 1/2*denom(1/4*s12^2)*mt^9*s24 - 1/2*
      denom(1/4*s12^2)*mt^9*s23;
 
 .sort
id KMatrix(12,4) =  2*mt^5*s24 - 2*mt^5*s23 - 2*denom(1/2*s12)*mt^3*s14*s24^2
       + 2*denom(1/2*s12)*mt^3*s14*s23*s24 + 2*denom(1/2*s12)*mt^5*s24^2 - 2*
      denom(1/2*s12)*mt^5*s23*s24 + 2*denom(1/2*s12)*mt^5*s14*s24 - 2*denom(1/
      2*s12)*mt^5*s14*s23 - 2*denom(1/2*s12)*mt^7*s24 + 2*denom(1/2*s12)*mt^7*
      s23 + 1/2*denom(1/4*s12^2)*mt*s14^2*s24^3 - 1/2*denom(1/4*s12^2)*mt*
      s14^2*s23*s24^2 - denom(1/4*s12^2)*mt^3*s14*s24^3 + denom(1/4*s12^2)*
      mt^3*s14*s23*s24^2 - denom(1/4*s12^2)*mt^3*s14^2*s24^2 + denom(1/4*s12^2
      )*mt^3*s14^2*s23*s24 + 1/2*denom(1/4*s12^2)*mt^5*s24^3 - 1/2*denom(1/4*
      s12^2)*mt^5*s23*s24^2 + 2*denom(1/4*s12^2)*mt^5*s14*s24^2 - 2*denom(1/4*
      s12^2)*mt^5*s14*s23*s24 + 1/2*denom(1/4*s12^2)*mt^5*s14^2*s24 - 1/2*
      denom(1/4*s12^2)*mt^5*s14^2*s23 - denom(1/4*s12^2)*mt^7*s24^2 + denom(1/
      4*s12^2)*mt^7*s23*s24 - denom(1/4*s12^2)*mt^7*s14*s24 + denom(1/4*s12^2)
      *mt^7*s14*s23 + 1/2*denom(1/4*s12^2)*mt^9*s24 - 1/2*denom(1/4*s12^2)*
      mt^9*s23;
 
 .sort
id KMatrix(12,5) =  1/4*s14*s23*s24^2 + 1/2*s14*s23^2*s24 + 1/4*s14*s23^3 + 1/
      2*s14^2*s23*s24 + 1/2*s14^2*s23^2 + 1/4*s14^3*s23 + 1/4*s13*s24^3 + 1/2*
      s13*s23*s24^2 + 1/4*s13*s23^2*s24 + 1/2*s13*s14*s24^2 + s13*s14*s23*s24
       + 1/2*s13*s14*s23^2 + 1/4*s13*s14^2*s24 + 1/2*s13*s14^2*s23 + 1/2*s13^2
      *s24^2 + 1/2*s13^2*s23*s24 + 1/2*s13^2*s14*s24 + 1/4*s13^2*s14*s23 + 1/4
      *s13^3*s24 + 1/4*s12*s24^3 + 3/4*s12*s23*s24^2 + 3/4*s12*s23^2*s24 + 1/4
      *s12*s23^3 + 3/4*s12*s14*s24^2 + 2*s12*s14*s23*s24 + 5/4*s12*s14*s23^2
       + 3/4*s12*s14^2*s24 + 5/4*s12*s14^2*s23 + 1/4*s12*s14^3 + 5/4*s12*s13*
      s24^2 + 2*s12*s13*s23*s24 + 3/4*s12*s13*s23^2 + 2*s12*s13*s14*s24 + 2*
      s12*s13*s14*s23 + 3/4*s12*s13*s14^2 + 5/4*s12*s13^2*s24 + 3/4*s12*s13^2*
      s23 + 3/4*s12*s13^2*s14 + 1/4*s12*s13^3 + 3/4*s12^2*s24^2 + 3/2*s12^2*
      s23*s24 + 3/4*s12^2*s23^2 + 3/2*s12^2*s14*s24 + 7/4*s12^2*s14*s23 + 3/4*
      s12^2*s14^2 + 7/4*s12^2*s13*s24 + 3/2*s12^2*s13*s23 + 3/2*s12^2*s13*s14
       + 3/4*s12^2*s13^2 + 3/4*s12^3*s24 + 3/4*s12^3*s23 + 3/4*s12^3*s14 + 3/4
      *s12^3*s13 + 1/4*s12^4 - 1/2*mh^2*s14*s23*s24 - 1/2*mh^2*s14*s23^2 - 1/2
      *mh^2*s14^2*s23 - 1/2*mh^2*s13*s24^2 - 1/2*mh^2*s13*s23*s24 - 1/2*mh^2*
      s13*s14*s24 - 1/2*mh^2*s13*s14*s23 - 1/2*mh^2*s13^2*s24 - 3/4*mh^2*s12*
      s24^2 - 3/2*mh^2*s12*s23*s24 - 3/4*mh^2*s12*s23^2 - 3/2*mh^2*s12*s14*s24
       - 2*mh^2*s12*s14*s23 - 3/4*mh^2*s12*s14^2 - 2*mh^2*s12*s13*s24 - 3/2*
      mh^2*s12*s13*s23 - 3/2*mh^2*s12*s13*s14 - 3/4*mh^2*s12*s13^2 - 3/2*mh^2*
      s12^2*s24 - 3/2*mh^2*s12^2*s23 - 3/2*mh^2*s12^2*s14 - 3/2*mh^2*s12^2*s13
       - 3/4*mh^2*s12^3 + 1/4*mh^4*s14*s23 + 1/4*mh^4*s13*s24 + 3/4*mh^4*s12*
      s24 + 3/4*mh^4*s12*s23 + 3/4*mh^4*s12*s14 + 3/4*mh^4*s12*s13 + 3/4*mh^4*
      s12^2 - 1/4*mh^6*s12 - 1/4*mt^2*s24^3 - 3/4*mt^2*s23*s24^2 - 3/4*mt^2*
      s23^2*s24 - 1/4*mt^2*s23^3 - 3/4*mt^2*s14*s24^2 - 5/2*mt^2*s14*s23*s24
       - 7/4*mt^2*s14*s23^2 - 3/4*mt^2*s14^2*s24 - 7/4*mt^2*s14^2*s23 - 1/4*
      mt^2*s14^3 - 7/4*mt^2*s13*s24^2 - 5/2*mt^2*s13*s23*s24 - 3/4*mt^2*s13*
      s23^2 - 5/2*mt^2*s13*s14*s24 - 5/2*mt^2*s13*s14*s23 - 3/4*mt^2*s13*s14^2
       - 7/4*mt^2*s13^2*s24 - 3/4*mt^2*s13^2*s23 - 3/4*mt^2*s13^2*s14 - 1/4*
      mt^2*s13^3 - 5/2*mt^2*s12*s24^2 - 5*mt^2*s12*s23*s24 - 5/2*mt^2*s12*
      s23^2 - 5*mt^2*s12*s14*s24 - 6*mt^2*s12*s14*s23 - 5/2*mt^2*s12*s14^2 - 6
      *mt^2*s12*s13*s24 - 5*mt^2*s12*s13*s23 - 5*mt^2*s12*s13*s14 - 5/2*mt^2*
      s12*s13^2 - 17/4*mt^2*s12^2*s24 - 17/4*mt^2*s12^2*s23 - 17/4*mt^2*s12^2*
      s14 - 17/4*mt^2*s12^2*s13 - 2*mt^2*s12^3 + 1/2*mt^2*mh^2*s24^2 + mt^2*
      mh^2*s23*s24 + 1/2*mt^2*mh^2*s23^2 + mt^2*mh^2*s14*s24 + 2*mt^2*mh^2*s14
      *s23 + 1/2*mt^2*mh^2*s14^2 + 2*mt^2*mh^2*s13*s24 + mt^2*mh^2*s13*s23 + 
      mt^2*mh^2*s13*s14 + 1/2*mt^2*mh^2*s13^2 + 9/2*mt^2*mh^2*s12*s24 + 9/2*
      mt^2*mh^2*s12*s23 + 9/2*mt^2*mh^2*s12*s14 + 9/2*mt^2*mh^2*s12*s13 + 4*
      mt^2*mh^2*s12^2 - 1/4*mt^2*mh^4*s24 - 1/4*mt^2*mh^4*s23 - 1/4*mt^2*mh^4*
      s14 - 1/4*mt^2*mh^4*s13 - 2*mt^2*mh^4*s12 + 3/2*mt^4*s24^2 + 3*mt^4*s23*
      s24 + 3/2*mt^4*s23^2 + 3*mt^4*s14*s24 + 4*mt^4*s14*s23 + 3/2*mt^4*s14^2
       + 4*mt^4*s13*s24 + 3*mt^4*s13*s23 + 3*mt^4*s13*s14 + 3/2*mt^4*s13^2 + 7
      *mt^4*s12*s24 + 7*mt^4*s12*s23 + 7*mt^4*s12*s14 + 7*mt^4*s12*s13 + 11/2*
      mt^4*s12^2 - 2*mt^4*mh^2*s24 - 2*mt^4*mh^2*s23 - 2*mt^4*mh^2*s14 - 2*
      mt^4*mh^2*s13 - 6*mt^4*mh^2*s12 + 1/2*mt^4*mh^4 - 3*mt^6*s24 - 3*mt^6*
      s23 - 3*mt^6*s14 - 3*mt^6*s13 - 6*mt^6*s12 + 2*mt^6*mh^2 + 2*mt^8 + 1/4*
      denom(1/2*s12)*s14^2*s23^2*s24 + 1/4*denom(1/2*s12)*s14^2*s23^3 + 1/4*
      denom(1/2*s12)*s14^3*s23^2 + 1/2*denom(1/2*s12)*s13*s14*s23*s24^2 + 1/2*
      denom(1/2*s12)*s13*s14*s23^2*s24 + 1/2*denom(1/2*s12)*s13*s14^2*s23*s24
       + 1/4*denom(1/2*s12)*s13*s14^2*s23^2 + 1/4*denom(1/2*s12)*s13^2*s24^3
       + 1/4*denom(1/2*s12)*s13^2*s23*s24^2 + 1/4*denom(1/2*s12)*s13^2*s14*
      s24^2 + 1/2*denom(1/2*s12)*s13^2*s14*s23*s24 + 1/4*denom(1/2*s12)*s13^3*
      s24^2 + 1/4*denom(1/2*s12)*s12*s14*s23*s24^2 + 1/2*denom(1/2*s12)*s12*
      s14*s23^2*s24 + 1/4*denom(1/2*s12)*s12*s14*s23^3 + 1/2*denom(1/2*s12)*
      s12*s14^2*s23*s24 + 3/4*denom(1/2*s12)*s12*s14^2*s23^2 + 1/4*denom(1/2*
      s12)*s12*s14^3*s23 + 1/4*denom(1/2*s12)*s12*s13*s24^3 + 1/2*denom(1/2*
      s12)*s12*s13*s23*s24^2 + 1/4*denom(1/2*s12)*s12*s13*s23^2*s24 + 1/2*
      denom(1/2*s12)*s12*s13*s14*s24^2 + 3/2*denom(1/2*s12)*s12*s13*s14*s23*
      s24 + 1/2*denom(1/2*s12)*s12*s13*s14*s23^2 + 1/4*denom(1/2*s12)*s12*s13*
      s14^2*s24 + 1/2*denom(1/2*s12)*s12*s13*s14^2*s23 + 3/4*denom(1/2*s12)*
      s12*s13^2*s24^2 + 1/2*denom(1/2*s12)*s12*s13^2*s23*s24 + 1/2*denom(1/2*
      s12)*s12*s13^2*s14*s24 + 1/4*denom(1/2*s12)*s12*s13^2*s14*s23 + 1/4*
      denom(1/2*s12)*s12*s13^3*s24 + 1/2*denom(1/2*s12)*s12^2*s14*s23*s24 + 1/
      2*denom(1/2*s12)*s12^2*s14*s23^2 + 1/2*denom(1/2*s12)*s12^2*s14^2*s23 + 
      1/2*denom(1/2*s12)*s12^2*s13*s24^2 + 1/2*denom(1/2*s12)*s12^2*s13*s23*
      s24 + 1/2*denom(1/2*s12)*s12^2*s13*s14*s24 + 1/2*denom(1/2*s12)*s12^2*
      s13*s14*s23 + 1/2*denom(1/2*s12)*s12^2*s13^2*s24 + 1/4*denom(1/2*s12)*
      s12^3*s14*s23 + 1/4*denom(1/2*s12)*s12^3*s13*s24 - 1/4*denom(1/2*s12)*
      mh^2*s14^2*s23^2 - 1/2*denom(1/2*s12)*mh^2*s13*s14*s23*s24 - 1/4*denom(1/
      2*s12)*mh^2*s13^2*s24^2 - 1/2*denom(1/2*s12)*mh^2*s12*s14*s23*s24 - 1/2*
      denom(1/2*s12)*mh^2*s12*s14*s23^2 - 1/2*denom(1/2*s12)*mh^2*s12*s14^2*
      s23 - 1/2*denom(1/2*s12)*mh^2*s12*s13*s24^2 - 1/2*denom(1/2*s12)*mh^2*
      s12*s13*s23*s24 - 1/2*denom(1/2*s12)*mh^2*s12*s13*s14*s24 - 1/2*denom(1/
      2*s12)*mh^2*s12*s13*s14*s23 - 1/2*denom(1/2*s12)*mh^2*s12*s13^2*s24 - 1/
      2*denom(1/2*s12)*mh^2*s12^2*s14*s23 - 1/2*denom(1/2*s12)*mh^2*s12^2*s13*
      s24 + 1/4*denom(1/2*s12)*mh^4*s12*s14*s23 + 1/4*denom(1/2*s12)*mh^4*s12*
      s13*s24 - 1/2*denom(1/2*s12)*mt^2*s14*s23*s24^2 - denom(1/2*s12)*mt^2*
      s14*s23^2*s24 - 1/2*denom(1/2*s12)*mt^2*s14*s23^3 - denom(1/2*s12)*mt^2*
      s14^2*s23*s24 - 3/2*denom(1/2*s12)*mt^2*s14^2*s23^2 - 1/2*denom(1/2*s12)
      *mt^2*s14^3*s23 - 1/2*denom(1/2*s12)*mt^2*s13*s24^3 - denom(1/2*s12)*
      mt^2*s13*s23*s24^2 - 1/2*denom(1/2*s12)*mt^2*s13*s23^2*s24 - denom(1/2*
      s12)*mt^2*s13*s14*s24^2 - 3*denom(1/2*s12)*mt^2*s13*s14*s23*s24 - denom(
      1/2*s12)*mt^2*s13*s14*s23^2 - 1/2*denom(1/2*s12)*mt^2*s13*s14^2*s24 - 
      denom(1/2*s12)*mt^2*s13*s14^2*s23 - 3/2*denom(1/2*s12)*mt^2*s13^2*s24^2
       - denom(1/2*s12)*mt^2*s13^2*s23*s24 - denom(1/2*s12)*mt^2*s13^2*s14*s24
       - 1/2*denom(1/2*s12)*mt^2*s13^2*s14*s23 - 1/2*denom(1/2*s12)*mt^2*s13^3
      *s24 - 1/4*denom(1/2*s12)*mt^2*s12*s24^3 - 3/4*denom(1/2*s12)*mt^2*s12*
      s23*s24^2 - 3/4*denom(1/2*s12)*mt^2*s12*s23^2*s24 - 1/4*denom(1/2*s12)*
      mt^2*s12*s23^3 - 3/4*denom(1/2*s12)*mt^2*s12*s14*s24^2 - 7/2*denom(1/2*
      s12)*mt^2*s12*s14*s23*s24 - 11/4*denom(1/2*s12)*mt^2*s12*s14*s23^2 - 3/4
      *denom(1/2*s12)*mt^2*s12*s14^2*s24 - 11/4*denom(1/2*s12)*mt^2*s12*s14^2*
      s23 - 1/4*denom(1/2*s12)*mt^2*s12*s14^3 - 11/4*denom(1/2*s12)*mt^2*s12*
      s13*s24^2 - 7/2*denom(1/2*s12)*mt^2*s12*s13*s23*s24 - 3/4*denom(1/2*s12)
      *mt^2*s12*s13*s23^2 - 7/2*denom(1/2*s12)*mt^2*s12*s13*s14*s24 - 7/2*
      denom(1/2*s12)*mt^2*s12*s13*s14*s23 - 3/4*denom(1/2*s12)*mt^2*s12*s13*
      s14^2 - 11/4*denom(1/2*s12)*mt^2*s12*s13^2*s24 - 3/4*denom(1/2*s12)*mt^2
      *s12*s13^2*s23 - 3/4*denom(1/2*s12)*mt^2*s12*s13^2*s14 - 1/4*denom(1/2*
      s12)*mt^2*s12*s13^3 - 1/2*denom(1/2*s12)*mt^2*s12^2*s24^2 - denom(1/2*
      s12)*mt^2*s12^2*s23*s24 - 1/2*denom(1/2*s12)*mt^2*s12^2*s23^2 - denom(1/
      2*s12)*mt^2*s12^2*s14*s24 - 5/2*denom(1/2*s12)*mt^2*s12^2*s14*s23 - 1/2*
      denom(1/2*s12)*mt^2*s12^2*s14^2 - 5/2*denom(1/2*s12)*mt^2*s12^2*s13*s24
       - denom(1/2*s12)*mt^2*s12^2*s13*s23 - denom(1/2*s12)*mt^2*s12^2*s13*s14
       - 1/2*denom(1/2*s12)*mt^2*s12^2*s13^2 - 1/4*denom(1/2*s12)*mt^2*s12^3*
      s24 - 1/4*denom(1/2*s12)*mt^2*s12^3*s23 - 1/4*denom(1/2*s12)*mt^2*s12^3*
      s14 - 1/4*denom(1/2*s12)*mt^2*s12^3*s13 + 1/2*denom(1/2*s12)*mt^2*mh^2*
      s14*s23*s24 + 1/2*denom(1/2*s12)*mt^2*mh^2*s14*s23^2 + 1/2*denom(1/2*s12
      )*mt^2*mh^2*s14^2*s23 + 1/2*denom(1/2*s12)*mt^2*mh^2*s13*s24^2 + 1/2*
      denom(1/2*s12)*mt^2*mh^2*s13*s23*s24 + 1/2*denom(1/2*s12)*mt^2*mh^2*s13*
      s14*s24 + 1/2*denom(1/2*s12)*mt^2*mh^2*s13*s14*s23 + 1/2*denom(1/2*s12)*
      mt^2*mh^2*s13^2*s24 + 1/2*denom(1/2*s12)*mt^2*mh^2*s12*s24^2 + denom(1/2
      *s12)*mt^2*mh^2*s12*s23*s24 + 1/2*denom(1/2*s12)*mt^2*mh^2*s12*s23^2 + 
      denom(1/2*s12)*mt^2*mh^2*s12*s14*s24 + 5/2*denom(1/2*s12)*mt^2*mh^2*s12*
      s14*s23 + 1/2*denom(1/2*s12)*mt^2*mh^2*s12*s14^2 + 5/2*denom(1/2*s12)*
      mt^2*mh^2*s12*s13*s24 + denom(1/2*s12)*mt^2*mh^2*s12*s13*s23 + denom(1/2
      *s12)*mt^2*mh^2*s12*s13*s14 + 1/2*denom(1/2*s12)*mt^2*mh^2*s12*s13^2 + 1/
      2*denom(1/2*s12)*mt^2*mh^2*s12^2*s24 + 1/2*denom(1/2*s12)*mt^2*mh^2*
      s12^2*s23 + 1/2*denom(1/2*s12)*mt^2*mh^2*s12^2*s14 + 1/2*denom(1/2*s12)*
      mt^2*mh^2*s12^2*s13 - 1/4*denom(1/2*s12)*mt^2*mh^4*s12*s24 - 1/4*denom(1/
      2*s12)*mt^2*mh^4*s12*s23 - 1/4*denom(1/2*s12)*mt^2*mh^4*s12*s14 - 1/4*
      denom(1/2*s12)*mt^2*mh^4*s12*s13 + 1/4*denom(1/2*s12)*mt^4*s24^3 + 3/4*
      denom(1/2*s12)*mt^4*s23*s24^2 + 3/4*denom(1/2*s12)*mt^4*s23^2*s24 + 1/4*
      denom(1/2*s12)*mt^4*s23^3 + 3/4*denom(1/2*s12)*mt^4*s14*s24^2 + 7/2*
      denom(1/2*s12)*mt^4*s14*s23*s24 + 11/4*denom(1/2*s12)*mt^4*s14*s23^2 + 3/
      4*denom(1/2*s12)*mt^4*s14^2*s24 + 11/4*denom(1/2*s12)*mt^4*s14^2*s23 + 1/
      4*denom(1/2*s12)*mt^4*s14^3 + 11/4*denom(1/2*s12)*mt^4*s13*s24^2 + 7/2*
      denom(1/2*s12)*mt^4*s13*s23*s24 + 3/4*denom(1/2*s12)*mt^4*s13*s23^2 + 7/
      2*denom(1/2*s12)*mt^4*s13*s14*s24 + 7/2*denom(1/2*s12)*mt^4*s13*s14*s23
       + 3/4*denom(1/2*s12)*mt^4*s13*s14^2 + 11/4*denom(1/2*s12)*mt^4*s13^2*
      s24 + 3/4*denom(1/2*s12)*mt^4*s13^2*s23 + 3/4*denom(1/2*s12)*mt^4*s13^2*
      s14 + 1/4*denom(1/2*s12)*mt^4*s13^3 + 9/4*denom(1/2*s12)*mt^4*s12*s24^2
       + 9/2*denom(1/2*s12)*mt^4*s12*s23*s24 + 9/4*denom(1/2*s12)*mt^4*s12*
      s23^2 + 9/2*denom(1/2*s12)*mt^4*s12*s14*s24 + 15/2*denom(1/2*s12)*mt^4*
      s12*s14*s23 + 9/4*denom(1/2*s12)*mt^4*s12*s14^2 + 15/2*denom(1/2*s12)*
      mt^4*s12*s13*s24 + 9/2*denom(1/2*s12)*mt^4*s12*s13*s23 + 9/2*denom(1/2*
      s12)*mt^4*s12*s13*s14 + 9/4*denom(1/2*s12)*mt^4*s12*s13^2 + 5/2*denom(1/
      2*s12)*mt^4*s12^2*s24 + 5/2*denom(1/2*s12)*mt^4*s12^2*s23 + 5/2*denom(1/
      2*s12)*mt^4*s12^2*s14 + 5/2*denom(1/2*s12)*mt^4*s12^2*s13 + 1/2*denom(1/
      2*s12)*mt^4*s12^3 - 1/4*denom(1/2*s12)*mt^4*mh^2*s24^2 - 1/2*denom(1/2*
      s12)*mt^4*mh^2*s23*s24 - 1/4*denom(1/2*s12)*mt^4*mh^2*s23^2 - 1/2*denom(
      1/2*s12)*mt^4*mh^2*s14*s24 - 3/2*denom(1/2*s12)*mt^4*mh^2*s14*s23 - 1/4*
      denom(1/2*s12)*mt^4*mh^2*s14^2 - 3/2*denom(1/2*s12)*mt^4*mh^2*s13*s24 - 
      1/2*denom(1/2*s12)*mt^4*mh^2*s13*s23 - 1/2*denom(1/2*s12)*mt^4*mh^2*s13*
      s14 - 1/4*denom(1/2*s12)*mt^4*mh^2*s13^2 - 5/2*denom(1/2*s12)*mt^4*mh^2*
      s12*s24 - 5/2*denom(1/2*s12)*mt^4*mh^2*s12*s23 - 5/2*denom(1/2*s12)*mt^4
      *mh^2*s12*s14 - 5/2*denom(1/2*s12)*mt^4*mh^2*s12*s13 - denom(1/2*s12)*
      mt^4*mh^2*s12^2 + 1/2*denom(1/2*s12)*mt^4*mh^4*s12 - 3/2*denom(1/2*s12)*
      mt^6*s24^2 - 3*denom(1/2*s12)*mt^6*s23*s24 - 3/2*denom(1/2*s12)*mt^6*
      s23^2 - 3*denom(1/2*s12)*mt^6*s14*s24 - 5*denom(1/2*s12)*mt^6*s14*s23 - 
      3/2*denom(1/2*s12)*mt^6*s14^2 - 5*denom(1/2*s12)*mt^6*s13*s24 - 3*denom(
      1/2*s12)*mt^6*s13*s23 - 3*denom(1/2*s12)*mt^6*s13*s14 - 3/2*denom(1/2*
      s12)*mt^6*s13^2 - 6*denom(1/2*s12)*mt^6*s12*s24 - 6*denom(1/2*s12)*mt^6*
      s12*s23 - 6*denom(1/2*s12)*mt^6*s12*s14 - 6*denom(1/2*s12)*mt^6*s12*s13
       - 3*denom(1/2*s12)*mt^6*s12^2 + denom(1/2*s12)*mt^6*mh^2*s24 + denom(1/
      2*s12)*mt^6*mh^2*s23 + denom(1/2*s12)*mt^6*mh^2*s14 + denom(1/2*s12)*
      mt^6*mh^2*s13 + 3*denom(1/2*s12)*mt^6*mh^2*s12 + 3*denom(1/2*s12)*mt^8*
      s24 + 3*denom(1/2*s12)*mt^8*s23 + 3*denom(1/2*s12)*mt^8*s14 + 3*denom(1/
      2*s12)*mt^8*s13 + 5*denom(1/2*s12)*mt^8*s12 - denom(1/2*s12)*mt^8*mh^2
       - 2*denom(1/2*s12)*mt^10 + 1/16*denom(1/4*s12^2)*s14^3*s23^3 + 3/16*
      denom(1/4*s12^2)*s13*s14^2*s23^2*s24 + 3/16*denom(1/4*s12^2)*s13^2*s14*
      s23*s24^2 + 1/16*denom(1/4*s12^2)*s13^3*s24^3 + 1/16*denom(1/4*s12^2)*
      s12*s14^2*s23^2*s24 + 1/16*denom(1/4*s12^2)*s12*s14^2*s23^3 + 1/16*
      denom(1/4*s12^2)*s12*s14^3*s23^2 + 1/8*denom(1/4*s12^2)*s12*s13*s14*s23*
      s24^2 + 1/8*denom(1/4*s12^2)*s12*s13*s14*s23^2*s24 + 1/8*denom(1/4*s12^2
      )*s12*s13*s14^2*s23*s24 + 1/16*denom(1/4*s12^2)*s12*s13*s14^2*s23^2 + 1/
      16*denom(1/4*s12^2)*s12*s13^2*s24^3 + 1/16*denom(1/4*s12^2)*s12*s13^2*
      s23*s24^2 + 1/16*denom(1/4*s12^2)*s12*s13^2*s14*s24^2 + 1/8*denom(1/4*
      s12^2)*s12*s13^2*s14*s23*s24 + 1/16*denom(1/4*s12^2)*s12*s13^3*s24^2 + 1/
      16*denom(1/4*s12^2)*s12^2*s14^2*s23^2 + 1/8*denom(1/4*s12^2)*s12^2*s13*
      s14*s23*s24 + 1/16*denom(1/4*s12^2)*s12^2*s13^2*s24^2 - 1/16*denom(1/4*
      s12^2)*mh^2*s12*s14^2*s23^2 - 1/8*denom(1/4*s12^2)*mh^2*s12*s13*s14*s23*
      s24 - 1/16*denom(1/4*s12^2)*mh^2*s12*s13^2*s24^2 - 3/16*denom(1/4*s12^2)
      *mt^2*s14^2*s23^2*s24 - 3/16*denom(1/4*s12^2)*mt^2*s14^2*s23^3 - 3/16*
      denom(1/4*s12^2)*mt^2*s14^3*s23^2 - 3/8*denom(1/4*s12^2)*mt^2*s13*s14*
      s23*s24^2 - 3/8*denom(1/4*s12^2)*mt^2*s13*s14*s23^2*s24 - 3/8*denom(1/4*
      s12^2)*mt^2*s13*s14^2*s23*s24 - 3/16*denom(1/4*s12^2)*mt^2*s13*s14^2*
      s23^2 - 3/16*denom(1/4*s12^2)*mt^2*s13^2*s24^3 - 3/16*denom(1/4*s12^2)*
      mt^2*s13^2*s23*s24^2 - 3/16*denom(1/4*s12^2)*mt^2*s13^2*s14*s24^2 - 3/8*
      denom(1/4*s12^2)*mt^2*s13^2*s14*s23*s24 - 3/16*denom(1/4*s12^2)*mt^2*
      s13^3*s24^2 - 1/8*denom(1/4*s12^2)*mt^2*s12*s14*s23*s24^2 - 1/4*denom(1/
      4*s12^2)*mt^2*s12*s14*s23^2*s24 - 1/8*denom(1/4*s12^2)*mt^2*s12*s14*
      s23^3 - 1/4*denom(1/4*s12^2)*mt^2*s12*s14^2*s23*s24 - 1/2*denom(1/4*
      s12^2)*mt^2*s12*s14^2*s23^2 - 1/8*denom(1/4*s12^2)*mt^2*s12*s14^3*s23 - 
      1/8*denom(1/4*s12^2)*mt^2*s12*s13*s24^3 - 1/4*denom(1/4*s12^2)*mt^2*s12*
      s13*s23*s24^2 - 1/8*denom(1/4*s12^2)*mt^2*s12*s13*s23^2*s24 - 1/4*denom(
      1/4*s12^2)*mt^2*s12*s13*s14*s24^2 - denom(1/4*s12^2)*mt^2*s12*s13*s14*
      s23*s24 - 1/4*denom(1/4*s12^2)*mt^2*s12*s13*s14*s23^2 - 1/8*denom(1/4*
      s12^2)*mt^2*s12*s13*s14^2*s24 - 1/4*denom(1/4*s12^2)*mt^2*s12*s13*s14^2*
      s23 - 1/2*denom(1/4*s12^2)*mt^2*s12*s13^2*s24^2 - 1/4*denom(1/4*s12^2)*
      mt^2*s12*s13^2*s23*s24 - 1/4*denom(1/4*s12^2)*mt^2*s12*s13^2*s14*s24 - 1/
      8*denom(1/4*s12^2)*mt^2*s12*s13^2*s14*s23 - 1/8*denom(1/4*s12^2)*mt^2*
      s12*s13^3*s24 - 1/8*denom(1/4*s12^2)*mt^2*s12^2*s14*s23*s24 - 1/8*denom(
      1/4*s12^2)*mt^2*s12^2*s14*s23^2 - 1/8*denom(1/4*s12^2)*mt^2*s12^2*s14^2*
      s23 - 1/8*denom(1/4*s12^2)*mt^2*s12^2*s13*s24^2 - 1/8*denom(1/4*s12^2)*
      mt^2*s12^2*s13*s23*s24 - 1/8*denom(1/4*s12^2)*mt^2*s12^2*s13*s14*s24 - 1/
      8*denom(1/4*s12^2)*mt^2*s12^2*s13*s14*s23 - 1/8*denom(1/4*s12^2)*mt^2*
      s12^2*s13^2*s24 + 1/8*denom(1/4*s12^2)*mt^2*mh^2*s12*s14*s23*s24 + 1/8*
      denom(1/4*s12^2)*mt^2*mh^2*s12*s14*s23^2 + 1/8*denom(1/4*s12^2)*mt^2*
      mh^2*s12*s14^2*s23 + 1/8*denom(1/4*s12^2)*mt^2*mh^2*s12*s13*s24^2 + 1/8*
      denom(1/4*s12^2)*mt^2*mh^2*s12*s13*s23*s24 + 1/8*denom(1/4*s12^2)*mt^2*
      mh^2*s12*s13*s14*s24 + 1/8*denom(1/4*s12^2)*mt^2*mh^2*s12*s13*s14*s23 + 
      1/8*denom(1/4*s12^2)*mt^2*mh^2*s12*s13^2*s24 + 3/16*denom(1/4*s12^2)*
      mt^4*s14*s23*s24^2 + 3/8*denom(1/4*s12^2)*mt^4*s14*s23^2*s24 + 3/16*
      denom(1/4*s12^2)*mt^4*s14*s23^3 + 3/8*denom(1/4*s12^2)*mt^4*s14^2*s23*
      s24 + 3/4*denom(1/4*s12^2)*mt^4*s14^2*s23^2 + 3/16*denom(1/4*s12^2)*mt^4
      *s14^3*s23 + 3/16*denom(1/4*s12^2)*mt^4*s13*s24^3 + 3/8*denom(1/4*s12^2)
      *mt^4*s13*s23*s24^2 + 3/16*denom(1/4*s12^2)*mt^4*s13*s23^2*s24 + 3/8*
      denom(1/4*s12^2)*mt^4*s13*s14*s24^2 + 3/2*denom(1/4*s12^2)*mt^4*s13*s14*
      s23*s24 + 3/8*denom(1/4*s12^2)*mt^4*s13*s14*s23^2 + 3/16*denom(1/4*s12^2
      )*mt^4*s13*s14^2*s24 + 3/8*denom(1/4*s12^2)*mt^4*s13*s14^2*s23 + 3/4*
      denom(1/4*s12^2)*mt^4*s13^2*s24^2 + 3/8*denom(1/4*s12^2)*mt^4*s13^2*s23*
      s24 + 3/8*denom(1/4*s12^2)*mt^4*s13^2*s14*s24 + 3/16*denom(1/4*s12^2)*
      mt^4*s13^2*s14*s23 + 3/16*denom(1/4*s12^2)*mt^4*s13^3*s24 + 1/16*denom(1/
      4*s12^2)*mt^4*s12*s24^3 + 3/16*denom(1/4*s12^2)*mt^4*s12*s23*s24^2 + 3/
      16*denom(1/4*s12^2)*mt^4*s12*s23^2*s24 + 1/16*denom(1/4*s12^2)*mt^4*s12*
      s23^3 + 3/16*denom(1/4*s12^2)*mt^4*s12*s14*s24^2 + 9/8*denom(1/4*s12^2)*
      mt^4*s12*s14*s23*s24 + 15/16*denom(1/4*s12^2)*mt^4*s12*s14*s23^2 + 3/16*
      denom(1/4*s12^2)*mt^4*s12*s14^2*s24 + 15/16*denom(1/4*s12^2)*mt^4*s12*
      s14^2*s23 + 1/16*denom(1/4*s12^2)*mt^4*s12*s14^3 + 15/16*denom(1/4*s12^2
      )*mt^4*s12*s13*s24^2 + 9/8*denom(1/4*s12^2)*mt^4*s12*s13*s23*s24 + 3/16*
      denom(1/4*s12^2)*mt^4*s12*s13*s23^2 + 9/8*denom(1/4*s12^2)*mt^4*s12*s13*
      s14*s24 + 9/8*denom(1/4*s12^2)*mt^4*s12*s13*s14*s23 + 3/16*denom(1/4*
      s12^2)*mt^4*s12*s13*s14^2 + 15/16*denom(1/4*s12^2)*mt^4*s12*s13^2*s24 + 
      3/16*denom(1/4*s12^2)*mt^4*s12*s13^2*s23 + 3/16*denom(1/4*s12^2)*mt^4*
      s12*s13^2*s14 + 1/16*denom(1/4*s12^2)*mt^4*s12*s13^3 + 1/16*denom(1/4*
      s12^2)*mt^4*s12^2*s24^2 + 1/8*denom(1/4*s12^2)*mt^4*s12^2*s23*s24 + 1/16
      *denom(1/4*s12^2)*mt^4*s12^2*s23^2 + 1/8*denom(1/4*s12^2)*mt^4*s12^2*s14
      *s24 + 3/8*denom(1/4*s12^2)*mt^4*s12^2*s14*s23 + 1/16*denom(1/4*s12^2)*
      mt^4*s12^2*s14^2 + 3/8*denom(1/4*s12^2)*mt^4*s12^2*s13*s24 + 1/8*denom(1/
      4*s12^2)*mt^4*s12^2*s13*s23 + 1/8*denom(1/4*s12^2)*mt^4*s12^2*s13*s14 + 
      1/16*denom(1/4*s12^2)*mt^4*s12^2*s13^2 - 1/16*denom(1/4*s12^2)*mt^4*mh^2
      *s12*s24^2 - 1/8*denom(1/4*s12^2)*mt^4*mh^2*s12*s23*s24 - 1/16*denom(1/4
      *s12^2)*mt^4*mh^2*s12*s23^2 - 1/8*denom(1/4*s12^2)*mt^4*mh^2*s12*s14*s24
       - 3/8*denom(1/4*s12^2)*mt^4*mh^2*s12*s14*s23 - 1/16*denom(1/4*s12^2)*
      mt^4*mh^2*s12*s14^2 - 3/8*denom(1/4*s12^2)*mt^4*mh^2*s12*s13*s24 - 1/8*
      denom(1/4*s12^2)*mt^4*mh^2*s12*s13*s23 - 1/8*denom(1/4*s12^2)*mt^4*mh^2*
      s12*s13*s14 - 1/16*denom(1/4*s12^2)*mt^4*mh^2*s12*s13^2 - 1/16*denom(1/4
      *s12^2)*mt^6*s24^3 - 3/16*denom(1/4*s12^2)*mt^6*s23*s24^2 - 3/16*denom(1/
      4*s12^2)*mt^6*s23^2*s24 - 1/16*denom(1/4*s12^2)*mt^6*s23^3 - 3/16*denom(
      1/4*s12^2)*mt^6*s14*s24^2 - 9/8*denom(1/4*s12^2)*mt^6*s14*s23*s24 - 15/
      16*denom(1/4*s12^2)*mt^6*s14*s23^2 - 3/16*denom(1/4*s12^2)*mt^6*s14^2*
      s24 - 15/16*denom(1/4*s12^2)*mt^6*s14^2*s23 - 1/16*denom(1/4*s12^2)*mt^6
      *s14^3 - 15/16*denom(1/4*s12^2)*mt^6*s13*s24^2 - 9/8*denom(1/4*s12^2)*
      mt^6*s13*s23*s24 - 3/16*denom(1/4*s12^2)*mt^6*s13*s23^2 - 9/8*denom(1/4*
      s12^2)*mt^6*s13*s14*s24 - 9/8*denom(1/4*s12^2)*mt^6*s13*s14*s23 - 3/16*
      denom(1/4*s12^2)*mt^6*s13*s14^2 - 15/16*denom(1/4*s12^2)*mt^6*s13^2*s24
       - 3/16*denom(1/4*s12^2)*mt^6*s13^2*s23 - 3/16*denom(1/4*s12^2)*mt^6*
      s13^2*s14 - 1/16*denom(1/4*s12^2)*mt^6*s13^3 - 1/2*denom(1/4*s12^2)*mt^6
      *s12*s24^2 - denom(1/4*s12^2)*mt^6*s12*s23*s24 - 1/2*denom(1/4*s12^2)*
      mt^6*s12*s23^2 - denom(1/4*s12^2)*mt^6*s12*s14*s24 - 2*denom(1/4*s12^2)*
      mt^6*s12*s14*s23 - 1/2*denom(1/4*s12^2)*mt^6*s12*s14^2 - 2*denom(1/4*
      s12^2)*mt^6*s12*s13*s24 - denom(1/4*s12^2)*mt^6*s12*s13*s23 - denom(1/4*
      s12^2)*mt^6*s12*s13*s14 - 1/2*denom(1/4*s12^2)*mt^6*s12*s13^2 - 1/4*
      denom(1/4*s12^2)*mt^6*s12^2*s24 - 1/4*denom(1/4*s12^2)*mt^6*s12^2*s23 - 
      1/4*denom(1/4*s12^2)*mt^6*s12^2*s14 - 1/4*denom(1/4*s12^2)*mt^6*s12^2*
      s13 + 1/4*denom(1/4*s12^2)*mt^6*mh^2*s12*s24 + 1/4*denom(1/4*s12^2)*mt^6
      *mh^2*s12*s23 + 1/4*denom(1/4*s12^2)*mt^6*mh^2*s12*s14 + 1/4*denom(1/4*
      s12^2)*mt^6*mh^2*s12*s13 + 3/8*denom(1/4*s12^2)*mt^8*s24^2 + 3/4*denom(1/
      4*s12^2)*mt^8*s23*s24 + 3/8*denom(1/4*s12^2)*mt^8*s23^2 + 3/4*denom(1/4*
      s12^2)*mt^8*s14*s24 + 3/2*denom(1/4*s12^2)*mt^8*s14*s23 + 3/8*denom(1/4*
      s12^2)*mt^8*s14^2 + 3/2*denom(1/4*s12^2)*mt^8*s13*s24 + 3/4*denom(1/4*
      s12^2)*mt^8*s13*s23 + 3/4*denom(1/4*s12^2)*mt^8*s13*s14 + 3/8*denom(1/4*
      s12^2)*mt^8*s13^2 + 5/4*denom(1/4*s12^2)*mt^8*s12*s24 + 5/4*denom(1/4*
      s12^2)*mt^8*s12*s23 + 5/4*denom(1/4*s12^2)*mt^8*s12*s14 + 5/4*denom(1/4*
      s12^2)*mt^8*s12*s13 + 1/4*denom(1/4*s12^2)*mt^8*s12^2 - 1/4*denom(1/4*
      s12^2)*mt^8*mh^2*s12 - 3/4*denom(1/4*s12^2)*mt^10*s24 - 3/4*denom(1/4*
      s12^2)*mt^10*s23 - 3/4*denom(1/4*s12^2)*mt^10*s14 - 3/4*denom(1/4*s12^2)
      *mt^10*s13 - denom(1/4*s12^2)*mt^10*s12 + 1/2*denom(1/4*s12^2)*mt^12;
 
 .sort
id KMatrix(12,6) =   - 1/2*mt^2*s14*s23*s24 - 1/2*mt^2*s14*s23^2 - 1/2*mt^2*
      s14^2*s23 - 1/2*mt^2*s13*s24^2 - 1/2*mt^2*s13*s23*s24 - 1/2*mt^2*s13*s14
      *s24 - 1/2*mt^2*s13*s14*s23 - 1/2*mt^2*s13^2*s24 - 1/2*mt^2*s12*s24^2 - 
      mt^2*s12*s23*s24 - 1/2*mt^2*s12*s23^2 - mt^2*s12*s14*s24 - 3/2*mt^2*s12*
      s14*s23 - 1/2*mt^2*s12*s14^2 - 3/2*mt^2*s12*s13*s24 - mt^2*s12*s13*s23
       - mt^2*s12*s13*s14 - 1/2*mt^2*s12*s13^2 - mt^2*s12^2*s24 - mt^2*s12^2*
      s23 - mt^2*s12^2*s14 - mt^2*s12^2*s13 - 1/2*mt^2*s12^3 + 1/2*mt^2*mh^2*
      s14*s23 + 1/2*mt^2*mh^2*s13*s24 + mt^2*mh^2*s12*s24 + mt^2*mh^2*s12*s23
       + mt^2*mh^2*s12*s14 + mt^2*mh^2*s12*s13 + mt^2*mh^2*s12^2 - 1/2*mt^2*
      mh^4*s12 + 1/2*mt^4*s24^2 + mt^4*s23*s24 + 1/2*mt^4*s23^2 + mt^4*s14*s24
       + 2*mt^4*s14*s23 + 1/2*mt^4*s14^2 + 2*mt^4*s13*s24 + mt^4*s13*s23 + 
      mt^4*s13*s14 + 1/2*mt^4*s13^2 + 7/2*mt^4*s12*s24 + 7/2*mt^4*s12*s23 + 7/
      2*mt^4*s12*s14 + 7/2*mt^4*s12*s13 + 3*mt^4*s12^2 - 1/2*mt^4*mh^2*s24 - 1/
      2*mt^4*mh^2*s23 - 1/2*mt^4*mh^2*s14 - 1/2*mt^4*mh^2*s13 - 3*mt^4*mh^2*
      s12 - 2*mt^6*s24 - 2*mt^6*s23 - 2*mt^6*s14 - 2*mt^6*s13 - 5*mt^6*s12 + 
      mt^6*mh^2 + 2*mt^8 + 1/4*denom(1/2*s12)*s14^2*s23*s24^2 + 1/4*denom(1/2*
      s12)*s14^2*s23^2*s24 + 1/4*denom(1/2*s12)*s14^3*s23*s24 + 1/4*denom(1/2*
      s12)*s13*s14*s24^3 + 1/4*denom(1/2*s12)*s13*s14*s23*s24^2 + 1/4*denom(1/
      2*s12)*s13*s14^2*s24^2 + 1/4*denom(1/2*s12)*s13*s14^2*s23*s24 + 1/4*
      denom(1/2*s12)*s13^2*s14*s24^2 + 1/4*denom(1/2*s12)*s12*s14*s24^3 + 1/2*
      denom(1/2*s12)*s12*s14*s23*s24^2 + 1/4*denom(1/2*s12)*s12*s14*s23^2*s24
       + 1/2*denom(1/2*s12)*s12*s14^2*s24^2 + 3/4*denom(1/2*s12)*s12*s14^2*s23
      *s24 + 1/4*denom(1/2*s12)*s12*s14^3*s24 + 3/4*denom(1/2*s12)*s12*s13*s14
      *s24^2 + 1/2*denom(1/2*s12)*s12*s13*s14*s23*s24 + 1/2*denom(1/2*s12)*s12
      *s13*s14^2*s24 + 1/4*denom(1/2*s12)*s12*s13^2*s14*s24 + 1/2*denom(1/2*
      s12)*s12^2*s14*s24^2 + 1/2*denom(1/2*s12)*s12^2*s14*s23*s24 + 1/2*denom(
      1/2*s12)*s12^2*s14^2*s24 + 1/2*denom(1/2*s12)*s12^2*s13*s14*s24 + 1/4*
      denom(1/2*s12)*s12^3*s14*s24 - 1/4*denom(1/2*s12)*mh^2*s14^2*s23*s24 - 1/
      4*denom(1/2*s12)*mh^2*s13*s14*s24^2 - 1/2*denom(1/2*s12)*mh^2*s12*s14*
      s24^2 - 1/2*denom(1/2*s12)*mh^2*s12*s14*s23*s24 - 1/2*denom(1/2*s12)*
      mh^2*s12*s14^2*s24 - 1/2*denom(1/2*s12)*mh^2*s12*s13*s14*s24 - 1/2*
      denom(1/2*s12)*mh^2*s12^2*s14*s24 + 1/4*denom(1/2*s12)*mh^4*s12*s14*s24
       - 1/4*denom(1/2*s12)*mt^2*s14*s24^3 - 3/4*denom(1/2*s12)*mt^2*s14*s23*
      s24^2 - 1/2*denom(1/2*s12)*mt^2*s14*s23^2*s24 - 1/2*denom(1/2*s12)*mt^2*
      s14^2*s24^2 - 3/2*denom(1/2*s12)*mt^2*s14^2*s23*s24 - 1/2*denom(1/2*s12)
      *mt^2*s14^2*s23^2 - 1/4*denom(1/2*s12)*mt^2*s14^3*s24 - 1/4*denom(1/2*
      s12)*mt^2*s14^3*s23 - 1/4*denom(1/2*s12)*mt^2*s13*s24^3 - 1/4*denom(1/2*
      s12)*mt^2*s13*s23*s24^2 - 3/2*denom(1/2*s12)*mt^2*s13*s14*s24^2 - 3/2*
      denom(1/2*s12)*mt^2*s13*s14*s23*s24 - 3/4*denom(1/2*s12)*mt^2*s13*s14^2*
      s24 - 1/4*denom(1/2*s12)*mt^2*s13*s14^2*s23 - 1/2*denom(1/2*s12)*mt^2*
      s13^2*s24^2 - 1/2*denom(1/2*s12)*mt^2*s13^2*s14*s24 - 1/4*denom(1/2*s12)
      *mt^2*s12*s24^3 - 1/2*denom(1/2*s12)*mt^2*s12*s23*s24^2 - 1/4*denom(1/2*
      s12)*mt^2*s12*s23^2*s24 - 5/2*denom(1/2*s12)*mt^2*s12*s14*s24^2 - 13/4*
      denom(1/2*s12)*mt^2*s12*s14*s23*s24 - 1/2*denom(1/2*s12)*mt^2*s12*s14*
      s23^2 - 5/2*denom(1/2*s12)*mt^2*s12*s14^2*s24 - denom(1/2*s12)*mt^2*s12*
      s14^2*s23 - 1/4*denom(1/2*s12)*mt^2*s12*s14^3 - denom(1/2*s12)*mt^2*s12*
      s13*s24^2 - 3/4*denom(1/2*s12)*mt^2*s12*s13*s23*s24 - 13/4*denom(1/2*s12
      )*mt^2*s12*s13*s14*s24 - 3/4*denom(1/2*s12)*mt^2*s12*s13*s14*s23 - 1/2*
      denom(1/2*s12)*mt^2*s12*s13*s14^2 - 1/2*denom(1/2*s12)*mt^2*s12*s13^2*
      s24 - 1/4*denom(1/2*s12)*mt^2*s12*s13^2*s14 - 1/2*denom(1/2*s12)*mt^2*
      s12^2*s24^2 - 1/2*denom(1/2*s12)*mt^2*s12^2*s23*s24 - 5/2*denom(1/2*s12)
      *mt^2*s12^2*s14*s24 - 3/4*denom(1/2*s12)*mt^2*s12^2*s14*s23 - 1/2*denom(
      1/2*s12)*mt^2*s12^2*s14^2 - 3/4*denom(1/2*s12)*mt^2*s12^2*s13*s24 - 1/2*
      denom(1/2*s12)*mt^2*s12^2*s13*s14 - 1/4*denom(1/2*s12)*mt^2*s12^3*s24 - 
      1/4*denom(1/2*s12)*mt^2*s12^3*s14 + 1/4*denom(1/2*s12)*mt^2*mh^2*s14*
      s24^2 + 1/2*denom(1/2*s12)*mt^2*mh^2*s14*s23*s24 + 1/4*denom(1/2*s12)*
      mt^2*mh^2*s14^2*s24 + 1/4*denom(1/2*s12)*mt^2*mh^2*s14^2*s23 + 1/4*
      denom(1/2*s12)*mt^2*mh^2*s13*s24^2 + 1/2*denom(1/2*s12)*mt^2*mh^2*s13*
      s14*s24 + 1/2*denom(1/2*s12)*mt^2*mh^2*s12*s24^2 + 1/2*denom(1/2*s12)*
      mt^2*mh^2*s12*s23*s24 + 5/2*denom(1/2*s12)*mt^2*mh^2*s12*s14*s24 + 3/4*
      denom(1/2*s12)*mt^2*mh^2*s12*s14*s23 + 1/2*denom(1/2*s12)*mt^2*mh^2*s12*
      s14^2 + 3/4*denom(1/2*s12)*mt^2*mh^2*s12*s13*s24 + 1/2*denom(1/2*s12)*
      mt^2*mh^2*s12*s13*s14 + 1/2*denom(1/2*s12)*mt^2*mh^2*s12^2*s24 + 1/2*
      denom(1/2*s12)*mt^2*mh^2*s12^2*s14 - 1/4*denom(1/2*s12)*mt^2*mh^4*s12*
      s24 - 1/4*denom(1/2*s12)*mt^2*mh^4*s12*s14 + 1/4*denom(1/2*s12)*mt^4*
      s24^3 + 1/2*denom(1/2*s12)*mt^4*s23*s24^2 + 1/4*denom(1/2*s12)*mt^4*
      s23^2*s24 + 7/4*denom(1/2*s12)*mt^4*s14*s24^2 + 13/4*denom(1/2*s12)*mt^4
      *s14*s23*s24 + denom(1/2*s12)*mt^4*s14*s23^2 + 7/4*denom(1/2*s12)*mt^4*
      s14^2*s24 + 7/4*denom(1/2*s12)*mt^4*s14^2*s23 + 1/4*denom(1/2*s12)*mt^4*
      s14^3 + 7/4*denom(1/2*s12)*mt^4*s13*s24^2 + 5/4*denom(1/2*s12)*mt^4*s13*
      s23*s24 + 13/4*denom(1/2*s12)*mt^4*s13*s14*s24 + 5/4*denom(1/2*s12)*mt^4
      *s13*s14*s23 + 1/2*denom(1/2*s12)*mt^4*s13*s14^2 + denom(1/2*s12)*mt^4*
      s13^2*s24 + 1/4*denom(1/2*s12)*mt^4*s13^2*s14 + 9/4*denom(1/2*s12)*mt^4*
      s12*s24^2 + 11/4*denom(1/2*s12)*mt^4*s12*s23*s24 + 1/2*denom(1/2*s12)*
      mt^4*s12*s23^2 + 7*denom(1/2*s12)*mt^4*s12*s14*s24 + 4*denom(1/2*s12)*
      mt^4*s12*s14*s23 + 9/4*denom(1/2*s12)*mt^4*s12*s14^2 + 4*denom(1/2*s12)*
      mt^4*s12*s13*s24 + denom(1/2*s12)*mt^4*s12*s13*s23 + 11/4*denom(1/2*s12)
      *mt^4*s12*s13*s14 + 1/2*denom(1/2*s12)*mt^4*s12*s13^2 + 9/4*denom(1/2*
      s12)*mt^4*s12^2*s24 + 3/4*denom(1/2*s12)*mt^4*s12^2*s23 + 9/4*denom(1/2*
      s12)*mt^4*s12^2*s14 + 3/4*denom(1/2*s12)*mt^4*s12^2*s13 + 1/4*denom(1/2*
      s12)*mt^4*s12^3 - 1/4*denom(1/2*s12)*mt^4*mh^2*s24^2 - 1/4*denom(1/2*s12
      )*mt^4*mh^2*s23*s24 - denom(1/2*s12)*mt^4*mh^2*s14*s24 - 1/2*denom(1/2*
      s12)*mt^4*mh^2*s14*s23 - 1/4*denom(1/2*s12)*mt^4*mh^2*s14^2 - 1/2*denom(
      1/2*s12)*mt^4*mh^2*s13*s24 - 1/4*denom(1/2*s12)*mt^4*mh^2*s13*s14 - 9/4*
      denom(1/2*s12)*mt^4*mh^2*s12*s24 - 3/4*denom(1/2*s12)*mt^4*mh^2*s12*s23
       - 9/4*denom(1/2*s12)*mt^4*mh^2*s12*s14 - 3/4*denom(1/2*s12)*mt^4*mh^2*
      s12*s13 - 1/2*denom(1/2*s12)*mt^4*mh^2*s12^2 + 1/4*denom(1/2*s12)*mt^4*
      mh^4*s12 - 3/2*denom(1/2*s12)*mt^6*s24^2 - 2*denom(1/2*s12)*mt^6*s23*s24
       - 1/2*denom(1/2*s12)*mt^6*s23^2 - 4*denom(1/2*s12)*mt^6*s14*s24 - 7/2*
      denom(1/2*s12)*mt^6*s14*s23 - 3/2*denom(1/2*s12)*mt^6*s14^2 - 7/2*denom(
      1/2*s12)*mt^6*s13*s24 - denom(1/2*s12)*mt^6*s13*s23 - 2*denom(1/2*s12)*
      mt^6*s13*s14 - 1/2*denom(1/2*s12)*mt^6*s13^2 - 23/4*denom(1/2*s12)*mt^6*
      s12*s24 - 13/4*denom(1/2*s12)*mt^6*s12*s23 - 23/4*denom(1/2*s12)*mt^6*
      s12*s14 - 13/4*denom(1/2*s12)*mt^6*s12*s13 - 2*denom(1/2*s12)*mt^6*s12^2
       + 3/4*denom(1/2*s12)*mt^6*mh^2*s24 + 1/4*denom(1/2*s12)*mt^6*mh^2*s23
       + 3/4*denom(1/2*s12)*mt^6*mh^2*s14 + 1/4*denom(1/2*s12)*mt^6*mh^2*s13
       + 2*denom(1/2*s12)*mt^6*mh^2*s12 + 3*denom(1/2*s12)*mt^8*s24 + 2*denom(
      1/2*s12)*mt^8*s23 + 3*denom(1/2*s12)*mt^8*s14 + 2*denom(1/2*s12)*mt^8*
      s13 + 9/2*denom(1/2*s12)*mt^8*s12 - 1/2*denom(1/2*s12)*mt^8*mh^2 - 2*
      denom(1/2*s12)*mt^10 + 1/8*denom(1/4*s12^2)*s14^3*s23^2*s24 + 1/4*denom(
      1/4*s12^2)*s13*s14^2*s23*s24^2 + 1/8*denom(1/4*s12^2)*s13^2*s14*s24^3 + 
      1/8*denom(1/4*s12^2)*s12*s14^2*s23*s24^2 + 1/8*denom(1/4*s12^2)*s12*
      s14^2*s23^2*s24 + 1/8*denom(1/4*s12^2)*s12*s14^3*s23*s24 + 1/8*denom(1/4
      *s12^2)*s12*s13*s14*s24^3 + 1/8*denom(1/4*s12^2)*s12*s13*s14*s23*s24^2
       + 1/8*denom(1/4*s12^2)*s12*s13*s14^2*s24^2 + 1/8*denom(1/4*s12^2)*s12*
      s13*s14^2*s23*s24 + 1/8*denom(1/4*s12^2)*s12*s13^2*s14*s24^2 + 1/8*
      denom(1/4*s12^2)*s12^2*s14^2*s23*s24 + 1/8*denom(1/4*s12^2)*s12^2*s13*
      s14*s24^2 - 1/8*denom(1/4*s12^2)*mh^2*s12*s14^2*s23*s24 - 1/8*denom(1/4*
      s12^2)*mh^2*s12*s13*s14*s24^2 - 1/4*denom(1/4*s12^2)*mt^2*s14^2*s23*
      s24^2 - 3/8*denom(1/4*s12^2)*mt^2*s14^2*s23^2*s24 - 1/4*denom(1/4*s12^2)
      *mt^2*s14^3*s23*s24 - 1/8*denom(1/4*s12^2)*mt^2*s14^3*s23^2 - 1/4*denom(
      1/4*s12^2)*mt^2*s13*s14*s24^3 - 1/2*denom(1/4*s12^2)*mt^2*s13*s14*s23*
      s24^2 - 1/4*denom(1/4*s12^2)*mt^2*s13*s14^2*s24^2 - 1/2*denom(1/4*s12^2)
      *mt^2*s13*s14^2*s23*s24 - 1/8*denom(1/4*s12^2)*mt^2*s13^2*s24^3 - 3/8*
      denom(1/4*s12^2)*mt^2*s13^2*s14*s24^2 - 1/8*denom(1/4*s12^2)*mt^2*s12*
      s14*s24^3 - 3/8*denom(1/4*s12^2)*mt^2*s12*s14*s23*s24^2 - 1/4*denom(1/4*
      s12^2)*mt^2*s12*s14*s23^2*s24 - 1/4*denom(1/4*s12^2)*mt^2*s12*s14^2*
      s24^2 - denom(1/4*s12^2)*mt^2*s12*s14^2*s23*s24 - 1/8*denom(1/4*s12^2)*
      mt^2*s12*s14^2*s23^2 - 1/8*denom(1/4*s12^2)*mt^2*s12*s14^3*s24 - 1/8*
      denom(1/4*s12^2)*mt^2*s12*s14^3*s23 - 1/8*denom(1/4*s12^2)*mt^2*s12*s13*
      s24^3 - 1/8*denom(1/4*s12^2)*mt^2*s12*s13*s23*s24^2 - denom(1/4*s12^2)*
      mt^2*s12*s13*s14*s24^2 - 1/2*denom(1/4*s12^2)*mt^2*s12*s13*s14*s23*s24
       - 3/8*denom(1/4*s12^2)*mt^2*s12*s13*s14^2*s24 - 1/8*denom(1/4*s12^2)*
      mt^2*s12*s13*s14^2*s23 - 1/8*denom(1/4*s12^2)*mt^2*s12*s13^2*s24^2 - 1/4
      *denom(1/4*s12^2)*mt^2*s12*s13^2*s14*s24 - 1/8*denom(1/4*s12^2)*mt^2*
      s12^2*s14*s24^2 - 1/4*denom(1/4*s12^2)*mt^2*s12^2*s14*s23*s24 - 1/8*
      denom(1/4*s12^2)*mt^2*s12^2*s14^2*s24 - 1/8*denom(1/4*s12^2)*mt^2*s12^2*
      s14^2*s23 - 1/8*denom(1/4*s12^2)*mt^2*s12^2*s13*s24^2 - 1/4*denom(1/4*
      s12^2)*mt^2*s12^2*s13*s14*s24 + 1/8*denom(1/4*s12^2)*mt^2*mh^2*s12*s14*
      s24^2 + 1/4*denom(1/4*s12^2)*mt^2*mh^2*s12*s14*s23*s24 + 1/8*denom(1/4*
      s12^2)*mt^2*mh^2*s12*s14^2*s24 + 1/8*denom(1/4*s12^2)*mt^2*mh^2*s12*
      s14^2*s23 + 1/8*denom(1/4*s12^2)*mt^2*mh^2*s12*s13*s24^2 + 1/4*denom(1/4
      *s12^2)*mt^2*mh^2*s12*s13*s14*s24 + 1/8*denom(1/4*s12^2)*mt^4*s14*s24^3
       + 1/2*denom(1/4*s12^2)*mt^4*s14*s23*s24^2 + 3/8*denom(1/4*s12^2)*mt^4*
      s14*s23^2*s24 + 1/4*denom(1/4*s12^2)*mt^4*s14^2*s24^2 + 5/4*denom(1/4*
      s12^2)*mt^4*s14^2*s23*s24 + 3/8*denom(1/4*s12^2)*mt^4*s14^2*s23^2 + 1/8*
      denom(1/4*s12^2)*mt^4*s14^3*s24 + 1/4*denom(1/4*s12^2)*mt^4*s14^3*s23 + 
      1/4*denom(1/4*s12^2)*mt^4*s13*s24^3 + 1/4*denom(1/4*s12^2)*mt^4*s13*s23*
      s24^2 + 5/4*denom(1/4*s12^2)*mt^4*s13*s14*s24^2 + denom(1/4*s12^2)*mt^4*
      s13*s14*s23*s24 + 1/2*denom(1/4*s12^2)*mt^4*s13*s14^2*s24 + 1/4*denom(1/
      4*s12^2)*mt^4*s13*s14^2*s23 + 3/8*denom(1/4*s12^2)*mt^4*s13^2*s24^2 + 3/
      8*denom(1/4*s12^2)*mt^4*s13^2*s14*s24 + 1/8*denom(1/4*s12^2)*mt^4*s12*
      s24^3 + 1/4*denom(1/4*s12^2)*mt^4*s12*s23*s24^2 + 1/8*denom(1/4*s12^2)*
      mt^4*s12*s23^2*s24 + 9/8*denom(1/4*s12^2)*mt^4*s12*s14*s24^2 + 15/8*
      denom(1/4*s12^2)*mt^4*s12*s14*s23*s24 + 1/4*denom(1/4*s12^2)*mt^4*s12*
      s14*s23^2 + 9/8*denom(1/4*s12^2)*mt^4*s12*s14^2*s24 + 7/8*denom(1/4*
      s12^2)*mt^4*s12*s14^2*s23 + 1/8*denom(1/4*s12^2)*mt^4*s12*s14^3 + 7/8*
      denom(1/4*s12^2)*mt^4*s12*s13*s24^2 + 3/8*denom(1/4*s12^2)*mt^4*s12*s13*
      s23*s24 + 15/8*denom(1/4*s12^2)*mt^4*s12*s13*s14*s24 + 3/8*denom(1/4*
      s12^2)*mt^4*s12*s13*s14*s23 + 1/4*denom(1/4*s12^2)*mt^4*s12*s13*s14^2 + 
      1/4*denom(1/4*s12^2)*mt^4*s12*s13^2*s24 + 1/8*denom(1/4*s12^2)*mt^4*s12*
      s13^2*s14 + 1/8*denom(1/4*s12^2)*mt^4*s12^2*s24^2 + 1/8*denom(1/4*s12^2)
      *mt^4*s12^2*s23*s24 + 1/2*denom(1/4*s12^2)*mt^4*s12^2*s14*s24 + 1/4*
      denom(1/4*s12^2)*mt^4*s12^2*s14*s23 + 1/8*denom(1/4*s12^2)*mt^4*s12^2*
      s14^2 + 1/4*denom(1/4*s12^2)*mt^4*s12^2*s13*s24 + 1/8*denom(1/4*s12^2)*
      mt^4*s12^2*s13*s14 - 1/8*denom(1/4*s12^2)*mt^4*mh^2*s12*s24^2 - 1/8*
      denom(1/4*s12^2)*mt^4*mh^2*s12*s23*s24 - 1/2*denom(1/4*s12^2)*mt^4*mh^2*
      s12*s14*s24 - 1/4*denom(1/4*s12^2)*mt^4*mh^2*s12*s14*s23 - 1/8*denom(1/4
      *s12^2)*mt^4*mh^2*s12*s14^2 - 1/4*denom(1/4*s12^2)*mt^4*mh^2*s12*s13*s24
       - 1/8*denom(1/4*s12^2)*mt^4*mh^2*s12*s13*s14 - 1/8*denom(1/4*s12^2)*
      mt^6*s24^3 - 1/4*denom(1/4*s12^2)*mt^6*s23*s24^2 - 1/8*denom(1/4*s12^2)*
      mt^6*s23^2*s24 - 7/8*denom(1/4*s12^2)*mt^6*s14*s24^2 - 7/4*denom(1/4*
      s12^2)*mt^6*s14*s23*s24 - 3/8*denom(1/4*s12^2)*mt^6*s14*s23^2 - 7/8*
      denom(1/4*s12^2)*mt^6*s14^2*s24 - denom(1/4*s12^2)*mt^6*s14^2*s23 - 1/8*
      denom(1/4*s12^2)*mt^6*s14^3 - denom(1/4*s12^2)*mt^6*s13*s24^2 - 1/2*
      denom(1/4*s12^2)*mt^6*s13*s23*s24 - 7/4*denom(1/4*s12^2)*mt^6*s13*s14*
      s24 - 1/2*denom(1/4*s12^2)*mt^6*s13*s14*s23 - 1/4*denom(1/4*s12^2)*mt^6*
      s13*s14^2 - 3/8*denom(1/4*s12^2)*mt^6*s13^2*s24 - 1/8*denom(1/4*s12^2)*
      mt^6*s13^2*s14 - 7/8*denom(1/4*s12^2)*mt^6*s12*s24^2 - denom(1/4*s12^2)*
      mt^6*s12*s23*s24 - 1/8*denom(1/4*s12^2)*mt^6*s12*s23^2 - 11/4*denom(1/4*
      s12^2)*mt^6*s12*s14*s24 - 3/2*denom(1/4*s12^2)*mt^6*s12*s14*s23 - 7/8*
      denom(1/4*s12^2)*mt^6*s12*s14^2 - 3/2*denom(1/4*s12^2)*mt^6*s12*s13*s24
       - 1/4*denom(1/4*s12^2)*mt^6*s12*s13*s23 - denom(1/4*s12^2)*mt^6*s12*s13
      *s14 - 1/8*denom(1/4*s12^2)*mt^6*s12*s13^2 - 3/8*denom(1/4*s12^2)*mt^6*
      s12^2*s24 - 1/8*denom(1/4*s12^2)*mt^6*s12^2*s23 - 3/8*denom(1/4*s12^2)*
      mt^6*s12^2*s14 - 1/8*denom(1/4*s12^2)*mt^6*s12^2*s13 + 3/8*denom(1/4*
      s12^2)*mt^6*mh^2*s12*s24 + 1/8*denom(1/4*s12^2)*mt^6*mh^2*s12*s23 + 3/8*
      denom(1/4*s12^2)*mt^6*mh^2*s12*s14 + 1/8*denom(1/4*s12^2)*mt^6*mh^2*s12*
      s13 + 5/8*denom(1/4*s12^2)*mt^8*s24^2 + 3/4*denom(1/4*s12^2)*mt^8*s23*
      s24 + 1/8*denom(1/4*s12^2)*mt^8*s23^2 + 7/4*denom(1/4*s12^2)*mt^8*s14*
      s24 + 5/4*denom(1/4*s12^2)*mt^8*s14*s23 + 5/8*denom(1/4*s12^2)*mt^8*
      s14^2 + 5/4*denom(1/4*s12^2)*mt^8*s13*s24 + 1/4*denom(1/4*s12^2)*mt^8*
      s13*s23 + 3/4*denom(1/4*s12^2)*mt^8*s13*s14 + 1/8*denom(1/4*s12^2)*mt^8*
      s13^2 + 7/4*denom(1/4*s12^2)*mt^8*s12*s24 + 3/4*denom(1/4*s12^2)*mt^8*
      s12*s23 + 7/4*denom(1/4*s12^2)*mt^8*s12*s14 + 3/4*denom(1/4*s12^2)*mt^8*
      s12*s13 + 1/4*denom(1/4*s12^2)*mt^8*s12^2 - 1/4*denom(1/4*s12^2)*mt^8*
      mh^2*s12 - denom(1/4*s12^2)*mt^10*s24 - 1/2*denom(1/4*s12^2)*mt^10*s23
       - denom(1/4*s12^2)*mt^10*s14 - 1/2*denom(1/4*s12^2)*mt^10*s13 - denom(1/
      4*s12^2)*mt^10*s12 + 1/2*denom(1/4*s12^2)*mt^12;
 
 .sort
id KMatrix(12,7) =   - 1/2*mt^2*s14*s23*s24 - 1/2*mt^2*s14*s23^2 - 1/2*mt^2*
      s14^2*s23 - 1/2*mt^2*s13*s24^2 - 1/2*mt^2*s13*s23*s24 - 1/2*mt^2*s13*s14
      *s24 - 1/2*mt^2*s13*s14*s23 - 1/2*mt^2*s13^2*s24 - 1/2*mt^2*s12*s24^2 - 
      mt^2*s12*s23*s24 - 1/2*mt^2*s12*s23^2 - mt^2*s12*s14*s24 - 3/2*mt^2*s12*
      s14*s23 - 1/2*mt^2*s12*s14^2 - 3/2*mt^2*s12*s13*s24 - mt^2*s12*s13*s23
       - mt^2*s12*s13*s14 - 1/2*mt^2*s12*s13^2 - mt^2*s12^2*s24 - mt^2*s12^2*
      s23 - mt^2*s12^2*s14 - mt^2*s12^2*s13 - 1/2*mt^2*s12^3 + 1/2*mt^2*mh^2*
      s14*s23 + 1/2*mt^2*mh^2*s13*s24 + mt^2*mh^2*s12*s24 + mt^2*mh^2*s12*s23
       + mt^2*mh^2*s12*s14 + mt^2*mh^2*s12*s13 + mt^2*mh^2*s12^2 - 1/2*mt^2*
      mh^4*s12 + 1/2*mt^4*s24^2 + mt^4*s23*s24 + 1/2*mt^4*s23^2 + mt^4*s14*s24
       + 2*mt^4*s14*s23 + 1/2*mt^4*s14^2 + 2*mt^4*s13*s24 + mt^4*s13*s23 + 
      mt^4*s13*s14 + 1/2*mt^4*s13^2 + 7/2*mt^4*s12*s24 + 7/2*mt^4*s12*s23 + 7/
      2*mt^4*s12*s14 + 7/2*mt^4*s12*s13 + 3*mt^4*s12^2 - 1/2*mt^4*mh^2*s24 - 1/
      2*mt^4*mh^2*s23 - 1/2*mt^4*mh^2*s14 - 1/2*mt^4*mh^2*s13 - 3*mt^4*mh^2*
      s12 - 2*mt^6*s24 - 2*mt^6*s23 - 2*mt^6*s14 - 2*mt^6*s13 - 5*mt^6*s12 + 
      mt^6*mh^2 + 2*mt^8 + 1/4*denom(1/2*s12)*s14^2*s23*s24^2 + 1/4*denom(1/2*
      s12)*s14^2*s23^2*s24 + 1/4*denom(1/2*s12)*s14^3*s23*s24 + 1/4*denom(1/2*
      s12)*s13*s14*s24^3 + 1/4*denom(1/2*s12)*s13*s14*s23*s24^2 + 1/4*denom(1/
      2*s12)*s13*s14^2*s24^2 + 1/4*denom(1/2*s12)*s13*s14^2*s23*s24 + 1/4*
      denom(1/2*s12)*s13^2*s14*s24^2 + 1/4*denom(1/2*s12)*s12*s14*s24^3 + 1/2*
      denom(1/2*s12)*s12*s14*s23*s24^2 + 1/4*denom(1/2*s12)*s12*s14*s23^2*s24
       + 1/2*denom(1/2*s12)*s12*s14^2*s24^2 + 3/4*denom(1/2*s12)*s12*s14^2*s23
      *s24 + 1/4*denom(1/2*s12)*s12*s14^3*s24 + 3/4*denom(1/2*s12)*s12*s13*s14
      *s24^2 + 1/2*denom(1/2*s12)*s12*s13*s14*s23*s24 + 1/2*denom(1/2*s12)*s12
      *s13*s14^2*s24 + 1/4*denom(1/2*s12)*s12*s13^2*s14*s24 + 1/2*denom(1/2*
      s12)*s12^2*s14*s24^2 + 1/2*denom(1/2*s12)*s12^2*s14*s23*s24 + 1/2*denom(
      1/2*s12)*s12^2*s14^2*s24 + 1/2*denom(1/2*s12)*s12^2*s13*s14*s24 + 1/4*
      denom(1/2*s12)*s12^3*s14*s24 - 1/4*denom(1/2*s12)*mh^2*s14^2*s23*s24 - 1/
      4*denom(1/2*s12)*mh^2*s13*s14*s24^2 - 1/2*denom(1/2*s12)*mh^2*s12*s14*
      s24^2 - 1/2*denom(1/2*s12)*mh^2*s12*s14*s23*s24 - 1/2*denom(1/2*s12)*
      mh^2*s12*s14^2*s24 - 1/2*denom(1/2*s12)*mh^2*s12*s13*s14*s24 - 1/2*
      denom(1/2*s12)*mh^2*s12^2*s14*s24 + 1/4*denom(1/2*s12)*mh^4*s12*s14*s24
       - 1/4*denom(1/2*s12)*mt^2*s14*s24^3 - 3/4*denom(1/2*s12)*mt^2*s14*s23*
      s24^2 - 1/2*denom(1/2*s12)*mt^2*s14*s23^2*s24 - 1/2*denom(1/2*s12)*mt^2*
      s14^2*s24^2 - 3/2*denom(1/2*s12)*mt^2*s14^2*s23*s24 - 1/2*denom(1/2*s12)
      *mt^2*s14^2*s23^2 - 1/4*denom(1/2*s12)*mt^2*s14^3*s24 - 1/4*denom(1/2*
      s12)*mt^2*s14^3*s23 - 1/4*denom(1/2*s12)*mt^2*s13*s24^3 - 1/4*denom(1/2*
      s12)*mt^2*s13*s23*s24^2 - 3/2*denom(1/2*s12)*mt^2*s13*s14*s24^2 - 3/2*
      denom(1/2*s12)*mt^2*s13*s14*s23*s24 - 3/4*denom(1/2*s12)*mt^2*s13*s14^2*
      s24 - 1/4*denom(1/2*s12)*mt^2*s13*s14^2*s23 - 1/2*denom(1/2*s12)*mt^2*
      s13^2*s24^2 - 1/2*denom(1/2*s12)*mt^2*s13^2*s14*s24 - 1/4*denom(1/2*s12)
      *mt^2*s12*s24^3 - 1/2*denom(1/2*s12)*mt^2*s12*s23*s24^2 - 1/4*denom(1/2*
      s12)*mt^2*s12*s23^2*s24 - 5/2*denom(1/2*s12)*mt^2*s12*s14*s24^2 - 13/4*
      denom(1/2*s12)*mt^2*s12*s14*s23*s24 - 1/2*denom(1/2*s12)*mt^2*s12*s14*
      s23^2 - 5/2*denom(1/2*s12)*mt^2*s12*s14^2*s24 - denom(1/2*s12)*mt^2*s12*
      s14^2*s23 - 1/4*denom(1/2*s12)*mt^2*s12*s14^3 - denom(1/2*s12)*mt^2*s12*
      s13*s24^2 - 3/4*denom(1/2*s12)*mt^2*s12*s13*s23*s24 - 13/4*denom(1/2*s12
      )*mt^2*s12*s13*s14*s24 - 3/4*denom(1/2*s12)*mt^2*s12*s13*s14*s23 - 1/2*
      denom(1/2*s12)*mt^2*s12*s13*s14^2 - 1/2*denom(1/2*s12)*mt^2*s12*s13^2*
      s24 - 1/4*denom(1/2*s12)*mt^2*s12*s13^2*s14 - 1/2*denom(1/2*s12)*mt^2*
      s12^2*s24^2 - 1/2*denom(1/2*s12)*mt^2*s12^2*s23*s24 - 5/2*denom(1/2*s12)
      *mt^2*s12^2*s14*s24 - 3/4*denom(1/2*s12)*mt^2*s12^2*s14*s23 - 1/2*denom(
      1/2*s12)*mt^2*s12^2*s14^2 - 3/4*denom(1/2*s12)*mt^2*s12^2*s13*s24 - 1/2*
      denom(1/2*s12)*mt^2*s12^2*s13*s14 - 1/4*denom(1/2*s12)*mt^2*s12^3*s24 - 
      1/4*denom(1/2*s12)*mt^2*s12^3*s14 + 1/4*denom(1/2*s12)*mt^2*mh^2*s14*
      s24^2 + 1/2*denom(1/2*s12)*mt^2*mh^2*s14*s23*s24 + 1/4*denom(1/2*s12)*
      mt^2*mh^2*s14^2*s24 + 1/4*denom(1/2*s12)*mt^2*mh^2*s14^2*s23 + 1/4*
      denom(1/2*s12)*mt^2*mh^2*s13*s24^2 + 1/2*denom(1/2*s12)*mt^2*mh^2*s13*
      s14*s24 + 1/2*denom(1/2*s12)*mt^2*mh^2*s12*s24^2 + 1/2*denom(1/2*s12)*
      mt^2*mh^2*s12*s23*s24 + 5/2*denom(1/2*s12)*mt^2*mh^2*s12*s14*s24 + 3/4*
      denom(1/2*s12)*mt^2*mh^2*s12*s14*s23 + 1/2*denom(1/2*s12)*mt^2*mh^2*s12*
      s14^2 + 3/4*denom(1/2*s12)*mt^2*mh^2*s12*s13*s24 + 1/2*denom(1/2*s12)*
      mt^2*mh^2*s12*s13*s14 + 1/2*denom(1/2*s12)*mt^2*mh^2*s12^2*s24 + 1/2*
      denom(1/2*s12)*mt^2*mh^2*s12^2*s14 - 1/4*denom(1/2*s12)*mt^2*mh^4*s12*
      s24 - 1/4*denom(1/2*s12)*mt^2*mh^4*s12*s14 + 1/4*denom(1/2*s12)*mt^4*
      s24^3 + 1/2*denom(1/2*s12)*mt^4*s23*s24^2 + 1/4*denom(1/2*s12)*mt^4*
      s23^2*s24 + 7/4*denom(1/2*s12)*mt^4*s14*s24^2 + 13/4*denom(1/2*s12)*mt^4
      *s14*s23*s24 + denom(1/2*s12)*mt^4*s14*s23^2 + 7/4*denom(1/2*s12)*mt^4*
      s14^2*s24 + 7/4*denom(1/2*s12)*mt^4*s14^2*s23 + 1/4*denom(1/2*s12)*mt^4*
      s14^3 + 7/4*denom(1/2*s12)*mt^4*s13*s24^2 + 5/4*denom(1/2*s12)*mt^4*s13*
      s23*s24 + 13/4*denom(1/2*s12)*mt^4*s13*s14*s24 + 5/4*denom(1/2*s12)*mt^4
      *s13*s14*s23 + 1/2*denom(1/2*s12)*mt^4*s13*s14^2 + denom(1/2*s12)*mt^4*
      s13^2*s24 + 1/4*denom(1/2*s12)*mt^4*s13^2*s14 + 9/4*denom(1/2*s12)*mt^4*
      s12*s24^2 + 11/4*denom(1/2*s12)*mt^4*s12*s23*s24 + 1/2*denom(1/2*s12)*
      mt^4*s12*s23^2 + 7*denom(1/2*s12)*mt^4*s12*s14*s24 + 4*denom(1/2*s12)*
      mt^4*s12*s14*s23 + 9/4*denom(1/2*s12)*mt^4*s12*s14^2 + 4*denom(1/2*s12)*
      mt^4*s12*s13*s24 + denom(1/2*s12)*mt^4*s12*s13*s23 + 11/4*denom(1/2*s12)
      *mt^4*s12*s13*s14 + 1/2*denom(1/2*s12)*mt^4*s12*s13^2 + 9/4*denom(1/2*
      s12)*mt^4*s12^2*s24 + 3/4*denom(1/2*s12)*mt^4*s12^2*s23 + 9/4*denom(1/2*
      s12)*mt^4*s12^2*s14 + 3/4*denom(1/2*s12)*mt^4*s12^2*s13 + 1/4*denom(1/2*
      s12)*mt^4*s12^3 - 1/4*denom(1/2*s12)*mt^4*mh^2*s24^2 - 1/4*denom(1/2*s12
      )*mt^4*mh^2*s23*s24 - denom(1/2*s12)*mt^4*mh^2*s14*s24 - 1/2*denom(1/2*
      s12)*mt^4*mh^2*s14*s23 - 1/4*denom(1/2*s12)*mt^4*mh^2*s14^2 - 1/2*denom(
      1/2*s12)*mt^4*mh^2*s13*s24 - 1/4*denom(1/2*s12)*mt^4*mh^2*s13*s14 - 9/4*
      denom(1/2*s12)*mt^4*mh^2*s12*s24 - 3/4*denom(1/2*s12)*mt^4*mh^2*s12*s23
       - 9/4*denom(1/2*s12)*mt^4*mh^2*s12*s14 - 3/4*denom(1/2*s12)*mt^4*mh^2*
      s12*s13 - 1/2*denom(1/2*s12)*mt^4*mh^2*s12^2 + 1/4*denom(1/2*s12)*mt^4*
      mh^4*s12 - 3/2*denom(1/2*s12)*mt^6*s24^2 - 2*denom(1/2*s12)*mt^6*s23*s24
       - 1/2*denom(1/2*s12)*mt^6*s23^2 - 4*denom(1/2*s12)*mt^6*s14*s24 - 7/2*
      denom(1/2*s12)*mt^6*s14*s23 - 3/2*denom(1/2*s12)*mt^6*s14^2 - 7/2*denom(
      1/2*s12)*mt^6*s13*s24 - denom(1/2*s12)*mt^6*s13*s23 - 2*denom(1/2*s12)*
      mt^6*s13*s14 - 1/2*denom(1/2*s12)*mt^6*s13^2 - 23/4*denom(1/2*s12)*mt^6*
      s12*s24 - 13/4*denom(1/2*s12)*mt^6*s12*s23 - 23/4*denom(1/2*s12)*mt^6*
      s12*s14 - 13/4*denom(1/2*s12)*mt^6*s12*s13 - 2*denom(1/2*s12)*mt^6*s12^2
       + 3/4*denom(1/2*s12)*mt^6*mh^2*s24 + 1/4*denom(1/2*s12)*mt^6*mh^2*s23
       + 3/4*denom(1/2*s12)*mt^6*mh^2*s14 + 1/4*denom(1/2*s12)*mt^6*mh^2*s13
       + 2*denom(1/2*s12)*mt^6*mh^2*s12 + 3*denom(1/2*s12)*mt^8*s24 + 2*denom(
      1/2*s12)*mt^8*s23 + 3*denom(1/2*s12)*mt^8*s14 + 2*denom(1/2*s12)*mt^8*
      s13 + 9/2*denom(1/2*s12)*mt^8*s12 - 1/2*denom(1/2*s12)*mt^8*mh^2 - 2*
      denom(1/2*s12)*mt^10 + 1/8*denom(1/4*s12^2)*s14^3*s23^2*s24 + 1/4*denom(
      1/4*s12^2)*s13*s14^2*s23*s24^2 + 1/8*denom(1/4*s12^2)*s13^2*s14*s24^3 + 
      1/8*denom(1/4*s12^2)*s12*s14^2*s23*s24^2 + 1/8*denom(1/4*s12^2)*s12*
      s14^2*s23^2*s24 + 1/8*denom(1/4*s12^2)*s12*s14^3*s23*s24 + 1/8*denom(1/4
      *s12^2)*s12*s13*s14*s24^3 + 1/8*denom(1/4*s12^2)*s12*s13*s14*s23*s24^2
       + 1/8*denom(1/4*s12^2)*s12*s13*s14^2*s24^2 + 1/8*denom(1/4*s12^2)*s12*
      s13*s14^2*s23*s24 + 1/8*denom(1/4*s12^2)*s12*s13^2*s14*s24^2 + 1/8*
      denom(1/4*s12^2)*s12^2*s14^2*s23*s24 + 1/8*denom(1/4*s12^2)*s12^2*s13*
      s14*s24^2 - 1/8*denom(1/4*s12^2)*mh^2*s12*s14^2*s23*s24 - 1/8*denom(1/4*
      s12^2)*mh^2*s12*s13*s14*s24^2 - 1/4*denom(1/4*s12^2)*mt^2*s14^2*s23*
      s24^2 - 3/8*denom(1/4*s12^2)*mt^2*s14^2*s23^2*s24 - 1/4*denom(1/4*s12^2)
      *mt^2*s14^3*s23*s24 - 1/8*denom(1/4*s12^2)*mt^2*s14^3*s23^2 - 1/4*denom(
      1/4*s12^2)*mt^2*s13*s14*s24^3 - 1/2*denom(1/4*s12^2)*mt^2*s13*s14*s23*
      s24^2 - 1/4*denom(1/4*s12^2)*mt^2*s13*s14^2*s24^2 - 1/2*denom(1/4*s12^2)
      *mt^2*s13*s14^2*s23*s24 - 1/8*denom(1/4*s12^2)*mt^2*s13^2*s24^3 - 3/8*
      denom(1/4*s12^2)*mt^2*s13^2*s14*s24^2 - 1/8*denom(1/4*s12^2)*mt^2*s12*
      s14*s24^3 - 3/8*denom(1/4*s12^2)*mt^2*s12*s14*s23*s24^2 - 1/4*denom(1/4*
      s12^2)*mt^2*s12*s14*s23^2*s24 - 1/4*denom(1/4*s12^2)*mt^2*s12*s14^2*
      s24^2 - denom(1/4*s12^2)*mt^2*s12*s14^2*s23*s24 - 1/8*denom(1/4*s12^2)*
      mt^2*s12*s14^2*s23^2 - 1/8*denom(1/4*s12^2)*mt^2*s12*s14^3*s24 - 1/8*
      denom(1/4*s12^2)*mt^2*s12*s14^3*s23 - 1/8*denom(1/4*s12^2)*mt^2*s12*s13*
      s24^3 - 1/8*denom(1/4*s12^2)*mt^2*s12*s13*s23*s24^2 - denom(1/4*s12^2)*
      mt^2*s12*s13*s14*s24^2 - 1/2*denom(1/4*s12^2)*mt^2*s12*s13*s14*s23*s24
       - 3/8*denom(1/4*s12^2)*mt^2*s12*s13*s14^2*s24 - 1/8*denom(1/4*s12^2)*
      mt^2*s12*s13*s14^2*s23 - 1/8*denom(1/4*s12^2)*mt^2*s12*s13^2*s24^2 - 1/4
      *denom(1/4*s12^2)*mt^2*s12*s13^2*s14*s24 - 1/8*denom(1/4*s12^2)*mt^2*
      s12^2*s14*s24^2 - 1/4*denom(1/4*s12^2)*mt^2*s12^2*s14*s23*s24 - 1/8*
      denom(1/4*s12^2)*mt^2*s12^2*s14^2*s24 - 1/8*denom(1/4*s12^2)*mt^2*s12^2*
      s14^2*s23 - 1/8*denom(1/4*s12^2)*mt^2*s12^2*s13*s24^2 - 1/4*denom(1/4*
      s12^2)*mt^2*s12^2*s13*s14*s24 + 1/8*denom(1/4*s12^2)*mt^2*mh^2*s12*s14*
      s24^2 + 1/4*denom(1/4*s12^2)*mt^2*mh^2*s12*s14*s23*s24 + 1/8*denom(1/4*
      s12^2)*mt^2*mh^2*s12*s14^2*s24 + 1/8*denom(1/4*s12^2)*mt^2*mh^2*s12*
      s14^2*s23 + 1/8*denom(1/4*s12^2)*mt^2*mh^2*s12*s13*s24^2 + 1/4*denom(1/4
      *s12^2)*mt^2*mh^2*s12*s13*s14*s24 + 1/8*denom(1/4*s12^2)*mt^4*s14*s24^3
       + 1/2*denom(1/4*s12^2)*mt^4*s14*s23*s24^2 + 3/8*denom(1/4*s12^2)*mt^4*
      s14*s23^2*s24 + 1/4*denom(1/4*s12^2)*mt^4*s14^2*s24^2 + 5/4*denom(1/4*
      s12^2)*mt^4*s14^2*s23*s24 + 3/8*denom(1/4*s12^2)*mt^4*s14^2*s23^2 + 1/8*
      denom(1/4*s12^2)*mt^4*s14^3*s24 + 1/4*denom(1/4*s12^2)*mt^4*s14^3*s23 + 
      1/4*denom(1/4*s12^2)*mt^4*s13*s24^3 + 1/4*denom(1/4*s12^2)*mt^4*s13*s23*
      s24^2 + 5/4*denom(1/4*s12^2)*mt^4*s13*s14*s24^2 + denom(1/4*s12^2)*mt^4*
      s13*s14*s23*s24 + 1/2*denom(1/4*s12^2)*mt^4*s13*s14^2*s24 + 1/4*denom(1/
      4*s12^2)*mt^4*s13*s14^2*s23 + 3/8*denom(1/4*s12^2)*mt^4*s13^2*s24^2 + 3/
      8*denom(1/4*s12^2)*mt^4*s13^2*s14*s24 + 1/8*denom(1/4*s12^2)*mt^4*s12*
      s24^3 + 1/4*denom(1/4*s12^2)*mt^4*s12*s23*s24^2 + 1/8*denom(1/4*s12^2)*
      mt^4*s12*s23^2*s24 + 9/8*denom(1/4*s12^2)*mt^4*s12*s14*s24^2 + 15/8*
      denom(1/4*s12^2)*mt^4*s12*s14*s23*s24 + 1/4*denom(1/4*s12^2)*mt^4*s12*
      s14*s23^2 + 9/8*denom(1/4*s12^2)*mt^4*s12*s14^2*s24 + 7/8*denom(1/4*
      s12^2)*mt^4*s12*s14^2*s23 + 1/8*denom(1/4*s12^2)*mt^4*s12*s14^3 + 7/8*
      denom(1/4*s12^2)*mt^4*s12*s13*s24^2 + 3/8*denom(1/4*s12^2)*mt^4*s12*s13*
      s23*s24 + 15/8*denom(1/4*s12^2)*mt^4*s12*s13*s14*s24 + 3/8*denom(1/4*
      s12^2)*mt^4*s12*s13*s14*s23 + 1/4*denom(1/4*s12^2)*mt^4*s12*s13*s14^2 + 
      1/4*denom(1/4*s12^2)*mt^4*s12*s13^2*s24 + 1/8*denom(1/4*s12^2)*mt^4*s12*
      s13^2*s14 + 1/8*denom(1/4*s12^2)*mt^4*s12^2*s24^2 + 1/8*denom(1/4*s12^2)
      *mt^4*s12^2*s23*s24 + 1/2*denom(1/4*s12^2)*mt^4*s12^2*s14*s24 + 1/4*
      denom(1/4*s12^2)*mt^4*s12^2*s14*s23 + 1/8*denom(1/4*s12^2)*mt^4*s12^2*
      s14^2 + 1/4*denom(1/4*s12^2)*mt^4*s12^2*s13*s24 + 1/8*denom(1/4*s12^2)*
      mt^4*s12^2*s13*s14 - 1/8*denom(1/4*s12^2)*mt^4*mh^2*s12*s24^2 - 1/8*
      denom(1/4*s12^2)*mt^4*mh^2*s12*s23*s24 - 1/2*denom(1/4*s12^2)*mt^4*mh^2*
      s12*s14*s24 - 1/4*denom(1/4*s12^2)*mt^4*mh^2*s12*s14*s23 - 1/8*denom(1/4
      *s12^2)*mt^4*mh^2*s12*s14^2 - 1/4*denom(1/4*s12^2)*mt^4*mh^2*s12*s13*s24
       - 1/8*denom(1/4*s12^2)*mt^4*mh^2*s12*s13*s14 - 1/8*denom(1/4*s12^2)*
      mt^6*s24^3 - 1/4*denom(1/4*s12^2)*mt^6*s23*s24^2 - 1/8*denom(1/4*s12^2)*
      mt^6*s23^2*s24 - 7/8*denom(1/4*s12^2)*mt^6*s14*s24^2 - 7/4*denom(1/4*
      s12^2)*mt^6*s14*s23*s24 - 3/8*denom(1/4*s12^2)*mt^6*s14*s23^2 - 7/8*
      denom(1/4*s12^2)*mt^6*s14^2*s24 - denom(1/4*s12^2)*mt^6*s14^2*s23 - 1/8*
      denom(1/4*s12^2)*mt^6*s14^3 - denom(1/4*s12^2)*mt^6*s13*s24^2 - 1/2*
      denom(1/4*s12^2)*mt^6*s13*s23*s24 - 7/4*denom(1/4*s12^2)*mt^6*s13*s14*
      s24 - 1/2*denom(1/4*s12^2)*mt^6*s13*s14*s23 - 1/4*denom(1/4*s12^2)*mt^6*
      s13*s14^2 - 3/8*denom(1/4*s12^2)*mt^6*s13^2*s24 - 1/8*denom(1/4*s12^2)*
      mt^6*s13^2*s14 - 7/8*denom(1/4*s12^2)*mt^6*s12*s24^2 - denom(1/4*s12^2)*
      mt^6*s12*s23*s24 - 1/8*denom(1/4*s12^2)*mt^6*s12*s23^2 - 11/4*denom(1/4*
      s12^2)*mt^6*s12*s14*s24 - 3/2*denom(1/4*s12^2)*mt^6*s12*s14*s23 - 7/8*
      denom(1/4*s12^2)*mt^6*s12*s14^2 - 3/2*denom(1/4*s12^2)*mt^6*s12*s13*s24
       - 1/4*denom(1/4*s12^2)*mt^6*s12*s13*s23 - denom(1/4*s12^2)*mt^6*s12*s13
      *s14 - 1/8*denom(1/4*s12^2)*mt^6*s12*s13^2 - 3/8*denom(1/4*s12^2)*mt^6*
      s12^2*s24 - 1/8*denom(1/4*s12^2)*mt^6*s12^2*s23 - 3/8*denom(1/4*s12^2)*
      mt^6*s12^2*s14 - 1/8*denom(1/4*s12^2)*mt^6*s12^2*s13 + 3/8*denom(1/4*
      s12^2)*mt^6*mh^2*s12*s24 + 1/8*denom(1/4*s12^2)*mt^6*mh^2*s12*s23 + 3/8*
      denom(1/4*s12^2)*mt^6*mh^2*s12*s14 + 1/8*denom(1/4*s12^2)*mt^6*mh^2*s12*
      s13 + 5/8*denom(1/4*s12^2)*mt^8*s24^2 + 3/4*denom(1/4*s12^2)*mt^8*s23*
      s24 + 1/8*denom(1/4*s12^2)*mt^8*s23^2 + 7/4*denom(1/4*s12^2)*mt^8*s14*
      s24 + 5/4*denom(1/4*s12^2)*mt^8*s14*s23 + 5/8*denom(1/4*s12^2)*mt^8*
      s14^2 + 5/4*denom(1/4*s12^2)*mt^8*s13*s24 + 1/4*denom(1/4*s12^2)*mt^8*
      s13*s23 + 3/4*denom(1/4*s12^2)*mt^8*s13*s14 + 1/8*denom(1/4*s12^2)*mt^8*
      s13^2 + 7/4*denom(1/4*s12^2)*mt^8*s12*s24 + 3/4*denom(1/4*s12^2)*mt^8*
      s12*s23 + 7/4*denom(1/4*s12^2)*mt^8*s12*s14 + 3/4*denom(1/4*s12^2)*mt^8*
      s12*s13 + 1/4*denom(1/4*s12^2)*mt^8*s12^2 - 1/4*denom(1/4*s12^2)*mt^8*
      mh^2*s12 - denom(1/4*s12^2)*mt^10*s24 - 1/2*denom(1/4*s12^2)*mt^10*s23
       - denom(1/4*s12^2)*mt^10*s14 - 1/2*denom(1/4*s12^2)*mt^10*s13 - denom(1/
      4*s12^2)*mt^10*s12 + 1/2*denom(1/4*s12^2)*mt^12;
 
 .sort
id KMatrix(12,8) =  mt^4*s14*s23 + mt^4*s13*s24 + mt^4*s12*s24 + mt^4*s12*s23
       + mt^4*s12*s14 + mt^4*s12*s13 + mt^4*s12^2 - mt^4*mh^2*s12 - mt^6*s24
       - mt^6*s23 - mt^6*s14 - mt^6*s13 - 4*mt^6*s12 + 2*mt^8 - denom(1/2*s12)
      *mt^2*s14^2*s23*s24 - denom(1/2*s12)*mt^2*s13*s14*s24^2 - denom(1/2*s12)
      *mt^2*s12*s14*s24^2 - denom(1/2*s12)*mt^2*s12*s14*s23*s24 - denom(1/2*
      s12)*mt^2*s12*s14^2*s24 - denom(1/2*s12)*mt^2*s12*s13*s14*s24 - denom(1/
      2*s12)*mt^2*s12^2*s14*s24 + denom(1/2*s12)*mt^2*mh^2*s12*s14*s24 + 
      denom(1/2*s12)*mt^4*s14*s24^2 + 2*denom(1/2*s12)*mt^4*s14*s23*s24 + 
      denom(1/2*s12)*mt^4*s14^2*s24 + denom(1/2*s12)*mt^4*s14^2*s23 + denom(1/
      2*s12)*mt^4*s13*s24^2 + 2*denom(1/2*s12)*mt^4*s13*s14*s24 + denom(1/2*
      s12)*mt^4*s12*s24^2 + denom(1/2*s12)*mt^4*s12*s23*s24 + 6*denom(1/2*s12)
      *mt^4*s12*s14*s24 + denom(1/2*s12)*mt^4*s12*s14*s23 + denom(1/2*s12)*
      mt^4*s12*s14^2 + denom(1/2*s12)*mt^4*s12*s13*s24 + denom(1/2*s12)*mt^4*
      s12*s13*s14 + denom(1/2*s12)*mt^4*s12^2*s24 + denom(1/2*s12)*mt^4*s12^2*
      s14 - denom(1/2*s12)*mt^4*mh^2*s12*s24 - denom(1/2*s12)*mt^4*mh^2*s12*
      s14 - denom(1/2*s12)*mt^6*s24^2 - denom(1/2*s12)*mt^6*s23*s24 - 4*denom(
      1/2*s12)*mt^6*s14*s24 - 2*denom(1/2*s12)*mt^6*s14*s23 - denom(1/2*s12)*
      mt^6*s14^2 - 2*denom(1/2*s12)*mt^6*s13*s24 - denom(1/2*s12)*mt^6*s13*s14
       - 5*denom(1/2*s12)*mt^6*s12*s24 - denom(1/2*s12)*mt^6*s12*s23 - 5*
      denom(1/2*s12)*mt^6*s12*s14 - denom(1/2*s12)*mt^6*s12*s13 - denom(1/2*
      s12)*mt^6*s12^2 + denom(1/2*s12)*mt^6*mh^2*s12 + 3*denom(1/2*s12)*mt^8*
      s24 + denom(1/2*s12)*mt^8*s23 + 3*denom(1/2*s12)*mt^8*s14 + denom(1/2*
      s12)*mt^8*s13 + 4*denom(1/2*s12)*mt^8*s12 - 2*denom(1/2*s12)*mt^10 + 1/4
      *denom(1/4*s12^2)*s14^3*s23*s24^2 + 1/4*denom(1/4*s12^2)*s13*s14^2*s24^3
       + 1/4*denom(1/4*s12^2)*s12*s14^2*s24^3 + 1/4*denom(1/4*s12^2)*s12*s14^2
      *s23*s24^2 + 1/4*denom(1/4*s12^2)*s12*s14^3*s24^2 + 1/4*denom(1/4*s12^2)
      *s12*s13*s14^2*s24^2 + 1/4*denom(1/4*s12^2)*s12^2*s14^2*s24^2 - 1/4*
      denom(1/4*s12^2)*mh^2*s12*s14^2*s24^2 - 1/4*denom(1/4*s12^2)*mt^2*s14^2*
      s24^3 - 3/4*denom(1/4*s12^2)*mt^2*s14^2*s23*s24^2 - 1/4*denom(1/4*s12^2)
      *mt^2*s14^3*s24^2 - 1/2*denom(1/4*s12^2)*mt^2*s14^3*s23*s24 - 1/2*denom(
      1/4*s12^2)*mt^2*s13*s14*s24^3 - 3/4*denom(1/4*s12^2)*mt^2*s13*s14^2*
      s24^2 - 1/2*denom(1/4*s12^2)*mt^2*s12*s14*s24^3 - 1/2*denom(1/4*s12^2)*
      mt^2*s12*s14*s23*s24^2 - 2*denom(1/4*s12^2)*mt^2*s12*s14^2*s24^2 - 1/2*
      denom(1/4*s12^2)*mt^2*s12*s14^2*s23*s24 - 1/2*denom(1/4*s12^2)*mt^2*s12*
      s14^3*s24 - 1/2*denom(1/4*s12^2)*mt^2*s12*s13*s14*s24^2 - 1/2*denom(1/4*
      s12^2)*mt^2*s12*s13*s14^2*s24 - 1/2*denom(1/4*s12^2)*mt^2*s12^2*s14*
      s24^2 - 1/2*denom(1/4*s12^2)*mt^2*s12^2*s14^2*s24 + 1/2*denom(1/4*s12^2)
      *mt^2*mh^2*s12*s14*s24^2 + 1/2*denom(1/4*s12^2)*mt^2*mh^2*s12*s14^2*s24
       + 1/2*denom(1/4*s12^2)*mt^4*s14*s24^3 + 3/4*denom(1/4*s12^2)*mt^4*s14*
      s23*s24^2 + 3/2*denom(1/4*s12^2)*mt^4*s14^2*s24^2 + 3/2*denom(1/4*s12^2)
      *mt^4*s14^2*s23*s24 + 1/2*denom(1/4*s12^2)*mt^4*s14^3*s24 + 1/4*denom(1/
      4*s12^2)*mt^4*s14^3*s23 + 1/4*denom(1/4*s12^2)*mt^4*s13*s24^3 + 3/2*
      denom(1/4*s12^2)*mt^4*s13*s14*s24^2 + 3/4*denom(1/4*s12^2)*mt^4*s13*
      s14^2*s24 + 1/4*denom(1/4*s12^2)*mt^4*s12*s24^3 + 1/4*denom(1/4*s12^2)*
      mt^4*s12*s23*s24^2 + 13/4*denom(1/4*s12^2)*mt^4*s12*s14*s24^2 + denom(1/
      4*s12^2)*mt^4*s12*s14*s23*s24 + 13/4*denom(1/4*s12^2)*mt^4*s12*s14^2*s24
       + 1/4*denom(1/4*s12^2)*mt^4*s12*s14^2*s23 + 1/4*denom(1/4*s12^2)*mt^4*
      s12*s14^3 + 1/4*denom(1/4*s12^2)*mt^4*s12*s13*s24^2 + denom(1/4*s12^2)*
      mt^4*s12*s13*s14*s24 + 1/4*denom(1/4*s12^2)*mt^4*s12*s13*s14^2 + 1/4*
      denom(1/4*s12^2)*mt^4*s12^2*s24^2 + denom(1/4*s12^2)*mt^4*s12^2*s14*s24
       + 1/4*denom(1/4*s12^2)*mt^4*s12^2*s14^2 - 1/4*denom(1/4*s12^2)*mt^4*
      mh^2*s12*s24^2 - denom(1/4*s12^2)*mt^4*mh^2*s12*s14*s24 - 1/4*denom(1/4*
      s12^2)*mt^4*mh^2*s12*s14^2 - 1/4*denom(1/4*s12^2)*mt^6*s24^3 - 1/4*
      denom(1/4*s12^2)*mt^6*s23*s24^2 - 9/4*denom(1/4*s12^2)*mt^6*s14*s24^2 - 
      3/2*denom(1/4*s12^2)*mt^6*s14*s23*s24 - 9/4*denom(1/4*s12^2)*mt^6*s14^2*
      s24 - 3/4*denom(1/4*s12^2)*mt^6*s14^2*s23 - 1/4*denom(1/4*s12^2)*mt^6*
      s14^3 - 3/4*denom(1/4*s12^2)*mt^6*s13*s24^2 - 3/2*denom(1/4*s12^2)*mt^6*
      s13*s14*s24 - 1/4*denom(1/4*s12^2)*mt^6*s13*s14^2 - 3/2*denom(1/4*s12^2)
      *mt^6*s12*s24^2 - 1/2*denom(1/4*s12^2)*mt^6*s12*s23*s24 - 5*denom(1/4*
      s12^2)*mt^6*s12*s14*s24 - 1/2*denom(1/4*s12^2)*mt^6*s12*s14*s23 - 3/2*
      denom(1/4*s12^2)*mt^6*s12*s14^2 - 1/2*denom(1/4*s12^2)*mt^6*s12*s13*s24
       - 1/2*denom(1/4*s12^2)*mt^6*s12*s13*s14 - 1/2*denom(1/4*s12^2)*mt^6*
      s12^2*s24 - 1/2*denom(1/4*s12^2)*mt^6*s12^2*s14 + 1/2*denom(1/4*s12^2)*
      mt^6*mh^2*s12*s24 + 1/2*denom(1/4*s12^2)*mt^6*mh^2*s12*s14 + denom(1/4*
      s12^2)*mt^8*s24^2 + 1/2*denom(1/4*s12^2)*mt^8*s23*s24 + 3*denom(1/4*
      s12^2)*mt^8*s14*s24 + 3/4*denom(1/4*s12^2)*mt^8*s14*s23 + denom(1/4*
      s12^2)*mt^8*s14^2 + 3/4*denom(1/4*s12^2)*mt^8*s13*s24 + 1/2*denom(1/4*
      s12^2)*mt^8*s13*s14 + 9/4*denom(1/4*s12^2)*mt^8*s12*s24 + 1/4*denom(1/4*
      s12^2)*mt^8*s12*s23 + 9/4*denom(1/4*s12^2)*mt^8*s12*s14 + 1/4*denom(1/4*
      s12^2)*mt^8*s12*s13 + 1/4*denom(1/4*s12^2)*mt^8*s12^2 - 1/4*denom(1/4*
      s12^2)*mt^8*mh^2*s12 - 5/4*denom(1/4*s12^2)*mt^10*s24 - 1/4*denom(1/4*
      s12^2)*mt^10*s23 - 5/4*denom(1/4*s12^2)*mt^10*s14 - 1/4*denom(1/4*s12^2)
      *mt^10*s13 - denom(1/4*s12^2)*mt^10*s12 + 1/2*denom(1/4*s12^2)*mt^12;
 
 .sort
id KMatrix(12,9) =  1/2*s23*s24^3 + s23^2*s24^2 + 1/2*s23^3*s24 + s14*s23*
      s24^2 + s14*s23^2*s24 + 1/2*s14^2*s23*s24 + s13*s23*s24^2 + s13*s23^2*
      s24 + s13*s14*s23*s24 + 1/2*s13^2*s23*s24 + s12*s23*s24^2 + s12*s23^2*
      s24 + s12*s14*s23*s24 + s12*s13*s23*s24 + 1/2*s12^2*s23*s24 - mh^2*s23*
      s24^2 - mh^2*s23^2*s24 - mh^2*s14*s23*s24 - mh^2*s13*s23*s24 - mh^2*s12*
      s23*s24 + 1/2*mh^4*s23*s24 - 1/2*mt^2*s24^3 - 7/2*mt^2*s23*s24^2 - 7/2*
      mt^2*s23^2*s24 - 1/2*mt^2*s23^3 - mt^2*s14*s24^2 - 4*mt^2*s14*s23*s24 - 
      mt^2*s14*s23^2 - 1/2*mt^2*s14^2*s24 - 1/2*mt^2*s14^2*s23 - mt^2*s13*
      s24^2 - 4*mt^2*s13*s23*s24 - mt^2*s13*s23^2 - mt^2*s13*s14*s24 - mt^2*
      s13*s14*s23 - 1/2*mt^2*s13^2*s24 - 1/2*mt^2*s13^2*s23 - mt^2*s12*s24^2
       - 4*mt^2*s12*s23*s24 - mt^2*s12*s23^2 - mt^2*s12*s14*s24 - mt^2*s12*s14
      *s23 - mt^2*s12*s13*s24 - mt^2*s12*s13*s23 - 1/2*mt^2*s12^2*s24 - 1/2*
      mt^2*s12^2*s23 + mt^2*mh^2*s24^2 + 4*mt^2*mh^2*s23*s24 + mt^2*mh^2*s23^2
       + mt^2*mh^2*s14*s24 + mt^2*mh^2*s14*s23 + mt^2*mh^2*s13*s24 + mt^2*mh^2
      *s13*s23 + mt^2*mh^2*s12*s24 + mt^2*mh^2*s12*s23 - 1/2*mt^2*mh^4*s24 - 1/
      2*mt^2*mh^4*s23 + 5/2*mt^4*s24^2 + 7*mt^4*s23*s24 + 5/2*mt^4*s23^2 + 3*
      mt^4*s14*s24 + 3*mt^4*s14*s23 + 1/2*mt^4*s14^2 + 3*mt^4*s13*s24 + 3*mt^4
      *s13*s23 + mt^4*s13*s14 + 1/2*mt^4*s13^2 + 3*mt^4*s12*s24 + 3*mt^4*s12*
      s23 + mt^4*s12*s14 + mt^4*s12*s13 + 1/2*mt^4*s12^2 - 3*mt^4*mh^2*s24 - 3
      *mt^4*mh^2*s23 - mt^4*mh^2*s14 - mt^4*mh^2*s13 - mt^4*mh^2*s12 + 1/2*
      mt^4*mh^4 - 4*mt^6*s24 - 4*mt^6*s23 - 2*mt^6*s14 - 2*mt^6*s13 - 2*mt^6*
      s12 + 2*mt^6*mh^2 + 2*mt^8 + 1/2*denom(1/2*s12)*s14*s23^2*s24^2 + 1/2*
      denom(1/2*s12)*s14*s23^3*s24 + 1/2*denom(1/2*s12)*s14^2*s23^2*s24 + 1/2*
      denom(1/2*s12)*s13*s23*s24^3 + 1/2*denom(1/2*s12)*s13*s23^2*s24^2 + 1/2*
      denom(1/2*s12)*s13*s14*s23*s24^2 + 1/2*denom(1/2*s12)*s13*s14*s23^2*s24
       + 1/2*denom(1/2*s12)*s13^2*s23*s24^2 + 1/2*denom(1/2*s12)*s12*s14*s23^2
      *s24 + 1/2*denom(1/2*s12)*s12*s13*s23*s24^2 - 1/2*denom(1/2*s12)*mh^2*
      s14*s23^2*s24 - 1/2*denom(1/2*s12)*mh^2*s13*s23*s24^2 - 1/2*denom(1/2*
      s12)*mt^2*s23*s24^3 - denom(1/2*s12)*mt^2*s23^2*s24^2 - 1/2*denom(1/2*
      s12)*mt^2*s23^3*s24 - 3/2*denom(1/2*s12)*mt^2*s14*s23*s24^2 - 3*denom(1/
      2*s12)*mt^2*s14*s23^2*s24 - 1/2*denom(1/2*s12)*mt^2*s14*s23^3 - denom(1/
      2*s12)*mt^2*s14^2*s23*s24 - 1/2*denom(1/2*s12)*mt^2*s14^2*s23^2 - 1/2*
      denom(1/2*s12)*mt^2*s13*s24^3 - 3*denom(1/2*s12)*mt^2*s13*s23*s24^2 - 3/
      2*denom(1/2*s12)*mt^2*s13*s23^2*s24 - 1/2*denom(1/2*s12)*mt^2*s13*s14*
      s24^2 - 2*denom(1/2*s12)*mt^2*s13*s14*s23*s24 - 1/2*denom(1/2*s12)*mt^2*
      s13*s14*s23^2 - 1/2*denom(1/2*s12)*mt^2*s13^2*s24^2 - denom(1/2*s12)*
      mt^2*s13^2*s23*s24 - 1/2*denom(1/2*s12)*mt^2*s12*s23*s24^2 - 1/2*denom(1/
      2*s12)*mt^2*s12*s23^2*s24 - denom(1/2*s12)*mt^2*s12*s14*s23*s24 - 1/2*
      denom(1/2*s12)*mt^2*s12*s14*s23^2 - 1/2*denom(1/2*s12)*mt^2*s12*s13*
      s24^2 - denom(1/2*s12)*mt^2*s12*s13*s23*s24 + 1/2*denom(1/2*s12)*mt^2*
      mh^2*s23*s24^2 + 1/2*denom(1/2*s12)*mt^2*mh^2*s23^2*s24 + denom(1/2*s12)
      *mt^2*mh^2*s14*s23*s24 + 1/2*denom(1/2*s12)*mt^2*mh^2*s14*s23^2 + 1/2*
      denom(1/2*s12)*mt^2*mh^2*s13*s24^2 + denom(1/2*s12)*mt^2*mh^2*s13*s23*
      s24 + 1/2*denom(1/2*s12)*mt^4*s24^3 + 7/2*denom(1/2*s12)*mt^4*s23*s24^2
       + 7/2*denom(1/2*s12)*mt^4*s23^2*s24 + 1/2*denom(1/2*s12)*mt^4*s23^3 + 
      denom(1/2*s12)*mt^4*s14*s24^2 + 11/2*denom(1/2*s12)*mt^4*s14*s23*s24 + 5/
      2*denom(1/2*s12)*mt^4*s14*s23^2 + 1/2*denom(1/2*s12)*mt^4*s14^2*s24 + 
      denom(1/2*s12)*mt^4*s14^2*s23 + 5/2*denom(1/2*s12)*mt^4*s13*s24^2 + 11/2
      *denom(1/2*s12)*mt^4*s13*s23*s24 + denom(1/2*s12)*mt^4*s13*s23^2 + 3/2*
      denom(1/2*s12)*mt^4*s13*s14*s24 + 3/2*denom(1/2*s12)*mt^4*s13*s14*s23 + 
      denom(1/2*s12)*mt^4*s13^2*s24 + 1/2*denom(1/2*s12)*mt^4*s13^2*s23 + 1/2*
      denom(1/2*s12)*mt^4*s12*s24^2 + 2*denom(1/2*s12)*mt^4*s12*s23*s24 + 1/2*
      denom(1/2*s12)*mt^4*s12*s23^2 + 1/2*denom(1/2*s12)*mt^4*s12*s14*s24 + 
      denom(1/2*s12)*mt^4*s12*s14*s23 + denom(1/2*s12)*mt^4*s12*s13*s24 + 1/2*
      denom(1/2*s12)*mt^4*s12*s13*s23 - 1/2*denom(1/2*s12)*mt^4*mh^2*s24^2 - 2
      *denom(1/2*s12)*mt^4*mh^2*s23*s24 - 1/2*denom(1/2*s12)*mt^4*mh^2*s23^2
       - 1/2*denom(1/2*s12)*mt^4*mh^2*s14*s24 - denom(1/2*s12)*mt^4*mh^2*s14*
      s23 - denom(1/2*s12)*mt^4*mh^2*s13*s24 - 1/2*denom(1/2*s12)*mt^4*mh^2*
      s13*s23 - 5/2*denom(1/2*s12)*mt^6*s24^2 - 7*denom(1/2*s12)*mt^6*s23*s24
       - 5/2*denom(1/2*s12)*mt^6*s23^2 - 3*denom(1/2*s12)*mt^6*s14*s24 - 4*
      denom(1/2*s12)*mt^6*s14*s23 - 1/2*denom(1/2*s12)*mt^6*s14^2 - 4*denom(1/
      2*s12)*mt^6*s13*s24 - 3*denom(1/2*s12)*mt^6*s13*s23 - denom(1/2*s12)*
      mt^6*s13*s14 - 1/2*denom(1/2*s12)*mt^6*s13^2 - 3/2*denom(1/2*s12)*mt^6*
      s12*s24 - 3/2*denom(1/2*s12)*mt^6*s12*s23 - 1/2*denom(1/2*s12)*mt^6*s12*
      s14 - 1/2*denom(1/2*s12)*mt^6*s12*s13 + 3/2*denom(1/2*s12)*mt^6*mh^2*s24
       + 3/2*denom(1/2*s12)*mt^6*mh^2*s23 + 1/2*denom(1/2*s12)*mt^6*mh^2*s14
       + 1/2*denom(1/2*s12)*mt^6*mh^2*s13 + 4*denom(1/2*s12)*mt^8*s24 + 4*
      denom(1/2*s12)*mt^8*s23 + 2*denom(1/2*s12)*mt^8*s14 + 2*denom(1/2*s12)*
      mt^8*s13 + denom(1/2*s12)*mt^8*s12 - denom(1/2*s12)*mt^8*mh^2 - 2*denom(
      1/2*s12)*mt^10 + 1/8*denom(1/4*s12^2)*s14^2*s23^3*s24 + 1/4*denom(1/4*
      s12^2)*s13*s14*s23^2*s24^2 + 1/8*denom(1/4*s12^2)*s13^2*s23*s24^3 - 1/4*
      denom(1/4*s12^2)*mt^2*s14*s23^2*s24^2 - 1/4*denom(1/4*s12^2)*mt^2*s14*
      s23^3*s24 - 3/8*denom(1/4*s12^2)*mt^2*s14^2*s23^2*s24 - 1/8*denom(1/4*
      s12^2)*mt^2*s14^2*s23^3 - 1/4*denom(1/4*s12^2)*mt^2*s13*s23*s24^3 - 1/4*
      denom(1/4*s12^2)*mt^2*s13*s23^2*s24^2 - 1/2*denom(1/4*s12^2)*mt^2*s13*
      s14*s23*s24^2 - 1/2*denom(1/4*s12^2)*mt^2*s13*s14*s23^2*s24 - 1/8*denom(
      1/4*s12^2)*mt^2*s13^2*s24^3 - 3/8*denom(1/4*s12^2)*mt^2*s13^2*s23*s24^2
       + 1/8*denom(1/4*s12^2)*mt^4*s23*s24^3 + 1/4*denom(1/4*s12^2)*mt^4*s23^2
      *s24^2 + 1/8*denom(1/4*s12^2)*mt^4*s23^3*s24 + 1/2*denom(1/4*s12^2)*mt^4
      *s14*s23*s24^2 + 5/4*denom(1/4*s12^2)*mt^4*s14*s23^2*s24 + 1/4*denom(1/4
      *s12^2)*mt^4*s14*s23^3 + 3/8*denom(1/4*s12^2)*mt^4*s14^2*s23*s24 + 3/8*
      denom(1/4*s12^2)*mt^4*s14^2*s23^2 + 1/4*denom(1/4*s12^2)*mt^4*s13*s24^3
       + 5/4*denom(1/4*s12^2)*mt^4*s13*s23*s24^2 + 1/2*denom(1/4*s12^2)*mt^4*
      s13*s23^2*s24 + 1/4*denom(1/4*s12^2)*mt^4*s13*s14*s24^2 + denom(1/4*
      s12^2)*mt^4*s13*s14*s23*s24 + 1/4*denom(1/4*s12^2)*mt^4*s13*s14*s23^2 + 
      3/8*denom(1/4*s12^2)*mt^4*s13^2*s24^2 + 3/8*denom(1/4*s12^2)*mt^4*s13^2*
      s23*s24 - 1/8*denom(1/4*s12^2)*mt^6*s24^3 - 7/8*denom(1/4*s12^2)*mt^6*
      s23*s24^2 - 7/8*denom(1/4*s12^2)*mt^6*s23^2*s24 - 1/8*denom(1/4*s12^2)*
      mt^6*s23^3 - 1/4*denom(1/4*s12^2)*mt^6*s14*s24^2 - 7/4*denom(1/4*s12^2)*
      mt^6*s14*s23*s24 - denom(1/4*s12^2)*mt^6*s14*s23^2 - 1/8*denom(1/4*s12^2
      )*mt^6*s14^2*s24 - 3/8*denom(1/4*s12^2)*mt^6*s14^2*s23 - denom(1/4*s12^2
      )*mt^6*s13*s24^2 - 7/4*denom(1/4*s12^2)*mt^6*s13*s23*s24 - 1/4*denom(1/4
      *s12^2)*mt^6*s13*s23^2 - 1/2*denom(1/4*s12^2)*mt^6*s13*s14*s24 - 1/2*
      denom(1/4*s12^2)*mt^6*s13*s14*s23 - 3/8*denom(1/4*s12^2)*mt^6*s13^2*s24
       - 1/8*denom(1/4*s12^2)*mt^6*s13^2*s23 + 5/8*denom(1/4*s12^2)*mt^8*s24^2
       + 7/4*denom(1/4*s12^2)*mt^8*s23*s24 + 5/8*denom(1/4*s12^2)*mt^8*s23^2
       + 3/4*denom(1/4*s12^2)*mt^8*s14*s24 + 5/4*denom(1/4*s12^2)*mt^8*s14*s23
       + 1/8*denom(1/4*s12^2)*mt^8*s14^2 + 5/4*denom(1/4*s12^2)*mt^8*s13*s24
       + 3/4*denom(1/4*s12^2)*mt^8*s13*s23 + 1/4*denom(1/4*s12^2)*mt^8*s13*s14
       + 1/8*denom(1/4*s12^2)*mt^8*s13^2 - denom(1/4*s12^2)*mt^10*s24 - denom(
      1/4*s12^2)*mt^10*s23 - 1/2*denom(1/4*s12^2)*mt^10*s14 - 1/2*denom(1/4*
      s12^2)*mt^10*s13 + 1/2*denom(1/4*s12^2)*mt^12;
 
 .sort
id KMatrix(12,10) =   - mt^2*s23*s24^2 - mt^2*s23^2*s24 - mt^2*s14*s23*s24 - 
      mt^2*s13*s23*s24 - mt^2*s12*s23*s24 + mt^2*mh^2*s23*s24 + mt^4*s24^2 + 4
      *mt^4*s23*s24 + mt^4*s23^2 + mt^4*s14*s24 + mt^4*s14*s23 + mt^4*s13*s24
       + mt^4*s13*s23 + mt^4*s12*s24 + mt^4*s12*s23 - mt^4*mh^2*s24 - mt^4*
      mh^2*s23 - 3*mt^6*s24 - 3*mt^6*s23 - mt^6*s14 - mt^6*s13 - mt^6*s12 + 
      mt^6*mh^2 + 2*mt^8 + 1/2*denom(1/2*s12)*s14*s23*s24^3 + 1/2*denom(1/2*
      s12)*s14*s23^2*s24^2 + 1/2*denom(1/2*s12)*s14^2*s23*s24^2 + 1/2*denom(1/
      2*s12)*s13*s14*s23*s24^2 + 1/2*denom(1/2*s12)*s12*s14*s23*s24^2 - 1/2*
      denom(1/2*s12)*mh^2*s14*s23*s24^2 - 1/2*denom(1/2*s12)*mt^2*s23*s24^3 - 
      1/2*denom(1/2*s12)*mt^2*s23^2*s24^2 - 1/2*denom(1/2*s12)*mt^2*s14*s24^3
       - 3*denom(1/2*s12)*mt^2*s14*s23*s24^2 - 3/2*denom(1/2*s12)*mt^2*s14*
      s23^2*s24 - 1/2*denom(1/2*s12)*mt^2*s14^2*s24^2 - denom(1/2*s12)*mt^2*
      s14^2*s23*s24 - denom(1/2*s12)*mt^2*s13*s23*s24^2 - 1/2*denom(1/2*s12)*
      mt^2*s13*s14*s24^2 - denom(1/2*s12)*mt^2*s13*s14*s23*s24 - 1/2*denom(1/2
      *s12)*mt^2*s12*s23*s24^2 - 1/2*denom(1/2*s12)*mt^2*s12*s14*s24^2 - 
      denom(1/2*s12)*mt^2*s12*s14*s23*s24 + 1/2*denom(1/2*s12)*mt^2*mh^2*s23*
      s24^2 + 1/2*denom(1/2*s12)*mt^2*mh^2*s14*s24^2 + denom(1/2*s12)*mt^2*
      mh^2*s14*s23*s24 + 1/2*denom(1/2*s12)*mt^4*s24^3 + 3*denom(1/2*s12)*mt^4
      *s23*s24^2 + 3/2*denom(1/2*s12)*mt^4*s23^2*s24 + 5/2*denom(1/2*s12)*mt^4
      *s14*s24^2 + 11/2*denom(1/2*s12)*mt^4*s14*s23*s24 + denom(1/2*s12)*mt^4*
      s14*s23^2 + denom(1/2*s12)*mt^4*s14^2*s24 + 1/2*denom(1/2*s12)*mt^4*
      s14^2*s23 + denom(1/2*s12)*mt^4*s13*s24^2 + 2*denom(1/2*s12)*mt^4*s13*
      s23*s24 + denom(1/2*s12)*mt^4*s13*s14*s24 + 1/2*denom(1/2*s12)*mt^4*s13*
      s14*s23 + 1/2*denom(1/2*s12)*mt^4*s12*s24^2 + denom(1/2*s12)*mt^4*s12*
      s23*s24 + denom(1/2*s12)*mt^4*s12*s14*s24 + 1/2*denom(1/2*s12)*mt^4*s12*
      s14*s23 - 1/2*denom(1/2*s12)*mt^4*mh^2*s24^2 - denom(1/2*s12)*mt^4*mh^2*
      s23*s24 - denom(1/2*s12)*mt^4*mh^2*s14*s24 - 1/2*denom(1/2*s12)*mt^4*
      mh^2*s14*s23 - 5/2*denom(1/2*s12)*mt^6*s24^2 - 11/2*denom(1/2*s12)*mt^6*
      s23*s24 - denom(1/2*s12)*mt^6*s23^2 - 4*denom(1/2*s12)*mt^6*s14*s24 - 3*
      denom(1/2*s12)*mt^6*s14*s23 - 1/2*denom(1/2*s12)*mt^6*s14^2 - 2*denom(1/
      2*s12)*mt^6*s13*s24 - denom(1/2*s12)*mt^6*s13*s23 - 1/2*denom(1/2*s12)*
      mt^6*s13*s14 - denom(1/2*s12)*mt^6*s12*s24 - 1/2*denom(1/2*s12)*mt^6*s12
      *s23 - 1/2*denom(1/2*s12)*mt^6*s12*s14 + denom(1/2*s12)*mt^6*mh^2*s24 + 
      1/2*denom(1/2*s12)*mt^6*mh^2*s23 + 1/2*denom(1/2*s12)*mt^6*mh^2*s14 + 4*
      denom(1/2*s12)*mt^8*s24 + 3*denom(1/2*s12)*mt^8*s23 + 2*denom(1/2*s12)*
      mt^8*s14 + denom(1/2*s12)*mt^8*s13 + 1/2*denom(1/2*s12)*mt^8*s12 - 1/2*
      denom(1/2*s12)*mt^8*mh^2 - 2*denom(1/2*s12)*mt^10 + 1/4*denom(1/4*s12^2)
      *s14^2*s23^2*s24^2 + 1/4*denom(1/4*s12^2)*s13*s14*s23*s24^3 - 1/4*denom(
      1/4*s12^2)*mt^2*s14*s23*s24^3 - 1/2*denom(1/4*s12^2)*mt^2*s14*s23^2*
      s24^2 - 1/2*denom(1/4*s12^2)*mt^2*s14^2*s23*s24^2 - 1/2*denom(1/4*s12^2)
      *mt^2*s14^2*s23^2*s24 - 1/4*denom(1/4*s12^2)*mt^2*s13*s23*s24^3 - 1/4*
      denom(1/4*s12^2)*mt^2*s13*s14*s24^3 - 3/4*denom(1/4*s12^2)*mt^2*s13*s14*
      s23*s24^2 + 1/4*denom(1/4*s12^2)*mt^4*s23*s24^3 + 1/4*denom(1/4*s12^2)*
      mt^4*s23^2*s24^2 + 1/4*denom(1/4*s12^2)*mt^4*s14*s24^3 + 7/4*denom(1/4*
      s12^2)*mt^4*s14*s23*s24^2 + denom(1/4*s12^2)*mt^4*s14*s23^2*s24 + 1/4*
      denom(1/4*s12^2)*mt^4*s14^2*s24^2 + denom(1/4*s12^2)*mt^4*s14^2*s23*s24
       + 1/4*denom(1/4*s12^2)*mt^4*s14^2*s23^2 + 1/4*denom(1/4*s12^2)*mt^4*s13
      *s24^3 + 3/4*denom(1/4*s12^2)*mt^4*s13*s23*s24^2 + 3/4*denom(1/4*s12^2)*
      mt^4*s13*s14*s24^2 + 3/4*denom(1/4*s12^2)*mt^4*s13*s14*s23*s24 - 1/4*
      denom(1/4*s12^2)*mt^6*s24^3 - 5/4*denom(1/4*s12^2)*mt^6*s23*s24^2 - 1/2*
      denom(1/4*s12^2)*mt^6*s23^2*s24 - 5/4*denom(1/4*s12^2)*mt^6*s14*s24^2 - 
      11/4*denom(1/4*s12^2)*mt^6*s14*s23*s24 - 1/2*denom(1/4*s12^2)*mt^6*s14*
      s23^2 - 1/2*denom(1/4*s12^2)*mt^6*s14^2*s24 - 1/2*denom(1/4*s12^2)*mt^6*
      s14^2*s23 - 3/4*denom(1/4*s12^2)*mt^6*s13*s24^2 - 3/4*denom(1/4*s12^2)*
      mt^6*s13*s23*s24 - 3/4*denom(1/4*s12^2)*mt^6*s13*s14*s24 - 1/4*denom(1/4
      *s12^2)*mt^6*s13*s14*s23 + denom(1/4*s12^2)*mt^8*s24^2 + 7/4*denom(1/4*
      s12^2)*mt^8*s23*s24 + 1/4*denom(1/4*s12^2)*mt^8*s23^2 + 7/4*denom(1/4*
      s12^2)*mt^8*s14*s24 + 5/4*denom(1/4*s12^2)*mt^8*s14*s23 + 1/4*denom(1/4*
      s12^2)*mt^8*s14^2 + 3/4*denom(1/4*s12^2)*mt^8*s13*s24 + 1/4*denom(1/4*
      s12^2)*mt^8*s13*s23 + 1/4*denom(1/4*s12^2)*mt^8*s13*s14 - 5/4*denom(1/4*
      s12^2)*mt^10*s24 - 3/4*denom(1/4*s12^2)*mt^10*s23 - 3/4*denom(1/4*s12^2)
      *mt^10*s14 - 1/4*denom(1/4*s12^2)*mt^10*s13 + 1/2*denom(1/4*s12^2)*mt^12
      ;
 
 .sort
id KMatrix(12,11) =   - mt^2*s23*s24^2 - mt^2*s23^2*s24 - mt^2*s14*s23*s24 - 
      mt^2*s13*s23*s24 - mt^2*s12*s23*s24 + mt^2*mh^2*s23*s24 + mt^4*s24^2 + 4
      *mt^4*s23*s24 + mt^4*s23^2 + mt^4*s14*s24 + mt^4*s14*s23 + mt^4*s13*s24
       + mt^4*s13*s23 + mt^4*s12*s24 + mt^4*s12*s23 - mt^4*mh^2*s24 - mt^4*
      mh^2*s23 - 3*mt^6*s24 - 3*mt^6*s23 - mt^6*s14 - mt^6*s13 - mt^6*s12 + 
      mt^6*mh^2 + 2*mt^8 + 1/2*denom(1/2*s12)*s14*s23*s24^3 + 1/2*denom(1/2*
      s12)*s14*s23^2*s24^2 + 1/2*denom(1/2*s12)*s14^2*s23*s24^2 + 1/2*denom(1/
      2*s12)*s13*s14*s23*s24^2 + 1/2*denom(1/2*s12)*s12*s14*s23*s24^2 - 1/2*
      denom(1/2*s12)*mh^2*s14*s23*s24^2 - 1/2*denom(1/2*s12)*mt^2*s23*s24^3 - 
      1/2*denom(1/2*s12)*mt^2*s23^2*s24^2 - 1/2*denom(1/2*s12)*mt^2*s14*s24^3
       - 3*denom(1/2*s12)*mt^2*s14*s23*s24^2 - 3/2*denom(1/2*s12)*mt^2*s14*
      s23^2*s24 - 1/2*denom(1/2*s12)*mt^2*s14^2*s24^2 - denom(1/2*s12)*mt^2*
      s14^2*s23*s24 - denom(1/2*s12)*mt^2*s13*s23*s24^2 - 1/2*denom(1/2*s12)*
      mt^2*s13*s14*s24^2 - denom(1/2*s12)*mt^2*s13*s14*s23*s24 - 1/2*denom(1/2
      *s12)*mt^2*s12*s23*s24^2 - 1/2*denom(1/2*s12)*mt^2*s12*s14*s24^2 - 
      denom(1/2*s12)*mt^2*s12*s14*s23*s24 + 1/2*denom(1/2*s12)*mt^2*mh^2*s23*
      s24^2 + 1/2*denom(1/2*s12)*mt^2*mh^2*s14*s24^2 + denom(1/2*s12)*mt^2*
      mh^2*s14*s23*s24 + 1/2*denom(1/2*s12)*mt^4*s24^3 + 3*denom(1/2*s12)*mt^4
      *s23*s24^2 + 3/2*denom(1/2*s12)*mt^4*s23^2*s24 + 5/2*denom(1/2*s12)*mt^4
      *s14*s24^2 + 11/2*denom(1/2*s12)*mt^4*s14*s23*s24 + denom(1/2*s12)*mt^4*
      s14*s23^2 + denom(1/2*s12)*mt^4*s14^2*s24 + 1/2*denom(1/2*s12)*mt^4*
      s14^2*s23 + denom(1/2*s12)*mt^4*s13*s24^2 + 2*denom(1/2*s12)*mt^4*s13*
      s23*s24 + denom(1/2*s12)*mt^4*s13*s14*s24 + 1/2*denom(1/2*s12)*mt^4*s13*
      s14*s23 + 1/2*denom(1/2*s12)*mt^4*s12*s24^2 + denom(1/2*s12)*mt^4*s12*
      s23*s24 + denom(1/2*s12)*mt^4*s12*s14*s24 + 1/2*denom(1/2*s12)*mt^4*s12*
      s14*s23 - 1/2*denom(1/2*s12)*mt^4*mh^2*s24^2 - denom(1/2*s12)*mt^4*mh^2*
      s23*s24 - denom(1/2*s12)*mt^4*mh^2*s14*s24 - 1/2*denom(1/2*s12)*mt^4*
      mh^2*s14*s23 - 5/2*denom(1/2*s12)*mt^6*s24^2 - 11/2*denom(1/2*s12)*mt^6*
      s23*s24 - denom(1/2*s12)*mt^6*s23^2 - 4*denom(1/2*s12)*mt^6*s14*s24 - 3*
      denom(1/2*s12)*mt^6*s14*s23 - 1/2*denom(1/2*s12)*mt^6*s14^2 - 2*denom(1/
      2*s12)*mt^6*s13*s24 - denom(1/2*s12)*mt^6*s13*s23 - 1/2*denom(1/2*s12)*
      mt^6*s13*s14 - denom(1/2*s12)*mt^6*s12*s24 - 1/2*denom(1/2*s12)*mt^6*s12
      *s23 - 1/2*denom(1/2*s12)*mt^6*s12*s14 + denom(1/2*s12)*mt^6*mh^2*s24 + 
      1/2*denom(1/2*s12)*mt^6*mh^2*s23 + 1/2*denom(1/2*s12)*mt^6*mh^2*s14 + 4*
      denom(1/2*s12)*mt^8*s24 + 3*denom(1/2*s12)*mt^8*s23 + 2*denom(1/2*s12)*
      mt^8*s14 + denom(1/2*s12)*mt^8*s13 + 1/2*denom(1/2*s12)*mt^8*s12 - 1/2*
      denom(1/2*s12)*mt^8*mh^2 - 2*denom(1/2*s12)*mt^10 + 1/4*denom(1/4*s12^2)
      *s14^2*s23^2*s24^2 + 1/4*denom(1/4*s12^2)*s13*s14*s23*s24^3 - 1/4*denom(
      1/4*s12^2)*mt^2*s14*s23*s24^3 - 1/2*denom(1/4*s12^2)*mt^2*s14*s23^2*
      s24^2 - 1/2*denom(1/4*s12^2)*mt^2*s14^2*s23*s24^2 - 1/2*denom(1/4*s12^2)
      *mt^2*s14^2*s23^2*s24 - 1/4*denom(1/4*s12^2)*mt^2*s13*s23*s24^3 - 1/4*
      denom(1/4*s12^2)*mt^2*s13*s14*s24^3 - 3/4*denom(1/4*s12^2)*mt^2*s13*s14*
      s23*s24^2 + 1/4*denom(1/4*s12^2)*mt^4*s23*s24^3 + 1/4*denom(1/4*s12^2)*
      mt^4*s23^2*s24^2 + 1/4*denom(1/4*s12^2)*mt^4*s14*s24^3 + 7/4*denom(1/4*
      s12^2)*mt^4*s14*s23*s24^2 + denom(1/4*s12^2)*mt^4*s14*s23^2*s24 + 1/4*
      denom(1/4*s12^2)*mt^4*s14^2*s24^2 + denom(1/4*s12^2)*mt^4*s14^2*s23*s24
       + 1/4*denom(1/4*s12^2)*mt^4*s14^2*s23^2 + 1/4*denom(1/4*s12^2)*mt^4*s13
      *s24^3 + 3/4*denom(1/4*s12^2)*mt^4*s13*s23*s24^2 + 3/4*denom(1/4*s12^2)*
      mt^4*s13*s14*s24^2 + 3/4*denom(1/4*s12^2)*mt^4*s13*s14*s23*s24 - 1/4*
      denom(1/4*s12^2)*mt^6*s24^3 - 5/4*denom(1/4*s12^2)*mt^6*s23*s24^2 - 1/2*
      denom(1/4*s12^2)*mt^6*s23^2*s24 - 5/4*denom(1/4*s12^2)*mt^6*s14*s24^2 - 
      11/4*denom(1/4*s12^2)*mt^6*s14*s23*s24 - 1/2*denom(1/4*s12^2)*mt^6*s14*
      s23^2 - 1/2*denom(1/4*s12^2)*mt^6*s14^2*s24 - 1/2*denom(1/4*s12^2)*mt^6*
      s14^2*s23 - 3/4*denom(1/4*s12^2)*mt^6*s13*s24^2 - 3/4*denom(1/4*s12^2)*
      mt^6*s13*s23*s24 - 3/4*denom(1/4*s12^2)*mt^6*s13*s14*s24 - 1/4*denom(1/4
      *s12^2)*mt^6*s13*s14*s23 + denom(1/4*s12^2)*mt^8*s24^2 + 7/4*denom(1/4*
      s12^2)*mt^8*s23*s24 + 1/4*denom(1/4*s12^2)*mt^8*s23^2 + 7/4*denom(1/4*
      s12^2)*mt^8*s14*s24 + 5/4*denom(1/4*s12^2)*mt^8*s14*s23 + 1/4*denom(1/4*
      s12^2)*mt^8*s14^2 + 3/4*denom(1/4*s12^2)*mt^8*s13*s24 + 1/4*denom(1/4*
      s12^2)*mt^8*s13*s23 + 1/4*denom(1/4*s12^2)*mt^8*s13*s14 - 5/4*denom(1/4*
      s12^2)*mt^10*s24 - 3/4*denom(1/4*s12^2)*mt^10*s23 - 3/4*denom(1/4*s12^2)
      *mt^10*s14 - 1/4*denom(1/4*s12^2)*mt^10*s13 + 1/2*denom(1/4*s12^2)*mt^12
      ;
 
 .sort
id KMatrix(12,12) =  2*mt^4*s23*s24 - 2*mt^6*s24 - 2*mt^6*s23 + 2*mt^8 - 2*
      denom(1/2*s12)*mt^2*s14*s23*s24^2 + 2*denom(1/2*s12)*mt^4*s23*s24^2 + 2*
      denom(1/2*s12)*mt^4*s14*s24^2 + 4*denom(1/2*s12)*mt^4*s14*s23*s24 - 2*
      denom(1/2*s12)*mt^6*s24^2 - 4*denom(1/2*s12)*mt^6*s23*s24 - 4*denom(1/2*
      s12)*mt^6*s14*s24 - 2*denom(1/2*s12)*mt^6*s14*s23 + 4*denom(1/2*s12)*
      mt^8*s24 + 2*denom(1/2*s12)*mt^8*s23 + 2*denom(1/2*s12)*mt^8*s14 - 2*
      denom(1/2*s12)*mt^10 + 1/2*denom(1/4*s12^2)*s14^2*s23*s24^3 - denom(1/4*
      s12^2)*mt^2*s14*s23*s24^3 - 1/2*denom(1/4*s12^2)*mt^2*s14^2*s24^3 - 3/2*
      denom(1/4*s12^2)*mt^2*s14^2*s23*s24^2 + 1/2*denom(1/4*s12^2)*mt^4*s23*
      s24^3 + denom(1/4*s12^2)*mt^4*s14*s24^3 + 3*denom(1/4*s12^2)*mt^4*s14*
      s23*s24^2 + 3/2*denom(1/4*s12^2)*mt^4*s14^2*s24^2 + 3/2*denom(1/4*s12^2)
      *mt^4*s14^2*s23*s24 - 1/2*denom(1/4*s12^2)*mt^6*s24^3 - 3/2*denom(1/4*
      s12^2)*mt^6*s23*s24^2 - 3*denom(1/4*s12^2)*mt^6*s14*s24^2 - 3*denom(1/4*
      s12^2)*mt^6*s14*s23*s24 - 3/2*denom(1/4*s12^2)*mt^6*s14^2*s24 - 1/2*
      denom(1/4*s12^2)*mt^6*s14^2*s23 + 3/2*denom(1/4*s12^2)*mt^8*s24^2 + 3/2*
      denom(1/4*s12^2)*mt^8*s23*s24 + 3*denom(1/4*s12^2)*mt^8*s14*s24 + denom(
      1/4*s12^2)*mt^8*s14*s23 + 1/2*denom(1/4*s12^2)*mt^8*s14^2 - 3/2*denom(1/
      4*s12^2)*mt^10*s24 - 1/2*denom(1/4*s12^2)*mt^10*s23 - denom(1/4*s12^2)*
      mt^10*s14 + 1/2*denom(1/4*s12^2)*mt^12;
 
 .sort
id KMatrix(12,13) =   - 1/2*mt*s12*s23*s24^2 - mt*s12*s23^2*s24 - 1/2*mt*s12*
      s23^3 - mt*s12*s14*s23*s24 - mt*s12*s14*s23^2 - 1/2*mt*s12*s14^2*s23 - 
      mt*s12*s13*s23*s24 - mt*s12*s13*s23^2 - mt*s12*s13*s14*s23 - 1/2*mt*s12*
      s13^2*s23 - mt*s12^2*s23*s24 - mt*s12^2*s23^2 - mt*s12^2*s14*s23 - mt*
      s12^2*s13*s23 - 1/2*mt*s12^3*s23 + mt*mh^2*s12*s23*s24 + mt*mh^2*s12*
      s23^2 + mt*mh^2*s12*s14*s23 + mt*mh^2*s12*s13*s23 + mt*mh^2*s12^2*s23 - 
      1/2*mt*mh^4*s12*s23 + 1/2*mt^3*s12*s24^2 + 3*mt^3*s12*s23*s24 + 5/2*mt^3
      *s12*s23^2 + mt^3*s12*s14*s24 + 3*mt^3*s12*s14*s23 + 1/2*mt^3*s12*s14^2
       + mt^3*s12*s13*s24 + 3*mt^3*s12*s13*s23 + mt^3*s12*s13*s14 + 1/2*mt^3*
      s12*s13^2 + mt^3*s12^2*s24 + 3*mt^3*s12^2*s23 + mt^3*s12^2*s14 + mt^3*
      s12^2*s13 + 1/2*mt^3*s12^3 - mt^3*mh^2*s12*s24 - 3*mt^3*mh^2*s12*s23 - 
      mt^3*mh^2*s12*s14 - mt^3*mh^2*s12*s13 - mt^3*mh^2*s12^2 + 1/2*mt^3*mh^4*
      s12 - 2*mt^5*s12*s24 - 4*mt^5*s12*s23 - 2*mt^5*s12*s14 - 2*mt^5*s12*s13
       - 2*mt^5*s12^2 + 2*mt^5*mh^2*s12 + 2*mt^7*s12 - 1/2*denom(1/2*s12)*mt*
      s12*s14*s23^2*s24 - 1/2*denom(1/2*s12)*mt*s12*s14*s23^3 - 1/2*denom(1/2*
      s12)*mt*s12*s14^2*s23^2 - 1/2*denom(1/2*s12)*mt*s12*s13*s23*s24^2 - 1/2*
      denom(1/2*s12)*mt*s12*s13*s23^2*s24 - 1/2*denom(1/2*s12)*mt*s12*s13*s14*
      s23*s24 - 1/2*denom(1/2*s12)*mt*s12*s13*s14*s23^2 - 1/2*denom(1/2*s12)*
      mt*s12*s13^2*s23*s24 - 1/2*denom(1/2*s12)*mt*s12^2*s14*s23^2 - 1/2*
      denom(1/2*s12)*mt*s12^2*s13*s23*s24 + 1/2*denom(1/2*s12)*mt*mh^2*s12*s14
      *s23^2 + 1/2*denom(1/2*s12)*mt*mh^2*s12*s13*s23*s24 + 1/2*denom(1/2*s12)
      *mt^3*s12*s23*s24^2 + denom(1/2*s12)*mt^3*s12*s23^2*s24 + 1/2*denom(1/2*
      s12)*mt^3*s12*s23^3 + 3/2*denom(1/2*s12)*mt^3*s12*s14*s23*s24 + 5/2*
      denom(1/2*s12)*mt^3*s12*s14*s23^2 + denom(1/2*s12)*mt^3*s12*s14^2*s23 + 
      1/2*denom(1/2*s12)*mt^3*s12*s13*s24^2 + 5/2*denom(1/2*s12)*mt^3*s12*s13*
      s23*s24 + denom(1/2*s12)*mt^3*s12*s13*s23^2 + 1/2*denom(1/2*s12)*mt^3*
      s12*s13*s14*s24 + 3/2*denom(1/2*s12)*mt^3*s12*s13*s14*s23 + 1/2*denom(1/
      2*s12)*mt^3*s12*s13^2*s24 + 1/2*denom(1/2*s12)*mt^3*s12*s13^2*s23 + 1/2*
      denom(1/2*s12)*mt^3*s12^2*s23*s24 + 1/2*denom(1/2*s12)*mt^3*s12^2*s23^2
       + denom(1/2*s12)*mt^3*s12^2*s14*s23 + 1/2*denom(1/2*s12)*mt^3*s12^2*s13
      *s24 + 1/2*denom(1/2*s12)*mt^3*s12^2*s13*s23 - 1/2*denom(1/2*s12)*mt^3*
      mh^2*s12*s23*s24 - 1/2*denom(1/2*s12)*mt^3*mh^2*s12*s23^2 - denom(1/2*
      s12)*mt^3*mh^2*s12*s14*s23 - 1/2*denom(1/2*s12)*mt^3*mh^2*s12*s13*s24 - 
      1/2*denom(1/2*s12)*mt^3*mh^2*s12*s13*s23 - 1/2*denom(1/2*s12)*mt^5*s12*
      s24^2 - 3*denom(1/2*s12)*mt^5*s12*s23*s24 - 5/2*denom(1/2*s12)*mt^5*s12*
      s23^2 - denom(1/2*s12)*mt^5*s12*s14*s24 - 4*denom(1/2*s12)*mt^5*s12*s14*
      s23 - 1/2*denom(1/2*s12)*mt^5*s12*s14^2 - 2*denom(1/2*s12)*mt^5*s12*s13*
      s24 - 3*denom(1/2*s12)*mt^5*s12*s13*s23 - denom(1/2*s12)*mt^5*s12*s13*
      s14 - 1/2*denom(1/2*s12)*mt^5*s12*s13^2 - 1/2*denom(1/2*s12)*mt^5*s12^2*
      s24 - 3/2*denom(1/2*s12)*mt^5*s12^2*s23 - 1/2*denom(1/2*s12)*mt^5*s12^2*
      s14 - 1/2*denom(1/2*s12)*mt^5*s12^2*s13 + 1/2*denom(1/2*s12)*mt^5*mh^2*
      s12*s24 + 3/2*denom(1/2*s12)*mt^5*mh^2*s12*s23 + 1/2*denom(1/2*s12)*mt^5
      *mh^2*s12*s14 + 1/2*denom(1/2*s12)*mt^5*mh^2*s12*s13 + 2*denom(1/2*s12)*
      mt^7*s12*s24 + 4*denom(1/2*s12)*mt^7*s12*s23 + 2*denom(1/2*s12)*mt^7*s12
      *s14 + 2*denom(1/2*s12)*mt^7*s12*s13 + denom(1/2*s12)*mt^7*s12^2 - 
      denom(1/2*s12)*mt^7*mh^2*s12 - 2*denom(1/2*s12)*mt^9*s12 - 1/8*denom(1/4
      *s12^2)*mt*s12*s14^2*s23^3 - 1/4*denom(1/4*s12^2)*mt*s12*s13*s14*s23^2*
      s24 - 1/8*denom(1/4*s12^2)*mt*s12*s13^2*s23*s24^2 + 1/4*denom(1/4*s12^2)
      *mt^3*s12*s14*s23^2*s24 + 1/4*denom(1/4*s12^2)*mt^3*s12*s14*s23^3 + 3/8*
      denom(1/4*s12^2)*mt^3*s12*s14^2*s23^2 + 1/4*denom(1/4*s12^2)*mt^3*s12*
      s13*s23*s24^2 + 1/4*denom(1/4*s12^2)*mt^3*s12*s13*s23^2*s24 + 1/2*denom(
      1/4*s12^2)*mt^3*s12*s13*s14*s23*s24 + 1/4*denom(1/4*s12^2)*mt^3*s12*s13*
      s14*s23^2 + 1/8*denom(1/4*s12^2)*mt^3*s12*s13^2*s24^2 + 1/4*denom(1/4*
      s12^2)*mt^3*s12*s13^2*s23*s24 - 1/8*denom(1/4*s12^2)*mt^5*s12*s23*s24^2
       - 1/4*denom(1/4*s12^2)*mt^5*s12*s23^2*s24 - 1/8*denom(1/4*s12^2)*mt^5*
      s12*s23^3 - 1/2*denom(1/4*s12^2)*mt^5*s12*s14*s23*s24 - denom(1/4*s12^2)
      *mt^5*s12*s14*s23^2 - 3/8*denom(1/4*s12^2)*mt^5*s12*s14^2*s23 - 1/4*
      denom(1/4*s12^2)*mt^5*s12*s13*s24^2 - denom(1/4*s12^2)*mt^5*s12*s13*s23*
      s24 - 1/4*denom(1/4*s12^2)*mt^5*s12*s13*s23^2 - 1/4*denom(1/4*s12^2)*
      mt^5*s12*s13*s14*s24 - 1/2*denom(1/4*s12^2)*mt^5*s12*s13*s14*s23 - 1/4*
      denom(1/4*s12^2)*mt^5*s12*s13^2*s24 - 1/8*denom(1/4*s12^2)*mt^5*s12*
      s13^2*s23 + 1/8*denom(1/4*s12^2)*mt^7*s12*s24^2 + 3/4*denom(1/4*s12^2)*
      mt^7*s12*s23*s24 + 5/8*denom(1/4*s12^2)*mt^7*s12*s23^2 + 1/4*denom(1/4*
      s12^2)*mt^7*s12*s14*s24 + 5/4*denom(1/4*s12^2)*mt^7*s12*s14*s23 + 1/8*
      denom(1/4*s12^2)*mt^7*s12*s14^2 + 3/4*denom(1/4*s12^2)*mt^7*s12*s13*s24
       + 3/4*denom(1/4*s12^2)*mt^7*s12*s13*s23 + 1/4*denom(1/4*s12^2)*mt^7*s12
      *s13*s14 + 1/8*denom(1/4*s12^2)*mt^7*s12*s13^2 - 1/2*denom(1/4*s12^2)*
      mt^9*s12*s24 - denom(1/4*s12^2)*mt^9*s12*s23 - 1/2*denom(1/4*s12^2)*mt^9
      *s12*s14 - 1/2*denom(1/4*s12^2)*mt^9*s12*s13 + 1/2*denom(1/4*s12^2)*
      mt^11*s12;
 
 .sort
id KMatrix(12,14) =  mt^3*s12*s23*s24 + mt^3*s12*s23^2 + mt^3*s12*s14*s23 + 
      mt^3*s12*s13*s23 + mt^3*s12^2*s23 - mt^3*mh^2*s12*s23 - mt^5*s12*s24 - 3
      *mt^5*s12*s23 - mt^5*s12*s14 - mt^5*s12*s13 - mt^5*s12^2 + mt^5*mh^2*s12
       + 2*mt^7*s12 - 1/2*denom(1/2*s12)*mt*s12*s14*s23*s24^2 - 1/2*denom(1/2*
      s12)*mt*s12*s14*s23^2*s24 - 1/2*denom(1/2*s12)*mt*s12*s14^2*s23*s24 - 1/
      2*denom(1/2*s12)*mt*s12*s13*s14*s23*s24 - 1/2*denom(1/2*s12)*mt*s12^2*
      s14*s23*s24 + 1/2*denom(1/2*s12)*mt*mh^2*s12*s14*s23*s24 + 1/2*denom(1/2
      *s12)*mt^3*s12*s23*s24^2 + 1/2*denom(1/2*s12)*mt^3*s12*s23^2*s24 + 1/2*
      denom(1/2*s12)*mt^3*s12*s14*s24^2 + 5/2*denom(1/2*s12)*mt^3*s12*s14*s23*
      s24 + denom(1/2*s12)*mt^3*s12*s14*s23^2 + 1/2*denom(1/2*s12)*mt^3*s12*
      s14^2*s24 + 1/2*denom(1/2*s12)*mt^3*s12*s14^2*s23 + denom(1/2*s12)*mt^3*
      s12*s13*s23*s24 + 1/2*denom(1/2*s12)*mt^3*s12*s13*s14*s24 + 1/2*denom(1/
      2*s12)*mt^3*s12*s13*s14*s23 + 1/2*denom(1/2*s12)*mt^3*s12^2*s23*s24 + 1/
      2*denom(1/2*s12)*mt^3*s12^2*s14*s24 + 1/2*denom(1/2*s12)*mt^3*s12^2*s14*
      s23 - 1/2*denom(1/2*s12)*mt^3*mh^2*s12*s23*s24 - 1/2*denom(1/2*s12)*mt^3
      *mh^2*s12*s14*s24 - 1/2*denom(1/2*s12)*mt^3*mh^2*s12*s14*s23 - 1/2*
      denom(1/2*s12)*mt^5*s12*s24^2 - 5/2*denom(1/2*s12)*mt^5*s12*s23*s24 - 
      denom(1/2*s12)*mt^5*s12*s23^2 - 2*denom(1/2*s12)*mt^5*s12*s14*s24 - 3*
      denom(1/2*s12)*mt^5*s12*s14*s23 - 1/2*denom(1/2*s12)*mt^5*s12*s14^2 - 
      denom(1/2*s12)*mt^5*s12*s13*s24 - denom(1/2*s12)*mt^5*s12*s13*s23 - 1/2*
      denom(1/2*s12)*mt^5*s12*s13*s14 - 1/2*denom(1/2*s12)*mt^5*s12^2*s24 - 1/
      2*denom(1/2*s12)*mt^5*s12^2*s23 - 1/2*denom(1/2*s12)*mt^5*s12^2*s14 + 1/
      2*denom(1/2*s12)*mt^5*mh^2*s12*s24 + 1/2*denom(1/2*s12)*mt^5*mh^2*s12*
      s23 + 1/2*denom(1/2*s12)*mt^5*mh^2*s12*s14 + 2*denom(1/2*s12)*mt^7*s12*
      s24 + 3*denom(1/2*s12)*mt^7*s12*s23 + 2*denom(1/2*s12)*mt^7*s12*s14 + 
      denom(1/2*s12)*mt^7*s12*s13 + 1/2*denom(1/2*s12)*mt^7*s12^2 - 1/2*denom(
      1/2*s12)*mt^7*mh^2*s12 - 2*denom(1/2*s12)*mt^9*s12 - 1/4*denom(1/4*s12^2
      )*mt*s12*s14^2*s23^2*s24 - 1/4*denom(1/4*s12^2)*mt*s12*s13*s14*s23*s24^2
       + 1/4*denom(1/4*s12^2)*mt^3*s12*s14*s23*s24^2 + 1/2*denom(1/4*s12^2)*
      mt^3*s12*s14*s23^2*s24 + 1/2*denom(1/4*s12^2)*mt^3*s12*s14^2*s23*s24 + 1/
      4*denom(1/4*s12^2)*mt^3*s12*s14^2*s23^2 + 1/4*denom(1/4*s12^2)*mt^3*s12*
      s13*s23*s24^2 + 1/4*denom(1/4*s12^2)*mt^3*s12*s13*s14*s24^2 + 1/2*denom(
      1/4*s12^2)*mt^3*s12*s13*s14*s23*s24 - 1/4*denom(1/4*s12^2)*mt^5*s12*s23*
      s24^2 - 1/4*denom(1/4*s12^2)*mt^5*s12*s23^2*s24 - 1/4*denom(1/4*s12^2)*
      mt^5*s12*s14*s24^2 - 3/2*denom(1/4*s12^2)*mt^5*s12*s14*s23*s24 - 1/2*
      denom(1/4*s12^2)*mt^5*s12*s14*s23^2 - 1/4*denom(1/4*s12^2)*mt^5*s12*
      s14^2*s24 - 1/2*denom(1/4*s12^2)*mt^5*s12*s14^2*s23 - 1/4*denom(1/4*
      s12^2)*mt^5*s12*s13*s24^2 - 1/2*denom(1/4*s12^2)*mt^5*s12*s13*s23*s24 - 
      1/2*denom(1/4*s12^2)*mt^5*s12*s13*s14*s24 - 1/4*denom(1/4*s12^2)*mt^5*
      s12*s13*s14*s23 + 1/4*denom(1/4*s12^2)*mt^7*s12*s24^2 + denom(1/4*s12^2)
      *mt^7*s12*s23*s24 + 1/4*denom(1/4*s12^2)*mt^7*s12*s23^2 + denom(1/4*
      s12^2)*mt^7*s12*s14*s24 + 5/4*denom(1/4*s12^2)*mt^7*s12*s14*s23 + 1/4*
      denom(1/4*s12^2)*mt^7*s12*s14^2 + 1/2*denom(1/4*s12^2)*mt^7*s12*s13*s24
       + 1/4*denom(1/4*s12^2)*mt^7*s12*s13*s23 + 1/4*denom(1/4*s12^2)*mt^7*s12
      *s13*s14 - 3/4*denom(1/4*s12^2)*mt^9*s12*s24 - 3/4*denom(1/4*s12^2)*mt^9
      *s12*s23 - 3/4*denom(1/4*s12^2)*mt^9*s12*s14 - 1/4*denom(1/4*s12^2)*mt^9
      *s12*s13 + 1/2*denom(1/4*s12^2)*mt^11*s12;
 
 .sort
id KMatrix(12,15) =  mt^3*s12*s23*s24 + mt^3*s12*s23^2 + mt^3*s12*s14*s23 + 
      mt^3*s12*s13*s23 + mt^3*s12^2*s23 - mt^3*mh^2*s12*s23 - mt^5*s12*s24 - 3
      *mt^5*s12*s23 - mt^5*s12*s14 - mt^5*s12*s13 - mt^5*s12^2 + mt^5*mh^2*s12
       + 2*mt^7*s12 - 1/2*denom(1/2*s12)*mt*s12*s14*s23*s24^2 - 1/2*denom(1/2*
      s12)*mt*s12*s14*s23^2*s24 - 1/2*denom(1/2*s12)*mt*s12*s14^2*s23*s24 - 1/
      2*denom(1/2*s12)*mt*s12*s13*s14*s23*s24 - 1/2*denom(1/2*s12)*mt*s12^2*
      s14*s23*s24 + 1/2*denom(1/2*s12)*mt*mh^2*s12*s14*s23*s24 + 1/2*denom(1/2
      *s12)*mt^3*s12*s23*s24^2 + 1/2*denom(1/2*s12)*mt^3*s12*s23^2*s24 + 1/2*
      denom(1/2*s12)*mt^3*s12*s14*s24^2 + 5/2*denom(1/2*s12)*mt^3*s12*s14*s23*
      s24 + denom(1/2*s12)*mt^3*s12*s14*s23^2 + 1/2*denom(1/2*s12)*mt^3*s12*
      s14^2*s24 + 1/2*denom(1/2*s12)*mt^3*s12*s14^2*s23 + denom(1/2*s12)*mt^3*
      s12*s13*s23*s24 + 1/2*denom(1/2*s12)*mt^3*s12*s13*s14*s24 + 1/2*denom(1/
      2*s12)*mt^3*s12*s13*s14*s23 + 1/2*denom(1/2*s12)*mt^3*s12^2*s23*s24 + 1/
      2*denom(1/2*s12)*mt^3*s12^2*s14*s24 + 1/2*denom(1/2*s12)*mt^3*s12^2*s14*
      s23 - 1/2*denom(1/2*s12)*mt^3*mh^2*s12*s23*s24 - 1/2*denom(1/2*s12)*mt^3
      *mh^2*s12*s14*s24 - 1/2*denom(1/2*s12)*mt^3*mh^2*s12*s14*s23 - 1/2*
      denom(1/2*s12)*mt^5*s12*s24^2 - 5/2*denom(1/2*s12)*mt^5*s12*s23*s24 - 
      denom(1/2*s12)*mt^5*s12*s23^2 - 2*denom(1/2*s12)*mt^5*s12*s14*s24 - 3*
      denom(1/2*s12)*mt^5*s12*s14*s23 - 1/2*denom(1/2*s12)*mt^5*s12*s14^2 - 
      denom(1/2*s12)*mt^5*s12*s13*s24 - denom(1/2*s12)*mt^5*s12*s13*s23 - 1/2*
      denom(1/2*s12)*mt^5*s12*s13*s14 - 1/2*denom(1/2*s12)*mt^5*s12^2*s24 - 1/
      2*denom(1/2*s12)*mt^5*s12^2*s23 - 1/2*denom(1/2*s12)*mt^5*s12^2*s14 + 1/
      2*denom(1/2*s12)*mt^5*mh^2*s12*s24 + 1/2*denom(1/2*s12)*mt^5*mh^2*s12*
      s23 + 1/2*denom(1/2*s12)*mt^5*mh^2*s12*s14 + 2*denom(1/2*s12)*mt^7*s12*
      s24 + 3*denom(1/2*s12)*mt^7*s12*s23 + 2*denom(1/2*s12)*mt^7*s12*s14 + 
      denom(1/2*s12)*mt^7*s12*s13 + 1/2*denom(1/2*s12)*mt^7*s12^2 - 1/2*denom(
      1/2*s12)*mt^7*mh^2*s12 - 2*denom(1/2*s12)*mt^9*s12 - 1/4*denom(1/4*s12^2
      )*mt*s12*s14^2*s23^2*s24 - 1/4*denom(1/4*s12^2)*mt*s12*s13*s14*s23*s24^2
       + 1/4*denom(1/4*s12^2)*mt^3*s12*s14*s23*s24^2 + 1/2*denom(1/4*s12^2)*
      mt^3*s12*s14*s23^2*s24 + 1/2*denom(1/4*s12^2)*mt^3*s12*s14^2*s23*s24 + 1/
      4*denom(1/4*s12^2)*mt^3*s12*s14^2*s23^2 + 1/4*denom(1/4*s12^2)*mt^3*s12*
      s13*s23*s24^2 + 1/4*denom(1/4*s12^2)*mt^3*s12*s13*s14*s24^2 + 1/2*denom(
      1/4*s12^2)*mt^3*s12*s13*s14*s23*s24 - 1/4*denom(1/4*s12^2)*mt^5*s12*s23*
      s24^2 - 1/4*denom(1/4*s12^2)*mt^5*s12*s23^2*s24 - 1/4*denom(1/4*s12^2)*
      mt^5*s12*s14*s24^2 - 3/2*denom(1/4*s12^2)*mt^5*s12*s14*s23*s24 - 1/2*
      denom(1/4*s12^2)*mt^5*s12*s14*s23^2 - 1/4*denom(1/4*s12^2)*mt^5*s12*
      s14^2*s24 - 1/2*denom(1/4*s12^2)*mt^5*s12*s14^2*s23 - 1/4*denom(1/4*
      s12^2)*mt^5*s12*s13*s24^2 - 1/2*denom(1/4*s12^2)*mt^5*s12*s13*s23*s24 - 
      1/2*denom(1/4*s12^2)*mt^5*s12*s13*s14*s24 - 1/4*denom(1/4*s12^2)*mt^5*
      s12*s13*s14*s23 + 1/4*denom(1/4*s12^2)*mt^7*s12*s24^2 + denom(1/4*s12^2)
      *mt^7*s12*s23*s24 + 1/4*denom(1/4*s12^2)*mt^7*s12*s23^2 + denom(1/4*
      s12^2)*mt^7*s12*s14*s24 + 5/4*denom(1/4*s12^2)*mt^7*s12*s14*s23 + 1/4*
      denom(1/4*s12^2)*mt^7*s12*s14^2 + 1/2*denom(1/4*s12^2)*mt^7*s12*s13*s24
       + 1/4*denom(1/4*s12^2)*mt^7*s12*s13*s23 + 1/4*denom(1/4*s12^2)*mt^7*s12
      *s13*s14 - 3/4*denom(1/4*s12^2)*mt^9*s12*s24 - 3/4*denom(1/4*s12^2)*mt^9
      *s12*s23 - 3/4*denom(1/4*s12^2)*mt^9*s12*s14 - 1/4*denom(1/4*s12^2)*mt^9
      *s12*s13 + 1/2*denom(1/4*s12^2)*mt^11*s12;
 
 .sort
id KMatrix(12,16) =   - 2*mt^5*s12*s23 + 2*mt^7*s12 + 2*denom(1/2*s12)*mt^3*
      s12*s14*s23*s24 - 2*denom(1/2*s12)*mt^5*s12*s23*s24 - 2*denom(1/2*s12)*
      mt^5*s12*s14*s24 - 2*denom(1/2*s12)*mt^5*s12*s14*s23 + 2*denom(1/2*s12)*
      mt^7*s12*s24 + 2*denom(1/2*s12)*mt^7*s12*s23 + 2*denom(1/2*s12)*mt^7*s12
      *s14 - 2*denom(1/2*s12)*mt^9*s12 - 1/2*denom(1/4*s12^2)*mt*s12*s14^2*s23
      *s24^2 + denom(1/4*s12^2)*mt^3*s12*s14*s23*s24^2 + 1/2*denom(1/4*s12^2)*
      mt^3*s12*s14^2*s24^2 + denom(1/4*s12^2)*mt^3*s12*s14^2*s23*s24 - 1/2*
      denom(1/4*s12^2)*mt^5*s12*s23*s24^2 - denom(1/4*s12^2)*mt^5*s12*s14*
      s24^2 - 2*denom(1/4*s12^2)*mt^5*s12*s14*s23*s24 - denom(1/4*s12^2)*mt^5*
      s12*s14^2*s24 - 1/2*denom(1/4*s12^2)*mt^5*s12*s14^2*s23 + 1/2*denom(1/4*
      s12^2)*mt^7*s12*s24^2 + denom(1/4*s12^2)*mt^7*s12*s23*s24 + 2*denom(1/4*
      s12^2)*mt^7*s12*s14*s24 + denom(1/4*s12^2)*mt^7*s12*s14*s23 + 1/2*denom(
      1/4*s12^2)*mt^7*s12*s14^2 - denom(1/4*s12^2)*mt^9*s12*s24 - 1/2*denom(1/
      4*s12^2)*mt^9*s12*s23 - denom(1/4*s12^2)*mt^9*s12*s14 + 1/2*denom(1/4*
      s12^2)*mt^11*s12;
 
 .sort
id KMatrix(12,17) =  2*mt^3*s24 - 2*mt^3*s23 - 2*denom(1/2*s12)*mt*s14*s24^2
       + 2*denom(1/2*s12)*mt*s14*s23*s24 + 2*denom(1/2*s12)*mt^3*s24^2 - 2*
      denom(1/2*s12)*mt^3*s23*s24 + 2*denom(1/2*s12)*mt^3*s14*s24 - 2*denom(1/
      2*s12)*mt^3*s14*s23 - 2*denom(1/2*s12)*mt^5*s24 + 2*denom(1/2*s12)*mt^5*
      s23 + 1/2*denom(1/4*s12^2)*mt*s12*s14*s24^2 - 1/2*denom(1/4*s12^2)*mt*
      s12*s14*s23*s24 - 1/2*denom(1/4*s12^2)*mt^3*s12*s24^2 + 1/2*denom(1/4*
      s12^2)*mt^3*s12*s23*s24 - 1/2*denom(1/4*s12^2)*mt^3*s12*s14*s24 + 1/2*
      denom(1/4*s12^2)*mt^3*s12*s14*s23 + 1/2*denom(1/4*s12^2)*mt^5*s12*s24 - 
      1/2*denom(1/4*s12^2)*mt^5*s12*s23;
 
 .sort
id KMatrix(12,18) =  mt^2*s14*s23 + mt^2*s13*s24 + mt^2*s12*s24 + mt^2*s12*s23
       + mt^2*s12*s14 + mt^2*s12*s13 + mt^2*s12^2 - mt^2*mh^2*s12 - mt^4*s24
       - mt^4*s23 - mt^4*s14 - mt^4*s13 - 4*mt^4*s12 + 2*mt^6 - denom(1/2*s12)
      *s14^2*s23*s24 - denom(1/2*s12)*s13*s14*s24^2 - denom(1/2*s12)*s12*s14*
      s24^2 - denom(1/2*s12)*s12*s14*s23*s24 - denom(1/2*s12)*s12*s14^2*s24 - 
      denom(1/2*s12)*s12*s13*s14*s24 - denom(1/2*s12)*s12^2*s14*s24 + denom(1/
      2*s12)*mh^2*s12*s14*s24 + denom(1/2*s12)*mt^2*s14*s24^2 + 2*denom(1/2*
      s12)*mt^2*s14*s23*s24 + denom(1/2*s12)*mt^2*s14^2*s24 + denom(1/2*s12)*
      mt^2*s14^2*s23 + denom(1/2*s12)*mt^2*s13*s24^2 + 2*denom(1/2*s12)*mt^2*
      s13*s14*s24 + denom(1/2*s12)*mt^2*s12*s24^2 + denom(1/2*s12)*mt^2*s12*
      s23*s24 + 6*denom(1/2*s12)*mt^2*s12*s14*s24 + denom(1/2*s12)*mt^2*s12*
      s14*s23 + denom(1/2*s12)*mt^2*s12*s14^2 + denom(1/2*s12)*mt^2*s12*s13*
      s24 + denom(1/2*s12)*mt^2*s12*s13*s14 + denom(1/2*s12)*mt^2*s12^2*s24 + 
      denom(1/2*s12)*mt^2*s12^2*s14 - denom(1/2*s12)*mt^2*mh^2*s12*s24 - 
      denom(1/2*s12)*mt^2*mh^2*s12*s14 - denom(1/2*s12)*mt^4*s24^2 - denom(1/2
      *s12)*mt^4*s23*s24 - 4*denom(1/2*s12)*mt^4*s14*s24 - 2*denom(1/2*s12)*
      mt^4*s14*s23 - denom(1/2*s12)*mt^4*s14^2 - 2*denom(1/2*s12)*mt^4*s13*s24
       - denom(1/2*s12)*mt^4*s13*s14 - 5*denom(1/2*s12)*mt^4*s12*s24 - denom(1/
      2*s12)*mt^4*s12*s23 - 5*denom(1/2*s12)*mt^4*s12*s14 - denom(1/2*s12)*
      mt^4*s12*s13 - denom(1/2*s12)*mt^4*s12^2 + denom(1/2*s12)*mt^4*mh^2*s12
       + 3*denom(1/2*s12)*mt^6*s24 + denom(1/2*s12)*mt^6*s23 + 3*denom(1/2*s12
      )*mt^6*s14 + denom(1/2*s12)*mt^6*s13 + 4*denom(1/2*s12)*mt^6*s12 - 2*
      denom(1/2*s12)*mt^8 + 1/4*denom(1/4*s12^2)*s12*s14^2*s23*s24 + 1/4*
      denom(1/4*s12^2)*s12*s13*s14*s24^2 + 1/4*denom(1/4*s12^2)*s12^2*s14*
      s24^2 + 1/4*denom(1/4*s12^2)*s12^2*s14*s23*s24 + 1/4*denom(1/4*s12^2)*
      s12^2*s14^2*s24 + 1/4*denom(1/4*s12^2)*s12^2*s13*s14*s24 + 1/4*denom(1/4
      *s12^2)*s12^3*s14*s24 - 1/4*denom(1/4*s12^2)*mh^2*s12^2*s14*s24 - 1/4*
      denom(1/4*s12^2)*mt^2*s12*s14*s24^2 - 1/2*denom(1/4*s12^2)*mt^2*s12*s14*
      s23*s24 - 1/4*denom(1/4*s12^2)*mt^2*s12*s14^2*s24 - 1/4*denom(1/4*s12^2)
      *mt^2*s12*s14^2*s23 - 1/4*denom(1/4*s12^2)*mt^2*s12*s13*s24^2 - 1/2*
      denom(1/4*s12^2)*mt^2*s12*s13*s14*s24 - 1/4*denom(1/4*s12^2)*mt^2*s12^2*
      s24^2 - 1/4*denom(1/4*s12^2)*mt^2*s12^2*s23*s24 - 3/2*denom(1/4*s12^2)*
      mt^2*s12^2*s14*s24 - 1/4*denom(1/4*s12^2)*mt^2*s12^2*s14*s23 - 1/4*
      denom(1/4*s12^2)*mt^2*s12^2*s14^2 - 1/4*denom(1/4*s12^2)*mt^2*s12^2*s13*
      s24 - 1/4*denom(1/4*s12^2)*mt^2*s12^2*s13*s14 - 1/4*denom(1/4*s12^2)*
      mt^2*s12^3*s24 - 1/4*denom(1/4*s12^2)*mt^2*s12^3*s14 + 1/4*denom(1/4*
      s12^2)*mt^2*mh^2*s12^2*s24 + 1/4*denom(1/4*s12^2)*mt^2*mh^2*s12^2*s14 + 
      1/4*denom(1/4*s12^2)*mt^4*s12*s24^2 + 1/4*denom(1/4*s12^2)*mt^4*s12*s23*
      s24 + denom(1/4*s12^2)*mt^4*s12*s14*s24 + 1/2*denom(1/4*s12^2)*mt^4*s12*
      s14*s23 + 1/4*denom(1/4*s12^2)*mt^4*s12*s14^2 + 1/2*denom(1/4*s12^2)*
      mt^4*s12*s13*s24 + 1/4*denom(1/4*s12^2)*mt^4*s12*s13*s14 + 5/4*denom(1/4
      *s12^2)*mt^4*s12^2*s24 + 1/4*denom(1/4*s12^2)*mt^4*s12^2*s23 + 5/4*
      denom(1/4*s12^2)*mt^4*s12^2*s14 + 1/4*denom(1/4*s12^2)*mt^4*s12^2*s13 + 
      1/4*denom(1/4*s12^2)*mt^4*s12^3 - 1/4*denom(1/4*s12^2)*mt^4*mh^2*s12^2
       - 3/4*denom(1/4*s12^2)*mt^6*s12*s24 - 1/4*denom(1/4*s12^2)*mt^6*s12*s23
       - 3/4*denom(1/4*s12^2)*mt^6*s12*s14 - 1/4*denom(1/4*s12^2)*mt^6*s12*s13
       - denom(1/4*s12^2)*mt^6*s12^2 + 1/2*denom(1/4*s12^2)*mt^8*s12;
 
 .sort
id KMatrix(12,19) =  2*mt^2*s23*s24 - 2*mt^4*s24 - 2*mt^4*s23 + 2*mt^6 - 2*
      denom(1/2*s12)*s14*s23*s24^2 + 2*denom(1/2*s12)*mt^2*s23*s24^2 + 2*
      denom(1/2*s12)*mt^2*s14*s24^2 + 4*denom(1/2*s12)*mt^2*s14*s23*s24 - 2*
      denom(1/2*s12)*mt^4*s24^2 - 4*denom(1/2*s12)*mt^4*s23*s24 - 4*denom(1/2*
      s12)*mt^4*s14*s24 - 2*denom(1/2*s12)*mt^4*s14*s23 + 4*denom(1/2*s12)*
      mt^6*s24 + 2*denom(1/2*s12)*mt^6*s23 + 2*denom(1/2*s12)*mt^6*s14 - 2*
      denom(1/2*s12)*mt^8 + 1/2*denom(1/4*s12^2)*s12*s14*s23*s24^2 - 1/2*
      denom(1/4*s12^2)*mt^2*s12*s23*s24^2 - 1/2*denom(1/4*s12^2)*mt^2*s12*s14*
      s24^2 - denom(1/4*s12^2)*mt^2*s12*s14*s23*s24 + 1/2*denom(1/4*s12^2)*
      mt^4*s12*s24^2 + denom(1/4*s12^2)*mt^4*s12*s23*s24 + denom(1/4*s12^2)*
      mt^4*s12*s14*s24 + 1/2*denom(1/4*s12^2)*mt^4*s12*s14*s23 - denom(1/4*
      s12^2)*mt^6*s12*s24 - 1/2*denom(1/4*s12^2)*mt^6*s12*s23 - 1/2*denom(1/4*
      s12^2)*mt^6*s12*s14 + 1/2*denom(1/4*s12^2)*mt^8*s12;
 
 .sort
id KMatrix(12,20) =  1/2*s24^3 + s23*s24^2 + 1/2*s23^2*s24 + s14*s24^2 + s14*
      s23*s24 + 1/2*s14^2*s24 + s13*s24^2 + s13*s23*s24 + s13*s14*s24 + 1/2*
      s13^2*s24 + s12*s24^2 + s12*s23*s24 + s12*s14*s24 + s12*s13*s24 + 1/2*
      s12^2*s24 - mh^2*s24^2 - mh^2*s23*s24 - mh^2*s14*s24 - mh^2*s13*s24 - 
      mh^2*s12*s24 + 1/2*mh^4*s24 - 5/2*mt^2*s24^2 - 4*mt^2*s23*s24 - 3/2*mt^2
      *s23^2 - 3*mt^2*s14*s24 - 2*mt^2*s14*s23 - 1/2*mt^2*s14^2 - 3*mt^2*s13*
      s24 - 2*mt^2*s13*s23 - mt^2*s13*s14 - 1/2*mt^2*s13^2 - 3*mt^2*s12*s24 - 
      2*mt^2*s12*s23 - mt^2*s12*s14 - mt^2*s12*s13 - 1/2*mt^2*s12^2 + 3*mt^2*
      mh^2*s24 + 2*mt^2*mh^2*s23 + mt^2*mh^2*s14 + mt^2*mh^2*s13 + mt^2*mh^2*
      s12 - 1/2*mt^2*mh^4 + 5*mt^4*s24 + 5*mt^4*s23 + 3*mt^4*s14 + 3*mt^4*s13
       + 3*mt^4*s12 - 3*mt^4*mh^2 - 4*mt^6 + denom(1/2*s12)*s14*s23*s24^2 + 
      denom(1/2*s12)*s14*s23^2*s24 + denom(1/2*s12)*s14^2*s23*s24 + 1/2*denom(
      1/2*s12)*s13*s24^3 + 1/2*denom(1/2*s12)*s13*s23*s24^2 + 1/2*denom(1/2*
      s12)*s13*s14*s24^2 + denom(1/2*s12)*s13*s14*s23*s24 + 1/2*denom(1/2*s12)
      *s13^2*s24^2 + denom(1/2*s12)*s12*s14*s23*s24 + 1/2*denom(1/2*s12)*s12*
      s13*s24^2 - denom(1/2*s12)*mh^2*s14*s23*s24 - 1/2*denom(1/2*s12)*mh^2*
      s13*s24^2 - 1/2*denom(1/2*s12)*mt^2*s24^3 - 3/2*denom(1/2*s12)*mt^2*s23*
      s24^2 - denom(1/2*s12)*mt^2*s23^2*s24 - 3/2*denom(1/2*s12)*mt^2*s14*
      s24^2 - 5*denom(1/2*s12)*mt^2*s14*s23*s24 - 3/2*denom(1/2*s12)*mt^2*s14*
      s23^2 - denom(1/2*s12)*mt^2*s14^2*s24 - denom(1/2*s12)*mt^2*s14^2*s23 - 
      5/2*denom(1/2*s12)*mt^2*s13*s24^2 - 5/2*denom(1/2*s12)*mt^2*s13*s23*s24
       - 2*denom(1/2*s12)*mt^2*s13*s14*s24 - denom(1/2*s12)*mt^2*s13*s14*s23
       - denom(1/2*s12)*mt^2*s13^2*s24 - 1/2*denom(1/2*s12)*mt^2*s12*s24^2 - 
      denom(1/2*s12)*mt^2*s12*s23*s24 - denom(1/2*s12)*mt^2*s12*s14*s24 - 
      denom(1/2*s12)*mt^2*s12*s14*s23 - denom(1/2*s12)*mt^2*s12*s13*s24 + 1/2*
      denom(1/2*s12)*mt^2*mh^2*s24^2 + denom(1/2*s12)*mt^2*mh^2*s23*s24 + 
      denom(1/2*s12)*mt^2*mh^2*s14*s24 + denom(1/2*s12)*mt^2*mh^2*s14*s23 + 
      denom(1/2*s12)*mt^2*mh^2*s13*s24 + 3*denom(1/2*s12)*mt^4*s24^2 + 11/2*
      denom(1/2*s12)*mt^4*s23*s24 + 3/2*denom(1/2*s12)*mt^4*s23^2 + 5*denom(1/
      2*s12)*mt^4*s14*s24 + 5*denom(1/2*s12)*mt^4*s14*s23 + denom(1/2*s12)*
      mt^4*s14^2 + 5*denom(1/2*s12)*mt^4*s13*s24 + 2*denom(1/2*s12)*mt^4*s13*
      s23 + 3/2*denom(1/2*s12)*mt^4*s13*s14 + 1/2*denom(1/2*s12)*mt^4*s13^2 + 
      2*denom(1/2*s12)*mt^4*s12*s24 + denom(1/2*s12)*mt^4*s12*s23 + denom(1/2*
      s12)*mt^4*s12*s14 + 1/2*denom(1/2*s12)*mt^4*s12*s13 - 2*denom(1/2*s12)*
      mt^4*mh^2*s24 - denom(1/2*s12)*mt^4*mh^2*s23 - denom(1/2*s12)*mt^4*mh^2*
      s14 - 1/2*denom(1/2*s12)*mt^4*mh^2*s13 - 6*denom(1/2*s12)*mt^6*s24 - 5*
      denom(1/2*s12)*mt^6*s23 - 4*denom(1/2*s12)*mt^6*s14 - 3*denom(1/2*s12)*
      mt^6*s13 - 3/2*denom(1/2*s12)*mt^6*s12 + 3/2*denom(1/2*s12)*mt^6*mh^2 + 
      4*denom(1/2*s12)*mt^8 + 3/8*denom(1/4*s12^2)*s14^2*s23^2*s24 + 1/2*
      denom(1/4*s12^2)*s13*s14*s23*s24^2 + 1/8*denom(1/4*s12^2)*s13^2*s24^3 - 
      1/2*denom(1/4*s12^2)*mt^2*s14*s23*s24^2 - 3/4*denom(1/4*s12^2)*mt^2*s14*
      s23^2*s24 - 3/4*denom(1/4*s12^2)*mt^2*s14^2*s23*s24 - 3/8*denom(1/4*
      s12^2)*mt^2*s14^2*s23^2 - 1/4*denom(1/4*s12^2)*mt^2*s13*s24^3 - 1/2*
      denom(1/4*s12^2)*mt^2*s13*s23*s24^2 - 1/2*denom(1/4*s12^2)*mt^2*s13*s14*
      s24^2 - denom(1/4*s12^2)*mt^2*s13*s14*s23*s24 - 3/8*denom(1/4*s12^2)*
      mt^2*s13^2*s24^2 + 1/8*denom(1/4*s12^2)*mt^4*s24^3 + 1/2*denom(1/4*s12^2
      )*mt^4*s23*s24^2 + 3/8*denom(1/4*s12^2)*mt^4*s23^2*s24 + 1/2*denom(1/4*
      s12^2)*mt^4*s14*s24^2 + 5/2*denom(1/4*s12^2)*mt^4*s14*s23*s24 + 3/4*
      denom(1/4*s12^2)*mt^4*s14*s23^2 + 3/8*denom(1/4*s12^2)*mt^4*s14^2*s24 + 
      3/4*denom(1/4*s12^2)*mt^4*s14^2*s23 + 5/4*denom(1/4*s12^2)*mt^4*s13*
      s24^2 + denom(1/4*s12^2)*mt^4*s13*s23*s24 + denom(1/4*s12^2)*mt^4*s13*
      s14*s24 + 1/2*denom(1/4*s12^2)*mt^4*s13*s14*s23 + 3/8*denom(1/4*s12^2)*
      mt^4*s13^2*s24 - 7/8*denom(1/4*s12^2)*mt^6*s24^2 - 7/4*denom(1/4*s12^2)*
      mt^6*s23*s24 - 3/8*denom(1/4*s12^2)*mt^6*s23^2 - 7/4*denom(1/4*s12^2)*
      mt^6*s14*s24 - 2*denom(1/4*s12^2)*mt^6*s14*s23 - 3/8*denom(1/4*s12^2)*
      mt^6*s14^2 - 7/4*denom(1/4*s12^2)*mt^6*s13*s24 - 1/2*denom(1/4*s12^2)*
      mt^6*s13*s23 - 1/2*denom(1/4*s12^2)*mt^6*s13*s14 - 1/8*denom(1/4*s12^2)*
      mt^6*s13^2 + 7/4*denom(1/4*s12^2)*mt^8*s24 + 5/4*denom(1/4*s12^2)*mt^8*
      s23 + 5/4*denom(1/4*s12^2)*mt^8*s14 + 3/4*denom(1/4*s12^2)*mt^8*s13 - 
      denom(1/4*s12^2)*mt^10;
 
 .sort
id KMatrix(12,21) =   - mt^2*s24^2 - mt^2*s23*s24 - mt^2*s14*s24 - mt^2*s13*
      s24 - mt^2*s12*s24 + mt^2*mh^2*s24 + 3*mt^4*s24 + 3*mt^4*s23 + mt^4*s14
       + mt^4*s13 + mt^4*s12 - mt^4*mh^2 - 4*mt^6 + 1/2*denom(1/2*s12)*s14*
      s24^3 + 1/2*denom(1/2*s12)*s14*s23*s24^2 + 1/2*denom(1/2*s12)*s14^2*
      s24^2 + 1/2*denom(1/2*s12)*s13*s14*s24^2 + 1/2*denom(1/2*s12)*s12*s14*
      s24^2 - 1/2*denom(1/2*s12)*mh^2*s14*s24^2 - 1/2*denom(1/2*s12)*mt^2*
      s24^3 - 1/2*denom(1/2*s12)*mt^2*s23*s24^2 - 5/2*denom(1/2*s12)*mt^2*s14*
      s24^2 - 7/2*denom(1/2*s12)*mt^2*s14*s23*s24 - denom(1/2*s12)*mt^2*s14^2*
      s24 - denom(1/2*s12)*mt^2*s13*s24^2 - denom(1/2*s12)*mt^2*s13*s14*s24 - 
      1/2*denom(1/2*s12)*mt^2*s12*s24^2 - denom(1/2*s12)*mt^2*s12*s14*s24 + 1/
      2*denom(1/2*s12)*mt^2*mh^2*s24^2 + denom(1/2*s12)*mt^2*mh^2*s14*s24 + 5/
      2*denom(1/2*s12)*mt^4*s24^2 + 7/2*denom(1/2*s12)*mt^4*s23*s24 + 6*denom(
      1/2*s12)*mt^4*s14*s24 + 3*denom(1/2*s12)*mt^4*s14*s23 + 1/2*denom(1/2*
      s12)*mt^4*s14^2 + 2*denom(1/2*s12)*mt^4*s13*s24 + 1/2*denom(1/2*s12)*
      mt^4*s13*s14 + denom(1/2*s12)*mt^4*s12*s24 + 1/2*denom(1/2*s12)*mt^4*s12
      *s14 - denom(1/2*s12)*mt^4*mh^2*s24 - 1/2*denom(1/2*s12)*mt^4*mh^2*s14
       - 6*denom(1/2*s12)*mt^6*s24 - 3*denom(1/2*s12)*mt^6*s23 - 4*denom(1/2*
      s12)*mt^6*s14 - denom(1/2*s12)*mt^6*s13 - 1/2*denom(1/2*s12)*mt^6*s12 + 
      1/2*denom(1/2*s12)*mt^6*mh^2 + 4*denom(1/2*s12)*mt^8 + 3/4*denom(1/4*
      s12^2)*s14^2*s23*s24^2 + 1/4*denom(1/4*s12^2)*s13*s14*s24^3 - 1/4*denom(
      1/4*s12^2)*mt^2*s14*s24^3 - 3/2*denom(1/4*s12^2)*mt^2*s14*s23*s24^2 - 3/
      4*denom(1/4*s12^2)*mt^2*s14^2*s24^2 - 3/2*denom(1/4*s12^2)*mt^2*s14^2*
      s23*s24 - 1/4*denom(1/4*s12^2)*mt^2*s13*s24^3 - 3/4*denom(1/4*s12^2)*
      mt^2*s13*s14*s24^2 + 1/4*denom(1/4*s12^2)*mt^4*s24^3 + 3/4*denom(1/4*
      s12^2)*mt^4*s23*s24^2 + 9/4*denom(1/4*s12^2)*mt^4*s14*s24^2 + 3*denom(1/
      4*s12^2)*mt^4*s14*s23*s24 + 3/2*denom(1/4*s12^2)*mt^4*s14^2*s24 + 3/4*
      denom(1/4*s12^2)*mt^4*s14^2*s23 + 3/4*denom(1/4*s12^2)*mt^4*s13*s24^2 + 
      3/4*denom(1/4*s12^2)*mt^4*s13*s14*s24 - 3/2*denom(1/4*s12^2)*mt^6*s24^2
       - 3/2*denom(1/4*s12^2)*mt^6*s23*s24 - 15/4*denom(1/4*s12^2)*mt^6*s14*
      s24 - 3/2*denom(1/4*s12^2)*mt^6*s14*s23 - 3/4*denom(1/4*s12^2)*mt^6*
      s14^2 - 3/4*denom(1/4*s12^2)*mt^6*s13*s24 - 1/4*denom(1/4*s12^2)*mt^6*
      s13*s14 + 9/4*denom(1/4*s12^2)*mt^8*s24 + 3/4*denom(1/4*s12^2)*mt^8*s23
       + 7/4*denom(1/4*s12^2)*mt^8*s14 + 1/4*denom(1/4*s12^2)*mt^8*s13 - 
      denom(1/4*s12^2)*mt^10;
 
 .sort
id KMatrix(12,22) =  1/2*s24^3 + s23*s24^2 + 1/2*s23^2*s24 + s14*s24^2 + s14*
      s23*s24 + 1/2*s14^2*s24 + s13*s24^2 + s13*s23*s24 + s13*s14*s24 + 1/2*
      s13^2*s24 + s12*s24^2 + s12*s23*s24 + s12*s14*s24 + s12*s13*s24 + 1/2*
      s12^2*s24 - mh^2*s24^2 - mh^2*s23*s24 - mh^2*s14*s24 - mh^2*s13*s24 - 
      mh^2*s12*s24 + 1/2*mh^4*s24 - 5/2*mt^2*s24^2 - 4*mt^2*s23*s24 - 3/2*mt^2
      *s23^2 - 3*mt^2*s14*s24 - 2*mt^2*s14*s23 - 1/2*mt^2*s14^2 - 3*mt^2*s13*
      s24 - 2*mt^2*s13*s23 - mt^2*s13*s14 - 1/2*mt^2*s13^2 - 3*mt^2*s12*s24 - 
      2*mt^2*s12*s23 - mt^2*s12*s14 - mt^2*s12*s13 - 1/2*mt^2*s12^2 + 3*mt^2*
      mh^2*s24 + 2*mt^2*mh^2*s23 + mt^2*mh^2*s14 + mt^2*mh^2*s13 + mt^2*mh^2*
      s12 - 1/2*mt^2*mh^4 + 5*mt^4*s24 + 5*mt^4*s23 + 3*mt^4*s14 + 3*mt^4*s13
       + 3*mt^4*s12 - 3*mt^4*mh^2 - 4*mt^6 + denom(1/2*s12)*s14*s23*s24^2 + 
      denom(1/2*s12)*s14*s23^2*s24 + denom(1/2*s12)*s14^2*s23*s24 + 1/2*denom(
      1/2*s12)*s13*s24^3 + 1/2*denom(1/2*s12)*s13*s23*s24^2 + 1/2*denom(1/2*
      s12)*s13*s14*s24^2 + denom(1/2*s12)*s13*s14*s23*s24 + 1/2*denom(1/2*s12)
      *s13^2*s24^2 + denom(1/2*s12)*s12*s14*s23*s24 + 1/2*denom(1/2*s12)*s12*
      s13*s24^2 - denom(1/2*s12)*mh^2*s14*s23*s24 - 1/2*denom(1/2*s12)*mh^2*
      s13*s24^2 - 1/2*denom(1/2*s12)*mt^2*s24^3 - 3/2*denom(1/2*s12)*mt^2*s23*
      s24^2 - denom(1/2*s12)*mt^2*s23^2*s24 - 3/2*denom(1/2*s12)*mt^2*s14*
      s24^2 - 5*denom(1/2*s12)*mt^2*s14*s23*s24 - 3/2*denom(1/2*s12)*mt^2*s14*
      s23^2 - denom(1/2*s12)*mt^2*s14^2*s24 - denom(1/2*s12)*mt^2*s14^2*s23 - 
      5/2*denom(1/2*s12)*mt^2*s13*s24^2 - 5/2*denom(1/2*s12)*mt^2*s13*s23*s24
       - 2*denom(1/2*s12)*mt^2*s13*s14*s24 - denom(1/2*s12)*mt^2*s13*s14*s23
       - denom(1/2*s12)*mt^2*s13^2*s24 - 1/2*denom(1/2*s12)*mt^2*s12*s24^2 - 
      denom(1/2*s12)*mt^2*s12*s23*s24 - denom(1/2*s12)*mt^2*s12*s14*s24 - 
      denom(1/2*s12)*mt^2*s12*s14*s23 - denom(1/2*s12)*mt^2*s12*s13*s24 + 1/2*
      denom(1/2*s12)*mt^2*mh^2*s24^2 + denom(1/2*s12)*mt^2*mh^2*s23*s24 + 
      denom(1/2*s12)*mt^2*mh^2*s14*s24 + denom(1/2*s12)*mt^2*mh^2*s14*s23 + 
      denom(1/2*s12)*mt^2*mh^2*s13*s24 + 3*denom(1/2*s12)*mt^4*s24^2 + 11/2*
      denom(1/2*s12)*mt^4*s23*s24 + 3/2*denom(1/2*s12)*mt^4*s23^2 + 5*denom(1/
      2*s12)*mt^4*s14*s24 + 5*denom(1/2*s12)*mt^4*s14*s23 + denom(1/2*s12)*
      mt^4*s14^2 + 5*denom(1/2*s12)*mt^4*s13*s24 + 2*denom(1/2*s12)*mt^4*s13*
      s23 + 3/2*denom(1/2*s12)*mt^4*s13*s14 + 1/2*denom(1/2*s12)*mt^4*s13^2 + 
      2*denom(1/2*s12)*mt^4*s12*s24 + denom(1/2*s12)*mt^4*s12*s23 + denom(1/2*
      s12)*mt^4*s12*s14 + 1/2*denom(1/2*s12)*mt^4*s12*s13 - 2*denom(1/2*s12)*
      mt^4*mh^2*s24 - denom(1/2*s12)*mt^4*mh^2*s23 - denom(1/2*s12)*mt^4*mh^2*
      s14 - 1/2*denom(1/2*s12)*mt^4*mh^2*s13 - 6*denom(1/2*s12)*mt^6*s24 - 5*
      denom(1/2*s12)*mt^6*s23 - 4*denom(1/2*s12)*mt^6*s14 - 3*denom(1/2*s12)*
      mt^6*s13 - 3/2*denom(1/2*s12)*mt^6*s12 + 3/2*denom(1/2*s12)*mt^6*mh^2 + 
      4*denom(1/2*s12)*mt^8 + 3/8*denom(1/4*s12^2)*s14^2*s23^2*s24 + 1/2*
      denom(1/4*s12^2)*s13*s14*s23*s24^2 + 1/8*denom(1/4*s12^2)*s13^2*s24^3 - 
      1/2*denom(1/4*s12^2)*mt^2*s14*s23*s24^2 - 3/4*denom(1/4*s12^2)*mt^2*s14*
      s23^2*s24 - 3/4*denom(1/4*s12^2)*mt^2*s14^2*s23*s24 - 3/8*denom(1/4*
      s12^2)*mt^2*s14^2*s23^2 - 1/4*denom(1/4*s12^2)*mt^2*s13*s24^3 - 1/2*
      denom(1/4*s12^2)*mt^2*s13*s23*s24^2 - 1/2*denom(1/4*s12^2)*mt^2*s13*s14*
      s24^2 - denom(1/4*s12^2)*mt^2*s13*s14*s23*s24 - 3/8*denom(1/4*s12^2)*
      mt^2*s13^2*s24^2 + 1/8*denom(1/4*s12^2)*mt^4*s24^3 + 1/2*denom(1/4*s12^2
      )*mt^4*s23*s24^2 + 3/8*denom(1/4*s12^2)*mt^4*s23^2*s24 + 1/2*denom(1/4*
      s12^2)*mt^4*s14*s24^2 + 5/2*denom(1/4*s12^2)*mt^4*s14*s23*s24 + 3/4*
      denom(1/4*s12^2)*mt^4*s14*s23^2 + 3/8*denom(1/4*s12^2)*mt^4*s14^2*s24 + 
      3/4*denom(1/4*s12^2)*mt^4*s14^2*s23 + 5/4*denom(1/4*s12^2)*mt^4*s13*
      s24^2 + denom(1/4*s12^2)*mt^4*s13*s23*s24 + denom(1/4*s12^2)*mt^4*s13*
      s14*s24 + 1/2*denom(1/4*s12^2)*mt^4*s13*s14*s23 + 3/8*denom(1/4*s12^2)*
      mt^4*s13^2*s24 - 7/8*denom(1/4*s12^2)*mt^6*s24^2 - 7/4*denom(1/4*s12^2)*
      mt^6*s23*s24 - 3/8*denom(1/4*s12^2)*mt^6*s23^2 - 7/4*denom(1/4*s12^2)*
      mt^6*s14*s24 - 2*denom(1/4*s12^2)*mt^6*s14*s23 - 3/8*denom(1/4*s12^2)*
      mt^6*s14^2 - 7/4*denom(1/4*s12^2)*mt^6*s13*s24 - 1/2*denom(1/4*s12^2)*
      mt^6*s13*s23 - 1/2*denom(1/4*s12^2)*mt^6*s13*s14 - 1/8*denom(1/4*s12^2)*
      mt^6*s13^2 + 7/4*denom(1/4*s12^2)*mt^8*s24 + 5/4*denom(1/4*s12^2)*mt^8*
      s23 + 5/4*denom(1/4*s12^2)*mt^8*s14 + 3/4*denom(1/4*s12^2)*mt^8*s13 - 
      denom(1/4*s12^2)*mt^10;
 
 .sort
id KMatrix(12,23) =   - mt^2*s24^2 - mt^2*s23*s24 - mt^2*s14*s24 - mt^2*s13*
      s24 - mt^2*s12*s24 + mt^2*mh^2*s24 + 3*mt^4*s24 + 3*mt^4*s23 + mt^4*s14
       + mt^4*s13 + mt^4*s12 - mt^4*mh^2 - 4*mt^6 + 1/2*denom(1/2*s12)*s14*
      s24^3 + 1/2*denom(1/2*s12)*s14*s23*s24^2 + 1/2*denom(1/2*s12)*s14^2*
      s24^2 + 1/2*denom(1/2*s12)*s13*s14*s24^2 + 1/2*denom(1/2*s12)*s12*s14*
      s24^2 - 1/2*denom(1/2*s12)*mh^2*s14*s24^2 - 1/2*denom(1/2*s12)*mt^2*
      s24^3 - 1/2*denom(1/2*s12)*mt^2*s23*s24^2 - 5/2*denom(1/2*s12)*mt^2*s14*
      s24^2 - 7/2*denom(1/2*s12)*mt^2*s14*s23*s24 - denom(1/2*s12)*mt^2*s14^2*
      s24 - denom(1/2*s12)*mt^2*s13*s24^2 - denom(1/2*s12)*mt^2*s13*s14*s24 - 
      1/2*denom(1/2*s12)*mt^2*s12*s24^2 - denom(1/2*s12)*mt^2*s12*s14*s24 + 1/
      2*denom(1/2*s12)*mt^2*mh^2*s24^2 + denom(1/2*s12)*mt^2*mh^2*s14*s24 + 5/
      2*denom(1/2*s12)*mt^4*s24^2 + 7/2*denom(1/2*s12)*mt^4*s23*s24 + 6*denom(
      1/2*s12)*mt^4*s14*s24 + 3*denom(1/2*s12)*mt^4*s14*s23 + 1/2*denom(1/2*
      s12)*mt^4*s14^2 + 2*denom(1/2*s12)*mt^4*s13*s24 + 1/2*denom(1/2*s12)*
      mt^4*s13*s14 + denom(1/2*s12)*mt^4*s12*s24 + 1/2*denom(1/2*s12)*mt^4*s12
      *s14 - denom(1/2*s12)*mt^4*mh^2*s24 - 1/2*denom(1/2*s12)*mt^4*mh^2*s14
       - 6*denom(1/2*s12)*mt^6*s24 - 3*denom(1/2*s12)*mt^6*s23 - 4*denom(1/2*
      s12)*mt^6*s14 - denom(1/2*s12)*mt^6*s13 - 1/2*denom(1/2*s12)*mt^6*s12 + 
      1/2*denom(1/2*s12)*mt^6*mh^2 + 4*denom(1/2*s12)*mt^8 + 3/4*denom(1/4*
      s12^2)*s14^2*s23*s24^2 + 1/4*denom(1/4*s12^2)*s13*s14*s24^3 - 1/4*denom(
      1/4*s12^2)*mt^2*s14*s24^3 - 3/2*denom(1/4*s12^2)*mt^2*s14*s23*s24^2 - 3/
      4*denom(1/4*s12^2)*mt^2*s14^2*s24^2 - 3/2*denom(1/4*s12^2)*mt^2*s14^2*
      s23*s24 - 1/4*denom(1/4*s12^2)*mt^2*s13*s24^3 - 3/4*denom(1/4*s12^2)*
      mt^2*s13*s14*s24^2 + 1/4*denom(1/4*s12^2)*mt^4*s24^3 + 3/4*denom(1/4*
      s12^2)*mt^4*s23*s24^2 + 9/4*denom(1/4*s12^2)*mt^4*s14*s24^2 + 3*denom(1/
      4*s12^2)*mt^4*s14*s23*s24 + 3/2*denom(1/4*s12^2)*mt^4*s14^2*s24 + 3/4*
      denom(1/4*s12^2)*mt^4*s14^2*s23 + 3/4*denom(1/4*s12^2)*mt^4*s13*s24^2 + 
      3/4*denom(1/4*s12^2)*mt^4*s13*s14*s24 - 3/2*denom(1/4*s12^2)*mt^6*s24^2
       - 3/2*denom(1/4*s12^2)*mt^6*s23*s24 - 15/4*denom(1/4*s12^2)*mt^6*s14*
      s24 - 3/2*denom(1/4*s12^2)*mt^6*s14*s23 - 3/4*denom(1/4*s12^2)*mt^6*
      s14^2 - 3/4*denom(1/4*s12^2)*mt^6*s13*s24 - 1/4*denom(1/4*s12^2)*mt^6*
      s13*s14 + 9/4*denom(1/4*s12^2)*mt^8*s24 + 3/4*denom(1/4*s12^2)*mt^8*s23
       + 7/4*denom(1/4*s12^2)*mt^8*s14 + 1/4*denom(1/4*s12^2)*mt^8*s13 - 
      denom(1/4*s12^2)*mt^10;
 
 .sort
id KMatrix(12,24) =   - 2*mt^3*s12*s23 + 2*mt^5*s12 + 2*denom(1/2*s12)*mt*s12*
      s14*s23*s24 - 2*denom(1/2*s12)*mt^3*s12*s23*s24 - 2*denom(1/2*s12)*mt^3*
      s12*s14*s24 - 2*denom(1/2*s12)*mt^3*s12*s14*s23 + 2*denom(1/2*s12)*mt^5*
      s12*s24 + 2*denom(1/2*s12)*mt^5*s12*s23 + 2*denom(1/2*s12)*mt^5*s12*s14
       - 2*denom(1/2*s12)*mt^7*s12 - 1/2*denom(1/4*s12^2)*mt*s12^2*s14*s23*s24
       + 1/2*denom(1/4*s12^2)*mt^3*s12^2*s23*s24 + 1/2*denom(1/4*s12^2)*mt^3*
      s12^2*s14*s24 + 1/2*denom(1/4*s12^2)*mt^3*s12^2*s14*s23 - 1/2*denom(1/4*
      s12^2)*mt^5*s12^2*s24 - 1/2*denom(1/4*s12^2)*mt^5*s12^2*s23 - 1/2*denom(
      1/4*s12^2)*mt^5*s12^2*s14 + 1/2*denom(1/4*s12^2)*mt^7*s12^2;
 
 .sort
id KMatrix(12,25) =  2*mt^3*s24 - 2*mt^3*s23 - 2*denom(1/2*s12)*mt*s14*s24^2
       + 2*denom(1/2*s12)*mt*s14*s23*s24 + 2*denom(1/2*s12)*mt^3*s24^2 - 2*
      denom(1/2*s12)*mt^3*s23*s24 + 2*denom(1/2*s12)*mt^3*s14*s24 - 2*denom(1/
      2*s12)*mt^3*s14*s23 - 2*denom(1/2*s12)*mt^5*s24 + 2*denom(1/2*s12)*mt^5*
      s23 + 1/2*denom(1/4*s12^2)*mt*s12*s14*s24^2 - 1/2*denom(1/4*s12^2)*mt*
      s12*s14*s23*s24 - 1/2*denom(1/4*s12^2)*mt^3*s12*s24^2 + 1/2*denom(1/4*
      s12^2)*mt^3*s12*s23*s24 - 1/2*denom(1/4*s12^2)*mt^3*s12*s14*s24 + 1/2*
      denom(1/4*s12^2)*mt^3*s12*s14*s23 + 1/2*denom(1/4*s12^2)*mt^5*s12*s24 - 
      1/2*denom(1/4*s12^2)*mt^5*s12*s23;
 
 .sort
id KMatrix(12,26) =  1/2*mt*s12*s24^2 + mt*s12*s23*s24 + 1/2*mt*s12*s23^2 + mt
      *s12*s14*s24 + mt*s12*s14*s23 + 1/2*mt*s12*s14^2 + mt*s12*s13*s24 + mt*
      s12*s13*s23 + mt*s12*s13*s14 + 1/2*mt*s12*s13^2 + mt*s12^2*s24 + mt*
      s12^2*s23 + mt*s12^2*s14 + mt*s12^2*s13 + 1/2*mt*s12^3 - mt*mh^2*s12*s24
       - mt*mh^2*s12*s23 - mt*mh^2*s12*s14 - mt*mh^2*s12*s13 - mt*mh^2*s12^2
       + 1/2*mt*mh^4*s12 - 3*mt^3*s12*s24 - 3*mt^3*s12*s23 - 3*mt^3*s12*s14 - 
      3*mt^3*s12*s13 - 3*mt^3*s12^2 + 3*mt^3*mh^2*s12 + 4*mt^5*s12 + 1/2*
      denom(1/2*s12)*mt*s12*s14*s24^2 + denom(1/2*s12)*mt*s12*s14*s23*s24 + 1/
      2*denom(1/2*s12)*mt*s12*s14*s23^2 + 1/2*denom(1/2*s12)*mt*s12*s14^2*s24
       + 1/2*denom(1/2*s12)*mt*s12*s14^2*s23 + 1/2*denom(1/2*s12)*mt*s12*s13*
      s24^2 + 1/2*denom(1/2*s12)*mt*s12*s13*s23*s24 + denom(1/2*s12)*mt*s12*
      s13*s14*s24 + 1/2*denom(1/2*s12)*mt*s12*s13*s14*s23 + 1/2*denom(1/2*s12)
      *mt*s12*s13^2*s24 + 1/2*denom(1/2*s12)*mt*s12^2*s14*s24 + 1/2*denom(1/2*
      s12)*mt*s12^2*s14*s23 + 1/2*denom(1/2*s12)*mt*s12^2*s13*s24 - 1/2*denom(
      1/2*s12)*mt*mh^2*s12*s14*s24 - 1/2*denom(1/2*s12)*mt*mh^2*s12*s14*s23 - 
      1/2*denom(1/2*s12)*mt*mh^2*s12*s13*s24 - denom(1/2*s12)*mt^3*s12*s24^2
       - 3/2*denom(1/2*s12)*mt^3*s12*s23*s24 - 1/2*denom(1/2*s12)*mt^3*s12*
      s23^2 - 3*denom(1/2*s12)*mt^3*s12*s14*s24 - 3*denom(1/2*s12)*mt^3*s12*
      s14*s23 - denom(1/2*s12)*mt^3*s12*s14^2 - 3*denom(1/2*s12)*mt^3*s12*s13*
      s24 - denom(1/2*s12)*mt^3*s12*s13*s23 - 3/2*denom(1/2*s12)*mt^3*s12*s13*
      s14 - 1/2*denom(1/2*s12)*mt^3*s12*s13^2 - denom(1/2*s12)*mt^3*s12^2*s24
       - 1/2*denom(1/2*s12)*mt^3*s12^2*s23 - denom(1/2*s12)*mt^3*s12^2*s14 - 1/
      2*denom(1/2*s12)*mt^3*s12^2*s13 + denom(1/2*s12)*mt^3*mh^2*s12*s24 + 1/2
      *denom(1/2*s12)*mt^3*mh^2*s12*s23 + denom(1/2*s12)*mt^3*mh^2*s12*s14 + 1/
      2*denom(1/2*s12)*mt^3*mh^2*s12*s13 + 4*denom(1/2*s12)*mt^5*s12*s24 + 3*
      denom(1/2*s12)*mt^5*s12*s23 + 4*denom(1/2*s12)*mt^5*s12*s14 + 3*denom(1/
      2*s12)*mt^5*s12*s13 + 3/2*denom(1/2*s12)*mt^5*s12^2 - 3/2*denom(1/2*s12)
      *mt^5*mh^2*s12 - 4*denom(1/2*s12)*mt^7*s12 + 1/4*denom(1/4*s12^2)*mt*s12
      *s14^2*s23*s24 + 1/8*denom(1/4*s12^2)*mt*s12*s14^2*s23^2 + 1/4*denom(1/4
      *s12^2)*mt*s12*s13*s14*s24^2 + 1/4*denom(1/4*s12^2)*mt*s12*s13*s14*s23*
      s24 + 1/8*denom(1/4*s12^2)*mt*s12*s13^2*s24^2 - 1/4*denom(1/4*s12^2)*
      mt^3*s12*s14*s24^2 - 3/4*denom(1/4*s12^2)*mt^3*s12*s14*s23*s24 - 1/4*
      denom(1/4*s12^2)*mt^3*s12*s14*s23^2 - 1/4*denom(1/4*s12^2)*mt^3*s12*
      s14^2*s24 - 1/2*denom(1/4*s12^2)*mt^3*s12*s14^2*s23 - 1/2*denom(1/4*
      s12^2)*mt^3*s12*s13*s24^2 - 1/4*denom(1/4*s12^2)*mt^3*s12*s13*s23*s24 - 
      3/4*denom(1/4*s12^2)*mt^3*s12*s13*s14*s24 - 1/4*denom(1/4*s12^2)*mt^3*
      s12*s13*s14*s23 - 1/4*denom(1/4*s12^2)*mt^3*s12*s13^2*s24 + 3/8*denom(1/
      4*s12^2)*mt^5*s12*s24^2 + 1/2*denom(1/4*s12^2)*mt^5*s12*s23*s24 + 1/8*
      denom(1/4*s12^2)*mt^5*s12*s23^2 + 5/4*denom(1/4*s12^2)*mt^5*s12*s14*s24
       + 5/4*denom(1/4*s12^2)*mt^5*s12*s14*s23 + 3/8*denom(1/4*s12^2)*mt^5*s12
      *s14^2 + 5/4*denom(1/4*s12^2)*mt^5*s12*s13*s24 + 1/4*denom(1/4*s12^2)*
      mt^5*s12*s13*s23 + 1/2*denom(1/4*s12^2)*mt^5*s12*s13*s14 + 1/8*denom(1/4
      *s12^2)*mt^5*s12*s13^2 - 5/4*denom(1/4*s12^2)*mt^7*s12*s24 - 3/4*denom(1/
      4*s12^2)*mt^7*s12*s23 - 5/4*denom(1/4*s12^2)*mt^7*s12*s14 - 3/4*denom(1/
      4*s12^2)*mt^7*s12*s13 + denom(1/4*s12^2)*mt^9*s12;
 
 .sort
id KMatrix(12,27) =   0;
 
 .sort
id KMatrix(12,28) =   - mt^3*s12*s24 - mt^3*s12*s23 - mt^3*s12*s14 - mt^3*s12*
      s13 - mt^3*s12^2 + mt^3*mh^2*s12 + 4*mt^5*s12 + 1/2*denom(1/2*s12)*mt*
      s12*s14*s24^2 + 1/2*denom(1/2*s12)*mt*s12*s14*s23*s24 + 1/2*denom(1/2*
      s12)*mt*s12*s14^2*s24 + 1/2*denom(1/2*s12)*mt*s12*s13*s14*s24 + 1/2*
      denom(1/2*s12)*mt*s12^2*s14*s24 - 1/2*denom(1/2*s12)*mt*mh^2*s12*s14*s24
       - 1/2*denom(1/2*s12)*mt^3*s12*s24^2 - 1/2*denom(1/2*s12)*mt^3*s12*s23*
      s24 - 4*denom(1/2*s12)*mt^3*s12*s14*s24 - denom(1/2*s12)*mt^3*s12*s14*
      s23 - 1/2*denom(1/2*s12)*mt^3*s12*s14^2 - denom(1/2*s12)*mt^3*s12*s13*
      s24 - 1/2*denom(1/2*s12)*mt^3*s12*s13*s14 - 1/2*denom(1/2*s12)*mt^3*
      s12^2*s24 - 1/2*denom(1/2*s12)*mt^3*s12^2*s14 + 1/2*denom(1/2*s12)*mt^3*
      mh^2*s12*s24 + 1/2*denom(1/2*s12)*mt^3*mh^2*s12*s14 + 4*denom(1/2*s12)*
      mt^5*s12*s24 + denom(1/2*s12)*mt^5*s12*s23 + 4*denom(1/2*s12)*mt^5*s12*
      s14 + denom(1/2*s12)*mt^5*s12*s13 + 1/2*denom(1/2*s12)*mt^5*s12^2 - 1/2*
      denom(1/2*s12)*mt^5*mh^2*s12 - 4*denom(1/2*s12)*mt^7*s12 + 1/2*denom(1/4
      *s12^2)*mt*s12*s14^2*s24^2 + 1/4*denom(1/4*s12^2)*mt*s12*s14^2*s23*s24
       + 1/4*denom(1/4*s12^2)*mt*s12*s13*s14*s24^2 - 5/4*denom(1/4*s12^2)*mt^3
      *s12*s14*s24^2 - 1/2*denom(1/4*s12^2)*mt^3*s12*s14*s23*s24 - 5/4*denom(1/
      4*s12^2)*mt^3*s12*s14^2*s24 - 1/4*denom(1/4*s12^2)*mt^3*s12*s14^2*s23 - 
      1/4*denom(1/4*s12^2)*mt^3*s12*s13*s24^2 - 1/2*denom(1/4*s12^2)*mt^3*s12*
      s13*s14*s24 + 3/4*denom(1/4*s12^2)*mt^5*s12*s24^2 + 1/4*denom(1/4*s12^2)
      *mt^5*s12*s23*s24 + 3*denom(1/4*s12^2)*mt^5*s12*s14*s24 + 1/2*denom(1/4*
      s12^2)*mt^5*s12*s14*s23 + 3/4*denom(1/4*s12^2)*mt^5*s12*s14^2 + 1/2*
      denom(1/4*s12^2)*mt^5*s12*s13*s24 + 1/4*denom(1/4*s12^2)*mt^5*s12*s13*
      s14 - 7/4*denom(1/4*s12^2)*mt^7*s12*s24 - 1/4*denom(1/4*s12^2)*mt^7*s12*
      s23 - 7/4*denom(1/4*s12^2)*mt^7*s12*s14 - 1/4*denom(1/4*s12^2)*mt^7*s12*
      s13 + denom(1/4*s12^2)*mt^9*s12;
 
 .sort
id KMatrix(12,29) =   0;
 
 .sort
id KMatrix(12,30) =  1/2*mt*s12*s24^2 + mt*s12*s23*s24 + 1/2*mt*s12*s23^2 + mt
      *s12*s14*s24 + mt*s12*s14*s23 + 1/2*mt*s12*s14^2 + mt*s12*s13*s24 + mt*
      s12*s13*s23 + mt*s12*s13*s14 + 1/2*mt*s12*s13^2 + mt*s12^2*s24 + mt*
      s12^2*s23 + mt*s12^2*s14 + mt*s12^2*s13 + 1/2*mt*s12^3 - mt*mh^2*s12*s24
       - mt*mh^2*s12*s23 - mt*mh^2*s12*s14 - mt*mh^2*s12*s13 - mt*mh^2*s12^2
       + 1/2*mt*mh^4*s12 - 3*mt^3*s12*s24 - 3*mt^3*s12*s23 - 3*mt^3*s12*s14 - 
      3*mt^3*s12*s13 - 3*mt^3*s12^2 + 3*mt^3*mh^2*s12 + 4*mt^5*s12 + 1/2*
      denom(1/2*s12)*mt*s12*s14*s24^2 + denom(1/2*s12)*mt*s12*s14*s23*s24 + 1/
      2*denom(1/2*s12)*mt*s12*s14*s23^2 + 1/2*denom(1/2*s12)*mt*s12*s14^2*s24
       + 1/2*denom(1/2*s12)*mt*s12*s14^2*s23 + 1/2*denom(1/2*s12)*mt*s12*s13*
      s24^2 + 1/2*denom(1/2*s12)*mt*s12*s13*s23*s24 + denom(1/2*s12)*mt*s12*
      s13*s14*s24 + 1/2*denom(1/2*s12)*mt*s12*s13*s14*s23 + 1/2*denom(1/2*s12)
      *mt*s12*s13^2*s24 + 1/2*denom(1/2*s12)*mt*s12^2*s14*s24 + 1/2*denom(1/2*
      s12)*mt*s12^2*s14*s23 + 1/2*denom(1/2*s12)*mt*s12^2*s13*s24 - 1/2*denom(
      1/2*s12)*mt*mh^2*s12*s14*s24 - 1/2*denom(1/2*s12)*mt*mh^2*s12*s14*s23 - 
      1/2*denom(1/2*s12)*mt*mh^2*s12*s13*s24 - denom(1/2*s12)*mt^3*s12*s24^2
       - 3/2*denom(1/2*s12)*mt^3*s12*s23*s24 - 1/2*denom(1/2*s12)*mt^3*s12*
      s23^2 - 3*denom(1/2*s12)*mt^3*s12*s14*s24 - 3*denom(1/2*s12)*mt^3*s12*
      s14*s23 - denom(1/2*s12)*mt^3*s12*s14^2 - 3*denom(1/2*s12)*mt^3*s12*s13*
      s24 - denom(1/2*s12)*mt^3*s12*s13*s23 - 3/2*denom(1/2*s12)*mt^3*s12*s13*
      s14 - 1/2*denom(1/2*s12)*mt^3*s12*s13^2 - denom(1/2*s12)*mt^3*s12^2*s24
       - 1/2*denom(1/2*s12)*mt^3*s12^2*s23 - denom(1/2*s12)*mt^3*s12^2*s14 - 1/
      2*denom(1/2*s12)*mt^3*s12^2*s13 + denom(1/2*s12)*mt^3*mh^2*s12*s24 + 1/2
      *denom(1/2*s12)*mt^3*mh^2*s12*s23 + denom(1/2*s12)*mt^3*mh^2*s12*s14 + 1/
      2*denom(1/2*s12)*mt^3*mh^2*s12*s13 + 4*denom(1/2*s12)*mt^5*s12*s24 + 3*
      denom(1/2*s12)*mt^5*s12*s23 + 4*denom(1/2*s12)*mt^5*s12*s14 + 3*denom(1/
      2*s12)*mt^5*s12*s13 + 3/2*denom(1/2*s12)*mt^5*s12^2 - 3/2*denom(1/2*s12)
      *mt^5*mh^2*s12 - 4*denom(1/2*s12)*mt^7*s12 + 1/4*denom(1/4*s12^2)*mt*s12
      *s14^2*s23*s24 + 1/8*denom(1/4*s12^2)*mt*s12*s14^2*s23^2 + 1/4*denom(1/4
      *s12^2)*mt*s12*s13*s14*s24^2 + 1/4*denom(1/4*s12^2)*mt*s12*s13*s14*s23*
      s24 + 1/8*denom(1/4*s12^2)*mt*s12*s13^2*s24^2 - 1/4*denom(1/4*s12^2)*
      mt^3*s12*s14*s24^2 - 3/4*denom(1/4*s12^2)*mt^3*s12*s14*s23*s24 - 1/4*
      denom(1/4*s12^2)*mt^3*s12*s14*s23^2 - 1/4*denom(1/4*s12^2)*mt^3*s12*
      s14^2*s24 - 1/2*denom(1/4*s12^2)*mt^3*s12*s14^2*s23 - 1/2*denom(1/4*
      s12^2)*mt^3*s12*s13*s24^2 - 1/4*denom(1/4*s12^2)*mt^3*s12*s13*s23*s24 - 
      3/4*denom(1/4*s12^2)*mt^3*s12*s13*s14*s24 - 1/4*denom(1/4*s12^2)*mt^3*
      s12*s13*s14*s23 - 1/4*denom(1/4*s12^2)*mt^3*s12*s13^2*s24 + 3/8*denom(1/
      4*s12^2)*mt^5*s12*s24^2 + 1/2*denom(1/4*s12^2)*mt^5*s12*s23*s24 + 1/8*
      denom(1/4*s12^2)*mt^5*s12*s23^2 + 5/4*denom(1/4*s12^2)*mt^5*s12*s14*s24
       + 5/4*denom(1/4*s12^2)*mt^5*s12*s14*s23 + 3/8*denom(1/4*s12^2)*mt^5*s12
      *s14^2 + 5/4*denom(1/4*s12^2)*mt^5*s12*s13*s24 + 1/4*denom(1/4*s12^2)*
      mt^5*s12*s13*s23 + 1/2*denom(1/4*s12^2)*mt^5*s12*s13*s14 + 1/8*denom(1/4
      *s12^2)*mt^5*s12*s13^2 - 5/4*denom(1/4*s12^2)*mt^7*s12*s24 - 3/4*denom(1/
      4*s12^2)*mt^7*s12*s23 - 5/4*denom(1/4*s12^2)*mt^7*s12*s14 - 3/4*denom(1/
      4*s12^2)*mt^7*s12*s13 + denom(1/4*s12^2)*mt^9*s12;
 
 .sort
id KMatrix(12,31) =   0;
 
 .sort
id KMatrix(12,32) =   - mt^3*s12*s24 - mt^3*s12*s23 - mt^3*s12*s14 - mt^3*s12*
      s13 - mt^3*s12^2 + mt^3*mh^2*s12 + 4*mt^5*s12 + 1/2*denom(1/2*s12)*mt*
      s12*s14*s24^2 + 1/2*denom(1/2*s12)*mt*s12*s14*s23*s24 + 1/2*denom(1/2*
      s12)*mt*s12*s14^2*s24 + 1/2*denom(1/2*s12)*mt*s12*s13*s14*s24 + 1/2*
      denom(1/2*s12)*mt*s12^2*s14*s24 - 1/2*denom(1/2*s12)*mt*mh^2*s12*s14*s24
       - 1/2*denom(1/2*s12)*mt^3*s12*s24^2 - 1/2*denom(1/2*s12)*mt^3*s12*s23*
      s24 - 4*denom(1/2*s12)*mt^3*s12*s14*s24 - denom(1/2*s12)*mt^3*s12*s14*
      s23 - 1/2*denom(1/2*s12)*mt^3*s12*s14^2 - denom(1/2*s12)*mt^3*s12*s13*
      s24 - 1/2*denom(1/2*s12)*mt^3*s12*s13*s14 - 1/2*denom(1/2*s12)*mt^3*
      s12^2*s24 - 1/2*denom(1/2*s12)*mt^3*s12^2*s14 + 1/2*denom(1/2*s12)*mt^3*
      mh^2*s12*s24 + 1/2*denom(1/2*s12)*mt^3*mh^2*s12*s14 + 4*denom(1/2*s12)*
      mt^5*s12*s24 + denom(1/2*s12)*mt^5*s12*s23 + 4*denom(1/2*s12)*mt^5*s12*
      s14 + denom(1/2*s12)*mt^5*s12*s13 + 1/2*denom(1/2*s12)*mt^5*s12^2 - 1/2*
      denom(1/2*s12)*mt^5*mh^2*s12 - 4*denom(1/2*s12)*mt^7*s12 + 1/2*denom(1/4
      *s12^2)*mt*s12*s14^2*s24^2 + 1/4*denom(1/4*s12^2)*mt*s12*s14^2*s23*s24
       + 1/4*denom(1/4*s12^2)*mt*s12*s13*s14*s24^2 - 5/4*denom(1/4*s12^2)*mt^3
      *s12*s14*s24^2 - 1/2*denom(1/4*s12^2)*mt^3*s12*s14*s23*s24 - 5/4*denom(1/
      4*s12^2)*mt^3*s12*s14^2*s24 - 1/4*denom(1/4*s12^2)*mt^3*s12*s14^2*s23 - 
      1/4*denom(1/4*s12^2)*mt^3*s12*s13*s24^2 - 1/2*denom(1/4*s12^2)*mt^3*s12*
      s13*s14*s24 + 3/4*denom(1/4*s12^2)*mt^5*s12*s24^2 + 1/4*denom(1/4*s12^2)
      *mt^5*s12*s23*s24 + 3*denom(1/4*s12^2)*mt^5*s12*s14*s24 + 1/2*denom(1/4*
      s12^2)*mt^5*s12*s14*s23 + 3/4*denom(1/4*s12^2)*mt^5*s12*s14^2 + 1/2*
      denom(1/4*s12^2)*mt^5*s12*s13*s24 + 1/4*denom(1/4*s12^2)*mt^5*s12*s13*
      s14 - 7/4*denom(1/4*s12^2)*mt^7*s12*s24 - 1/4*denom(1/4*s12^2)*mt^7*s12*
      s23 - 7/4*denom(1/4*s12^2)*mt^7*s12*s14 - 1/4*denom(1/4*s12^2)*mt^7*s12*
      s13 + denom(1/4*s12^2)*mt^9*s12;
 
 .sort
id KMatrix(12,33) =   0;
 
 .sort
id KMatrix(12,34) =  mt^2*s14*s23 + mt^2*s13*s24 + mt^2*s12*s24 + mt^2*s12*s23
       + mt^2*s12*s14 + mt^2*s12*s13 + mt^2*s12^2 - mt^2*mh^2*s12 - mt^4*s24
       - mt^4*s23 - mt^4*s14 - mt^4*s13 - 4*mt^4*s12 + 2*mt^6 - denom(1/2*s12)
      *s14^2*s23*s24 - denom(1/2*s12)*s13*s14*s24^2 - denom(1/2*s12)*s12*s14*
      s24^2 - denom(1/2*s12)*s12*s14*s23*s24 - denom(1/2*s12)*s12*s14^2*s24 - 
      denom(1/2*s12)*s12*s13*s14*s24 - denom(1/2*s12)*s12^2*s14*s24 + denom(1/
      2*s12)*mh^2*s12*s14*s24 + denom(1/2*s12)*mt^2*s14*s24^2 + 2*denom(1/2*
      s12)*mt^2*s14*s23*s24 + denom(1/2*s12)*mt^2*s14^2*s24 + denom(1/2*s12)*
      mt^2*s14^2*s23 + denom(1/2*s12)*mt^2*s13*s24^2 + 2*denom(1/2*s12)*mt^2*
      s13*s14*s24 + denom(1/2*s12)*mt^2*s12*s24^2 + denom(1/2*s12)*mt^2*s12*
      s23*s24 + 6*denom(1/2*s12)*mt^2*s12*s14*s24 + denom(1/2*s12)*mt^2*s12*
      s14*s23 + denom(1/2*s12)*mt^2*s12*s14^2 + denom(1/2*s12)*mt^2*s12*s13*
      s24 + denom(1/2*s12)*mt^2*s12*s13*s14 + denom(1/2*s12)*mt^2*s12^2*s24 + 
      denom(1/2*s12)*mt^2*s12^2*s14 - denom(1/2*s12)*mt^2*mh^2*s12*s24 - 
      denom(1/2*s12)*mt^2*mh^2*s12*s14 - denom(1/2*s12)*mt^4*s24^2 - denom(1/2
      *s12)*mt^4*s23*s24 - 4*denom(1/2*s12)*mt^4*s14*s24 - 2*denom(1/2*s12)*
      mt^4*s14*s23 - denom(1/2*s12)*mt^4*s14^2 - 2*denom(1/2*s12)*mt^4*s13*s24
       - denom(1/2*s12)*mt^4*s13*s14 - 5*denom(1/2*s12)*mt^4*s12*s24 - denom(1/
      2*s12)*mt^4*s12*s23 - 5*denom(1/2*s12)*mt^4*s12*s14 - denom(1/2*s12)*
      mt^4*s12*s13 - denom(1/2*s12)*mt^4*s12^2 + denom(1/2*s12)*mt^4*mh^2*s12
       + 3*denom(1/2*s12)*mt^6*s24 + denom(1/2*s12)*mt^6*s23 + 3*denom(1/2*s12
      )*mt^6*s14 + denom(1/2*s12)*mt^6*s13 + 4*denom(1/2*s12)*mt^6*s12 - 2*
      denom(1/2*s12)*mt^8 + 1/4*denom(1/4*s12^2)*s12*s14^2*s23*s24 + 1/4*
      denom(1/4*s12^2)*s12*s13*s14*s24^2 + 1/4*denom(1/4*s12^2)*s12^2*s14*
      s24^2 + 1/4*denom(1/4*s12^2)*s12^2*s14*s23*s24 + 1/4*denom(1/4*s12^2)*
      s12^2*s14^2*s24 + 1/4*denom(1/4*s12^2)*s12^2*s13*s14*s24 + 1/4*denom(1/4
      *s12^2)*s12^3*s14*s24 - 1/4*denom(1/4*s12^2)*mh^2*s12^2*s14*s24 - 1/4*
      denom(1/4*s12^2)*mt^2*s12*s14*s24^2 - 1/2*denom(1/4*s12^2)*mt^2*s12*s14*
      s23*s24 - 1/4*denom(1/4*s12^2)*mt^2*s12*s14^2*s24 - 1/4*denom(1/4*s12^2)
      *mt^2*s12*s14^2*s23 - 1/4*denom(1/4*s12^2)*mt^2*s12*s13*s24^2 - 1/2*
      denom(1/4*s12^2)*mt^2*s12*s13*s14*s24 - 1/4*denom(1/4*s12^2)*mt^2*s12^2*
      s24^2 - 1/4*denom(1/4*s12^2)*mt^2*s12^2*s23*s24 - 3/2*denom(1/4*s12^2)*
      mt^2*s12^2*s14*s24 - 1/4*denom(1/4*s12^2)*mt^2*s12^2*s14*s23 - 1/4*
      denom(1/4*s12^2)*mt^2*s12^2*s14^2 - 1/4*denom(1/4*s12^2)*mt^2*s12^2*s13*
      s24 - 1/4*denom(1/4*s12^2)*mt^2*s12^2*s13*s14 - 1/4*denom(1/4*s12^2)*
      mt^2*s12^3*s24 - 1/4*denom(1/4*s12^2)*mt^2*s12^3*s14 + 1/4*denom(1/4*
      s12^2)*mt^2*mh^2*s12^2*s24 + 1/4*denom(1/4*s12^2)*mt^2*mh^2*s12^2*s14 + 
      1/4*denom(1/4*s12^2)*mt^4*s12*s24^2 + 1/4*denom(1/4*s12^2)*mt^4*s12*s23*
      s24 + denom(1/4*s12^2)*mt^4*s12*s14*s24 + 1/2*denom(1/4*s12^2)*mt^4*s12*
      s14*s23 + 1/4*denom(1/4*s12^2)*mt^4*s12*s14^2 + 1/2*denom(1/4*s12^2)*
      mt^4*s12*s13*s24 + 1/4*denom(1/4*s12^2)*mt^4*s12*s13*s14 + 5/4*denom(1/4
      *s12^2)*mt^4*s12^2*s24 + 1/4*denom(1/4*s12^2)*mt^4*s12^2*s23 + 5/4*
      denom(1/4*s12^2)*mt^4*s12^2*s14 + 1/4*denom(1/4*s12^2)*mt^4*s12^2*s13 + 
      1/4*denom(1/4*s12^2)*mt^4*s12^3 - 1/4*denom(1/4*s12^2)*mt^4*mh^2*s12^2
       - 3/4*denom(1/4*s12^2)*mt^6*s12*s24 - 1/4*denom(1/4*s12^2)*mt^6*s12*s23
       - 3/4*denom(1/4*s12^2)*mt^6*s12*s14 - 1/4*denom(1/4*s12^2)*mt^6*s12*s13
       - denom(1/4*s12^2)*mt^6*s12^2 + 1/2*denom(1/4*s12^2)*mt^8*s12;
 
 .sort
id KMatrix(12,35) =  2*mt^2*s23*s24 - 2*mt^4*s24 - 2*mt^4*s23 + 2*mt^6 - 2*
      denom(1/2*s12)*s14*s23*s24^2 + 2*denom(1/2*s12)*mt^2*s23*s24^2 + 2*
      denom(1/2*s12)*mt^2*s14*s24^2 + 4*denom(1/2*s12)*mt^2*s14*s23*s24 - 2*
      denom(1/2*s12)*mt^4*s24^2 - 4*denom(1/2*s12)*mt^4*s23*s24 - 4*denom(1/2*
      s12)*mt^4*s14*s24 - 2*denom(1/2*s12)*mt^4*s14*s23 + 4*denom(1/2*s12)*
      mt^6*s24 + 2*denom(1/2*s12)*mt^6*s23 + 2*denom(1/2*s12)*mt^6*s14 - 2*
      denom(1/2*s12)*mt^8 + 1/2*denom(1/4*s12^2)*s12*s14*s23*s24^2 - 1/2*
      denom(1/4*s12^2)*mt^2*s12*s23*s24^2 - 1/2*denom(1/4*s12^2)*mt^2*s12*s14*
      s24^2 - denom(1/4*s12^2)*mt^2*s12*s14*s23*s24 + 1/2*denom(1/4*s12^2)*
      mt^4*s12*s24^2 + denom(1/4*s12^2)*mt^4*s12*s23*s24 + denom(1/4*s12^2)*
      mt^4*s12*s14*s24 + 1/2*denom(1/4*s12^2)*mt^4*s12*s14*s23 - denom(1/4*
      s12^2)*mt^6*s12*s24 - 1/2*denom(1/4*s12^2)*mt^6*s12*s23 - 1/2*denom(1/4*
      s12^2)*mt^6*s12*s14 + 1/2*denom(1/4*s12^2)*mt^8*s12;
 
 .sort
id KMatrix(12,36) =   - 2*mt^3*s12*s23 + 2*mt^5*s12 + 2*denom(1/2*s12)*mt*s12*
      s14*s23*s24 - 2*denom(1/2*s12)*mt^3*s12*s23*s24 - 2*denom(1/2*s12)*mt^3*
      s12*s14*s24 - 2*denom(1/2*s12)*mt^3*s12*s14*s23 + 2*denom(1/2*s12)*mt^5*
      s12*s24 + 2*denom(1/2*s12)*mt^5*s12*s23 + 2*denom(1/2*s12)*mt^5*s12*s14
       - 2*denom(1/2*s12)*mt^7*s12 - 1/2*denom(1/4*s12^2)*mt*s12^2*s14*s23*s24
       + 1/2*denom(1/4*s12^2)*mt^3*s12^2*s23*s24 + 1/2*denom(1/4*s12^2)*mt^3*
      s12^2*s14*s24 + 1/2*denom(1/4*s12^2)*mt^3*s12^2*s14*s23 - 1/2*denom(1/4*
      s12^2)*mt^5*s12^2*s24 - 1/2*denom(1/4*s12^2)*mt^5*s12^2*s23 - 1/2*denom(
      1/4*s12^2)*mt^5*s12^2*s14 + 1/2*denom(1/4*s12^2)*mt^7*s12^2;
 
 .sort
id KMatrix(13,1) =  mt^4*s14*s23 - mt^4*s13*s24 - mt^4*s12*s24 - mt^4*s12*s23
       - mt^4*s12*s14 - mt^4*s12*s13 - mt^4*s12^2 + mt^4*mh^2*s12 + mt^6*s24
       - mt^6*s23 - mt^6*s14 + mt^6*s13 - denom(1/2*s12)*mt^2*s13*s14*s23^2 + 
      denom(1/2*s12)*mt^2*s13^2*s23*s24 + denom(1/2*s12)*mt^2*s12*s13*s23*s24
       + denom(1/2*s12)*mt^2*s12*s13*s23^2 + denom(1/2*s12)*mt^2*s12*s13*s14*
      s23 + denom(1/2*s12)*mt^2*s12*s13^2*s23 + denom(1/2*s12)*mt^2*s12^2*s13*
      s23 - denom(1/2*s12)*mt^2*mh^2*s12*s13*s23 + denom(1/2*s12)*mt^4*s14*
      s23^2 - 2*denom(1/2*s12)*mt^4*s13*s23*s24 + denom(1/2*s12)*mt^4*s13*
      s23^2 + 2*denom(1/2*s12)*mt^4*s13*s14*s23 - denom(1/2*s12)*mt^4*s13^2*
      s24 - denom(1/2*s12)*mt^4*s13^2*s23 - denom(1/2*s12)*mt^4*s12*s23*s24 - 
      denom(1/2*s12)*mt^4*s12*s23^2 - denom(1/2*s12)*mt^4*s12*s14*s23 - denom(
      1/2*s12)*mt^4*s12*s13*s24 - 2*denom(1/2*s12)*mt^4*s12*s13*s23 - denom(1/
      2*s12)*mt^4*s12*s13*s14 - denom(1/2*s12)*mt^4*s12*s13^2 - denom(1/2*s12)
      *mt^4*s12^2*s23 - denom(1/2*s12)*mt^4*s12^2*s13 + denom(1/2*s12)*mt^4*
      mh^2*s12*s23 + denom(1/2*s12)*mt^4*mh^2*s12*s13 + denom(1/2*s12)*mt^6*
      s23*s24 - denom(1/2*s12)*mt^6*s23^2 - 2*denom(1/2*s12)*mt^6*s14*s23 + 2*
      denom(1/2*s12)*mt^6*s13*s24 - denom(1/2*s12)*mt^6*s13*s14 + denom(1/2*
      s12)*mt^6*s13^2 + denom(1/2*s12)*mt^6*s12*s24 + denom(1/2*s12)*mt^6*s12*
      s23 + denom(1/2*s12)*mt^6*s12*s14 + denom(1/2*s12)*mt^6*s12*s13 + denom(
      1/2*s12)*mt^6*s12^2 - denom(1/2*s12)*mt^6*mh^2*s12 - denom(1/2*s12)*mt^8
      *s24 + denom(1/2*s12)*mt^8*s23 + denom(1/2*s12)*mt^8*s14 - denom(1/2*s12
      )*mt^8*s13 + 1/4*denom(1/4*s12^2)*s13^2*s14*s23^3 - 1/4*denom(1/4*s12^2)
      *s13^3*s23^2*s24 - 1/4*denom(1/4*s12^2)*s12*s13^2*s23^2*s24 - 1/4*denom(
      1/4*s12^2)*s12*s13^2*s23^3 - 1/4*denom(1/4*s12^2)*s12*s13^2*s14*s23^2 - 
      1/4*denom(1/4*s12^2)*s12*s13^3*s23^2 - 1/4*denom(1/4*s12^2)*s12^2*s13^2*
      s23^2 + 1/4*denom(1/4*s12^2)*mh^2*s12*s13^2*s23^2 - 1/2*denom(1/4*s12^2)
      *mt^2*s13*s14*s23^3 + 3/4*denom(1/4*s12^2)*mt^2*s13^2*s23^2*s24 - 1/4*
      denom(1/4*s12^2)*mt^2*s13^2*s23^3 - 3/4*denom(1/4*s12^2)*mt^2*s13^2*s14*
      s23^2 + 1/2*denom(1/4*s12^2)*mt^2*s13^3*s23*s24 + 1/4*denom(1/4*s12^2)*
      mt^2*s13^3*s23^2 + 1/2*denom(1/4*s12^2)*mt^2*s12*s13*s23^2*s24 + 1/2*
      denom(1/4*s12^2)*mt^2*s12*s13*s23^3 + 1/2*denom(1/4*s12^2)*mt^2*s12*s13*
      s14*s23^2 + 1/2*denom(1/4*s12^2)*mt^2*s12*s13^2*s23*s24 + denom(1/4*
      s12^2)*mt^2*s12*s13^2*s23^2 + 1/2*denom(1/4*s12^2)*mt^2*s12*s13^2*s14*
      s23 + 1/2*denom(1/4*s12^2)*mt^2*s12*s13^3*s23 + 1/2*denom(1/4*s12^2)*
      mt^2*s12^2*s13*s23^2 + 1/2*denom(1/4*s12^2)*mt^2*s12^2*s13^2*s23 - 1/2*
      denom(1/4*s12^2)*mt^2*mh^2*s12*s13*s23^2 - 1/2*denom(1/4*s12^2)*mt^2*
      mh^2*s12*s13^2*s23 + 1/4*denom(1/4*s12^2)*mt^4*s14*s23^3 - 3/4*denom(1/4
      *s12^2)*mt^4*s13*s23^2*s24 + 1/2*denom(1/4*s12^2)*mt^4*s13*s23^3 + 3/2*
      denom(1/4*s12^2)*mt^4*s13*s14*s23^2 - 3/2*denom(1/4*s12^2)*mt^4*s13^2*
      s23*s24 + 3/4*denom(1/4*s12^2)*mt^4*s13^2*s14*s23 - 1/4*denom(1/4*s12^2)
      *mt^4*s13^3*s24 - 1/2*denom(1/4*s12^2)*mt^4*s13^3*s23 - 1/4*denom(1/4*
      s12^2)*mt^4*s12*s23^2*s24 - 1/4*denom(1/4*s12^2)*mt^4*s12*s23^3 - 1/4*
      denom(1/4*s12^2)*mt^4*s12*s14*s23^2 - denom(1/4*s12^2)*mt^4*s12*s13*s23*
      s24 - 5/4*denom(1/4*s12^2)*mt^4*s12*s13*s23^2 - denom(1/4*s12^2)*mt^4*
      s12*s13*s14*s23 - 1/4*denom(1/4*s12^2)*mt^4*s12*s13^2*s24 - 5/4*denom(1/
      4*s12^2)*mt^4*s12*s13^2*s23 - 1/4*denom(1/4*s12^2)*mt^4*s12*s13^2*s14 - 
      1/4*denom(1/4*s12^2)*mt^4*s12*s13^3 - 1/4*denom(1/4*s12^2)*mt^4*s12^2*
      s23^2 - denom(1/4*s12^2)*mt^4*s12^2*s13*s23 - 1/4*denom(1/4*s12^2)*mt^4*
      s12^2*s13^2 + 1/4*denom(1/4*s12^2)*mt^4*mh^2*s12*s23^2 + denom(1/4*s12^2
      )*mt^4*mh^2*s12*s13*s23 + 1/4*denom(1/4*s12^2)*mt^4*mh^2*s12*s13^2 + 1/4
      *denom(1/4*s12^2)*mt^6*s23^2*s24 - 1/4*denom(1/4*s12^2)*mt^6*s23^3 - 3/4
      *denom(1/4*s12^2)*mt^6*s14*s23^2 + 3/2*denom(1/4*s12^2)*mt^6*s13*s23*s24
       - 3/4*denom(1/4*s12^2)*mt^6*s13*s23^2 - 3/2*denom(1/4*s12^2)*mt^6*s13*
      s14*s23 + 3/4*denom(1/4*s12^2)*mt^6*s13^2*s24 + 3/4*denom(1/4*s12^2)*
      mt^6*s13^2*s23 - 1/4*denom(1/4*s12^2)*mt^6*s13^2*s14 + 1/4*denom(1/4*
      s12^2)*mt^6*s13^3 + 1/2*denom(1/4*s12^2)*mt^6*s12*s23*s24 + 1/2*denom(1/
      4*s12^2)*mt^6*s12*s23^2 + 1/2*denom(1/4*s12^2)*mt^6*s12*s14*s23 + 1/2*
      denom(1/4*s12^2)*mt^6*s12*s13*s24 + denom(1/4*s12^2)*mt^6*s12*s13*s23 + 
      1/2*denom(1/4*s12^2)*mt^6*s12*s13*s14 + 1/2*denom(1/4*s12^2)*mt^6*s12*
      s13^2 + 1/2*denom(1/4*s12^2)*mt^6*s12^2*s23 + 1/2*denom(1/4*s12^2)*mt^6*
      s12^2*s13 - 1/2*denom(1/4*s12^2)*mt^6*mh^2*s12*s23 - 1/2*denom(1/4*s12^2
      )*mt^6*mh^2*s12*s13 - 1/2*denom(1/4*s12^2)*mt^8*s23*s24 + 1/2*denom(1/4*
      s12^2)*mt^8*s23^2 + 3/4*denom(1/4*s12^2)*mt^8*s14*s23 - 3/4*denom(1/4*
      s12^2)*mt^8*s13*s24 + 1/2*denom(1/4*s12^2)*mt^8*s13*s14 - 1/2*denom(1/4*
      s12^2)*mt^8*s13^2 - 1/4*denom(1/4*s12^2)*mt^8*s12*s24 - 1/4*denom(1/4*
      s12^2)*mt^8*s12*s23 - 1/4*denom(1/4*s12^2)*mt^8*s12*s14 - 1/4*denom(1/4*
      s12^2)*mt^8*s12*s13 - 1/4*denom(1/4*s12^2)*mt^8*s12^2 + 1/4*denom(1/4*
      s12^2)*mt^8*mh^2*s12 + 1/4*denom(1/4*s12^2)*mt^10*s24 - 1/4*denom(1/4*
      s12^2)*mt^10*s23 - 1/4*denom(1/4*s12^2)*mt^10*s14 + 1/4*denom(1/4*s12^2)
      *mt^10*s13;
 
 .sort
id KMatrix(13,2) =   - 1/2*mt^2*s14*s23*s24 - 1/2*mt^2*s14*s23^2 - 1/2*mt^2*
      s14^2*s23 + 1/2*mt^2*s13*s24^2 + 1/2*mt^2*s13*s23*s24 + 1/2*mt^2*s13*s14
      *s24 - 1/2*mt^2*s13*s14*s23 + 1/2*mt^2*s13^2*s24 + 1/2*mt^2*s12*s24^2 + 
      mt^2*s12*s23*s24 + 1/2*mt^2*s12*s23^2 + mt^2*s12*s14*s24 + 1/2*mt^2*s12*
      s14*s23 + 1/2*mt^2*s12*s14^2 + 3/2*mt^2*s12*s13*s24 + mt^2*s12*s13*s23
       + mt^2*s12*s13*s14 + 1/2*mt^2*s12*s13^2 + mt^2*s12^2*s24 + mt^2*s12^2*
      s23 + mt^2*s12^2*s14 + mt^2*s12^2*s13 + 1/2*mt^2*s12^3 + 1/2*mt^2*mh^2*
      s14*s23 - 1/2*mt^2*mh^2*s13*s24 - mt^2*mh^2*s12*s24 - mt^2*mh^2*s12*s23
       - mt^2*mh^2*s12*s14 - mt^2*mh^2*s12*s13 - mt^2*mh^2*s12^2 + 1/2*mt^2*
      mh^4*s12 - 1/2*mt^4*s24^2 + 1/2*mt^4*s23^2 + 2*mt^4*s14*s23 + 1/2*mt^4*
      s14^2 - 2*mt^4*s13*s24 - 1/2*mt^4*s13^2 - 3/2*mt^4*s12*s24 - 1/2*mt^4*
      s12*s23 - 1/2*mt^4*s12*s14 - 3/2*mt^4*s12*s13 - mt^4*s12^2 + 1/2*mt^4*
      mh^2*s24 - 1/2*mt^4*mh^2*s23 - 1/2*mt^4*mh^2*s14 + 1/2*mt^4*mh^2*s13 + 
      mt^4*mh^2*s12 + mt^6*s24 - mt^6*s23 - mt^6*s14 + mt^6*s13 + 1/4*denom(1/
      2*s12)*s13*s14*s23^2*s24 + 1/4*denom(1/2*s12)*s13*s14*s23^3 + 1/4*denom(
      1/2*s12)*s13*s14^2*s23^2 - 1/4*denom(1/2*s12)*s13^2*s23*s24^2 - 1/4*
      denom(1/2*s12)*s13^2*s23^2*s24 - 1/4*denom(1/2*s12)*s13^2*s14*s23*s24 + 
      1/4*denom(1/2*s12)*s13^2*s14*s23^2 - 1/4*denom(1/2*s12)*s13^3*s23*s24 - 
      1/4*denom(1/2*s12)*s12*s13*s23*s24^2 - 1/2*denom(1/2*s12)*s12*s13*s23^2*
      s24 - 1/4*denom(1/2*s12)*s12*s13*s23^3 - 1/2*denom(1/2*s12)*s12*s13*s14*
      s23*s24 - 1/4*denom(1/2*s12)*s12*s13*s14*s23^2 - 1/4*denom(1/2*s12)*s12*
      s13*s14^2*s23 - 3/4*denom(1/2*s12)*s12*s13^2*s23*s24 - 1/2*denom(1/2*s12
      )*s12*s13^2*s23^2 - 1/2*denom(1/2*s12)*s12*s13^2*s14*s23 - 1/4*denom(1/2
      *s12)*s12*s13^3*s23 - 1/2*denom(1/2*s12)*s12^2*s13*s23*s24 - 1/2*denom(1/
      2*s12)*s12^2*s13*s23^2 - 1/2*denom(1/2*s12)*s12^2*s13*s14*s23 - 1/2*
      denom(1/2*s12)*s12^2*s13^2*s23 - 1/4*denom(1/2*s12)*s12^3*s13*s23 - 1/4*
      denom(1/2*s12)*mh^2*s13*s14*s23^2 + 1/4*denom(1/2*s12)*mh^2*s13^2*s23*
      s24 + 1/2*denom(1/2*s12)*mh^2*s12*s13*s23*s24 + 1/2*denom(1/2*s12)*mh^2*
      s12*s13*s23^2 + 1/2*denom(1/2*s12)*mh^2*s12*s13*s14*s23 + 1/2*denom(1/2*
      s12)*mh^2*s12*s13^2*s23 + 1/2*denom(1/2*s12)*mh^2*s12^2*s13*s23 - 1/4*
      denom(1/2*s12)*mh^4*s12*s13*s23 - 1/4*denom(1/2*s12)*mt^2*s14*s23^2*s24
       - 1/4*denom(1/2*s12)*mt^2*s14*s23^3 - 1/2*denom(1/2*s12)*mt^2*s14^2*
      s23^2 + 1/2*denom(1/2*s12)*mt^2*s13*s23*s24^2 + 1/4*denom(1/2*s12)*mt^2*
      s13*s23^2*s24 - 1/4*denom(1/2*s12)*mt^2*s13*s23^3 - 3/2*denom(1/2*s12)*
      mt^2*s13*s14*s23^2 - 1/2*denom(1/2*s12)*mt^2*s13*s14^2*s23 + 1/2*denom(1/
      2*s12)*mt^2*s13^2*s24^2 + 3/2*denom(1/2*s12)*mt^2*s13^2*s23*s24 + 1/4*
      denom(1/2*s12)*mt^2*s13^2*s14*s24 - 1/4*denom(1/2*s12)*mt^2*s13^2*s14*
      s23 + 1/4*denom(1/2*s12)*mt^2*s13^3*s24 + 1/4*denom(1/2*s12)*mt^2*s13^3*
      s23 + 1/4*denom(1/2*s12)*mt^2*s12*s23*s24^2 + 1/2*denom(1/2*s12)*mt^2*
      s12*s23^2*s24 + 1/4*denom(1/2*s12)*mt^2*s12*s23^3 + 3/4*denom(1/2*s12)*
      mt^2*s12*s14*s23*s24 + 1/2*denom(1/2*s12)*mt^2*s12*s14*s23^2 + 1/2*
      denom(1/2*s12)*mt^2*s12*s14^2*s23 + 1/2*denom(1/2*s12)*mt^2*s12*s13*
      s24^2 + 9/4*denom(1/2*s12)*mt^2*s12*s13*s23*s24 + denom(1/2*s12)*mt^2*
      s12*s13*s23^2 + 3/4*denom(1/2*s12)*mt^2*s12*s13*s14*s24 + 5/4*denom(1/2*
      s12)*mt^2*s12*s13*s14*s23 + 1/4*denom(1/2*s12)*mt^2*s12*s13*s14^2 + 
      denom(1/2*s12)*mt^2*s12*s13^2*s24 + 3/2*denom(1/2*s12)*mt^2*s12*s13^2*
      s23 + 1/2*denom(1/2*s12)*mt^2*s12*s13^2*s14 + 1/4*denom(1/2*s12)*mt^2*
      s12*s13^3 + 1/2*denom(1/2*s12)*mt^2*s12^2*s23*s24 + 1/2*denom(1/2*s12)*
      mt^2*s12^2*s23^2 + 3/4*denom(1/2*s12)*mt^2*s12^2*s14*s23 + 3/4*denom(1/2
      *s12)*mt^2*s12^2*s13*s24 + 3/2*denom(1/2*s12)*mt^2*s12^2*s13*s23 + 1/2*
      denom(1/2*s12)*mt^2*s12^2*s13*s14 + 1/2*denom(1/2*s12)*mt^2*s12^2*s13^2
       + 1/4*denom(1/2*s12)*mt^2*s12^3*s23 + 1/4*denom(1/2*s12)*mt^2*s12^3*s13
       + 1/4*denom(1/2*s12)*mt^2*mh^2*s14*s23^2 - 1/2*denom(1/2*s12)*mt^2*mh^2
      *s13*s23*s24 + 1/4*denom(1/2*s12)*mt^2*mh^2*s13*s23^2 + 1/2*denom(1/2*
      s12)*mt^2*mh^2*s13*s14*s23 - 1/4*denom(1/2*s12)*mt^2*mh^2*s13^2*s24 - 1/
      4*denom(1/2*s12)*mt^2*mh^2*s13^2*s23 - 1/2*denom(1/2*s12)*mt^2*mh^2*s12*
      s23*s24 - 1/2*denom(1/2*s12)*mt^2*mh^2*s12*s23^2 - 3/4*denom(1/2*s12)*
      mt^2*mh^2*s12*s14*s23 - 3/4*denom(1/2*s12)*mt^2*mh^2*s12*s13*s24 - 3/2*
      denom(1/2*s12)*mt^2*mh^2*s12*s13*s23 - 1/2*denom(1/2*s12)*mt^2*mh^2*s12*
      s13*s14 - 1/2*denom(1/2*s12)*mt^2*mh^2*s12*s13^2 - 1/2*denom(1/2*s12)*
      mt^2*mh^2*s12^2*s23 - 1/2*denom(1/2*s12)*mt^2*mh^2*s12^2*s13 + 1/4*
      denom(1/2*s12)*mt^2*mh^4*s12*s23 + 1/4*denom(1/2*s12)*mt^2*mh^4*s12*s13
       - 1/4*denom(1/2*s12)*mt^4*s23*s24^2 + 1/4*denom(1/2*s12)*mt^4*s23^3 + 1/
      4*denom(1/2*s12)*mt^4*s14*s23*s24 + 7/4*denom(1/2*s12)*mt^4*s14*s23^2 + 
      denom(1/2*s12)*mt^4*s14^2*s23 - denom(1/2*s12)*mt^4*s13*s24^2 - 7/4*
      denom(1/2*s12)*mt^4*s13*s23*s24 + 3/4*denom(1/2*s12)*mt^4*s13*s23^2 - 1/
      4*denom(1/2*s12)*mt^4*s13*s14*s24 + 7/4*denom(1/2*s12)*mt^4*s13*s14*s23
       + 1/4*denom(1/2*s12)*mt^4*s13*s14^2 - 7/4*denom(1/2*s12)*mt^4*s13^2*s24
       - 3/4*denom(1/2*s12)*mt^4*s13^2*s23 - 1/4*denom(1/2*s12)*mt^4*s13^3 - 1/
      2*denom(1/2*s12)*mt^4*s12*s24^2 - 7/4*denom(1/2*s12)*mt^4*s12*s23*s24 - 
      3/4*denom(1/2*s12)*mt^4*s12*s23^2 - denom(1/2*s12)*mt^4*s12*s14*s24 - 
      denom(1/2*s12)*mt^4*s12*s14*s23 - 1/2*denom(1/2*s12)*mt^4*s12*s14^2 - 2*
      denom(1/2*s12)*mt^4*s12*s13*s24 - 2*denom(1/2*s12)*mt^4*s12*s13*s23 - 5/
      4*denom(1/2*s12)*mt^4*s12*s13*s14 - 5/4*denom(1/2*s12)*mt^4*s12*s13^2 - 
      3/4*denom(1/2*s12)*mt^4*s12^2*s24 - 5/4*denom(1/2*s12)*mt^4*s12^2*s23 - 
      3/4*denom(1/2*s12)*mt^4*s12^2*s14 - 5/4*denom(1/2*s12)*mt^4*s12^2*s13 - 
      1/4*denom(1/2*s12)*mt^4*s12^3 + 1/4*denom(1/2*s12)*mt^4*mh^2*s23*s24 - 1/
      4*denom(1/2*s12)*mt^4*mh^2*s23^2 - 1/2*denom(1/2*s12)*mt^4*mh^2*s14*s23
       + 1/2*denom(1/2*s12)*mt^4*mh^2*s13*s24 - 1/4*denom(1/2*s12)*mt^4*mh^2*
      s13*s14 + 1/4*denom(1/2*s12)*mt^4*mh^2*s13^2 + 3/4*denom(1/2*s12)*mt^4*
      mh^2*s12*s24 + 5/4*denom(1/2*s12)*mt^4*mh^2*s12*s23 + 3/4*denom(1/2*s12)
      *mt^4*mh^2*s12*s14 + 5/4*denom(1/2*s12)*mt^4*mh^2*s12*s13 + 1/2*denom(1/
      2*s12)*mt^4*mh^2*s12^2 - 1/4*denom(1/2*s12)*mt^4*mh^4*s12 + 1/2*denom(1/
      2*s12)*mt^6*s24^2 + 1/2*denom(1/2*s12)*mt^6*s23*s24 - denom(1/2*s12)*
      mt^6*s23^2 - 5/2*denom(1/2*s12)*mt^6*s14*s23 - 1/2*denom(1/2*s12)*mt^6*
      s14^2 + 5/2*denom(1/2*s12)*mt^6*s13*s24 - 1/2*denom(1/2*s12)*mt^6*s13*
      s14 + denom(1/2*s12)*mt^6*s13^2 + 5/4*denom(1/2*s12)*mt^6*s12*s24 + 3/4*
      denom(1/2*s12)*mt^6*s12*s23 + 3/4*denom(1/2*s12)*mt^6*s12*s14 + 5/4*
      denom(1/2*s12)*mt^6*s12*s13 + denom(1/2*s12)*mt^6*s12^2 - 1/4*denom(1/2*
      s12)*mt^6*mh^2*s24 + 1/4*denom(1/2*s12)*mt^6*mh^2*s23 + 1/4*denom(1/2*
      s12)*mt^6*mh^2*s14 - 1/4*denom(1/2*s12)*mt^6*mh^2*s13 - denom(1/2*s12)*
      mt^6*mh^2*s12 - denom(1/2*s12)*mt^8*s24 + denom(1/2*s12)*mt^8*s23 + 
      denom(1/2*s12)*mt^8*s14 - denom(1/2*s12)*mt^8*s13 + 1/8*denom(1/4*s12^2)
      *s13*s14^2*s23^3 - 1/8*denom(1/4*s12^2)*s13^3*s23*s24^2 - 1/8*denom(1/4*
      s12^2)*s12*s13*s14*s23^2*s24 - 1/8*denom(1/4*s12^2)*s12*s13*s14*s23^3 - 
      1/8*denom(1/4*s12^2)*s12*s13*s14^2*s23^2 - 1/8*denom(1/4*s12^2)*s12*
      s13^2*s23*s24^2 - 1/8*denom(1/4*s12^2)*s12*s13^2*s23^2*s24 - 1/8*denom(1/
      4*s12^2)*s12*s13^2*s14*s23*s24 - 1/8*denom(1/4*s12^2)*s12*s13^2*s14*
      s23^2 - 1/8*denom(1/4*s12^2)*s12*s13^3*s23*s24 - 1/8*denom(1/4*s12^2)*
      s12^2*s13*s14*s23^2 - 1/8*denom(1/4*s12^2)*s12^2*s13^2*s23*s24 + 1/8*
      denom(1/4*s12^2)*mh^2*s12*s13*s14*s23^2 + 1/8*denom(1/4*s12^2)*mh^2*s12*
      s13^2*s23*s24 - 1/8*denom(1/4*s12^2)*mt^2*s14^2*s23^3 - 1/4*denom(1/4*
      s12^2)*mt^2*s13*s14*s23^3 - 3/8*denom(1/4*s12^2)*mt^2*s13*s14^2*s23^2 + 
      3/8*denom(1/4*s12^2)*mt^2*s13^2*s23*s24^2 + 1/8*denom(1/4*s12^2)*mt^2*
      s13^3*s24^2 + 1/4*denom(1/4*s12^2)*mt^2*s13^3*s23*s24 + 1/8*denom(1/4*
      s12^2)*mt^2*s12*s14*s23^2*s24 + 1/8*denom(1/4*s12^2)*mt^2*s12*s14*s23^3
       + 1/8*denom(1/4*s12^2)*mt^2*s12*s14^2*s23^2 + 1/4*denom(1/4*s12^2)*mt^2
      *s12*s13*s23*s24^2 + 3/8*denom(1/4*s12^2)*mt^2*s12*s13*s23^2*s24 + 1/8*
      denom(1/4*s12^2)*mt^2*s12*s13*s23^3 + 1/2*denom(1/4*s12^2)*mt^2*s12*s13*
      s14*s23*s24 + 1/2*denom(1/4*s12^2)*mt^2*s12*s13*s14*s23^2 + 1/4*denom(1/
      4*s12^2)*mt^2*s12*s13*s14^2*s23 + 1/8*denom(1/4*s12^2)*mt^2*s12*s13^2*
      s24^2 + 1/2*denom(1/4*s12^2)*mt^2*s12*s13^2*s23*s24 + 1/4*denom(1/4*
      s12^2)*mt^2*s12*s13^2*s23^2 + 1/8*denom(1/4*s12^2)*mt^2*s12*s13^2*s14*
      s24 + 3/8*denom(1/4*s12^2)*mt^2*s12*s13^2*s14*s23 + 1/8*denom(1/4*s12^2)
      *mt^2*s12*s13^3*s24 + 1/8*denom(1/4*s12^2)*mt^2*s12*s13^3*s23 + 1/8*
      denom(1/4*s12^2)*mt^2*s12^2*s14*s23^2 + 1/4*denom(1/4*s12^2)*mt^2*s12^2*
      s13*s23*s24 + 1/8*denom(1/4*s12^2)*mt^2*s12^2*s13*s23^2 + 1/4*denom(1/4*
      s12^2)*mt^2*s12^2*s13*s14*s23 + 1/8*denom(1/4*s12^2)*mt^2*s12^2*s13^2*
      s24 + 1/8*denom(1/4*s12^2)*mt^2*s12^2*s13^2*s23 - 1/8*denom(1/4*s12^2)*
      mt^2*mh^2*s12*s14*s23^2 - 1/4*denom(1/4*s12^2)*mt^2*mh^2*s12*s13*s23*s24
       - 1/8*denom(1/4*s12^2)*mt^2*mh^2*s12*s13*s23^2 - 1/4*denom(1/4*s12^2)*
      mt^2*mh^2*s12*s13*s14*s23 - 1/8*denom(1/4*s12^2)*mt^2*mh^2*s12*s13^2*s24
       - 1/8*denom(1/4*s12^2)*mt^2*mh^2*s12*s13^2*s23 + 1/4*denom(1/4*s12^2)*
      mt^4*s14*s23^3 + 3/8*denom(1/4*s12^2)*mt^4*s14^2*s23^2 - 3/8*denom(1/4*
      s12^2)*mt^4*s13*s23*s24^2 + 1/8*denom(1/4*s12^2)*mt^4*s13*s23^3 + 3/4*
      denom(1/4*s12^2)*mt^4*s13*s14*s23^2 + 3/8*denom(1/4*s12^2)*mt^4*s13*
      s14^2*s23 - 3/8*denom(1/4*s12^2)*mt^4*s13^2*s24^2 - 3/4*denom(1/4*s12^2)
      *mt^4*s13^2*s23*s24 - 1/4*denom(1/4*s12^2)*mt^4*s13^3*s24 - 1/8*denom(1/
      4*s12^2)*mt^4*s13^3*s23 - 1/8*denom(1/4*s12^2)*mt^4*s12*s23*s24^2 - 1/4*
      denom(1/4*s12^2)*mt^4*s12*s23^2*s24 - 1/8*denom(1/4*s12^2)*mt^4*s12*
      s23^3 - 3/8*denom(1/4*s12^2)*mt^4*s12*s14*s23*s24 - 3/8*denom(1/4*s12^2)
      *mt^4*s12*s14*s23^2 - 1/4*denom(1/4*s12^2)*mt^4*s12*s14^2*s23 - 1/4*
      denom(1/4*s12^2)*mt^4*s12*s13*s24^2 - 7/8*denom(1/4*s12^2)*mt^4*s12*s13*
      s23*s24 - 5/8*denom(1/4*s12^2)*mt^4*s12*s13*s23^2 - 3/8*denom(1/4*s12^2)
      *mt^4*s12*s13*s14*s24 - 7/8*denom(1/4*s12^2)*mt^4*s12*s13*s14*s23 - 1/8*
      denom(1/4*s12^2)*mt^4*s12*s13*s14^2 - 3/8*denom(1/4*s12^2)*mt^4*s12*
      s13^2*s24 - 5/8*denom(1/4*s12^2)*mt^4*s12*s13^2*s23 - 1/4*denom(1/4*
      s12^2)*mt^4*s12*s13^2*s14 - 1/8*denom(1/4*s12^2)*mt^4*s12*s13^3 - 1/8*
      denom(1/4*s12^2)*mt^4*s12^2*s23*s24 - 1/8*denom(1/4*s12^2)*mt^4*s12^2*
      s23^2 - 1/4*denom(1/4*s12^2)*mt^4*s12^2*s14*s23 - 1/4*denom(1/4*s12^2)*
      mt^4*s12^2*s13*s24 - 1/2*denom(1/4*s12^2)*mt^4*s12^2*s13*s23 - 1/8*
      denom(1/4*s12^2)*mt^4*s12^2*s13*s14 - 1/8*denom(1/4*s12^2)*mt^4*s12^2*
      s13^2 + 1/8*denom(1/4*s12^2)*mt^4*mh^2*s12*s23*s24 + 1/8*denom(1/4*s12^2
      )*mt^4*mh^2*s12*s23^2 + 1/4*denom(1/4*s12^2)*mt^4*mh^2*s12*s14*s23 + 1/4
      *denom(1/4*s12^2)*mt^4*mh^2*s12*s13*s24 + 1/2*denom(1/4*s12^2)*mt^4*mh^2
      *s12*s13*s23 + 1/8*denom(1/4*s12^2)*mt^4*mh^2*s12*s13*s14 + 1/8*denom(1/
      4*s12^2)*mt^4*mh^2*s12*s13^2 + 1/8*denom(1/4*s12^2)*mt^6*s23*s24^2 - 1/8
      *denom(1/4*s12^2)*mt^6*s23^3 - 3/4*denom(1/4*s12^2)*mt^6*s14*s23^2 - 3/8
      *denom(1/4*s12^2)*mt^6*s14^2*s23 + 3/8*denom(1/4*s12^2)*mt^6*s13*s24^2
       + 3/4*denom(1/4*s12^2)*mt^6*s13*s23*s24 - 3/8*denom(1/4*s12^2)*mt^6*s13
      *s23^2 - 3/4*denom(1/4*s12^2)*mt^6*s13*s14*s23 - 1/8*denom(1/4*s12^2)*
      mt^6*s13*s14^2 + 3/4*denom(1/4*s12^2)*mt^6*s13^2*s24 + 3/8*denom(1/4*
      s12^2)*mt^6*s13^2*s23 + 1/8*denom(1/4*s12^2)*mt^6*s13^3 + 1/8*denom(1/4*
      s12^2)*mt^6*s12*s24^2 + 1/2*denom(1/4*s12^2)*mt^6*s12*s23*s24 + 3/8*
      denom(1/4*s12^2)*mt^6*s12*s23^2 + 1/4*denom(1/4*s12^2)*mt^6*s12*s14*s24
       + 1/2*denom(1/4*s12^2)*mt^6*s12*s14*s23 + 1/8*denom(1/4*s12^2)*mt^6*s12
      *s14^2 + 1/2*denom(1/4*s12^2)*mt^6*s12*s13*s24 + 3/4*denom(1/4*s12^2)*
      mt^6*s12*s13*s23 + 1/2*denom(1/4*s12^2)*mt^6*s12*s13*s14 + 3/8*denom(1/4
      *s12^2)*mt^6*s12*s13^2 + 1/8*denom(1/4*s12^2)*mt^6*s12^2*s24 + 3/8*
      denom(1/4*s12^2)*mt^6*s12^2*s23 + 1/8*denom(1/4*s12^2)*mt^6*s12^2*s14 + 
      3/8*denom(1/4*s12^2)*mt^6*s12^2*s13 - 1/8*denom(1/4*s12^2)*mt^6*mh^2*s12
      *s24 - 3/8*denom(1/4*s12^2)*mt^6*mh^2*s12*s23 - 1/8*denom(1/4*s12^2)*
      mt^6*mh^2*s12*s14 - 3/8*denom(1/4*s12^2)*mt^6*mh^2*s12*s13 - 1/8*denom(1/
      4*s12^2)*mt^8*s24^2 - 1/4*denom(1/4*s12^2)*mt^8*s23*s24 + 3/8*denom(1/4*
      s12^2)*mt^8*s23^2 + 3/4*denom(1/4*s12^2)*mt^8*s14*s23 + 1/8*denom(1/4*
      s12^2)*mt^8*s14^2 - 3/4*denom(1/4*s12^2)*mt^8*s13*s24 + 1/4*denom(1/4*
      s12^2)*mt^8*s13*s14 - 3/8*denom(1/4*s12^2)*mt^8*s13^2 - 1/4*denom(1/4*
      s12^2)*mt^8*s12*s24 - 1/4*denom(1/4*s12^2)*mt^8*s12*s23 - 1/4*denom(1/4*
      s12^2)*mt^8*s12*s14 - 1/4*denom(1/4*s12^2)*mt^8*s12*s13 - 1/4*denom(1/4*
      s12^2)*mt^8*s12^2 + 1/4*denom(1/4*s12^2)*mt^8*mh^2*s12 + 1/4*denom(1/4*
      s12^2)*mt^10*s24 - 1/4*denom(1/4*s12^2)*mt^10*s23 - 1/4*denom(1/4*s12^2)
      *mt^10*s14 + 1/4*denom(1/4*s12^2)*mt^10*s13;
 
 .sort
id KMatrix(13,3) =   - 1/2*mt^2*s14*s23*s24 - 1/2*mt^2*s14*s23^2 - 1/2*mt^2*
      s14^2*s23 + 1/2*mt^2*s13*s24^2 + 1/2*mt^2*s13*s23*s24 + 1/2*mt^2*s13*s14
      *s24 - 1/2*mt^2*s13*s14*s23 + 1/2*mt^2*s13^2*s24 + 1/2*mt^2*s12*s24^2 + 
      mt^2*s12*s23*s24 + 1/2*mt^2*s12*s23^2 + mt^2*s12*s14*s24 + 1/2*mt^2*s12*
      s14*s23 + 1/2*mt^2*s12*s14^2 + 3/2*mt^2*s12*s13*s24 + mt^2*s12*s13*s23
       + mt^2*s12*s13*s14 + 1/2*mt^2*s12*s13^2 + mt^2*s12^2*s24 + mt^2*s12^2*
      s23 + mt^2*s12^2*s14 + mt^2*s12^2*s13 + 1/2*mt^2*s12^3 + 1/2*mt^2*mh^2*
      s14*s23 - 1/2*mt^2*mh^2*s13*s24 - mt^2*mh^2*s12*s24 - mt^2*mh^2*s12*s23
       - mt^2*mh^2*s12*s14 - mt^2*mh^2*s12*s13 - mt^2*mh^2*s12^2 + 1/2*mt^2*
      mh^4*s12 - 1/2*mt^4*s24^2 + 1/2*mt^4*s23^2 + 2*mt^4*s14*s23 + 1/2*mt^4*
      s14^2 - 2*mt^4*s13*s24 - 1/2*mt^4*s13^2 - 3/2*mt^4*s12*s24 - 1/2*mt^4*
      s12*s23 - 1/2*mt^4*s12*s14 - 3/2*mt^4*s12*s13 - mt^4*s12^2 + 1/2*mt^4*
      mh^2*s24 - 1/2*mt^4*mh^2*s23 - 1/2*mt^4*mh^2*s14 + 1/2*mt^4*mh^2*s13 + 
      mt^4*mh^2*s12 + mt^6*s24 - mt^6*s23 - mt^6*s14 + mt^6*s13 + 1/4*denom(1/
      2*s12)*s13*s14*s23^2*s24 + 1/4*denom(1/2*s12)*s13*s14*s23^3 + 1/4*denom(
      1/2*s12)*s13*s14^2*s23^2 - 1/4*denom(1/2*s12)*s13^2*s23*s24^2 - 1/4*
      denom(1/2*s12)*s13^2*s23^2*s24 - 1/4*denom(1/2*s12)*s13^2*s14*s23*s24 + 
      1/4*denom(1/2*s12)*s13^2*s14*s23^2 - 1/4*denom(1/2*s12)*s13^3*s23*s24 - 
      1/4*denom(1/2*s12)*s12*s13*s23*s24^2 - 1/2*denom(1/2*s12)*s12*s13*s23^2*
      s24 - 1/4*denom(1/2*s12)*s12*s13*s23^3 - 1/2*denom(1/2*s12)*s12*s13*s14*
      s23*s24 - 1/4*denom(1/2*s12)*s12*s13*s14*s23^2 - 1/4*denom(1/2*s12)*s12*
      s13*s14^2*s23 - 3/4*denom(1/2*s12)*s12*s13^2*s23*s24 - 1/2*denom(1/2*s12
      )*s12*s13^2*s23^2 - 1/2*denom(1/2*s12)*s12*s13^2*s14*s23 - 1/4*denom(1/2
      *s12)*s12*s13^3*s23 - 1/2*denom(1/2*s12)*s12^2*s13*s23*s24 - 1/2*denom(1/
      2*s12)*s12^2*s13*s23^2 - 1/2*denom(1/2*s12)*s12^2*s13*s14*s23 - 1/2*
      denom(1/2*s12)*s12^2*s13^2*s23 - 1/4*denom(1/2*s12)*s12^3*s13*s23 - 1/4*
      denom(1/2*s12)*mh^2*s13*s14*s23^2 + 1/4*denom(1/2*s12)*mh^2*s13^2*s23*
      s24 + 1/2*denom(1/2*s12)*mh^2*s12*s13*s23*s24 + 1/2*denom(1/2*s12)*mh^2*
      s12*s13*s23^2 + 1/2*denom(1/2*s12)*mh^2*s12*s13*s14*s23 + 1/2*denom(1/2*
      s12)*mh^2*s12*s13^2*s23 + 1/2*denom(1/2*s12)*mh^2*s12^2*s13*s23 - 1/4*
      denom(1/2*s12)*mh^4*s12*s13*s23 - 1/4*denom(1/2*s12)*mt^2*s14*s23^2*s24
       - 1/4*denom(1/2*s12)*mt^2*s14*s23^3 - 1/2*denom(1/2*s12)*mt^2*s14^2*
      s23^2 + 1/2*denom(1/2*s12)*mt^2*s13*s23*s24^2 + 1/4*denom(1/2*s12)*mt^2*
      s13*s23^2*s24 - 1/4*denom(1/2*s12)*mt^2*s13*s23^3 - 3/2*denom(1/2*s12)*
      mt^2*s13*s14*s23^2 - 1/2*denom(1/2*s12)*mt^2*s13*s14^2*s23 + 1/2*denom(1/
      2*s12)*mt^2*s13^2*s24^2 + 3/2*denom(1/2*s12)*mt^2*s13^2*s23*s24 + 1/4*
      denom(1/2*s12)*mt^2*s13^2*s14*s24 - 1/4*denom(1/2*s12)*mt^2*s13^2*s14*
      s23 + 1/4*denom(1/2*s12)*mt^2*s13^3*s24 + 1/4*denom(1/2*s12)*mt^2*s13^3*
      s23 + 1/4*denom(1/2*s12)*mt^2*s12*s23*s24^2 + 1/2*denom(1/2*s12)*mt^2*
      s12*s23^2*s24 + 1/4*denom(1/2*s12)*mt^2*s12*s23^3 + 3/4*denom(1/2*s12)*
      mt^2*s12*s14*s23*s24 + 1/2*denom(1/2*s12)*mt^2*s12*s14*s23^2 + 1/2*
      denom(1/2*s12)*mt^2*s12*s14^2*s23 + 1/2*denom(1/2*s12)*mt^2*s12*s13*
      s24^2 + 9/4*denom(1/2*s12)*mt^2*s12*s13*s23*s24 + denom(1/2*s12)*mt^2*
      s12*s13*s23^2 + 3/4*denom(1/2*s12)*mt^2*s12*s13*s14*s24 + 5/4*denom(1/2*
      s12)*mt^2*s12*s13*s14*s23 + 1/4*denom(1/2*s12)*mt^2*s12*s13*s14^2 + 
      denom(1/2*s12)*mt^2*s12*s13^2*s24 + 3/2*denom(1/2*s12)*mt^2*s12*s13^2*
      s23 + 1/2*denom(1/2*s12)*mt^2*s12*s13^2*s14 + 1/4*denom(1/2*s12)*mt^2*
      s12*s13^3 + 1/2*denom(1/2*s12)*mt^2*s12^2*s23*s24 + 1/2*denom(1/2*s12)*
      mt^2*s12^2*s23^2 + 3/4*denom(1/2*s12)*mt^2*s12^2*s14*s23 + 3/4*denom(1/2
      *s12)*mt^2*s12^2*s13*s24 + 3/2*denom(1/2*s12)*mt^2*s12^2*s13*s23 + 1/2*
      denom(1/2*s12)*mt^2*s12^2*s13*s14 + 1/2*denom(1/2*s12)*mt^2*s12^2*s13^2
       + 1/4*denom(1/2*s12)*mt^2*s12^3*s23 + 1/4*denom(1/2*s12)*mt^2*s12^3*s13
       + 1/4*denom(1/2*s12)*mt^2*mh^2*s14*s23^2 - 1/2*denom(1/2*s12)*mt^2*mh^2
      *s13*s23*s24 + 1/4*denom(1/2*s12)*mt^2*mh^2*s13*s23^2 + 1/2*denom(1/2*
      s12)*mt^2*mh^2*s13*s14*s23 - 1/4*denom(1/2*s12)*mt^2*mh^2*s13^2*s24 - 1/
      4*denom(1/2*s12)*mt^2*mh^2*s13^2*s23 - 1/2*denom(1/2*s12)*mt^2*mh^2*s12*
      s23*s24 - 1/2*denom(1/2*s12)*mt^2*mh^2*s12*s23^2 - 3/4*denom(1/2*s12)*
      mt^2*mh^2*s12*s14*s23 - 3/4*denom(1/2*s12)*mt^2*mh^2*s12*s13*s24 - 3/2*
      denom(1/2*s12)*mt^2*mh^2*s12*s13*s23 - 1/2*denom(1/2*s12)*mt^2*mh^2*s12*
      s13*s14 - 1/2*denom(1/2*s12)*mt^2*mh^2*s12*s13^2 - 1/2*denom(1/2*s12)*
      mt^2*mh^2*s12^2*s23 - 1/2*denom(1/2*s12)*mt^2*mh^2*s12^2*s13 + 1/4*
      denom(1/2*s12)*mt^2*mh^4*s12*s23 + 1/4*denom(1/2*s12)*mt^2*mh^4*s12*s13
       - 1/4*denom(1/2*s12)*mt^4*s23*s24^2 + 1/4*denom(1/2*s12)*mt^4*s23^3 + 1/
      4*denom(1/2*s12)*mt^4*s14*s23*s24 + 7/4*denom(1/2*s12)*mt^4*s14*s23^2 + 
      denom(1/2*s12)*mt^4*s14^2*s23 - denom(1/2*s12)*mt^4*s13*s24^2 - 7/4*
      denom(1/2*s12)*mt^4*s13*s23*s24 + 3/4*denom(1/2*s12)*mt^4*s13*s23^2 - 1/
      4*denom(1/2*s12)*mt^4*s13*s14*s24 + 7/4*denom(1/2*s12)*mt^4*s13*s14*s23
       + 1/4*denom(1/2*s12)*mt^4*s13*s14^2 - 7/4*denom(1/2*s12)*mt^4*s13^2*s24
       - 3/4*denom(1/2*s12)*mt^4*s13^2*s23 - 1/4*denom(1/2*s12)*mt^4*s13^3 - 1/
      2*denom(1/2*s12)*mt^4*s12*s24^2 - 7/4*denom(1/2*s12)*mt^4*s12*s23*s24 - 
      3/4*denom(1/2*s12)*mt^4*s12*s23^2 - denom(1/2*s12)*mt^4*s12*s14*s24 - 
      denom(1/2*s12)*mt^4*s12*s14*s23 - 1/2*denom(1/2*s12)*mt^4*s12*s14^2 - 2*
      denom(1/2*s12)*mt^4*s12*s13*s24 - 2*denom(1/2*s12)*mt^4*s12*s13*s23 - 5/
      4*denom(1/2*s12)*mt^4*s12*s13*s14 - 5/4*denom(1/2*s12)*mt^4*s12*s13^2 - 
      3/4*denom(1/2*s12)*mt^4*s12^2*s24 - 5/4*denom(1/2*s12)*mt^4*s12^2*s23 - 
      3/4*denom(1/2*s12)*mt^4*s12^2*s14 - 5/4*denom(1/2*s12)*mt^4*s12^2*s13 - 
      1/4*denom(1/2*s12)*mt^4*s12^3 + 1/4*denom(1/2*s12)*mt^4*mh^2*s23*s24 - 1/
      4*denom(1/2*s12)*mt^4*mh^2*s23^2 - 1/2*denom(1/2*s12)*mt^4*mh^2*s14*s23
       + 1/2*denom(1/2*s12)*mt^4*mh^2*s13*s24 - 1/4*denom(1/2*s12)*mt^4*mh^2*
      s13*s14 + 1/4*denom(1/2*s12)*mt^4*mh^2*s13^2 + 3/4*denom(1/2*s12)*mt^4*
      mh^2*s12*s24 + 5/4*denom(1/2*s12)*mt^4*mh^2*s12*s23 + 3/4*denom(1/2*s12)
      *mt^4*mh^2*s12*s14 + 5/4*denom(1/2*s12)*mt^4*mh^2*s12*s13 + 1/2*denom(1/
      2*s12)*mt^4*mh^2*s12^2 - 1/4*denom(1/2*s12)*mt^4*mh^4*s12 + 1/2*denom(1/
      2*s12)*mt^6*s24^2 + 1/2*denom(1/2*s12)*mt^6*s23*s24 - denom(1/2*s12)*
      mt^6*s23^2 - 5/2*denom(1/2*s12)*mt^6*s14*s23 - 1/2*denom(1/2*s12)*mt^6*
      s14^2 + 5/2*denom(1/2*s12)*mt^6*s13*s24 - 1/2*denom(1/2*s12)*mt^6*s13*
      s14 + denom(1/2*s12)*mt^6*s13^2 + 5/4*denom(1/2*s12)*mt^6*s12*s24 + 3/4*
      denom(1/2*s12)*mt^6*s12*s23 + 3/4*denom(1/2*s12)*mt^6*s12*s14 + 5/4*
      denom(1/2*s12)*mt^6*s12*s13 + denom(1/2*s12)*mt^6*s12^2 - 1/4*denom(1/2*
      s12)*mt^6*mh^2*s24 + 1/4*denom(1/2*s12)*mt^6*mh^2*s23 + 1/4*denom(1/2*
      s12)*mt^6*mh^2*s14 - 1/4*denom(1/2*s12)*mt^6*mh^2*s13 - denom(1/2*s12)*
      mt^6*mh^2*s12 - denom(1/2*s12)*mt^8*s24 + denom(1/2*s12)*mt^8*s23 + 
      denom(1/2*s12)*mt^8*s14 - denom(1/2*s12)*mt^8*s13 + 1/8*denom(1/4*s12^2)
      *s13*s14^2*s23^3 - 1/8*denom(1/4*s12^2)*s13^3*s23*s24^2 - 1/8*denom(1/4*
      s12^2)*s12*s13*s14*s23^2*s24 - 1/8*denom(1/4*s12^2)*s12*s13*s14*s23^3 - 
      1/8*denom(1/4*s12^2)*s12*s13*s14^2*s23^2 - 1/8*denom(1/4*s12^2)*s12*
      s13^2*s23*s24^2 - 1/8*denom(1/4*s12^2)*s12*s13^2*s23^2*s24 - 1/8*denom(1/
      4*s12^2)*s12*s13^2*s14*s23*s24 - 1/8*denom(1/4*s12^2)*s12*s13^2*s14*
      s23^2 - 1/8*denom(1/4*s12^2)*s12*s13^3*s23*s24 - 1/8*denom(1/4*s12^2)*
      s12^2*s13*s14*s23^2 - 1/8*denom(1/4*s12^2)*s12^2*s13^2*s23*s24 + 1/8*
      denom(1/4*s12^2)*mh^2*s12*s13*s14*s23^2 + 1/8*denom(1/4*s12^2)*mh^2*s12*
      s13^2*s23*s24 - 1/8*denom(1/4*s12^2)*mt^2*s14^2*s23^3 - 1/4*denom(1/4*
      s12^2)*mt^2*s13*s14*s23^3 - 3/8*denom(1/4*s12^2)*mt^2*s13*s14^2*s23^2 + 
      3/8*denom(1/4*s12^2)*mt^2*s13^2*s23*s24^2 + 1/8*denom(1/4*s12^2)*mt^2*
      s13^3*s24^2 + 1/4*denom(1/4*s12^2)*mt^2*s13^3*s23*s24 + 1/8*denom(1/4*
      s12^2)*mt^2*s12*s14*s23^2*s24 + 1/8*denom(1/4*s12^2)*mt^2*s12*s14*s23^3
       + 1/8*denom(1/4*s12^2)*mt^2*s12*s14^2*s23^2 + 1/4*denom(1/4*s12^2)*mt^2
      *s12*s13*s23*s24^2 + 3/8*denom(1/4*s12^2)*mt^2*s12*s13*s23^2*s24 + 1/8*
      denom(1/4*s12^2)*mt^2*s12*s13*s23^3 + 1/2*denom(1/4*s12^2)*mt^2*s12*s13*
      s14*s23*s24 + 1/2*denom(1/4*s12^2)*mt^2*s12*s13*s14*s23^2 + 1/4*denom(1/
      4*s12^2)*mt^2*s12*s13*s14^2*s23 + 1/8*denom(1/4*s12^2)*mt^2*s12*s13^2*
      s24^2 + 1/2*denom(1/4*s12^2)*mt^2*s12*s13^2*s23*s24 + 1/4*denom(1/4*
      s12^2)*mt^2*s12*s13^2*s23^2 + 1/8*denom(1/4*s12^2)*mt^2*s12*s13^2*s14*
      s24 + 3/8*denom(1/4*s12^2)*mt^2*s12*s13^2*s14*s23 + 1/8*denom(1/4*s12^2)
      *mt^2*s12*s13^3*s24 + 1/8*denom(1/4*s12^2)*mt^2*s12*s13^3*s23 + 1/8*
      denom(1/4*s12^2)*mt^2*s12^2*s14*s23^2 + 1/4*denom(1/4*s12^2)*mt^2*s12^2*
      s13*s23*s24 + 1/8*denom(1/4*s12^2)*mt^2*s12^2*s13*s23^2 + 1/4*denom(1/4*
      s12^2)*mt^2*s12^2*s13*s14*s23 + 1/8*denom(1/4*s12^2)*mt^2*s12^2*s13^2*
      s24 + 1/8*denom(1/4*s12^2)*mt^2*s12^2*s13^2*s23 - 1/8*denom(1/4*s12^2)*
      mt^2*mh^2*s12*s14*s23^2 - 1/4*denom(1/4*s12^2)*mt^2*mh^2*s12*s13*s23*s24
       - 1/8*denom(1/4*s12^2)*mt^2*mh^2*s12*s13*s23^2 - 1/4*denom(1/4*s12^2)*
      mt^2*mh^2*s12*s13*s14*s23 - 1/8*denom(1/4*s12^2)*mt^2*mh^2*s12*s13^2*s24
       - 1/8*denom(1/4*s12^2)*mt^2*mh^2*s12*s13^2*s23 + 1/4*denom(1/4*s12^2)*
      mt^4*s14*s23^3 + 3/8*denom(1/4*s12^2)*mt^4*s14^2*s23^2 - 3/8*denom(1/4*
      s12^2)*mt^4*s13*s23*s24^2 + 1/8*denom(1/4*s12^2)*mt^4*s13*s23^3 + 3/4*
      denom(1/4*s12^2)*mt^4*s13*s14*s23^2 + 3/8*denom(1/4*s12^2)*mt^4*s13*
      s14^2*s23 - 3/8*denom(1/4*s12^2)*mt^4*s13^2*s24^2 - 3/4*denom(1/4*s12^2)
      *mt^4*s13^2*s23*s24 - 1/4*denom(1/4*s12^2)*mt^4*s13^3*s24 - 1/8*denom(1/
      4*s12^2)*mt^4*s13^3*s23 - 1/8*denom(1/4*s12^2)*mt^4*s12*s23*s24^2 - 1/4*
      denom(1/4*s12^2)*mt^4*s12*s23^2*s24 - 1/8*denom(1/4*s12^2)*mt^4*s12*
      s23^3 - 3/8*denom(1/4*s12^2)*mt^4*s12*s14*s23*s24 - 3/8*denom(1/4*s12^2)
      *mt^4*s12*s14*s23^2 - 1/4*denom(1/4*s12^2)*mt^4*s12*s14^2*s23 - 1/4*
      denom(1/4*s12^2)*mt^4*s12*s13*s24^2 - 7/8*denom(1/4*s12^2)*mt^4*s12*s13*
      s23*s24 - 5/8*denom(1/4*s12^2)*mt^4*s12*s13*s23^2 - 3/8*denom(1/4*s12^2)
      *mt^4*s12*s13*s14*s24 - 7/8*denom(1/4*s12^2)*mt^4*s12*s13*s14*s23 - 1/8*
      denom(1/4*s12^2)*mt^4*s12*s13*s14^2 - 3/8*denom(1/4*s12^2)*mt^4*s12*
      s13^2*s24 - 5/8*denom(1/4*s12^2)*mt^4*s12*s13^2*s23 - 1/4*denom(1/4*
      s12^2)*mt^4*s12*s13^2*s14 - 1/8*denom(1/4*s12^2)*mt^4*s12*s13^3 - 1/8*
      denom(1/4*s12^2)*mt^4*s12^2*s23*s24 - 1/8*denom(1/4*s12^2)*mt^4*s12^2*
      s23^2 - 1/4*denom(1/4*s12^2)*mt^4*s12^2*s14*s23 - 1/4*denom(1/4*s12^2)*
      mt^4*s12^2*s13*s24 - 1/2*denom(1/4*s12^2)*mt^4*s12^2*s13*s23 - 1/8*
      denom(1/4*s12^2)*mt^4*s12^2*s13*s14 - 1/8*denom(1/4*s12^2)*mt^4*s12^2*
      s13^2 + 1/8*denom(1/4*s12^2)*mt^4*mh^2*s12*s23*s24 + 1/8*denom(1/4*s12^2
      )*mt^4*mh^2*s12*s23^2 + 1/4*denom(1/4*s12^2)*mt^4*mh^2*s12*s14*s23 + 1/4
      *denom(1/4*s12^2)*mt^4*mh^2*s12*s13*s24 + 1/2*denom(1/4*s12^2)*mt^4*mh^2
      *s12*s13*s23 + 1/8*denom(1/4*s12^2)*mt^4*mh^2*s12*s13*s14 + 1/8*denom(1/
      4*s12^2)*mt^4*mh^2*s12*s13^2 + 1/8*denom(1/4*s12^2)*mt^6*s23*s24^2 - 1/8
      *denom(1/4*s12^2)*mt^6*s23^3 - 3/4*denom(1/4*s12^2)*mt^6*s14*s23^2 - 3/8
      *denom(1/4*s12^2)*mt^6*s14^2*s23 + 3/8*denom(1/4*s12^2)*mt^6*s13*s24^2
       + 3/4*denom(1/4*s12^2)*mt^6*s13*s23*s24 - 3/8*denom(1/4*s12^2)*mt^6*s13
      *s23^2 - 3/4*denom(1/4*s12^2)*mt^6*s13*s14*s23 - 1/8*denom(1/4*s12^2)*
      mt^6*s13*s14^2 + 3/4*denom(1/4*s12^2)*mt^6*s13^2*s24 + 3/8*denom(1/4*
      s12^2)*mt^6*s13^2*s23 + 1/8*denom(1/4*s12^2)*mt^6*s13^3 + 1/8*denom(1/4*
      s12^2)*mt^6*s12*s24^2 + 1/2*denom(1/4*s12^2)*mt^6*s12*s23*s24 + 3/8*
      denom(1/4*s12^2)*mt^6*s12*s23^2 + 1/4*denom(1/4*s12^2)*mt^6*s12*s14*s24
       + 1/2*denom(1/4*s12^2)*mt^6*s12*s14*s23 + 1/8*denom(1/4*s12^2)*mt^6*s12
      *s14^2 + 1/2*denom(1/4*s12^2)*mt^6*s12*s13*s24 + 3/4*denom(1/4*s12^2)*
      mt^6*s12*s13*s23 + 1/2*denom(1/4*s12^2)*mt^6*s12*s13*s14 + 3/8*denom(1/4
      *s12^2)*mt^6*s12*s13^2 + 1/8*denom(1/4*s12^2)*mt^6*s12^2*s24 + 3/8*
      denom(1/4*s12^2)*mt^6*s12^2*s23 + 1/8*denom(1/4*s12^2)*mt^6*s12^2*s14 + 
      3/8*denom(1/4*s12^2)*mt^6*s12^2*s13 - 1/8*denom(1/4*s12^2)*mt^6*mh^2*s12
      *s24 - 3/8*denom(1/4*s12^2)*mt^6*mh^2*s12*s23 - 1/8*denom(1/4*s12^2)*
      mt^6*mh^2*s12*s14 - 3/8*denom(1/4*s12^2)*mt^6*mh^2*s12*s13 - 1/8*denom(1/
      4*s12^2)*mt^8*s24^2 - 1/4*denom(1/4*s12^2)*mt^8*s23*s24 + 3/8*denom(1/4*
      s12^2)*mt^8*s23^2 + 3/4*denom(1/4*s12^2)*mt^8*s14*s23 + 1/8*denom(1/4*
      s12^2)*mt^8*s14^2 - 3/4*denom(1/4*s12^2)*mt^8*s13*s24 + 1/4*denom(1/4*
      s12^2)*mt^8*s13*s14 - 3/8*denom(1/4*s12^2)*mt^8*s13^2 - 1/4*denom(1/4*
      s12^2)*mt^8*s12*s24 - 1/4*denom(1/4*s12^2)*mt^8*s12*s23 - 1/4*denom(1/4*
      s12^2)*mt^8*s12*s14 - 1/4*denom(1/4*s12^2)*mt^8*s12*s13 - 1/4*denom(1/4*
      s12^2)*mt^8*s12^2 + 1/4*denom(1/4*s12^2)*mt^8*mh^2*s12 + 1/4*denom(1/4*
      s12^2)*mt^10*s24 - 1/4*denom(1/4*s12^2)*mt^10*s23 - 1/4*denom(1/4*s12^2)
      *mt^10*s14 + 1/4*denom(1/4*s12^2)*mt^10*s13;
 
 .sort
id KMatrix(13,4) =  1/4*s14*s23*s24^2 + 1/2*s14*s23^2*s24 + 1/4*s14*s23^3 + 1/
      2*s14^2*s23*s24 + 1/2*s14^2*s23^2 + 1/4*s14^3*s23 - 1/4*s13*s24^3 - 1/2*
      s13*s23*s24^2 - 1/4*s13*s23^2*s24 - 1/2*s13*s14*s24^2 + 1/2*s13*s14*
      s23^2 - 1/4*s13*s14^2*s24 + 1/2*s13*s14^2*s23 - 1/2*s13^2*s24^2 - 1/2*
      s13^2*s23*s24 - 1/2*s13^2*s14*s24 + 1/4*s13^2*s14*s23 - 1/4*s13^3*s24 - 
      1/4*s12*s24^3 - 3/4*s12*s23*s24^2 - 3/4*s12*s23^2*s24 - 1/4*s12*s23^3 - 
      3/4*s12*s14*s24^2 - s12*s14*s23*s24 - 1/4*s12*s14*s23^2 - 3/4*s12*s14^2*
      s24 - 1/4*s12*s14^2*s23 - 1/4*s12*s14^3 - 5/4*s12*s13*s24^2 - 2*s12*s13*
      s23*s24 - 3/4*s12*s13*s23^2 - 2*s12*s13*s14*s24 - s12*s13*s14*s23 - 3/4*
      s12*s13*s14^2 - 5/4*s12*s13^2*s24 - 3/4*s12*s13^2*s23 - 3/4*s12*s13^2*
      s14 - 1/4*s12*s13^3 - 3/4*s12^2*s24^2 - 3/2*s12^2*s23*s24 - 3/4*s12^2*
      s23^2 - 3/2*s12^2*s14*s24 - 5/4*s12^2*s14*s23 - 3/4*s12^2*s14^2 - 7/4*
      s12^2*s13*s24 - 3/2*s12^2*s13*s23 - 3/2*s12^2*s13*s14 - 3/4*s12^2*s13^2
       - 3/4*s12^3*s24 - 3/4*s12^3*s23 - 3/4*s12^3*s14 - 3/4*s12^3*s13 - 1/4*
      s12^4 - 1/2*mh^2*s14*s23*s24 - 1/2*mh^2*s14*s23^2 - 1/2*mh^2*s14^2*s23
       + 1/2*mh^2*s13*s24^2 + 1/2*mh^2*s13*s23*s24 + 1/2*mh^2*s13*s14*s24 - 1/
      2*mh^2*s13*s14*s23 + 1/2*mh^2*s13^2*s24 + 3/4*mh^2*s12*s24^2 + 3/2*mh^2*
      s12*s23*s24 + 3/4*mh^2*s12*s23^2 + 3/2*mh^2*s12*s14*s24 + mh^2*s12*s14*
      s23 + 3/4*mh^2*s12*s14^2 + 2*mh^2*s12*s13*s24 + 3/2*mh^2*s12*s13*s23 + 3/
      2*mh^2*s12*s13*s14 + 3/4*mh^2*s12*s13^2 + 3/2*mh^2*s12^2*s24 + 3/2*mh^2*
      s12^2*s23 + 3/2*mh^2*s12^2*s14 + 3/2*mh^2*s12^2*s13 + 3/4*mh^2*s12^3 + 1/
      4*mh^4*s14*s23 - 1/4*mh^4*s13*s24 - 3/4*mh^4*s12*s24 - 3/4*mh^4*s12*s23
       - 3/4*mh^4*s12*s14 - 3/4*mh^4*s12*s13 - 3/4*mh^4*s12^2 + 1/4*mh^6*s12
       + 1/4*mt^2*s24^3 + 1/4*mt^2*s23*s24^2 - 1/4*mt^2*s23^2*s24 - 1/4*mt^2*
      s23^3 + 1/4*mt^2*s14*s24^2 - 3/2*mt^2*s14*s23*s24 - 7/4*mt^2*s14*s23^2
       - 1/4*mt^2*s14^2*s24 - 7/4*mt^2*s14^2*s23 - 1/4*mt^2*s14^3 + 7/4*mt^2*
      s13*s24^2 + 3/2*mt^2*s13*s23*s24 - 1/4*mt^2*s13*s23^2 + 3/2*mt^2*s13*s14
      *s24 - 3/2*mt^2*s13*s14*s23 - 1/4*mt^2*s13*s14^2 + 7/4*mt^2*s13^2*s24 + 
      1/4*mt^2*s13^2*s23 + 1/4*mt^2*s13^2*s14 + 1/4*mt^2*s13^3 + 3/2*mt^2*s12*
      s24^2 + 2*mt^2*s12*s23*s24 + 1/2*mt^2*s12*s23^2 + 2*mt^2*s12*s14*s24 + 1/
      2*mt^2*s12*s14^2 + 4*mt^2*s12*s13*s24 + 2*mt^2*s12*s13*s23 + 2*mt^2*s12*
      s13*s14 + 3/2*mt^2*s12*s13^2 + 9/4*mt^2*s12^2*s24 + 7/4*mt^2*s12^2*s23
       + 7/4*mt^2*s12^2*s14 + 9/4*mt^2*s12^2*s13 + mt^2*s12^3 - 1/2*mt^2*mh^2*
      s24^2 + 1/2*mt^2*mh^2*s23^2 + 2*mt^2*mh^2*s14*s23 + 1/2*mt^2*mh^2*s14^2
       - 2*mt^2*mh^2*s13*s24 - 1/2*mt^2*mh^2*s13^2 - 5/2*mt^2*mh^2*s12*s24 - 3/
      2*mt^2*mh^2*s12*s23 - 3/2*mt^2*mh^2*s12*s14 - 5/2*mt^2*mh^2*s12*s13 - 2*
      mt^2*mh^2*s12^2 + 1/4*mt^2*mh^4*s24 - 1/4*mt^2*mh^4*s23 - 1/4*mt^2*mh^4*
      s14 + 1/4*mt^2*mh^4*s13 + mt^2*mh^4*s12 - mt^4*s24^2 + mt^4*s23^2 + 3*
      mt^4*s14*s23 + mt^4*s14^2 - 3*mt^4*s13*s24 - mt^4*s13^2 - 2*mt^4*s12*s24
       - 2*mt^4*s12*s13 - mt^4*s12^2 + mt^4*mh^2*s24 - mt^4*mh^2*s23 - mt^4*
      mh^2*s14 + mt^4*mh^2*s13 + mt^4*mh^2*s12 + mt^6*s24 - mt^6*s23 - mt^6*
      s14 + mt^6*s13 + 1/4*denom(1/2*s12)*s14^2*s23^2*s24 + 1/4*denom(1/2*s12)
      *s14^2*s23^3 + 1/4*denom(1/2*s12)*s14^3*s23^2 + 1/4*denom(1/2*s12)*s13*
      s14^2*s23^2 - 1/4*denom(1/2*s12)*s13^2*s24^3 - 1/4*denom(1/2*s12)*s13^2*
      s23*s24^2 - 1/4*denom(1/2*s12)*s13^2*s14*s24^2 - 1/4*denom(1/2*s12)*
      s13^3*s24^2 - 1/4*denom(1/2*s12)*s12*s14*s23*s24^2 - 1/2*denom(1/2*s12)*
      s12*s14*s23^2*s24 - 1/4*denom(1/2*s12)*s12*s14*s23^3 - 1/2*denom(1/2*s12
      )*s12*s14^2*s23*s24 - 1/4*denom(1/2*s12)*s12*s14^2*s23^2 - 1/4*denom(1/2
      *s12)*s12*s14^3*s23 - 1/4*denom(1/2*s12)*s12*s13*s24^3 - 1/2*denom(1/2*
      s12)*s12*s13*s23*s24^2 - 1/4*denom(1/2*s12)*s12*s13*s23^2*s24 - 1/2*
      denom(1/2*s12)*s12*s13*s14*s24^2 - denom(1/2*s12)*s12*s13*s14*s23*s24 - 
      1/2*denom(1/2*s12)*s12*s13*s14*s23^2 - 1/4*denom(1/2*s12)*s12*s13*s14^2*
      s24 - 1/2*denom(1/2*s12)*s12*s13*s14^2*s23 - 3/4*denom(1/2*s12)*s12*
      s13^2*s24^2 - 1/2*denom(1/2*s12)*s12*s13^2*s23*s24 - 1/2*denom(1/2*s12)*
      s12*s13^2*s14*s24 - 1/4*denom(1/2*s12)*s12*s13^2*s14*s23 - 1/4*denom(1/2
      *s12)*s12*s13^3*s24 - 1/2*denom(1/2*s12)*s12^2*s14*s23*s24 - 1/2*denom(1/
      2*s12)*s12^2*s14*s23^2 - 1/2*denom(1/2*s12)*s12^2*s14^2*s23 - 1/2*denom(
      1/2*s12)*s12^2*s13*s24^2 - 1/2*denom(1/2*s12)*s12^2*s13*s23*s24 - 1/2*
      denom(1/2*s12)*s12^2*s13*s14*s24 - 1/2*denom(1/2*s12)*s12^2*s13*s14*s23
       - 1/2*denom(1/2*s12)*s12^2*s13^2*s24 - 1/4*denom(1/2*s12)*s12^3*s14*s23
       - 1/4*denom(1/2*s12)*s12^3*s13*s24 - 1/4*denom(1/2*s12)*mh^2*s14^2*
      s23^2 + 1/4*denom(1/2*s12)*mh^2*s13^2*s24^2 + 1/2*denom(1/2*s12)*mh^2*
      s12*s14*s23*s24 + 1/2*denom(1/2*s12)*mh^2*s12*s14*s23^2 + 1/2*denom(1/2*
      s12)*mh^2*s12*s14^2*s23 + 1/2*denom(1/2*s12)*mh^2*s12*s13*s24^2 + 1/2*
      denom(1/2*s12)*mh^2*s12*s13*s23*s24 + 1/2*denom(1/2*s12)*mh^2*s12*s13*
      s14*s24 + 1/2*denom(1/2*s12)*mh^2*s12*s13*s14*s23 + 1/2*denom(1/2*s12)*
      mh^2*s12*s13^2*s24 + 1/2*denom(1/2*s12)*mh^2*s12^2*s14*s23 + 1/2*denom(1/
      2*s12)*mh^2*s12^2*s13*s24 - 1/4*denom(1/2*s12)*mh^4*s12*s14*s23 - 1/4*
      denom(1/2*s12)*mh^4*s12*s13*s24 - 1/2*denom(1/2*s12)*mt^2*s14*s23^2*s24
       - 1/2*denom(1/2*s12)*mt^2*s14*s23^3 - 1/2*denom(1/2*s12)*mt^2*s14^2*s23
      *s24 - 3/2*denom(1/2*s12)*mt^2*s14^2*s23^2 - 1/2*denom(1/2*s12)*mt^2*
      s14^3*s23 + 1/2*denom(1/2*s12)*mt^2*s13*s24^3 + 1/2*denom(1/2*s12)*mt^2*
      s13*s23*s24^2 + 1/2*denom(1/2*s12)*mt^2*s13*s14*s24^2 - 1/2*denom(1/2*
      s12)*mt^2*s13*s14*s23^2 - 1/2*denom(1/2*s12)*mt^2*s13*s14^2*s23 + 3/2*
      denom(1/2*s12)*mt^2*s13^2*s24^2 + 1/2*denom(1/2*s12)*mt^2*s13^2*s23*s24
       + 1/2*denom(1/2*s12)*mt^2*s13^2*s14*s24 + 1/2*denom(1/2*s12)*mt^2*s13^3
      *s24 + 1/4*denom(1/2*s12)*mt^2*s12*s24^3 + 3/4*denom(1/2*s12)*mt^2*s12*
      s23*s24^2 + 3/4*denom(1/2*s12)*mt^2*s12*s23^2*s24 + 1/4*denom(1/2*s12)*
      mt^2*s12*s23^3 + 3/4*denom(1/2*s12)*mt^2*s12*s14*s24^2 + 2*denom(1/2*s12
      )*mt^2*s12*s14*s23*s24 + 3/4*denom(1/2*s12)*mt^2*s12*s14*s23^2 + 3/4*
      denom(1/2*s12)*mt^2*s12*s14^2*s24 + 3/4*denom(1/2*s12)*mt^2*s12*s14^2*
      s23 + 1/4*denom(1/2*s12)*mt^2*s12*s14^3 + 7/4*denom(1/2*s12)*mt^2*s12*
      s13*s24^2 + 2*denom(1/2*s12)*mt^2*s12*s13*s23*s24 + 3/4*denom(1/2*s12)*
      mt^2*s12*s13*s23^2 + 2*denom(1/2*s12)*mt^2*s12*s13*s14*s24 + 2*denom(1/2
      *s12)*mt^2*s12*s13*s14*s23 + 3/4*denom(1/2*s12)*mt^2*s12*s13*s14^2 + 7/4
      *denom(1/2*s12)*mt^2*s12*s13^2*s24 + 3/4*denom(1/2*s12)*mt^2*s12*s13^2*
      s23 + 3/4*denom(1/2*s12)*mt^2*s12*s13^2*s14 + 1/4*denom(1/2*s12)*mt^2*
      s12*s13^3 + 1/2*denom(1/2*s12)*mt^2*s12^2*s24^2 + denom(1/2*s12)*mt^2*
      s12^2*s23*s24 + 1/2*denom(1/2*s12)*mt^2*s12^2*s23^2 + denom(1/2*s12)*
      mt^2*s12^2*s14*s24 + 3/2*denom(1/2*s12)*mt^2*s12^2*s14*s23 + 1/2*denom(1/
      2*s12)*mt^2*s12^2*s14^2 + 3/2*denom(1/2*s12)*mt^2*s12^2*s13*s24 + denom(
      1/2*s12)*mt^2*s12^2*s13*s23 + denom(1/2*s12)*mt^2*s12^2*s13*s14 + 1/2*
      denom(1/2*s12)*mt^2*s12^2*s13^2 + 1/4*denom(1/2*s12)*mt^2*s12^3*s24 + 1/
      4*denom(1/2*s12)*mt^2*s12^3*s23 + 1/4*denom(1/2*s12)*mt^2*s12^3*s14 + 1/
      4*denom(1/2*s12)*mt^2*s12^3*s13 + 1/2*denom(1/2*s12)*mt^2*mh^2*s14*s23^2
       + 1/2*denom(1/2*s12)*mt^2*mh^2*s14^2*s23 - 1/2*denom(1/2*s12)*mt^2*mh^2
      *s13*s24^2 - 1/2*denom(1/2*s12)*mt^2*mh^2*s13^2*s24 - 1/2*denom(1/2*s12)
      *mt^2*mh^2*s12*s24^2 - denom(1/2*s12)*mt^2*mh^2*s12*s23*s24 - 1/2*denom(
      1/2*s12)*mt^2*mh^2*s12*s23^2 - denom(1/2*s12)*mt^2*mh^2*s12*s14*s24 - 3/
      2*denom(1/2*s12)*mt^2*mh^2*s12*s14*s23 - 1/2*denom(1/2*s12)*mt^2*mh^2*
      s12*s14^2 - 3/2*denom(1/2*s12)*mt^2*mh^2*s12*s13*s24 - denom(1/2*s12)*
      mt^2*mh^2*s12*s13*s23 - denom(1/2*s12)*mt^2*mh^2*s12*s13*s14 - 1/2*
      denom(1/2*s12)*mt^2*mh^2*s12*s13^2 - 1/2*denom(1/2*s12)*mt^2*mh^2*s12^2*
      s24 - 1/2*denom(1/2*s12)*mt^2*mh^2*s12^2*s23 - 1/2*denom(1/2*s12)*mt^2*
      mh^2*s12^2*s14 - 1/2*denom(1/2*s12)*mt^2*mh^2*s12^2*s13 + 1/4*denom(1/2*
      s12)*mt^2*mh^4*s12*s24 + 1/4*denom(1/2*s12)*mt^2*mh^4*s12*s23 + 1/4*
      denom(1/2*s12)*mt^2*mh^4*s12*s14 + 1/4*denom(1/2*s12)*mt^2*mh^4*s12*s13
       - 1/4*denom(1/2*s12)*mt^4*s24^3 - 1/4*denom(1/2*s12)*mt^4*s23*s24^2 + 1/
      4*denom(1/2*s12)*mt^4*s23^2*s24 + 1/4*denom(1/2*s12)*mt^4*s23^3 - 1/4*
      denom(1/2*s12)*mt^4*s14*s24^2 + denom(1/2*s12)*mt^4*s14*s23*s24 + 9/4*
      denom(1/2*s12)*mt^4*s14*s23^2 + 1/4*denom(1/2*s12)*mt^4*s14^2*s24 + 9/4*
      denom(1/2*s12)*mt^4*s14^2*s23 + 1/4*denom(1/2*s12)*mt^4*s14^3 - 9/4*
      denom(1/2*s12)*mt^4*s13*s24^2 - denom(1/2*s12)*mt^4*s13*s23*s24 + 1/4*
      denom(1/2*s12)*mt^4*s13*s23^2 - denom(1/2*s12)*mt^4*s13*s14*s24 + denom(
      1/2*s12)*mt^4*s13*s14*s23 + 1/4*denom(1/2*s12)*mt^4*s13*s14^2 - 9/4*
      denom(1/2*s12)*mt^4*s13^2*s24 - 1/4*denom(1/2*s12)*mt^4*s13^2*s23 - 1/4*
      denom(1/2*s12)*mt^4*s13^2*s14 - 1/4*denom(1/2*s12)*mt^4*s13^3 - 5/4*
      denom(1/2*s12)*mt^4*s12*s24^2 - 2*denom(1/2*s12)*mt^4*s12*s23*s24 - 3/4*
      denom(1/2*s12)*mt^4*s12*s23^2 - 2*denom(1/2*s12)*mt^4*s12*s14*s24 - 
      denom(1/2*s12)*mt^4*s12*s14*s23 - 3/4*denom(1/2*s12)*mt^4*s12*s14^2 - 3*
      denom(1/2*s12)*mt^4*s12*s13*s24 - 2*denom(1/2*s12)*mt^4*s12*s13*s23 - 2*
      denom(1/2*s12)*mt^4*s12*s13*s14 - 5/4*denom(1/2*s12)*mt^4*s12*s13^2 - 3/
      2*denom(1/2*s12)*mt^4*s12^2*s24 - 3/2*denom(1/2*s12)*mt^4*s12^2*s23 - 3/
      2*denom(1/2*s12)*mt^4*s12^2*s14 - 3/2*denom(1/2*s12)*mt^4*s12^2*s13 - 1/
      2*denom(1/2*s12)*mt^4*s12^3 + 1/4*denom(1/2*s12)*mt^4*mh^2*s24^2 - 1/4*
      denom(1/2*s12)*mt^4*mh^2*s23^2 - denom(1/2*s12)*mt^4*mh^2*s14*s23 - 1/4*
      denom(1/2*s12)*mt^4*mh^2*s14^2 + denom(1/2*s12)*mt^4*mh^2*s13*s24 + 1/4*
      denom(1/2*s12)*mt^4*mh^2*s13^2 + 3/2*denom(1/2*s12)*mt^4*mh^2*s12*s24 + 
      3/2*denom(1/2*s12)*mt^4*mh^2*s12*s23 + 3/2*denom(1/2*s12)*mt^4*mh^2*s12*
      s14 + 3/2*denom(1/2*s12)*mt^4*mh^2*s12*s13 + denom(1/2*s12)*mt^4*mh^2*
      s12^2 - 1/2*denom(1/2*s12)*mt^4*mh^4*s12 + denom(1/2*s12)*mt^6*s24^2 - 
      denom(1/2*s12)*mt^6*s23^2 - 3*denom(1/2*s12)*mt^6*s14*s23 - denom(1/2*
      s12)*mt^6*s14^2 + 3*denom(1/2*s12)*mt^6*s13*s24 + denom(1/2*s12)*mt^6*
      s13^2 + 3/2*denom(1/2*s12)*mt^6*s12*s24 + 1/2*denom(1/2*s12)*mt^6*s12*
      s23 + 1/2*denom(1/2*s12)*mt^6*s12*s14 + 3/2*denom(1/2*s12)*mt^6*s12*s13
       + denom(1/2*s12)*mt^6*s12^2 - 1/2*denom(1/2*s12)*mt^6*mh^2*s24 + 1/2*
      denom(1/2*s12)*mt^6*mh^2*s23 + 1/2*denom(1/2*s12)*mt^6*mh^2*s14 - 1/2*
      denom(1/2*s12)*mt^6*mh^2*s13 - denom(1/2*s12)*mt^6*mh^2*s12 - denom(1/2*
      s12)*mt^8*s24 + denom(1/2*s12)*mt^8*s23 + denom(1/2*s12)*mt^8*s14 - 
      denom(1/2*s12)*mt^8*s13 + 1/16*denom(1/4*s12^2)*s14^3*s23^3 + 1/16*
      denom(1/4*s12^2)*s13*s14^2*s23^2*s24 - 1/16*denom(1/4*s12^2)*s13^2*s14*
      s23*s24^2 - 1/16*denom(1/4*s12^2)*s13^3*s24^3 - 1/16*denom(1/4*s12^2)*
      s12*s14^2*s23^2*s24 - 1/16*denom(1/4*s12^2)*s12*s14^2*s23^3 - 1/16*
      denom(1/4*s12^2)*s12*s14^3*s23^2 - 1/8*denom(1/4*s12^2)*s12*s13*s14*s23*
      s24^2 - 1/8*denom(1/4*s12^2)*s12*s13*s14*s23^2*s24 - 1/8*denom(1/4*s12^2
      )*s12*s13*s14^2*s23*s24 - 1/16*denom(1/4*s12^2)*s12*s13*s14^2*s23^2 - 1/
      16*denom(1/4*s12^2)*s12*s13^2*s24^3 - 1/16*denom(1/4*s12^2)*s12*s13^2*
      s23*s24^2 - 1/16*denom(1/4*s12^2)*s12*s13^2*s14*s24^2 - 1/8*denom(1/4*
      s12^2)*s12*s13^2*s14*s23*s24 - 1/16*denom(1/4*s12^2)*s12*s13^3*s24^2 - 1/
      16*denom(1/4*s12^2)*s12^2*s14^2*s23^2 - 1/8*denom(1/4*s12^2)*s12^2*s13*
      s14*s23*s24 - 1/16*denom(1/4*s12^2)*s12^2*s13^2*s24^2 + 1/16*denom(1/4*
      s12^2)*mh^2*s12*s14^2*s23^2 + 1/8*denom(1/4*s12^2)*mh^2*s12*s13*s14*s23*
      s24 + 1/16*denom(1/4*s12^2)*mh^2*s12*s13^2*s24^2 - 1/16*denom(1/4*s12^2)
      *mt^2*s14^2*s23^2*s24 - 3/16*denom(1/4*s12^2)*mt^2*s14^2*s23^3 - 3/16*
      denom(1/4*s12^2)*mt^2*s14^3*s23^2 + 1/8*denom(1/4*s12^2)*mt^2*s13*s14*
      s23*s24^2 - 1/8*denom(1/4*s12^2)*mt^2*s13*s14*s23^2*s24 - 1/8*denom(1/4*
      s12^2)*mt^2*s13*s14^2*s23*s24 - 1/16*denom(1/4*s12^2)*mt^2*s13*s14^2*
      s23^2 + 3/16*denom(1/4*s12^2)*mt^2*s13^2*s24^3 + 1/16*denom(1/4*s12^2)*
      mt^2*s13^2*s23*s24^2 + 1/16*denom(1/4*s12^2)*mt^2*s13^2*s14*s24^2 + 1/8*
      denom(1/4*s12^2)*mt^2*s13^2*s14*s23*s24 + 3/16*denom(1/4*s12^2)*mt^2*
      s13^3*s24^2 + 1/8*denom(1/4*s12^2)*mt^2*s12*s14*s23*s24^2 + 1/4*denom(1/
      4*s12^2)*mt^2*s12*s14*s23^2*s24 + 1/8*denom(1/4*s12^2)*mt^2*s12*s14*
      s23^3 + 1/4*denom(1/4*s12^2)*mt^2*s12*s14^2*s23*s24 + 1/4*denom(1/4*
      s12^2)*mt^2*s12*s14^2*s23^2 + 1/8*denom(1/4*s12^2)*mt^2*s12*s14^3*s23 + 
      1/8*denom(1/4*s12^2)*mt^2*s12*s13*s24^3 + 1/4*denom(1/4*s12^2)*mt^2*s12*
      s13*s23*s24^2 + 1/8*denom(1/4*s12^2)*mt^2*s12*s13*s23^2*s24 + 1/4*denom(
      1/4*s12^2)*mt^2*s12*s13*s14*s24^2 + 1/2*denom(1/4*s12^2)*mt^2*s12*s13*
      s14*s23*s24 + 1/4*denom(1/4*s12^2)*mt^2*s12*s13*s14*s23^2 + 1/8*denom(1/
      4*s12^2)*mt^2*s12*s13*s14^2*s24 + 1/4*denom(1/4*s12^2)*mt^2*s12*s13*
      s14^2*s23 + 1/4*denom(1/4*s12^2)*mt^2*s12*s13^2*s24^2 + 1/4*denom(1/4*
      s12^2)*mt^2*s12*s13^2*s23*s24 + 1/4*denom(1/4*s12^2)*mt^2*s12*s13^2*s14*
      s24 + 1/8*denom(1/4*s12^2)*mt^2*s12*s13^2*s14*s23 + 1/8*denom(1/4*s12^2)
      *mt^2*s12*s13^3*s24 + 1/8*denom(1/4*s12^2)*mt^2*s12^2*s14*s23*s24 + 1/8*
      denom(1/4*s12^2)*mt^2*s12^2*s14*s23^2 + 1/8*denom(1/4*s12^2)*mt^2*s12^2*
      s14^2*s23 + 1/8*denom(1/4*s12^2)*mt^2*s12^2*s13*s24^2 + 1/8*denom(1/4*
      s12^2)*mt^2*s12^2*s13*s23*s24 + 1/8*denom(1/4*s12^2)*mt^2*s12^2*s13*s14*
      s24 + 1/8*denom(1/4*s12^2)*mt^2*s12^2*s13*s14*s23 + 1/8*denom(1/4*s12^2)
      *mt^2*s12^2*s13^2*s24 - 1/8*denom(1/4*s12^2)*mt^2*mh^2*s12*s14*s23*s24
       - 1/8*denom(1/4*s12^2)*mt^2*mh^2*s12*s14*s23^2 - 1/8*denom(1/4*s12^2)*
      mt^2*mh^2*s12*s14^2*s23 - 1/8*denom(1/4*s12^2)*mt^2*mh^2*s12*s13*s24^2
       - 1/8*denom(1/4*s12^2)*mt^2*mh^2*s12*s13*s23*s24 - 1/8*denom(1/4*s12^2)
      *mt^2*mh^2*s12*s13*s14*s24 - 1/8*denom(1/4*s12^2)*mt^2*mh^2*s12*s13*s14*
      s23 - 1/8*denom(1/4*s12^2)*mt^2*mh^2*s12*s13^2*s24 - 1/16*denom(1/4*
      s12^2)*mt^4*s14*s23*s24^2 + 1/8*denom(1/4*s12^2)*mt^4*s14*s23^2*s24 + 3/
      16*denom(1/4*s12^2)*mt^4*s14*s23^3 + 1/8*denom(1/4*s12^2)*mt^4*s14^2*s23
      *s24 + 5/8*denom(1/4*s12^2)*mt^4*s14^2*s23^2 + 3/16*denom(1/4*s12^2)*
      mt^4*s14^3*s23 - 3/16*denom(1/4*s12^2)*mt^4*s13*s24^3 - 1/8*denom(1/4*
      s12^2)*mt^4*s13*s23*s24^2 + 1/16*denom(1/4*s12^2)*mt^4*s13*s23^2*s24 - 1/
      8*denom(1/4*s12^2)*mt^4*s13*s14*s24^2 + 1/8*denom(1/4*s12^2)*mt^4*s13*
      s14*s23^2 + 1/16*denom(1/4*s12^2)*mt^4*s13*s14^2*s24 + 1/8*denom(1/4*
      s12^2)*mt^4*s13*s14^2*s23 - 5/8*denom(1/4*s12^2)*mt^4*s13^2*s24^2 - 1/8*
      denom(1/4*s12^2)*mt^4*s13^2*s23*s24 - 1/8*denom(1/4*s12^2)*mt^4*s13^2*
      s14*s24 - 1/16*denom(1/4*s12^2)*mt^4*s13^2*s14*s23 - 3/16*denom(1/4*
      s12^2)*mt^4*s13^3*s24 - 1/16*denom(1/4*s12^2)*mt^4*s12*s24^3 - 3/16*
      denom(1/4*s12^2)*mt^4*s12*s23*s24^2 - 3/16*denom(1/4*s12^2)*mt^4*s12*
      s23^2*s24 - 1/16*denom(1/4*s12^2)*mt^4*s12*s23^3 - 3/16*denom(1/4*s12^2)
      *mt^4*s12*s14*s24^2 - 5/8*denom(1/4*s12^2)*mt^4*s12*s14*s23*s24 - 7/16*
      denom(1/4*s12^2)*mt^4*s12*s14*s23^2 - 3/16*denom(1/4*s12^2)*mt^4*s12*
      s14^2*s24 - 7/16*denom(1/4*s12^2)*mt^4*s12*s14^2*s23 - 1/16*denom(1/4*
      s12^2)*mt^4*s12*s14^3 - 7/16*denom(1/4*s12^2)*mt^4*s12*s13*s24^2 - 5/8*
      denom(1/4*s12^2)*mt^4*s12*s13*s23*s24 - 3/16*denom(1/4*s12^2)*mt^4*s12*
      s13*s23^2 - 5/8*denom(1/4*s12^2)*mt^4*s12*s13*s14*s24 - 5/8*denom(1/4*
      s12^2)*mt^4*s12*s13*s14*s23 - 3/16*denom(1/4*s12^2)*mt^4*s12*s13*s14^2
       - 7/16*denom(1/4*s12^2)*mt^4*s12*s13^2*s24 - 3/16*denom(1/4*s12^2)*mt^4
      *s12*s13^2*s23 - 3/16*denom(1/4*s12^2)*mt^4*s12*s13^2*s14 - 1/16*denom(1/
      4*s12^2)*mt^4*s12*s13^3 - 1/16*denom(1/4*s12^2)*mt^4*s12^2*s24^2 - 1/8*
      denom(1/4*s12^2)*mt^4*s12^2*s23*s24 - 1/16*denom(1/4*s12^2)*mt^4*s12^2*
      s23^2 - 1/8*denom(1/4*s12^2)*mt^4*s12^2*s14*s24 - 3/8*denom(1/4*s12^2)*
      mt^4*s12^2*s14*s23 - 1/16*denom(1/4*s12^2)*mt^4*s12^2*s14^2 - 3/8*denom(
      1/4*s12^2)*mt^4*s12^2*s13*s24 - 1/8*denom(1/4*s12^2)*mt^4*s12^2*s13*s23
       - 1/8*denom(1/4*s12^2)*mt^4*s12^2*s13*s14 - 1/16*denom(1/4*s12^2)*mt^4*
      s12^2*s13^2 + 1/16*denom(1/4*s12^2)*mt^4*mh^2*s12*s24^2 + 1/8*denom(1/4*
      s12^2)*mt^4*mh^2*s12*s23*s24 + 1/16*denom(1/4*s12^2)*mt^4*mh^2*s12*s23^2
       + 1/8*denom(1/4*s12^2)*mt^4*mh^2*s12*s14*s24 + 3/8*denom(1/4*s12^2)*
      mt^4*mh^2*s12*s14*s23 + 1/16*denom(1/4*s12^2)*mt^4*mh^2*s12*s14^2 + 3/8*
      denom(1/4*s12^2)*mt^4*mh^2*s12*s13*s24 + 1/8*denom(1/4*s12^2)*mt^4*mh^2*
      s12*s13*s23 + 1/8*denom(1/4*s12^2)*mt^4*mh^2*s12*s13*s14 + 1/16*denom(1/
      4*s12^2)*mt^4*mh^2*s12*s13^2 + 1/16*denom(1/4*s12^2)*mt^6*s24^3 + 1/16*
      denom(1/4*s12^2)*mt^6*s23*s24^2 - 1/16*denom(1/4*s12^2)*mt^6*s23^2*s24
       - 1/16*denom(1/4*s12^2)*mt^6*s23^3 + 1/16*denom(1/4*s12^2)*mt^6*s14*
      s24^2 - 1/8*denom(1/4*s12^2)*mt^6*s14*s23*s24 - 11/16*denom(1/4*s12^2)*
      mt^6*s14*s23^2 - 1/16*denom(1/4*s12^2)*mt^6*s14^2*s24 - 11/16*denom(1/4*
      s12^2)*mt^6*s14^2*s23 - 1/16*denom(1/4*s12^2)*mt^6*s14^3 + 11/16*denom(1/
      4*s12^2)*mt^6*s13*s24^2 + 1/8*denom(1/4*s12^2)*mt^6*s13*s23*s24 - 1/16*
      denom(1/4*s12^2)*mt^6*s13*s23^2 + 1/8*denom(1/4*s12^2)*mt^6*s13*s14*s24
       - 1/8*denom(1/4*s12^2)*mt^6*s13*s14*s23 - 1/16*denom(1/4*s12^2)*mt^6*
      s13*s14^2 + 11/16*denom(1/4*s12^2)*mt^6*s13^2*s24 + 1/16*denom(1/4*s12^2
      )*mt^6*s13^2*s23 + 1/16*denom(1/4*s12^2)*mt^6*s13^2*s14 + 1/16*denom(1/4
      *s12^2)*mt^6*s13^3 + 1/4*denom(1/4*s12^2)*mt^6*s12*s24^2 + 1/2*denom(1/4
      *s12^2)*mt^6*s12*s23*s24 + 1/4*denom(1/4*s12^2)*mt^6*s12*s23^2 + 1/2*
      denom(1/4*s12^2)*mt^6*s12*s14*s24 + 1/2*denom(1/4*s12^2)*mt^6*s12*s14*
      s23 + 1/4*denom(1/4*s12^2)*mt^6*s12*s14^2 + 1/2*denom(1/4*s12^2)*mt^6*
      s12*s13*s24 + 1/2*denom(1/4*s12^2)*mt^6*s12*s13*s23 + 1/2*denom(1/4*
      s12^2)*mt^6*s12*s13*s14 + 1/4*denom(1/4*s12^2)*mt^6*s12*s13^2 + 1/4*
      denom(1/4*s12^2)*mt^6*s12^2*s24 + 1/4*denom(1/4*s12^2)*mt^6*s12^2*s23 + 
      1/4*denom(1/4*s12^2)*mt^6*s12^2*s14 + 1/4*denom(1/4*s12^2)*mt^6*s12^2*
      s13 - 1/4*denom(1/4*s12^2)*mt^6*mh^2*s12*s24 - 1/4*denom(1/4*s12^2)*mt^6
      *mh^2*s12*s23 - 1/4*denom(1/4*s12^2)*mt^6*mh^2*s12*s14 - 1/4*denom(1/4*
      s12^2)*mt^6*mh^2*s12*s13 - 1/4*denom(1/4*s12^2)*mt^8*s24^2 + 1/4*denom(1/
      4*s12^2)*mt^8*s23^2 + 3/4*denom(1/4*s12^2)*mt^8*s14*s23 + 1/4*denom(1/4*
      s12^2)*mt^8*s14^2 - 3/4*denom(1/4*s12^2)*mt^8*s13*s24 - 1/4*denom(1/4*
      s12^2)*mt^8*s13^2 - 1/4*denom(1/4*s12^2)*mt^8*s12*s24 - 1/4*denom(1/4*
      s12^2)*mt^8*s12*s23 - 1/4*denom(1/4*s12^2)*mt^8*s12*s14 - 1/4*denom(1/4*
      s12^2)*mt^8*s12*s13 - 1/4*denom(1/4*s12^2)*mt^8*s12^2 + 1/4*denom(1/4*
      s12^2)*mt^8*mh^2*s12 + 1/4*denom(1/4*s12^2)*mt^10*s24 - 1/4*denom(1/4*
      s12^2)*mt^10*s23 - 1/4*denom(1/4*s12^2)*mt^10*s14 + 1/4*denom(1/4*s12^2)
      *mt^10*s13;
 
 .sort
id KMatrix(13,5) =  2*mt^5*s12*s14 - 2*mt^7*s12 - 2*denom(1/2*s12)*mt^3*s12*
      s13*s14*s23 + 2*denom(1/2*s12)*mt^5*s12*s14*s23 + 2*denom(1/2*s12)*mt^5*
      s12*s13*s23 + 2*denom(1/2*s12)*mt^5*s12*s13*s14 - 2*denom(1/2*s12)*mt^7*
      s12*s23 - 2*denom(1/2*s12)*mt^7*s12*s14 - 2*denom(1/2*s12)*mt^7*s12*s13
       + 2*denom(1/2*s12)*mt^9*s12 + 1/2*denom(1/4*s12^2)*mt*s12*s13^2*s14*
      s23^2 - denom(1/4*s12^2)*mt^3*s12*s13*s14*s23^2 - 1/2*denom(1/4*s12^2)*
      mt^3*s12*s13^2*s23^2 - denom(1/4*s12^2)*mt^3*s12*s13^2*s14*s23 + 1/2*
      denom(1/4*s12^2)*mt^5*s12*s14*s23^2 + denom(1/4*s12^2)*mt^5*s12*s13*
      s23^2 + 2*denom(1/4*s12^2)*mt^5*s12*s13*s14*s23 + denom(1/4*s12^2)*mt^5*
      s12*s13^2*s23 + 1/2*denom(1/4*s12^2)*mt^5*s12*s13^2*s14 - 1/2*denom(1/4*
      s12^2)*mt^7*s12*s23^2 - denom(1/4*s12^2)*mt^7*s12*s14*s23 - 2*denom(1/4*
      s12^2)*mt^7*s12*s13*s23 - denom(1/4*s12^2)*mt^7*s12*s13*s14 - 1/2*denom(
      1/4*s12^2)*mt^7*s12*s13^2 + denom(1/4*s12^2)*mt^9*s12*s23 + 1/2*denom(1/
      4*s12^2)*mt^9*s12*s14 + denom(1/4*s12^2)*mt^9*s12*s13 - 1/2*denom(1/4*
      s12^2)*mt^11*s12;
 
 .sort
id KMatrix(13,6) =   - mt^3*s12*s14*s24 - mt^3*s12*s14*s23 - mt^3*s12*s14^2 - 
      mt^3*s12*s13*s14 - mt^3*s12^2*s14 + mt^3*mh^2*s12*s14 + mt^5*s12*s24 + 
      mt^5*s12*s23 + 3*mt^5*s12*s14 + mt^5*s12*s13 + mt^5*s12^2 - mt^5*mh^2*
      s12 - 2*mt^7*s12 + 1/2*denom(1/2*s12)*mt*s12*s13*s14*s23*s24 + 1/2*
      denom(1/2*s12)*mt*s12*s13*s14*s23^2 + 1/2*denom(1/2*s12)*mt*s12*s13*
      s14^2*s23 + 1/2*denom(1/2*s12)*mt*s12*s13^2*s14*s23 + 1/2*denom(1/2*s12)
      *mt*s12^2*s13*s14*s23 - 1/2*denom(1/2*s12)*mt*mh^2*s12*s13*s14*s23 - 1/2
      *denom(1/2*s12)*mt^3*s12*s14*s23*s24 - 1/2*denom(1/2*s12)*mt^3*s12*s14*
      s23^2 - denom(1/2*s12)*mt^3*s12*s14^2*s23 - 1/2*denom(1/2*s12)*mt^3*s12*
      s13*s23*s24 - 1/2*denom(1/2*s12)*mt^3*s12*s13*s23^2 - denom(1/2*s12)*
      mt^3*s12*s13*s14*s24 - 5/2*denom(1/2*s12)*mt^3*s12*s13*s14*s23 - 1/2*
      denom(1/2*s12)*mt^3*s12*s13*s14^2 - 1/2*denom(1/2*s12)*mt^3*s12*s13^2*
      s23 - 1/2*denom(1/2*s12)*mt^3*s12*s13^2*s14 - 1/2*denom(1/2*s12)*mt^3*
      s12^2*s14*s23 - 1/2*denom(1/2*s12)*mt^3*s12^2*s13*s23 - 1/2*denom(1/2*
      s12)*mt^3*s12^2*s13*s14 + 1/2*denom(1/2*s12)*mt^3*mh^2*s12*s14*s23 + 1/2
      *denom(1/2*s12)*mt^3*mh^2*s12*s13*s23 + 1/2*denom(1/2*s12)*mt^3*mh^2*s12
      *s13*s14 + 1/2*denom(1/2*s12)*mt^5*s12*s23*s24 + 1/2*denom(1/2*s12)*mt^5
      *s12*s23^2 + denom(1/2*s12)*mt^5*s12*s14*s24 + 3*denom(1/2*s12)*mt^5*s12
      *s14*s23 + denom(1/2*s12)*mt^5*s12*s14^2 + denom(1/2*s12)*mt^5*s12*s13*
      s24 + 2*denom(1/2*s12)*mt^5*s12*s13*s23 + 5/2*denom(1/2*s12)*mt^5*s12*
      s13*s14 + 1/2*denom(1/2*s12)*mt^5*s12*s13^2 + 1/2*denom(1/2*s12)*mt^5*
      s12^2*s23 + 1/2*denom(1/2*s12)*mt^5*s12^2*s14 + 1/2*denom(1/2*s12)*mt^5*
      s12^2*s13 - 1/2*denom(1/2*s12)*mt^5*mh^2*s12*s23 - 1/2*denom(1/2*s12)*
      mt^5*mh^2*s12*s14 - 1/2*denom(1/2*s12)*mt^5*mh^2*s12*s13 - denom(1/2*s12
      )*mt^7*s12*s24 - 2*denom(1/2*s12)*mt^7*s12*s23 - 3*denom(1/2*s12)*mt^7*
      s12*s14 - 2*denom(1/2*s12)*mt^7*s12*s13 - 1/2*denom(1/2*s12)*mt^7*s12^2
       + 1/2*denom(1/2*s12)*mt^7*mh^2*s12 + 2*denom(1/2*s12)*mt^9*s12 + 1/4*
      denom(1/4*s12^2)*mt*s12*s13*s14^2*s23^2 + 1/4*denom(1/4*s12^2)*mt*s12*
      s13^2*s14*s23*s24 - 1/4*denom(1/4*s12^2)*mt^3*s12*s14^2*s23^2 - 1/2*
      denom(1/4*s12^2)*mt^3*s12*s13*s14*s23*s24 - 1/2*denom(1/4*s12^2)*mt^3*
      s12*s13*s14*s23^2 - 1/2*denom(1/4*s12^2)*mt^3*s12*s13*s14^2*s23 - 1/4*
      denom(1/4*s12^2)*mt^3*s12*s13^2*s23*s24 - 1/4*denom(1/4*s12^2)*mt^3*s12*
      s13^2*s14*s24 - 1/4*denom(1/4*s12^2)*mt^3*s12*s13^2*s14*s23 + 1/4*denom(
      1/4*s12^2)*mt^5*s12*s14*s23*s24 + 1/2*denom(1/4*s12^2)*mt^5*s12*s14*
      s23^2 + 1/2*denom(1/4*s12^2)*mt^5*s12*s14^2*s23 + 1/2*denom(1/4*s12^2)*
      mt^5*s12*s13*s23*s24 + 1/4*denom(1/4*s12^2)*mt^5*s12*s13*s23^2 + 1/2*
      denom(1/4*s12^2)*mt^5*s12*s13*s14*s24 + 3/2*denom(1/4*s12^2)*mt^5*s12*
      s13*s14*s23 + 1/4*denom(1/4*s12^2)*mt^5*s12*s13*s14^2 + 1/4*denom(1/4*
      s12^2)*mt^5*s12*s13^2*s24 + 1/4*denom(1/4*s12^2)*mt^5*s12*s13^2*s23 + 1/
      4*denom(1/4*s12^2)*mt^5*s12*s13^2*s14 - 1/4*denom(1/4*s12^2)*mt^7*s12*
      s23*s24 - 1/4*denom(1/4*s12^2)*mt^7*s12*s23^2 - 1/4*denom(1/4*s12^2)*
      mt^7*s12*s14*s24 - 5/4*denom(1/4*s12^2)*mt^7*s12*s14*s23 - 1/4*denom(1/4
      *s12^2)*mt^7*s12*s14^2 - 1/2*denom(1/4*s12^2)*mt^7*s12*s13*s24 - denom(1/
      4*s12^2)*mt^7*s12*s13*s23 - denom(1/4*s12^2)*mt^7*s12*s13*s14 - 1/4*
      denom(1/4*s12^2)*mt^7*s12*s13^2 + 1/4*denom(1/4*s12^2)*mt^9*s12*s24 + 3/
      4*denom(1/4*s12^2)*mt^9*s12*s23 + 3/4*denom(1/4*s12^2)*mt^9*s12*s14 + 3/
      4*denom(1/4*s12^2)*mt^9*s12*s13 - 1/2*denom(1/4*s12^2)*mt^11*s12;
 
 .sort
id KMatrix(13,7) =   - mt^3*s12*s14*s24 - mt^3*s12*s14*s23 - mt^3*s12*s14^2 - 
      mt^3*s12*s13*s14 - mt^3*s12^2*s14 + mt^3*mh^2*s12*s14 + mt^5*s12*s24 + 
      mt^5*s12*s23 + 3*mt^5*s12*s14 + mt^5*s12*s13 + mt^5*s12^2 - mt^5*mh^2*
      s12 - 2*mt^7*s12 + 1/2*denom(1/2*s12)*mt*s12*s13*s14*s23*s24 + 1/2*
      denom(1/2*s12)*mt*s12*s13*s14*s23^2 + 1/2*denom(1/2*s12)*mt*s12*s13*
      s14^2*s23 + 1/2*denom(1/2*s12)*mt*s12*s13^2*s14*s23 + 1/2*denom(1/2*s12)
      *mt*s12^2*s13*s14*s23 - 1/2*denom(1/2*s12)*mt*mh^2*s12*s13*s14*s23 - 1/2
      *denom(1/2*s12)*mt^3*s12*s14*s23*s24 - 1/2*denom(1/2*s12)*mt^3*s12*s14*
      s23^2 - denom(1/2*s12)*mt^3*s12*s14^2*s23 - 1/2*denom(1/2*s12)*mt^3*s12*
      s13*s23*s24 - 1/2*denom(1/2*s12)*mt^3*s12*s13*s23^2 - denom(1/2*s12)*
      mt^3*s12*s13*s14*s24 - 5/2*denom(1/2*s12)*mt^3*s12*s13*s14*s23 - 1/2*
      denom(1/2*s12)*mt^3*s12*s13*s14^2 - 1/2*denom(1/2*s12)*mt^3*s12*s13^2*
      s23 - 1/2*denom(1/2*s12)*mt^3*s12*s13^2*s14 - 1/2*denom(1/2*s12)*mt^3*
      s12^2*s14*s23 - 1/2*denom(1/2*s12)*mt^3*s12^2*s13*s23 - 1/2*denom(1/2*
      s12)*mt^3*s12^2*s13*s14 + 1/2*denom(1/2*s12)*mt^3*mh^2*s12*s14*s23 + 1/2
      *denom(1/2*s12)*mt^3*mh^2*s12*s13*s23 + 1/2*denom(1/2*s12)*mt^3*mh^2*s12
      *s13*s14 + 1/2*denom(1/2*s12)*mt^5*s12*s23*s24 + 1/2*denom(1/2*s12)*mt^5
      *s12*s23^2 + denom(1/2*s12)*mt^5*s12*s14*s24 + 3*denom(1/2*s12)*mt^5*s12
      *s14*s23 + denom(1/2*s12)*mt^5*s12*s14^2 + denom(1/2*s12)*mt^5*s12*s13*
      s24 + 2*denom(1/2*s12)*mt^5*s12*s13*s23 + 5/2*denom(1/2*s12)*mt^5*s12*
      s13*s14 + 1/2*denom(1/2*s12)*mt^5*s12*s13^2 + 1/2*denom(1/2*s12)*mt^5*
      s12^2*s23 + 1/2*denom(1/2*s12)*mt^5*s12^2*s14 + 1/2*denom(1/2*s12)*mt^5*
      s12^2*s13 - 1/2*denom(1/2*s12)*mt^5*mh^2*s12*s23 - 1/2*denom(1/2*s12)*
      mt^5*mh^2*s12*s14 - 1/2*denom(1/2*s12)*mt^5*mh^2*s12*s13 - denom(1/2*s12
      )*mt^7*s12*s24 - 2*denom(1/2*s12)*mt^7*s12*s23 - 3*denom(1/2*s12)*mt^7*
      s12*s14 - 2*denom(1/2*s12)*mt^7*s12*s13 - 1/2*denom(1/2*s12)*mt^7*s12^2
       + 1/2*denom(1/2*s12)*mt^7*mh^2*s12 + 2*denom(1/2*s12)*mt^9*s12 + 1/4*
      denom(1/4*s12^2)*mt*s12*s13*s14^2*s23^2 + 1/4*denom(1/4*s12^2)*mt*s12*
      s13^2*s14*s23*s24 - 1/4*denom(1/4*s12^2)*mt^3*s12*s14^2*s23^2 - 1/2*
      denom(1/4*s12^2)*mt^3*s12*s13*s14*s23*s24 - 1/2*denom(1/4*s12^2)*mt^3*
      s12*s13*s14*s23^2 - 1/2*denom(1/4*s12^2)*mt^3*s12*s13*s14^2*s23 - 1/4*
      denom(1/4*s12^2)*mt^3*s12*s13^2*s23*s24 - 1/4*denom(1/4*s12^2)*mt^3*s12*
      s13^2*s14*s24 - 1/4*denom(1/4*s12^2)*mt^3*s12*s13^2*s14*s23 + 1/4*denom(
      1/4*s12^2)*mt^5*s12*s14*s23*s24 + 1/2*denom(1/4*s12^2)*mt^5*s12*s14*
      s23^2 + 1/2*denom(1/4*s12^2)*mt^5*s12*s14^2*s23 + 1/2*denom(1/4*s12^2)*
      mt^5*s12*s13*s23*s24 + 1/4*denom(1/4*s12^2)*mt^5*s12*s13*s23^2 + 1/2*
      denom(1/4*s12^2)*mt^5*s12*s13*s14*s24 + 3/2*denom(1/4*s12^2)*mt^5*s12*
      s13*s14*s23 + 1/4*denom(1/4*s12^2)*mt^5*s12*s13*s14^2 + 1/4*denom(1/4*
      s12^2)*mt^5*s12*s13^2*s24 + 1/4*denom(1/4*s12^2)*mt^5*s12*s13^2*s23 + 1/
      4*denom(1/4*s12^2)*mt^5*s12*s13^2*s14 - 1/4*denom(1/4*s12^2)*mt^7*s12*
      s23*s24 - 1/4*denom(1/4*s12^2)*mt^7*s12*s23^2 - 1/4*denom(1/4*s12^2)*
      mt^7*s12*s14*s24 - 5/4*denom(1/4*s12^2)*mt^7*s12*s14*s23 - 1/4*denom(1/4
      *s12^2)*mt^7*s12*s14^2 - 1/2*denom(1/4*s12^2)*mt^7*s12*s13*s24 - denom(1/
      4*s12^2)*mt^7*s12*s13*s23 - denom(1/4*s12^2)*mt^7*s12*s13*s14 - 1/4*
      denom(1/4*s12^2)*mt^7*s12*s13^2 + 1/4*denom(1/4*s12^2)*mt^9*s12*s24 + 3/
      4*denom(1/4*s12^2)*mt^9*s12*s23 + 3/4*denom(1/4*s12^2)*mt^9*s12*s14 + 3/
      4*denom(1/4*s12^2)*mt^9*s12*s13 - 1/2*denom(1/4*s12^2)*mt^11*s12;
 
 .sort
id KMatrix(13,8) =  1/2*mt*s12*s14*s24^2 + mt*s12*s14*s23*s24 + 1/2*mt*s12*s14
      *s23^2 + mt*s12*s14^2*s24 + mt*s12*s14^2*s23 + 1/2*mt*s12*s14^3 + mt*s12
      *s13*s14*s24 + mt*s12*s13*s14*s23 + mt*s12*s13*s14^2 + 1/2*mt*s12*s13^2*
      s14 + mt*s12^2*s14*s24 + mt*s12^2*s14*s23 + mt*s12^2*s14^2 + mt*s12^2*
      s13*s14 + 1/2*mt*s12^3*s14 - mt*mh^2*s12*s14*s24 - mt*mh^2*s12*s14*s23
       - mt*mh^2*s12*s14^2 - mt*mh^2*s12*s13*s14 - mt*mh^2*s12^2*s14 + 1/2*mt*
      mh^4*s12*s14 - 1/2*mt^3*s12*s24^2 - mt^3*s12*s23*s24 - 1/2*mt^3*s12*
      s23^2 - 3*mt^3*s12*s14*s24 - 3*mt^3*s12*s14*s23 - 5/2*mt^3*s12*s14^2 - 
      mt^3*s12*s13*s24 - mt^3*s12*s13*s23 - 3*mt^3*s12*s13*s14 - 1/2*mt^3*s12*
      s13^2 - mt^3*s12^2*s24 - mt^3*s12^2*s23 - 3*mt^3*s12^2*s14 - mt^3*s12^2*
      s13 - 1/2*mt^3*s12^3 + mt^3*mh^2*s12*s24 + mt^3*mh^2*s12*s23 + 3*mt^3*
      mh^2*s12*s14 + mt^3*mh^2*s12*s13 + mt^3*mh^2*s12^2 - 1/2*mt^3*mh^4*s12
       + 2*mt^5*s12*s24 + 2*mt^5*s12*s23 + 4*mt^5*s12*s14 + 2*mt^5*s12*s13 + 2
      *mt^5*s12^2 - 2*mt^5*mh^2*s12 - 2*mt^7*s12 + 1/2*denom(1/2*s12)*mt*s12*
      s14^2*s23*s24 + 1/2*denom(1/2*s12)*mt*s12*s14^2*s23^2 + 1/2*denom(1/2*
      s12)*mt*s12*s14^3*s23 + 1/2*denom(1/2*s12)*mt*s12*s13*s14*s24^2 + 1/2*
      denom(1/2*s12)*mt*s12*s13*s14*s23*s24 + 1/2*denom(1/2*s12)*mt*s12*s13*
      s14^2*s24 + 1/2*denom(1/2*s12)*mt*s12*s13*s14^2*s23 + 1/2*denom(1/2*s12)
      *mt*s12*s13^2*s14*s24 + 1/2*denom(1/2*s12)*mt*s12^2*s14^2*s23 + 1/2*
      denom(1/2*s12)*mt*s12^2*s13*s14*s24 - 1/2*denom(1/2*s12)*mt*mh^2*s12*
      s14^2*s23 - 1/2*denom(1/2*s12)*mt*mh^2*s12*s13*s14*s24 - 1/2*denom(1/2*
      s12)*mt^3*s12*s14*s24^2 - 3/2*denom(1/2*s12)*mt^3*s12*s14*s23*s24 - 
      denom(1/2*s12)*mt^3*s12*s14*s23^2 - denom(1/2*s12)*mt^3*s12*s14^2*s24 - 
      5/2*denom(1/2*s12)*mt^3*s12*s14^2*s23 - 1/2*denom(1/2*s12)*mt^3*s12*
      s14^3 - 1/2*denom(1/2*s12)*mt^3*s12*s13*s24^2 - 1/2*denom(1/2*s12)*mt^3*
      s12*s13*s23*s24 - 5/2*denom(1/2*s12)*mt^3*s12*s13*s14*s24 - 3/2*denom(1/
      2*s12)*mt^3*s12*s13*s14*s23 - denom(1/2*s12)*mt^3*s12*s13*s14^2 - 1/2*
      denom(1/2*s12)*mt^3*s12*s13^2*s24 - 1/2*denom(1/2*s12)*mt^3*s12*s13^2*
      s14 - 1/2*denom(1/2*s12)*mt^3*s12^2*s14*s24 - denom(1/2*s12)*mt^3*s12^2*
      s14*s23 - 1/2*denom(1/2*s12)*mt^3*s12^2*s14^2 - 1/2*denom(1/2*s12)*mt^3*
      s12^2*s13*s24 - 1/2*denom(1/2*s12)*mt^3*s12^2*s13*s14 + 1/2*denom(1/2*
      s12)*mt^3*mh^2*s12*s14*s24 + denom(1/2*s12)*mt^3*mh^2*s12*s14*s23 + 1/2*
      denom(1/2*s12)*mt^3*mh^2*s12*s14^2 + 1/2*denom(1/2*s12)*mt^3*mh^2*s12*
      s13*s24 + 1/2*denom(1/2*s12)*mt^3*mh^2*s12*s13*s14 + 1/2*denom(1/2*s12)*
      mt^5*s12*s24^2 + denom(1/2*s12)*mt^5*s12*s23*s24 + 1/2*denom(1/2*s12)*
      mt^5*s12*s23^2 + 3*denom(1/2*s12)*mt^5*s12*s14*s24 + 4*denom(1/2*s12)*
      mt^5*s12*s14*s23 + 5/2*denom(1/2*s12)*mt^5*s12*s14^2 + 2*denom(1/2*s12)*
      mt^5*s12*s13*s24 + denom(1/2*s12)*mt^5*s12*s13*s23 + 3*denom(1/2*s12)*
      mt^5*s12*s13*s14 + 1/2*denom(1/2*s12)*mt^5*s12*s13^2 + 1/2*denom(1/2*s12
      )*mt^5*s12^2*s24 + 1/2*denom(1/2*s12)*mt^5*s12^2*s23 + 3/2*denom(1/2*s12
      )*mt^5*s12^2*s14 + 1/2*denom(1/2*s12)*mt^5*s12^2*s13 - 1/2*denom(1/2*s12
      )*mt^5*mh^2*s12*s24 - 1/2*denom(1/2*s12)*mt^5*mh^2*s12*s23 - 3/2*denom(1/
      2*s12)*mt^5*mh^2*s12*s14 - 1/2*denom(1/2*s12)*mt^5*mh^2*s12*s13 - 2*
      denom(1/2*s12)*mt^7*s12*s24 - 2*denom(1/2*s12)*mt^7*s12*s23 - 4*denom(1/
      2*s12)*mt^7*s12*s14 - 2*denom(1/2*s12)*mt^7*s12*s13 - denom(1/2*s12)*
      mt^7*s12^2 + denom(1/2*s12)*mt^7*mh^2*s12 + 2*denom(1/2*s12)*mt^9*s12 + 
      1/8*denom(1/4*s12^2)*mt*s12*s14^3*s23^2 + 1/4*denom(1/4*s12^2)*mt*s12*
      s13*s14^2*s23*s24 + 1/8*denom(1/4*s12^2)*mt*s12*s13^2*s14*s24^2 - 1/4*
      denom(1/4*s12^2)*mt^3*s12*s14^2*s23*s24 - 3/8*denom(1/4*s12^2)*mt^3*s12*
      s14^2*s23^2 - 1/4*denom(1/4*s12^2)*mt^3*s12*s14^3*s23 - 1/4*denom(1/4*
      s12^2)*mt^3*s12*s13*s14*s24^2 - 1/2*denom(1/4*s12^2)*mt^3*s12*s13*s14*
      s23*s24 - 1/4*denom(1/4*s12^2)*mt^3*s12*s13*s14^2*s24 - 1/4*denom(1/4*
      s12^2)*mt^3*s12*s13*s14^2*s23 - 1/8*denom(1/4*s12^2)*mt^3*s12*s13^2*
      s24^2 - 1/4*denom(1/4*s12^2)*mt^3*s12*s13^2*s14*s24 + 1/8*denom(1/4*
      s12^2)*mt^5*s12*s14*s24^2 + 1/2*denom(1/4*s12^2)*mt^5*s12*s14*s23*s24 + 
      3/8*denom(1/4*s12^2)*mt^5*s12*s14*s23^2 + 1/4*denom(1/4*s12^2)*mt^5*s12*
      s14^2*s24 + denom(1/4*s12^2)*mt^5*s12*s14^2*s23 + 1/8*denom(1/4*s12^2)*
      mt^5*s12*s14^3 + 1/4*denom(1/4*s12^2)*mt^5*s12*s13*s24^2 + 1/4*denom(1/4
      *s12^2)*mt^5*s12*s13*s23*s24 + denom(1/4*s12^2)*mt^5*s12*s13*s14*s24 + 1/
      2*denom(1/4*s12^2)*mt^5*s12*s13*s14*s23 + 1/4*denom(1/4*s12^2)*mt^5*s12*
      s13*s14^2 + 1/4*denom(1/4*s12^2)*mt^5*s12*s13^2*s24 + 1/8*denom(1/4*
      s12^2)*mt^5*s12*s13^2*s14 - 1/8*denom(1/4*s12^2)*mt^7*s12*s24^2 - 1/4*
      denom(1/4*s12^2)*mt^7*s12*s23*s24 - 1/8*denom(1/4*s12^2)*mt^7*s12*s23^2
       - 3/4*denom(1/4*s12^2)*mt^7*s12*s14*s24 - 5/4*denom(1/4*s12^2)*mt^7*s12
      *s14*s23 - 5/8*denom(1/4*s12^2)*mt^7*s12*s14^2 - 3/4*denom(1/4*s12^2)*
      mt^7*s12*s13*s24 - 1/4*denom(1/4*s12^2)*mt^7*s12*s13*s23 - 3/4*denom(1/4
      *s12^2)*mt^7*s12*s13*s14 - 1/8*denom(1/4*s12^2)*mt^7*s12*s13^2 + 1/2*
      denom(1/4*s12^2)*mt^9*s12*s24 + 1/2*denom(1/4*s12^2)*mt^9*s12*s23 + 
      denom(1/4*s12^2)*mt^9*s12*s14 + 1/2*denom(1/4*s12^2)*mt^9*s12*s13 - 1/2*
      denom(1/4*s12^2)*mt^11*s12;
 
 .sort
id KMatrix(13,9) =   - 2*mt^5*s12*s23 + 2*mt^7*s12 + 2*denom(1/2*s12)*mt^3*s12
      *s13*s23^2 - 2*denom(1/2*s12)*mt^5*s12*s23^2 - 4*denom(1/2*s12)*mt^5*s12
      *s13*s23 + 4*denom(1/2*s12)*mt^7*s12*s23 + 2*denom(1/2*s12)*mt^7*s12*s13
       - 2*denom(1/2*s12)*mt^9*s12 - 1/2*denom(1/4*s12^2)*mt*s12*s13^2*s23^3
       + denom(1/4*s12^2)*mt^3*s12*s13*s23^3 + 3/2*denom(1/4*s12^2)*mt^3*s12*
      s13^2*s23^2 - 1/2*denom(1/4*s12^2)*mt^5*s12*s23^3 - 3*denom(1/4*s12^2)*
      mt^5*s12*s13*s23^2 - 3/2*denom(1/4*s12^2)*mt^5*s12*s13^2*s23 + 3/2*
      denom(1/4*s12^2)*mt^7*s12*s23^2 + 3*denom(1/4*s12^2)*mt^7*s12*s13*s23 + 
      1/2*denom(1/4*s12^2)*mt^7*s12*s13^2 - 3/2*denom(1/4*s12^2)*mt^9*s12*s23
       - denom(1/4*s12^2)*mt^9*s12*s13 + 1/2*denom(1/4*s12^2)*mt^11*s12;
 
 .sort
id KMatrix(13,10) =  mt^3*s12*s23*s24 + mt^3*s12*s23^2 + mt^3*s12*s14*s23 + 
      mt^3*s12*s13*s23 + mt^3*s12^2*s23 - mt^3*mh^2*s12*s23 - mt^5*s12*s24 - 3
      *mt^5*s12*s23 - mt^5*s12*s14 - mt^5*s12*s13 - mt^5*s12^2 + mt^5*mh^2*s12
       + 2*mt^7*s12 - 1/2*denom(1/2*s12)*mt*s12*s13*s23^2*s24 - 1/2*denom(1/2*
      s12)*mt*s12*s13*s23^3 - 1/2*denom(1/2*s12)*mt*s12*s13*s14*s23^2 - 1/2*
      denom(1/2*s12)*mt*s12*s13^2*s23^2 - 1/2*denom(1/2*s12)*mt*s12^2*s13*
      s23^2 + 1/2*denom(1/2*s12)*mt*mh^2*s12*s13*s23^2 + 1/2*denom(1/2*s12)*
      mt^3*s12*s23^2*s24 + 1/2*denom(1/2*s12)*mt^3*s12*s23^3 + denom(1/2*s12)*
      mt^3*s12*s14*s23^2 + 3/2*denom(1/2*s12)*mt^3*s12*s13*s23*s24 + 5/2*
      denom(1/2*s12)*mt^3*s12*s13*s23^2 + denom(1/2*s12)*mt^3*s12*s13*s14*s23
       + denom(1/2*s12)*mt^3*s12*s13^2*s23 + 1/2*denom(1/2*s12)*mt^3*s12^2*
      s23^2 + denom(1/2*s12)*mt^3*s12^2*s13*s23 - 1/2*denom(1/2*s12)*mt^3*mh^2
      *s12*s23^2 - denom(1/2*s12)*mt^3*mh^2*s12*s13*s23 - 3/2*denom(1/2*s12)*
      mt^5*s12*s23*s24 - 5/2*denom(1/2*s12)*mt^5*s12*s23^2 - 2*denom(1/2*s12)*
      mt^5*s12*s14*s23 - denom(1/2*s12)*mt^5*s12*s13*s24 - 4*denom(1/2*s12)*
      mt^5*s12*s13*s23 - 1/2*denom(1/2*s12)*mt^5*s12*s13*s14 - 1/2*denom(1/2*
      s12)*mt^5*s12*s13^2 - denom(1/2*s12)*mt^5*s12^2*s23 - 1/2*denom(1/2*s12)
      *mt^5*s12^2*s13 + denom(1/2*s12)*mt^5*mh^2*s12*s23 + 1/2*denom(1/2*s12)*
      mt^5*mh^2*s12*s13 + denom(1/2*s12)*mt^7*s12*s24 + 4*denom(1/2*s12)*mt^7*
      s12*s23 + denom(1/2*s12)*mt^7*s12*s14 + 2*denom(1/2*s12)*mt^7*s12*s13 + 
      1/2*denom(1/2*s12)*mt^7*s12^2 - 1/2*denom(1/2*s12)*mt^7*mh^2*s12 - 2*
      denom(1/2*s12)*mt^9*s12 - 1/4*denom(1/4*s12^2)*mt*s12*s13*s14*s23^3 - 1/
      4*denom(1/4*s12^2)*mt*s12*s13^2*s23^2*s24 + 1/4*denom(1/4*s12^2)*mt^3*
      s12*s14*s23^3 + 1/2*denom(1/4*s12^2)*mt^3*s12*s13*s23^2*s24 + 1/4*denom(
      1/4*s12^2)*mt^3*s12*s13*s23^3 + 3/4*denom(1/4*s12^2)*mt^3*s12*s13*s14*
      s23^2 + 1/2*denom(1/4*s12^2)*mt^3*s12*s13^2*s23*s24 + 1/4*denom(1/4*
      s12^2)*mt^3*s12*s13^2*s23^2 - 1/4*denom(1/4*s12^2)*mt^5*s12*s23^2*s24 - 
      1/4*denom(1/4*s12^2)*mt^5*s12*s23^3 - 3/4*denom(1/4*s12^2)*mt^5*s12*s14*
      s23^2 - denom(1/4*s12^2)*mt^5*s12*s13*s23*s24 - 5/4*denom(1/4*s12^2)*
      mt^5*s12*s13*s23^2 - 3/4*denom(1/4*s12^2)*mt^5*s12*s13*s14*s23 - 1/4*
      denom(1/4*s12^2)*mt^5*s12*s13^2*s24 - 1/2*denom(1/4*s12^2)*mt^5*s12*
      s13^2*s23 + 1/2*denom(1/4*s12^2)*mt^7*s12*s23*s24 + denom(1/4*s12^2)*
      mt^7*s12*s23^2 + 3/4*denom(1/4*s12^2)*mt^7*s12*s14*s23 + 1/2*denom(1/4*
      s12^2)*mt^7*s12*s13*s24 + 7/4*denom(1/4*s12^2)*mt^7*s12*s13*s23 + 1/4*
      denom(1/4*s12^2)*mt^7*s12*s13*s14 + 1/4*denom(1/4*s12^2)*mt^7*s12*s13^2
       - 1/4*denom(1/4*s12^2)*mt^9*s12*s24 - 5/4*denom(1/4*s12^2)*mt^9*s12*s23
       - 1/4*denom(1/4*s12^2)*mt^9*s12*s14 - 3/4*denom(1/4*s12^2)*mt^9*s12*s13
       + 1/2*denom(1/4*s12^2)*mt^11*s12;
 
 .sort
id KMatrix(13,11) =  mt^3*s12*s23*s24 + mt^3*s12*s23^2 + mt^3*s12*s14*s23 + 
      mt^3*s12*s13*s23 + mt^3*s12^2*s23 - mt^3*mh^2*s12*s23 - mt^5*s12*s24 - 3
      *mt^5*s12*s23 - mt^5*s12*s14 - mt^5*s12*s13 - mt^5*s12^2 + mt^5*mh^2*s12
       + 2*mt^7*s12 - 1/2*denom(1/2*s12)*mt*s12*s13*s23^2*s24 - 1/2*denom(1/2*
      s12)*mt*s12*s13*s23^3 - 1/2*denom(1/2*s12)*mt*s12*s13*s14*s23^2 - 1/2*
      denom(1/2*s12)*mt*s12*s13^2*s23^2 - 1/2*denom(1/2*s12)*mt*s12^2*s13*
      s23^2 + 1/2*denom(1/2*s12)*mt*mh^2*s12*s13*s23^2 + 1/2*denom(1/2*s12)*
      mt^3*s12*s23^2*s24 + 1/2*denom(1/2*s12)*mt^3*s12*s23^3 + denom(1/2*s12)*
      mt^3*s12*s14*s23^2 + 3/2*denom(1/2*s12)*mt^3*s12*s13*s23*s24 + 5/2*
      denom(1/2*s12)*mt^3*s12*s13*s23^2 + denom(1/2*s12)*mt^3*s12*s13*s14*s23
       + denom(1/2*s12)*mt^3*s12*s13^2*s23 + 1/2*denom(1/2*s12)*mt^3*s12^2*
      s23^2 + denom(1/2*s12)*mt^3*s12^2*s13*s23 - 1/2*denom(1/2*s12)*mt^3*mh^2
      *s12*s23^2 - denom(1/2*s12)*mt^3*mh^2*s12*s13*s23 - 3/2*denom(1/2*s12)*
      mt^5*s12*s23*s24 - 5/2*denom(1/2*s12)*mt^5*s12*s23^2 - 2*denom(1/2*s12)*
      mt^5*s12*s14*s23 - denom(1/2*s12)*mt^5*s12*s13*s24 - 4*denom(1/2*s12)*
      mt^5*s12*s13*s23 - 1/2*denom(1/2*s12)*mt^5*s12*s13*s14 - 1/2*denom(1/2*
      s12)*mt^5*s12*s13^2 - denom(1/2*s12)*mt^5*s12^2*s23 - 1/2*denom(1/2*s12)
      *mt^5*s12^2*s13 + denom(1/2*s12)*mt^5*mh^2*s12*s23 + 1/2*denom(1/2*s12)*
      mt^5*mh^2*s12*s13 + denom(1/2*s12)*mt^7*s12*s24 + 4*denom(1/2*s12)*mt^7*
      s12*s23 + denom(1/2*s12)*mt^7*s12*s14 + 2*denom(1/2*s12)*mt^7*s12*s13 + 
      1/2*denom(1/2*s12)*mt^7*s12^2 - 1/2*denom(1/2*s12)*mt^7*mh^2*s12 - 2*
      denom(1/2*s12)*mt^9*s12 - 1/4*denom(1/4*s12^2)*mt*s12*s13*s14*s23^3 - 1/
      4*denom(1/4*s12^2)*mt*s12*s13^2*s23^2*s24 + 1/4*denom(1/4*s12^2)*mt^3*
      s12*s14*s23^3 + 1/2*denom(1/4*s12^2)*mt^3*s12*s13*s23^2*s24 + 1/4*denom(
      1/4*s12^2)*mt^3*s12*s13*s23^3 + 3/4*denom(1/4*s12^2)*mt^3*s12*s13*s14*
      s23^2 + 1/2*denom(1/4*s12^2)*mt^3*s12*s13^2*s23*s24 + 1/4*denom(1/4*
      s12^2)*mt^3*s12*s13^2*s23^2 - 1/4*denom(1/4*s12^2)*mt^5*s12*s23^2*s24 - 
      1/4*denom(1/4*s12^2)*mt^5*s12*s23^3 - 3/4*denom(1/4*s12^2)*mt^5*s12*s14*
      s23^2 - denom(1/4*s12^2)*mt^5*s12*s13*s23*s24 - 5/4*denom(1/4*s12^2)*
      mt^5*s12*s13*s23^2 - 3/4*denom(1/4*s12^2)*mt^5*s12*s13*s14*s23 - 1/4*
      denom(1/4*s12^2)*mt^5*s12*s13^2*s24 - 1/2*denom(1/4*s12^2)*mt^5*s12*
      s13^2*s23 + 1/2*denom(1/4*s12^2)*mt^7*s12*s23*s24 + denom(1/4*s12^2)*
      mt^7*s12*s23^2 + 3/4*denom(1/4*s12^2)*mt^7*s12*s14*s23 + 1/2*denom(1/4*
      s12^2)*mt^7*s12*s13*s24 + 7/4*denom(1/4*s12^2)*mt^7*s12*s13*s23 + 1/4*
      denom(1/4*s12^2)*mt^7*s12*s13*s14 + 1/4*denom(1/4*s12^2)*mt^7*s12*s13^2
       - 1/4*denom(1/4*s12^2)*mt^9*s12*s24 - 5/4*denom(1/4*s12^2)*mt^9*s12*s23
       - 1/4*denom(1/4*s12^2)*mt^9*s12*s14 - 3/4*denom(1/4*s12^2)*mt^9*s12*s13
       + 1/2*denom(1/4*s12^2)*mt^11*s12;
 
 .sort
id KMatrix(13,12) =   - 1/2*mt*s12*s23*s24^2 - mt*s12*s23^2*s24 - 1/2*mt*s12*
      s23^3 - mt*s12*s14*s23*s24 - mt*s12*s14*s23^2 - 1/2*mt*s12*s14^2*s23 - 
      mt*s12*s13*s23*s24 - mt*s12*s13*s23^2 - mt*s12*s13*s14*s23 - 1/2*mt*s12*
      s13^2*s23 - mt*s12^2*s23*s24 - mt*s12^2*s23^2 - mt*s12^2*s14*s23 - mt*
      s12^2*s13*s23 - 1/2*mt*s12^3*s23 + mt*mh^2*s12*s23*s24 + mt*mh^2*s12*
      s23^2 + mt*mh^2*s12*s14*s23 + mt*mh^2*s12*s13*s23 + mt*mh^2*s12^2*s23 - 
      1/2*mt*mh^4*s12*s23 + 1/2*mt^3*s12*s24^2 + 3*mt^3*s12*s23*s24 + 5/2*mt^3
      *s12*s23^2 + mt^3*s12*s14*s24 + 3*mt^3*s12*s14*s23 + 1/2*mt^3*s12*s14^2
       + mt^3*s12*s13*s24 + 3*mt^3*s12*s13*s23 + mt^3*s12*s13*s14 + 1/2*mt^3*
      s12*s13^2 + mt^3*s12^2*s24 + 3*mt^3*s12^2*s23 + mt^3*s12^2*s14 + mt^3*
      s12^2*s13 + 1/2*mt^3*s12^3 - mt^3*mh^2*s12*s24 - 3*mt^3*mh^2*s12*s23 - 
      mt^3*mh^2*s12*s14 - mt^3*mh^2*s12*s13 - mt^3*mh^2*s12^2 + 1/2*mt^3*mh^4*
      s12 - 2*mt^5*s12*s24 - 4*mt^5*s12*s23 - 2*mt^5*s12*s14 - 2*mt^5*s12*s13
       - 2*mt^5*s12^2 + 2*mt^5*mh^2*s12 + 2*mt^7*s12 - 1/2*denom(1/2*s12)*mt*
      s12*s14*s23^2*s24 - 1/2*denom(1/2*s12)*mt*s12*s14*s23^3 - 1/2*denom(1/2*
      s12)*mt*s12*s14^2*s23^2 - 1/2*denom(1/2*s12)*mt*s12*s13*s23*s24^2 - 1/2*
      denom(1/2*s12)*mt*s12*s13*s23^2*s24 - 1/2*denom(1/2*s12)*mt*s12*s13*s14*
      s23*s24 - 1/2*denom(1/2*s12)*mt*s12*s13*s14*s23^2 - 1/2*denom(1/2*s12)*
      mt*s12*s13^2*s23*s24 - 1/2*denom(1/2*s12)*mt*s12^2*s14*s23^2 - 1/2*
      denom(1/2*s12)*mt*s12^2*s13*s23*s24 + 1/2*denom(1/2*s12)*mt*mh^2*s12*s14
      *s23^2 + 1/2*denom(1/2*s12)*mt*mh^2*s12*s13*s23*s24 + 1/2*denom(1/2*s12)
      *mt^3*s12*s23*s24^2 + denom(1/2*s12)*mt^3*s12*s23^2*s24 + 1/2*denom(1/2*
      s12)*mt^3*s12*s23^3 + 3/2*denom(1/2*s12)*mt^3*s12*s14*s23*s24 + 5/2*
      denom(1/2*s12)*mt^3*s12*s14*s23^2 + denom(1/2*s12)*mt^3*s12*s14^2*s23 + 
      1/2*denom(1/2*s12)*mt^3*s12*s13*s24^2 + 5/2*denom(1/2*s12)*mt^3*s12*s13*
      s23*s24 + denom(1/2*s12)*mt^3*s12*s13*s23^2 + 1/2*denom(1/2*s12)*mt^3*
      s12*s13*s14*s24 + 3/2*denom(1/2*s12)*mt^3*s12*s13*s14*s23 + 1/2*denom(1/
      2*s12)*mt^3*s12*s13^2*s24 + 1/2*denom(1/2*s12)*mt^3*s12*s13^2*s23 + 1/2*
      denom(1/2*s12)*mt^3*s12^2*s23*s24 + 1/2*denom(1/2*s12)*mt^3*s12^2*s23^2
       + denom(1/2*s12)*mt^3*s12^2*s14*s23 + 1/2*denom(1/2*s12)*mt^3*s12^2*s13
      *s24 + 1/2*denom(1/2*s12)*mt^3*s12^2*s13*s23 - 1/2*denom(1/2*s12)*mt^3*
      mh^2*s12*s23*s24 - 1/2*denom(1/2*s12)*mt^3*mh^2*s12*s23^2 - denom(1/2*
      s12)*mt^3*mh^2*s12*s14*s23 - 1/2*denom(1/2*s12)*mt^3*mh^2*s12*s13*s24 - 
      1/2*denom(1/2*s12)*mt^3*mh^2*s12*s13*s23 - 1/2*denom(1/2*s12)*mt^5*s12*
      s24^2 - 3*denom(1/2*s12)*mt^5*s12*s23*s24 - 5/2*denom(1/2*s12)*mt^5*s12*
      s23^2 - denom(1/2*s12)*mt^5*s12*s14*s24 - 4*denom(1/2*s12)*mt^5*s12*s14*
      s23 - 1/2*denom(1/2*s12)*mt^5*s12*s14^2 - 2*denom(1/2*s12)*mt^5*s12*s13*
      s24 - 3*denom(1/2*s12)*mt^5*s12*s13*s23 - denom(1/2*s12)*mt^5*s12*s13*
      s14 - 1/2*denom(1/2*s12)*mt^5*s12*s13^2 - 1/2*denom(1/2*s12)*mt^5*s12^2*
      s24 - 3/2*denom(1/2*s12)*mt^5*s12^2*s23 - 1/2*denom(1/2*s12)*mt^5*s12^2*
      s14 - 1/2*denom(1/2*s12)*mt^5*s12^2*s13 + 1/2*denom(1/2*s12)*mt^5*mh^2*
      s12*s24 + 3/2*denom(1/2*s12)*mt^5*mh^2*s12*s23 + 1/2*denom(1/2*s12)*mt^5
      *mh^2*s12*s14 + 1/2*denom(1/2*s12)*mt^5*mh^2*s12*s13 + 2*denom(1/2*s12)*
      mt^7*s12*s24 + 4*denom(1/2*s12)*mt^7*s12*s23 + 2*denom(1/2*s12)*mt^7*s12
      *s14 + 2*denom(1/2*s12)*mt^7*s12*s13 + denom(1/2*s12)*mt^7*s12^2 - 
      denom(1/2*s12)*mt^7*mh^2*s12 - 2*denom(1/2*s12)*mt^9*s12 - 1/8*denom(1/4
      *s12^2)*mt*s12*s14^2*s23^3 - 1/4*denom(1/4*s12^2)*mt*s12*s13*s14*s23^2*
      s24 - 1/8*denom(1/4*s12^2)*mt*s12*s13^2*s23*s24^2 + 1/4*denom(1/4*s12^2)
      *mt^3*s12*s14*s23^2*s24 + 1/4*denom(1/4*s12^2)*mt^3*s12*s14*s23^3 + 3/8*
      denom(1/4*s12^2)*mt^3*s12*s14^2*s23^2 + 1/4*denom(1/4*s12^2)*mt^3*s12*
      s13*s23*s24^2 + 1/4*denom(1/4*s12^2)*mt^3*s12*s13*s23^2*s24 + 1/2*denom(
      1/4*s12^2)*mt^3*s12*s13*s14*s23*s24 + 1/4*denom(1/4*s12^2)*mt^3*s12*s13*
      s14*s23^2 + 1/8*denom(1/4*s12^2)*mt^3*s12*s13^2*s24^2 + 1/4*denom(1/4*
      s12^2)*mt^3*s12*s13^2*s23*s24 - 1/8*denom(1/4*s12^2)*mt^5*s12*s23*s24^2
       - 1/4*denom(1/4*s12^2)*mt^5*s12*s23^2*s24 - 1/8*denom(1/4*s12^2)*mt^5*
      s12*s23^3 - 1/2*denom(1/4*s12^2)*mt^5*s12*s14*s23*s24 - denom(1/4*s12^2)
      *mt^5*s12*s14*s23^2 - 3/8*denom(1/4*s12^2)*mt^5*s12*s14^2*s23 - 1/4*
      denom(1/4*s12^2)*mt^5*s12*s13*s24^2 - denom(1/4*s12^2)*mt^5*s12*s13*s23*
      s24 - 1/4*denom(1/4*s12^2)*mt^5*s12*s13*s23^2 - 1/4*denom(1/4*s12^2)*
      mt^5*s12*s13*s14*s24 - 1/2*denom(1/4*s12^2)*mt^5*s12*s13*s14*s23 - 1/4*
      denom(1/4*s12^2)*mt^5*s12*s13^2*s24 - 1/8*denom(1/4*s12^2)*mt^5*s12*
      s13^2*s23 + 1/8*denom(1/4*s12^2)*mt^7*s12*s24^2 + 3/4*denom(1/4*s12^2)*
      mt^7*s12*s23*s24 + 5/8*denom(1/4*s12^2)*mt^7*s12*s23^2 + 1/4*denom(1/4*
      s12^2)*mt^7*s12*s14*s24 + 5/4*denom(1/4*s12^2)*mt^7*s12*s14*s23 + 1/8*
      denom(1/4*s12^2)*mt^7*s12*s14^2 + 3/4*denom(1/4*s12^2)*mt^7*s12*s13*s24
       + 3/4*denom(1/4*s12^2)*mt^7*s12*s13*s23 + 1/4*denom(1/4*s12^2)*mt^7*s12
      *s13*s14 + 1/8*denom(1/4*s12^2)*mt^7*s12*s13^2 - 1/2*denom(1/4*s12^2)*
      mt^9*s12*s24 - denom(1/4*s12^2)*mt^9*s12*s23 - 1/2*denom(1/4*s12^2)*mt^9
      *s12*s14 - 1/2*denom(1/4*s12^2)*mt^9*s12*s13 + 1/2*denom(1/4*s12^2)*
      mt^11*s12;
 
 .sort
id KMatrix(13,13) =  2*mt^4*s12*s14*s23 - 2*mt^6*s12*s23 - 2*mt^6*s12*s14 + 2*
      mt^8*s12 - 2*denom(1/2*s12)*mt^2*s12*s13*s14*s23^2 + 2*denom(1/2*s12)*
      mt^4*s12*s14*s23^2 + 2*denom(1/2*s12)*mt^4*s12*s13*s23^2 + 4*denom(1/2*
      s12)*mt^4*s12*s13*s14*s23 - 2*denom(1/2*s12)*mt^6*s12*s23^2 - 4*denom(1/
      2*s12)*mt^6*s12*s14*s23 - 4*denom(1/2*s12)*mt^6*s12*s13*s23 - 2*denom(1/
      2*s12)*mt^6*s12*s13*s14 + 4*denom(1/2*s12)*mt^8*s12*s23 + 2*denom(1/2*
      s12)*mt^8*s12*s14 + 2*denom(1/2*s12)*mt^8*s12*s13 - 2*denom(1/2*s12)*
      mt^10*s12 + 1/2*denom(1/4*s12^2)*s12*s13^2*s14*s23^3 - denom(1/4*s12^2)*
      mt^2*s12*s13*s14*s23^3 - 1/2*denom(1/4*s12^2)*mt^2*s12*s13^2*s23^3 - 3/2
      *denom(1/4*s12^2)*mt^2*s12*s13^2*s14*s23^2 + 1/2*denom(1/4*s12^2)*mt^4*
      s12*s14*s23^3 + denom(1/4*s12^2)*mt^4*s12*s13*s23^3 + 3*denom(1/4*s12^2)
      *mt^4*s12*s13*s14*s23^2 + 3/2*denom(1/4*s12^2)*mt^4*s12*s13^2*s23^2 + 3/
      2*denom(1/4*s12^2)*mt^4*s12*s13^2*s14*s23 - 1/2*denom(1/4*s12^2)*mt^6*
      s12*s23^3 - 3/2*denom(1/4*s12^2)*mt^6*s12*s14*s23^2 - 3*denom(1/4*s12^2)
      *mt^6*s12*s13*s23^2 - 3*denom(1/4*s12^2)*mt^6*s12*s13*s14*s23 - 3/2*
      denom(1/4*s12^2)*mt^6*s12*s13^2*s23 - 1/2*denom(1/4*s12^2)*mt^6*s12*
      s13^2*s14 + 3/2*denom(1/4*s12^2)*mt^8*s12*s23^2 + 3/2*denom(1/4*s12^2)*
      mt^8*s12*s14*s23 + 3*denom(1/4*s12^2)*mt^8*s12*s13*s23 + denom(1/4*s12^2
      )*mt^8*s12*s13*s14 + 1/2*denom(1/4*s12^2)*mt^8*s12*s13^2 - 3/2*denom(1/4
      *s12^2)*mt^10*s12*s23 - 1/2*denom(1/4*s12^2)*mt^10*s12*s14 - denom(1/4*
      s12^2)*mt^10*s12*s13 + 1/2*denom(1/4*s12^2)*mt^12*s12;
 
 .sort
id KMatrix(13,14) =   - mt^2*s12*s14*s23*s24 - mt^2*s12*s14*s23^2 - mt^2*s12*
      s14^2*s23 - mt^2*s12*s13*s14*s23 - mt^2*s12^2*s14*s23 + mt^2*mh^2*s12*
      s14*s23 + mt^4*s12*s23*s24 + mt^4*s12*s23^2 + mt^4*s12*s14*s24 + 4*mt^4*
      s12*s14*s23 + mt^4*s12*s14^2 + mt^4*s12*s13*s23 + mt^4*s12*s13*s14 + 
      mt^4*s12^2*s23 + mt^4*s12^2*s14 - mt^4*mh^2*s12*s23 - mt^4*mh^2*s12*s14
       - mt^6*s12*s24 - 3*mt^6*s12*s23 - 3*mt^6*s12*s14 - mt^6*s12*s13 - mt^6*
      s12^2 + mt^6*mh^2*s12 + 2*mt^8*s12 + 1/2*denom(1/2*s12)*s12*s13*s14*
      s23^2*s24 + 1/2*denom(1/2*s12)*s12*s13*s14*s23^3 + 1/2*denom(1/2*s12)*
      s12*s13*s14^2*s23^2 + 1/2*denom(1/2*s12)*s12*s13^2*s14*s23^2 + 1/2*
      denom(1/2*s12)*s12^2*s13*s14*s23^2 - 1/2*denom(1/2*s12)*mh^2*s12*s13*s14
      *s23^2 - 1/2*denom(1/2*s12)*mt^2*s12*s14*s23^2*s24 - 1/2*denom(1/2*s12)*
      mt^2*s12*s14*s23^3 - denom(1/2*s12)*mt^2*s12*s14^2*s23^2 - 1/2*denom(1/2
      *s12)*mt^2*s12*s13*s23^2*s24 - 1/2*denom(1/2*s12)*mt^2*s12*s13*s23^3 - 3/
      2*denom(1/2*s12)*mt^2*s12*s13*s14*s23*s24 - 3*denom(1/2*s12)*mt^2*s12*
      s13*s14*s23^2 - denom(1/2*s12)*mt^2*s12*s13*s14^2*s23 - 1/2*denom(1/2*
      s12)*mt^2*s12*s13^2*s23^2 - denom(1/2*s12)*mt^2*s12*s13^2*s14*s23 - 1/2*
      denom(1/2*s12)*mt^2*s12^2*s14*s23^2 - 1/2*denom(1/2*s12)*mt^2*s12^2*s13*
      s23^2 - denom(1/2*s12)*mt^2*s12^2*s13*s14*s23 + 1/2*denom(1/2*s12)*mt^2*
      mh^2*s12*s14*s23^2 + 1/2*denom(1/2*s12)*mt^2*mh^2*s12*s13*s23^2 + denom(
      1/2*s12)*mt^2*mh^2*s12*s13*s14*s23 + 1/2*denom(1/2*s12)*mt^4*s12*s23^2*
      s24 + 1/2*denom(1/2*s12)*mt^4*s12*s23^3 + 3/2*denom(1/2*s12)*mt^4*s12*
      s14*s23*s24 + 7/2*denom(1/2*s12)*mt^4*s12*s14*s23^2 + 2*denom(1/2*s12)*
      mt^4*s12*s14^2*s23 + 3/2*denom(1/2*s12)*mt^4*s12*s13*s23*s24 + 5/2*
      denom(1/2*s12)*mt^4*s12*s13*s23^2 + denom(1/2*s12)*mt^4*s12*s13*s14*s24
       + 5*denom(1/2*s12)*mt^4*s12*s13*s14*s23 + 1/2*denom(1/2*s12)*mt^4*s12*
      s13*s14^2 + denom(1/2*s12)*mt^4*s12*s13^2*s23 + 1/2*denom(1/2*s12)*mt^4*
      s12*s13^2*s14 + 1/2*denom(1/2*s12)*mt^4*s12^2*s23^2 + denom(1/2*s12)*
      mt^4*s12^2*s14*s23 + denom(1/2*s12)*mt^4*s12^2*s13*s23 + 1/2*denom(1/2*
      s12)*mt^4*s12^2*s13*s14 - 1/2*denom(1/2*s12)*mt^4*mh^2*s12*s23^2 - 
      denom(1/2*s12)*mt^4*mh^2*s12*s14*s23 - denom(1/2*s12)*mt^4*mh^2*s12*s13*
      s23 - 1/2*denom(1/2*s12)*mt^4*mh^2*s12*s13*s14 - 3/2*denom(1/2*s12)*mt^6
      *s12*s23*s24 - 5/2*denom(1/2*s12)*mt^6*s12*s23^2 - denom(1/2*s12)*mt^6*
      s12*s14*s24 - 6*denom(1/2*s12)*mt^6*s12*s14*s23 - denom(1/2*s12)*mt^6*
      s12*s14^2 - denom(1/2*s12)*mt^6*s12*s13*s24 - 4*denom(1/2*s12)*mt^6*s12*
      s13*s23 - 5/2*denom(1/2*s12)*mt^6*s12*s13*s14 - 1/2*denom(1/2*s12)*mt^6*
      s12*s13^2 - denom(1/2*s12)*mt^6*s12^2*s23 - 1/2*denom(1/2*s12)*mt^6*
      s12^2*s14 - 1/2*denom(1/2*s12)*mt^6*s12^2*s13 + denom(1/2*s12)*mt^6*mh^2
      *s12*s23 + 1/2*denom(1/2*s12)*mt^6*mh^2*s12*s14 + 1/2*denom(1/2*s12)*
      mt^6*mh^2*s12*s13 + denom(1/2*s12)*mt^8*s12*s24 + 4*denom(1/2*s12)*mt^8*
      s12*s23 + 3*denom(1/2*s12)*mt^8*s12*s14 + 2*denom(1/2*s12)*mt^8*s12*s13
       + 1/2*denom(1/2*s12)*mt^8*s12^2 - 1/2*denom(1/2*s12)*mt^8*mh^2*s12 - 2*
      denom(1/2*s12)*mt^10*s12 + 1/4*denom(1/4*s12^2)*s12*s13*s14^2*s23^3 + 1/
      4*denom(1/4*s12^2)*s12*s13^2*s14*s23^2*s24 - 1/4*denom(1/4*s12^2)*mt^2*
      s12*s14^2*s23^3 - 1/2*denom(1/4*s12^2)*mt^2*s12*s13*s14*s23^2*s24 - 1/2*
      denom(1/4*s12^2)*mt^2*s12*s13*s14*s23^3 - 3/4*denom(1/4*s12^2)*mt^2*s12*
      s13*s14^2*s23^2 - 1/4*denom(1/4*s12^2)*mt^2*s12*s13^2*s23^2*s24 - 1/2*
      denom(1/4*s12^2)*mt^2*s12*s13^2*s14*s23*s24 - 1/4*denom(1/4*s12^2)*mt^2*
      s12*s13^2*s14*s23^2 + 1/4*denom(1/4*s12^2)*mt^4*s12*s14*s23^2*s24 + 1/2*
      denom(1/4*s12^2)*mt^4*s12*s14*s23^3 + 3/4*denom(1/4*s12^2)*mt^4*s12*
      s14^2*s23^2 + 1/2*denom(1/4*s12^2)*mt^4*s12*s13*s23^2*s24 + 1/4*denom(1/
      4*s12^2)*mt^4*s12*s13*s23^3 + denom(1/4*s12^2)*mt^4*s12*s13*s14*s23*s24
       + 2*denom(1/4*s12^2)*mt^4*s12*s13*s14*s23^2 + 3/4*denom(1/4*s12^2)*mt^4
      *s12*s13*s14^2*s23 + 1/2*denom(1/4*s12^2)*mt^4*s12*s13^2*s23*s24 + 1/4*
      denom(1/4*s12^2)*mt^4*s12*s13^2*s23^2 + 1/4*denom(1/4*s12^2)*mt^4*s12*
      s13^2*s14*s24 + 1/2*denom(1/4*s12^2)*mt^4*s12*s13^2*s14*s23 - 1/4*denom(
      1/4*s12^2)*mt^6*s12*s23^2*s24 - 1/4*denom(1/4*s12^2)*mt^6*s12*s23^3 - 1/
      2*denom(1/4*s12^2)*mt^6*s12*s14*s23*s24 - 7/4*denom(1/4*s12^2)*mt^6*s12*
      s14*s23^2 - 3/4*denom(1/4*s12^2)*mt^6*s12*s14^2*s23 - denom(1/4*s12^2)*
      mt^6*s12*s13*s23*s24 - 5/4*denom(1/4*s12^2)*mt^6*s12*s13*s23^2 - 1/2*
      denom(1/4*s12^2)*mt^6*s12*s13*s14*s24 - 5/2*denom(1/4*s12^2)*mt^6*s12*
      s13*s14*s23 - 1/4*denom(1/4*s12^2)*mt^6*s12*s13*s14^2 - 1/4*denom(1/4*
      s12^2)*mt^6*s12*s13^2*s24 - 1/2*denom(1/4*s12^2)*mt^6*s12*s13^2*s23 - 1/
      4*denom(1/4*s12^2)*mt^6*s12*s13^2*s14 + 1/2*denom(1/4*s12^2)*mt^8*s12*
      s23*s24 + denom(1/4*s12^2)*mt^8*s12*s23^2 + 1/4*denom(1/4*s12^2)*mt^8*
      s12*s14*s24 + 2*denom(1/4*s12^2)*mt^8*s12*s14*s23 + 1/4*denom(1/4*s12^2)
      *mt^8*s12*s14^2 + 1/2*denom(1/4*s12^2)*mt^8*s12*s13*s24 + 7/4*denom(1/4*
      s12^2)*mt^8*s12*s13*s23 + denom(1/4*s12^2)*mt^8*s12*s13*s14 + 1/4*denom(
      1/4*s12^2)*mt^8*s12*s13^2 - 1/4*denom(1/4*s12^2)*mt^10*s12*s24 - 5/4*
      denom(1/4*s12^2)*mt^10*s12*s23 - 3/4*denom(1/4*s12^2)*mt^10*s12*s14 - 3/
      4*denom(1/4*s12^2)*mt^10*s12*s13 + 1/2*denom(1/4*s12^2)*mt^12*s12;
 
 .sort
id KMatrix(13,15) =   - mt^2*s12*s14*s23*s24 - mt^2*s12*s14*s23^2 - mt^2*s12*
      s14^2*s23 - mt^2*s12*s13*s14*s23 - mt^2*s12^2*s14*s23 + mt^2*mh^2*s12*
      s14*s23 + mt^4*s12*s23*s24 + mt^4*s12*s23^2 + mt^4*s12*s14*s24 + 4*mt^4*
      s12*s14*s23 + mt^4*s12*s14^2 + mt^4*s12*s13*s23 + mt^4*s12*s13*s14 + 
      mt^4*s12^2*s23 + mt^4*s12^2*s14 - mt^4*mh^2*s12*s23 - mt^4*mh^2*s12*s14
       - mt^6*s12*s24 - 3*mt^6*s12*s23 - 3*mt^6*s12*s14 - mt^6*s12*s13 - mt^6*
      s12^2 + mt^6*mh^2*s12 + 2*mt^8*s12 + 1/2*denom(1/2*s12)*s12*s13*s14*
      s23^2*s24 + 1/2*denom(1/2*s12)*s12*s13*s14*s23^3 + 1/2*denom(1/2*s12)*
      s12*s13*s14^2*s23^2 + 1/2*denom(1/2*s12)*s12*s13^2*s14*s23^2 + 1/2*
      denom(1/2*s12)*s12^2*s13*s14*s23^2 - 1/2*denom(1/2*s12)*mh^2*s12*s13*s14
      *s23^2 - 1/2*denom(1/2*s12)*mt^2*s12*s14*s23^2*s24 - 1/2*denom(1/2*s12)*
      mt^2*s12*s14*s23^3 - denom(1/2*s12)*mt^2*s12*s14^2*s23^2 - 1/2*denom(1/2
      *s12)*mt^2*s12*s13*s23^2*s24 - 1/2*denom(1/2*s12)*mt^2*s12*s13*s23^3 - 3/
      2*denom(1/2*s12)*mt^2*s12*s13*s14*s23*s24 - 3*denom(1/2*s12)*mt^2*s12*
      s13*s14*s23^2 - denom(1/2*s12)*mt^2*s12*s13*s14^2*s23 - 1/2*denom(1/2*
      s12)*mt^2*s12*s13^2*s23^2 - denom(1/2*s12)*mt^2*s12*s13^2*s14*s23 - 1/2*
      denom(1/2*s12)*mt^2*s12^2*s14*s23^2 - 1/2*denom(1/2*s12)*mt^2*s12^2*s13*
      s23^2 - denom(1/2*s12)*mt^2*s12^2*s13*s14*s23 + 1/2*denom(1/2*s12)*mt^2*
      mh^2*s12*s14*s23^2 + 1/2*denom(1/2*s12)*mt^2*mh^2*s12*s13*s23^2 + denom(
      1/2*s12)*mt^2*mh^2*s12*s13*s14*s23 + 1/2*denom(1/2*s12)*mt^4*s12*s23^2*
      s24 + 1/2*denom(1/2*s12)*mt^4*s12*s23^3 + 3/2*denom(1/2*s12)*mt^4*s12*
      s14*s23*s24 + 7/2*denom(1/2*s12)*mt^4*s12*s14*s23^2 + 2*denom(1/2*s12)*
      mt^4*s12*s14^2*s23 + 3/2*denom(1/2*s12)*mt^4*s12*s13*s23*s24 + 5/2*
      denom(1/2*s12)*mt^4*s12*s13*s23^2 + denom(1/2*s12)*mt^4*s12*s13*s14*s24
       + 5*denom(1/2*s12)*mt^4*s12*s13*s14*s23 + 1/2*denom(1/2*s12)*mt^4*s12*
      s13*s14^2 + denom(1/2*s12)*mt^4*s12*s13^2*s23 + 1/2*denom(1/2*s12)*mt^4*
      s12*s13^2*s14 + 1/2*denom(1/2*s12)*mt^4*s12^2*s23^2 + denom(1/2*s12)*
      mt^4*s12^2*s14*s23 + denom(1/2*s12)*mt^4*s12^2*s13*s23 + 1/2*denom(1/2*
      s12)*mt^4*s12^2*s13*s14 - 1/2*denom(1/2*s12)*mt^4*mh^2*s12*s23^2 - 
      denom(1/2*s12)*mt^4*mh^2*s12*s14*s23 - denom(1/2*s12)*mt^4*mh^2*s12*s13*
      s23 - 1/2*denom(1/2*s12)*mt^4*mh^2*s12*s13*s14 - 3/2*denom(1/2*s12)*mt^6
      *s12*s23*s24 - 5/2*denom(1/2*s12)*mt^6*s12*s23^2 - denom(1/2*s12)*mt^6*
      s12*s14*s24 - 6*denom(1/2*s12)*mt^6*s12*s14*s23 - denom(1/2*s12)*mt^6*
      s12*s14^2 - denom(1/2*s12)*mt^6*s12*s13*s24 - 4*denom(1/2*s12)*mt^6*s12*
      s13*s23 - 5/2*denom(1/2*s12)*mt^6*s12*s13*s14 - 1/2*denom(1/2*s12)*mt^6*
      s12*s13^2 - denom(1/2*s12)*mt^6*s12^2*s23 - 1/2*denom(1/2*s12)*mt^6*
      s12^2*s14 - 1/2*denom(1/2*s12)*mt^6*s12^2*s13 + denom(1/2*s12)*mt^6*mh^2
      *s12*s23 + 1/2*denom(1/2*s12)*mt^6*mh^2*s12*s14 + 1/2*denom(1/2*s12)*
      mt^6*mh^2*s12*s13 + denom(1/2*s12)*mt^8*s12*s24 + 4*denom(1/2*s12)*mt^8*
      s12*s23 + 3*denom(1/2*s12)*mt^8*s12*s14 + 2*denom(1/2*s12)*mt^8*s12*s13
       + 1/2*denom(1/2*s12)*mt^8*s12^2 - 1/2*denom(1/2*s12)*mt^8*mh^2*s12 - 2*
      denom(1/2*s12)*mt^10*s12 + 1/4*denom(1/4*s12^2)*s12*s13*s14^2*s23^3 + 1/
      4*denom(1/4*s12^2)*s12*s13^2*s14*s23^2*s24 - 1/4*denom(1/4*s12^2)*mt^2*
      s12*s14^2*s23^3 - 1/2*denom(1/4*s12^2)*mt^2*s12*s13*s14*s23^2*s24 - 1/2*
      denom(1/4*s12^2)*mt^2*s12*s13*s14*s23^3 - 3/4*denom(1/4*s12^2)*mt^2*s12*
      s13*s14^2*s23^2 - 1/4*denom(1/4*s12^2)*mt^2*s12*s13^2*s23^2*s24 - 1/2*
      denom(1/4*s12^2)*mt^2*s12*s13^2*s14*s23*s24 - 1/4*denom(1/4*s12^2)*mt^2*
      s12*s13^2*s14*s23^2 + 1/4*denom(1/4*s12^2)*mt^4*s12*s14*s23^2*s24 + 1/2*
      denom(1/4*s12^2)*mt^4*s12*s14*s23^3 + 3/4*denom(1/4*s12^2)*mt^4*s12*
      s14^2*s23^2 + 1/2*denom(1/4*s12^2)*mt^4*s12*s13*s23^2*s24 + 1/4*denom(1/
      4*s12^2)*mt^4*s12*s13*s23^3 + denom(1/4*s12^2)*mt^4*s12*s13*s14*s23*s24
       + 2*denom(1/4*s12^2)*mt^4*s12*s13*s14*s23^2 + 3/4*denom(1/4*s12^2)*mt^4
      *s12*s13*s14^2*s23 + 1/2*denom(1/4*s12^2)*mt^4*s12*s13^2*s23*s24 + 1/4*
      denom(1/4*s12^2)*mt^4*s12*s13^2*s23^2 + 1/4*denom(1/4*s12^2)*mt^4*s12*
      s13^2*s14*s24 + 1/2*denom(1/4*s12^2)*mt^4*s12*s13^2*s14*s23 - 1/4*denom(
      1/4*s12^2)*mt^6*s12*s23^2*s24 - 1/4*denom(1/4*s12^2)*mt^6*s12*s23^3 - 1/
      2*denom(1/4*s12^2)*mt^6*s12*s14*s23*s24 - 7/4*denom(1/4*s12^2)*mt^6*s12*
      s14*s23^2 - 3/4*denom(1/4*s12^2)*mt^6*s12*s14^2*s23 - denom(1/4*s12^2)*
      mt^6*s12*s13*s23*s24 - 5/4*denom(1/4*s12^2)*mt^6*s12*s13*s23^2 - 1/2*
      denom(1/4*s12^2)*mt^6*s12*s13*s14*s24 - 5/2*denom(1/4*s12^2)*mt^6*s12*
      s13*s14*s23 - 1/4*denom(1/4*s12^2)*mt^6*s12*s13*s14^2 - 1/4*denom(1/4*
      s12^2)*mt^6*s12*s13^2*s24 - 1/2*denom(1/4*s12^2)*mt^6*s12*s13^2*s23 - 1/
      4*denom(1/4*s12^2)*mt^6*s12*s13^2*s14 + 1/2*denom(1/4*s12^2)*mt^8*s12*
      s23*s24 + denom(1/4*s12^2)*mt^8*s12*s23^2 + 1/4*denom(1/4*s12^2)*mt^8*
      s12*s14*s24 + 2*denom(1/4*s12^2)*mt^8*s12*s14*s23 + 1/4*denom(1/4*s12^2)
      *mt^8*s12*s14^2 + 1/2*denom(1/4*s12^2)*mt^8*s12*s13*s24 + 7/4*denom(1/4*
      s12^2)*mt^8*s12*s13*s23 + denom(1/4*s12^2)*mt^8*s12*s13*s14 + 1/4*denom(
      1/4*s12^2)*mt^8*s12*s13^2 - 1/4*denom(1/4*s12^2)*mt^10*s12*s24 - 5/4*
      denom(1/4*s12^2)*mt^10*s12*s23 - 3/4*denom(1/4*s12^2)*mt^10*s12*s14 - 3/
      4*denom(1/4*s12^2)*mt^10*s12*s13 + 1/2*denom(1/4*s12^2)*mt^12*s12;
 
 .sort
id KMatrix(13,16) =  1/2*s12*s14*s23*s24^2 + s12*s14*s23^2*s24 + 1/2*s12*s14*
      s23^3 + s12*s14^2*s23*s24 + s12*s14^2*s23^2 + 1/2*s12*s14^3*s23 + s12*
      s13*s14*s23*s24 + s12*s13*s14*s23^2 + s12*s13*s14^2*s23 + 1/2*s12*s13^2*
      s14*s23 + s12^2*s14*s23*s24 + s12^2*s14*s23^2 + s12^2*s14^2*s23 + s12^2*
      s13*s14*s23 + 1/2*s12^3*s14*s23 - mh^2*s12*s14*s23*s24 - mh^2*s12*s14*
      s23^2 - mh^2*s12*s14^2*s23 - mh^2*s12*s13*s14*s23 - mh^2*s12^2*s14*s23
       + 1/2*mh^4*s12*s14*s23 - 1/2*mt^2*s12*s23*s24^2 - mt^2*s12*s23^2*s24 - 
      1/2*mt^2*s12*s23^3 - 1/2*mt^2*s12*s14*s24^2 - 4*mt^2*s12*s14*s23*s24 - 7/
      2*mt^2*s12*s14*s23^2 - mt^2*s12*s14^2*s24 - 7/2*mt^2*s12*s14^2*s23 - 1/2
      *mt^2*s12*s14^3 - mt^2*s12*s13*s23*s24 - mt^2*s12*s13*s23^2 - mt^2*s12*
      s13*s14*s24 - 4*mt^2*s12*s13*s14*s23 - mt^2*s12*s13*s14^2 - 1/2*mt^2*s12
      *s13^2*s23 - 1/2*mt^2*s12*s13^2*s14 - mt^2*s12^2*s23*s24 - mt^2*s12^2*
      s23^2 - mt^2*s12^2*s14*s24 - 4*mt^2*s12^2*s14*s23 - mt^2*s12^2*s14^2 - 
      mt^2*s12^2*s13*s23 - mt^2*s12^2*s13*s14 - 1/2*mt^2*s12^3*s23 - 1/2*mt^2*
      s12^3*s14 + mt^2*mh^2*s12*s23*s24 + mt^2*mh^2*s12*s23^2 + mt^2*mh^2*s12*
      s14*s24 + 4*mt^2*mh^2*s12*s14*s23 + mt^2*mh^2*s12*s14^2 + mt^2*mh^2*s12*
      s13*s23 + mt^2*mh^2*s12*s13*s14 + mt^2*mh^2*s12^2*s23 + mt^2*mh^2*s12^2*
      s14 - 1/2*mt^2*mh^4*s12*s23 - 1/2*mt^2*mh^4*s12*s14 + 1/2*mt^4*s12*s24^2
       + 3*mt^4*s12*s23*s24 + 5/2*mt^4*s12*s23^2 + 3*mt^4*s12*s14*s24 + 7*mt^4
      *s12*s14*s23 + 5/2*mt^4*s12*s14^2 + mt^4*s12*s13*s24 + 3*mt^4*s12*s13*
      s23 + 3*mt^4*s12*s13*s14 + 1/2*mt^4*s12*s13^2 + mt^4*s12^2*s24 + 3*mt^4*
      s12^2*s23 + 3*mt^4*s12^2*s14 + mt^4*s12^2*s13 + 1/2*mt^4*s12^3 - mt^4*
      mh^2*s12*s24 - 3*mt^4*mh^2*s12*s23 - 3*mt^4*mh^2*s12*s14 - mt^4*mh^2*s12
      *s13 - mt^4*mh^2*s12^2 + 1/2*mt^4*mh^4*s12 - 2*mt^6*s12*s24 - 4*mt^6*s12
      *s23 - 4*mt^6*s12*s14 - 2*mt^6*s12*s13 - 2*mt^6*s12^2 + 2*mt^6*mh^2*s12
       + 2*mt^8*s12 + 1/2*denom(1/2*s12)*s12*s14^2*s23^2*s24 + 1/2*denom(1/2*
      s12)*s12*s14^2*s23^3 + 1/2*denom(1/2*s12)*s12*s14^3*s23^2 + 1/2*denom(1/
      2*s12)*s12*s13*s14*s23*s24^2 + 1/2*denom(1/2*s12)*s12*s13*s14*s23^2*s24
       + 1/2*denom(1/2*s12)*s12*s13*s14^2*s23*s24 + 1/2*denom(1/2*s12)*s12*s13
      *s14^2*s23^2 + 1/2*denom(1/2*s12)*s12*s13^2*s14*s23*s24 + 1/2*denom(1/2*
      s12)*s12^2*s14^2*s23^2 + 1/2*denom(1/2*s12)*s12^2*s13*s14*s23*s24 - 1/2*
      denom(1/2*s12)*mh^2*s12*s14^2*s23^2 - 1/2*denom(1/2*s12)*mh^2*s12*s13*
      s14*s23*s24 - 1/2*denom(1/2*s12)*mt^2*s12*s14*s23*s24^2 - 3/2*denom(1/2*
      s12)*mt^2*s12*s14*s23^2*s24 - denom(1/2*s12)*mt^2*s12*s14*s23^3 - 3/2*
      denom(1/2*s12)*mt^2*s12*s14^2*s23*s24 - 3*denom(1/2*s12)*mt^2*s12*s14^2*
      s23^2 - denom(1/2*s12)*mt^2*s12*s14^3*s23 - 1/2*denom(1/2*s12)*mt^2*s12*
      s13*s23*s24^2 - 1/2*denom(1/2*s12)*mt^2*s12*s13*s23^2*s24 - 1/2*denom(1/
      2*s12)*mt^2*s12*s13*s14*s24^2 - 3*denom(1/2*s12)*mt^2*s12*s13*s14*s23*
      s24 - 3/2*denom(1/2*s12)*mt^2*s12*s13*s14*s23^2 - 1/2*denom(1/2*s12)*
      mt^2*s12*s13*s14^2*s24 - 3/2*denom(1/2*s12)*mt^2*s12*s13*s14^2*s23 - 1/2
      *denom(1/2*s12)*mt^2*s12*s13^2*s23*s24 - 1/2*denom(1/2*s12)*mt^2*s12*
      s13^2*s14*s24 - 1/2*denom(1/2*s12)*mt^2*s12*s13^2*s14*s23 - 1/2*denom(1/
      2*s12)*mt^2*s12^2*s14*s23*s24 - denom(1/2*s12)*mt^2*s12^2*s14*s23^2 - 
      denom(1/2*s12)*mt^2*s12^2*s14^2*s23 - 1/2*denom(1/2*s12)*mt^2*s12^2*s13*
      s23*s24 - 1/2*denom(1/2*s12)*mt^2*s12^2*s13*s14*s24 - 1/2*denom(1/2*s12)
      *mt^2*s12^2*s13*s14*s23 + 1/2*denom(1/2*s12)*mt^2*mh^2*s12*s14*s23*s24
       + denom(1/2*s12)*mt^2*mh^2*s12*s14*s23^2 + denom(1/2*s12)*mt^2*mh^2*s12
      *s14^2*s23 + 1/2*denom(1/2*s12)*mt^2*mh^2*s12*s13*s23*s24 + 1/2*denom(1/
      2*s12)*mt^2*mh^2*s12*s13*s14*s24 + 1/2*denom(1/2*s12)*mt^2*mh^2*s12*s13*
      s14*s23 + 1/2*denom(1/2*s12)*mt^4*s12*s23*s24^2 + denom(1/2*s12)*mt^4*
      s12*s23^2*s24 + 1/2*denom(1/2*s12)*mt^4*s12*s23^3 + 1/2*denom(1/2*s12)*
      mt^4*s12*s14*s24^2 + 9/2*denom(1/2*s12)*mt^4*s12*s14*s23*s24 + 5*denom(1/
      2*s12)*mt^4*s12*s14*s23^2 + denom(1/2*s12)*mt^4*s12*s14^2*s24 + 5*denom(
      1/2*s12)*mt^4*s12*s14^2*s23 + 1/2*denom(1/2*s12)*mt^4*s12*s14^3 + 1/2*
      denom(1/2*s12)*mt^4*s12*s13*s24^2 + 5/2*denom(1/2*s12)*mt^4*s12*s13*s23*
      s24 + denom(1/2*s12)*mt^4*s12*s13*s23^2 + 5/2*denom(1/2*s12)*mt^4*s12*
      s13*s14*s24 + 9/2*denom(1/2*s12)*mt^4*s12*s13*s14*s23 + denom(1/2*s12)*
      mt^4*s12*s13*s14^2 + 1/2*denom(1/2*s12)*mt^4*s12*s13^2*s24 + 1/2*denom(1/
      2*s12)*mt^4*s12*s13^2*s23 + 1/2*denom(1/2*s12)*mt^4*s12*s13^2*s14 + 1/2*
      denom(1/2*s12)*mt^4*s12^2*s23*s24 + 1/2*denom(1/2*s12)*mt^4*s12^2*s23^2
       + 1/2*denom(1/2*s12)*mt^4*s12^2*s14*s24 + 5/2*denom(1/2*s12)*mt^4*s12^2
      *s14*s23 + 1/2*denom(1/2*s12)*mt^4*s12^2*s14^2 + 1/2*denom(1/2*s12)*mt^4
      *s12^2*s13*s24 + 1/2*denom(1/2*s12)*mt^4*s12^2*s13*s23 + 1/2*denom(1/2*
      s12)*mt^4*s12^2*s13*s14 - 1/2*denom(1/2*s12)*mt^4*mh^2*s12*s23*s24 - 1/2
      *denom(1/2*s12)*mt^4*mh^2*s12*s23^2 - 1/2*denom(1/2*s12)*mt^4*mh^2*s12*
      s14*s24 - 5/2*denom(1/2*s12)*mt^4*mh^2*s12*s14*s23 - 1/2*denom(1/2*s12)*
      mt^4*mh^2*s12*s14^2 - 1/2*denom(1/2*s12)*mt^4*mh^2*s12*s13*s24 - 1/2*
      denom(1/2*s12)*mt^4*mh^2*s12*s13*s23 - 1/2*denom(1/2*s12)*mt^4*mh^2*s12*
      s13*s14 - 1/2*denom(1/2*s12)*mt^6*s12*s24^2 - 3*denom(1/2*s12)*mt^6*s12*
      s23*s24 - 5/2*denom(1/2*s12)*mt^6*s12*s23^2 - 3*denom(1/2*s12)*mt^6*s12*
      s14*s24 - 8*denom(1/2*s12)*mt^6*s12*s14*s23 - 5/2*denom(1/2*s12)*mt^6*
      s12*s14^2 - 2*denom(1/2*s12)*mt^6*s12*s13*s24 - 3*denom(1/2*s12)*mt^6*
      s12*s13*s23 - 3*denom(1/2*s12)*mt^6*s12*s13*s14 - 1/2*denom(1/2*s12)*
      mt^6*s12*s13^2 - 1/2*denom(1/2*s12)*mt^6*s12^2*s24 - 3/2*denom(1/2*s12)*
      mt^6*s12^2*s23 - 3/2*denom(1/2*s12)*mt^6*s12^2*s14 - 1/2*denom(1/2*s12)*
      mt^6*s12^2*s13 + 1/2*denom(1/2*s12)*mt^6*mh^2*s12*s24 + 3/2*denom(1/2*
      s12)*mt^6*mh^2*s12*s23 + 3/2*denom(1/2*s12)*mt^6*mh^2*s12*s14 + 1/2*
      denom(1/2*s12)*mt^6*mh^2*s12*s13 + 2*denom(1/2*s12)*mt^8*s12*s24 + 4*
      denom(1/2*s12)*mt^8*s12*s23 + 4*denom(1/2*s12)*mt^8*s12*s14 + 2*denom(1/
      2*s12)*mt^8*s12*s13 + denom(1/2*s12)*mt^8*s12^2 - denom(1/2*s12)*mt^8*
      mh^2*s12 - 2*denom(1/2*s12)*mt^10*s12 + 1/8*denom(1/4*s12^2)*s12*s14^3*
      s23^3 + 1/4*denom(1/4*s12^2)*s12*s13*s14^2*s23^2*s24 + 1/8*denom(1/4*
      s12^2)*s12*s13^2*s14*s23*s24^2 - 1/4*denom(1/4*s12^2)*mt^2*s12*s14^2*
      s23^2*s24 - 3/8*denom(1/4*s12^2)*mt^2*s12*s14^2*s23^3 - 3/8*denom(1/4*
      s12^2)*mt^2*s12*s14^3*s23^2 - 1/4*denom(1/4*s12^2)*mt^2*s12*s13*s14*s23*
      s24^2 - 1/2*denom(1/4*s12^2)*mt^2*s12*s13*s14*s23^2*s24 - 1/2*denom(1/4*
      s12^2)*mt^2*s12*s13*s14^2*s23*s24 - 1/4*denom(1/4*s12^2)*mt^2*s12*s13*
      s14^2*s23^2 - 1/8*denom(1/4*s12^2)*mt^2*s12*s13^2*s23*s24^2 - 1/8*denom(
      1/4*s12^2)*mt^2*s12*s13^2*s14*s24^2 - 1/4*denom(1/4*s12^2)*mt^2*s12*
      s13^2*s14*s23*s24 + 1/8*denom(1/4*s12^2)*mt^4*s12*s14*s23*s24^2 + 1/2*
      denom(1/4*s12^2)*mt^4*s12*s14*s23^2*s24 + 3/8*denom(1/4*s12^2)*mt^4*s12*
      s14*s23^3 + 1/2*denom(1/4*s12^2)*mt^4*s12*s14^2*s23*s24 + 11/8*denom(1/4
      *s12^2)*mt^4*s12*s14^2*s23^2 + 3/8*denom(1/4*s12^2)*mt^4*s12*s14^3*s23
       + 1/4*denom(1/4*s12^2)*mt^4*s12*s13*s23*s24^2 + 1/4*denom(1/4*s12^2)*
      mt^4*s12*s13*s23^2*s24 + 1/4*denom(1/4*s12^2)*mt^4*s12*s13*s14*s24^2 + 3/
      2*denom(1/4*s12^2)*mt^4*s12*s13*s14*s23*s24 + 1/2*denom(1/4*s12^2)*mt^4*
      s12*s13*s14*s23^2 + 1/4*denom(1/4*s12^2)*mt^4*s12*s13*s14^2*s24 + 1/2*
      denom(1/4*s12^2)*mt^4*s12*s13*s14^2*s23 + 1/8*denom(1/4*s12^2)*mt^4*s12*
      s13^2*s24^2 + 1/4*denom(1/4*s12^2)*mt^4*s12*s13^2*s23*s24 + 1/4*denom(1/
      4*s12^2)*mt^4*s12*s13^2*s14*s24 + 1/8*denom(1/4*s12^2)*mt^4*s12*s13^2*
      s14*s23 - 1/8*denom(1/4*s12^2)*mt^6*s12*s23*s24^2 - 1/4*denom(1/4*s12^2)
      *mt^6*s12*s23^2*s24 - 1/8*denom(1/4*s12^2)*mt^6*s12*s23^3 - 1/8*denom(1/
      4*s12^2)*mt^6*s12*s14*s24^2 - 5/4*denom(1/4*s12^2)*mt^6*s12*s14*s23*s24
       - 13/8*denom(1/4*s12^2)*mt^6*s12*s14*s23^2 - 1/4*denom(1/4*s12^2)*mt^6*
      s12*s14^2*s24 - 13/8*denom(1/4*s12^2)*mt^6*s12*s14^2*s23 - 1/8*denom(1/4
      *s12^2)*mt^6*s12*s14^3 - 1/4*denom(1/4*s12^2)*mt^6*s12*s13*s24^2 - 
      denom(1/4*s12^2)*mt^6*s12*s13*s23*s24 - 1/4*denom(1/4*s12^2)*mt^6*s12*
      s13*s23^2 - denom(1/4*s12^2)*mt^6*s12*s13*s14*s24 - 5/4*denom(1/4*s12^2)
      *mt^6*s12*s13*s14*s23 - 1/4*denom(1/4*s12^2)*mt^6*s12*s13*s14^2 - 1/4*
      denom(1/4*s12^2)*mt^6*s12*s13^2*s24 - 1/8*denom(1/4*s12^2)*mt^6*s12*
      s13^2*s23 - 1/8*denom(1/4*s12^2)*mt^6*s12*s13^2*s14 + 1/8*denom(1/4*
      s12^2)*mt^8*s12*s24^2 + 3/4*denom(1/4*s12^2)*mt^8*s12*s23*s24 + 5/8*
      denom(1/4*s12^2)*mt^8*s12*s23^2 + 3/4*denom(1/4*s12^2)*mt^8*s12*s14*s24
       + 9/4*denom(1/4*s12^2)*mt^8*s12*s14*s23 + 5/8*denom(1/4*s12^2)*mt^8*s12
      *s14^2 + 3/4*denom(1/4*s12^2)*mt^8*s12*s13*s24 + 3/4*denom(1/4*s12^2)*
      mt^8*s12*s13*s23 + 3/4*denom(1/4*s12^2)*mt^8*s12*s13*s14 + 1/8*denom(1/4
      *s12^2)*mt^8*s12*s13^2 - 1/2*denom(1/4*s12^2)*mt^10*s12*s24 - denom(1/4*
      s12^2)*mt^10*s12*s23 - denom(1/4*s12^2)*mt^10*s12*s14 - 1/2*denom(1/4*
      s12^2)*mt^10*s12*s13 + 1/2*denom(1/4*s12^2)*mt^12*s12;
 
 .sort
id KMatrix(13,17) =  mt^2*s14*s23 - mt^2*s13*s24 - mt^2*s12*s24 - mt^2*s12*s23
       - mt^2*s12*s14 - mt^2*s12*s13 - mt^2*s12^2 + mt^2*mh^2*s12 + mt^4*s24
       - mt^4*s23 - mt^4*s14 + mt^4*s13 - denom(1/2*s12)*s13*s14*s23^2 + 
      denom(1/2*s12)*s13^2*s23*s24 + denom(1/2*s12)*s12*s13*s23*s24 + denom(1/
      2*s12)*s12*s13*s23^2 + denom(1/2*s12)*s12*s13*s14*s23 + denom(1/2*s12)*
      s12*s13^2*s23 + denom(1/2*s12)*s12^2*s13*s23 - denom(1/2*s12)*mh^2*s12*
      s13*s23 + denom(1/2*s12)*mt^2*s14*s23^2 - 2*denom(1/2*s12)*mt^2*s13*s23*
      s24 + denom(1/2*s12)*mt^2*s13*s23^2 + 2*denom(1/2*s12)*mt^2*s13*s14*s23
       - denom(1/2*s12)*mt^2*s13^2*s24 - denom(1/2*s12)*mt^2*s13^2*s23 - 
      denom(1/2*s12)*mt^2*s12*s23*s24 - denom(1/2*s12)*mt^2*s12*s23^2 - denom(
      1/2*s12)*mt^2*s12*s14*s23 - denom(1/2*s12)*mt^2*s12*s13*s24 - 2*denom(1/
      2*s12)*mt^2*s12*s13*s23 - denom(1/2*s12)*mt^2*s12*s13*s14 - denom(1/2*
      s12)*mt^2*s12*s13^2 - denom(1/2*s12)*mt^2*s12^2*s23 - denom(1/2*s12)*
      mt^2*s12^2*s13 + denom(1/2*s12)*mt^2*mh^2*s12*s23 + denom(1/2*s12)*mt^2*
      mh^2*s12*s13 + denom(1/2*s12)*mt^4*s23*s24 - denom(1/2*s12)*mt^4*s23^2
       - 2*denom(1/2*s12)*mt^4*s14*s23 + 2*denom(1/2*s12)*mt^4*s13*s24 - 
      denom(1/2*s12)*mt^4*s13*s14 + denom(1/2*s12)*mt^4*s13^2 + denom(1/2*s12)
      *mt^4*s12*s24 + denom(1/2*s12)*mt^4*s12*s23 + denom(1/2*s12)*mt^4*s12*
      s14 + denom(1/2*s12)*mt^4*s12*s13 + denom(1/2*s12)*mt^4*s12^2 - denom(1/
      2*s12)*mt^4*mh^2*s12 - denom(1/2*s12)*mt^6*s24 + denom(1/2*s12)*mt^6*s23
       + denom(1/2*s12)*mt^6*s14 - denom(1/2*s12)*mt^6*s13 + 1/4*denom(1/4*
      s12^2)*s12*s13*s14*s23^2 - 1/4*denom(1/4*s12^2)*s12*s13^2*s23*s24 - 1/4*
      denom(1/4*s12^2)*s12^2*s13*s23*s24 - 1/4*denom(1/4*s12^2)*s12^2*s13*
      s23^2 - 1/4*denom(1/4*s12^2)*s12^2*s13*s14*s23 - 1/4*denom(1/4*s12^2)*
      s12^2*s13^2*s23 - 1/4*denom(1/4*s12^2)*s12^3*s13*s23 + 1/4*denom(1/4*
      s12^2)*mh^2*s12^2*s13*s23 - 1/4*denom(1/4*s12^2)*mt^2*s12*s14*s23^2 + 1/
      2*denom(1/4*s12^2)*mt^2*s12*s13*s23*s24 - 1/4*denom(1/4*s12^2)*mt^2*s12*
      s13*s23^2 - 1/2*denom(1/4*s12^2)*mt^2*s12*s13*s14*s23 + 1/4*denom(1/4*
      s12^2)*mt^2*s12*s13^2*s24 + 1/4*denom(1/4*s12^2)*mt^2*s12*s13^2*s23 + 1/
      4*denom(1/4*s12^2)*mt^2*s12^2*s23*s24 + 1/4*denom(1/4*s12^2)*mt^2*s12^2*
      s23^2 + 1/4*denom(1/4*s12^2)*mt^2*s12^2*s14*s23 + 1/4*denom(1/4*s12^2)*
      mt^2*s12^2*s13*s24 + 1/2*denom(1/4*s12^2)*mt^2*s12^2*s13*s23 + 1/4*
      denom(1/4*s12^2)*mt^2*s12^2*s13*s14 + 1/4*denom(1/4*s12^2)*mt^2*s12^2*
      s13^2 + 1/4*denom(1/4*s12^2)*mt^2*s12^3*s23 + 1/4*denom(1/4*s12^2)*mt^2*
      s12^3*s13 - 1/4*denom(1/4*s12^2)*mt^2*mh^2*s12^2*s23 - 1/4*denom(1/4*
      s12^2)*mt^2*mh^2*s12^2*s13 - 1/4*denom(1/4*s12^2)*mt^4*s12*s23*s24 + 1/4
      *denom(1/4*s12^2)*mt^4*s12*s23^2 + 1/2*denom(1/4*s12^2)*mt^4*s12*s14*s23
       - 1/2*denom(1/4*s12^2)*mt^4*s12*s13*s24 + 1/4*denom(1/4*s12^2)*mt^4*s12
      *s13*s14 - 1/4*denom(1/4*s12^2)*mt^4*s12*s13^2 - 1/4*denom(1/4*s12^2)*
      mt^4*s12^2*s24 - 1/4*denom(1/4*s12^2)*mt^4*s12^2*s23 - 1/4*denom(1/4*
      s12^2)*mt^4*s12^2*s14 - 1/4*denom(1/4*s12^2)*mt^4*s12^2*s13 - 1/4*denom(
      1/4*s12^2)*mt^4*s12^3 + 1/4*denom(1/4*s12^2)*mt^4*mh^2*s12^2 + 1/4*
      denom(1/4*s12^2)*mt^6*s12*s24 - 1/4*denom(1/4*s12^2)*mt^6*s12*s23 - 1/4*
      denom(1/4*s12^2)*mt^6*s12*s14 + 1/4*denom(1/4*s12^2)*mt^6*s12*s13;
 
 .sort
id KMatrix(13,18) =  2*mt^3*s12*s14 - 2*mt^5*s12 - 2*denom(1/2*s12)*mt*s12*s13
      *s14*s23 + 2*denom(1/2*s12)*mt^3*s12*s14*s23 + 2*denom(1/2*s12)*mt^3*s12
      *s13*s23 + 2*denom(1/2*s12)*mt^3*s12*s13*s14 - 2*denom(1/2*s12)*mt^5*s12
      *s23 - 2*denom(1/2*s12)*mt^5*s12*s14 - 2*denom(1/2*s12)*mt^5*s12*s13 + 2
      *denom(1/2*s12)*mt^7*s12 + 1/2*denom(1/4*s12^2)*mt*s12^2*s13*s14*s23 - 1/
      2*denom(1/4*s12^2)*mt^3*s12^2*s14*s23 - 1/2*denom(1/4*s12^2)*mt^3*s12^2*
      s13*s23 - 1/2*denom(1/4*s12^2)*mt^3*s12^2*s13*s14 + 1/2*denom(1/4*s12^2)
      *mt^5*s12^2*s23 + 1/2*denom(1/4*s12^2)*mt^5*s12^2*s14 + 1/2*denom(1/4*
      s12^2)*mt^5*s12^2*s13 - 1/2*denom(1/4*s12^2)*mt^7*s12^2;
 
 .sort
id KMatrix(13,19) =   - 2*mt^3*s12*s23 + 2*mt^5*s12 + 2*denom(1/2*s12)*mt*s12*
      s13*s23^2 - 2*denom(1/2*s12)*mt^3*s12*s23^2 - 4*denom(1/2*s12)*mt^3*s12*
      s13*s23 + 4*denom(1/2*s12)*mt^5*s12*s23 + 2*denom(1/2*s12)*mt^5*s12*s13
       - 2*denom(1/2*s12)*mt^7*s12 - 1/2*denom(1/4*s12^2)*mt*s12^2*s13*s23^2
       + 1/2*denom(1/4*s12^2)*mt^3*s12^2*s23^2 + denom(1/4*s12^2)*mt^3*s12^2*
      s13*s23 - denom(1/4*s12^2)*mt^5*s12^2*s23 - 1/2*denom(1/4*s12^2)*mt^5*
      s12^2*s13 + 1/2*denom(1/4*s12^2)*mt^7*s12^2;
 
 .sort
id KMatrix(13,20) =   - mt^3*s12*s24 - mt^3*s12*s23 - mt^3*s12*s14 - mt^3*s12*
      s13 - mt^3*s12^2 + mt^3*mh^2*s12 + 1/2*denom(1/2*s12)*mt*s12*s13*s23*s24
       + 1/2*denom(1/2*s12)*mt*s12*s13*s23^2 + 1/2*denom(1/2*s12)*mt*s12*s13*
      s14*s23 + 1/2*denom(1/2*s12)*mt*s12*s13^2*s23 + 1/2*denom(1/2*s12)*mt*
      s12^2*s13*s23 - 1/2*denom(1/2*s12)*mt*mh^2*s12*s13*s23 - 1/2*denom(1/2*
      s12)*mt^3*s12*s23*s24 - 1/2*denom(1/2*s12)*mt^3*s12*s23^2 - denom(1/2*
      s12)*mt^3*s12*s14*s23 - denom(1/2*s12)*mt^3*s12*s13*s24 - 1/2*denom(1/2*
      s12)*mt^3*s12*s13*s14 - 1/2*denom(1/2*s12)*mt^3*s12*s13^2 - 1/2*denom(1/
      2*s12)*mt^3*s12^2*s23 - 1/2*denom(1/2*s12)*mt^3*s12^2*s13 + 1/2*denom(1/
      2*s12)*mt^3*mh^2*s12*s23 + 1/2*denom(1/2*s12)*mt^3*mh^2*s12*s13 + denom(
      1/2*s12)*mt^5*s12*s24 + denom(1/2*s12)*mt^5*s12*s14 + 1/2*denom(1/2*s12)
      *mt^5*s12^2 - 1/2*denom(1/2*s12)*mt^5*mh^2*s12 + 1/4*denom(1/4*s12^2)*mt
      *s12*s13*s14*s23^2 + 1/4*denom(1/4*s12^2)*mt*s12*s13^2*s23*s24 - 1/2*
      denom(1/4*s12^2)*mt*s12*s13^2*s23^2 - 1/4*denom(1/4*s12^2)*mt^3*s12*s14*
      s23^2 - 1/2*denom(1/4*s12^2)*mt^3*s12*s13*s23*s24 + 3/4*denom(1/4*s12^2)
      *mt^3*s12*s13*s23^2 - 1/2*denom(1/4*s12^2)*mt^3*s12*s13*s14*s23 - 1/4*
      denom(1/4*s12^2)*mt^3*s12*s13^2*s24 + 3/4*denom(1/4*s12^2)*mt^3*s12*
      s13^2*s23 + 1/4*denom(1/4*s12^2)*mt^5*s12*s23*s24 - 1/4*denom(1/4*s12^2)
      *mt^5*s12*s23^2 + 1/2*denom(1/4*s12^2)*mt^5*s12*s14*s23 + 1/2*denom(1/4*
      s12^2)*mt^5*s12*s13*s24 - denom(1/4*s12^2)*mt^5*s12*s13*s23 + 1/4*denom(
      1/4*s12^2)*mt^5*s12*s13*s14 - 1/4*denom(1/4*s12^2)*mt^5*s12*s13^2 - 1/4*
      denom(1/4*s12^2)*mt^7*s12*s24 + 1/4*denom(1/4*s12^2)*mt^7*s12*s23 - 1/4*
      denom(1/4*s12^2)*mt^7*s12*s14 + 1/4*denom(1/4*s12^2)*mt^7*s12*s13;
 
 .sort
id KMatrix(13,21) =  1/2*mt*s12*s24^2 + mt*s12*s23*s24 + 1/2*mt*s12*s23^2 + mt
      *s12*s14*s24 + mt*s12*s14*s23 + 1/2*mt*s12*s14^2 + mt*s12*s13*s24 + mt*
      s12*s13*s23 + mt*s12*s13*s14 + 1/2*mt*s12*s13^2 + mt*s12^2*s24 + mt*
      s12^2*s23 + mt*s12^2*s14 + mt*s12^2*s13 + 1/2*mt*s12^3 - mt*mh^2*s12*s24
       - mt*mh^2*s12*s23 - mt*mh^2*s12*s14 - mt*mh^2*s12*s13 - mt*mh^2*s12^2
       + 1/2*mt*mh^4*s12 - mt^3*s12*s24 - mt^3*s12*s23 - mt^3*s12*s14 - mt^3*
      s12*s13 - mt^3*s12^2 + mt^3*mh^2*s12 + 1/2*denom(1/2*s12)*mt*s12*s14*s23
      *s24 + 1/2*denom(1/2*s12)*mt*s12*s14*s23^2 + 1/2*denom(1/2*s12)*mt*s12*
      s14^2*s23 + 1/2*denom(1/2*s12)*mt*s12*s13*s24^2 - 1/2*denom(1/2*s12)*mt*
      s12*s13*s23^2 + 1/2*denom(1/2*s12)*mt*s12*s13*s14*s24 + 1/2*denom(1/2*
      s12)*mt*s12*s13^2*s24 - 1/2*denom(1/2*s12)*mt*s12*s13^2*s23 + 1/2*denom(
      1/2*s12)*mt*s12^2*s14*s23 + 1/2*denom(1/2*s12)*mt*s12^2*s13*s24 - 1/2*
      denom(1/2*s12)*mt*s12^2*s13*s23 - 1/2*denom(1/2*s12)*mt*mh^2*s12*s14*s23
       - 1/2*denom(1/2*s12)*mt*mh^2*s12*s13*s24 + 1/2*denom(1/2*s12)*mt*mh^2*
      s12*s13*s23 - 1/2*denom(1/2*s12)*mt^3*s12*s24^2 - 1/2*denom(1/2*s12)*
      mt^3*s12*s23*s24 - denom(1/2*s12)*mt^3*s12*s14*s24 - denom(1/2*s12)*mt^3
      *s12*s14*s23 - 1/2*denom(1/2*s12)*mt^3*s12*s14^2 - denom(1/2*s12)*mt^3*
      s12*s13*s24 + denom(1/2*s12)*mt^3*s12*s13*s23 - 1/2*denom(1/2*s12)*mt^3*
      s12*s13*s14 - 1/2*denom(1/2*s12)*mt^3*s12^2*s24 - 1/2*denom(1/2*s12)*
      mt^3*s12^2*s14 + 1/2*denom(1/2*s12)*mt^3*mh^2*s12*s24 + 1/2*denom(1/2*
      s12)*mt^3*mh^2*s12*s14 + denom(1/2*s12)*mt^5*s12*s24 + denom(1/2*s12)*
      mt^5*s12*s14 + 1/2*denom(1/2*s12)*mt^5*s12^2 - 1/2*denom(1/2*s12)*mt^5*
      mh^2*s12 + 1/8*denom(1/4*s12^2)*mt*s12*s14^2*s23^2 + 1/4*denom(1/4*s12^2
      )*mt*s12*s13*s14*s23*s24 - 1/4*denom(1/4*s12^2)*mt*s12*s13*s14*s23^2 + 1/
      8*denom(1/4*s12^2)*mt*s12*s13^2*s24^2 - 1/4*denom(1/4*s12^2)*mt*s12*
      s13^2*s23*s24 - 1/4*denom(1/4*s12^2)*mt^3*s12*s14*s23*s24 - 1/4*denom(1/
      4*s12^2)*mt^3*s12*s14^2*s23 - 1/4*denom(1/4*s12^2)*mt^3*s12*s13*s24^2 + 
      1/4*denom(1/4*s12^2)*mt^3*s12*s13*s23*s24 + 1/4*denom(1/4*s12^2)*mt^3*
      s12*s13*s23^2 - 1/4*denom(1/4*s12^2)*mt^3*s12*s13*s14*s24 + 1/4*denom(1/
      4*s12^2)*mt^3*s12*s13*s14*s23 + 1/4*denom(1/4*s12^2)*mt^3*s12*s13^2*s23
       + 1/8*denom(1/4*s12^2)*mt^5*s12*s24^2 - 1/8*denom(1/4*s12^2)*mt^5*s12*
      s23^2 + 1/4*denom(1/4*s12^2)*mt^5*s12*s14*s24 + 1/4*denom(1/4*s12^2)*
      mt^5*s12*s14*s23 + 1/8*denom(1/4*s12^2)*mt^5*s12*s14^2 + 1/4*denom(1/4*
      s12^2)*mt^5*s12*s13*s24 - 3/4*denom(1/4*s12^2)*mt^5*s12*s13*s23 - 1/8*
      denom(1/4*s12^2)*mt^5*s12*s13^2 - 1/4*denom(1/4*s12^2)*mt^7*s12*s24 + 1/
      4*denom(1/4*s12^2)*mt^7*s12*s23 - 1/4*denom(1/4*s12^2)*mt^7*s12*s14 + 1/
      4*denom(1/4*s12^2)*mt^7*s12*s13;
 
 .sort
id KMatrix(13,22) =   - mt^3*s12*s24 - mt^3*s12*s23 - mt^3*s12*s14 - mt^3*s12*
      s13 - mt^3*s12^2 + mt^3*mh^2*s12 + 1/2*denom(1/2*s12)*mt*s12*s13*s23*s24
       + 1/2*denom(1/2*s12)*mt*s12*s13*s23^2 + 1/2*denom(1/2*s12)*mt*s12*s13*
      s14*s23 + 1/2*denom(1/2*s12)*mt*s12*s13^2*s23 + 1/2*denom(1/2*s12)*mt*
      s12^2*s13*s23 - 1/2*denom(1/2*s12)*mt*mh^2*s12*s13*s23 - 1/2*denom(1/2*
      s12)*mt^3*s12*s23*s24 - 1/2*denom(1/2*s12)*mt^3*s12*s23^2 - denom(1/2*
      s12)*mt^3*s12*s14*s23 - denom(1/2*s12)*mt^3*s12*s13*s24 - 1/2*denom(1/2*
      s12)*mt^3*s12*s13*s14 - 1/2*denom(1/2*s12)*mt^3*s12*s13^2 - 1/2*denom(1/
      2*s12)*mt^3*s12^2*s23 - 1/2*denom(1/2*s12)*mt^3*s12^2*s13 + 1/2*denom(1/
      2*s12)*mt^3*mh^2*s12*s23 + 1/2*denom(1/2*s12)*mt^3*mh^2*s12*s13 + denom(
      1/2*s12)*mt^5*s12*s24 + denom(1/2*s12)*mt^5*s12*s14 + 1/2*denom(1/2*s12)
      *mt^5*s12^2 - 1/2*denom(1/2*s12)*mt^5*mh^2*s12 + 1/4*denom(1/4*s12^2)*mt
      *s12*s13*s14*s23^2 + 1/4*denom(1/4*s12^2)*mt*s12*s13^2*s23*s24 - 1/2*
      denom(1/4*s12^2)*mt*s12*s13^2*s23^2 - 1/4*denom(1/4*s12^2)*mt^3*s12*s14*
      s23^2 - 1/2*denom(1/4*s12^2)*mt^3*s12*s13*s23*s24 + 3/4*denom(1/4*s12^2)
      *mt^3*s12*s13*s23^2 - 1/2*denom(1/4*s12^2)*mt^3*s12*s13*s14*s23 - 1/4*
      denom(1/4*s12^2)*mt^3*s12*s13^2*s24 + 3/4*denom(1/4*s12^2)*mt^3*s12*
      s13^2*s23 + 1/4*denom(1/4*s12^2)*mt^5*s12*s23*s24 - 1/4*denom(1/4*s12^2)
      *mt^5*s12*s23^2 + 1/2*denom(1/4*s12^2)*mt^5*s12*s14*s23 + 1/2*denom(1/4*
      s12^2)*mt^5*s12*s13*s24 - denom(1/4*s12^2)*mt^5*s12*s13*s23 + 1/4*denom(
      1/4*s12^2)*mt^5*s12*s13*s14 - 1/4*denom(1/4*s12^2)*mt^5*s12*s13^2 - 1/4*
      denom(1/4*s12^2)*mt^7*s12*s24 + 1/4*denom(1/4*s12^2)*mt^7*s12*s23 - 1/4*
      denom(1/4*s12^2)*mt^7*s12*s14 + 1/4*denom(1/4*s12^2)*mt^7*s12*s13;
 
 .sort
id KMatrix(13,23) =  1/2*mt*s12*s24^2 + mt*s12*s23*s24 + 1/2*mt*s12*s23^2 + mt
      *s12*s14*s24 + mt*s12*s14*s23 + 1/2*mt*s12*s14^2 + mt*s12*s13*s24 + mt*
      s12*s13*s23 + mt*s12*s13*s14 + 1/2*mt*s12*s13^2 + mt*s12^2*s24 + mt*
      s12^2*s23 + mt*s12^2*s14 + mt*s12^2*s13 + 1/2*mt*s12^3 - mt*mh^2*s12*s24
       - mt*mh^2*s12*s23 - mt*mh^2*s12*s14 - mt*mh^2*s12*s13 - mt*mh^2*s12^2
       + 1/2*mt*mh^4*s12 - mt^3*s12*s24 - mt^3*s12*s23 - mt^3*s12*s14 - mt^3*
      s12*s13 - mt^3*s12^2 + mt^3*mh^2*s12 + 1/2*denom(1/2*s12)*mt*s12*s14*s23
      *s24 + 1/2*denom(1/2*s12)*mt*s12*s14*s23^2 + 1/2*denom(1/2*s12)*mt*s12*
      s14^2*s23 + 1/2*denom(1/2*s12)*mt*s12*s13*s24^2 - 1/2*denom(1/2*s12)*mt*
      s12*s13*s23^2 + 1/2*denom(1/2*s12)*mt*s12*s13*s14*s24 + 1/2*denom(1/2*
      s12)*mt*s12*s13^2*s24 - 1/2*denom(1/2*s12)*mt*s12*s13^2*s23 + 1/2*denom(
      1/2*s12)*mt*s12^2*s14*s23 + 1/2*denom(1/2*s12)*mt*s12^2*s13*s24 - 1/2*
      denom(1/2*s12)*mt*s12^2*s13*s23 - 1/2*denom(1/2*s12)*mt*mh^2*s12*s14*s23
       - 1/2*denom(1/2*s12)*mt*mh^2*s12*s13*s24 + 1/2*denom(1/2*s12)*mt*mh^2*
      s12*s13*s23 - 1/2*denom(1/2*s12)*mt^3*s12*s24^2 - 1/2*denom(1/2*s12)*
      mt^3*s12*s23*s24 - denom(1/2*s12)*mt^3*s12*s14*s24 - denom(1/2*s12)*mt^3
      *s12*s14*s23 - 1/2*denom(1/2*s12)*mt^3*s12*s14^2 - denom(1/2*s12)*mt^3*
      s12*s13*s24 + denom(1/2*s12)*mt^3*s12*s13*s23 - 1/2*denom(1/2*s12)*mt^3*
      s12*s13*s14 - 1/2*denom(1/2*s12)*mt^3*s12^2*s24 - 1/2*denom(1/2*s12)*
      mt^3*s12^2*s14 + 1/2*denom(1/2*s12)*mt^3*mh^2*s12*s24 + 1/2*denom(1/2*
      s12)*mt^3*mh^2*s12*s14 + denom(1/2*s12)*mt^5*s12*s24 + denom(1/2*s12)*
      mt^5*s12*s14 + 1/2*denom(1/2*s12)*mt^5*s12^2 - 1/2*denom(1/2*s12)*mt^5*
      mh^2*s12 + 1/8*denom(1/4*s12^2)*mt*s12*s14^2*s23^2 + 1/4*denom(1/4*s12^2
      )*mt*s12*s13*s14*s23*s24 - 1/4*denom(1/4*s12^2)*mt*s12*s13*s14*s23^2 + 1/
      8*denom(1/4*s12^2)*mt*s12*s13^2*s24^2 - 1/4*denom(1/4*s12^2)*mt*s12*
      s13^2*s23*s24 - 1/4*denom(1/4*s12^2)*mt^3*s12*s14*s23*s24 - 1/4*denom(1/
      4*s12^2)*mt^3*s12*s14^2*s23 - 1/4*denom(1/4*s12^2)*mt^3*s12*s13*s24^2 + 
      1/4*denom(1/4*s12^2)*mt^3*s12*s13*s23*s24 + 1/4*denom(1/4*s12^2)*mt^3*
      s12*s13*s23^2 - 1/4*denom(1/4*s12^2)*mt^3*s12*s13*s14*s24 + 1/4*denom(1/
      4*s12^2)*mt^3*s12*s13*s14*s23 + 1/4*denom(1/4*s12^2)*mt^3*s12*s13^2*s23
       + 1/8*denom(1/4*s12^2)*mt^5*s12*s24^2 - 1/8*denom(1/4*s12^2)*mt^5*s12*
      s23^2 + 1/4*denom(1/4*s12^2)*mt^5*s12*s14*s24 + 1/4*denom(1/4*s12^2)*
      mt^5*s12*s14*s23 + 1/8*denom(1/4*s12^2)*mt^5*s12*s14^2 + 1/4*denom(1/4*
      s12^2)*mt^5*s12*s13*s24 - 3/4*denom(1/4*s12^2)*mt^5*s12*s13*s23 - 1/8*
      denom(1/4*s12^2)*mt^5*s12*s13^2 - 1/4*denom(1/4*s12^2)*mt^7*s12*s24 + 1/
      4*denom(1/4*s12^2)*mt^7*s12*s23 - 1/4*denom(1/4*s12^2)*mt^7*s12*s14 + 1/
      4*denom(1/4*s12^2)*mt^7*s12*s13;
 
 .sort
id KMatrix(13,24) =  2*mt^2*s12*s14*s23 - 2*mt^4*s12*s23 - 2*mt^4*s12*s14 + 2*
      mt^6*s12 - 2*denom(1/2*s12)*s12*s13*s14*s23^2 + 2*denom(1/2*s12)*mt^2*
      s12*s14*s23^2 + 2*denom(1/2*s12)*mt^2*s12*s13*s23^2 + 4*denom(1/2*s12)*
      mt^2*s12*s13*s14*s23 - 2*denom(1/2*s12)*mt^4*s12*s23^2 - 4*denom(1/2*s12
      )*mt^4*s12*s14*s23 - 4*denom(1/2*s12)*mt^4*s12*s13*s23 - 2*denom(1/2*s12
      )*mt^4*s12*s13*s14 + 4*denom(1/2*s12)*mt^6*s12*s23 + 2*denom(1/2*s12)*
      mt^6*s12*s14 + 2*denom(1/2*s12)*mt^6*s12*s13 - 2*denom(1/2*s12)*mt^8*s12
       + 1/2*denom(1/4*s12^2)*s12^2*s13*s14*s23^2 - 1/2*denom(1/4*s12^2)*mt^2*
      s12^2*s14*s23^2 - 1/2*denom(1/4*s12^2)*mt^2*s12^2*s13*s23^2 - denom(1/4*
      s12^2)*mt^2*s12^2*s13*s14*s23 + 1/2*denom(1/4*s12^2)*mt^4*s12^2*s23^2 + 
      denom(1/4*s12^2)*mt^4*s12^2*s14*s23 + denom(1/4*s12^2)*mt^4*s12^2*s13*
      s23 + 1/2*denom(1/4*s12^2)*mt^4*s12^2*s13*s14 - denom(1/4*s12^2)*mt^6*
      s12^2*s23 - 1/2*denom(1/4*s12^2)*mt^6*s12^2*s14 - 1/2*denom(1/4*s12^2)*
      mt^6*s12^2*s13 + 1/2*denom(1/4*s12^2)*mt^8*s12^2;
 
 .sort
id KMatrix(13,25) =  mt^2*s14*s23 - mt^2*s13*s24 - mt^2*s12*s24 - mt^2*s12*s23
       - mt^2*s12*s14 - mt^2*s12*s13 - mt^2*s12^2 + mt^2*mh^2*s12 + mt^4*s24
       - mt^4*s23 - mt^4*s14 + mt^4*s13 - denom(1/2*s12)*s13*s14*s23^2 + 
      denom(1/2*s12)*s13^2*s23*s24 + denom(1/2*s12)*s12*s13*s23*s24 + denom(1/
      2*s12)*s12*s13*s23^2 + denom(1/2*s12)*s12*s13*s14*s23 + denom(1/2*s12)*
      s12*s13^2*s23 + denom(1/2*s12)*s12^2*s13*s23 - denom(1/2*s12)*mh^2*s12*
      s13*s23 + denom(1/2*s12)*mt^2*s14*s23^2 - 2*denom(1/2*s12)*mt^2*s13*s23*
      s24 + denom(1/2*s12)*mt^2*s13*s23^2 + 2*denom(1/2*s12)*mt^2*s13*s14*s23
       - denom(1/2*s12)*mt^2*s13^2*s24 - denom(1/2*s12)*mt^2*s13^2*s23 - 
      denom(1/2*s12)*mt^2*s12*s23*s24 - denom(1/2*s12)*mt^2*s12*s23^2 - denom(
      1/2*s12)*mt^2*s12*s14*s23 - denom(1/2*s12)*mt^2*s12*s13*s24 - 2*denom(1/
      2*s12)*mt^2*s12*s13*s23 - denom(1/2*s12)*mt^2*s12*s13*s14 - denom(1/2*
      s12)*mt^2*s12*s13^2 - denom(1/2*s12)*mt^2*s12^2*s23 - denom(1/2*s12)*
      mt^2*s12^2*s13 + denom(1/2*s12)*mt^2*mh^2*s12*s23 + denom(1/2*s12)*mt^2*
      mh^2*s12*s13 + denom(1/2*s12)*mt^4*s23*s24 - denom(1/2*s12)*mt^4*s23^2
       - 2*denom(1/2*s12)*mt^4*s14*s23 + 2*denom(1/2*s12)*mt^4*s13*s24 - 
      denom(1/2*s12)*mt^4*s13*s14 + denom(1/2*s12)*mt^4*s13^2 + denom(1/2*s12)
      *mt^4*s12*s24 + denom(1/2*s12)*mt^4*s12*s23 + denom(1/2*s12)*mt^4*s12*
      s14 + denom(1/2*s12)*mt^4*s12*s13 + denom(1/2*s12)*mt^4*s12^2 - denom(1/
      2*s12)*mt^4*mh^2*s12 - denom(1/2*s12)*mt^6*s24 + denom(1/2*s12)*mt^6*s23
       + denom(1/2*s12)*mt^6*s14 - denom(1/2*s12)*mt^6*s13 + 1/4*denom(1/4*
      s12^2)*s12*s13*s14*s23^2 - 1/4*denom(1/4*s12^2)*s12*s13^2*s23*s24 - 1/4*
      denom(1/4*s12^2)*s12^2*s13*s23*s24 - 1/4*denom(1/4*s12^2)*s12^2*s13*
      s23^2 - 1/4*denom(1/4*s12^2)*s12^2*s13*s14*s23 - 1/4*denom(1/4*s12^2)*
      s12^2*s13^2*s23 - 1/4*denom(1/4*s12^2)*s12^3*s13*s23 + 1/4*denom(1/4*
      s12^2)*mh^2*s12^2*s13*s23 - 1/4*denom(1/4*s12^2)*mt^2*s12*s14*s23^2 + 1/
      2*denom(1/4*s12^2)*mt^2*s12*s13*s23*s24 - 1/4*denom(1/4*s12^2)*mt^2*s12*
      s13*s23^2 - 1/2*denom(1/4*s12^2)*mt^2*s12*s13*s14*s23 + 1/4*denom(1/4*
      s12^2)*mt^2*s12*s13^2*s24 + 1/4*denom(1/4*s12^2)*mt^2*s12*s13^2*s23 + 1/
      4*denom(1/4*s12^2)*mt^2*s12^2*s23*s24 + 1/4*denom(1/4*s12^2)*mt^2*s12^2*
      s23^2 + 1/4*denom(1/4*s12^2)*mt^2*s12^2*s14*s23 + 1/4*denom(1/4*s12^2)*
      mt^2*s12^2*s13*s24 + 1/2*denom(1/4*s12^2)*mt^2*s12^2*s13*s23 + 1/4*
      denom(1/4*s12^2)*mt^2*s12^2*s13*s14 + 1/4*denom(1/4*s12^2)*mt^2*s12^2*
      s13^2 + 1/4*denom(1/4*s12^2)*mt^2*s12^3*s23 + 1/4*denom(1/4*s12^2)*mt^2*
      s12^3*s13 - 1/4*denom(1/4*s12^2)*mt^2*mh^2*s12^2*s23 - 1/4*denom(1/4*
      s12^2)*mt^2*mh^2*s12^2*s13 - 1/4*denom(1/4*s12^2)*mt^4*s12*s23*s24 + 1/4
      *denom(1/4*s12^2)*mt^4*s12*s23^2 + 1/2*denom(1/4*s12^2)*mt^4*s12*s14*s23
       - 1/2*denom(1/4*s12^2)*mt^4*s12*s13*s24 + 1/4*denom(1/4*s12^2)*mt^4*s12
      *s13*s14 - 1/4*denom(1/4*s12^2)*mt^4*s12*s13^2 - 1/4*denom(1/4*s12^2)*
      mt^4*s12^2*s24 - 1/4*denom(1/4*s12^2)*mt^4*s12^2*s23 - 1/4*denom(1/4*
      s12^2)*mt^4*s12^2*s14 - 1/4*denom(1/4*s12^2)*mt^4*s12^2*s13 - 1/4*denom(
      1/4*s12^2)*mt^4*s12^3 + 1/4*denom(1/4*s12^2)*mt^4*mh^2*s12^2 + 1/4*
      denom(1/4*s12^2)*mt^6*s12*s24 - 1/4*denom(1/4*s12^2)*mt^6*s12*s23 - 1/4*
      denom(1/4*s12^2)*mt^6*s12*s14 + 1/4*denom(1/4*s12^2)*mt^6*s12*s13;
 
 .sort
id KMatrix(13,26) =   - 2*mt^4*s12*s14 + 2*mt^6*s12 + 2*denom(1/2*s12)*mt^2*
      s12*s13*s14*s23 - 2*denom(1/2*s12)*mt^4*s12*s14*s23 - 2*denom(1/2*s12)*
      mt^4*s12*s13*s23 - 2*denom(1/2*s12)*mt^4*s12*s13*s14 + 2*denom(1/2*s12)*
      mt^6*s12*s23 + 2*denom(1/2*s12)*mt^6*s12*s14 + 2*denom(1/2*s12)*mt^6*s12
      *s13 - 2*denom(1/2*s12)*mt^8*s12 - 1/2*denom(1/4*s12^2)*s12*s13^2*s14*
      s23^2 + denom(1/4*s12^2)*mt^2*s12*s13*s14*s23^2 + 1/2*denom(1/4*s12^2)*
      mt^2*s12*s13^2*s23^2 + denom(1/4*s12^2)*mt^2*s12*s13^2*s14*s23 - 1/2*
      denom(1/4*s12^2)*mt^4*s12*s14*s23^2 - denom(1/4*s12^2)*mt^4*s12*s13*
      s23^2 - 2*denom(1/4*s12^2)*mt^4*s12*s13*s14*s23 - denom(1/4*s12^2)*mt^4*
      s12*s13^2*s23 - 1/2*denom(1/4*s12^2)*mt^4*s12*s13^2*s14 + 1/2*denom(1/4*
      s12^2)*mt^6*s12*s23^2 + denom(1/4*s12^2)*mt^6*s12*s14*s23 + 2*denom(1/4*
      s12^2)*mt^6*s12*s13*s23 + denom(1/4*s12^2)*mt^6*s12*s13*s14 + 1/2*denom(
      1/4*s12^2)*mt^6*s12*s13^2 - denom(1/4*s12^2)*mt^8*s12*s23 - 1/2*denom(1/
      4*s12^2)*mt^8*s12*s14 - denom(1/4*s12^2)*mt^8*s12*s13 + 1/2*denom(1/4*
      s12^2)*mt^10*s12;
 
 .sort
id KMatrix(13,27) =   - mt^2*s12*s23*s24 - mt^2*s12*s23^2 - mt^2*s12*s14*s23
       - mt^2*s12*s13*s23 - mt^2*s12^2*s23 + mt^2*mh^2*s12*s23 + mt^4*s12*s24
       + 3*mt^4*s12*s23 + mt^4*s12*s14 + mt^4*s12*s13 + mt^4*s12^2 - mt^4*mh^2
      *s12 - 2*mt^6*s12 + 1/2*denom(1/2*s12)*s12*s13*s23^2*s24 + 1/2*denom(1/2
      *s12)*s12*s13*s23^3 + 1/2*denom(1/2*s12)*s12*s13*s14*s23^2 + 1/2*denom(1/
      2*s12)*s12*s13^2*s23^2 + 1/2*denom(1/2*s12)*s12^2*s13*s23^2 - 1/2*denom(
      1/2*s12)*mh^2*s12*s13*s23^2 - 1/2*denom(1/2*s12)*mt^2*s12*s23^2*s24 - 1/
      2*denom(1/2*s12)*mt^2*s12*s23^3 - denom(1/2*s12)*mt^2*s12*s14*s23^2 - 3/
      2*denom(1/2*s12)*mt^2*s12*s13*s23*s24 - 5/2*denom(1/2*s12)*mt^2*s12*s13*
      s23^2 - denom(1/2*s12)*mt^2*s12*s13*s14*s23 - denom(1/2*s12)*mt^2*s12*
      s13^2*s23 - 1/2*denom(1/2*s12)*mt^2*s12^2*s23^2 - denom(1/2*s12)*mt^2*
      s12^2*s13*s23 + 1/2*denom(1/2*s12)*mt^2*mh^2*s12*s23^2 + denom(1/2*s12)*
      mt^2*mh^2*s12*s13*s23 + 3/2*denom(1/2*s12)*mt^4*s12*s23*s24 + 5/2*denom(
      1/2*s12)*mt^4*s12*s23^2 + 2*denom(1/2*s12)*mt^4*s12*s14*s23 + denom(1/2*
      s12)*mt^4*s12*s13*s24 + 4*denom(1/2*s12)*mt^4*s12*s13*s23 + 1/2*denom(1/
      2*s12)*mt^4*s12*s13*s14 + 1/2*denom(1/2*s12)*mt^4*s12*s13^2 + denom(1/2*
      s12)*mt^4*s12^2*s23 + 1/2*denom(1/2*s12)*mt^4*s12^2*s13 - denom(1/2*s12)
      *mt^4*mh^2*s12*s23 - 1/2*denom(1/2*s12)*mt^4*mh^2*s12*s13 - denom(1/2*
      s12)*mt^6*s12*s24 - 4*denom(1/2*s12)*mt^6*s12*s23 - denom(1/2*s12)*mt^6*
      s12*s14 - 2*denom(1/2*s12)*mt^6*s12*s13 - 1/2*denom(1/2*s12)*mt^6*s12^2
       + 1/2*denom(1/2*s12)*mt^6*mh^2*s12 + 2*denom(1/2*s12)*mt^8*s12 + 1/4*
      denom(1/4*s12^2)*s12*s13*s14*s23^3 + 1/4*denom(1/4*s12^2)*s12*s13^2*
      s23^2*s24 - 1/4*denom(1/4*s12^2)*mt^2*s12*s14*s23^3 - 1/2*denom(1/4*
      s12^2)*mt^2*s12*s13*s23^2*s24 - 1/4*denom(1/4*s12^2)*mt^2*s12*s13*s23^3
       - 3/4*denom(1/4*s12^2)*mt^2*s12*s13*s14*s23^2 - 1/2*denom(1/4*s12^2)*
      mt^2*s12*s13^2*s23*s24 - 1/4*denom(1/4*s12^2)*mt^2*s12*s13^2*s23^2 + 1/4
      *denom(1/4*s12^2)*mt^4*s12*s23^2*s24 + 1/4*denom(1/4*s12^2)*mt^4*s12*
      s23^3 + 3/4*denom(1/4*s12^2)*mt^4*s12*s14*s23^2 + denom(1/4*s12^2)*mt^4*
      s12*s13*s23*s24 + 5/4*denom(1/4*s12^2)*mt^4*s12*s13*s23^2 + 3/4*denom(1/
      4*s12^2)*mt^4*s12*s13*s14*s23 + 1/4*denom(1/4*s12^2)*mt^4*s12*s13^2*s24
       + 1/2*denom(1/4*s12^2)*mt^4*s12*s13^2*s23 - 1/2*denom(1/4*s12^2)*mt^6*
      s12*s23*s24 - denom(1/4*s12^2)*mt^6*s12*s23^2 - 3/4*denom(1/4*s12^2)*
      mt^6*s12*s14*s23 - 1/2*denom(1/4*s12^2)*mt^6*s12*s13*s24 - 7/4*denom(1/4
      *s12^2)*mt^6*s12*s13*s23 - 1/4*denom(1/4*s12^2)*mt^6*s12*s13*s14 - 1/4*
      denom(1/4*s12^2)*mt^6*s12*s13^2 + 1/4*denom(1/4*s12^2)*mt^8*s12*s24 + 5/
      4*denom(1/4*s12^2)*mt^8*s12*s23 + 1/4*denom(1/4*s12^2)*mt^8*s12*s14 + 3/
      4*denom(1/4*s12^2)*mt^8*s12*s13 - 1/2*denom(1/4*s12^2)*mt^10*s12;
 
 .sort
id KMatrix(13,28) =  mt^2*s12*s14*s24 + mt^2*s12*s14*s23 + mt^2*s12*s14^2 + 
      mt^2*s12*s13*s14 + mt^2*s12^2*s14 - mt^2*mh^2*s12*s14 - mt^4*s12*s24 - 
      mt^4*s12*s23 - 3*mt^4*s12*s14 - mt^4*s12*s13 - mt^4*s12^2 + mt^4*mh^2*
      s12 + 2*mt^6*s12 - 1/2*denom(1/2*s12)*s12*s13*s14*s23*s24 - 1/2*denom(1/
      2*s12)*s12*s13*s14*s23^2 - 1/2*denom(1/2*s12)*s12*s13*s14^2*s23 - 1/2*
      denom(1/2*s12)*s12*s13^2*s14*s23 - 1/2*denom(1/2*s12)*s12^2*s13*s14*s23
       + 1/2*denom(1/2*s12)*mh^2*s12*s13*s14*s23 + 1/2*denom(1/2*s12)*mt^2*s12
      *s14*s23*s24 + 1/2*denom(1/2*s12)*mt^2*s12*s14*s23^2 + denom(1/2*s12)*
      mt^2*s12*s14^2*s23 + 1/2*denom(1/2*s12)*mt^2*s12*s13*s23*s24 + 1/2*
      denom(1/2*s12)*mt^2*s12*s13*s23^2 + denom(1/2*s12)*mt^2*s12*s13*s14*s24
       + 5/2*denom(1/2*s12)*mt^2*s12*s13*s14*s23 + 1/2*denom(1/2*s12)*mt^2*s12
      *s13*s14^2 + 1/2*denom(1/2*s12)*mt^2*s12*s13^2*s23 + 1/2*denom(1/2*s12)*
      mt^2*s12*s13^2*s14 + 1/2*denom(1/2*s12)*mt^2*s12^2*s14*s23 + 1/2*denom(1/
      2*s12)*mt^2*s12^2*s13*s23 + 1/2*denom(1/2*s12)*mt^2*s12^2*s13*s14 - 1/2*
      denom(1/2*s12)*mt^2*mh^2*s12*s14*s23 - 1/2*denom(1/2*s12)*mt^2*mh^2*s12*
      s13*s23 - 1/2*denom(1/2*s12)*mt^2*mh^2*s12*s13*s14 - 1/2*denom(1/2*s12)*
      mt^4*s12*s23*s24 - 1/2*denom(1/2*s12)*mt^4*s12*s23^2 - denom(1/2*s12)*
      mt^4*s12*s14*s24 - 3*denom(1/2*s12)*mt^4*s12*s14*s23 - denom(1/2*s12)*
      mt^4*s12*s14^2 - denom(1/2*s12)*mt^4*s12*s13*s24 - 2*denom(1/2*s12)*mt^4
      *s12*s13*s23 - 5/2*denom(1/2*s12)*mt^4*s12*s13*s14 - 1/2*denom(1/2*s12)*
      mt^4*s12*s13^2 - 1/2*denom(1/2*s12)*mt^4*s12^2*s23 - 1/2*denom(1/2*s12)*
      mt^4*s12^2*s14 - 1/2*denom(1/2*s12)*mt^4*s12^2*s13 + 1/2*denom(1/2*s12)*
      mt^4*mh^2*s12*s23 + 1/2*denom(1/2*s12)*mt^4*mh^2*s12*s14 + 1/2*denom(1/2
      *s12)*mt^4*mh^2*s12*s13 + denom(1/2*s12)*mt^6*s12*s24 + 2*denom(1/2*s12)
      *mt^6*s12*s23 + 3*denom(1/2*s12)*mt^6*s12*s14 + 2*denom(1/2*s12)*mt^6*
      s12*s13 + 1/2*denom(1/2*s12)*mt^6*s12^2 - 1/2*denom(1/2*s12)*mt^6*mh^2*
      s12 - 2*denom(1/2*s12)*mt^8*s12 - 1/4*denom(1/4*s12^2)*s12*s13*s14^2*
      s23^2 - 1/4*denom(1/4*s12^2)*s12*s13^2*s14*s23*s24 + 1/4*denom(1/4*s12^2
      )*mt^2*s12*s14^2*s23^2 + 1/2*denom(1/4*s12^2)*mt^2*s12*s13*s14*s23*s24
       + 1/2*denom(1/4*s12^2)*mt^2*s12*s13*s14*s23^2 + 1/2*denom(1/4*s12^2)*
      mt^2*s12*s13*s14^2*s23 + 1/4*denom(1/4*s12^2)*mt^2*s12*s13^2*s23*s24 + 1/
      4*denom(1/4*s12^2)*mt^2*s12*s13^2*s14*s24 + 1/4*denom(1/4*s12^2)*mt^2*
      s12*s13^2*s14*s23 - 1/4*denom(1/4*s12^2)*mt^4*s12*s14*s23*s24 - 1/2*
      denom(1/4*s12^2)*mt^4*s12*s14*s23^2 - 1/2*denom(1/4*s12^2)*mt^4*s12*
      s14^2*s23 - 1/2*denom(1/4*s12^2)*mt^4*s12*s13*s23*s24 - 1/4*denom(1/4*
      s12^2)*mt^4*s12*s13*s23^2 - 1/2*denom(1/4*s12^2)*mt^4*s12*s13*s14*s24 - 
      3/2*denom(1/4*s12^2)*mt^4*s12*s13*s14*s23 - 1/4*denom(1/4*s12^2)*mt^4*
      s12*s13*s14^2 - 1/4*denom(1/4*s12^2)*mt^4*s12*s13^2*s24 - 1/4*denom(1/4*
      s12^2)*mt^4*s12*s13^2*s23 - 1/4*denom(1/4*s12^2)*mt^4*s12*s13^2*s14 + 1/
      4*denom(1/4*s12^2)*mt^6*s12*s23*s24 + 1/4*denom(1/4*s12^2)*mt^6*s12*
      s23^2 + 1/4*denom(1/4*s12^2)*mt^6*s12*s14*s24 + 5/4*denom(1/4*s12^2)*
      mt^6*s12*s14*s23 + 1/4*denom(1/4*s12^2)*mt^6*s12*s14^2 + 1/2*denom(1/4*
      s12^2)*mt^6*s12*s13*s24 + denom(1/4*s12^2)*mt^6*s12*s13*s23 + denom(1/4*
      s12^2)*mt^6*s12*s13*s14 + 1/4*denom(1/4*s12^2)*mt^6*s12*s13^2 - 1/4*
      denom(1/4*s12^2)*mt^8*s12*s24 - 3/4*denom(1/4*s12^2)*mt^8*s12*s23 - 3/4*
      denom(1/4*s12^2)*mt^8*s12*s14 - 3/4*denom(1/4*s12^2)*mt^8*s12*s13 + 1/2*
      denom(1/4*s12^2)*mt^10*s12;
 
 .sort
id KMatrix(13,29) =  1/2*s12*s23*s24^2 + s12*s23^2*s24 + 1/2*s12*s23^3 + s12*
      s14*s23*s24 + s12*s14*s23^2 + 1/2*s12*s14^2*s23 + s12*s13*s23*s24 + s12*
      s13*s23^2 + s12*s13*s14*s23 + 1/2*s12*s13^2*s23 + s12^2*s23*s24 + s12^2*
      s23^2 + s12^2*s14*s23 + s12^2*s13*s23 + 1/2*s12^3*s23 - mh^2*s12*s23*s24
       - mh^2*s12*s23^2 - mh^2*s12*s14*s23 - mh^2*s12*s13*s23 - mh^2*s12^2*s23
       + 1/2*mh^4*s12*s23 - 1/2*mt^2*s12*s24^2 - 3*mt^2*s12*s23*s24 - 5/2*mt^2
      *s12*s23^2 - mt^2*s12*s14*s24 - 3*mt^2*s12*s14*s23 - 1/2*mt^2*s12*s14^2
       - mt^2*s12*s13*s24 - 3*mt^2*s12*s13*s23 - mt^2*s12*s13*s14 - 1/2*mt^2*
      s12*s13^2 - mt^2*s12^2*s24 - 3*mt^2*s12^2*s23 - mt^2*s12^2*s14 - mt^2*
      s12^2*s13 - 1/2*mt^2*s12^3 + mt^2*mh^2*s12*s24 + 3*mt^2*mh^2*s12*s23 + 
      mt^2*mh^2*s12*s14 + mt^2*mh^2*s12*s13 + mt^2*mh^2*s12^2 - 1/2*mt^2*mh^4*
      s12 + 2*mt^4*s12*s24 + 4*mt^4*s12*s23 + 2*mt^4*s12*s14 + 2*mt^4*s12*s13
       + 2*mt^4*s12^2 - 2*mt^4*mh^2*s12 - 2*mt^6*s12 + 1/2*denom(1/2*s12)*s12*
      s14*s23^2*s24 + 1/2*denom(1/2*s12)*s12*s14*s23^3 + 1/2*denom(1/2*s12)*
      s12*s14^2*s23^2 + 1/2*denom(1/2*s12)*s12*s13*s23*s24^2 + 1/2*denom(1/2*
      s12)*s12*s13*s23^2*s24 + 1/2*denom(1/2*s12)*s12*s13*s14*s23*s24 + 1/2*
      denom(1/2*s12)*s12*s13*s14*s23^2 + 1/2*denom(1/2*s12)*s12*s13^2*s23*s24
       + 1/2*denom(1/2*s12)*s12^2*s14*s23^2 + 1/2*denom(1/2*s12)*s12^2*s13*s23
      *s24 - 1/2*denom(1/2*s12)*mh^2*s12*s14*s23^2 - 1/2*denom(1/2*s12)*mh^2*
      s12*s13*s23*s24 - 1/2*denom(1/2*s12)*mt^2*s12*s23*s24^2 - denom(1/2*s12)
      *mt^2*s12*s23^2*s24 - 1/2*denom(1/2*s12)*mt^2*s12*s23^3 - 3/2*denom(1/2*
      s12)*mt^2*s12*s14*s23*s24 - 5/2*denom(1/2*s12)*mt^2*s12*s14*s23^2 - 
      denom(1/2*s12)*mt^2*s12*s14^2*s23 - 1/2*denom(1/2*s12)*mt^2*s12*s13*
      s24^2 - 5/2*denom(1/2*s12)*mt^2*s12*s13*s23*s24 - denom(1/2*s12)*mt^2*
      s12*s13*s23^2 - 1/2*denom(1/2*s12)*mt^2*s12*s13*s14*s24 - 3/2*denom(1/2*
      s12)*mt^2*s12*s13*s14*s23 - 1/2*denom(1/2*s12)*mt^2*s12*s13^2*s24 - 1/2*
      denom(1/2*s12)*mt^2*s12*s13^2*s23 - 1/2*denom(1/2*s12)*mt^2*s12^2*s23*
      s24 - 1/2*denom(1/2*s12)*mt^2*s12^2*s23^2 - denom(1/2*s12)*mt^2*s12^2*
      s14*s23 - 1/2*denom(1/2*s12)*mt^2*s12^2*s13*s24 - 1/2*denom(1/2*s12)*
      mt^2*s12^2*s13*s23 + 1/2*denom(1/2*s12)*mt^2*mh^2*s12*s23*s24 + 1/2*
      denom(1/2*s12)*mt^2*mh^2*s12*s23^2 + denom(1/2*s12)*mt^2*mh^2*s12*s14*
      s23 + 1/2*denom(1/2*s12)*mt^2*mh^2*s12*s13*s24 + 1/2*denom(1/2*s12)*mt^2
      *mh^2*s12*s13*s23 + 1/2*denom(1/2*s12)*mt^4*s12*s24^2 + 3*denom(1/2*s12)
      *mt^4*s12*s23*s24 + 5/2*denom(1/2*s12)*mt^4*s12*s23^2 + denom(1/2*s12)*
      mt^4*s12*s14*s24 + 4*denom(1/2*s12)*mt^4*s12*s14*s23 + 1/2*denom(1/2*s12
      )*mt^4*s12*s14^2 + 2*denom(1/2*s12)*mt^4*s12*s13*s24 + 3*denom(1/2*s12)*
      mt^4*s12*s13*s23 + denom(1/2*s12)*mt^4*s12*s13*s14 + 1/2*denom(1/2*s12)*
      mt^4*s12*s13^2 + 1/2*denom(1/2*s12)*mt^4*s12^2*s24 + 3/2*denom(1/2*s12)*
      mt^4*s12^2*s23 + 1/2*denom(1/2*s12)*mt^4*s12^2*s14 + 1/2*denom(1/2*s12)*
      mt^4*s12^2*s13 - 1/2*denom(1/2*s12)*mt^4*mh^2*s12*s24 - 3/2*denom(1/2*
      s12)*mt^4*mh^2*s12*s23 - 1/2*denom(1/2*s12)*mt^4*mh^2*s12*s14 - 1/2*
      denom(1/2*s12)*mt^4*mh^2*s12*s13 - 2*denom(1/2*s12)*mt^6*s12*s24 - 4*
      denom(1/2*s12)*mt^6*s12*s23 - 2*denom(1/2*s12)*mt^6*s12*s14 - 2*denom(1/
      2*s12)*mt^6*s12*s13 - denom(1/2*s12)*mt^6*s12^2 + denom(1/2*s12)*mt^6*
      mh^2*s12 + 2*denom(1/2*s12)*mt^8*s12 + 1/8*denom(1/4*s12^2)*s12*s14^2*
      s23^3 + 1/4*denom(1/4*s12^2)*s12*s13*s14*s23^2*s24 + 1/8*denom(1/4*s12^2
      )*s12*s13^2*s23*s24^2 - 1/4*denom(1/4*s12^2)*mt^2*s12*s14*s23^2*s24 - 1/
      4*denom(1/4*s12^2)*mt^2*s12*s14*s23^3 - 3/8*denom(1/4*s12^2)*mt^2*s12*
      s14^2*s23^2 - 1/4*denom(1/4*s12^2)*mt^2*s12*s13*s23*s24^2 - 1/4*denom(1/
      4*s12^2)*mt^2*s12*s13*s23^2*s24 - 1/2*denom(1/4*s12^2)*mt^2*s12*s13*s14*
      s23*s24 - 1/4*denom(1/4*s12^2)*mt^2*s12*s13*s14*s23^2 - 1/8*denom(1/4*
      s12^2)*mt^2*s12*s13^2*s24^2 - 1/4*denom(1/4*s12^2)*mt^2*s12*s13^2*s23*
      s24 + 1/8*denom(1/4*s12^2)*mt^4*s12*s23*s24^2 + 1/4*denom(1/4*s12^2)*
      mt^4*s12*s23^2*s24 + 1/8*denom(1/4*s12^2)*mt^4*s12*s23^3 + 1/2*denom(1/4
      *s12^2)*mt^4*s12*s14*s23*s24 + denom(1/4*s12^2)*mt^4*s12*s14*s23^2 + 3/8
      *denom(1/4*s12^2)*mt^4*s12*s14^2*s23 + 1/4*denom(1/4*s12^2)*mt^4*s12*s13
      *s24^2 + denom(1/4*s12^2)*mt^4*s12*s13*s23*s24 + 1/4*denom(1/4*s12^2)*
      mt^4*s12*s13*s23^2 + 1/4*denom(1/4*s12^2)*mt^4*s12*s13*s14*s24 + 1/2*
      denom(1/4*s12^2)*mt^4*s12*s13*s14*s23 + 1/4*denom(1/4*s12^2)*mt^4*s12*
      s13^2*s24 + 1/8*denom(1/4*s12^2)*mt^4*s12*s13^2*s23 - 1/8*denom(1/4*
      s12^2)*mt^6*s12*s24^2 - 3/4*denom(1/4*s12^2)*mt^6*s12*s23*s24 - 5/8*
      denom(1/4*s12^2)*mt^6*s12*s23^2 - 1/4*denom(1/4*s12^2)*mt^6*s12*s14*s24
       - 5/4*denom(1/4*s12^2)*mt^6*s12*s14*s23 - 1/8*denom(1/4*s12^2)*mt^6*s12
      *s14^2 - 3/4*denom(1/4*s12^2)*mt^6*s12*s13*s24 - 3/4*denom(1/4*s12^2)*
      mt^6*s12*s13*s23 - 1/4*denom(1/4*s12^2)*mt^6*s12*s13*s14 - 1/8*denom(1/4
      *s12^2)*mt^6*s12*s13^2 + 1/2*denom(1/4*s12^2)*mt^8*s12*s24 + denom(1/4*
      s12^2)*mt^8*s12*s23 + 1/2*denom(1/4*s12^2)*mt^8*s12*s14 + 1/2*denom(1/4*
      s12^2)*mt^8*s12*s13 - 1/2*denom(1/4*s12^2)*mt^10*s12;
 
 .sort
id KMatrix(13,30) =   - 2*mt^4*s12*s14 + 2*mt^6*s12 + 2*denom(1/2*s12)*mt^2*
      s12*s13*s14*s23 - 2*denom(1/2*s12)*mt^4*s12*s14*s23 - 2*denom(1/2*s12)*
      mt^4*s12*s13*s23 - 2*denom(1/2*s12)*mt^4*s12*s13*s14 + 2*denom(1/2*s12)*
      mt^6*s12*s23 + 2*denom(1/2*s12)*mt^6*s12*s14 + 2*denom(1/2*s12)*mt^6*s12
      *s13 - 2*denom(1/2*s12)*mt^8*s12 - 1/2*denom(1/4*s12^2)*s12*s13^2*s14*
      s23^2 + denom(1/4*s12^2)*mt^2*s12*s13*s14*s23^2 + 1/2*denom(1/4*s12^2)*
      mt^2*s12*s13^2*s23^2 + denom(1/4*s12^2)*mt^2*s12*s13^2*s14*s23 - 1/2*
      denom(1/4*s12^2)*mt^4*s12*s14*s23^2 - denom(1/4*s12^2)*mt^4*s12*s13*
      s23^2 - 2*denom(1/4*s12^2)*mt^4*s12*s13*s14*s23 - denom(1/4*s12^2)*mt^4*
      s12*s13^2*s23 - 1/2*denom(1/4*s12^2)*mt^4*s12*s13^2*s14 + 1/2*denom(1/4*
      s12^2)*mt^6*s12*s23^2 + denom(1/4*s12^2)*mt^6*s12*s14*s23 + 2*denom(1/4*
      s12^2)*mt^6*s12*s13*s23 + denom(1/4*s12^2)*mt^6*s12*s13*s14 + 1/2*denom(
      1/4*s12^2)*mt^6*s12*s13^2 - denom(1/4*s12^2)*mt^8*s12*s23 - 1/2*denom(1/
      4*s12^2)*mt^8*s12*s14 - denom(1/4*s12^2)*mt^8*s12*s13 + 1/2*denom(1/4*
      s12^2)*mt^10*s12;
 
 .sort
id KMatrix(13,31) =   - mt^2*s12*s23*s24 - mt^2*s12*s23^2 - mt^2*s12*s14*s23
       - mt^2*s12*s13*s23 - mt^2*s12^2*s23 + mt^2*mh^2*s12*s23 + mt^4*s12*s24
       + 3*mt^4*s12*s23 + mt^4*s12*s14 + mt^4*s12*s13 + mt^4*s12^2 - mt^4*mh^2
      *s12 - 2*mt^6*s12 + 1/2*denom(1/2*s12)*s12*s13*s23^2*s24 + 1/2*denom(1/2
      *s12)*s12*s13*s23^3 + 1/2*denom(1/2*s12)*s12*s13*s14*s23^2 + 1/2*denom(1/
      2*s12)*s12*s13^2*s23^2 + 1/2*denom(1/2*s12)*s12^2*s13*s23^2 - 1/2*denom(
      1/2*s12)*mh^2*s12*s13*s23^2 - 1/2*denom(1/2*s12)*mt^2*s12*s23^2*s24 - 1/
      2*denom(1/2*s12)*mt^2*s12*s23^3 - denom(1/2*s12)*mt^2*s12*s14*s23^2 - 3/
      2*denom(1/2*s12)*mt^2*s12*s13*s23*s24 - 5/2*denom(1/2*s12)*mt^2*s12*s13*
      s23^2 - denom(1/2*s12)*mt^2*s12*s13*s14*s23 - denom(1/2*s12)*mt^2*s12*
      s13^2*s23 - 1/2*denom(1/2*s12)*mt^2*s12^2*s23^2 - denom(1/2*s12)*mt^2*
      s12^2*s13*s23 + 1/2*denom(1/2*s12)*mt^2*mh^2*s12*s23^2 + denom(1/2*s12)*
      mt^2*mh^2*s12*s13*s23 + 3/2*denom(1/2*s12)*mt^4*s12*s23*s24 + 5/2*denom(
      1/2*s12)*mt^4*s12*s23^2 + 2*denom(1/2*s12)*mt^4*s12*s14*s23 + denom(1/2*
      s12)*mt^4*s12*s13*s24 + 4*denom(1/2*s12)*mt^4*s12*s13*s23 + 1/2*denom(1/
      2*s12)*mt^4*s12*s13*s14 + 1/2*denom(1/2*s12)*mt^4*s12*s13^2 + denom(1/2*
      s12)*mt^4*s12^2*s23 + 1/2*denom(1/2*s12)*mt^4*s12^2*s13 - denom(1/2*s12)
      *mt^4*mh^2*s12*s23 - 1/2*denom(1/2*s12)*mt^4*mh^2*s12*s13 - denom(1/2*
      s12)*mt^6*s12*s24 - 4*denom(1/2*s12)*mt^6*s12*s23 - denom(1/2*s12)*mt^6*
      s12*s14 - 2*denom(1/2*s12)*mt^6*s12*s13 - 1/2*denom(1/2*s12)*mt^6*s12^2
       + 1/2*denom(1/2*s12)*mt^6*mh^2*s12 + 2*denom(1/2*s12)*mt^8*s12 + 1/4*
      denom(1/4*s12^2)*s12*s13*s14*s23^3 + 1/4*denom(1/4*s12^2)*s12*s13^2*
      s23^2*s24 - 1/4*denom(1/4*s12^2)*mt^2*s12*s14*s23^3 - 1/2*denom(1/4*
      s12^2)*mt^2*s12*s13*s23^2*s24 - 1/4*denom(1/4*s12^2)*mt^2*s12*s13*s23^3
       - 3/4*denom(1/4*s12^2)*mt^2*s12*s13*s14*s23^2 - 1/2*denom(1/4*s12^2)*
      mt^2*s12*s13^2*s23*s24 - 1/4*denom(1/4*s12^2)*mt^2*s12*s13^2*s23^2 + 1/4
      *denom(1/4*s12^2)*mt^4*s12*s23^2*s24 + 1/4*denom(1/4*s12^2)*mt^4*s12*
      s23^3 + 3/4*denom(1/4*s12^2)*mt^4*s12*s14*s23^2 + denom(1/4*s12^2)*mt^4*
      s12*s13*s23*s24 + 5/4*denom(1/4*s12^2)*mt^4*s12*s13*s23^2 + 3/4*denom(1/
      4*s12^2)*mt^4*s12*s13*s14*s23 + 1/4*denom(1/4*s12^2)*mt^4*s12*s13^2*s24
       + 1/2*denom(1/4*s12^2)*mt^4*s12*s13^2*s23 - 1/2*denom(1/4*s12^2)*mt^6*
      s12*s23*s24 - denom(1/4*s12^2)*mt^6*s12*s23^2 - 3/4*denom(1/4*s12^2)*
      mt^6*s12*s14*s23 - 1/2*denom(1/4*s12^2)*mt^6*s12*s13*s24 - 7/4*denom(1/4
      *s12^2)*mt^6*s12*s13*s23 - 1/4*denom(1/4*s12^2)*mt^6*s12*s13*s14 - 1/4*
      denom(1/4*s12^2)*mt^6*s12*s13^2 + 1/4*denom(1/4*s12^2)*mt^8*s12*s24 + 5/
      4*denom(1/4*s12^2)*mt^8*s12*s23 + 1/4*denom(1/4*s12^2)*mt^8*s12*s14 + 3/
      4*denom(1/4*s12^2)*mt^8*s12*s13 - 1/2*denom(1/4*s12^2)*mt^10*s12;
 
 .sort
id KMatrix(13,32) =  mt^2*s12*s14*s24 + mt^2*s12*s14*s23 + mt^2*s12*s14^2 + 
      mt^2*s12*s13*s14 + mt^2*s12^2*s14 - mt^2*mh^2*s12*s14 - mt^4*s12*s24 - 
      mt^4*s12*s23 - 3*mt^4*s12*s14 - mt^4*s12*s13 - mt^4*s12^2 + mt^4*mh^2*
      s12 + 2*mt^6*s12 - 1/2*denom(1/2*s12)*s12*s13*s14*s23*s24 - 1/2*denom(1/
      2*s12)*s12*s13*s14*s23^2 - 1/2*denom(1/2*s12)*s12*s13*s14^2*s23 - 1/2*
      denom(1/2*s12)*s12*s13^2*s14*s23 - 1/2*denom(1/2*s12)*s12^2*s13*s14*s23
       + 1/2*denom(1/2*s12)*mh^2*s12*s13*s14*s23 + 1/2*denom(1/2*s12)*mt^2*s12
      *s14*s23*s24 + 1/2*denom(1/2*s12)*mt^2*s12*s14*s23^2 + denom(1/2*s12)*
      mt^2*s12*s14^2*s23 + 1/2*denom(1/2*s12)*mt^2*s12*s13*s23*s24 + 1/2*
      denom(1/2*s12)*mt^2*s12*s13*s23^2 + denom(1/2*s12)*mt^2*s12*s13*s14*s24
       + 5/2*denom(1/2*s12)*mt^2*s12*s13*s14*s23 + 1/2*denom(1/2*s12)*mt^2*s12
      *s13*s14^2 + 1/2*denom(1/2*s12)*mt^2*s12*s13^2*s23 + 1/2*denom(1/2*s12)*
      mt^2*s12*s13^2*s14 + 1/2*denom(1/2*s12)*mt^2*s12^2*s14*s23 + 1/2*denom(1/
      2*s12)*mt^2*s12^2*s13*s23 + 1/2*denom(1/2*s12)*mt^2*s12^2*s13*s14 - 1/2*
      denom(1/2*s12)*mt^2*mh^2*s12*s14*s23 - 1/2*denom(1/2*s12)*mt^2*mh^2*s12*
      s13*s23 - 1/2*denom(1/2*s12)*mt^2*mh^2*s12*s13*s14 - 1/2*denom(1/2*s12)*
      mt^4*s12*s23*s24 - 1/2*denom(1/2*s12)*mt^4*s12*s23^2 - denom(1/2*s12)*
      mt^4*s12*s14*s24 - 3*denom(1/2*s12)*mt^4*s12*s14*s23 - denom(1/2*s12)*
      mt^4*s12*s14^2 - denom(1/2*s12)*mt^4*s12*s13*s24 - 2*denom(1/2*s12)*mt^4
      *s12*s13*s23 - 5/2*denom(1/2*s12)*mt^4*s12*s13*s14 - 1/2*denom(1/2*s12)*
      mt^4*s12*s13^2 - 1/2*denom(1/2*s12)*mt^4*s12^2*s23 - 1/2*denom(1/2*s12)*
      mt^4*s12^2*s14 - 1/2*denom(1/2*s12)*mt^4*s12^2*s13 + 1/2*denom(1/2*s12)*
      mt^4*mh^2*s12*s23 + 1/2*denom(1/2*s12)*mt^4*mh^2*s12*s14 + 1/2*denom(1/2
      *s12)*mt^4*mh^2*s12*s13 + denom(1/2*s12)*mt^6*s12*s24 + 2*denom(1/2*s12)
      *mt^6*s12*s23 + 3*denom(1/2*s12)*mt^6*s12*s14 + 2*denom(1/2*s12)*mt^6*
      s12*s13 + 1/2*denom(1/2*s12)*mt^6*s12^2 - 1/2*denom(1/2*s12)*mt^6*mh^2*
      s12 - 2*denom(1/2*s12)*mt^8*s12 - 1/4*denom(1/4*s12^2)*s12*s13*s14^2*
      s23^2 - 1/4*denom(1/4*s12^2)*s12*s13^2*s14*s23*s24 + 1/4*denom(1/4*s12^2
      )*mt^2*s12*s14^2*s23^2 + 1/2*denom(1/4*s12^2)*mt^2*s12*s13*s14*s23*s24
       + 1/2*denom(1/4*s12^2)*mt^2*s12*s13*s14*s23^2 + 1/2*denom(1/4*s12^2)*
      mt^2*s12*s13*s14^2*s23 + 1/4*denom(1/4*s12^2)*mt^2*s12*s13^2*s23*s24 + 1/
      4*denom(1/4*s12^2)*mt^2*s12*s13^2*s14*s24 + 1/4*denom(1/4*s12^2)*mt^2*
      s12*s13^2*s14*s23 - 1/4*denom(1/4*s12^2)*mt^4*s12*s14*s23*s24 - 1/2*
      denom(1/4*s12^2)*mt^4*s12*s14*s23^2 - 1/2*denom(1/4*s12^2)*mt^4*s12*
      s14^2*s23 - 1/2*denom(1/4*s12^2)*mt^4*s12*s13*s23*s24 - 1/4*denom(1/4*
      s12^2)*mt^4*s12*s13*s23^2 - 1/2*denom(1/4*s12^2)*mt^4*s12*s13*s14*s24 - 
      3/2*denom(1/4*s12^2)*mt^4*s12*s13*s14*s23 - 1/4*denom(1/4*s12^2)*mt^4*
      s12*s13*s14^2 - 1/4*denom(1/4*s12^2)*mt^4*s12*s13^2*s24 - 1/4*denom(1/4*
      s12^2)*mt^4*s12*s13^2*s23 - 1/4*denom(1/4*s12^2)*mt^4*s12*s13^2*s14 + 1/
      4*denom(1/4*s12^2)*mt^6*s12*s23*s24 + 1/4*denom(1/4*s12^2)*mt^6*s12*
      s23^2 + 1/4*denom(1/4*s12^2)*mt^6*s12*s14*s24 + 5/4*denom(1/4*s12^2)*
      mt^6*s12*s14*s23 + 1/4*denom(1/4*s12^2)*mt^6*s12*s14^2 + 1/2*denom(1/4*
      s12^2)*mt^6*s12*s13*s24 + denom(1/4*s12^2)*mt^6*s12*s13*s23 + denom(1/4*
      s12^2)*mt^6*s12*s13*s14 + 1/4*denom(1/4*s12^2)*mt^6*s12*s13^2 - 1/4*
      denom(1/4*s12^2)*mt^8*s12*s24 - 3/4*denom(1/4*s12^2)*mt^8*s12*s23 - 3/4*
      denom(1/4*s12^2)*mt^8*s12*s14 - 3/4*denom(1/4*s12^2)*mt^8*s12*s13 + 1/2*
      denom(1/4*s12^2)*mt^10*s12;
 
 .sort
id KMatrix(13,33) =  1/2*s12*s23*s24^2 + s12*s23^2*s24 + 1/2*s12*s23^3 + s12*
      s14*s23*s24 + s12*s14*s23^2 + 1/2*s12*s14^2*s23 + s12*s13*s23*s24 + s12*
      s13*s23^2 + s12*s13*s14*s23 + 1/2*s12*s13^2*s23 + s12^2*s23*s24 + s12^2*
      s23^2 + s12^2*s14*s23 + s12^2*s13*s23 + 1/2*s12^3*s23 - mh^2*s12*s23*s24
       - mh^2*s12*s23^2 - mh^2*s12*s14*s23 - mh^2*s12*s13*s23 - mh^2*s12^2*s23
       + 1/2*mh^4*s12*s23 - 1/2*mt^2*s12*s24^2 - 3*mt^2*s12*s23*s24 - 5/2*mt^2
      *s12*s23^2 - mt^2*s12*s14*s24 - 3*mt^2*s12*s14*s23 - 1/2*mt^2*s12*s14^2
       - mt^2*s12*s13*s24 - 3*mt^2*s12*s13*s23 - mt^2*s12*s13*s14 - 1/2*mt^2*
      s12*s13^2 - mt^2*s12^2*s24 - 3*mt^2*s12^2*s23 - mt^2*s12^2*s14 - mt^2*
      s12^2*s13 - 1/2*mt^2*s12^3 + mt^2*mh^2*s12*s24 + 3*mt^2*mh^2*s12*s23 + 
      mt^2*mh^2*s12*s14 + mt^2*mh^2*s12*s13 + mt^2*mh^2*s12^2 - 1/2*mt^2*mh^4*
      s12 + 2*mt^4*s12*s24 + 4*mt^4*s12*s23 + 2*mt^4*s12*s14 + 2*mt^4*s12*s13
       + 2*mt^4*s12^2 - 2*mt^4*mh^2*s12 - 2*mt^6*s12 + 1/2*denom(1/2*s12)*s12*
      s14*s23^2*s24 + 1/2*denom(1/2*s12)*s12*s14*s23^3 + 1/2*denom(1/2*s12)*
      s12*s14^2*s23^2 + 1/2*denom(1/2*s12)*s12*s13*s23*s24^2 + 1/2*denom(1/2*
      s12)*s12*s13*s23^2*s24 + 1/2*denom(1/2*s12)*s12*s13*s14*s23*s24 + 1/2*
      denom(1/2*s12)*s12*s13*s14*s23^2 + 1/2*denom(1/2*s12)*s12*s13^2*s23*s24
       + 1/2*denom(1/2*s12)*s12^2*s14*s23^2 + 1/2*denom(1/2*s12)*s12^2*s13*s23
      *s24 - 1/2*denom(1/2*s12)*mh^2*s12*s14*s23^2 - 1/2*denom(1/2*s12)*mh^2*
      s12*s13*s23*s24 - 1/2*denom(1/2*s12)*mt^2*s12*s23*s24^2 - denom(1/2*s12)
      *mt^2*s12*s23^2*s24 - 1/2*denom(1/2*s12)*mt^2*s12*s23^3 - 3/2*denom(1/2*
      s12)*mt^2*s12*s14*s23*s24 - 5/2*denom(1/2*s12)*mt^2*s12*s14*s23^2 - 
      denom(1/2*s12)*mt^2*s12*s14^2*s23 - 1/2*denom(1/2*s12)*mt^2*s12*s13*
      s24^2 - 5/2*denom(1/2*s12)*mt^2*s12*s13*s23*s24 - denom(1/2*s12)*mt^2*
      s12*s13*s23^2 - 1/2*denom(1/2*s12)*mt^2*s12*s13*s14*s24 - 3/2*denom(1/2*
      s12)*mt^2*s12*s13*s14*s23 - 1/2*denom(1/2*s12)*mt^2*s12*s13^2*s24 - 1/2*
      denom(1/2*s12)*mt^2*s12*s13^2*s23 - 1/2*denom(1/2*s12)*mt^2*s12^2*s23*
      s24 - 1/2*denom(1/2*s12)*mt^2*s12^2*s23^2 - denom(1/2*s12)*mt^2*s12^2*
      s14*s23 - 1/2*denom(1/2*s12)*mt^2*s12^2*s13*s24 - 1/2*denom(1/2*s12)*
      mt^2*s12^2*s13*s23 + 1/2*denom(1/2*s12)*mt^2*mh^2*s12*s23*s24 + 1/2*
      denom(1/2*s12)*mt^2*mh^2*s12*s23^2 + denom(1/2*s12)*mt^2*mh^2*s12*s14*
      s23 + 1/2*denom(1/2*s12)*mt^2*mh^2*s12*s13*s24 + 1/2*denom(1/2*s12)*mt^2
      *mh^2*s12*s13*s23 + 1/2*denom(1/2*s12)*mt^4*s12*s24^2 + 3*denom(1/2*s12)
      *mt^4*s12*s23*s24 + 5/2*denom(1/2*s12)*mt^4*s12*s23^2 + denom(1/2*s12)*
      mt^4*s12*s14*s24 + 4*denom(1/2*s12)*mt^4*s12*s14*s23 + 1/2*denom(1/2*s12
      )*mt^4*s12*s14^2 + 2*denom(1/2*s12)*mt^4*s12*s13*s24 + 3*denom(1/2*s12)*
      mt^4*s12*s13*s23 + denom(1/2*s12)*mt^4*s12*s13*s14 + 1/2*denom(1/2*s12)*
      mt^4*s12*s13^2 + 1/2*denom(1/2*s12)*mt^4*s12^2*s24 + 3/2*denom(1/2*s12)*
      mt^4*s12^2*s23 + 1/2*denom(1/2*s12)*mt^4*s12^2*s14 + 1/2*denom(1/2*s12)*
      mt^4*s12^2*s13 - 1/2*denom(1/2*s12)*mt^4*mh^2*s12*s24 - 3/2*denom(1/2*
      s12)*mt^4*mh^2*s12*s23 - 1/2*denom(1/2*s12)*mt^4*mh^2*s12*s14 - 1/2*
      denom(1/2*s12)*mt^4*mh^2*s12*s13 - 2*denom(1/2*s12)*mt^6*s12*s24 - 4*
      denom(1/2*s12)*mt^6*s12*s23 - 2*denom(1/2*s12)*mt^6*s12*s14 - 2*denom(1/
      2*s12)*mt^6*s12*s13 - denom(1/2*s12)*mt^6*s12^2 + denom(1/2*s12)*mt^6*
      mh^2*s12 + 2*denom(1/2*s12)*mt^8*s12 + 1/8*denom(1/4*s12^2)*s12*s14^2*
      s23^3 + 1/4*denom(1/4*s12^2)*s12*s13*s14*s23^2*s24 + 1/8*denom(1/4*s12^2
      )*s12*s13^2*s23*s24^2 - 1/4*denom(1/4*s12^2)*mt^2*s12*s14*s23^2*s24 - 1/
      4*denom(1/4*s12^2)*mt^2*s12*s14*s23^3 - 3/8*denom(1/4*s12^2)*mt^2*s12*
      s14^2*s23^2 - 1/4*denom(1/4*s12^2)*mt^2*s12*s13*s23*s24^2 - 1/4*denom(1/
      4*s12^2)*mt^2*s12*s13*s23^2*s24 - 1/2*denom(1/4*s12^2)*mt^2*s12*s13*s14*
      s23*s24 - 1/4*denom(1/4*s12^2)*mt^2*s12*s13*s14*s23^2 - 1/8*denom(1/4*
      s12^2)*mt^2*s12*s13^2*s24^2 - 1/4*denom(1/4*s12^2)*mt^2*s12*s13^2*s23*
      s24 + 1/8*denom(1/4*s12^2)*mt^4*s12*s23*s24^2 + 1/4*denom(1/4*s12^2)*
      mt^4*s12*s23^2*s24 + 1/8*denom(1/4*s12^2)*mt^4*s12*s23^3 + 1/2*denom(1/4
      *s12^2)*mt^4*s12*s14*s23*s24 + denom(1/4*s12^2)*mt^4*s12*s14*s23^2 + 3/8
      *denom(1/4*s12^2)*mt^4*s12*s14^2*s23 + 1/4*denom(1/4*s12^2)*mt^4*s12*s13
      *s24^2 + denom(1/4*s12^2)*mt^4*s12*s13*s23*s24 + 1/4*denom(1/4*s12^2)*
      mt^4*s12*s13*s23^2 + 1/4*denom(1/4*s12^2)*mt^4*s12*s13*s14*s24 + 1/2*
      denom(1/4*s12^2)*mt^4*s12*s13*s14*s23 + 1/4*denom(1/4*s12^2)*mt^4*s12*
      s13^2*s24 + 1/8*denom(1/4*s12^2)*mt^4*s12*s13^2*s23 - 1/8*denom(1/4*
      s12^2)*mt^6*s12*s24^2 - 3/4*denom(1/4*s12^2)*mt^6*s12*s23*s24 - 5/8*
      denom(1/4*s12^2)*mt^6*s12*s23^2 - 1/4*denom(1/4*s12^2)*mt^6*s12*s14*s24
       - 5/4*denom(1/4*s12^2)*mt^6*s12*s14*s23 - 1/8*denom(1/4*s12^2)*mt^6*s12
      *s14^2 - 3/4*denom(1/4*s12^2)*mt^6*s12*s13*s24 - 3/4*denom(1/4*s12^2)*
      mt^6*s12*s13*s23 - 1/4*denom(1/4*s12^2)*mt^6*s12*s13*s14 - 1/8*denom(1/4
      *s12^2)*mt^6*s12*s13^2 + 1/2*denom(1/4*s12^2)*mt^8*s12*s24 + denom(1/4*
      s12^2)*mt^8*s12*s23 + 1/2*denom(1/4*s12^2)*mt^8*s12*s14 + 1/2*denom(1/4*
      s12^2)*mt^8*s12*s13 - 1/2*denom(1/4*s12^2)*mt^10*s12;
 
 .sort
id KMatrix(13,34) =  2*mt^3*s12*s14 - 2*mt^5*s12 - 2*denom(1/2*s12)*mt*s12*s13
      *s14*s23 + 2*denom(1/2*s12)*mt^3*s12*s14*s23 + 2*denom(1/2*s12)*mt^3*s12
      *s13*s23 + 2*denom(1/2*s12)*mt^3*s12*s13*s14 - 2*denom(1/2*s12)*mt^5*s12
      *s23 - 2*denom(1/2*s12)*mt^5*s12*s14 - 2*denom(1/2*s12)*mt^5*s12*s13 + 2
      *denom(1/2*s12)*mt^7*s12 + 1/2*denom(1/4*s12^2)*mt*s12^2*s13*s14*s23 - 1/
      2*denom(1/4*s12^2)*mt^3*s12^2*s14*s23 - 1/2*denom(1/4*s12^2)*mt^3*s12^2*
      s13*s23 - 1/2*denom(1/4*s12^2)*mt^3*s12^2*s13*s14 + 1/2*denom(1/4*s12^2)
      *mt^5*s12^2*s23 + 1/2*denom(1/4*s12^2)*mt^5*s12^2*s14 + 1/2*denom(1/4*
      s12^2)*mt^5*s12^2*s13 - 1/2*denom(1/4*s12^2)*mt^7*s12^2;
 
 .sort
id KMatrix(13,35) =   - 2*mt^3*s12*s23 + 2*mt^5*s12 + 2*denom(1/2*s12)*mt*s12*
      s13*s23^2 - 2*denom(1/2*s12)*mt^3*s12*s23^2 - 4*denom(1/2*s12)*mt^3*s12*
      s13*s23 + 4*denom(1/2*s12)*mt^5*s12*s23 + 2*denom(1/2*s12)*mt^5*s12*s13
       - 2*denom(1/2*s12)*mt^7*s12 - 1/2*denom(1/4*s12^2)*mt*s12^2*s13*s23^2
       + 1/2*denom(1/4*s12^2)*mt^3*s12^2*s23^2 + denom(1/4*s12^2)*mt^3*s12^2*
      s13*s23 - denom(1/4*s12^2)*mt^5*s12^2*s23 - 1/2*denom(1/4*s12^2)*mt^5*
      s12^2*s13 + 1/2*denom(1/4*s12^2)*mt^7*s12^2;
 
 .sort
id KMatrix(13,36) =  2*mt^2*s12*s14*s23 - 2*mt^4*s12*s23 - 2*mt^4*s12*s14 + 2*
      mt^6*s12 - 2*denom(1/2*s12)*s12*s13*s14*s23^2 + 2*denom(1/2*s12)*mt^2*
      s12*s14*s23^2 + 2*denom(1/2*s12)*mt^2*s12*s13*s23^2 + 4*denom(1/2*s12)*
      mt^2*s12*s13*s14*s23 - 2*denom(1/2*s12)*mt^4*s12*s23^2 - 4*denom(1/2*s12
      )*mt^4*s12*s14*s23 - 4*denom(1/2*s12)*mt^4*s12*s13*s23 - 2*denom(1/2*s12
      )*mt^4*s12*s13*s14 + 4*denom(1/2*s12)*mt^6*s12*s23 + 2*denom(1/2*s12)*
      mt^6*s12*s14 + 2*denom(1/2*s12)*mt^6*s12*s13 - 2*denom(1/2*s12)*mt^8*s12
       + 1/2*denom(1/4*s12^2)*s12^2*s13*s14*s23^2 - 1/2*denom(1/4*s12^2)*mt^2*
      s12^2*s14*s23^2 - 1/2*denom(1/4*s12^2)*mt^2*s12^2*s13*s23^2 - denom(1/4*
      s12^2)*mt^2*s12^2*s13*s14*s23 + 1/2*denom(1/4*s12^2)*mt^4*s12^2*s23^2 + 
      denom(1/4*s12^2)*mt^4*s12^2*s14*s23 + denom(1/4*s12^2)*mt^4*s12^2*s13*
      s23 + 1/2*denom(1/4*s12^2)*mt^4*s12^2*s13*s14 - denom(1/4*s12^2)*mt^6*
      s12^2*s23 - 1/2*denom(1/4*s12^2)*mt^6*s12^2*s14 - 1/2*denom(1/4*s12^2)*
      mt^6*s12^2*s13 + 1/2*denom(1/4*s12^2)*mt^8*s12^2;
 
 .sort
id KMatrix(14,1) =   - 1/2*mt^2*s14*s23*s24 - 1/2*mt^2*s14*s23^2 - 1/2*mt^2*
      s14^2*s23 + 1/2*mt^2*s13*s24^2 + 1/2*mt^2*s13*s23*s24 + 1/2*mt^2*s13*s14
      *s24 - 1/2*mt^2*s13*s14*s23 + 1/2*mt^2*s13^2*s24 + 1/2*mt^2*s12*s24^2 + 
      mt^2*s12*s23*s24 + 1/2*mt^2*s12*s23^2 + mt^2*s12*s14*s24 + 1/2*mt^2*s12*
      s14*s23 + 1/2*mt^2*s12*s14^2 + 3/2*mt^2*s12*s13*s24 + mt^2*s12*s13*s23
       + mt^2*s12*s13*s14 + 1/2*mt^2*s12*s13^2 + mt^2*s12^2*s24 + mt^2*s12^2*
      s23 + mt^2*s12^2*s14 + mt^2*s12^2*s13 + 1/2*mt^2*s12^3 + 1/2*mt^2*mh^2*
      s14*s23 - 1/2*mt^2*mh^2*s13*s24 - mt^2*mh^2*s12*s24 - mt^2*mh^2*s12*s23
       - mt^2*mh^2*s12*s14 - mt^2*mh^2*s12*s13 - mt^2*mh^2*s12^2 + 1/2*mt^2*
      mh^4*s12 - 1/2*mt^4*s24^2 + 1/2*mt^4*s23^2 + 2*mt^4*s14*s23 + 1/2*mt^4*
      s14^2 - 2*mt^4*s13*s24 - 1/2*mt^4*s13^2 - 3/2*mt^4*s12*s24 - 1/2*mt^4*
      s12*s23 - 1/2*mt^4*s12*s14 - 3/2*mt^4*s12*s13 - mt^4*s12^2 + 1/2*mt^4*
      mh^2*s24 - 1/2*mt^4*mh^2*s23 - 1/2*mt^4*mh^2*s14 + 1/2*mt^4*mh^2*s13 + 
      mt^4*mh^2*s12 + mt^6*s24 - mt^6*s23 - mt^6*s14 + mt^6*s13 + 1/4*denom(1/
      2*s12)*s13*s14*s23^2*s24 + 1/4*denom(1/2*s12)*s13*s14*s23^3 + 1/4*denom(
      1/2*s12)*s13*s14^2*s23^2 - 1/4*denom(1/2*s12)*s13^2*s23*s24^2 - 1/4*
      denom(1/2*s12)*s13^2*s23^2*s24 - 1/4*denom(1/2*s12)*s13^2*s14*s23*s24 + 
      1/4*denom(1/2*s12)*s13^2*s14*s23^2 - 1/4*denom(1/2*s12)*s13^3*s23*s24 - 
      1/4*denom(1/2*s12)*s12*s13*s23*s24^2 - 1/2*denom(1/2*s12)*s12*s13*s23^2*
      s24 - 1/4*denom(1/2*s12)*s12*s13*s23^3 - 1/2*denom(1/2*s12)*s12*s13*s14*
      s23*s24 - 1/4*denom(1/2*s12)*s12*s13*s14*s23^2 - 1/4*denom(1/2*s12)*s12*
      s13*s14^2*s23 - 3/4*denom(1/2*s12)*s12*s13^2*s23*s24 - 1/2*denom(1/2*s12
      )*s12*s13^2*s23^2 - 1/2*denom(1/2*s12)*s12*s13^2*s14*s23 - 1/4*denom(1/2
      *s12)*s12*s13^3*s23 - 1/2*denom(1/2*s12)*s12^2*s13*s23*s24 - 1/2*denom(1/
      2*s12)*s12^2*s13*s23^2 - 1/2*denom(1/2*s12)*s12^2*s13*s14*s23 - 1/2*
      denom(1/2*s12)*s12^2*s13^2*s23 - 1/4*denom(1/2*s12)*s12^3*s13*s23 - 1/4*
      denom(1/2*s12)*mh^2*s13*s14*s23^2 + 1/4*denom(1/2*s12)*mh^2*s13^2*s23*
      s24 + 1/2*denom(1/2*s12)*mh^2*s12*s13*s23*s24 + 1/2*denom(1/2*s12)*mh^2*
      s12*s13*s23^2 + 1/2*denom(1/2*s12)*mh^2*s12*s13*s14*s23 + 1/2*denom(1/2*
      s12)*mh^2*s12*s13^2*s23 + 1/2*denom(1/2*s12)*mh^2*s12^2*s13*s23 - 1/4*
      denom(1/2*s12)*mh^4*s12*s13*s23 - 1/4*denom(1/2*s12)*mt^2*s14*s23^2*s24
       - 1/4*denom(1/2*s12)*mt^2*s14*s23^3 - 1/2*denom(1/2*s12)*mt^2*s14^2*
      s23^2 + 1/2*denom(1/2*s12)*mt^2*s13*s23*s24^2 + 1/4*denom(1/2*s12)*mt^2*
      s13*s23^2*s24 - 1/4*denom(1/2*s12)*mt^2*s13*s23^3 - 3/2*denom(1/2*s12)*
      mt^2*s13*s14*s23^2 - 1/2*denom(1/2*s12)*mt^2*s13*s14^2*s23 + 1/2*denom(1/
      2*s12)*mt^2*s13^2*s24^2 + 3/2*denom(1/2*s12)*mt^2*s13^2*s23*s24 + 1/4*
      denom(1/2*s12)*mt^2*s13^2*s14*s24 - 1/4*denom(1/2*s12)*mt^2*s13^2*s14*
      s23 + 1/4*denom(1/2*s12)*mt^2*s13^3*s24 + 1/4*denom(1/2*s12)*mt^2*s13^3*
      s23 + 1/4*denom(1/2*s12)*mt^2*s12*s23*s24^2 + 1/2*denom(1/2*s12)*mt^2*
      s12*s23^2*s24 + 1/4*denom(1/2*s12)*mt^2*s12*s23^3 + 3/4*denom(1/2*s12)*
      mt^2*s12*s14*s23*s24 + 1/2*denom(1/2*s12)*mt^2*s12*s14*s23^2 + 1/2*
      denom(1/2*s12)*mt^2*s12*s14^2*s23 + 1/2*denom(1/2*s12)*mt^2*s12*s13*
      s24^2 + 9/4*denom(1/2*s12)*mt^2*s12*s13*s23*s24 + denom(1/2*s12)*mt^2*
      s12*s13*s23^2 + 3/4*denom(1/2*s12)*mt^2*s12*s13*s14*s24 + 5/4*denom(1/2*
      s12)*mt^2*s12*s13*s14*s23 + 1/4*denom(1/2*s12)*mt^2*s12*s13*s14^2 + 
      denom(1/2*s12)*mt^2*s12*s13^2*s24 + 3/2*denom(1/2*s12)*mt^2*s12*s13^2*
      s23 + 1/2*denom(1/2*s12)*mt^2*s12*s13^2*s14 + 1/4*denom(1/2*s12)*mt^2*
      s12*s13^3 + 1/2*denom(1/2*s12)*mt^2*s12^2*s23*s24 + 1/2*denom(1/2*s12)*
      mt^2*s12^2*s23^2 + 3/4*denom(1/2*s12)*mt^2*s12^2*s14*s23 + 3/4*denom(1/2
      *s12)*mt^2*s12^2*s13*s24 + 3/2*denom(1/2*s12)*mt^2*s12^2*s13*s23 + 1/2*
      denom(1/2*s12)*mt^2*s12^2*s13*s14 + 1/2*denom(1/2*s12)*mt^2*s12^2*s13^2
       + 1/4*denom(1/2*s12)*mt^2*s12^3*s23 + 1/4*denom(1/2*s12)*mt^2*s12^3*s13
       + 1/4*denom(1/2*s12)*mt^2*mh^2*s14*s23^2 - 1/2*denom(1/2*s12)*mt^2*mh^2
      *s13*s23*s24 + 1/4*denom(1/2*s12)*mt^2*mh^2*s13*s23^2 + 1/2*denom(1/2*
      s12)*mt^2*mh^2*s13*s14*s23 - 1/4*denom(1/2*s12)*mt^2*mh^2*s13^2*s24 - 1/
      4*denom(1/2*s12)*mt^2*mh^2*s13^2*s23 - 1/2*denom(1/2*s12)*mt^2*mh^2*s12*
      s23*s24 - 1/2*denom(1/2*s12)*mt^2*mh^2*s12*s23^2 - 3/4*denom(1/2*s12)*
      mt^2*mh^2*s12*s14*s23 - 3/4*denom(1/2*s12)*mt^2*mh^2*s12*s13*s24 - 3/2*
      denom(1/2*s12)*mt^2*mh^2*s12*s13*s23 - 1/2*denom(1/2*s12)*mt^2*mh^2*s12*
      s13*s14 - 1/2*denom(1/2*s12)*mt^2*mh^2*s12*s13^2 - 1/2*denom(1/2*s12)*
      mt^2*mh^2*s12^2*s23 - 1/2*denom(1/2*s12)*mt^2*mh^2*s12^2*s13 + 1/4*
      denom(1/2*s12)*mt^2*mh^4*s12*s23 + 1/4*denom(1/2*s12)*mt^2*mh^4*s12*s13
       - 1/4*denom(1/2*s12)*mt^4*s23*s24^2 + 1/4*denom(1/2*s12)*mt^4*s23^3 + 1/
      4*denom(1/2*s12)*mt^4*s14*s23*s24 + 7/4*denom(1/2*s12)*mt^4*s14*s23^2 + 
      denom(1/2*s12)*mt^4*s14^2*s23 - denom(1/2*s12)*mt^4*s13*s24^2 - 7/4*
      denom(1/2*s12)*mt^4*s13*s23*s24 + 3/4*denom(1/2*s12)*mt^4*s13*s23^2 - 1/
      4*denom(1/2*s12)*mt^4*s13*s14*s24 + 7/4*denom(1/2*s12)*mt^4*s13*s14*s23
       + 1/4*denom(1/2*s12)*mt^4*s13*s14^2 - 7/4*denom(1/2*s12)*mt^4*s13^2*s24
       - 3/4*denom(1/2*s12)*mt^4*s13^2*s23 - 1/4*denom(1/2*s12)*mt^4*s13^3 - 1/
      2*denom(1/2*s12)*mt^4*s12*s24^2 - 7/4*denom(1/2*s12)*mt^4*s12*s23*s24 - 
      3/4*denom(1/2*s12)*mt^4*s12*s23^2 - denom(1/2*s12)*mt^4*s12*s14*s24 - 
      denom(1/2*s12)*mt^4*s12*s14*s23 - 1/2*denom(1/2*s12)*mt^4*s12*s14^2 - 2*
      denom(1/2*s12)*mt^4*s12*s13*s24 - 2*denom(1/2*s12)*mt^4*s12*s13*s23 - 5/
      4*denom(1/2*s12)*mt^4*s12*s13*s14 - 5/4*denom(1/2*s12)*mt^4*s12*s13^2 - 
      3/4*denom(1/2*s12)*mt^4*s12^2*s24 - 5/4*denom(1/2*s12)*mt^4*s12^2*s23 - 
      3/4*denom(1/2*s12)*mt^4*s12^2*s14 - 5/4*denom(1/2*s12)*mt^4*s12^2*s13 - 
      1/4*denom(1/2*s12)*mt^4*s12^3 + 1/4*denom(1/2*s12)*mt^4*mh^2*s23*s24 - 1/
      4*denom(1/2*s12)*mt^4*mh^2*s23^2 - 1/2*denom(1/2*s12)*mt^4*mh^2*s14*s23
       + 1/2*denom(1/2*s12)*mt^4*mh^2*s13*s24 - 1/4*denom(1/2*s12)*mt^4*mh^2*
      s13*s14 + 1/4*denom(1/2*s12)*mt^4*mh^2*s13^2 + 3/4*denom(1/2*s12)*mt^4*
      mh^2*s12*s24 + 5/4*denom(1/2*s12)*mt^4*mh^2*s12*s23 + 3/4*denom(1/2*s12)
      *mt^4*mh^2*s12*s14 + 5/4*denom(1/2*s12)*mt^4*mh^2*s12*s13 + 1/2*denom(1/
      2*s12)*mt^4*mh^2*s12^2 - 1/4*denom(1/2*s12)*mt^4*mh^4*s12 + 1/2*denom(1/
      2*s12)*mt^6*s24^2 + 1/2*denom(1/2*s12)*mt^6*s23*s24 - denom(1/2*s12)*
      mt^6*s23^2 - 5/2*denom(1/2*s12)*mt^6*s14*s23 - 1/2*denom(1/2*s12)*mt^6*
      s14^2 + 5/2*denom(1/2*s12)*mt^6*s13*s24 - 1/2*denom(1/2*s12)*mt^6*s13*
      s14 + denom(1/2*s12)*mt^6*s13^2 + 5/4*denom(1/2*s12)*mt^6*s12*s24 + 3/4*
      denom(1/2*s12)*mt^6*s12*s23 + 3/4*denom(1/2*s12)*mt^6*s12*s14 + 5/4*
      denom(1/2*s12)*mt^6*s12*s13 + denom(1/2*s12)*mt^6*s12^2 - 1/4*denom(1/2*
      s12)*mt^6*mh^2*s24 + 1/4*denom(1/2*s12)*mt^6*mh^2*s23 + 1/4*denom(1/2*
      s12)*mt^6*mh^2*s14 - 1/4*denom(1/2*s12)*mt^6*mh^2*s13 - denom(1/2*s12)*
      mt^6*mh^2*s12 - denom(1/2*s12)*mt^8*s24 + denom(1/2*s12)*mt^8*s23 + 
      denom(1/2*s12)*mt^8*s14 - denom(1/2*s12)*mt^8*s13 + 1/8*denom(1/4*s12^2)
      *s13*s14^2*s23^3 - 1/8*denom(1/4*s12^2)*s13^3*s23*s24^2 - 1/8*denom(1/4*
      s12^2)*s12*s13*s14*s23^2*s24 - 1/8*denom(1/4*s12^2)*s12*s13*s14*s23^3 - 
      1/8*denom(1/4*s12^2)*s12*s13*s14^2*s23^2 - 1/8*denom(1/4*s12^2)*s12*
      s13^2*s23*s24^2 - 1/8*denom(1/4*s12^2)*s12*s13^2*s23^2*s24 - 1/8*denom(1/
      4*s12^2)*s12*s13^2*s14*s23*s24 - 1/8*denom(1/4*s12^2)*s12*s13^2*s14*
      s23^2 - 1/8*denom(1/4*s12^2)*s12*s13^3*s23*s24 - 1/8*denom(1/4*s12^2)*
      s12^2*s13*s14*s23^2 - 1/8*denom(1/4*s12^2)*s12^2*s13^2*s23*s24 + 1/8*
      denom(1/4*s12^2)*mh^2*s12*s13*s14*s23^2 + 1/8*denom(1/4*s12^2)*mh^2*s12*
      s13^2*s23*s24 - 1/8*denom(1/4*s12^2)*mt^2*s14^2*s23^3 - 1/4*denom(1/4*
      s12^2)*mt^2*s13*s14*s23^3 - 3/8*denom(1/4*s12^2)*mt^2*s13*s14^2*s23^2 + 
      3/8*denom(1/4*s12^2)*mt^2*s13^2*s23*s24^2 + 1/8*denom(1/4*s12^2)*mt^2*
      s13^3*s24^2 + 1/4*denom(1/4*s12^2)*mt^2*s13^3*s23*s24 + 1/8*denom(1/4*
      s12^2)*mt^2*s12*s14*s23^2*s24 + 1/8*denom(1/4*s12^2)*mt^2*s12*s14*s23^3
       + 1/8*denom(1/4*s12^2)*mt^2*s12*s14^2*s23^2 + 1/4*denom(1/4*s12^2)*mt^2
      *s12*s13*s23*s24^2 + 3/8*denom(1/4*s12^2)*mt^2*s12*s13*s23^2*s24 + 1/8*
      denom(1/4*s12^2)*mt^2*s12*s13*s23^3 + 1/2*denom(1/4*s12^2)*mt^2*s12*s13*
      s14*s23*s24 + 1/2*denom(1/4*s12^2)*mt^2*s12*s13*s14*s23^2 + 1/4*denom(1/
      4*s12^2)*mt^2*s12*s13*s14^2*s23 + 1/8*denom(1/4*s12^2)*mt^2*s12*s13^2*
      s24^2 + 1/2*denom(1/4*s12^2)*mt^2*s12*s13^2*s23*s24 + 1/4*denom(1/4*
      s12^2)*mt^2*s12*s13^2*s23^2 + 1/8*denom(1/4*s12^2)*mt^2*s12*s13^2*s14*
      s24 + 3/8*denom(1/4*s12^2)*mt^2*s12*s13^2*s14*s23 + 1/8*denom(1/4*s12^2)
      *mt^2*s12*s13^3*s24 + 1/8*denom(1/4*s12^2)*mt^2*s12*s13^3*s23 + 1/8*
      denom(1/4*s12^2)*mt^2*s12^2*s14*s23^2 + 1/4*denom(1/4*s12^2)*mt^2*s12^2*
      s13*s23*s24 + 1/8*denom(1/4*s12^2)*mt^2*s12^2*s13*s23^2 + 1/4*denom(1/4*
      s12^2)*mt^2*s12^2*s13*s14*s23 + 1/8*denom(1/4*s12^2)*mt^2*s12^2*s13^2*
      s24 + 1/8*denom(1/4*s12^2)*mt^2*s12^2*s13^2*s23 - 1/8*denom(1/4*s12^2)*
      mt^2*mh^2*s12*s14*s23^2 - 1/4*denom(1/4*s12^2)*mt^2*mh^2*s12*s13*s23*s24
       - 1/8*denom(1/4*s12^2)*mt^2*mh^2*s12*s13*s23^2 - 1/4*denom(1/4*s12^2)*
      mt^2*mh^2*s12*s13*s14*s23 - 1/8*denom(1/4*s12^2)*mt^2*mh^2*s12*s13^2*s24
       - 1/8*denom(1/4*s12^2)*mt^2*mh^2*s12*s13^2*s23 + 1/4*denom(1/4*s12^2)*
      mt^4*s14*s23^3 + 3/8*denom(1/4*s12^2)*mt^4*s14^2*s23^2 - 3/8*denom(1/4*
      s12^2)*mt^4*s13*s23*s24^2 + 1/8*denom(1/4*s12^2)*mt^4*s13*s23^3 + 3/4*
      denom(1/4*s12^2)*mt^4*s13*s14*s23^2 + 3/8*denom(1/4*s12^2)*mt^4*s13*
      s14^2*s23 - 3/8*denom(1/4*s12^2)*mt^4*s13^2*s24^2 - 3/4*denom(1/4*s12^2)
      *mt^4*s13^2*s23*s24 - 1/4*denom(1/4*s12^2)*mt^4*s13^3*s24 - 1/8*denom(1/
      4*s12^2)*mt^4*s13^3*s23 - 1/8*denom(1/4*s12^2)*mt^4*s12*s23*s24^2 - 1/4*
      denom(1/4*s12^2)*mt^4*s12*s23^2*s24 - 1/8*denom(1/4*s12^2)*mt^4*s12*
      s23^3 - 3/8*denom(1/4*s12^2)*mt^4*s12*s14*s23*s24 - 3/8*denom(1/4*s12^2)
      *mt^4*s12*s14*s23^2 - 1/4*denom(1/4*s12^2)*mt^4*s12*s14^2*s23 - 1/4*
      denom(1/4*s12^2)*mt^4*s12*s13*s24^2 - 7/8*denom(1/4*s12^2)*mt^4*s12*s13*
      s23*s24 - 5/8*denom(1/4*s12^2)*mt^4*s12*s13*s23^2 - 3/8*denom(1/4*s12^2)
      *mt^4*s12*s13*s14*s24 - 7/8*denom(1/4*s12^2)*mt^4*s12*s13*s14*s23 - 1/8*
      denom(1/4*s12^2)*mt^4*s12*s13*s14^2 - 3/8*denom(1/4*s12^2)*mt^4*s12*
      s13^2*s24 - 5/8*denom(1/4*s12^2)*mt^4*s12*s13^2*s23 - 1/4*denom(1/4*
      s12^2)*mt^4*s12*s13^2*s14 - 1/8*denom(1/4*s12^2)*mt^4*s12*s13^3 - 1/8*
      denom(1/4*s12^2)*mt^4*s12^2*s23*s24 - 1/8*denom(1/4*s12^2)*mt^4*s12^2*
      s23^2 - 1/4*denom(1/4*s12^2)*mt^4*s12^2*s14*s23 - 1/4*denom(1/4*s12^2)*
      mt^4*s12^2*s13*s24 - 1/2*denom(1/4*s12^2)*mt^4*s12^2*s13*s23 - 1/8*
      denom(1/4*s12^2)*mt^4*s12^2*s13*s14 - 1/8*denom(1/4*s12^2)*mt^4*s12^2*
      s13^2 + 1/8*denom(1/4*s12^2)*mt^4*mh^2*s12*s23*s24 + 1/8*denom(1/4*s12^2
      )*mt^4*mh^2*s12*s23^2 + 1/4*denom(1/4*s12^2)*mt^4*mh^2*s12*s14*s23 + 1/4
      *denom(1/4*s12^2)*mt^4*mh^2*s12*s13*s24 + 1/2*denom(1/4*s12^2)*mt^4*mh^2
      *s12*s13*s23 + 1/8*denom(1/4*s12^2)*mt^4*mh^2*s12*s13*s14 + 1/8*denom(1/
      4*s12^2)*mt^4*mh^2*s12*s13^2 + 1/8*denom(1/4*s12^2)*mt^6*s23*s24^2 - 1/8
      *denom(1/4*s12^2)*mt^6*s23^3 - 3/4*denom(1/4*s12^2)*mt^6*s14*s23^2 - 3/8
      *denom(1/4*s12^2)*mt^6*s14^2*s23 + 3/8*denom(1/4*s12^2)*mt^6*s13*s24^2
       + 3/4*denom(1/4*s12^2)*mt^6*s13*s23*s24 - 3/8*denom(1/4*s12^2)*mt^6*s13
      *s23^2 - 3/4*denom(1/4*s12^2)*mt^6*s13*s14*s23 - 1/8*denom(1/4*s12^2)*
      mt^6*s13*s14^2 + 3/4*denom(1/4*s12^2)*mt^6*s13^2*s24 + 3/8*denom(1/4*
      s12^2)*mt^6*s13^2*s23 + 1/8*denom(1/4*s12^2)*mt^6*s13^3 + 1/8*denom(1/4*
      s12^2)*mt^6*s12*s24^2 + 1/2*denom(1/4*s12^2)*mt^6*s12*s23*s24 + 3/8*
      denom(1/4*s12^2)*mt^6*s12*s23^2 + 1/4*denom(1/4*s12^2)*mt^6*s12*s14*s24
       + 1/2*denom(1/4*s12^2)*mt^6*s12*s14*s23 + 1/8*denom(1/4*s12^2)*mt^6*s12
      *s14^2 + 1/2*denom(1/4*s12^2)*mt^6*s12*s13*s24 + 3/4*denom(1/4*s12^2)*
      mt^6*s12*s13*s23 + 1/2*denom(1/4*s12^2)*mt^6*s12*s13*s14 + 3/8*denom(1/4
      *s12^2)*mt^6*s12*s13^2 + 1/8*denom(1/4*s12^2)*mt^6*s12^2*s24 + 3/8*
      denom(1/4*s12^2)*mt^6*s12^2*s23 + 1/8*denom(1/4*s12^2)*mt^6*s12^2*s14 + 
      3/8*denom(1/4*s12^2)*mt^6*s12^2*s13 - 1/8*denom(1/4*s12^2)*mt^6*mh^2*s12
      *s24 - 3/8*denom(1/4*s12^2)*mt^6*mh^2*s12*s23 - 1/8*denom(1/4*s12^2)*
      mt^6*mh^2*s12*s14 - 3/8*denom(1/4*s12^2)*mt^6*mh^2*s12*s13 - 1/8*denom(1/
      4*s12^2)*mt^8*s24^2 - 1/4*denom(1/4*s12^2)*mt^8*s23*s24 + 3/8*denom(1/4*
      s12^2)*mt^8*s23^2 + 3/4*denom(1/4*s12^2)*mt^8*s14*s23 + 1/8*denom(1/4*
      s12^2)*mt^8*s14^2 - 3/4*denom(1/4*s12^2)*mt^8*s13*s24 + 1/4*denom(1/4*
      s12^2)*mt^8*s13*s14 - 3/8*denom(1/4*s12^2)*mt^8*s13^2 - 1/4*denom(1/4*
      s12^2)*mt^8*s12*s24 - 1/4*denom(1/4*s12^2)*mt^8*s12*s23 - 1/4*denom(1/4*
      s12^2)*mt^8*s12*s14 - 1/4*denom(1/4*s12^2)*mt^8*s12*s13 - 1/4*denom(1/4*
      s12^2)*mt^8*s12^2 + 1/4*denom(1/4*s12^2)*mt^8*mh^2*s12 + 1/4*denom(1/4*
      s12^2)*mt^10*s24 - 1/4*denom(1/4*s12^2)*mt^10*s23 - 1/4*denom(1/4*s12^2)
      *mt^10*s14 + 1/4*denom(1/4*s12^2)*mt^10*s13;
 
 .sort
id KMatrix(14,2) =  mt^4*s14*s23 - mt^4*s13*s24 - mt^4*s12*s24 - mt^4*s12*s23
       - mt^4*s12*s14 - mt^4*s12*s13 - mt^4*s12^2 + mt^4*mh^2*s12 + mt^6*s24
       - mt^6*s23 - mt^6*s14 + mt^6*s13 - 1/2*denom(1/2*s12)*mt^2*s14^2*s23*
      s24 + 1/2*denom(1/2*s12)*mt^2*s13*s14*s24^2 - 1/2*denom(1/2*s12)*mt^2*
      s13*s14*s23^2 + 1/2*denom(1/2*s12)*mt^2*s13^2*s23*s24 + 1/2*denom(1/2*
      s12)*mt^2*s12*s14*s24^2 + 1/2*denom(1/2*s12)*mt^2*s12*s14*s23*s24 + 1/2*
      denom(1/2*s12)*mt^2*s12*s14^2*s24 + 1/2*denom(1/2*s12)*mt^2*s12*s13*s23*
      s24 + 1/2*denom(1/2*s12)*mt^2*s12*s13*s23^2 + 1/2*denom(1/2*s12)*mt^2*
      s12*s13*s14*s24 + 1/2*denom(1/2*s12)*mt^2*s12*s13*s14*s23 + 1/2*denom(1/
      2*s12)*mt^2*s12*s13^2*s23 + 1/2*denom(1/2*s12)*mt^2*s12^2*s14*s24 + 1/2*
      denom(1/2*s12)*mt^2*s12^2*s13*s23 - 1/2*denom(1/2*s12)*mt^2*mh^2*s12*s14
      *s24 - 1/2*denom(1/2*s12)*mt^2*mh^2*s12*s13*s23 - 1/2*denom(1/2*s12)*
      mt^4*s14*s24^2 + denom(1/2*s12)*mt^4*s14*s23*s24 + 1/2*denom(1/2*s12)*
      mt^4*s14*s23^2 + 1/2*denom(1/2*s12)*mt^4*s14^2*s24 + 1/2*denom(1/2*s12)*
      mt^4*s14^2*s23 - 1/2*denom(1/2*s12)*mt^4*s13*s24^2 - denom(1/2*s12)*mt^4
      *s13*s23*s24 + 1/2*denom(1/2*s12)*mt^4*s13*s23^2 - denom(1/2*s12)*mt^4*
      s13*s14*s24 + denom(1/2*s12)*mt^4*s13*s14*s23 - 1/2*denom(1/2*s12)*mt^4*
      s13^2*s24 - 1/2*denom(1/2*s12)*mt^4*s13^2*s23 - 1/2*denom(1/2*s12)*mt^4*
      s12*s24^2 - denom(1/2*s12)*mt^4*s12*s23*s24 - 1/2*denom(1/2*s12)*mt^4*
      s12*s23^2 - denom(1/2*s12)*mt^4*s12*s14*s24 - denom(1/2*s12)*mt^4*s12*
      s14*s23 - 1/2*denom(1/2*s12)*mt^4*s12*s14^2 - denom(1/2*s12)*mt^4*s12*
      s13*s24 - denom(1/2*s12)*mt^4*s12*s13*s23 - denom(1/2*s12)*mt^4*s12*s13*
      s14 - 1/2*denom(1/2*s12)*mt^4*s12*s13^2 - 1/2*denom(1/2*s12)*mt^4*s12^2*
      s24 - 1/2*denom(1/2*s12)*mt^4*s12^2*s23 - 1/2*denom(1/2*s12)*mt^4*s12^2*
      s14 - 1/2*denom(1/2*s12)*mt^4*s12^2*s13 + 1/2*denom(1/2*s12)*mt^4*mh^2*
      s12*s24 + 1/2*denom(1/2*s12)*mt^4*mh^2*s12*s23 + 1/2*denom(1/2*s12)*mt^4
      *mh^2*s12*s14 + 1/2*denom(1/2*s12)*mt^4*mh^2*s12*s13 + 1/2*denom(1/2*s12
      )*mt^6*s24^2 - 1/2*denom(1/2*s12)*mt^6*s23^2 - 2*denom(1/2*s12)*mt^6*s14
      *s23 - 1/2*denom(1/2*s12)*mt^6*s14^2 + 2*denom(1/2*s12)*mt^6*s13*s24 + 1/
      2*denom(1/2*s12)*mt^6*s13^2 + denom(1/2*s12)*mt^6*s12*s24 + denom(1/2*
      s12)*mt^6*s12*s23 + denom(1/2*s12)*mt^6*s12*s14 + denom(1/2*s12)*mt^6*
      s12*s13 + denom(1/2*s12)*mt^6*s12^2 - denom(1/2*s12)*mt^6*mh^2*s12 - 
      denom(1/2*s12)*mt^8*s24 + denom(1/2*s12)*mt^8*s23 + denom(1/2*s12)*mt^8*
      s14 - denom(1/2*s12)*mt^8*s13 + 1/4*denom(1/4*s12^2)*s13*s14^2*s23^2*s24
       - 1/4*denom(1/4*s12^2)*s13^2*s14*s23*s24^2 - 1/4*denom(1/4*s12^2)*s12*
      s13*s14*s23*s24^2 - 1/4*denom(1/4*s12^2)*s12*s13*s14*s23^2*s24 - 1/4*
      denom(1/4*s12^2)*s12*s13*s14^2*s23*s24 - 1/4*denom(1/4*s12^2)*s12*s13^2*
      s14*s23*s24 - 1/4*denom(1/4*s12^2)*s12^2*s13*s14*s23*s24 + 1/4*denom(1/4
      *s12^2)*mh^2*s12*s13*s14*s23*s24 - 1/4*denom(1/4*s12^2)*mt^2*s14^2*s23^2
      *s24 + 1/2*denom(1/4*s12^2)*mt^2*s13*s14*s23*s24^2 - 1/2*denom(1/4*s12^2
      )*mt^2*s13*s14*s23^2*s24 - 1/2*denom(1/4*s12^2)*mt^2*s13*s14^2*s23*s24
       - 1/4*denom(1/4*s12^2)*mt^2*s13*s14^2*s23^2 + 1/4*denom(1/4*s12^2)*mt^2
      *s13^2*s23*s24^2 + 1/4*denom(1/4*s12^2)*mt^2*s13^2*s14*s24^2 + 1/2*
      denom(1/4*s12^2)*mt^2*s13^2*s14*s23*s24 + 1/4*denom(1/4*s12^2)*mt^2*s12*
      s14*s23*s24^2 + 1/4*denom(1/4*s12^2)*mt^2*s12*s14*s23^2*s24 + 1/4*denom(
      1/4*s12^2)*mt^2*s12*s14^2*s23*s24 + 1/4*denom(1/4*s12^2)*mt^2*s12*s13*
      s23*s24^2 + 1/4*denom(1/4*s12^2)*mt^2*s12*s13*s23^2*s24 + 1/4*denom(1/4*
      s12^2)*mt^2*s12*s13*s14*s24^2 + denom(1/4*s12^2)*mt^2*s12*s13*s14*s23*
      s24 + 1/4*denom(1/4*s12^2)*mt^2*s12*s13*s14*s23^2 + 1/4*denom(1/4*s12^2)
      *mt^2*s12*s13*s14^2*s24 + 1/4*denom(1/4*s12^2)*mt^2*s12*s13*s14^2*s23 + 
      1/4*denom(1/4*s12^2)*mt^2*s12*s13^2*s23*s24 + 1/4*denom(1/4*s12^2)*mt^2*
      s12*s13^2*s14*s24 + 1/4*denom(1/4*s12^2)*mt^2*s12*s13^2*s14*s23 + 1/4*
      denom(1/4*s12^2)*mt^2*s12^2*s14*s23*s24 + 1/4*denom(1/4*s12^2)*mt^2*
      s12^2*s13*s23*s24 + 1/4*denom(1/4*s12^2)*mt^2*s12^2*s13*s14*s24 + 1/4*
      denom(1/4*s12^2)*mt^2*s12^2*s13*s14*s23 - 1/4*denom(1/4*s12^2)*mt^2*mh^2
      *s12*s14*s23*s24 - 1/4*denom(1/4*s12^2)*mt^2*mh^2*s12*s13*s23*s24 - 1/4*
      denom(1/4*s12^2)*mt^2*mh^2*s12*s13*s14*s24 - 1/4*denom(1/4*s12^2)*mt^2*
      mh^2*s12*s13*s14*s23 - 1/4*denom(1/4*s12^2)*mt^4*s14*s23*s24^2 + 1/2*
      denom(1/4*s12^2)*mt^4*s14*s23^2*s24 + 1/2*denom(1/4*s12^2)*mt^4*s14^2*
      s23*s24 + 1/4*denom(1/4*s12^2)*mt^4*s14^2*s23^2 - 1/2*denom(1/4*s12^2)*
      mt^4*s13*s23*s24^2 + 1/4*denom(1/4*s12^2)*mt^4*s13*s23^2*s24 - 1/2*
      denom(1/4*s12^2)*mt^4*s13*s14*s24^2 + 1/2*denom(1/4*s12^2)*mt^4*s13*s14*
      s23^2 + 1/4*denom(1/4*s12^2)*mt^4*s13*s14^2*s24 + 1/2*denom(1/4*s12^2)*
      mt^4*s13*s14^2*s23 - 1/4*denom(1/4*s12^2)*mt^4*s13^2*s24^2 - 1/2*denom(1/
      4*s12^2)*mt^4*s13^2*s23*s24 - 1/2*denom(1/4*s12^2)*mt^4*s13^2*s14*s24 - 
      1/4*denom(1/4*s12^2)*mt^4*s13^2*s14*s23 - 1/4*denom(1/4*s12^2)*mt^4*s12*
      s23*s24^2 - 1/4*denom(1/4*s12^2)*mt^4*s12*s23^2*s24 - 1/4*denom(1/4*
      s12^2)*mt^4*s12*s14*s24^2 - 3/4*denom(1/4*s12^2)*mt^4*s12*s14*s23*s24 - 
      1/4*denom(1/4*s12^2)*mt^4*s12*s14*s23^2 - 1/4*denom(1/4*s12^2)*mt^4*s12*
      s14^2*s24 - 1/4*denom(1/4*s12^2)*mt^4*s12*s14^2*s23 - 1/4*denom(1/4*
      s12^2)*mt^4*s12*s13*s24^2 - 3/4*denom(1/4*s12^2)*mt^4*s12*s13*s23*s24 - 
      1/4*denom(1/4*s12^2)*mt^4*s12*s13*s23^2 - 3/4*denom(1/4*s12^2)*mt^4*s12*
      s13*s14*s24 - 3/4*denom(1/4*s12^2)*mt^4*s12*s13*s14*s23 - 1/4*denom(1/4*
      s12^2)*mt^4*s12*s13*s14^2 - 1/4*denom(1/4*s12^2)*mt^4*s12*s13^2*s24 - 1/
      4*denom(1/4*s12^2)*mt^4*s12*s13^2*s23 - 1/4*denom(1/4*s12^2)*mt^4*s12*
      s13^2*s14 - 1/4*denom(1/4*s12^2)*mt^4*s12^2*s23*s24 - 1/4*denom(1/4*
      s12^2)*mt^4*s12^2*s14*s24 - 1/4*denom(1/4*s12^2)*mt^4*s12^2*s14*s23 - 1/
      4*denom(1/4*s12^2)*mt^4*s12^2*s13*s24 - 1/4*denom(1/4*s12^2)*mt^4*s12^2*
      s13*s23 - 1/4*denom(1/4*s12^2)*mt^4*s12^2*s13*s14 + 1/4*denom(1/4*s12^2)
      *mt^4*mh^2*s12*s23*s24 + 1/4*denom(1/4*s12^2)*mt^4*mh^2*s12*s14*s24 + 1/
      4*denom(1/4*s12^2)*mt^4*mh^2*s12*s14*s23 + 1/4*denom(1/4*s12^2)*mt^4*
      mh^2*s12*s13*s24 + 1/4*denom(1/4*s12^2)*mt^4*mh^2*s12*s13*s23 + 1/4*
      denom(1/4*s12^2)*mt^4*mh^2*s12*s13*s14 + 1/4*denom(1/4*s12^2)*mt^6*s23*
      s24^2 - 1/4*denom(1/4*s12^2)*mt^6*s23^2*s24 + 1/4*denom(1/4*s12^2)*mt^6*
      s14*s24^2 - 1/2*denom(1/4*s12^2)*mt^6*s14*s23*s24 - 1/2*denom(1/4*s12^2)
      *mt^6*s14*s23^2 - 1/4*denom(1/4*s12^2)*mt^6*s14^2*s24 - 1/2*denom(1/4*
      s12^2)*mt^6*s14^2*s23 + 1/2*denom(1/4*s12^2)*mt^6*s13*s24^2 + 1/2*denom(
      1/4*s12^2)*mt^6*s13*s23*s24 - 1/4*denom(1/4*s12^2)*mt^6*s13*s23^2 + 1/2*
      denom(1/4*s12^2)*mt^6*s13*s14*s24 - 1/2*denom(1/4*s12^2)*mt^6*s13*s14*
      s23 - 1/4*denom(1/4*s12^2)*mt^6*s13*s14^2 + 1/2*denom(1/4*s12^2)*mt^6*
      s13^2*s24 + 1/4*denom(1/4*s12^2)*mt^6*s13^2*s23 + 1/4*denom(1/4*s12^2)*
      mt^6*s13^2*s14 + 1/4*denom(1/4*s12^2)*mt^6*s12*s24^2 + 1/2*denom(1/4*
      s12^2)*mt^6*s12*s23*s24 + 1/4*denom(1/4*s12^2)*mt^6*s12*s23^2 + 1/2*
      denom(1/4*s12^2)*mt^6*s12*s14*s24 + 1/2*denom(1/4*s12^2)*mt^6*s12*s14*
      s23 + 1/4*denom(1/4*s12^2)*mt^6*s12*s14^2 + 1/2*denom(1/4*s12^2)*mt^6*
      s12*s13*s24 + 1/2*denom(1/4*s12^2)*mt^6*s12*s13*s23 + 1/2*denom(1/4*
      s12^2)*mt^6*s12*s13*s14 + 1/4*denom(1/4*s12^2)*mt^6*s12*s13^2 + 1/4*
      denom(1/4*s12^2)*mt^6*s12^2*s24 + 1/4*denom(1/4*s12^2)*mt^6*s12^2*s23 + 
      1/4*denom(1/4*s12^2)*mt^6*s12^2*s14 + 1/4*denom(1/4*s12^2)*mt^6*s12^2*
      s13 - 1/4*denom(1/4*s12^2)*mt^6*mh^2*s12*s24 - 1/4*denom(1/4*s12^2)*mt^6
      *mh^2*s12*s23 - 1/4*denom(1/4*s12^2)*mt^6*mh^2*s12*s14 - 1/4*denom(1/4*
      s12^2)*mt^6*mh^2*s12*s13 - 1/4*denom(1/4*s12^2)*mt^8*s24^2 + 1/4*denom(1/
      4*s12^2)*mt^8*s23^2 + 3/4*denom(1/4*s12^2)*mt^8*s14*s23 + 1/4*denom(1/4*
      s12^2)*mt^8*s14^2 - 3/4*denom(1/4*s12^2)*mt^8*s13*s24 - 1/4*denom(1/4*
      s12^2)*mt^8*s13^2 - 1/4*denom(1/4*s12^2)*mt^8*s12*s24 - 1/4*denom(1/4*
      s12^2)*mt^8*s12*s23 - 1/4*denom(1/4*s12^2)*mt^8*s12*s14 - 1/4*denom(1/4*
      s12^2)*mt^8*s12*s13 - 1/4*denom(1/4*s12^2)*mt^8*s12^2 + 1/4*denom(1/4*
      s12^2)*mt^8*mh^2*s12 + 1/4*denom(1/4*s12^2)*mt^10*s24 - 1/4*denom(1/4*
      s12^2)*mt^10*s23 - 1/4*denom(1/4*s12^2)*mt^10*s14 + 1/4*denom(1/4*s12^2)
      *mt^10*s13;
 
 .sort
id KMatrix(14,3) =  1/4*s14*s23*s24^2 + 1/2*s14*s23^2*s24 + 1/4*s14*s23^3 + 1/
      2*s14^2*s23*s24 + 1/2*s14^2*s23^2 + 1/4*s14^3*s23 - 1/4*s13*s24^3 - 1/2*
      s13*s23*s24^2 - 1/4*s13*s23^2*s24 - 1/2*s13*s14*s24^2 + 1/2*s13*s14*
      s23^2 - 1/4*s13*s14^2*s24 + 1/2*s13*s14^2*s23 - 1/2*s13^2*s24^2 - 1/2*
      s13^2*s23*s24 - 1/2*s13^2*s14*s24 + 1/4*s13^2*s14*s23 - 1/4*s13^3*s24 - 
      1/4*s12*s24^3 - 3/4*s12*s23*s24^2 - 3/4*s12*s23^2*s24 - 1/4*s12*s23^3 - 
      3/4*s12*s14*s24^2 - s12*s14*s23*s24 - 1/4*s12*s14*s23^2 - 3/4*s12*s14^2*
      s24 - 1/4*s12*s14^2*s23 - 1/4*s12*s14^3 - 5/4*s12*s13*s24^2 - 2*s12*s13*
      s23*s24 - 3/4*s12*s13*s23^2 - 2*s12*s13*s14*s24 - s12*s13*s14*s23 - 3/4*
      s12*s13*s14^2 - 5/4*s12*s13^2*s24 - 3/4*s12*s13^2*s23 - 3/4*s12*s13^2*
      s14 - 1/4*s12*s13^3 - 3/4*s12^2*s24^2 - 3/2*s12^2*s23*s24 - 3/4*s12^2*
      s23^2 - 3/2*s12^2*s14*s24 - 5/4*s12^2*s14*s23 - 3/4*s12^2*s14^2 - 7/4*
      s12^2*s13*s24 - 3/2*s12^2*s13*s23 - 3/2*s12^2*s13*s14 - 3/4*s12^2*s13^2
       - 3/4*s12^3*s24 - 3/4*s12^3*s23 - 3/4*s12^3*s14 - 3/4*s12^3*s13 - 1/4*
      s12^4 - 1/2*mh^2*s14*s23*s24 - 1/2*mh^2*s14*s23^2 - 1/2*mh^2*s14^2*s23
       + 1/2*mh^2*s13*s24^2 + 1/2*mh^2*s13*s23*s24 + 1/2*mh^2*s13*s14*s24 - 1/
      2*mh^2*s13*s14*s23 + 1/2*mh^2*s13^2*s24 + 3/4*mh^2*s12*s24^2 + 3/2*mh^2*
      s12*s23*s24 + 3/4*mh^2*s12*s23^2 + 3/2*mh^2*s12*s14*s24 + mh^2*s12*s14*
      s23 + 3/4*mh^2*s12*s14^2 + 2*mh^2*s12*s13*s24 + 3/2*mh^2*s12*s13*s23 + 3/
      2*mh^2*s12*s13*s14 + 3/4*mh^2*s12*s13^2 + 3/2*mh^2*s12^2*s24 + 3/2*mh^2*
      s12^2*s23 + 3/2*mh^2*s12^2*s14 + 3/2*mh^2*s12^2*s13 + 3/4*mh^2*s12^3 + 1/
      4*mh^4*s14*s23 - 1/4*mh^4*s13*s24 - 3/4*mh^4*s12*s24 - 3/4*mh^4*s12*s23
       - 3/4*mh^4*s12*s14 - 3/4*mh^4*s12*s13 - 3/4*mh^4*s12^2 + 1/4*mh^6*s12
       + 1/4*mt^2*s24^3 + 1/4*mt^2*s23*s24^2 - 1/4*mt^2*s23^2*s24 - 1/4*mt^2*
      s23^3 + 1/4*mt^2*s14*s24^2 - 3/2*mt^2*s14*s23*s24 - 7/4*mt^2*s14*s23^2
       - 1/4*mt^2*s14^2*s24 - 7/4*mt^2*s14^2*s23 - 1/4*mt^2*s14^3 + 7/4*mt^2*
      s13*s24^2 + 3/2*mt^2*s13*s23*s24 - 1/4*mt^2*s13*s23^2 + 3/2*mt^2*s13*s14
      *s24 - 3/2*mt^2*s13*s14*s23 - 1/4*mt^2*s13*s14^2 + 7/4*mt^2*s13^2*s24 + 
      1/4*mt^2*s13^2*s23 + 1/4*mt^2*s13^2*s14 + 1/4*mt^2*s13^3 + 3/2*mt^2*s12*
      s24^2 + 2*mt^2*s12*s23*s24 + 1/2*mt^2*s12*s23^2 + 2*mt^2*s12*s14*s24 + 1/
      2*mt^2*s12*s14^2 + 4*mt^2*s12*s13*s24 + 2*mt^2*s12*s13*s23 + 2*mt^2*s12*
      s13*s14 + 3/2*mt^2*s12*s13^2 + 9/4*mt^2*s12^2*s24 + 7/4*mt^2*s12^2*s23
       + 7/4*mt^2*s12^2*s14 + 9/4*mt^2*s12^2*s13 + mt^2*s12^3 - 1/2*mt^2*mh^2*
      s24^2 + 1/2*mt^2*mh^2*s23^2 + 2*mt^2*mh^2*s14*s23 + 1/2*mt^2*mh^2*s14^2
       - 2*mt^2*mh^2*s13*s24 - 1/2*mt^2*mh^2*s13^2 - 5/2*mt^2*mh^2*s12*s24 - 3/
      2*mt^2*mh^2*s12*s23 - 3/2*mt^2*mh^2*s12*s14 - 5/2*mt^2*mh^2*s12*s13 - 2*
      mt^2*mh^2*s12^2 + 1/4*mt^2*mh^4*s24 - 1/4*mt^2*mh^4*s23 - 1/4*mt^2*mh^4*
      s14 + 1/4*mt^2*mh^4*s13 + mt^2*mh^4*s12 - mt^4*s24^2 + mt^4*s23^2 + 3*
      mt^4*s14*s23 + mt^4*s14^2 - 3*mt^4*s13*s24 - mt^4*s13^2 - 2*mt^4*s12*s24
       - 2*mt^4*s12*s13 - mt^4*s12^2 + mt^4*mh^2*s24 - mt^4*mh^2*s23 - mt^4*
      mh^2*s14 + mt^4*mh^2*s13 + mt^4*mh^2*s12 + mt^6*s24 - mt^6*s23 - mt^6*
      s14 + mt^6*s13 + 1/4*denom(1/2*s12)*s14^2*s23^2*s24 + 1/4*denom(1/2*s12)
      *s14^2*s23^3 + 1/4*denom(1/2*s12)*s14^3*s23^2 + 1/4*denom(1/2*s12)*s13*
      s14^2*s23^2 - 1/4*denom(1/2*s12)*s13^2*s24^3 - 1/4*denom(1/2*s12)*s13^2*
      s23*s24^2 - 1/4*denom(1/2*s12)*s13^2*s14*s24^2 - 1/4*denom(1/2*s12)*
      s13^3*s24^2 - 1/4*denom(1/2*s12)*s12*s14*s23*s24^2 - 1/2*denom(1/2*s12)*
      s12*s14*s23^2*s24 - 1/4*denom(1/2*s12)*s12*s14*s23^3 - 1/2*denom(1/2*s12
      )*s12*s14^2*s23*s24 - 1/4*denom(1/2*s12)*s12*s14^2*s23^2 - 1/4*denom(1/2
      *s12)*s12*s14^3*s23 - 1/4*denom(1/2*s12)*s12*s13*s24^3 - 1/2*denom(1/2*
      s12)*s12*s13*s23*s24^2 - 1/4*denom(1/2*s12)*s12*s13*s23^2*s24 - 1/2*
      denom(1/2*s12)*s12*s13*s14*s24^2 - denom(1/2*s12)*s12*s13*s14*s23*s24 - 
      1/2*denom(1/2*s12)*s12*s13*s14*s23^2 - 1/4*denom(1/2*s12)*s12*s13*s14^2*
      s24 - 1/2*denom(1/2*s12)*s12*s13*s14^2*s23 - 3/4*denom(1/2*s12)*s12*
      s13^2*s24^2 - 1/2*denom(1/2*s12)*s12*s13^2*s23*s24 - 1/2*denom(1/2*s12)*
      s12*s13^2*s14*s24 - 1/4*denom(1/2*s12)*s12*s13^2*s14*s23 - 1/4*denom(1/2
      *s12)*s12*s13^3*s24 - 1/2*denom(1/2*s12)*s12^2*s14*s23*s24 - 1/2*denom(1/
      2*s12)*s12^2*s14*s23^2 - 1/2*denom(1/2*s12)*s12^2*s14^2*s23 - 1/2*denom(
      1/2*s12)*s12^2*s13*s24^2 - 1/2*denom(1/2*s12)*s12^2*s13*s23*s24 - 1/2*
      denom(1/2*s12)*s12^2*s13*s14*s24 - 1/2*denom(1/2*s12)*s12^2*s13*s14*s23
       - 1/2*denom(1/2*s12)*s12^2*s13^2*s24 - 1/4*denom(1/2*s12)*s12^3*s14*s23
       - 1/4*denom(1/2*s12)*s12^3*s13*s24 - 1/4*denom(1/2*s12)*mh^2*s14^2*
      s23^2 + 1/4*denom(1/2*s12)*mh^2*s13^2*s24^2 + 1/2*denom(1/2*s12)*mh^2*
      s12*s14*s23*s24 + 1/2*denom(1/2*s12)*mh^2*s12*s14*s23^2 + 1/2*denom(1/2*
      s12)*mh^2*s12*s14^2*s23 + 1/2*denom(1/2*s12)*mh^2*s12*s13*s24^2 + 1/2*
      denom(1/2*s12)*mh^2*s12*s13*s23*s24 + 1/2*denom(1/2*s12)*mh^2*s12*s13*
      s14*s24 + 1/2*denom(1/2*s12)*mh^2*s12*s13*s14*s23 + 1/2*denom(1/2*s12)*
      mh^2*s12*s13^2*s24 + 1/2*denom(1/2*s12)*mh^2*s12^2*s14*s23 + 1/2*denom(1/
      2*s12)*mh^2*s12^2*s13*s24 - 1/4*denom(1/2*s12)*mh^4*s12*s14*s23 - 1/4*
      denom(1/2*s12)*mh^4*s12*s13*s24 - 1/2*denom(1/2*s12)*mt^2*s14*s23^2*s24
       - 1/2*denom(1/2*s12)*mt^2*s14*s23^3 - 1/2*denom(1/2*s12)*mt^2*s14^2*s23
      *s24 - 3/2*denom(1/2*s12)*mt^2*s14^2*s23^2 - 1/2*denom(1/2*s12)*mt^2*
      s14^3*s23 + 1/2*denom(1/2*s12)*mt^2*s13*s24^3 + 1/2*denom(1/2*s12)*mt^2*
      s13*s23*s24^2 + 1/2*denom(1/2*s12)*mt^2*s13*s14*s24^2 - 1/2*denom(1/2*
      s12)*mt^2*s13*s14*s23^2 - 1/2*denom(1/2*s12)*mt^2*s13*s14^2*s23 + 3/2*
      denom(1/2*s12)*mt^2*s13^2*s24^2 + 1/2*denom(1/2*s12)*mt^2*s13^2*s23*s24
       + 1/2*denom(1/2*s12)*mt^2*s13^2*s14*s24 + 1/2*denom(1/2*s12)*mt^2*s13^3
      *s24 + 1/4*denom(1/2*s12)*mt^2*s12*s24^3 + 3/4*denom(1/2*s12)*mt^2*s12*
      s23*s24^2 + 3/4*denom(1/2*s12)*mt^2*s12*s23^2*s24 + 1/4*denom(1/2*s12)*
      mt^2*s12*s23^3 + 3/4*denom(1/2*s12)*mt^2*s12*s14*s24^2 + 2*denom(1/2*s12
      )*mt^2*s12*s14*s23*s24 + 3/4*denom(1/2*s12)*mt^2*s12*s14*s23^2 + 3/4*
      denom(1/2*s12)*mt^2*s12*s14^2*s24 + 3/4*denom(1/2*s12)*mt^2*s12*s14^2*
      s23 + 1/4*denom(1/2*s12)*mt^2*s12*s14^3 + 7/4*denom(1/2*s12)*mt^2*s12*
      s13*s24^2 + 2*denom(1/2*s12)*mt^2*s12*s13*s23*s24 + 3/4*denom(1/2*s12)*
      mt^2*s12*s13*s23^2 + 2*denom(1/2*s12)*mt^2*s12*s13*s14*s24 + 2*denom(1/2
      *s12)*mt^2*s12*s13*s14*s23 + 3/4*denom(1/2*s12)*mt^2*s12*s13*s14^2 + 7/4
      *denom(1/2*s12)*mt^2*s12*s13^2*s24 + 3/4*denom(1/2*s12)*mt^2*s12*s13^2*
      s23 + 3/4*denom(1/2*s12)*mt^2*s12*s13^2*s14 + 1/4*denom(1/2*s12)*mt^2*
      s12*s13^3 + 1/2*denom(1/2*s12)*mt^2*s12^2*s24^2 + denom(1/2*s12)*mt^2*
      s12^2*s23*s24 + 1/2*denom(1/2*s12)*mt^2*s12^2*s23^2 + denom(1/2*s12)*
      mt^2*s12^2*s14*s24 + 3/2*denom(1/2*s12)*mt^2*s12^2*s14*s23 + 1/2*denom(1/
      2*s12)*mt^2*s12^2*s14^2 + 3/2*denom(1/2*s12)*mt^2*s12^2*s13*s24 + denom(
      1/2*s12)*mt^2*s12^2*s13*s23 + denom(1/2*s12)*mt^2*s12^2*s13*s14 + 1/2*
      denom(1/2*s12)*mt^2*s12^2*s13^2 + 1/4*denom(1/2*s12)*mt^2*s12^3*s24 + 1/
      4*denom(1/2*s12)*mt^2*s12^3*s23 + 1/4*denom(1/2*s12)*mt^2*s12^3*s14 + 1/
      4*denom(1/2*s12)*mt^2*s12^3*s13 + 1/2*denom(1/2*s12)*mt^2*mh^2*s14*s23^2
       + 1/2*denom(1/2*s12)*mt^2*mh^2*s14^2*s23 - 1/2*denom(1/2*s12)*mt^2*mh^2
      *s13*s24^2 - 1/2*denom(1/2*s12)*mt^2*mh^2*s13^2*s24 - 1/2*denom(1/2*s12)
      *mt^2*mh^2*s12*s24^2 - denom(1/2*s12)*mt^2*mh^2*s12*s23*s24 - 1/2*denom(
      1/2*s12)*mt^2*mh^2*s12*s23^2 - denom(1/2*s12)*mt^2*mh^2*s12*s14*s24 - 3/
      2*denom(1/2*s12)*mt^2*mh^2*s12*s14*s23 - 1/2*denom(1/2*s12)*mt^2*mh^2*
      s12*s14^2 - 3/2*denom(1/2*s12)*mt^2*mh^2*s12*s13*s24 - denom(1/2*s12)*
      mt^2*mh^2*s12*s13*s23 - denom(1/2*s12)*mt^2*mh^2*s12*s13*s14 - 1/2*
      denom(1/2*s12)*mt^2*mh^2*s12*s13^2 - 1/2*denom(1/2*s12)*mt^2*mh^2*s12^2*
      s24 - 1/2*denom(1/2*s12)*mt^2*mh^2*s12^2*s23 - 1/2*denom(1/2*s12)*mt^2*
      mh^2*s12^2*s14 - 1/2*denom(1/2*s12)*mt^2*mh^2*s12^2*s13 + 1/4*denom(1/2*
      s12)*mt^2*mh^4*s12*s24 + 1/4*denom(1/2*s12)*mt^2*mh^4*s12*s23 + 1/4*
      denom(1/2*s12)*mt^2*mh^4*s12*s14 + 1/4*denom(1/2*s12)*mt^2*mh^4*s12*s13
       - 1/4*denom(1/2*s12)*mt^4*s24^3 - 1/4*denom(1/2*s12)*mt^4*s23*s24^2 + 1/
      4*denom(1/2*s12)*mt^4*s23^2*s24 + 1/4*denom(1/2*s12)*mt^4*s23^3 - 1/4*
      denom(1/2*s12)*mt^4*s14*s24^2 + denom(1/2*s12)*mt^4*s14*s23*s24 + 9/4*
      denom(1/2*s12)*mt^4*s14*s23^2 + 1/4*denom(1/2*s12)*mt^4*s14^2*s24 + 9/4*
      denom(1/2*s12)*mt^4*s14^2*s23 + 1/4*denom(1/2*s12)*mt^4*s14^3 - 9/4*
      denom(1/2*s12)*mt^4*s13*s24^2 - denom(1/2*s12)*mt^4*s13*s23*s24 + 1/4*
      denom(1/2*s12)*mt^4*s13*s23^2 - denom(1/2*s12)*mt^4*s13*s14*s24 + denom(
      1/2*s12)*mt^4*s13*s14*s23 + 1/4*denom(1/2*s12)*mt^4*s13*s14^2 - 9/4*
      denom(1/2*s12)*mt^4*s13^2*s24 - 1/4*denom(1/2*s12)*mt^4*s13^2*s23 - 1/4*
      denom(1/2*s12)*mt^4*s13^2*s14 - 1/4*denom(1/2*s12)*mt^4*s13^3 - 5/4*
      denom(1/2*s12)*mt^4*s12*s24^2 - 2*denom(1/2*s12)*mt^4*s12*s23*s24 - 3/4*
      denom(1/2*s12)*mt^4*s12*s23^2 - 2*denom(1/2*s12)*mt^4*s12*s14*s24 - 
      denom(1/2*s12)*mt^4*s12*s14*s23 - 3/4*denom(1/2*s12)*mt^4*s12*s14^2 - 3*
      denom(1/2*s12)*mt^4*s12*s13*s24 - 2*denom(1/2*s12)*mt^4*s12*s13*s23 - 2*
      denom(1/2*s12)*mt^4*s12*s13*s14 - 5/4*denom(1/2*s12)*mt^4*s12*s13^2 - 3/
      2*denom(1/2*s12)*mt^4*s12^2*s24 - 3/2*denom(1/2*s12)*mt^4*s12^2*s23 - 3/
      2*denom(1/2*s12)*mt^4*s12^2*s14 - 3/2*denom(1/2*s12)*mt^4*s12^2*s13 - 1/
      2*denom(1/2*s12)*mt^4*s12^3 + 1/4*denom(1/2*s12)*mt^4*mh^2*s24^2 - 1/4*
      denom(1/2*s12)*mt^4*mh^2*s23^2 - denom(1/2*s12)*mt^4*mh^2*s14*s23 - 1/4*
      denom(1/2*s12)*mt^4*mh^2*s14^2 + denom(1/2*s12)*mt^4*mh^2*s13*s24 + 1/4*
      denom(1/2*s12)*mt^4*mh^2*s13^2 + 3/2*denom(1/2*s12)*mt^4*mh^2*s12*s24 + 
      3/2*denom(1/2*s12)*mt^4*mh^2*s12*s23 + 3/2*denom(1/2*s12)*mt^4*mh^2*s12*
      s14 + 3/2*denom(1/2*s12)*mt^4*mh^2*s12*s13 + denom(1/2*s12)*mt^4*mh^2*
      s12^2 - 1/2*denom(1/2*s12)*mt^4*mh^4*s12 + denom(1/2*s12)*mt^6*s24^2 - 
      denom(1/2*s12)*mt^6*s23^2 - 3*denom(1/2*s12)*mt^6*s14*s23 - denom(1/2*
      s12)*mt^6*s14^2 + 3*denom(1/2*s12)*mt^6*s13*s24 + denom(1/2*s12)*mt^6*
      s13^2 + 3/2*denom(1/2*s12)*mt^6*s12*s24 + 1/2*denom(1/2*s12)*mt^6*s12*
      s23 + 1/2*denom(1/2*s12)*mt^6*s12*s14 + 3/2*denom(1/2*s12)*mt^6*s12*s13
       + denom(1/2*s12)*mt^6*s12^2 - 1/2*denom(1/2*s12)*mt^6*mh^2*s24 + 1/2*
      denom(1/2*s12)*mt^6*mh^2*s23 + 1/2*denom(1/2*s12)*mt^6*mh^2*s14 - 1/2*
      denom(1/2*s12)*mt^6*mh^2*s13 - denom(1/2*s12)*mt^6*mh^2*s12 - denom(1/2*
      s12)*mt^8*s24 + denom(1/2*s12)*mt^8*s23 + denom(1/2*s12)*mt^8*s14 - 
      denom(1/2*s12)*mt^8*s13 + 1/16*denom(1/4*s12^2)*s14^3*s23^3 + 1/16*
      denom(1/4*s12^2)*s13*s14^2*s23^2*s24 - 1/16*denom(1/4*s12^2)*s13^2*s14*
      s23*s24^2 - 1/16*denom(1/4*s12^2)*s13^3*s24^3 - 1/16*denom(1/4*s12^2)*
      s12*s14^2*s23^2*s24 - 1/16*denom(1/4*s12^2)*s12*s14^2*s23^3 - 1/16*
      denom(1/4*s12^2)*s12*s14^3*s23^2 - 1/8*denom(1/4*s12^2)*s12*s13*s14*s23*
      s24^2 - 1/8*denom(1/4*s12^2)*s12*s13*s14*s23^2*s24 - 1/8*denom(1/4*s12^2
      )*s12*s13*s14^2*s23*s24 - 1/16*denom(1/4*s12^2)*s12*s13*s14^2*s23^2 - 1/
      16*denom(1/4*s12^2)*s12*s13^2*s24^3 - 1/16*denom(1/4*s12^2)*s12*s13^2*
      s23*s24^2 - 1/16*denom(1/4*s12^2)*s12*s13^2*s14*s24^2 - 1/8*denom(1/4*
      s12^2)*s12*s13^2*s14*s23*s24 - 1/16*denom(1/4*s12^2)*s12*s13^3*s24^2 - 1/
      16*denom(1/4*s12^2)*s12^2*s14^2*s23^2 - 1/8*denom(1/4*s12^2)*s12^2*s13*
      s14*s23*s24 - 1/16*denom(1/4*s12^2)*s12^2*s13^2*s24^2 + 1/16*denom(1/4*
      s12^2)*mh^2*s12*s14^2*s23^2 + 1/8*denom(1/4*s12^2)*mh^2*s12*s13*s14*s23*
      s24 + 1/16*denom(1/4*s12^2)*mh^2*s12*s13^2*s24^2 - 1/16*denom(1/4*s12^2)
      *mt^2*s14^2*s23^2*s24 - 3/16*denom(1/4*s12^2)*mt^2*s14^2*s23^3 - 3/16*
      denom(1/4*s12^2)*mt^2*s14^3*s23^2 + 1/8*denom(1/4*s12^2)*mt^2*s13*s14*
      s23*s24^2 - 1/8*denom(1/4*s12^2)*mt^2*s13*s14*s23^2*s24 - 1/8*denom(1/4*
      s12^2)*mt^2*s13*s14^2*s23*s24 - 1/16*denom(1/4*s12^2)*mt^2*s13*s14^2*
      s23^2 + 3/16*denom(1/4*s12^2)*mt^2*s13^2*s24^3 + 1/16*denom(1/4*s12^2)*
      mt^2*s13^2*s23*s24^2 + 1/16*denom(1/4*s12^2)*mt^2*s13^2*s14*s24^2 + 1/8*
      denom(1/4*s12^2)*mt^2*s13^2*s14*s23*s24 + 3/16*denom(1/4*s12^2)*mt^2*
      s13^3*s24^2 + 1/8*denom(1/4*s12^2)*mt^2*s12*s14*s23*s24^2 + 1/4*denom(1/
      4*s12^2)*mt^2*s12*s14*s23^2*s24 + 1/8*denom(1/4*s12^2)*mt^2*s12*s14*
      s23^3 + 1/4*denom(1/4*s12^2)*mt^2*s12*s14^2*s23*s24 + 1/4*denom(1/4*
      s12^2)*mt^2*s12*s14^2*s23^2 + 1/8*denom(1/4*s12^2)*mt^2*s12*s14^3*s23 + 
      1/8*denom(1/4*s12^2)*mt^2*s12*s13*s24^3 + 1/4*denom(1/4*s12^2)*mt^2*s12*
      s13*s23*s24^2 + 1/8*denom(1/4*s12^2)*mt^2*s12*s13*s23^2*s24 + 1/4*denom(
      1/4*s12^2)*mt^2*s12*s13*s14*s24^2 + 1/2*denom(1/4*s12^2)*mt^2*s12*s13*
      s14*s23*s24 + 1/4*denom(1/4*s12^2)*mt^2*s12*s13*s14*s23^2 + 1/8*denom(1/
      4*s12^2)*mt^2*s12*s13*s14^2*s24 + 1/4*denom(1/4*s12^2)*mt^2*s12*s13*
      s14^2*s23 + 1/4*denom(1/4*s12^2)*mt^2*s12*s13^2*s24^2 + 1/4*denom(1/4*
      s12^2)*mt^2*s12*s13^2*s23*s24 + 1/4*denom(1/4*s12^2)*mt^2*s12*s13^2*s14*
      s24 + 1/8*denom(1/4*s12^2)*mt^2*s12*s13^2*s14*s23 + 1/8*denom(1/4*s12^2)
      *mt^2*s12*s13^3*s24 + 1/8*denom(1/4*s12^2)*mt^2*s12^2*s14*s23*s24 + 1/8*
      denom(1/4*s12^2)*mt^2*s12^2*s14*s23^2 + 1/8*denom(1/4*s12^2)*mt^2*s12^2*
      s14^2*s23 + 1/8*denom(1/4*s12^2)*mt^2*s12^2*s13*s24^2 + 1/8*denom(1/4*
      s12^2)*mt^2*s12^2*s13*s23*s24 + 1/8*denom(1/4*s12^2)*mt^2*s12^2*s13*s14*
      s24 + 1/8*denom(1/4*s12^2)*mt^2*s12^2*s13*s14*s23 + 1/8*denom(1/4*s12^2)
      *mt^2*s12^2*s13^2*s24 - 1/8*denom(1/4*s12^2)*mt^2*mh^2*s12*s14*s23*s24
       - 1/8*denom(1/4*s12^2)*mt^2*mh^2*s12*s14*s23^2 - 1/8*denom(1/4*s12^2)*
      mt^2*mh^2*s12*s14^2*s23 - 1/8*denom(1/4*s12^2)*mt^2*mh^2*s12*s13*s24^2
       - 1/8*denom(1/4*s12^2)*mt^2*mh^2*s12*s13*s23*s24 - 1/8*denom(1/4*s12^2)
      *mt^2*mh^2*s12*s13*s14*s24 - 1/8*denom(1/4*s12^2)*mt^2*mh^2*s12*s13*s14*
      s23 - 1/8*denom(1/4*s12^2)*mt^2*mh^2*s12*s13^2*s24 - 1/16*denom(1/4*
      s12^2)*mt^4*s14*s23*s24^2 + 1/8*denom(1/4*s12^2)*mt^4*s14*s23^2*s24 + 3/
      16*denom(1/4*s12^2)*mt^4*s14*s23^3 + 1/8*denom(1/4*s12^2)*mt^4*s14^2*s23
      *s24 + 5/8*denom(1/4*s12^2)*mt^4*s14^2*s23^2 + 3/16*denom(1/4*s12^2)*
      mt^4*s14^3*s23 - 3/16*denom(1/4*s12^2)*mt^4*s13*s24^3 - 1/8*denom(1/4*
      s12^2)*mt^4*s13*s23*s24^2 + 1/16*denom(1/4*s12^2)*mt^4*s13*s23^2*s24 - 1/
      8*denom(1/4*s12^2)*mt^4*s13*s14*s24^2 + 1/8*denom(1/4*s12^2)*mt^4*s13*
      s14*s23^2 + 1/16*denom(1/4*s12^2)*mt^4*s13*s14^2*s24 + 1/8*denom(1/4*
      s12^2)*mt^4*s13*s14^2*s23 - 5/8*denom(1/4*s12^2)*mt^4*s13^2*s24^2 - 1/8*
      denom(1/4*s12^2)*mt^4*s13^2*s23*s24 - 1/8*denom(1/4*s12^2)*mt^4*s13^2*
      s14*s24 - 1/16*denom(1/4*s12^2)*mt^4*s13^2*s14*s23 - 3/16*denom(1/4*
      s12^2)*mt^4*s13^3*s24 - 1/16*denom(1/4*s12^2)*mt^4*s12*s24^3 - 3/16*
      denom(1/4*s12^2)*mt^4*s12*s23*s24^2 - 3/16*denom(1/4*s12^2)*mt^4*s12*
      s23^2*s24 - 1/16*denom(1/4*s12^2)*mt^4*s12*s23^3 - 3/16*denom(1/4*s12^2)
      *mt^4*s12*s14*s24^2 - 5/8*denom(1/4*s12^2)*mt^4*s12*s14*s23*s24 - 7/16*
      denom(1/4*s12^2)*mt^4*s12*s14*s23^2 - 3/16*denom(1/4*s12^2)*mt^4*s12*
      s14^2*s24 - 7/16*denom(1/4*s12^2)*mt^4*s12*s14^2*s23 - 1/16*denom(1/4*
      s12^2)*mt^4*s12*s14^3 - 7/16*denom(1/4*s12^2)*mt^4*s12*s13*s24^2 - 5/8*
      denom(1/4*s12^2)*mt^4*s12*s13*s23*s24 - 3/16*denom(1/4*s12^2)*mt^4*s12*
      s13*s23^2 - 5/8*denom(1/4*s12^2)*mt^4*s12*s13*s14*s24 - 5/8*denom(1/4*
      s12^2)*mt^4*s12*s13*s14*s23 - 3/16*denom(1/4*s12^2)*mt^4*s12*s13*s14^2
       - 7/16*denom(1/4*s12^2)*mt^4*s12*s13^2*s24 - 3/16*denom(1/4*s12^2)*mt^4
      *s12*s13^2*s23 - 3/16*denom(1/4*s12^2)*mt^4*s12*s13^2*s14 - 1/16*denom(1/
      4*s12^2)*mt^4*s12*s13^3 - 1/16*denom(1/4*s12^2)*mt^4*s12^2*s24^2 - 1/8*
      denom(1/4*s12^2)*mt^4*s12^2*s23*s24 - 1/16*denom(1/4*s12^2)*mt^4*s12^2*
      s23^2 - 1/8*denom(1/4*s12^2)*mt^4*s12^2*s14*s24 - 3/8*denom(1/4*s12^2)*
      mt^4*s12^2*s14*s23 - 1/16*denom(1/4*s12^2)*mt^4*s12^2*s14^2 - 3/8*denom(
      1/4*s12^2)*mt^4*s12^2*s13*s24 - 1/8*denom(1/4*s12^2)*mt^4*s12^2*s13*s23
       - 1/8*denom(1/4*s12^2)*mt^4*s12^2*s13*s14 - 1/16*denom(1/4*s12^2)*mt^4*
      s12^2*s13^2 + 1/16*denom(1/4*s12^2)*mt^4*mh^2*s12*s24^2 + 1/8*denom(1/4*
      s12^2)*mt^4*mh^2*s12*s23*s24 + 1/16*denom(1/4*s12^2)*mt^4*mh^2*s12*s23^2
       + 1/8*denom(1/4*s12^2)*mt^4*mh^2*s12*s14*s24 + 3/8*denom(1/4*s12^2)*
      mt^4*mh^2*s12*s14*s23 + 1/16*denom(1/4*s12^2)*mt^4*mh^2*s12*s14^2 + 3/8*
      denom(1/4*s12^2)*mt^4*mh^2*s12*s13*s24 + 1/8*denom(1/4*s12^2)*mt^4*mh^2*
      s12*s13*s23 + 1/8*denom(1/4*s12^2)*mt^4*mh^2*s12*s13*s14 + 1/16*denom(1/
      4*s12^2)*mt^4*mh^2*s12*s13^2 + 1/16*denom(1/4*s12^2)*mt^6*s24^3 + 1/16*
      denom(1/4*s12^2)*mt^6*s23*s24^2 - 1/16*denom(1/4*s12^2)*mt^6*s23^2*s24
       - 1/16*denom(1/4*s12^2)*mt^6*s23^3 + 1/16*denom(1/4*s12^2)*mt^6*s14*
      s24^2 - 1/8*denom(1/4*s12^2)*mt^6*s14*s23*s24 - 11/16*denom(1/4*s12^2)*
      mt^6*s14*s23^2 - 1/16*denom(1/4*s12^2)*mt^6*s14^2*s24 - 11/16*denom(1/4*
      s12^2)*mt^6*s14^2*s23 - 1/16*denom(1/4*s12^2)*mt^6*s14^3 + 11/16*denom(1/
      4*s12^2)*mt^6*s13*s24^2 + 1/8*denom(1/4*s12^2)*mt^6*s13*s23*s24 - 1/16*
      denom(1/4*s12^2)*mt^6*s13*s23^2 + 1/8*denom(1/4*s12^2)*mt^6*s13*s14*s24
       - 1/8*denom(1/4*s12^2)*mt^6*s13*s14*s23 - 1/16*denom(1/4*s12^2)*mt^6*
      s13*s14^2 + 11/16*denom(1/4*s12^2)*mt^6*s13^2*s24 + 1/16*denom(1/4*s12^2
      )*mt^6*s13^2*s23 + 1/16*denom(1/4*s12^2)*mt^6*s13^2*s14 + 1/16*denom(1/4
      *s12^2)*mt^6*s13^3 + 1/4*denom(1/4*s12^2)*mt^6*s12*s24^2 + 1/2*denom(1/4
      *s12^2)*mt^6*s12*s23*s24 + 1/4*denom(1/4*s12^2)*mt^6*s12*s23^2 + 1/2*
      denom(1/4*s12^2)*mt^6*s12*s14*s24 + 1/2*denom(1/4*s12^2)*mt^6*s12*s14*
      s23 + 1/4*denom(1/4*s12^2)*mt^6*s12*s14^2 + 1/2*denom(1/4*s12^2)*mt^6*
      s12*s13*s24 + 1/2*denom(1/4*s12^2)*mt^6*s12*s13*s23 + 1/2*denom(1/4*
      s12^2)*mt^6*s12*s13*s14 + 1/4*denom(1/4*s12^2)*mt^6*s12*s13^2 + 1/4*
      denom(1/4*s12^2)*mt^6*s12^2*s24 + 1/4*denom(1/4*s12^2)*mt^6*s12^2*s23 + 
      1/4*denom(1/4*s12^2)*mt^6*s12^2*s14 + 1/4*denom(1/4*s12^2)*mt^6*s12^2*
      s13 - 1/4*denom(1/4*s12^2)*mt^6*mh^2*s12*s24 - 1/4*denom(1/4*s12^2)*mt^6
      *mh^2*s12*s23 - 1/4*denom(1/4*s12^2)*mt^6*mh^2*s12*s14 - 1/4*denom(1/4*
      s12^2)*mt^6*mh^2*s12*s13 - 1/4*denom(1/4*s12^2)*mt^8*s24^2 + 1/4*denom(1/
      4*s12^2)*mt^8*s23^2 + 3/4*denom(1/4*s12^2)*mt^8*s14*s23 + 1/4*denom(1/4*
      s12^2)*mt^8*s14^2 - 3/4*denom(1/4*s12^2)*mt^8*s13*s24 - 1/4*denom(1/4*
      s12^2)*mt^8*s13^2 - 1/4*denom(1/4*s12^2)*mt^8*s12*s24 - 1/4*denom(1/4*
      s12^2)*mt^8*s12*s23 - 1/4*denom(1/4*s12^2)*mt^8*s12*s14 - 1/4*denom(1/4*
      s12^2)*mt^8*s12*s13 - 1/4*denom(1/4*s12^2)*mt^8*s12^2 + 1/4*denom(1/4*
      s12^2)*mt^8*mh^2*s12 + 1/4*denom(1/4*s12^2)*mt^10*s24 - 1/4*denom(1/4*
      s12^2)*mt^10*s23 - 1/4*denom(1/4*s12^2)*mt^10*s14 + 1/4*denom(1/4*s12^2)
      *mt^10*s13;
 
 .sort
id KMatrix(14,4) =   - 1/2*mt^2*s14*s23*s24 - 1/2*mt^2*s14*s23^2 - 1/2*mt^2*
      s14^2*s23 + 1/2*mt^2*s13*s24^2 + 1/2*mt^2*s13*s23*s24 + 1/2*mt^2*s13*s14
      *s24 - 1/2*mt^2*s13*s14*s23 + 1/2*mt^2*s13^2*s24 + 1/2*mt^2*s12*s24^2 + 
      mt^2*s12*s23*s24 + 1/2*mt^2*s12*s23^2 + mt^2*s12*s14*s24 + 1/2*mt^2*s12*
      s14*s23 + 1/2*mt^2*s12*s14^2 + 3/2*mt^2*s12*s13*s24 + mt^2*s12*s13*s23
       + mt^2*s12*s13*s14 + 1/2*mt^2*s12*s13^2 + mt^2*s12^2*s24 + mt^2*s12^2*
      s23 + mt^2*s12^2*s14 + mt^2*s12^2*s13 + 1/2*mt^2*s12^3 + 1/2*mt^2*mh^2*
      s14*s23 - 1/2*mt^2*mh^2*s13*s24 - mt^2*mh^2*s12*s24 - mt^2*mh^2*s12*s23
       - mt^2*mh^2*s12*s14 - mt^2*mh^2*s12*s13 - mt^2*mh^2*s12^2 + 1/2*mt^2*
      mh^4*s12 - 1/2*mt^4*s24^2 + 1/2*mt^4*s23^2 + 2*mt^4*s14*s23 + 1/2*mt^4*
      s14^2 - 2*mt^4*s13*s24 - 1/2*mt^4*s13^2 - 3/2*mt^4*s12*s24 - 1/2*mt^4*
      s12*s23 - 1/2*mt^4*s12*s14 - 3/2*mt^4*s12*s13 - mt^4*s12^2 + 1/2*mt^4*
      mh^2*s24 - 1/2*mt^4*mh^2*s23 - 1/2*mt^4*mh^2*s14 + 1/2*mt^4*mh^2*s13 + 
      mt^4*mh^2*s12 + mt^6*s24 - mt^6*s23 - mt^6*s14 + mt^6*s13 + 1/4*denom(1/
      2*s12)*s14^2*s23*s24^2 + 1/4*denom(1/2*s12)*s14^2*s23^2*s24 + 1/4*denom(
      1/2*s12)*s14^3*s23*s24 - 1/4*denom(1/2*s12)*s13*s14*s24^3 - 1/4*denom(1/
      2*s12)*s13*s14*s23*s24^2 - 1/4*denom(1/2*s12)*s13*s14^2*s24^2 + 1/4*
      denom(1/2*s12)*s13*s14^2*s23*s24 - 1/4*denom(1/2*s12)*s13^2*s14*s24^2 - 
      1/4*denom(1/2*s12)*s12*s14*s24^3 - 1/2*denom(1/2*s12)*s12*s14*s23*s24^2
       - 1/4*denom(1/2*s12)*s12*s14*s23^2*s24 - 1/2*denom(1/2*s12)*s12*s14^2*
      s24^2 - 1/4*denom(1/2*s12)*s12*s14^2*s23*s24 - 1/4*denom(1/2*s12)*s12*
      s14^3*s24 - 3/4*denom(1/2*s12)*s12*s13*s14*s24^2 - 1/2*denom(1/2*s12)*
      s12*s13*s14*s23*s24 - 1/2*denom(1/2*s12)*s12*s13*s14^2*s24 - 1/4*denom(1/
      2*s12)*s12*s13^2*s14*s24 - 1/2*denom(1/2*s12)*s12^2*s14*s24^2 - 1/2*
      denom(1/2*s12)*s12^2*s14*s23*s24 - 1/2*denom(1/2*s12)*s12^2*s14^2*s24 - 
      1/2*denom(1/2*s12)*s12^2*s13*s14*s24 - 1/4*denom(1/2*s12)*s12^3*s14*s24
       - 1/4*denom(1/2*s12)*mh^2*s14^2*s23*s24 + 1/4*denom(1/2*s12)*mh^2*s13*
      s14*s24^2 + 1/2*denom(1/2*s12)*mh^2*s12*s14*s24^2 + 1/2*denom(1/2*s12)*
      mh^2*s12*s14*s23*s24 + 1/2*denom(1/2*s12)*mh^2*s12*s14^2*s24 + 1/2*
      denom(1/2*s12)*mh^2*s12*s13*s14*s24 + 1/2*denom(1/2*s12)*mh^2*s12^2*s14*
      s24 - 1/4*denom(1/2*s12)*mh^4*s12*s14*s24 + 1/4*denom(1/2*s12)*mt^2*s14*
      s24^3 - 1/4*denom(1/2*s12)*mt^2*s14*s23*s24^2 - 1/2*denom(1/2*s12)*mt^2*
      s14*s23^2*s24 - 3/2*denom(1/2*s12)*mt^2*s14^2*s23*s24 - 1/2*denom(1/2*
      s12)*mt^2*s14^2*s23^2 - 1/4*denom(1/2*s12)*mt^2*s14^3*s24 - 1/4*denom(1/
      2*s12)*mt^2*s14^3*s23 + 1/4*denom(1/2*s12)*mt^2*s13*s24^3 + 1/4*denom(1/
      2*s12)*mt^2*s13*s23*s24^2 + 3/2*denom(1/2*s12)*mt^2*s13*s14*s24^2 + 1/4*
      denom(1/2*s12)*mt^2*s13*s14^2*s24 - 1/4*denom(1/2*s12)*mt^2*s13*s14^2*
      s23 + 1/2*denom(1/2*s12)*mt^2*s13^2*s24^2 + 1/2*denom(1/2*s12)*mt^2*
      s13^2*s14*s24 + 1/4*denom(1/2*s12)*mt^2*s12*s24^3 + 1/2*denom(1/2*s12)*
      mt^2*s12*s23*s24^2 + 1/4*denom(1/2*s12)*mt^2*s12*s23^2*s24 + 3/2*denom(1/
      2*s12)*mt^2*s12*s14*s24^2 + 5/4*denom(1/2*s12)*mt^2*s12*s14*s23*s24 + 1/
      2*denom(1/2*s12)*mt^2*s12*s14*s23^2 + denom(1/2*s12)*mt^2*s12*s14^2*s24
       + 1/2*denom(1/2*s12)*mt^2*s12*s14^2*s23 + 1/4*denom(1/2*s12)*mt^2*s12*
      s14^3 + denom(1/2*s12)*mt^2*s12*s13*s24^2 + 3/4*denom(1/2*s12)*mt^2*s12*
      s13*s23*s24 + 9/4*denom(1/2*s12)*mt^2*s12*s13*s14*s24 + 3/4*denom(1/2*
      s12)*mt^2*s12*s13*s14*s23 + 1/2*denom(1/2*s12)*mt^2*s12*s13*s14^2 + 1/2*
      denom(1/2*s12)*mt^2*s12*s13^2*s24 + 1/4*denom(1/2*s12)*mt^2*s12*s13^2*
      s14 + 1/2*denom(1/2*s12)*mt^2*s12^2*s24^2 + 1/2*denom(1/2*s12)*mt^2*
      s12^2*s23*s24 + 3/2*denom(1/2*s12)*mt^2*s12^2*s14*s24 + 3/4*denom(1/2*
      s12)*mt^2*s12^2*s14*s23 + 1/2*denom(1/2*s12)*mt^2*s12^2*s14^2 + 3/4*
      denom(1/2*s12)*mt^2*s12^2*s13*s24 + 1/2*denom(1/2*s12)*mt^2*s12^2*s13*
      s14 + 1/4*denom(1/2*s12)*mt^2*s12^3*s24 + 1/4*denom(1/2*s12)*mt^2*s12^3*
      s14 - 1/4*denom(1/2*s12)*mt^2*mh^2*s14*s24^2 + 1/2*denom(1/2*s12)*mt^2*
      mh^2*s14*s23*s24 + 1/4*denom(1/2*s12)*mt^2*mh^2*s14^2*s24 + 1/4*denom(1/
      2*s12)*mt^2*mh^2*s14^2*s23 - 1/4*denom(1/2*s12)*mt^2*mh^2*s13*s24^2 - 1/
      2*denom(1/2*s12)*mt^2*mh^2*s13*s14*s24 - 1/2*denom(1/2*s12)*mt^2*mh^2*
      s12*s24^2 - 1/2*denom(1/2*s12)*mt^2*mh^2*s12*s23*s24 - 3/2*denom(1/2*s12
      )*mt^2*mh^2*s12*s14*s24 - 3/4*denom(1/2*s12)*mt^2*mh^2*s12*s14*s23 - 1/2
      *denom(1/2*s12)*mt^2*mh^2*s12*s14^2 - 3/4*denom(1/2*s12)*mt^2*mh^2*s12*
      s13*s24 - 1/2*denom(1/2*s12)*mt^2*mh^2*s12*s13*s14 - 1/2*denom(1/2*s12)*
      mt^2*mh^2*s12^2*s24 - 1/2*denom(1/2*s12)*mt^2*mh^2*s12^2*s14 + 1/4*
      denom(1/2*s12)*mt^2*mh^4*s12*s24 + 1/4*denom(1/2*s12)*mt^2*mh^4*s12*s14
       - 1/4*denom(1/2*s12)*mt^4*s24^3 + 1/4*denom(1/2*s12)*mt^4*s23^2*s24 - 3/
      4*denom(1/2*s12)*mt^4*s14*s24^2 + 7/4*denom(1/2*s12)*mt^4*s14*s23*s24 + 
      denom(1/2*s12)*mt^4*s14*s23^2 + 3/4*denom(1/2*s12)*mt^4*s14^2*s24 + 7/4*
      denom(1/2*s12)*mt^4*s14^2*s23 + 1/4*denom(1/2*s12)*mt^4*s14^3 - 7/4*
      denom(1/2*s12)*mt^4*s13*s24^2 - 1/4*denom(1/2*s12)*mt^4*s13*s23*s24 - 7/
      4*denom(1/2*s12)*mt^4*s13*s14*s24 + 1/4*denom(1/2*s12)*mt^4*s13*s14*s23
       - denom(1/2*s12)*mt^4*s13^2*s24 - 1/4*denom(1/2*s12)*mt^4*s13^2*s14 - 5/
      4*denom(1/2*s12)*mt^4*s12*s24^2 - 5/4*denom(1/2*s12)*mt^4*s12*s23*s24 - 
      1/2*denom(1/2*s12)*mt^4*s12*s23^2 - 2*denom(1/2*s12)*mt^4*s12*s14*s24 - 
      denom(1/2*s12)*mt^4*s12*s14*s23 - 3/4*denom(1/2*s12)*mt^4*s12*s14^2 - 2*
      denom(1/2*s12)*mt^4*s12*s13*s24 - denom(1/2*s12)*mt^4*s12*s13*s23 - 7/4*
      denom(1/2*s12)*mt^4*s12*s13*s14 - 1/2*denom(1/2*s12)*mt^4*s12*s13^2 - 5/
      4*denom(1/2*s12)*mt^4*s12^2*s24 - 3/4*denom(1/2*s12)*mt^4*s12^2*s23 - 5/
      4*denom(1/2*s12)*mt^4*s12^2*s14 - 3/4*denom(1/2*s12)*mt^4*s12^2*s13 - 1/
      4*denom(1/2*s12)*mt^4*s12^3 + 1/4*denom(1/2*s12)*mt^4*mh^2*s24^2 - 1/4*
      denom(1/2*s12)*mt^4*mh^2*s23*s24 - 1/2*denom(1/2*s12)*mt^4*mh^2*s14*s23
       - 1/4*denom(1/2*s12)*mt^4*mh^2*s14^2 + 1/2*denom(1/2*s12)*mt^4*mh^2*s13
      *s24 + 1/4*denom(1/2*s12)*mt^4*mh^2*s13*s14 + 5/4*denom(1/2*s12)*mt^4*
      mh^2*s12*s24 + 3/4*denom(1/2*s12)*mt^4*mh^2*s12*s23 + 5/4*denom(1/2*s12)
      *mt^4*mh^2*s12*s14 + 3/4*denom(1/2*s12)*mt^4*mh^2*s12*s13 + 1/2*denom(1/
      2*s12)*mt^4*mh^2*s12^2 - 1/4*denom(1/2*s12)*mt^4*mh^4*s12 + denom(1/2*
      s12)*mt^6*s24^2 - 1/2*denom(1/2*s12)*mt^6*s23*s24 - 1/2*denom(1/2*s12)*
      mt^6*s23^2 - 5/2*denom(1/2*s12)*mt^6*s14*s23 - denom(1/2*s12)*mt^6*s14^2
       + 5/2*denom(1/2*s12)*mt^6*s13*s24 + 1/2*denom(1/2*s12)*mt^6*s13*s14 + 1/
      2*denom(1/2*s12)*mt^6*s13^2 + 5/4*denom(1/2*s12)*mt^6*s12*s24 + 3/4*
      denom(1/2*s12)*mt^6*s12*s23 + 3/4*denom(1/2*s12)*mt^6*s12*s14 + 5/4*
      denom(1/2*s12)*mt^6*s12*s13 + denom(1/2*s12)*mt^6*s12^2 - 1/4*denom(1/2*
      s12)*mt^6*mh^2*s24 + 1/4*denom(1/2*s12)*mt^6*mh^2*s23 + 1/4*denom(1/2*
      s12)*mt^6*mh^2*s14 - 1/4*denom(1/2*s12)*mt^6*mh^2*s13 - denom(1/2*s12)*
      mt^6*mh^2*s12 - denom(1/2*s12)*mt^8*s24 + denom(1/2*s12)*mt^8*s23 + 
      denom(1/2*s12)*mt^8*s14 - denom(1/2*s12)*mt^8*s13 + 1/8*denom(1/4*s12^2)
      *s14^3*s23^2*s24 - 1/8*denom(1/4*s12^2)*s13^2*s14*s24^3 - 1/8*denom(1/4*
      s12^2)*s12*s14^2*s23*s24^2 - 1/8*denom(1/4*s12^2)*s12*s14^2*s23^2*s24 - 
      1/8*denom(1/4*s12^2)*s12*s14^3*s23*s24 - 1/8*denom(1/4*s12^2)*s12*s13*
      s14*s24^3 - 1/8*denom(1/4*s12^2)*s12*s13*s14*s23*s24^2 - 1/8*denom(1/4*
      s12^2)*s12*s13*s14^2*s24^2 - 1/8*denom(1/4*s12^2)*s12*s13*s14^2*s23*s24
       - 1/8*denom(1/4*s12^2)*s12*s13^2*s14*s24^2 - 1/8*denom(1/4*s12^2)*s12^2
      *s14^2*s23*s24 - 1/8*denom(1/4*s12^2)*s12^2*s13*s14*s24^2 + 1/8*denom(1/
      4*s12^2)*mh^2*s12*s14^2*s23*s24 + 1/8*denom(1/4*s12^2)*mh^2*s12*s13*s14*
      s24^2 - 3/8*denom(1/4*s12^2)*mt^2*s14^2*s23^2*s24 - 1/4*denom(1/4*s12^2)
      *mt^2*s14^3*s23*s24 - 1/8*denom(1/4*s12^2)*mt^2*s14^3*s23^2 + 1/4*denom(
      1/4*s12^2)*mt^2*s13*s14*s24^3 + 1/8*denom(1/4*s12^2)*mt^2*s13^2*s24^3 + 
      3/8*denom(1/4*s12^2)*mt^2*s13^2*s14*s24^2 + 1/8*denom(1/4*s12^2)*mt^2*
      s12*s14*s24^3 + 3/8*denom(1/4*s12^2)*mt^2*s12*s14*s23*s24^2 + 1/4*denom(
      1/4*s12^2)*mt^2*s12*s14*s23^2*s24 + 1/4*denom(1/4*s12^2)*mt^2*s12*s14^2*
      s24^2 + 1/2*denom(1/4*s12^2)*mt^2*s12*s14^2*s23*s24 + 1/8*denom(1/4*
      s12^2)*mt^2*s12*s14^2*s23^2 + 1/8*denom(1/4*s12^2)*mt^2*s12*s14^3*s24 + 
      1/8*denom(1/4*s12^2)*mt^2*s12*s14^3*s23 + 1/8*denom(1/4*s12^2)*mt^2*s12*
      s13*s24^3 + 1/8*denom(1/4*s12^2)*mt^2*s12*s13*s23*s24^2 + 1/2*denom(1/4*
      s12^2)*mt^2*s12*s13*s14*s24^2 + 1/2*denom(1/4*s12^2)*mt^2*s12*s13*s14*
      s23*s24 + 3/8*denom(1/4*s12^2)*mt^2*s12*s13*s14^2*s24 + 1/8*denom(1/4*
      s12^2)*mt^2*s12*s13*s14^2*s23 + 1/8*denom(1/4*s12^2)*mt^2*s12*s13^2*
      s24^2 + 1/4*denom(1/4*s12^2)*mt^2*s12*s13^2*s14*s24 + 1/8*denom(1/4*
      s12^2)*mt^2*s12^2*s14*s24^2 + 1/4*denom(1/4*s12^2)*mt^2*s12^2*s14*s23*
      s24 + 1/8*denom(1/4*s12^2)*mt^2*s12^2*s14^2*s24 + 1/8*denom(1/4*s12^2)*
      mt^2*s12^2*s14^2*s23 + 1/8*denom(1/4*s12^2)*mt^2*s12^2*s13*s24^2 + 1/4*
      denom(1/4*s12^2)*mt^2*s12^2*s13*s14*s24 - 1/8*denom(1/4*s12^2)*mt^2*mh^2
      *s12*s14*s24^2 - 1/4*denom(1/4*s12^2)*mt^2*mh^2*s12*s14*s23*s24 - 1/8*
      denom(1/4*s12^2)*mt^2*mh^2*s12*s14^2*s24 - 1/8*denom(1/4*s12^2)*mt^2*
      mh^2*s12*s14^2*s23 - 1/8*denom(1/4*s12^2)*mt^2*mh^2*s12*s13*s24^2 - 1/4*
      denom(1/4*s12^2)*mt^2*mh^2*s12*s13*s14*s24 - 1/8*denom(1/4*s12^2)*mt^4*
      s14*s24^3 + 3/8*denom(1/4*s12^2)*mt^4*s14*s23^2*s24 + 3/4*denom(1/4*
      s12^2)*mt^4*s14^2*s23*s24 + 3/8*denom(1/4*s12^2)*mt^4*s14^2*s23^2 + 1/8*
      denom(1/4*s12^2)*mt^4*s14^3*s24 + 1/4*denom(1/4*s12^2)*mt^4*s14^3*s23 - 
      1/4*denom(1/4*s12^2)*mt^4*s13*s24^3 - 3/4*denom(1/4*s12^2)*mt^4*s13*s14*
      s24^2 - 3/8*denom(1/4*s12^2)*mt^4*s13^2*s24^2 - 3/8*denom(1/4*s12^2)*
      mt^4*s13^2*s14*s24 - 1/8*denom(1/4*s12^2)*mt^4*s12*s24^3 - 1/4*denom(1/4
      *s12^2)*mt^4*s12*s23*s24^2 - 1/8*denom(1/4*s12^2)*mt^4*s12*s23^2*s24 - 5/
      8*denom(1/4*s12^2)*mt^4*s12*s14*s24^2 - 7/8*denom(1/4*s12^2)*mt^4*s12*
      s14*s23*s24 - 1/4*denom(1/4*s12^2)*mt^4*s12*s14*s23^2 - 5/8*denom(1/4*
      s12^2)*mt^4*s12*s14^2*s24 - 3/8*denom(1/4*s12^2)*mt^4*s12*s14^2*s23 - 1/
      8*denom(1/4*s12^2)*mt^4*s12*s14^3 - 3/8*denom(1/4*s12^2)*mt^4*s12*s13*
      s24^2 - 3/8*denom(1/4*s12^2)*mt^4*s12*s13*s23*s24 - 7/8*denom(1/4*s12^2)
      *mt^4*s12*s13*s14*s24 - 3/8*denom(1/4*s12^2)*mt^4*s12*s13*s14*s23 - 1/4*
      denom(1/4*s12^2)*mt^4*s12*s13*s14^2 - 1/4*denom(1/4*s12^2)*mt^4*s12*
      s13^2*s24 - 1/8*denom(1/4*s12^2)*mt^4*s12*s13^2*s14 - 1/8*denom(1/4*
      s12^2)*mt^4*s12^2*s24^2 - 1/8*denom(1/4*s12^2)*mt^4*s12^2*s23*s24 - 1/2*
      denom(1/4*s12^2)*mt^4*s12^2*s14*s24 - 1/4*denom(1/4*s12^2)*mt^4*s12^2*
      s14*s23 - 1/8*denom(1/4*s12^2)*mt^4*s12^2*s14^2 - 1/4*denom(1/4*s12^2)*
      mt^4*s12^2*s13*s24 - 1/8*denom(1/4*s12^2)*mt^4*s12^2*s13*s14 + 1/8*
      denom(1/4*s12^2)*mt^4*mh^2*s12*s24^2 + 1/8*denom(1/4*s12^2)*mt^4*mh^2*
      s12*s23*s24 + 1/2*denom(1/4*s12^2)*mt^4*mh^2*s12*s14*s24 + 1/4*denom(1/4
      *s12^2)*mt^4*mh^2*s12*s14*s23 + 1/8*denom(1/4*s12^2)*mt^4*mh^2*s12*s14^2
       + 1/4*denom(1/4*s12^2)*mt^4*mh^2*s12*s13*s24 + 1/8*denom(1/4*s12^2)*
      mt^4*mh^2*s12*s13*s14 + 1/8*denom(1/4*s12^2)*mt^6*s24^3 - 1/8*denom(1/4*
      s12^2)*mt^6*s23^2*s24 + 3/8*denom(1/4*s12^2)*mt^6*s14*s24^2 - 3/4*denom(
      1/4*s12^2)*mt^6*s14*s23*s24 - 3/8*denom(1/4*s12^2)*mt^6*s14*s23^2 - 3/8*
      denom(1/4*s12^2)*mt^6*s14^2*s24 - 3/4*denom(1/4*s12^2)*mt^6*s14^2*s23 - 
      1/8*denom(1/4*s12^2)*mt^6*s14^3 + 3/4*denom(1/4*s12^2)*mt^6*s13*s24^2 + 
      3/4*denom(1/4*s12^2)*mt^6*s13*s14*s24 + 3/8*denom(1/4*s12^2)*mt^6*s13^2*
      s24 + 1/8*denom(1/4*s12^2)*mt^6*s13^2*s14 + 3/8*denom(1/4*s12^2)*mt^6*
      s12*s24^2 + 1/2*denom(1/4*s12^2)*mt^6*s12*s23*s24 + 1/8*denom(1/4*s12^2)
      *mt^6*s12*s23^2 + 3/4*denom(1/4*s12^2)*mt^6*s12*s14*s24 + 1/2*denom(1/4*
      s12^2)*mt^6*s12*s14*s23 + 3/8*denom(1/4*s12^2)*mt^6*s12*s14^2 + 1/2*
      denom(1/4*s12^2)*mt^6*s12*s13*s24 + 1/4*denom(1/4*s12^2)*mt^6*s12*s13*
      s23 + 1/2*denom(1/4*s12^2)*mt^6*s12*s13*s14 + 1/8*denom(1/4*s12^2)*mt^6*
      s12*s13^2 + 3/8*denom(1/4*s12^2)*mt^6*s12^2*s24 + 1/8*denom(1/4*s12^2)*
      mt^6*s12^2*s23 + 3/8*denom(1/4*s12^2)*mt^6*s12^2*s14 + 1/8*denom(1/4*
      s12^2)*mt^6*s12^2*s13 - 3/8*denom(1/4*s12^2)*mt^6*mh^2*s12*s24 - 1/8*
      denom(1/4*s12^2)*mt^6*mh^2*s12*s23 - 3/8*denom(1/4*s12^2)*mt^6*mh^2*s12*
      s14 - 1/8*denom(1/4*s12^2)*mt^6*mh^2*s12*s13 - 3/8*denom(1/4*s12^2)*mt^8
      *s24^2 + 1/4*denom(1/4*s12^2)*mt^8*s23*s24 + 1/8*denom(1/4*s12^2)*mt^8*
      s23^2 + 3/4*denom(1/4*s12^2)*mt^8*s14*s23 + 3/8*denom(1/4*s12^2)*mt^8*
      s14^2 - 3/4*denom(1/4*s12^2)*mt^8*s13*s24 - 1/4*denom(1/4*s12^2)*mt^8*
      s13*s14 - 1/8*denom(1/4*s12^2)*mt^8*s13^2 - 1/4*denom(1/4*s12^2)*mt^8*
      s12*s24 - 1/4*denom(1/4*s12^2)*mt^8*s12*s23 - 1/4*denom(1/4*s12^2)*mt^8*
      s12*s14 - 1/4*denom(1/4*s12^2)*mt^8*s12*s13 - 1/4*denom(1/4*s12^2)*mt^8*
      s12^2 + 1/4*denom(1/4*s12^2)*mt^8*mh^2*s12 + 1/4*denom(1/4*s12^2)*mt^10*
      s24 - 1/4*denom(1/4*s12^2)*mt^10*s23 - 1/4*denom(1/4*s12^2)*mt^10*s14 + 
      1/4*denom(1/4*s12^2)*mt^10*s13;
 
 .sort
id KMatrix(14,5) =   - mt^3*s12*s14*s24 - mt^3*s12*s14*s23 - mt^3*s12*s14^2 - 
      mt^3*s12*s13*s14 - mt^3*s12^2*s14 + mt^3*mh^2*s12*s14 + mt^5*s12*s24 + 
      mt^5*s12*s23 + 3*mt^5*s12*s14 + mt^5*s12*s13 + mt^5*s12^2 - mt^5*mh^2*
      s12 - 2*mt^7*s12 + 1/2*denom(1/2*s12)*mt*s12*s13*s14*s23*s24 + 1/2*
      denom(1/2*s12)*mt*s12*s13*s14*s23^2 + 1/2*denom(1/2*s12)*mt*s12*s13*
      s14^2*s23 + 1/2*denom(1/2*s12)*mt*s12*s13^2*s14*s23 + 1/2*denom(1/2*s12)
      *mt*s12^2*s13*s14*s23 - 1/2*denom(1/2*s12)*mt*mh^2*s12*s13*s14*s23 - 1/2
      *denom(1/2*s12)*mt^3*s12*s14*s23*s24 - 1/2*denom(1/2*s12)*mt^3*s12*s14*
      s23^2 - denom(1/2*s12)*mt^3*s12*s14^2*s23 - 1/2*denom(1/2*s12)*mt^3*s12*
      s13*s23*s24 - 1/2*denom(1/2*s12)*mt^3*s12*s13*s23^2 - denom(1/2*s12)*
      mt^3*s12*s13*s14*s24 - 5/2*denom(1/2*s12)*mt^3*s12*s13*s14*s23 - 1/2*
      denom(1/2*s12)*mt^3*s12*s13*s14^2 - 1/2*denom(1/2*s12)*mt^3*s12*s13^2*
      s23 - 1/2*denom(1/2*s12)*mt^3*s12*s13^2*s14 - 1/2*denom(1/2*s12)*mt^3*
      s12^2*s14*s23 - 1/2*denom(1/2*s12)*mt^3*s12^2*s13*s23 - 1/2*denom(1/2*
      s12)*mt^3*s12^2*s13*s14 + 1/2*denom(1/2*s12)*mt^3*mh^2*s12*s14*s23 + 1/2
      *denom(1/2*s12)*mt^3*mh^2*s12*s13*s23 + 1/2*denom(1/2*s12)*mt^3*mh^2*s12
      *s13*s14 + 1/2*denom(1/2*s12)*mt^5*s12*s23*s24 + 1/2*denom(1/2*s12)*mt^5
      *s12*s23^2 + denom(1/2*s12)*mt^5*s12*s14*s24 + 3*denom(1/2*s12)*mt^5*s12
      *s14*s23 + denom(1/2*s12)*mt^5*s12*s14^2 + denom(1/2*s12)*mt^5*s12*s13*
      s24 + 2*denom(1/2*s12)*mt^5*s12*s13*s23 + 5/2*denom(1/2*s12)*mt^5*s12*
      s13*s14 + 1/2*denom(1/2*s12)*mt^5*s12*s13^2 + 1/2*denom(1/2*s12)*mt^5*
      s12^2*s23 + 1/2*denom(1/2*s12)*mt^5*s12^2*s14 + 1/2*denom(1/2*s12)*mt^5*
      s12^2*s13 - 1/2*denom(1/2*s12)*mt^5*mh^2*s12*s23 - 1/2*denom(1/2*s12)*
      mt^5*mh^2*s12*s14 - 1/2*denom(1/2*s12)*mt^5*mh^2*s12*s13 - denom(1/2*s12
      )*mt^7*s12*s24 - 2*denom(1/2*s12)*mt^7*s12*s23 - 3*denom(1/2*s12)*mt^7*
      s12*s14 - 2*denom(1/2*s12)*mt^7*s12*s13 - 1/2*denom(1/2*s12)*mt^7*s12^2
       + 1/2*denom(1/2*s12)*mt^7*mh^2*s12 + 2*denom(1/2*s12)*mt^9*s12 + 1/4*
      denom(1/4*s12^2)*mt*s12*s13*s14^2*s23^2 + 1/4*denom(1/4*s12^2)*mt*s12*
      s13^2*s14*s23*s24 - 1/4*denom(1/4*s12^2)*mt^3*s12*s14^2*s23^2 - 1/2*
      denom(1/4*s12^2)*mt^3*s12*s13*s14*s23*s24 - 1/2*denom(1/4*s12^2)*mt^3*
      s12*s13*s14*s23^2 - 1/2*denom(1/4*s12^2)*mt^3*s12*s13*s14^2*s23 - 1/4*
      denom(1/4*s12^2)*mt^3*s12*s13^2*s23*s24 - 1/4*denom(1/4*s12^2)*mt^3*s12*
      s13^2*s14*s24 - 1/4*denom(1/4*s12^2)*mt^3*s12*s13^2*s14*s23 + 1/4*denom(
      1/4*s12^2)*mt^5*s12*s14*s23*s24 + 1/2*denom(1/4*s12^2)*mt^5*s12*s14*
      s23^2 + 1/2*denom(1/4*s12^2)*mt^5*s12*s14^2*s23 + 1/2*denom(1/4*s12^2)*
      mt^5*s12*s13*s23*s24 + 1/4*denom(1/4*s12^2)*mt^5*s12*s13*s23^2 + 1/2*
      denom(1/4*s12^2)*mt^5*s12*s13*s14*s24 + 3/2*denom(1/4*s12^2)*mt^5*s12*
      s13*s14*s23 + 1/4*denom(1/4*s12^2)*mt^5*s12*s13*s14^2 + 1/4*denom(1/4*
      s12^2)*mt^5*s12*s13^2*s24 + 1/4*denom(1/4*s12^2)*mt^5*s12*s13^2*s23 + 1/
      4*denom(1/4*s12^2)*mt^5*s12*s13^2*s14 - 1/4*denom(1/4*s12^2)*mt^7*s12*
      s23*s24 - 1/4*denom(1/4*s12^2)*mt^7*s12*s23^2 - 1/4*denom(1/4*s12^2)*
      mt^7*s12*s14*s24 - 5/4*denom(1/4*s12^2)*mt^7*s12*s14*s23 - 1/4*denom(1/4
      *s12^2)*mt^7*s12*s14^2 - 1/2*denom(1/4*s12^2)*mt^7*s12*s13*s24 - denom(1/
      4*s12^2)*mt^7*s12*s13*s23 - denom(1/4*s12^2)*mt^7*s12*s13*s14 - 1/4*
      denom(1/4*s12^2)*mt^7*s12*s13^2 + 1/4*denom(1/4*s12^2)*mt^9*s12*s24 + 3/
      4*denom(1/4*s12^2)*mt^9*s12*s23 + 3/4*denom(1/4*s12^2)*mt^9*s12*s14 + 3/
      4*denom(1/4*s12^2)*mt^9*s12*s13 - 1/2*denom(1/4*s12^2)*mt^11*s12;
 
 .sort
id KMatrix(14,6) =  2*mt^5*s12*s14 - 2*mt^7*s12 - denom(1/2*s12)*mt^3*s12*
      s14^2*s24 - denom(1/2*s12)*mt^3*s12*s13*s14*s23 + 2*denom(1/2*s12)*mt^5*
      s12*s14*s24 + denom(1/2*s12)*mt^5*s12*s14*s23 + denom(1/2*s12)*mt^5*s12*
      s14^2 + denom(1/2*s12)*mt^5*s12*s13*s23 + denom(1/2*s12)*mt^5*s12*s13*
      s14 - denom(1/2*s12)*mt^7*s12*s24 - denom(1/2*s12)*mt^7*s12*s23 - 3*
      denom(1/2*s12)*mt^7*s12*s14 - denom(1/2*s12)*mt^7*s12*s13 + 2*denom(1/2*
      s12)*mt^9*s12 + 1/2*denom(1/4*s12^2)*mt*s12*s13*s14^2*s23*s24 - 1/2*
      denom(1/4*s12^2)*mt^3*s12*s14^2*s23*s24 - denom(1/4*s12^2)*mt^3*s12*s13*
      s14*s23*s24 - 1/2*denom(1/4*s12^2)*mt^3*s12*s13*s14^2*s24 - 1/2*denom(1/
      4*s12^2)*mt^3*s12*s13*s14^2*s23 + denom(1/4*s12^2)*mt^5*s12*s14*s23*s24
       + 1/2*denom(1/4*s12^2)*mt^5*s12*s14^2*s24 + 1/2*denom(1/4*s12^2)*mt^5*
      s12*s14^2*s23 + 1/2*denom(1/4*s12^2)*mt^5*s12*s13*s23*s24 + denom(1/4*
      s12^2)*mt^5*s12*s13*s14*s24 + denom(1/4*s12^2)*mt^5*s12*s13*s14*s23 + 1/
      2*denom(1/4*s12^2)*mt^5*s12*s13*s14^2 - 1/2*denom(1/4*s12^2)*mt^7*s12*
      s23*s24 - denom(1/4*s12^2)*mt^7*s12*s14*s24 - denom(1/4*s12^2)*mt^7*s12*
      s14*s23 - 1/2*denom(1/4*s12^2)*mt^7*s12*s14^2 - 1/2*denom(1/4*s12^2)*
      mt^7*s12*s13*s24 - 1/2*denom(1/4*s12^2)*mt^7*s12*s13*s23 - denom(1/4*
      s12^2)*mt^7*s12*s13*s14 + 1/2*denom(1/4*s12^2)*mt^9*s12*s24 + 1/2*denom(
      1/4*s12^2)*mt^9*s12*s23 + denom(1/4*s12^2)*mt^9*s12*s14 + 1/2*denom(1/4*
      s12^2)*mt^9*s12*s13 - 1/2*denom(1/4*s12^2)*mt^11*s12;
 
 .sort
id KMatrix(14,7) =  1/2*mt*s12*s14*s24^2 + mt*s12*s14*s23*s24 + 1/2*mt*s12*s14
      *s23^2 + mt*s12*s14^2*s24 + mt*s12*s14^2*s23 + 1/2*mt*s12*s14^3 + mt*s12
      *s13*s14*s24 + mt*s12*s13*s14*s23 + mt*s12*s13*s14^2 + 1/2*mt*s12*s13^2*
      s14 + mt*s12^2*s14*s24 + mt*s12^2*s14*s23 + mt*s12^2*s14^2 + mt*s12^2*
      s13*s14 + 1/2*mt*s12^3*s14 - mt*mh^2*s12*s14*s24 - mt*mh^2*s12*s14*s23
       - mt*mh^2*s12*s14^2 - mt*mh^2*s12*s13*s14 - mt*mh^2*s12^2*s14 + 1/2*mt*
      mh^4*s12*s14 - 1/2*mt^3*s12*s24^2 - mt^3*s12*s23*s24 - 1/2*mt^3*s12*
      s23^2 - 3*mt^3*s12*s14*s24 - 3*mt^3*s12*s14*s23 - 5/2*mt^3*s12*s14^2 - 
      mt^3*s12*s13*s24 - mt^3*s12*s13*s23 - 3*mt^3*s12*s13*s14 - 1/2*mt^3*s12*
      s13^2 - mt^3*s12^2*s24 - mt^3*s12^2*s23 - 3*mt^3*s12^2*s14 - mt^3*s12^2*
      s13 - 1/2*mt^3*s12^3 + mt^3*mh^2*s12*s24 + mt^3*mh^2*s12*s23 + 3*mt^3*
      mh^2*s12*s14 + mt^3*mh^2*s12*s13 + mt^3*mh^2*s12^2 - 1/2*mt^3*mh^4*s12
       + 2*mt^5*s12*s24 + 2*mt^5*s12*s23 + 4*mt^5*s12*s14 + 2*mt^5*s12*s13 + 2
      *mt^5*s12^2 - 2*mt^5*mh^2*s12 - 2*mt^7*s12 + 1/2*denom(1/2*s12)*mt*s12*
      s14^2*s23*s24 + 1/2*denom(1/2*s12)*mt*s12*s14^2*s23^2 + 1/2*denom(1/2*
      s12)*mt*s12*s14^3*s23 + 1/2*denom(1/2*s12)*mt*s12*s13*s14*s24^2 + 1/2*
      denom(1/2*s12)*mt*s12*s13*s14*s23*s24 + 1/2*denom(1/2*s12)*mt*s12*s13*
      s14^2*s24 + 1/2*denom(1/2*s12)*mt*s12*s13*s14^2*s23 + 1/2*denom(1/2*s12)
      *mt*s12*s13^2*s14*s24 + 1/2*denom(1/2*s12)*mt*s12^2*s14^2*s23 + 1/2*
      denom(1/2*s12)*mt*s12^2*s13*s14*s24 - 1/2*denom(1/2*s12)*mt*mh^2*s12*
      s14^2*s23 - 1/2*denom(1/2*s12)*mt*mh^2*s12*s13*s14*s24 - 1/2*denom(1/2*
      s12)*mt^3*s12*s14*s24^2 - 3/2*denom(1/2*s12)*mt^3*s12*s14*s23*s24 - 
      denom(1/2*s12)*mt^3*s12*s14*s23^2 - denom(1/2*s12)*mt^3*s12*s14^2*s24 - 
      5/2*denom(1/2*s12)*mt^3*s12*s14^2*s23 - 1/2*denom(1/2*s12)*mt^3*s12*
      s14^3 - 1/2*denom(1/2*s12)*mt^3*s12*s13*s24^2 - 1/2*denom(1/2*s12)*mt^3*
      s12*s13*s23*s24 - 5/2*denom(1/2*s12)*mt^3*s12*s13*s14*s24 - 3/2*denom(1/
      2*s12)*mt^3*s12*s13*s14*s23 - denom(1/2*s12)*mt^3*s12*s13*s14^2 - 1/2*
      denom(1/2*s12)*mt^3*s12*s13^2*s24 - 1/2*denom(1/2*s12)*mt^3*s12*s13^2*
      s14 - 1/2*denom(1/2*s12)*mt^3*s12^2*s14*s24 - denom(1/2*s12)*mt^3*s12^2*
      s14*s23 - 1/2*denom(1/2*s12)*mt^3*s12^2*s14^2 - 1/2*denom(1/2*s12)*mt^3*
      s12^2*s13*s24 - 1/2*denom(1/2*s12)*mt^3*s12^2*s13*s14 + 1/2*denom(1/2*
      s12)*mt^3*mh^2*s12*s14*s24 + denom(1/2*s12)*mt^3*mh^2*s12*s14*s23 + 1/2*
      denom(1/2*s12)*mt^3*mh^2*s12*s14^2 + 1/2*denom(1/2*s12)*mt^3*mh^2*s12*
      s13*s24 + 1/2*denom(1/2*s12)*mt^3*mh^2*s12*s13*s14 + 1/2*denom(1/2*s12)*
      mt^5*s12*s24^2 + denom(1/2*s12)*mt^5*s12*s23*s24 + 1/2*denom(1/2*s12)*
      mt^5*s12*s23^2 + 3*denom(1/2*s12)*mt^5*s12*s14*s24 + 4*denom(1/2*s12)*
      mt^5*s12*s14*s23 + 5/2*denom(1/2*s12)*mt^5*s12*s14^2 + 2*denom(1/2*s12)*
      mt^5*s12*s13*s24 + denom(1/2*s12)*mt^5*s12*s13*s23 + 3*denom(1/2*s12)*
      mt^5*s12*s13*s14 + 1/2*denom(1/2*s12)*mt^5*s12*s13^2 + 1/2*denom(1/2*s12
      )*mt^5*s12^2*s24 + 1/2*denom(1/2*s12)*mt^5*s12^2*s23 + 3/2*denom(1/2*s12
      )*mt^5*s12^2*s14 + 1/2*denom(1/2*s12)*mt^5*s12^2*s13 - 1/2*denom(1/2*s12
      )*mt^5*mh^2*s12*s24 - 1/2*denom(1/2*s12)*mt^5*mh^2*s12*s23 - 3/2*denom(1/
      2*s12)*mt^5*mh^2*s12*s14 - 1/2*denom(1/2*s12)*mt^5*mh^2*s12*s13 - 2*
      denom(1/2*s12)*mt^7*s12*s24 - 2*denom(1/2*s12)*mt^7*s12*s23 - 4*denom(1/
      2*s12)*mt^7*s12*s14 - 2*denom(1/2*s12)*mt^7*s12*s13 - denom(1/2*s12)*
      mt^7*s12^2 + denom(1/2*s12)*mt^7*mh^2*s12 + 2*denom(1/2*s12)*mt^9*s12 + 
      1/8*denom(1/4*s12^2)*mt*s12*s14^3*s23^2 + 1/4*denom(1/4*s12^2)*mt*s12*
      s13*s14^2*s23*s24 + 1/8*denom(1/4*s12^2)*mt*s12*s13^2*s14*s24^2 - 1/4*
      denom(1/4*s12^2)*mt^3*s12*s14^2*s23*s24 - 3/8*denom(1/4*s12^2)*mt^3*s12*
      s14^2*s23^2 - 1/4*denom(1/4*s12^2)*mt^3*s12*s14^3*s23 - 1/4*denom(1/4*
      s12^2)*mt^3*s12*s13*s14*s24^2 - 1/2*denom(1/4*s12^2)*mt^3*s12*s13*s14*
      s23*s24 - 1/4*denom(1/4*s12^2)*mt^3*s12*s13*s14^2*s24 - 1/4*denom(1/4*
      s12^2)*mt^3*s12*s13*s14^2*s23 - 1/8*denom(1/4*s12^2)*mt^3*s12*s13^2*
      s24^2 - 1/4*denom(1/4*s12^2)*mt^3*s12*s13^2*s14*s24 + 1/8*denom(1/4*
      s12^2)*mt^5*s12*s14*s24^2 + 1/2*denom(1/4*s12^2)*mt^5*s12*s14*s23*s24 + 
      3/8*denom(1/4*s12^2)*mt^5*s12*s14*s23^2 + 1/4*denom(1/4*s12^2)*mt^5*s12*
      s14^2*s24 + denom(1/4*s12^2)*mt^5*s12*s14^2*s23 + 1/8*denom(1/4*s12^2)*
      mt^5*s12*s14^3 + 1/4*denom(1/4*s12^2)*mt^5*s12*s13*s24^2 + 1/4*denom(1/4
      *s12^2)*mt^5*s12*s13*s23*s24 + denom(1/4*s12^2)*mt^5*s12*s13*s14*s24 + 1/
      2*denom(1/4*s12^2)*mt^5*s12*s13*s14*s23 + 1/4*denom(1/4*s12^2)*mt^5*s12*
      s13*s14^2 + 1/4*denom(1/4*s12^2)*mt^5*s12*s13^2*s24 + 1/8*denom(1/4*
      s12^2)*mt^5*s12*s13^2*s14 - 1/8*denom(1/4*s12^2)*mt^7*s12*s24^2 - 1/4*
      denom(1/4*s12^2)*mt^7*s12*s23*s24 - 1/8*denom(1/4*s12^2)*mt^7*s12*s23^2
       - 3/4*denom(1/4*s12^2)*mt^7*s12*s14*s24 - 5/4*denom(1/4*s12^2)*mt^7*s12
      *s14*s23 - 5/8*denom(1/4*s12^2)*mt^7*s12*s14^2 - 3/4*denom(1/4*s12^2)*
      mt^7*s12*s13*s24 - 1/4*denom(1/4*s12^2)*mt^7*s12*s13*s23 - 3/4*denom(1/4
      *s12^2)*mt^7*s12*s13*s14 - 1/8*denom(1/4*s12^2)*mt^7*s12*s13^2 + 1/2*
      denom(1/4*s12^2)*mt^9*s12*s24 + 1/2*denom(1/4*s12^2)*mt^9*s12*s23 + 
      denom(1/4*s12^2)*mt^9*s12*s14 + 1/2*denom(1/4*s12^2)*mt^9*s12*s13 - 1/2*
      denom(1/4*s12^2)*mt^11*s12;
 
 .sort
id KMatrix(14,8) =   - mt^3*s12*s14*s24 - mt^3*s12*s14*s23 - mt^3*s12*s14^2 - 
      mt^3*s12*s13*s14 - mt^3*s12^2*s14 + mt^3*mh^2*s12*s14 + mt^5*s12*s24 + 
      mt^5*s12*s23 + 3*mt^5*s12*s14 + mt^5*s12*s13 + mt^5*s12^2 - mt^5*mh^2*
      s12 - 2*mt^7*s12 + 1/2*denom(1/2*s12)*mt*s12*s14^2*s24^2 + 1/2*denom(1/2
      *s12)*mt*s12*s14^2*s23*s24 + 1/2*denom(1/2*s12)*mt*s12*s14^3*s24 + 1/2*
      denom(1/2*s12)*mt*s12*s13*s14^2*s24 + 1/2*denom(1/2*s12)*mt*s12^2*s14^2*
      s24 - 1/2*denom(1/2*s12)*mt*mh^2*s12*s14^2*s24 - denom(1/2*s12)*mt^3*s12
      *s14*s24^2 - denom(1/2*s12)*mt^3*s12*s14*s23*s24 - 5/2*denom(1/2*s12)*
      mt^3*s12*s14^2*s24 - denom(1/2*s12)*mt^3*s12*s14^2*s23 - 1/2*denom(1/2*
      s12)*mt^3*s12*s14^3 - 3/2*denom(1/2*s12)*mt^3*s12*s13*s14*s24 - 1/2*
      denom(1/2*s12)*mt^3*s12*s13*s14^2 - denom(1/2*s12)*mt^3*s12^2*s14*s24 - 
      1/2*denom(1/2*s12)*mt^3*s12^2*s14^2 + denom(1/2*s12)*mt^3*mh^2*s12*s14*
      s24 + 1/2*denom(1/2*s12)*mt^3*mh^2*s12*s14^2 + 1/2*denom(1/2*s12)*mt^5*
      s12*s24^2 + 1/2*denom(1/2*s12)*mt^5*s12*s23*s24 + 4*denom(1/2*s12)*mt^5*
      s12*s14*s24 + 2*denom(1/2*s12)*mt^5*s12*s14*s23 + 5/2*denom(1/2*s12)*
      mt^5*s12*s14^2 + denom(1/2*s12)*mt^5*s12*s13*s24 + 3/2*denom(1/2*s12)*
      mt^5*s12*s13*s14 + 1/2*denom(1/2*s12)*mt^5*s12^2*s24 + denom(1/2*s12)*
      mt^5*s12^2*s14 - 1/2*denom(1/2*s12)*mt^5*mh^2*s12*s24 - denom(1/2*s12)*
      mt^5*mh^2*s12*s14 - 2*denom(1/2*s12)*mt^7*s12*s24 - denom(1/2*s12)*mt^7*
      s12*s23 - 4*denom(1/2*s12)*mt^7*s12*s14 - denom(1/2*s12)*mt^7*s12*s13 - 
      1/2*denom(1/2*s12)*mt^7*s12^2 + 1/2*denom(1/2*s12)*mt^7*mh^2*s12 + 2*
      denom(1/2*s12)*mt^9*s12 + 1/4*denom(1/4*s12^2)*mt*s12*s14^3*s23*s24 + 1/
      4*denom(1/4*s12^2)*mt*s12*s13*s14^2*s24^2 - 1/4*denom(1/4*s12^2)*mt^3*
      s12*s14^2*s24^2 - 3/4*denom(1/4*s12^2)*mt^3*s12*s14^2*s23*s24 - 1/4*
      denom(1/4*s12^2)*mt^3*s12*s14^3*s24 - 1/4*denom(1/4*s12^2)*mt^3*s12*
      s14^3*s23 - 1/2*denom(1/4*s12^2)*mt^3*s12*s13*s14*s24^2 - 1/2*denom(1/4*
      s12^2)*mt^3*s12*s13*s14^2*s24 + 1/2*denom(1/4*s12^2)*mt^5*s12*s14*s24^2
       + 3/4*denom(1/4*s12^2)*mt^5*s12*s14*s23*s24 + 5/4*denom(1/4*s12^2)*mt^5
      *s12*s14^2*s24 + 3/4*denom(1/4*s12^2)*mt^5*s12*s14^2*s23 + 1/4*denom(1/4
      *s12^2)*mt^5*s12*s14^3 + 1/4*denom(1/4*s12^2)*mt^5*s12*s13*s24^2 + 
      denom(1/4*s12^2)*mt^5*s12*s13*s14*s24 + 1/4*denom(1/4*s12^2)*mt^5*s12*
      s13*s14^2 - 1/4*denom(1/4*s12^2)*mt^7*s12*s24^2 - 1/4*denom(1/4*s12^2)*
      mt^7*s12*s23*s24 - 7/4*denom(1/4*s12^2)*mt^7*s12*s14*s24 - 3/4*denom(1/4
      *s12^2)*mt^7*s12*s14*s23 - denom(1/4*s12^2)*mt^7*s12*s14^2 - 1/2*denom(1/
      4*s12^2)*mt^7*s12*s13*s24 - 1/2*denom(1/4*s12^2)*mt^7*s12*s13*s14 + 3/4*
      denom(1/4*s12^2)*mt^9*s12*s24 + 1/4*denom(1/4*s12^2)*mt^9*s12*s23 + 5/4*
      denom(1/4*s12^2)*mt^9*s12*s14 + 1/4*denom(1/4*s12^2)*mt^9*s12*s13 - 1/2*
      denom(1/4*s12^2)*mt^11*s12;
 
 .sort
id KMatrix(14,9) =  mt^3*s12*s23*s24 + mt^3*s12*s23^2 + mt^3*s12*s14*s23 + 
      mt^3*s12*s13*s23 + mt^3*s12^2*s23 - mt^3*mh^2*s12*s23 - mt^5*s12*s24 - 3
      *mt^5*s12*s23 - mt^5*s12*s14 - mt^5*s12*s13 - mt^5*s12^2 + mt^5*mh^2*s12
       + 2*mt^7*s12 - 1/2*denom(1/2*s12)*mt*s12*s13*s23^2*s24 - 1/2*denom(1/2*
      s12)*mt*s12*s13*s23^3 - 1/2*denom(1/2*s12)*mt*s12*s13*s14*s23^2 - 1/2*
      denom(1/2*s12)*mt*s12*s13^2*s23^2 - 1/2*denom(1/2*s12)*mt*s12^2*s13*
      s23^2 + 1/2*denom(1/2*s12)*mt*mh^2*s12*s13*s23^2 + 1/2*denom(1/2*s12)*
      mt^3*s12*s23^2*s24 + 1/2*denom(1/2*s12)*mt^3*s12*s23^3 + denom(1/2*s12)*
      mt^3*s12*s14*s23^2 + 3/2*denom(1/2*s12)*mt^3*s12*s13*s23*s24 + 5/2*
      denom(1/2*s12)*mt^3*s12*s13*s23^2 + denom(1/2*s12)*mt^3*s12*s13*s14*s23
       + denom(1/2*s12)*mt^3*s12*s13^2*s23 + 1/2*denom(1/2*s12)*mt^3*s12^2*
      s23^2 + denom(1/2*s12)*mt^3*s12^2*s13*s23 - 1/2*denom(1/2*s12)*mt^3*mh^2
      *s12*s23^2 - denom(1/2*s12)*mt^3*mh^2*s12*s13*s23 - 3/2*denom(1/2*s12)*
      mt^5*s12*s23*s24 - 5/2*denom(1/2*s12)*mt^5*s12*s23^2 - 2*denom(1/2*s12)*
      mt^5*s12*s14*s23 - denom(1/2*s12)*mt^5*s12*s13*s24 - 4*denom(1/2*s12)*
      mt^5*s12*s13*s23 - 1/2*denom(1/2*s12)*mt^5*s12*s13*s14 - 1/2*denom(1/2*
      s12)*mt^5*s12*s13^2 - denom(1/2*s12)*mt^5*s12^2*s23 - 1/2*denom(1/2*s12)
      *mt^5*s12^2*s13 + denom(1/2*s12)*mt^5*mh^2*s12*s23 + 1/2*denom(1/2*s12)*
      mt^5*mh^2*s12*s13 + denom(1/2*s12)*mt^7*s12*s24 + 4*denom(1/2*s12)*mt^7*
      s12*s23 + denom(1/2*s12)*mt^7*s12*s14 + 2*denom(1/2*s12)*mt^7*s12*s13 + 
      1/2*denom(1/2*s12)*mt^7*s12^2 - 1/2*denom(1/2*s12)*mt^7*mh^2*s12 - 2*
      denom(1/2*s12)*mt^9*s12 - 1/4*denom(1/4*s12^2)*mt*s12*s13*s14*s23^3 - 1/
      4*denom(1/4*s12^2)*mt*s12*s13^2*s23^2*s24 + 1/4*denom(1/4*s12^2)*mt^3*
      s12*s14*s23^3 + 1/2*denom(1/4*s12^2)*mt^3*s12*s13*s23^2*s24 + 1/4*denom(
      1/4*s12^2)*mt^3*s12*s13*s23^3 + 3/4*denom(1/4*s12^2)*mt^3*s12*s13*s14*
      s23^2 + 1/2*denom(1/4*s12^2)*mt^3*s12*s13^2*s23*s24 + 1/4*denom(1/4*
      s12^2)*mt^3*s12*s13^2*s23^2 - 1/4*denom(1/4*s12^2)*mt^5*s12*s23^2*s24 - 
      1/4*denom(1/4*s12^2)*mt^5*s12*s23^3 - 3/4*denom(1/4*s12^2)*mt^5*s12*s14*
      s23^2 - denom(1/4*s12^2)*mt^5*s12*s13*s23*s24 - 5/4*denom(1/4*s12^2)*
      mt^5*s12*s13*s23^2 - 3/4*denom(1/4*s12^2)*mt^5*s12*s13*s14*s23 - 1/4*
      denom(1/4*s12^2)*mt^5*s12*s13^2*s24 - 1/2*denom(1/4*s12^2)*mt^5*s12*
      s13^2*s23 + 1/2*denom(1/4*s12^2)*mt^7*s12*s23*s24 + denom(1/4*s12^2)*
      mt^7*s12*s23^2 + 3/4*denom(1/4*s12^2)*mt^7*s12*s14*s23 + 1/2*denom(1/4*
      s12^2)*mt^7*s12*s13*s24 + 7/4*denom(1/4*s12^2)*mt^7*s12*s13*s23 + 1/4*
      denom(1/4*s12^2)*mt^7*s12*s13*s14 + 1/4*denom(1/4*s12^2)*mt^7*s12*s13^2
       - 1/4*denom(1/4*s12^2)*mt^9*s12*s24 - 5/4*denom(1/4*s12^2)*mt^9*s12*s23
       - 1/4*denom(1/4*s12^2)*mt^9*s12*s14 - 3/4*denom(1/4*s12^2)*mt^9*s12*s13
       + 1/2*denom(1/4*s12^2)*mt^11*s12;
 
 .sort
id KMatrix(14,10) =   - 2*mt^5*s12*s23 + 2*mt^7*s12 + denom(1/2*s12)*mt^3*s12*
      s14*s23*s24 + denom(1/2*s12)*mt^3*s12*s13*s23^2 - denom(1/2*s12)*mt^5*
      s12*s23*s24 - denom(1/2*s12)*mt^5*s12*s23^2 - denom(1/2*s12)*mt^5*s12*
      s14*s24 - denom(1/2*s12)*mt^5*s12*s14*s23 - 2*denom(1/2*s12)*mt^5*s12*
      s13*s23 + denom(1/2*s12)*mt^7*s12*s24 + 3*denom(1/2*s12)*mt^7*s12*s23 + 
      denom(1/2*s12)*mt^7*s12*s14 + denom(1/2*s12)*mt^7*s12*s13 - 2*denom(1/2*
      s12)*mt^9*s12 - 1/2*denom(1/4*s12^2)*mt*s12*s13*s14*s23^2*s24 + 1/2*
      denom(1/4*s12^2)*mt^3*s12*s14*s23^2*s24 + 1/2*denom(1/4*s12^2)*mt^3*s12*
      s13*s23^2*s24 + denom(1/4*s12^2)*mt^3*s12*s13*s14*s23*s24 + 1/2*denom(1/
      4*s12^2)*mt^3*s12*s13*s14*s23^2 - 1/2*denom(1/4*s12^2)*mt^5*s12*s23^2*
      s24 - denom(1/4*s12^2)*mt^5*s12*s14*s23*s24 - 1/2*denom(1/4*s12^2)*mt^5*
      s12*s14*s23^2 - denom(1/4*s12^2)*mt^5*s12*s13*s23*s24 - 1/2*denom(1/4*
      s12^2)*mt^5*s12*s13*s23^2 - 1/2*denom(1/4*s12^2)*mt^5*s12*s13*s14*s24 - 
      denom(1/4*s12^2)*mt^5*s12*s13*s14*s23 + denom(1/4*s12^2)*mt^7*s12*s23*
      s24 + 1/2*denom(1/4*s12^2)*mt^7*s12*s23^2 + 1/2*denom(1/4*s12^2)*mt^7*
      s12*s14*s24 + denom(1/4*s12^2)*mt^7*s12*s14*s23 + 1/2*denom(1/4*s12^2)*
      mt^7*s12*s13*s24 + denom(1/4*s12^2)*mt^7*s12*s13*s23 + 1/2*denom(1/4*
      s12^2)*mt^7*s12*s13*s14 - 1/2*denom(1/4*s12^2)*mt^9*s12*s24 - denom(1/4*
      s12^2)*mt^9*s12*s23 - 1/2*denom(1/4*s12^2)*mt^9*s12*s14 - 1/2*denom(1/4*
      s12^2)*mt^9*s12*s13 + 1/2*denom(1/4*s12^2)*mt^11*s12;
 
 .sort
id KMatrix(14,11) =   - 1/2*mt*s12*s23*s24^2 - mt*s12*s23^2*s24 - 1/2*mt*s12*
      s23^3 - mt*s12*s14*s23*s24 - mt*s12*s14*s23^2 - 1/2*mt*s12*s14^2*s23 - 
      mt*s12*s13*s23*s24 - mt*s12*s13*s23^2 - mt*s12*s13*s14*s23 - 1/2*mt*s12*
      s13^2*s23 - mt*s12^2*s23*s24 - mt*s12^2*s23^2 - mt*s12^2*s14*s23 - mt*
      s12^2*s13*s23 - 1/2*mt*s12^3*s23 + mt*mh^2*s12*s23*s24 + mt*mh^2*s12*
      s23^2 + mt*mh^2*s12*s14*s23 + mt*mh^2*s12*s13*s23 + mt*mh^2*s12^2*s23 - 
      1/2*mt*mh^4*s12*s23 + 1/2*mt^3*s12*s24^2 + 3*mt^3*s12*s23*s24 + 5/2*mt^3
      *s12*s23^2 + mt^3*s12*s14*s24 + 3*mt^3*s12*s14*s23 + 1/2*mt^3*s12*s14^2
       + mt^3*s12*s13*s24 + 3*mt^3*s12*s13*s23 + mt^3*s12*s13*s14 + 1/2*mt^3*
      s12*s13^2 + mt^3*s12^2*s24 + 3*mt^3*s12^2*s23 + mt^3*s12^2*s14 + mt^3*
      s12^2*s13 + 1/2*mt^3*s12^3 - mt^3*mh^2*s12*s24 - 3*mt^3*mh^2*s12*s23 - 
      mt^3*mh^2*s12*s14 - mt^3*mh^2*s12*s13 - mt^3*mh^2*s12^2 + 1/2*mt^3*mh^4*
      s12 - 2*mt^5*s12*s24 - 4*mt^5*s12*s23 - 2*mt^5*s12*s14 - 2*mt^5*s12*s13
       - 2*mt^5*s12^2 + 2*mt^5*mh^2*s12 + 2*mt^7*s12 - 1/2*denom(1/2*s12)*mt*
      s12*s14*s23^2*s24 - 1/2*denom(1/2*s12)*mt*s12*s14*s23^3 - 1/2*denom(1/2*
      s12)*mt*s12*s14^2*s23^2 - 1/2*denom(1/2*s12)*mt*s12*s13*s23*s24^2 - 1/2*
      denom(1/2*s12)*mt*s12*s13*s23^2*s24 - 1/2*denom(1/2*s12)*mt*s12*s13*s14*
      s23*s24 - 1/2*denom(1/2*s12)*mt*s12*s13*s14*s23^2 - 1/2*denom(1/2*s12)*
      mt*s12*s13^2*s23*s24 - 1/2*denom(1/2*s12)*mt*s12^2*s14*s23^2 - 1/2*
      denom(1/2*s12)*mt*s12^2*s13*s23*s24 + 1/2*denom(1/2*s12)*mt*mh^2*s12*s14
      *s23^2 + 1/2*denom(1/2*s12)*mt*mh^2*s12*s13*s23*s24 + 1/2*denom(1/2*s12)
      *mt^3*s12*s23*s24^2 + denom(1/2*s12)*mt^3*s12*s23^2*s24 + 1/2*denom(1/2*
      s12)*mt^3*s12*s23^3 + 3/2*denom(1/2*s12)*mt^3*s12*s14*s23*s24 + 5/2*
      denom(1/2*s12)*mt^3*s12*s14*s23^2 + denom(1/2*s12)*mt^3*s12*s14^2*s23 + 
      1/2*denom(1/2*s12)*mt^3*s12*s13*s24^2 + 5/2*denom(1/2*s12)*mt^3*s12*s13*
      s23*s24 + denom(1/2*s12)*mt^3*s12*s13*s23^2 + 1/2*denom(1/2*s12)*mt^3*
      s12*s13*s14*s24 + 3/2*denom(1/2*s12)*mt^3*s12*s13*s14*s23 + 1/2*denom(1/
      2*s12)*mt^3*s12*s13^2*s24 + 1/2*denom(1/2*s12)*mt^3*s12*s13^2*s23 + 1/2*
      denom(1/2*s12)*mt^3*s12^2*s23*s24 + 1/2*denom(1/2*s12)*mt^3*s12^2*s23^2
       + denom(1/2*s12)*mt^3*s12^2*s14*s23 + 1/2*denom(1/2*s12)*mt^3*s12^2*s13
      *s24 + 1/2*denom(1/2*s12)*mt^3*s12^2*s13*s23 - 1/2*denom(1/2*s12)*mt^3*
      mh^2*s12*s23*s24 - 1/2*denom(1/2*s12)*mt^3*mh^2*s12*s23^2 - denom(1/2*
      s12)*mt^3*mh^2*s12*s14*s23 - 1/2*denom(1/2*s12)*mt^3*mh^2*s12*s13*s24 - 
      1/2*denom(1/2*s12)*mt^3*mh^2*s12*s13*s23 - 1/2*denom(1/2*s12)*mt^5*s12*
      s24^2 - 3*denom(1/2*s12)*mt^5*s12*s23*s24 - 5/2*denom(1/2*s12)*mt^5*s12*
      s23^2 - denom(1/2*s12)*mt^5*s12*s14*s24 - 4*denom(1/2*s12)*mt^5*s12*s14*
      s23 - 1/2*denom(1/2*s12)*mt^5*s12*s14^2 - 2*denom(1/2*s12)*mt^5*s12*s13*
      s24 - 3*denom(1/2*s12)*mt^5*s12*s13*s23 - denom(1/2*s12)*mt^5*s12*s13*
      s14 - 1/2*denom(1/2*s12)*mt^5*s12*s13^2 - 1/2*denom(1/2*s12)*mt^5*s12^2*
      s24 - 3/2*denom(1/2*s12)*mt^5*s12^2*s23 - 1/2*denom(1/2*s12)*mt^5*s12^2*
      s14 - 1/2*denom(1/2*s12)*mt^5*s12^2*s13 + 1/2*denom(1/2*s12)*mt^5*mh^2*
      s12*s24 + 3/2*denom(1/2*s12)*mt^5*mh^2*s12*s23 + 1/2*denom(1/2*s12)*mt^5
      *mh^2*s12*s14 + 1/2*denom(1/2*s12)*mt^5*mh^2*s12*s13 + 2*denom(1/2*s12)*
      mt^7*s12*s24 + 4*denom(1/2*s12)*mt^7*s12*s23 + 2*denom(1/2*s12)*mt^7*s12
      *s14 + 2*denom(1/2*s12)*mt^7*s12*s13 + denom(1/2*s12)*mt^7*s12^2 - 
      denom(1/2*s12)*mt^7*mh^2*s12 - 2*denom(1/2*s12)*mt^9*s12 - 1/8*denom(1/4
      *s12^2)*mt*s12*s14^2*s23^3 - 1/4*denom(1/4*s12^2)*mt*s12*s13*s14*s23^2*
      s24 - 1/8*denom(1/4*s12^2)*mt*s12*s13^2*s23*s24^2 + 1/4*denom(1/4*s12^2)
      *mt^3*s12*s14*s23^2*s24 + 1/4*denom(1/4*s12^2)*mt^3*s12*s14*s23^3 + 3/8*
      denom(1/4*s12^2)*mt^3*s12*s14^2*s23^2 + 1/4*denom(1/4*s12^2)*mt^3*s12*
      s13*s23*s24^2 + 1/4*denom(1/4*s12^2)*mt^3*s12*s13*s23^2*s24 + 1/2*denom(
      1/4*s12^2)*mt^3*s12*s13*s14*s23*s24 + 1/4*denom(1/4*s12^2)*mt^3*s12*s13*
      s14*s23^2 + 1/8*denom(1/4*s12^2)*mt^3*s12*s13^2*s24^2 + 1/4*denom(1/4*
      s12^2)*mt^3*s12*s13^2*s23*s24 - 1/8*denom(1/4*s12^2)*mt^5*s12*s23*s24^2
       - 1/4*denom(1/4*s12^2)*mt^5*s12*s23^2*s24 - 1/8*denom(1/4*s12^2)*mt^5*
      s12*s23^3 - 1/2*denom(1/4*s12^2)*mt^5*s12*s14*s23*s24 - denom(1/4*s12^2)
      *mt^5*s12*s14*s23^2 - 3/8*denom(1/4*s12^2)*mt^5*s12*s14^2*s23 - 1/4*
      denom(1/4*s12^2)*mt^5*s12*s13*s24^2 - denom(1/4*s12^2)*mt^5*s12*s13*s23*
      s24 - 1/4*denom(1/4*s12^2)*mt^5*s12*s13*s23^2 - 1/4*denom(1/4*s12^2)*
      mt^5*s12*s13*s14*s24 - 1/2*denom(1/4*s12^2)*mt^5*s12*s13*s14*s23 - 1/4*
      denom(1/4*s12^2)*mt^5*s12*s13^2*s24 - 1/8*denom(1/4*s12^2)*mt^5*s12*
      s13^2*s23 + 1/8*denom(1/4*s12^2)*mt^7*s12*s24^2 + 3/4*denom(1/4*s12^2)*
      mt^7*s12*s23*s24 + 5/8*denom(1/4*s12^2)*mt^7*s12*s23^2 + 1/4*denom(1/4*
      s12^2)*mt^7*s12*s14*s24 + 5/4*denom(1/4*s12^2)*mt^7*s12*s14*s23 + 1/8*
      denom(1/4*s12^2)*mt^7*s12*s14^2 + 3/4*denom(1/4*s12^2)*mt^7*s12*s13*s24
       + 3/4*denom(1/4*s12^2)*mt^7*s12*s13*s23 + 1/4*denom(1/4*s12^2)*mt^7*s12
      *s13*s14 + 1/8*denom(1/4*s12^2)*mt^7*s12*s13^2 - 1/2*denom(1/4*s12^2)*
      mt^9*s12*s24 - denom(1/4*s12^2)*mt^9*s12*s23 - 1/2*denom(1/4*s12^2)*mt^9
      *s12*s14 - 1/2*denom(1/4*s12^2)*mt^9*s12*s13 + 1/2*denom(1/4*s12^2)*
      mt^11*s12;
 
 .sort
id KMatrix(14,12) =  mt^3*s12*s23*s24 + mt^3*s12*s23^2 + mt^3*s12*s14*s23 + 
      mt^3*s12*s13*s23 + mt^3*s12^2*s23 - mt^3*mh^2*s12*s23 - mt^5*s12*s24 - 3
      *mt^5*s12*s23 - mt^5*s12*s14 - mt^5*s12*s13 - mt^5*s12^2 + mt^5*mh^2*s12
       + 2*mt^7*s12 - 1/2*denom(1/2*s12)*mt*s12*s14*s23*s24^2 - 1/2*denom(1/2*
      s12)*mt*s12*s14*s23^2*s24 - 1/2*denom(1/2*s12)*mt*s12*s14^2*s23*s24 - 1/
      2*denom(1/2*s12)*mt*s12*s13*s14*s23*s24 - 1/2*denom(1/2*s12)*mt*s12^2*
      s14*s23*s24 + 1/2*denom(1/2*s12)*mt*mh^2*s12*s14*s23*s24 + 1/2*denom(1/2
      *s12)*mt^3*s12*s23*s24^2 + 1/2*denom(1/2*s12)*mt^3*s12*s23^2*s24 + 1/2*
      denom(1/2*s12)*mt^3*s12*s14*s24^2 + 5/2*denom(1/2*s12)*mt^3*s12*s14*s23*
      s24 + denom(1/2*s12)*mt^3*s12*s14*s23^2 + 1/2*denom(1/2*s12)*mt^3*s12*
      s14^2*s24 + 1/2*denom(1/2*s12)*mt^3*s12*s14^2*s23 + denom(1/2*s12)*mt^3*
      s12*s13*s23*s24 + 1/2*denom(1/2*s12)*mt^3*s12*s13*s14*s24 + 1/2*denom(1/
      2*s12)*mt^3*s12*s13*s14*s23 + 1/2*denom(1/2*s12)*mt^3*s12^2*s23*s24 + 1/
      2*denom(1/2*s12)*mt^3*s12^2*s14*s24 + 1/2*denom(1/2*s12)*mt^3*s12^2*s14*
      s23 - 1/2*denom(1/2*s12)*mt^3*mh^2*s12*s23*s24 - 1/2*denom(1/2*s12)*mt^3
      *mh^2*s12*s14*s24 - 1/2*denom(1/2*s12)*mt^3*mh^2*s12*s14*s23 - 1/2*
      denom(1/2*s12)*mt^5*s12*s24^2 - 5/2*denom(1/2*s12)*mt^5*s12*s23*s24 - 
      denom(1/2*s12)*mt^5*s12*s23^2 - 2*denom(1/2*s12)*mt^5*s12*s14*s24 - 3*
      denom(1/2*s12)*mt^5*s12*s14*s23 - 1/2*denom(1/2*s12)*mt^5*s12*s14^2 - 
      denom(1/2*s12)*mt^5*s12*s13*s24 - denom(1/2*s12)*mt^5*s12*s13*s23 - 1/2*
      denom(1/2*s12)*mt^5*s12*s13*s14 - 1/2*denom(1/2*s12)*mt^5*s12^2*s24 - 1/
      2*denom(1/2*s12)*mt^5*s12^2*s23 - 1/2*denom(1/2*s12)*mt^5*s12^2*s14 + 1/
      2*denom(1/2*s12)*mt^5*mh^2*s12*s24 + 1/2*denom(1/2*s12)*mt^5*mh^2*s12*
      s23 + 1/2*denom(1/2*s12)*mt^5*mh^2*s12*s14 + 2*denom(1/2*s12)*mt^7*s12*
      s24 + 3*denom(1/2*s12)*mt^7*s12*s23 + 2*denom(1/2*s12)*mt^7*s12*s14 + 
      denom(1/2*s12)*mt^7*s12*s13 + 1/2*denom(1/2*s12)*mt^7*s12^2 - 1/2*denom(
      1/2*s12)*mt^7*mh^2*s12 - 2*denom(1/2*s12)*mt^9*s12 - 1/4*denom(1/4*s12^2
      )*mt*s12*s14^2*s23^2*s24 - 1/4*denom(1/4*s12^2)*mt*s12*s13*s14*s23*s24^2
       + 1/4*denom(1/4*s12^2)*mt^3*s12*s14*s23*s24^2 + 1/2*denom(1/4*s12^2)*
      mt^3*s12*s14*s23^2*s24 + 1/2*denom(1/4*s12^2)*mt^3*s12*s14^2*s23*s24 + 1/
      4*denom(1/4*s12^2)*mt^3*s12*s14^2*s23^2 + 1/4*denom(1/4*s12^2)*mt^3*s12*
      s13*s23*s24^2 + 1/4*denom(1/4*s12^2)*mt^3*s12*s13*s14*s24^2 + 1/2*denom(
      1/4*s12^2)*mt^3*s12*s13*s14*s23*s24 - 1/4*denom(1/4*s12^2)*mt^5*s12*s23*
      s24^2 - 1/4*denom(1/4*s12^2)*mt^5*s12*s23^2*s24 - 1/4*denom(1/4*s12^2)*
      mt^5*s12*s14*s24^2 - 3/2*denom(1/4*s12^2)*mt^5*s12*s14*s23*s24 - 1/2*
      denom(1/4*s12^2)*mt^5*s12*s14*s23^2 - 1/4*denom(1/4*s12^2)*mt^5*s12*
      s14^2*s24 - 1/2*denom(1/4*s12^2)*mt^5*s12*s14^2*s23 - 1/4*denom(1/4*
      s12^2)*mt^5*s12*s13*s24^2 - 1/2*denom(1/4*s12^2)*mt^5*s12*s13*s23*s24 - 
      1/2*denom(1/4*s12^2)*mt^5*s12*s13*s14*s24 - 1/4*denom(1/4*s12^2)*mt^5*
      s12*s13*s14*s23 + 1/4*denom(1/4*s12^2)*mt^7*s12*s24^2 + denom(1/4*s12^2)
      *mt^7*s12*s23*s24 + 1/4*denom(1/4*s12^2)*mt^7*s12*s23^2 + denom(1/4*
      s12^2)*mt^7*s12*s14*s24 + 5/4*denom(1/4*s12^2)*mt^7*s12*s14*s23 + 1/4*
      denom(1/4*s12^2)*mt^7*s12*s14^2 + 1/2*denom(1/4*s12^2)*mt^7*s12*s13*s24
       + 1/4*denom(1/4*s12^2)*mt^7*s12*s13*s23 + 1/4*denom(1/4*s12^2)*mt^7*s12
      *s13*s14 - 3/4*denom(1/4*s12^2)*mt^9*s12*s24 - 3/4*denom(1/4*s12^2)*mt^9
      *s12*s23 - 3/4*denom(1/4*s12^2)*mt^9*s12*s14 - 1/4*denom(1/4*s12^2)*mt^9
      *s12*s13 + 1/2*denom(1/4*s12^2)*mt^11*s12;
 
 .sort
id KMatrix(14,13) =   - mt^2*s12*s14*s23*s24 - mt^2*s12*s14*s23^2 - mt^2*s12*
      s14^2*s23 - mt^2*s12*s13*s14*s23 - mt^2*s12^2*s14*s23 + mt^2*mh^2*s12*
      s14*s23 + mt^4*s12*s23*s24 + mt^4*s12*s23^2 + mt^4*s12*s14*s24 + 4*mt^4*
      s12*s14*s23 + mt^4*s12*s14^2 + mt^4*s12*s13*s23 + mt^4*s12*s13*s14 + 
      mt^4*s12^2*s23 + mt^4*s12^2*s14 - mt^4*mh^2*s12*s23 - mt^4*mh^2*s12*s14
       - mt^6*s12*s24 - 3*mt^6*s12*s23 - 3*mt^6*s12*s14 - mt^6*s12*s13 - mt^6*
      s12^2 + mt^6*mh^2*s12 + 2*mt^8*s12 + 1/2*denom(1/2*s12)*s12*s13*s14*
      s23^2*s24 + 1/2*denom(1/2*s12)*s12*s13*s14*s23^3 + 1/2*denom(1/2*s12)*
      s12*s13*s14^2*s23^2 + 1/2*denom(1/2*s12)*s12*s13^2*s14*s23^2 + 1/2*
      denom(1/2*s12)*s12^2*s13*s14*s23^2 - 1/2*denom(1/2*s12)*mh^2*s12*s13*s14
      *s23^2 - 1/2*denom(1/2*s12)*mt^2*s12*s14*s23^2*s24 - 1/2*denom(1/2*s12)*
      mt^2*s12*s14*s23^3 - denom(1/2*s12)*mt^2*s12*s14^2*s23^2 - 1/2*denom(1/2
      *s12)*mt^2*s12*s13*s23^2*s24 - 1/2*denom(1/2*s12)*mt^2*s12*s13*s23^3 - 3/
      2*denom(1/2*s12)*mt^2*s12*s13*s14*s23*s24 - 3*denom(1/2*s12)*mt^2*s12*
      s13*s14*s23^2 - denom(1/2*s12)*mt^2*s12*s13*s14^2*s23 - 1/2*denom(1/2*
      s12)*mt^2*s12*s13^2*s23^2 - denom(1/2*s12)*mt^2*s12*s13^2*s14*s23 - 1/2*
      denom(1/2*s12)*mt^2*s12^2*s14*s23^2 - 1/2*denom(1/2*s12)*mt^2*s12^2*s13*
      s23^2 - denom(1/2*s12)*mt^2*s12^2*s13*s14*s23 + 1/2*denom(1/2*s12)*mt^2*
      mh^2*s12*s14*s23^2 + 1/2*denom(1/2*s12)*mt^2*mh^2*s12*s13*s23^2 + denom(
      1/2*s12)*mt^2*mh^2*s12*s13*s14*s23 + 1/2*denom(1/2*s12)*mt^4*s12*s23^2*
      s24 + 1/2*denom(1/2*s12)*mt^4*s12*s23^3 + 3/2*denom(1/2*s12)*mt^4*s12*
      s14*s23*s24 + 7/2*denom(1/2*s12)*mt^4*s12*s14*s23^2 + 2*denom(1/2*s12)*
      mt^4*s12*s14^2*s23 + 3/2*denom(1/2*s12)*mt^4*s12*s13*s23*s24 + 5/2*
      denom(1/2*s12)*mt^4*s12*s13*s23^2 + denom(1/2*s12)*mt^4*s12*s13*s14*s24
       + 5*denom(1/2*s12)*mt^4*s12*s13*s14*s23 + 1/2*denom(1/2*s12)*mt^4*s12*
      s13*s14^2 + denom(1/2*s12)*mt^4*s12*s13^2*s23 + 1/2*denom(1/2*s12)*mt^4*
      s12*s13^2*s14 + 1/2*denom(1/2*s12)*mt^4*s12^2*s23^2 + denom(1/2*s12)*
      mt^4*s12^2*s14*s23 + denom(1/2*s12)*mt^4*s12^2*s13*s23 + 1/2*denom(1/2*
      s12)*mt^4*s12^2*s13*s14 - 1/2*denom(1/2*s12)*mt^4*mh^2*s12*s23^2 - 
      denom(1/2*s12)*mt^4*mh^2*s12*s14*s23 - denom(1/2*s12)*mt^4*mh^2*s12*s13*
      s23 - 1/2*denom(1/2*s12)*mt^4*mh^2*s12*s13*s14 - 3/2*denom(1/2*s12)*mt^6
      *s12*s23*s24 - 5/2*denom(1/2*s12)*mt^6*s12*s23^2 - denom(1/2*s12)*mt^6*
      s12*s14*s24 - 6*denom(1/2*s12)*mt^6*s12*s14*s23 - denom(1/2*s12)*mt^6*
      s12*s14^2 - denom(1/2*s12)*mt^6*s12*s13*s24 - 4*denom(1/2*s12)*mt^6*s12*
      s13*s23 - 5/2*denom(1/2*s12)*mt^6*s12*s13*s14 - 1/2*denom(1/2*s12)*mt^6*
      s12*s13^2 - denom(1/2*s12)*mt^6*s12^2*s23 - 1/2*denom(1/2*s12)*mt^6*
      s12^2*s14 - 1/2*denom(1/2*s12)*mt^6*s12^2*s13 + denom(1/2*s12)*mt^6*mh^2
      *s12*s23 + 1/2*denom(1/2*s12)*mt^6*mh^2*s12*s14 + 1/2*denom(1/2*s12)*
      mt^6*mh^2*s12*s13 + denom(1/2*s12)*mt^8*s12*s24 + 4*denom(1/2*s12)*mt^8*
      s12*s23 + 3*denom(1/2*s12)*mt^8*s12*s14 + 2*denom(1/2*s12)*mt^8*s12*s13
       + 1/2*denom(1/2*s12)*mt^8*s12^2 - 1/2*denom(1/2*s12)*mt^8*mh^2*s12 - 2*
      denom(1/2*s12)*mt^10*s12 + 1/4*denom(1/4*s12^2)*s12*s13*s14^2*s23^3 + 1/
      4*denom(1/4*s12^2)*s12*s13^2*s14*s23^2*s24 - 1/4*denom(1/4*s12^2)*mt^2*
      s12*s14^2*s23^3 - 1/2*denom(1/4*s12^2)*mt^2*s12*s13*s14*s23^2*s24 - 1/2*
      denom(1/4*s12^2)*mt^2*s12*s13*s14*s23^3 - 3/4*denom(1/4*s12^2)*mt^2*s12*
      s13*s14^2*s23^2 - 1/4*denom(1/4*s12^2)*mt^2*s12*s13^2*s23^2*s24 - 1/2*
      denom(1/4*s12^2)*mt^2*s12*s13^2*s14*s23*s24 - 1/4*denom(1/4*s12^2)*mt^2*
      s12*s13^2*s14*s23^2 + 1/4*denom(1/4*s12^2)*mt^4*s12*s14*s23^2*s24 + 1/2*
      denom(1/4*s12^2)*mt^4*s12*s14*s23^3 + 3/4*denom(1/4*s12^2)*mt^4*s12*
      s14^2*s23^2 + 1/2*denom(1/4*s12^2)*mt^4*s12*s13*s23^2*s24 + 1/4*denom(1/
      4*s12^2)*mt^4*s12*s13*s23^3 + denom(1/4*s12^2)*mt^4*s12*s13*s14*s23*s24
       + 2*denom(1/4*s12^2)*mt^4*s12*s13*s14*s23^2 + 3/4*denom(1/4*s12^2)*mt^4
      *s12*s13*s14^2*s23 + 1/2*denom(1/4*s12^2)*mt^4*s12*s13^2*s23*s24 + 1/4*
      denom(1/4*s12^2)*mt^4*s12*s13^2*s23^2 + 1/4*denom(1/4*s12^2)*mt^4*s12*
      s13^2*s14*s24 + 1/2*denom(1/4*s12^2)*mt^4*s12*s13^2*s14*s23 - 1/4*denom(
      1/4*s12^2)*mt^6*s12*s23^2*s24 - 1/4*denom(1/4*s12^2)*mt^6*s12*s23^3 - 1/
      2*denom(1/4*s12^2)*mt^6*s12*s14*s23*s24 - 7/4*denom(1/4*s12^2)*mt^6*s12*
      s14*s23^2 - 3/4*denom(1/4*s12^2)*mt^6*s12*s14^2*s23 - denom(1/4*s12^2)*
      mt^6*s12*s13*s23*s24 - 5/4*denom(1/4*s12^2)*mt^6*s12*s13*s23^2 - 1/2*
      denom(1/4*s12^2)*mt^6*s12*s13*s14*s24 - 5/2*denom(1/4*s12^2)*mt^6*s12*
      s13*s14*s23 - 1/4*denom(1/4*s12^2)*mt^6*s12*s13*s14^2 - 1/4*denom(1/4*
      s12^2)*mt^6*s12*s13^2*s24 - 1/2*denom(1/4*s12^2)*mt^6*s12*s13^2*s23 - 1/
      4*denom(1/4*s12^2)*mt^6*s12*s13^2*s14 + 1/2*denom(1/4*s12^2)*mt^8*s12*
      s23*s24 + denom(1/4*s12^2)*mt^8*s12*s23^2 + 1/4*denom(1/4*s12^2)*mt^8*
      s12*s14*s24 + 2*denom(1/4*s12^2)*mt^8*s12*s14*s23 + 1/4*denom(1/4*s12^2)
      *mt^8*s12*s14^2 + 1/2*denom(1/4*s12^2)*mt^8*s12*s13*s24 + 7/4*denom(1/4*
      s12^2)*mt^8*s12*s13*s23 + denom(1/4*s12^2)*mt^8*s12*s13*s14 + 1/4*denom(
      1/4*s12^2)*mt^8*s12*s13^2 - 1/4*denom(1/4*s12^2)*mt^10*s12*s24 - 5/4*
      denom(1/4*s12^2)*mt^10*s12*s23 - 3/4*denom(1/4*s12^2)*mt^10*s12*s14 - 3/
      4*denom(1/4*s12^2)*mt^10*s12*s13 + 1/2*denom(1/4*s12^2)*mt^12*s12;
 
 .sort
id KMatrix(14,14) =  2*mt^4*s12*s14*s23 - 2*mt^6*s12*s23 - 2*mt^6*s12*s14 + 2*
      mt^8*s12 - denom(1/2*s12)*mt^2*s12*s14^2*s23*s24 - denom(1/2*s12)*mt^2*
      s12*s13*s14*s23^2 + 2*denom(1/2*s12)*mt^4*s12*s14*s23*s24 + denom(1/2*
      s12)*mt^4*s12*s14*s23^2 + denom(1/2*s12)*mt^4*s12*s14^2*s24 + denom(1/2*
      s12)*mt^4*s12*s14^2*s23 + denom(1/2*s12)*mt^4*s12*s13*s23^2 + 2*denom(1/
      2*s12)*mt^4*s12*s13*s14*s23 - denom(1/2*s12)*mt^6*s12*s23*s24 - denom(1/
      2*s12)*mt^6*s12*s23^2 - 2*denom(1/2*s12)*mt^6*s12*s14*s24 - 4*denom(1/2*
      s12)*mt^6*s12*s14*s23 - denom(1/2*s12)*mt^6*s12*s14^2 - 2*denom(1/2*s12)
      *mt^6*s12*s13*s23 - denom(1/2*s12)*mt^6*s12*s13*s14 + denom(1/2*s12)*
      mt^8*s12*s24 + 3*denom(1/2*s12)*mt^8*s12*s23 + 3*denom(1/2*s12)*mt^8*s12
      *s14 + denom(1/2*s12)*mt^8*s12*s13 - 2*denom(1/2*s12)*mt^10*s12 + 1/2*
      denom(1/4*s12^2)*s12*s13*s14^2*s23^2*s24 - 1/2*denom(1/4*s12^2)*mt^2*s12
      *s14^2*s23^2*s24 - denom(1/4*s12^2)*mt^2*s12*s13*s14*s23^2*s24 - denom(1/
      4*s12^2)*mt^2*s12*s13*s14^2*s23*s24 - 1/2*denom(1/4*s12^2)*mt^2*s12*s13*
      s14^2*s23^2 + denom(1/4*s12^2)*mt^4*s12*s14*s23^2*s24 + denom(1/4*s12^2)
      *mt^4*s12*s14^2*s23*s24 + 1/2*denom(1/4*s12^2)*mt^4*s12*s14^2*s23^2 + 1/
      2*denom(1/4*s12^2)*mt^4*s12*s13*s23^2*s24 + 2*denom(1/4*s12^2)*mt^4*s12*
      s13*s14*s23*s24 + denom(1/4*s12^2)*mt^4*s12*s13*s14*s23^2 + 1/2*denom(1/
      4*s12^2)*mt^4*s12*s13*s14^2*s24 + denom(1/4*s12^2)*mt^4*s12*s13*s14^2*
      s23 - 1/2*denom(1/4*s12^2)*mt^6*s12*s23^2*s24 - 2*denom(1/4*s12^2)*mt^6*
      s12*s14*s23*s24 - denom(1/4*s12^2)*mt^6*s12*s14*s23^2 - 1/2*denom(1/4*
      s12^2)*mt^6*s12*s14^2*s24 - denom(1/4*s12^2)*mt^6*s12*s14^2*s23 - denom(
      1/4*s12^2)*mt^6*s12*s13*s23*s24 - 1/2*denom(1/4*s12^2)*mt^6*s12*s13*
      s23^2 - denom(1/4*s12^2)*mt^6*s12*s13*s14*s24 - 2*denom(1/4*s12^2)*mt^6*
      s12*s13*s14*s23 - 1/2*denom(1/4*s12^2)*mt^6*s12*s13*s14^2 + denom(1/4*
      s12^2)*mt^8*s12*s23*s24 + 1/2*denom(1/4*s12^2)*mt^8*s12*s23^2 + denom(1/
      4*s12^2)*mt^8*s12*s14*s24 + 2*denom(1/4*s12^2)*mt^8*s12*s14*s23 + 1/2*
      denom(1/4*s12^2)*mt^8*s12*s14^2 + 1/2*denom(1/4*s12^2)*mt^8*s12*s13*s24
       + denom(1/4*s12^2)*mt^8*s12*s13*s23 + denom(1/4*s12^2)*mt^8*s12*s13*s14
       - 1/2*denom(1/4*s12^2)*mt^10*s12*s24 - denom(1/4*s12^2)*mt^10*s12*s23
       - denom(1/4*s12^2)*mt^10*s12*s14 - 1/2*denom(1/4*s12^2)*mt^10*s12*s13
       + 1/2*denom(1/4*s12^2)*mt^12*s12;
 
 .sort
id KMatrix(14,15) =  1/2*s12*s14*s23*s24^2 + s12*s14*s23^2*s24 + 1/2*s12*s14*
      s23^3 + s12*s14^2*s23*s24 + s12*s14^2*s23^2 + 1/2*s12*s14^3*s23 + s12*
      s13*s14*s23*s24 + s12*s13*s14*s23^2 + s12*s13*s14^2*s23 + 1/2*s12*s13^2*
      s14*s23 + s12^2*s14*s23*s24 + s12^2*s14*s23^2 + s12^2*s14^2*s23 + s12^2*
      s13*s14*s23 + 1/2*s12^3*s14*s23 - mh^2*s12*s14*s23*s24 - mh^2*s12*s14*
      s23^2 - mh^2*s12*s14^2*s23 - mh^2*s12*s13*s14*s23 - mh^2*s12^2*s14*s23
       + 1/2*mh^4*s12*s14*s23 - 1/2*mt^2*s12*s23*s24^2 - mt^2*s12*s23^2*s24 - 
      1/2*mt^2*s12*s23^3 - 1/2*mt^2*s12*s14*s24^2 - 4*mt^2*s12*s14*s23*s24 - 7/
      2*mt^2*s12*s14*s23^2 - mt^2*s12*s14^2*s24 - 7/2*mt^2*s12*s14^2*s23 - 1/2
      *mt^2*s12*s14^3 - mt^2*s12*s13*s23*s24 - mt^2*s12*s13*s23^2 - mt^2*s12*
      s13*s14*s24 - 4*mt^2*s12*s13*s14*s23 - mt^2*s12*s13*s14^2 - 1/2*mt^2*s12
      *s13^2*s23 - 1/2*mt^2*s12*s13^2*s14 - mt^2*s12^2*s23*s24 - mt^2*s12^2*
      s23^2 - mt^2*s12^2*s14*s24 - 4*mt^2*s12^2*s14*s23 - mt^2*s12^2*s14^2 - 
      mt^2*s12^2*s13*s23 - mt^2*s12^2*s13*s14 - 1/2*mt^2*s12^3*s23 - 1/2*mt^2*
      s12^3*s14 + mt^2*mh^2*s12*s23*s24 + mt^2*mh^2*s12*s23^2 + mt^2*mh^2*s12*
      s14*s24 + 4*mt^2*mh^2*s12*s14*s23 + mt^2*mh^2*s12*s14^2 + mt^2*mh^2*s12*
      s13*s23 + mt^2*mh^2*s12*s13*s14 + mt^2*mh^2*s12^2*s23 + mt^2*mh^2*s12^2*
      s14 - 1/2*mt^2*mh^4*s12*s23 - 1/2*mt^2*mh^4*s12*s14 + 1/2*mt^4*s12*s24^2
       + 3*mt^4*s12*s23*s24 + 5/2*mt^4*s12*s23^2 + 3*mt^4*s12*s14*s24 + 7*mt^4
      *s12*s14*s23 + 5/2*mt^4*s12*s14^2 + mt^4*s12*s13*s24 + 3*mt^4*s12*s13*
      s23 + 3*mt^4*s12*s13*s14 + 1/2*mt^4*s12*s13^2 + mt^4*s12^2*s24 + 3*mt^4*
      s12^2*s23 + 3*mt^4*s12^2*s14 + mt^4*s12^2*s13 + 1/2*mt^4*s12^3 - mt^4*
      mh^2*s12*s24 - 3*mt^4*mh^2*s12*s23 - 3*mt^4*mh^2*s12*s14 - mt^4*mh^2*s12
      *s13 - mt^4*mh^2*s12^2 + 1/2*mt^4*mh^4*s12 - 2*mt^6*s12*s24 - 4*mt^6*s12
      *s23 - 4*mt^6*s12*s14 - 2*mt^6*s12*s13 - 2*mt^6*s12^2 + 2*mt^6*mh^2*s12
       + 2*mt^8*s12 + 1/2*denom(1/2*s12)*s12*s14^2*s23^2*s24 + 1/2*denom(1/2*
      s12)*s12*s14^2*s23^3 + 1/2*denom(1/2*s12)*s12*s14^3*s23^2 + 1/2*denom(1/
      2*s12)*s12*s13*s14*s23*s24^2 + 1/2*denom(1/2*s12)*s12*s13*s14*s23^2*s24
       + 1/2*denom(1/2*s12)*s12*s13*s14^2*s23*s24 + 1/2*denom(1/2*s12)*s12*s13
      *s14^2*s23^2 + 1/2*denom(1/2*s12)*s12*s13^2*s14*s23*s24 + 1/2*denom(1/2*
      s12)*s12^2*s14^2*s23^2 + 1/2*denom(1/2*s12)*s12^2*s13*s14*s23*s24 - 1/2*
      denom(1/2*s12)*mh^2*s12*s14^2*s23^2 - 1/2*denom(1/2*s12)*mh^2*s12*s13*
      s14*s23*s24 - 1/2*denom(1/2*s12)*mt^2*s12*s14*s23*s24^2 - 3/2*denom(1/2*
      s12)*mt^2*s12*s14*s23^2*s24 - denom(1/2*s12)*mt^2*s12*s14*s23^3 - 3/2*
      denom(1/2*s12)*mt^2*s12*s14^2*s23*s24 - 3*denom(1/2*s12)*mt^2*s12*s14^2*
      s23^2 - denom(1/2*s12)*mt^2*s12*s14^3*s23 - 1/2*denom(1/2*s12)*mt^2*s12*
      s13*s23*s24^2 - 1/2*denom(1/2*s12)*mt^2*s12*s13*s23^2*s24 - 1/2*denom(1/
      2*s12)*mt^2*s12*s13*s14*s24^2 - 3*denom(1/2*s12)*mt^2*s12*s13*s14*s23*
      s24 - 3/2*denom(1/2*s12)*mt^2*s12*s13*s14*s23^2 - 1/2*denom(1/2*s12)*
      mt^2*s12*s13*s14^2*s24 - 3/2*denom(1/2*s12)*mt^2*s12*s13*s14^2*s23 - 1/2
      *denom(1/2*s12)*mt^2*s12*s13^2*s23*s24 - 1/2*denom(1/2*s12)*mt^2*s12*
      s13^2*s14*s24 - 1/2*denom(1/2*s12)*mt^2*s12*s13^2*s14*s23 - 1/2*denom(1/
      2*s12)*mt^2*s12^2*s14*s23*s24 - denom(1/2*s12)*mt^2*s12^2*s14*s23^2 - 
      denom(1/2*s12)*mt^2*s12^2*s14^2*s23 - 1/2*denom(1/2*s12)*mt^2*s12^2*s13*
      s23*s24 - 1/2*denom(1/2*s12)*mt^2*s12^2*s13*s14*s24 - 1/2*denom(1/2*s12)
      *mt^2*s12^2*s13*s14*s23 + 1/2*denom(1/2*s12)*mt^2*mh^2*s12*s14*s23*s24
       + denom(1/2*s12)*mt^2*mh^2*s12*s14*s23^2 + denom(1/2*s12)*mt^2*mh^2*s12
      *s14^2*s23 + 1/2*denom(1/2*s12)*mt^2*mh^2*s12*s13*s23*s24 + 1/2*denom(1/
      2*s12)*mt^2*mh^2*s12*s13*s14*s24 + 1/2*denom(1/2*s12)*mt^2*mh^2*s12*s13*
      s14*s23 + 1/2*denom(1/2*s12)*mt^4*s12*s23*s24^2 + denom(1/2*s12)*mt^4*
      s12*s23^2*s24 + 1/2*denom(1/2*s12)*mt^4*s12*s23^3 + 1/2*denom(1/2*s12)*
      mt^4*s12*s14*s24^2 + 9/2*denom(1/2*s12)*mt^4*s12*s14*s23*s24 + 5*denom(1/
      2*s12)*mt^4*s12*s14*s23^2 + denom(1/2*s12)*mt^4*s12*s14^2*s24 + 5*denom(
      1/2*s12)*mt^4*s12*s14^2*s23 + 1/2*denom(1/2*s12)*mt^4*s12*s14^3 + 1/2*
      denom(1/2*s12)*mt^4*s12*s13*s24^2 + 5/2*denom(1/2*s12)*mt^4*s12*s13*s23*
      s24 + denom(1/2*s12)*mt^4*s12*s13*s23^2 + 5/2*denom(1/2*s12)*mt^4*s12*
      s13*s14*s24 + 9/2*denom(1/2*s12)*mt^4*s12*s13*s14*s23 + denom(1/2*s12)*
      mt^4*s12*s13*s14^2 + 1/2*denom(1/2*s12)*mt^4*s12*s13^2*s24 + 1/2*denom(1/
      2*s12)*mt^4*s12*s13^2*s23 + 1/2*denom(1/2*s12)*mt^4*s12*s13^2*s14 + 1/2*
      denom(1/2*s12)*mt^4*s12^2*s23*s24 + 1/2*denom(1/2*s12)*mt^4*s12^2*s23^2
       + 1/2*denom(1/2*s12)*mt^4*s12^2*s14*s24 + 5/2*denom(1/2*s12)*mt^4*s12^2
      *s14*s23 + 1/2*denom(1/2*s12)*mt^4*s12^2*s14^2 + 1/2*denom(1/2*s12)*mt^4
      *s12^2*s13*s24 + 1/2*denom(1/2*s12)*mt^4*s12^2*s13*s23 + 1/2*denom(1/2*
      s12)*mt^4*s12^2*s13*s14 - 1/2*denom(1/2*s12)*mt^4*mh^2*s12*s23*s24 - 1/2
      *denom(1/2*s12)*mt^4*mh^2*s12*s23^2 - 1/2*denom(1/2*s12)*mt^4*mh^2*s12*
      s14*s24 - 5/2*denom(1/2*s12)*mt^4*mh^2*s12*s14*s23 - 1/2*denom(1/2*s12)*
      mt^4*mh^2*s12*s14^2 - 1/2*denom(1/2*s12)*mt^4*mh^2*s12*s13*s24 - 1/2*
      denom(1/2*s12)*mt^4*mh^2*s12*s13*s23 - 1/2*denom(1/2*s12)*mt^4*mh^2*s12*
      s13*s14 - 1/2*denom(1/2*s12)*mt^6*s12*s24^2 - 3*denom(1/2*s12)*mt^6*s12*
      s23*s24 - 5/2*denom(1/2*s12)*mt^6*s12*s23^2 - 3*denom(1/2*s12)*mt^6*s12*
      s14*s24 - 8*denom(1/2*s12)*mt^6*s12*s14*s23 - 5/2*denom(1/2*s12)*mt^6*
      s12*s14^2 - 2*denom(1/2*s12)*mt^6*s12*s13*s24 - 3*denom(1/2*s12)*mt^6*
      s12*s13*s23 - 3*denom(1/2*s12)*mt^6*s12*s13*s14 - 1/2*denom(1/2*s12)*
      mt^6*s12*s13^2 - 1/2*denom(1/2*s12)*mt^6*s12^2*s24 - 3/2*denom(1/2*s12)*
      mt^6*s12^2*s23 - 3/2*denom(1/2*s12)*mt^6*s12^2*s14 - 1/2*denom(1/2*s12)*
      mt^6*s12^2*s13 + 1/2*denom(1/2*s12)*mt^6*mh^2*s12*s24 + 3/2*denom(1/2*
      s12)*mt^6*mh^2*s12*s23 + 3/2*denom(1/2*s12)*mt^6*mh^2*s12*s14 + 1/2*
      denom(1/2*s12)*mt^6*mh^2*s12*s13 + 2*denom(1/2*s12)*mt^8*s12*s24 + 4*
      denom(1/2*s12)*mt^8*s12*s23 + 4*denom(1/2*s12)*mt^8*s12*s14 + 2*denom(1/
      2*s12)*mt^8*s12*s13 + denom(1/2*s12)*mt^8*s12^2 - denom(1/2*s12)*mt^8*
      mh^2*s12 - 2*denom(1/2*s12)*mt^10*s12 + 1/8*denom(1/4*s12^2)*s12*s14^3*
      s23^3 + 1/4*denom(1/4*s12^2)*s12*s13*s14^2*s23^2*s24 + 1/8*denom(1/4*
      s12^2)*s12*s13^2*s14*s23*s24^2 - 1/4*denom(1/4*s12^2)*mt^2*s12*s14^2*
      s23^2*s24 - 3/8*denom(1/4*s12^2)*mt^2*s12*s14^2*s23^3 - 3/8*denom(1/4*
      s12^2)*mt^2*s12*s14^3*s23^2 - 1/4*denom(1/4*s12^2)*mt^2*s12*s13*s14*s23*
      s24^2 - 1/2*denom(1/4*s12^2)*mt^2*s12*s13*s14*s23^2*s24 - 1/2*denom(1/4*
      s12^2)*mt^2*s12*s13*s14^2*s23*s24 - 1/4*denom(1/4*s12^2)*mt^2*s12*s13*
      s14^2*s23^2 - 1/8*denom(1/4*s12^2)*mt^2*s12*s13^2*s23*s24^2 - 1/8*denom(
      1/4*s12^2)*mt^2*s12*s13^2*s14*s24^2 - 1/4*denom(1/4*s12^2)*mt^2*s12*
      s13^2*s14*s23*s24 + 1/8*denom(1/4*s12^2)*mt^4*s12*s14*s23*s24^2 + 1/2*
      denom(1/4*s12^2)*mt^4*s12*s14*s23^2*s24 + 3/8*denom(1/4*s12^2)*mt^4*s12*
      s14*s23^3 + 1/2*denom(1/4*s12^2)*mt^4*s12*s14^2*s23*s24 + 11/8*denom(1/4
      *s12^2)*mt^4*s12*s14^2*s23^2 + 3/8*denom(1/4*s12^2)*mt^4*s12*s14^3*s23
       + 1/4*denom(1/4*s12^2)*mt^4*s12*s13*s23*s24^2 + 1/4*denom(1/4*s12^2)*
      mt^4*s12*s13*s23^2*s24 + 1/4*denom(1/4*s12^2)*mt^4*s12*s13*s14*s24^2 + 3/
      2*denom(1/4*s12^2)*mt^4*s12*s13*s14*s23*s24 + 1/2*denom(1/4*s12^2)*mt^4*
      s12*s13*s14*s23^2 + 1/4*denom(1/4*s12^2)*mt^4*s12*s13*s14^2*s24 + 1/2*
      denom(1/4*s12^2)*mt^4*s12*s13*s14^2*s23 + 1/8*denom(1/4*s12^2)*mt^4*s12*
      s13^2*s24^2 + 1/4*denom(1/4*s12^2)*mt^4*s12*s13^2*s23*s24 + 1/4*denom(1/
      4*s12^2)*mt^4*s12*s13^2*s14*s24 + 1/8*denom(1/4*s12^2)*mt^4*s12*s13^2*
      s14*s23 - 1/8*denom(1/4*s12^2)*mt^6*s12*s23*s24^2 - 1/4*denom(1/4*s12^2)
      *mt^6*s12*s23^2*s24 - 1/8*denom(1/4*s12^2)*mt^6*s12*s23^3 - 1/8*denom(1/
      4*s12^2)*mt^6*s12*s14*s24^2 - 5/4*denom(1/4*s12^2)*mt^6*s12*s14*s23*s24
       - 13/8*denom(1/4*s12^2)*mt^6*s12*s14*s23^2 - 1/4*denom(1/4*s12^2)*mt^6*
      s12*s14^2*s24 - 13/8*denom(1/4*s12^2)*mt^6*s12*s14^2*s23 - 1/8*denom(1/4
      *s12^2)*mt^6*s12*s14^3 - 1/4*denom(1/4*s12^2)*mt^6*s12*s13*s24^2 - 
      denom(1/4*s12^2)*mt^6*s12*s13*s23*s24 - 1/4*denom(1/4*s12^2)*mt^6*s12*
      s13*s23^2 - denom(1/4*s12^2)*mt^6*s12*s13*s14*s24 - 5/4*denom(1/4*s12^2)
      *mt^6*s12*s13*s14*s23 - 1/4*denom(1/4*s12^2)*mt^6*s12*s13*s14^2 - 1/4*
      denom(1/4*s12^2)*mt^6*s12*s13^2*s24 - 1/8*denom(1/4*s12^2)*mt^6*s12*
      s13^2*s23 - 1/8*denom(1/4*s12^2)*mt^6*s12*s13^2*s14 + 1/8*denom(1/4*
      s12^2)*mt^8*s12*s24^2 + 3/4*denom(1/4*s12^2)*mt^8*s12*s23*s24 + 5/8*
      denom(1/4*s12^2)*mt^8*s12*s23^2 + 3/4*denom(1/4*s12^2)*mt^8*s12*s14*s24
       + 9/4*denom(1/4*s12^2)*mt^8*s12*s14*s23 + 5/8*denom(1/4*s12^2)*mt^8*s12
      *s14^2 + 3/4*denom(1/4*s12^2)*mt^8*s12*s13*s24 + 3/4*denom(1/4*s12^2)*
      mt^8*s12*s13*s23 + 3/4*denom(1/4*s12^2)*mt^8*s12*s13*s14 + 1/8*denom(1/4
      *s12^2)*mt^8*s12*s13^2 - 1/2*denom(1/4*s12^2)*mt^10*s12*s24 - denom(1/4*
      s12^2)*mt^10*s12*s23 - denom(1/4*s12^2)*mt^10*s12*s14 - 1/2*denom(1/4*
      s12^2)*mt^10*s12*s13 + 1/2*denom(1/4*s12^2)*mt^12*s12;
 
 .sort
id KMatrix(14,16) =   - mt^2*s12*s14*s23*s24 - mt^2*s12*s14*s23^2 - mt^2*s12*
      s14^2*s23 - mt^2*s12*s13*s14*s23 - mt^2*s12^2*s14*s23 + mt^2*mh^2*s12*
      s14*s23 + mt^4*s12*s23*s24 + mt^4*s12*s23^2 + mt^4*s12*s14*s24 + 4*mt^4*
      s12*s14*s23 + mt^4*s12*s14^2 + mt^4*s12*s13*s23 + mt^4*s12*s13*s14 + 
      mt^4*s12^2*s23 + mt^4*s12^2*s14 - mt^4*mh^2*s12*s23 - mt^4*mh^2*s12*s14
       - mt^6*s12*s24 - 3*mt^6*s12*s23 - 3*mt^6*s12*s14 - mt^6*s12*s13 - mt^6*
      s12^2 + mt^6*mh^2*s12 + 2*mt^8*s12 + 1/2*denom(1/2*s12)*s12*s14^2*s23*
      s24^2 + 1/2*denom(1/2*s12)*s12*s14^2*s23^2*s24 + 1/2*denom(1/2*s12)*s12*
      s14^3*s23*s24 + 1/2*denom(1/2*s12)*s12*s13*s14^2*s23*s24 + 1/2*denom(1/2
      *s12)*s12^2*s14^2*s23*s24 - 1/2*denom(1/2*s12)*mh^2*s12*s14^2*s23*s24 - 
      denom(1/2*s12)*mt^2*s12*s14*s23*s24^2 - denom(1/2*s12)*mt^2*s12*s14*
      s23^2*s24 - 1/2*denom(1/2*s12)*mt^2*s12*s14^2*s24^2 - 3*denom(1/2*s12)*
      mt^2*s12*s14^2*s23*s24 - denom(1/2*s12)*mt^2*s12*s14^2*s23^2 - 1/2*
      denom(1/2*s12)*mt^2*s12*s14^3*s24 - 1/2*denom(1/2*s12)*mt^2*s12*s14^3*
      s23 - 3/2*denom(1/2*s12)*mt^2*s12*s13*s14*s23*s24 - 1/2*denom(1/2*s12)*
      mt^2*s12*s13*s14^2*s24 - 1/2*denom(1/2*s12)*mt^2*s12*s13*s14^2*s23 - 
      denom(1/2*s12)*mt^2*s12^2*s14*s23*s24 - 1/2*denom(1/2*s12)*mt^2*s12^2*
      s14^2*s24 - 1/2*denom(1/2*s12)*mt^2*s12^2*s14^2*s23 + denom(1/2*s12)*
      mt^2*mh^2*s12*s14*s23*s24 + 1/2*denom(1/2*s12)*mt^2*mh^2*s12*s14^2*s24
       + 1/2*denom(1/2*s12)*mt^2*mh^2*s12*s14^2*s23 + 1/2*denom(1/2*s12)*mt^4*
      s12*s23*s24^2 + 1/2*denom(1/2*s12)*mt^4*s12*s23^2*s24 + denom(1/2*s12)*
      mt^4*s12*s14*s24^2 + 5*denom(1/2*s12)*mt^4*s12*s14*s23*s24 + 2*denom(1/2
      *s12)*mt^4*s12*s14*s23^2 + 5/2*denom(1/2*s12)*mt^4*s12*s14^2*s24 + 7/2*
      denom(1/2*s12)*mt^4*s12*s14^2*s23 + 1/2*denom(1/2*s12)*mt^4*s12*s14^3 + 
      denom(1/2*s12)*mt^4*s12*s13*s23*s24 + 3/2*denom(1/2*s12)*mt^4*s12*s13*
      s14*s24 + 3/2*denom(1/2*s12)*mt^4*s12*s13*s14*s23 + 1/2*denom(1/2*s12)*
      mt^4*s12*s13*s14^2 + 1/2*denom(1/2*s12)*mt^4*s12^2*s23*s24 + denom(1/2*
      s12)*mt^4*s12^2*s14*s24 + denom(1/2*s12)*mt^4*s12^2*s14*s23 + 1/2*denom(
      1/2*s12)*mt^4*s12^2*s14^2 - 1/2*denom(1/2*s12)*mt^4*mh^2*s12*s23*s24 - 
      denom(1/2*s12)*mt^4*mh^2*s12*s14*s24 - denom(1/2*s12)*mt^4*mh^2*s12*s14*
      s23 - 1/2*denom(1/2*s12)*mt^4*mh^2*s12*s14^2 - 1/2*denom(1/2*s12)*mt^6*
      s12*s24^2 - 5/2*denom(1/2*s12)*mt^6*s12*s23*s24 - denom(1/2*s12)*mt^6*
      s12*s23^2 - 4*denom(1/2*s12)*mt^6*s12*s14*s24 - 6*denom(1/2*s12)*mt^6*
      s12*s14*s23 - 5/2*denom(1/2*s12)*mt^6*s12*s14^2 - denom(1/2*s12)*mt^6*
      s12*s13*s24 - denom(1/2*s12)*mt^6*s12*s13*s23 - 3/2*denom(1/2*s12)*mt^6*
      s12*s13*s14 - 1/2*denom(1/2*s12)*mt^6*s12^2*s24 - 1/2*denom(1/2*s12)*
      mt^6*s12^2*s23 - denom(1/2*s12)*mt^6*s12^2*s14 + 1/2*denom(1/2*s12)*mt^6
      *mh^2*s12*s24 + 1/2*denom(1/2*s12)*mt^6*mh^2*s12*s23 + denom(1/2*s12)*
      mt^6*mh^2*s12*s14 + 2*denom(1/2*s12)*mt^8*s12*s24 + 3*denom(1/2*s12)*
      mt^8*s12*s23 + 4*denom(1/2*s12)*mt^8*s12*s14 + denom(1/2*s12)*mt^8*s12*
      s13 + 1/2*denom(1/2*s12)*mt^8*s12^2 - 1/2*denom(1/2*s12)*mt^8*mh^2*s12
       - 2*denom(1/2*s12)*mt^10*s12 + 1/4*denom(1/4*s12^2)*s12*s14^3*s23^2*s24
       + 1/4*denom(1/4*s12^2)*s12*s13*s14^2*s23*s24^2 - 1/4*denom(1/4*s12^2)*
      mt^2*s12*s14^2*s23*s24^2 - 3/4*denom(1/4*s12^2)*mt^2*s12*s14^2*s23^2*s24
       - 1/2*denom(1/4*s12^2)*mt^2*s12*s14^3*s23*s24 - 1/4*denom(1/4*s12^2)*
      mt^2*s12*s14^3*s23^2 - 1/2*denom(1/4*s12^2)*mt^2*s12*s13*s14*s23*s24^2
       - 1/4*denom(1/4*s12^2)*mt^2*s12*s13*s14^2*s24^2 - 1/2*denom(1/4*s12^2)*
      mt^2*s12*s13*s14^2*s23*s24 + 1/2*denom(1/4*s12^2)*mt^4*s12*s14*s23*s24^2
       + 3/4*denom(1/4*s12^2)*mt^4*s12*s14*s23^2*s24 + 1/4*denom(1/4*s12^2)*
      mt^4*s12*s14^2*s24^2 + 2*denom(1/4*s12^2)*mt^4*s12*s14^2*s23*s24 + 3/4*
      denom(1/4*s12^2)*mt^4*s12*s14^2*s23^2 + 1/4*denom(1/4*s12^2)*mt^4*s12*
      s14^3*s24 + 1/2*denom(1/4*s12^2)*mt^4*s12*s14^3*s23 + 1/4*denom(1/4*
      s12^2)*mt^4*s12*s13*s23*s24^2 + 1/2*denom(1/4*s12^2)*mt^4*s12*s13*s14*
      s24^2 + denom(1/4*s12^2)*mt^4*s12*s13*s14*s23*s24 + 1/2*denom(1/4*s12^2)
      *mt^4*s12*s13*s14^2*s24 + 1/4*denom(1/4*s12^2)*mt^4*s12*s13*s14^2*s23 - 
      1/4*denom(1/4*s12^2)*mt^6*s12*s23*s24^2 - 1/4*denom(1/4*s12^2)*mt^6*s12*
      s23^2*s24 - 1/2*denom(1/4*s12^2)*mt^6*s12*s14*s24^2 - 5/2*denom(1/4*
      s12^2)*mt^6*s12*s14*s23*s24 - 3/4*denom(1/4*s12^2)*mt^6*s12*s14*s23^2 - 
      5/4*denom(1/4*s12^2)*mt^6*s12*s14^2*s24 - 7/4*denom(1/4*s12^2)*mt^6*s12*
      s14^2*s23 - 1/4*denom(1/4*s12^2)*mt^6*s12*s14^3 - 1/4*denom(1/4*s12^2)*
      mt^6*s12*s13*s24^2 - 1/2*denom(1/4*s12^2)*mt^6*s12*s13*s23*s24 - denom(1/
      4*s12^2)*mt^6*s12*s13*s14*s24 - 1/2*denom(1/4*s12^2)*mt^6*s12*s13*s14*
      s23 - 1/4*denom(1/4*s12^2)*mt^6*s12*s13*s14^2 + 1/4*denom(1/4*s12^2)*
      mt^8*s12*s24^2 + denom(1/4*s12^2)*mt^8*s12*s23*s24 + 1/4*denom(1/4*s12^2
      )*mt^8*s12*s23^2 + 7/4*denom(1/4*s12^2)*mt^8*s12*s14*s24 + 2*denom(1/4*
      s12^2)*mt^8*s12*s14*s23 + denom(1/4*s12^2)*mt^8*s12*s14^2 + 1/2*denom(1/
      4*s12^2)*mt^8*s12*s13*s24 + 1/4*denom(1/4*s12^2)*mt^8*s12*s13*s23 + 1/2*
      denom(1/4*s12^2)*mt^8*s12*s13*s14 - 3/4*denom(1/4*s12^2)*mt^10*s12*s24
       - 3/4*denom(1/4*s12^2)*mt^10*s12*s23 - 5/4*denom(1/4*s12^2)*mt^10*s12*
      s14 - 1/4*denom(1/4*s12^2)*mt^10*s12*s13 + 1/2*denom(1/4*s12^2)*mt^12*
      s12;
 
 .sort
id KMatrix(14,17) =   - 1/2*s14*s23*s24 - 1/2*s14*s23^2 - 1/2*s14^2*s23 + 1/2*
      s13*s24^2 + 1/2*s13*s23*s24 + 1/2*s13*s14*s24 - 1/2*s13*s14*s23 + 1/2*
      s13^2*s24 + 1/2*s12*s24^2 + s12*s23*s24 + 1/2*s12*s23^2 + s12*s14*s24 + 
      1/2*s12*s14*s23 + 1/2*s12*s14^2 + 3/2*s12*s13*s24 + s12*s13*s23 + s12*
      s13*s14 + 1/2*s12*s13^2 + s12^2*s24 + s12^2*s23 + s12^2*s14 + s12^2*s13
       + 1/2*s12^3 + 1/2*mh^2*s14*s23 - 1/2*mh^2*s13*s24 - mh^2*s12*s24 - mh^2
      *s12*s23 - mh^2*s12*s14 - mh^2*s12*s13 - mh^2*s12^2 + 1/2*mh^4*s12 - 1/2
      *mt^2*s24^2 + 1/2*mt^2*s23^2 + 2*mt^2*s14*s23 + 1/2*mt^2*s14^2 - 2*mt^2*
      s13*s24 - 1/2*mt^2*s13^2 - 3/2*mt^2*s12*s24 - 1/2*mt^2*s12*s23 - 1/2*
      mt^2*s12*s14 - 3/2*mt^2*s12*s13 - mt^2*s12^2 + 1/2*mt^2*mh^2*s24 - 1/2*
      mt^2*mh^2*s23 - 1/2*mt^2*mh^2*s14 + 1/2*mt^2*mh^2*s13 + mt^2*mh^2*s12 + 
      mt^4*s24 - mt^4*s23 - mt^4*s14 + mt^4*s13 - 1/2*denom(1/2*s12)*s14^2*
      s23^2 + 1/2*denom(1/2*s12)*s13^2*s24^2 + 1/2*denom(1/2*s12)*s12*s14*s23*
      s24 + 1/2*denom(1/2*s12)*s12*s14*s23^2 + 1/2*denom(1/2*s12)*s12*s14^2*
      s23 + 1/2*denom(1/2*s12)*s12*s13*s24^2 + 1/2*denom(1/2*s12)*s12*s13*s23*
      s24 + 1/2*denom(1/2*s12)*s12*s13*s14*s24 + 1/2*denom(1/2*s12)*s12*s13*
      s14*s23 + 1/2*denom(1/2*s12)*s12*s13^2*s24 + 1/2*denom(1/2*s12)*s12^2*
      s14*s23 + 1/2*denom(1/2*s12)*s12^2*s13*s24 - 1/2*denom(1/2*s12)*mh^2*s12
      *s14*s23 - 1/2*denom(1/2*s12)*mh^2*s12*s13*s24 + denom(1/2*s12)*mt^2*s14
      *s23^2 + denom(1/2*s12)*mt^2*s14^2*s23 - denom(1/2*s12)*mt^2*s13*s24^2
       - denom(1/2*s12)*mt^2*s13^2*s24 - 1/2*denom(1/2*s12)*mt^2*s12*s24^2 - 
      denom(1/2*s12)*mt^2*s12*s23*s24 - 1/2*denom(1/2*s12)*mt^2*s12*s23^2 - 
      denom(1/2*s12)*mt^2*s12*s14*s24 - denom(1/2*s12)*mt^2*s12*s14*s23 - 1/2*
      denom(1/2*s12)*mt^2*s12*s14^2 - denom(1/2*s12)*mt^2*s12*s13*s24 - denom(
      1/2*s12)*mt^2*s12*s13*s23 - denom(1/2*s12)*mt^2*s12*s13*s14 - 1/2*denom(
      1/2*s12)*mt^2*s12*s13^2 - 1/2*denom(1/2*s12)*mt^2*s12^2*s24 - 1/2*denom(
      1/2*s12)*mt^2*s12^2*s23 - 1/2*denom(1/2*s12)*mt^2*s12^2*s14 - 1/2*denom(
      1/2*s12)*mt^2*s12^2*s13 + 1/2*denom(1/2*s12)*mt^2*mh^2*s12*s24 + 1/2*
      denom(1/2*s12)*mt^2*mh^2*s12*s23 + 1/2*denom(1/2*s12)*mt^2*mh^2*s12*s14
       + 1/2*denom(1/2*s12)*mt^2*mh^2*s12*s13 + 1/2*denom(1/2*s12)*mt^4*s24^2
       - 1/2*denom(1/2*s12)*mt^4*s23^2 - 2*denom(1/2*s12)*mt^4*s14*s23 - 1/2*
      denom(1/2*s12)*mt^4*s14^2 + 2*denom(1/2*s12)*mt^4*s13*s24 + 1/2*denom(1/
      2*s12)*mt^4*s13^2 + denom(1/2*s12)*mt^4*s12*s24 + denom(1/2*s12)*mt^4*
      s12*s23 + denom(1/2*s12)*mt^4*s12*s14 + denom(1/2*s12)*mt^4*s12*s13 + 
      denom(1/2*s12)*mt^4*s12^2 - denom(1/2*s12)*mt^4*mh^2*s12 - denom(1/2*s12
      )*mt^6*s24 + denom(1/2*s12)*mt^6*s23 + denom(1/2*s12)*mt^6*s14 - denom(1/
      2*s12)*mt^6*s13 + 1/8*denom(1/4*s12^2)*s12*s14^2*s23^2 - 1/8*denom(1/4*
      s12^2)*s12*s13^2*s24^2 - 1/8*denom(1/4*s12^2)*s12^2*s14*s23*s24 - 1/8*
      denom(1/4*s12^2)*s12^2*s14*s23^2 - 1/8*denom(1/4*s12^2)*s12^2*s14^2*s23
       - 1/8*denom(1/4*s12^2)*s12^2*s13*s24^2 - 1/8*denom(1/4*s12^2)*s12^2*s13
      *s23*s24 - 1/8*denom(1/4*s12^2)*s12^2*s13*s14*s24 - 1/8*denom(1/4*s12^2)
      *s12^2*s13*s14*s23 - 1/8*denom(1/4*s12^2)*s12^2*s13^2*s24 - 1/8*denom(1/
      4*s12^2)*s12^3*s14*s23 - 1/8*denom(1/4*s12^2)*s12^3*s13*s24 + 1/8*denom(
      1/4*s12^2)*mh^2*s12^2*s14*s23 + 1/8*denom(1/4*s12^2)*mh^2*s12^2*s13*s24
       - 1/4*denom(1/4*s12^2)*mt^2*s12*s14*s23^2 - 1/4*denom(1/4*s12^2)*mt^2*
      s12*s14^2*s23 + 1/4*denom(1/4*s12^2)*mt^2*s12*s13*s24^2 + 1/4*denom(1/4*
      s12^2)*mt^2*s12*s13^2*s24 + 1/8*denom(1/4*s12^2)*mt^2*s12^2*s24^2 + 1/4*
      denom(1/4*s12^2)*mt^2*s12^2*s23*s24 + 1/8*denom(1/4*s12^2)*mt^2*s12^2*
      s23^2 + 1/4*denom(1/4*s12^2)*mt^2*s12^2*s14*s24 + 1/4*denom(1/4*s12^2)*
      mt^2*s12^2*s14*s23 + 1/8*denom(1/4*s12^2)*mt^2*s12^2*s14^2 + 1/4*denom(1/
      4*s12^2)*mt^2*s12^2*s13*s24 + 1/4*denom(1/4*s12^2)*mt^2*s12^2*s13*s23 + 
      1/4*denom(1/4*s12^2)*mt^2*s12^2*s13*s14 + 1/8*denom(1/4*s12^2)*mt^2*
      s12^2*s13^2 + 1/8*denom(1/4*s12^2)*mt^2*s12^3*s24 + 1/8*denom(1/4*s12^2)
      *mt^2*s12^3*s23 + 1/8*denom(1/4*s12^2)*mt^2*s12^3*s14 + 1/8*denom(1/4*
      s12^2)*mt^2*s12^3*s13 - 1/8*denom(1/4*s12^2)*mt^2*mh^2*s12^2*s24 - 1/8*
      denom(1/4*s12^2)*mt^2*mh^2*s12^2*s23 - 1/8*denom(1/4*s12^2)*mt^2*mh^2*
      s12^2*s14 - 1/8*denom(1/4*s12^2)*mt^2*mh^2*s12^2*s13 - 1/8*denom(1/4*
      s12^2)*mt^4*s12*s24^2 + 1/8*denom(1/4*s12^2)*mt^4*s12*s23^2 + 1/2*denom(
      1/4*s12^2)*mt^4*s12*s14*s23 + 1/8*denom(1/4*s12^2)*mt^4*s12*s14^2 - 1/2*
      denom(1/4*s12^2)*mt^4*s12*s13*s24 - 1/8*denom(1/4*s12^2)*mt^4*s12*s13^2
       - 1/4*denom(1/4*s12^2)*mt^4*s12^2*s24 - 1/4*denom(1/4*s12^2)*mt^4*s12^2
      *s23 - 1/4*denom(1/4*s12^2)*mt^4*s12^2*s14 - 1/4*denom(1/4*s12^2)*mt^4*
      s12^2*s13 - 1/4*denom(1/4*s12^2)*mt^4*s12^3 + 1/4*denom(1/4*s12^2)*mt^4*
      mh^2*s12^2 + 1/4*denom(1/4*s12^2)*mt^6*s12*s24 - 1/4*denom(1/4*s12^2)*
      mt^6*s12*s23 - 1/4*denom(1/4*s12^2)*mt^6*s12*s14 + 1/4*denom(1/4*s12^2)*
      mt^6*s12*s13;
 
 .sort
id KMatrix(14,18) =   - mt*s12*s14*s24 - mt*s12*s14*s23 - mt*s12*s14^2 - mt*
      s12*s13*s14 - mt*s12^2*s14 + mt*mh^2*s12*s14 + mt^3*s12*s24 + mt^3*s12*
      s23 + 3*mt^3*s12*s14 + mt^3*s12*s13 + mt^3*s12^2 - mt^3*mh^2*s12 - 2*
      mt^5*s12 - denom(1/2*s12)*mt*s12*s14^2*s23 - denom(1/2*s12)*mt*s12*s13*
      s14*s24 + denom(1/2*s12)*mt^3*s12*s14*s24 + 2*denom(1/2*s12)*mt^3*s12*
      s14*s23 + denom(1/2*s12)*mt^3*s12*s14^2 + denom(1/2*s12)*mt^3*s12*s13*
      s24 + denom(1/2*s12)*mt^3*s12*s13*s14 - denom(1/2*s12)*mt^5*s12*s24 - 
      denom(1/2*s12)*mt^5*s12*s23 - 3*denom(1/2*s12)*mt^5*s12*s14 - denom(1/2*
      s12)*mt^5*s12*s13 + 2*denom(1/2*s12)*mt^7*s12 + 1/4*denom(1/4*s12^2)*mt*
      s12^2*s14^2*s23 + 1/4*denom(1/4*s12^2)*mt*s12^2*s13*s14*s24 - 1/4*denom(
      1/4*s12^2)*mt^3*s12^2*s14*s24 - 1/2*denom(1/4*s12^2)*mt^3*s12^2*s14*s23
       - 1/4*denom(1/4*s12^2)*mt^3*s12^2*s14^2 - 1/4*denom(1/4*s12^2)*mt^3*
      s12^2*s13*s24 - 1/4*denom(1/4*s12^2)*mt^3*s12^2*s13*s14 + 1/4*denom(1/4*
      s12^2)*mt^5*s12^2*s24 + 1/4*denom(1/4*s12^2)*mt^5*s12^2*s23 + 3/4*denom(
      1/4*s12^2)*mt^5*s12^2*s14 + 1/4*denom(1/4*s12^2)*mt^5*s12^2*s13 - 1/2*
      denom(1/4*s12^2)*mt^7*s12^2;
 
 .sort
id KMatrix(14,19) =  mt*s12*s23*s24 + mt*s12*s23^2 + mt*s12*s14*s23 + mt*s12*
      s13*s23 + mt*s12^2*s23 - mt*mh^2*s12*s23 - mt^3*s12*s24 - 3*mt^3*s12*s23
       - mt^3*s12*s14 - mt^3*s12*s13 - mt^3*s12^2 + mt^3*mh^2*s12 + 2*mt^5*s12
       + denom(1/2*s12)*mt*s12*s14*s23^2 + denom(1/2*s12)*mt*s12*s13*s23*s24
       - denom(1/2*s12)*mt^3*s12*s23*s24 - denom(1/2*s12)*mt^3*s12*s23^2 - 2*
      denom(1/2*s12)*mt^3*s12*s14*s23 - denom(1/2*s12)*mt^3*s12*s13*s24 - 
      denom(1/2*s12)*mt^3*s12*s13*s23 + denom(1/2*s12)*mt^5*s12*s24 + 3*denom(
      1/2*s12)*mt^5*s12*s23 + denom(1/2*s12)*mt^5*s12*s14 + denom(1/2*s12)*
      mt^5*s12*s13 - 2*denom(1/2*s12)*mt^7*s12 - 1/4*denom(1/4*s12^2)*mt*s12^2
      *s14*s23^2 - 1/4*denom(1/4*s12^2)*mt*s12^2*s13*s23*s24 + 1/4*denom(1/4*
      s12^2)*mt^3*s12^2*s23*s24 + 1/4*denom(1/4*s12^2)*mt^3*s12^2*s23^2 + 1/2*
      denom(1/4*s12^2)*mt^3*s12^2*s14*s23 + 1/4*denom(1/4*s12^2)*mt^3*s12^2*
      s13*s24 + 1/4*denom(1/4*s12^2)*mt^3*s12^2*s13*s23 - 1/4*denom(1/4*s12^2)
      *mt^5*s12^2*s24 - 3/4*denom(1/4*s12^2)*mt^5*s12^2*s23 - 1/4*denom(1/4*
      s12^2)*mt^5*s12^2*s14 - 1/4*denom(1/4*s12^2)*mt^5*s12^2*s13 + 1/2*denom(
      1/4*s12^2)*mt^7*s12^2;
 
 .sort
id KMatrix(14,20) =  1/2*mt*s12*s24^2 + mt*s12*s23*s24 + 1/2*mt*s12*s23^2 + mt
      *s12*s14*s24 + mt*s12*s14*s23 + 1/2*mt*s12*s14^2 + mt*s12*s13*s24 + mt*
      s12*s13*s23 + mt*s12*s13*s14 + 1/2*mt*s12*s13^2 + mt*s12^2*s24 + mt*
      s12^2*s23 + mt*s12^2*s14 + mt*s12^2*s13 + 1/2*mt*s12^3 - mt*mh^2*s12*s24
       - mt*mh^2*s12*s23 - mt*mh^2*s12*s14 - mt*mh^2*s12*s13 - mt*mh^2*s12^2
       + 1/2*mt*mh^4*s12 - mt^3*s12*s24 - mt^3*s12*s23 - mt^3*s12*s14 - mt^3*
      s12*s13 - mt^3*s12^2 + mt^3*mh^2*s12 + 1/2*denom(1/2*s12)*mt*s12*s14*s23
      *s24 + 1/2*denom(1/2*s12)*mt*s12*s14*s23^2 + 1/2*denom(1/2*s12)*mt*s12*
      s14^2*s23 + 1/2*denom(1/2*s12)*mt*s12*s13*s24^2 - 1/2*denom(1/2*s12)*mt*
      s12*s13*s23^2 + 1/2*denom(1/2*s12)*mt*s12*s13*s14*s24 + 1/2*denom(1/2*
      s12)*mt*s12*s13^2*s24 - 1/2*denom(1/2*s12)*mt*s12*s13^2*s23 + 1/2*denom(
      1/2*s12)*mt*s12^2*s14*s23 + 1/2*denom(1/2*s12)*mt*s12^2*s13*s24 - 1/2*
      denom(1/2*s12)*mt*s12^2*s13*s23 - 1/2*denom(1/2*s12)*mt*mh^2*s12*s14*s23
       - 1/2*denom(1/2*s12)*mt*mh^2*s12*s13*s24 + 1/2*denom(1/2*s12)*mt*mh^2*
      s12*s13*s23 - 1/2*denom(1/2*s12)*mt^3*s12*s24^2 - 1/2*denom(1/2*s12)*
      mt^3*s12*s23*s24 - denom(1/2*s12)*mt^3*s12*s14*s24 - denom(1/2*s12)*mt^3
      *s12*s14*s23 - 1/2*denom(1/2*s12)*mt^3*s12*s14^2 - denom(1/2*s12)*mt^3*
      s12*s13*s24 + denom(1/2*s12)*mt^3*s12*s13*s23 - 1/2*denom(1/2*s12)*mt^3*
      s12*s13*s14 - 1/2*denom(1/2*s12)*mt^3*s12^2*s24 - 1/2*denom(1/2*s12)*
      mt^3*s12^2*s14 + 1/2*denom(1/2*s12)*mt^3*mh^2*s12*s24 + 1/2*denom(1/2*
      s12)*mt^3*mh^2*s12*s14 + denom(1/2*s12)*mt^5*s12*s24 + denom(1/2*s12)*
      mt^5*s12*s14 + 1/2*denom(1/2*s12)*mt^5*s12^2 - 1/2*denom(1/2*s12)*mt^5*
      mh^2*s12 + 1/8*denom(1/4*s12^2)*mt*s12*s14^2*s23^2 + 1/4*denom(1/4*s12^2
      )*mt*s12*s13*s14*s23*s24 - 1/4*denom(1/4*s12^2)*mt*s12*s13*s14*s23^2 + 1/
      8*denom(1/4*s12^2)*mt*s12*s13^2*s24^2 - 1/4*denom(1/4*s12^2)*mt*s12*
      s13^2*s23*s24 - 1/4*denom(1/4*s12^2)*mt^3*s12*s14*s23*s24 - 1/4*denom(1/
      4*s12^2)*mt^3*s12*s14^2*s23 - 1/4*denom(1/4*s12^2)*mt^3*s12*s13*s24^2 + 
      1/4*denom(1/4*s12^2)*mt^3*s12*s13*s23*s24 + 1/4*denom(1/4*s12^2)*mt^3*
      s12*s13*s23^2 - 1/4*denom(1/4*s12^2)*mt^3*s12*s13*s14*s24 + 1/4*denom(1/
      4*s12^2)*mt^3*s12*s13*s14*s23 + 1/4*denom(1/4*s12^2)*mt^3*s12*s13^2*s23
       + 1/8*denom(1/4*s12^2)*mt^5*s12*s24^2 - 1/8*denom(1/4*s12^2)*mt^5*s12*
      s23^2 + 1/4*denom(1/4*s12^2)*mt^5*s12*s14*s24 + 1/4*denom(1/4*s12^2)*
      mt^5*s12*s14*s23 + 1/8*denom(1/4*s12^2)*mt^5*s12*s14^2 + 1/4*denom(1/4*
      s12^2)*mt^5*s12*s13*s24 - 3/4*denom(1/4*s12^2)*mt^5*s12*s13*s23 - 1/8*
      denom(1/4*s12^2)*mt^5*s12*s13^2 - 1/4*denom(1/4*s12^2)*mt^7*s12*s24 + 1/
      4*denom(1/4*s12^2)*mt^7*s12*s23 - 1/4*denom(1/4*s12^2)*mt^7*s12*s14 + 1/
      4*denom(1/4*s12^2)*mt^7*s12*s13;
 
 .sort
id KMatrix(14,21) =   - mt^3*s12*s24 - mt^3*s12*s23 - mt^3*s12*s14 - mt^3*s12*
      s13 - mt^3*s12^2 + mt^3*mh^2*s12 + 1/2*denom(1/2*s12)*mt*s12*s14*s24^2
       + 1/2*denom(1/2*s12)*mt*s12*s14*s23*s24 + 1/2*denom(1/2*s12)*mt*s12*
      s14^2*s24 + 1/2*denom(1/2*s12)*mt*s12*s13*s14*s24 + 1/2*denom(1/2*s12)*
      mt*s12^2*s14*s24 - 1/2*denom(1/2*s12)*mt*mh^2*s12*s14*s24 - 1/2*denom(1/
      2*s12)*mt^3*s12*s24^2 - 1/2*denom(1/2*s12)*mt^3*s12*s23*s24 - denom(1/2*
      s12)*mt^3*s12*s14*s24 - denom(1/2*s12)*mt^3*s12*s14*s23 - 1/2*denom(1/2*
      s12)*mt^3*s12*s14^2 - denom(1/2*s12)*mt^3*s12*s13*s24 + denom(1/2*s12)*
      mt^3*s12*s13*s23 - 1/2*denom(1/2*s12)*mt^3*s12*s13*s14 - 1/2*denom(1/2*
      s12)*mt^3*s12^2*s24 - 1/2*denom(1/2*s12)*mt^3*s12^2*s14 + 1/2*denom(1/2*
      s12)*mt^3*mh^2*s12*s24 + 1/2*denom(1/2*s12)*mt^3*mh^2*s12*s14 + denom(1/
      2*s12)*mt^5*s12*s24 + denom(1/2*s12)*mt^5*s12*s14 + 1/2*denom(1/2*s12)*
      mt^5*s12^2 - 1/2*denom(1/2*s12)*mt^5*mh^2*s12 + 1/4*denom(1/4*s12^2)*mt*
      s12*s14^2*s23*s24 + 1/4*denom(1/4*s12^2)*mt*s12*s13*s14*s24^2 - 1/2*
      denom(1/4*s12^2)*mt*s12*s13*s14*s23*s24 - 1/4*denom(1/4*s12^2)*mt^3*s12*
      s14*s24^2 - 1/4*denom(1/4*s12^2)*mt^3*s12*s14^2*s24 - 1/4*denom(1/4*
      s12^2)*mt^3*s12*s14^2*s23 - 1/4*denom(1/4*s12^2)*mt^3*s12*s13*s24^2 + 1/
      2*denom(1/4*s12^2)*mt^3*s12*s13*s23*s24 + 1/2*denom(1/4*s12^2)*mt^3*s12*
      s13*s14*s23 + 1/4*denom(1/4*s12^2)*mt^5*s12*s24^2 - 1/4*denom(1/4*s12^2)
      *mt^5*s12*s23*s24 + 1/2*denom(1/4*s12^2)*mt^5*s12*s14*s24 + 1/4*denom(1/
      4*s12^2)*mt^5*s12*s14^2 - 1/2*denom(1/4*s12^2)*mt^5*s12*s13*s23 - 1/4*
      denom(1/4*s12^2)*mt^5*s12*s13*s14 - 1/4*denom(1/4*s12^2)*mt^7*s12*s24 + 
      1/4*denom(1/4*s12^2)*mt^7*s12*s23 - 1/4*denom(1/4*s12^2)*mt^7*s12*s14 + 
      1/4*denom(1/4*s12^2)*mt^7*s12*s13;
 
 .sort
id KMatrix(14,22) =  mt^3*s12*s24 + mt^3*s12*s23 + mt^3*s12*s14 + mt^3*s12*s13
       + mt^3*s12^2 - mt^3*mh^2*s12 - 1/2*denom(1/2*s12)*mt*s12*s13*s23*s24 - 
      1/2*denom(1/2*s12)*mt*s12*s13*s23^2 - 1/2*denom(1/2*s12)*mt*s12*s13*s14*
      s23 - 1/2*denom(1/2*s12)*mt*s12*s13^2*s23 - 1/2*denom(1/2*s12)*mt*s12^2*
      s13*s23 + 1/2*denom(1/2*s12)*mt*mh^2*s12*s13*s23 + 1/2*denom(1/2*s12)*
      mt^3*s12*s23*s24 + 1/2*denom(1/2*s12)*mt^3*s12*s23^2 - denom(1/2*s12)*
      mt^3*s12*s14*s24 + denom(1/2*s12)*mt^3*s12*s14*s23 + denom(1/2*s12)*mt^3
      *s12*s13*s24 + denom(1/2*s12)*mt^3*s12*s13*s23 + 1/2*denom(1/2*s12)*mt^3
      *s12*s13*s14 + 1/2*denom(1/2*s12)*mt^3*s12*s13^2 + 1/2*denom(1/2*s12)*
      mt^3*s12^2*s23 + 1/2*denom(1/2*s12)*mt^3*s12^2*s13 - 1/2*denom(1/2*s12)*
      mt^3*mh^2*s12*s23 - 1/2*denom(1/2*s12)*mt^3*mh^2*s12*s13 - denom(1/2*s12
      )*mt^5*s12*s23 - denom(1/2*s12)*mt^5*s12*s13 - 1/2*denom(1/2*s12)*mt^5*
      s12^2 + 1/2*denom(1/2*s12)*mt^5*mh^2*s12 + 1/2*denom(1/4*s12^2)*mt*s12*
      s13*s14*s23*s24 - 1/4*denom(1/4*s12^2)*mt*s12*s13*s14*s23^2 - 1/4*denom(
      1/4*s12^2)*mt*s12*s13^2*s23*s24 - 1/2*denom(1/4*s12^2)*mt^3*s12*s14*s23*
      s24 + 1/4*denom(1/4*s12^2)*mt^3*s12*s14*s23^2 + 1/4*denom(1/4*s12^2)*
      mt^3*s12*s13*s23^2 - 1/2*denom(1/4*s12^2)*mt^3*s12*s13*s14*s24 + 1/4*
      denom(1/4*s12^2)*mt^3*s12*s13^2*s24 + 1/4*denom(1/4*s12^2)*mt^3*s12*
      s13^2*s23 + 1/4*denom(1/4*s12^2)*mt^5*s12*s23*s24 - 1/4*denom(1/4*s12^2)
      *mt^5*s12*s23^2 + 1/2*denom(1/4*s12^2)*mt^5*s12*s14*s24 - 1/2*denom(1/4*
      s12^2)*mt^5*s12*s13*s23 + 1/4*denom(1/4*s12^2)*mt^5*s12*s13*s14 - 1/4*
      denom(1/4*s12^2)*mt^5*s12*s13^2 - 1/4*denom(1/4*s12^2)*mt^7*s12*s24 + 1/
      4*denom(1/4*s12^2)*mt^7*s12*s23 - 1/4*denom(1/4*s12^2)*mt^7*s12*s14 + 1/
      4*denom(1/4*s12^2)*mt^7*s12*s13;
 
 .sort
id KMatrix(14,23) =   - 1/2*mt*s12*s24^2 - mt*s12*s23*s24 - 1/2*mt*s12*s23^2
       - mt*s12*s14*s24 - mt*s12*s14*s23 - 1/2*mt*s12*s14^2 - mt*s12*s13*s24
       - mt*s12*s13*s23 - mt*s12*s13*s14 - 1/2*mt*s12*s13^2 - mt*s12^2*s24 - 
      mt*s12^2*s23 - mt*s12^2*s14 - mt*s12^2*s13 - 1/2*mt*s12^3 + mt*mh^2*s12*
      s24 + mt*mh^2*s12*s23 + mt*mh^2*s12*s14 + mt*mh^2*s12*s13 + mt*mh^2*
      s12^2 - 1/2*mt*mh^4*s12 + mt^3*s12*s24 + mt^3*s12*s23 + mt^3*s12*s14 + 
      mt^3*s12*s13 + mt^3*s12^2 - mt^3*mh^2*s12 + 1/2*denom(1/2*s12)*mt*s12*
      s14*s24^2 - 1/2*denom(1/2*s12)*mt*s12*s14*s23^2 + 1/2*denom(1/2*s12)*mt*
      s12*s14^2*s24 - 1/2*denom(1/2*s12)*mt*s12*s14^2*s23 - 1/2*denom(1/2*s12)
      *mt*s12*s13*s24^2 - 1/2*denom(1/2*s12)*mt*s12*s13*s23*s24 - 1/2*denom(1/
      2*s12)*mt*s12*s13*s14*s23 - 1/2*denom(1/2*s12)*mt*s12*s13^2*s24 + 1/2*
      denom(1/2*s12)*mt*s12^2*s14*s24 - 1/2*denom(1/2*s12)*mt*s12^2*s14*s23 - 
      1/2*denom(1/2*s12)*mt*s12^2*s13*s24 - 1/2*denom(1/2*s12)*mt*mh^2*s12*s14
      *s24 + 1/2*denom(1/2*s12)*mt*mh^2*s12*s14*s23 + 1/2*denom(1/2*s12)*mt*
      mh^2*s12*s13*s24 + 1/2*denom(1/2*s12)*mt^3*s12*s23*s24 + 1/2*denom(1/2*
      s12)*mt^3*s12*s23^2 - denom(1/2*s12)*mt^3*s12*s14*s24 + denom(1/2*s12)*
      mt^3*s12*s14*s23 + denom(1/2*s12)*mt^3*s12*s13*s24 + denom(1/2*s12)*mt^3
      *s12*s13*s23 + 1/2*denom(1/2*s12)*mt^3*s12*s13*s14 + 1/2*denom(1/2*s12)*
      mt^3*s12*s13^2 + 1/2*denom(1/2*s12)*mt^3*s12^2*s23 + 1/2*denom(1/2*s12)*
      mt^3*s12^2*s13 - 1/2*denom(1/2*s12)*mt^3*mh^2*s12*s23 - 1/2*denom(1/2*
      s12)*mt^3*mh^2*s12*s13 - denom(1/2*s12)*mt^5*s12*s23 - denom(1/2*s12)*
      mt^5*s12*s13 - 1/2*denom(1/2*s12)*mt^5*s12^2 + 1/2*denom(1/2*s12)*mt^5*
      mh^2*s12 + 1/4*denom(1/4*s12^2)*mt*s12*s14^2*s23*s24 - 1/8*denom(1/4*
      s12^2)*mt*s12*s14^2*s23^2 + 1/4*denom(1/4*s12^2)*mt*s12*s13*s14*s24^2 - 
      1/4*denom(1/4*s12^2)*mt*s12*s13*s14*s23*s24 - 1/8*denom(1/4*s12^2)*mt*
      s12*s13^2*s24^2 - 1/4*denom(1/4*s12^2)*mt^3*s12*s14*s24^2 - 1/4*denom(1/
      4*s12^2)*mt^3*s12*s14*s23*s24 + 1/4*denom(1/4*s12^2)*mt^3*s12*s14*s23^2
       - 1/4*denom(1/4*s12^2)*mt^3*s12*s14^2*s24 + 1/4*denom(1/4*s12^2)*mt^3*
      s12*s13*s23*s24 - 1/4*denom(1/4*s12^2)*mt^3*s12*s13*s14*s24 + 1/4*denom(
      1/4*s12^2)*mt^3*s12*s13*s14*s23 + 1/4*denom(1/4*s12^2)*mt^3*s12*s13^2*
      s24 + 1/8*denom(1/4*s12^2)*mt^5*s12*s24^2 - 1/8*denom(1/4*s12^2)*mt^5*
      s12*s23^2 + 3/4*denom(1/4*s12^2)*mt^5*s12*s14*s24 - 1/4*denom(1/4*s12^2)
      *mt^5*s12*s14*s23 + 1/8*denom(1/4*s12^2)*mt^5*s12*s14^2 - 1/4*denom(1/4*
      s12^2)*mt^5*s12*s13*s24 - 1/4*denom(1/4*s12^2)*mt^5*s12*s13*s23 - 1/8*
      denom(1/4*s12^2)*mt^5*s12*s13^2 - 1/4*denom(1/4*s12^2)*mt^7*s12*s24 + 1/
      4*denom(1/4*s12^2)*mt^7*s12*s23 - 1/4*denom(1/4*s12^2)*mt^7*s12*s14 + 1/
      4*denom(1/4*s12^2)*mt^7*s12*s13;
 
 .sort
id KMatrix(14,24) =   - s12*s14*s23*s24 - s12*s14*s23^2 - s12*s14^2*s23 - s12*
      s13*s14*s23 - s12^2*s14*s23 + mh^2*s12*s14*s23 + mt^2*s12*s23*s24 + mt^2
      *s12*s23^2 + mt^2*s12*s14*s24 + 4*mt^2*s12*s14*s23 + mt^2*s12*s14^2 + 
      mt^2*s12*s13*s23 + mt^2*s12*s13*s14 + mt^2*s12^2*s23 + mt^2*s12^2*s14 - 
      mt^2*mh^2*s12*s23 - mt^2*mh^2*s12*s14 - mt^4*s12*s24 - 3*mt^4*s12*s23 - 
      3*mt^4*s12*s14 - mt^4*s12*s13 - mt^4*s12^2 + mt^4*mh^2*s12 + 2*mt^6*s12
       - denom(1/2*s12)*s12*s14^2*s23^2 - denom(1/2*s12)*s12*s13*s14*s23*s24
       + denom(1/2*s12)*mt^2*s12*s14*s23*s24 + 2*denom(1/2*s12)*mt^2*s12*s14*
      s23^2 + 2*denom(1/2*s12)*mt^2*s12*s14^2*s23 + denom(1/2*s12)*mt^2*s12*
      s13*s23*s24 + denom(1/2*s12)*mt^2*s12*s13*s14*s24 + denom(1/2*s12)*mt^2*
      s12*s13*s14*s23 - denom(1/2*s12)*mt^4*s12*s23*s24 - denom(1/2*s12)*mt^4*
      s12*s23^2 - denom(1/2*s12)*mt^4*s12*s14*s24 - 5*denom(1/2*s12)*mt^4*s12*
      s14*s23 - denom(1/2*s12)*mt^4*s12*s14^2 - denom(1/2*s12)*mt^4*s12*s13*
      s24 - denom(1/2*s12)*mt^4*s12*s13*s23 - denom(1/2*s12)*mt^4*s12*s13*s14
       + denom(1/2*s12)*mt^6*s12*s24 + 3*denom(1/2*s12)*mt^6*s12*s23 + 3*
      denom(1/2*s12)*mt^6*s12*s14 + denom(1/2*s12)*mt^6*s12*s13 - 2*denom(1/2*
      s12)*mt^8*s12 + 1/4*denom(1/4*s12^2)*s12^2*s14^2*s23^2 + 1/4*denom(1/4*
      s12^2)*s12^2*s13*s14*s23*s24 - 1/4*denom(1/4*s12^2)*mt^2*s12^2*s14*s23*
      s24 - 1/2*denom(1/4*s12^2)*mt^2*s12^2*s14*s23^2 - 1/2*denom(1/4*s12^2)*
      mt^2*s12^2*s14^2*s23 - 1/4*denom(1/4*s12^2)*mt^2*s12^2*s13*s23*s24 - 1/4
      *denom(1/4*s12^2)*mt^2*s12^2*s13*s14*s24 - 1/4*denom(1/4*s12^2)*mt^2*
      s12^2*s13*s14*s23 + 1/4*denom(1/4*s12^2)*mt^4*s12^2*s23*s24 + 1/4*denom(
      1/4*s12^2)*mt^4*s12^2*s23^2 + 1/4*denom(1/4*s12^2)*mt^4*s12^2*s14*s24 + 
      5/4*denom(1/4*s12^2)*mt^4*s12^2*s14*s23 + 1/4*denom(1/4*s12^2)*mt^4*
      s12^2*s14^2 + 1/4*denom(1/4*s12^2)*mt^4*s12^2*s13*s24 + 1/4*denom(1/4*
      s12^2)*mt^4*s12^2*s13*s23 + 1/4*denom(1/4*s12^2)*mt^4*s12^2*s13*s14 - 1/
      4*denom(1/4*s12^2)*mt^6*s12^2*s24 - 3/4*denom(1/4*s12^2)*mt^6*s12^2*s23
       - 3/4*denom(1/4*s12^2)*mt^6*s12^2*s14 - 1/4*denom(1/4*s12^2)*mt^6*s12^2
      *s13 + 1/2*denom(1/4*s12^2)*mt^8*s12^2;
 
 .sort
id KMatrix(14,25) =   - 1/2*s14*s23*s24 - 1/2*s14*s23^2 - 1/2*s14^2*s23 + 1/2*
      s13*s24^2 + 1/2*s13*s23*s24 + 1/2*s13*s14*s24 - 1/2*s13*s14*s23 + 1/2*
      s13^2*s24 + s12*s24^2 + 2*s12*s23*s24 + s12*s23^2 + 2*s12*s14*s24 + 3/2*
      s12*s14*s23 + s12*s14^2 + 5/2*s12*s13*s24 + 2*s12*s13*s23 + 2*s12*s13*
      s14 + s12*s13^2 + 2*s12^2*s24 + 2*s12^2*s23 + 2*s12^2*s14 + 2*s12^2*s13
       + s12^3 + 1/2*mh^2*s14*s23 - 1/2*mh^2*s13*s24 - 2*mh^2*s12*s24 - 2*mh^2
      *s12*s23 - 2*mh^2*s12*s14 - 2*mh^2*s12*s13 - 2*mh^2*s12^2 + mh^4*s12 - 1/
      2*mt^2*s24^2 + 1/2*mt^2*s23^2 + 2*mt^2*s14*s23 + 1/2*mt^2*s14^2 - 2*mt^2
      *s13*s24 - 1/2*mt^2*s13^2 - 7/2*mt^2*s12*s24 - 5/2*mt^2*s12*s23 - 5/2*
      mt^2*s12*s14 - 7/2*mt^2*s12*s13 - 3*mt^2*s12^2 + 1/2*mt^2*mh^2*s24 - 1/2
      *mt^2*mh^2*s23 - 1/2*mt^2*mh^2*s14 + 1/2*mt^2*mh^2*s13 + 3*mt^2*mh^2*s12
       + mt^4*s24 - mt^4*s23 - mt^4*s14 + mt^4*s13 - 1/2*denom(1/2*s12)*s14^2*
      s23^2 + 1/2*denom(1/2*s12)*s13^2*s24^2 + denom(1/2*s12)*s12*s14*s23*s24
       + denom(1/2*s12)*s12*s14*s23^2 + denom(1/2*s12)*s12*s14^2*s23 + denom(1/
      2*s12)*s12*s13*s24^2 + denom(1/2*s12)*s12*s13*s23*s24 + denom(1/2*s12)*
      s12*s13*s14*s24 + denom(1/2*s12)*s12*s13*s14*s23 + denom(1/2*s12)*s12*
      s13^2*s24 + denom(1/2*s12)*s12^2*s14*s23 + denom(1/2*s12)*s12^2*s13*s24
       - denom(1/2*s12)*mh^2*s12*s14*s23 - denom(1/2*s12)*mh^2*s12*s13*s24 + 
      denom(1/2*s12)*mt^2*s14*s23^2 + denom(1/2*s12)*mt^2*s14^2*s23 - denom(1/
      2*s12)*mt^2*s13*s24^2 - denom(1/2*s12)*mt^2*s13^2*s24 - denom(1/2*s12)*
      mt^2*s12*s24^2 - 2*denom(1/2*s12)*mt^2*s12*s23*s24 - denom(1/2*s12)*mt^2
      *s12*s23^2 - denom(1/2*s12)*mt^2*s12*s14*s24 - 3*denom(1/2*s12)*mt^2*s12
      *s14*s23 - denom(1/2*s12)*mt^2*s12*s14^2 - 3*denom(1/2*s12)*mt^2*s12*s13
      *s24 - denom(1/2*s12)*mt^2*s12*s13*s23 - 2*denom(1/2*s12)*mt^2*s12*s13*
      s14 - denom(1/2*s12)*mt^2*s12*s13^2 - denom(1/2*s12)*mt^2*s12^2*s24 - 
      denom(1/2*s12)*mt^2*s12^2*s23 - denom(1/2*s12)*mt^2*s12^2*s14 - denom(1/
      2*s12)*mt^2*s12^2*s13 + denom(1/2*s12)*mt^2*mh^2*s12*s24 + denom(1/2*s12
      )*mt^2*mh^2*s12*s23 + denom(1/2*s12)*mt^2*mh^2*s12*s14 + denom(1/2*s12)*
      mt^2*mh^2*s12*s13 + 1/2*denom(1/2*s12)*mt^4*s24^2 - 1/2*denom(1/2*s12)*
      mt^4*s23^2 - 2*denom(1/2*s12)*mt^4*s14*s23 - 1/2*denom(1/2*s12)*mt^4*
      s14^2 + 2*denom(1/2*s12)*mt^4*s13*s24 + 1/2*denom(1/2*s12)*mt^4*s13^2 + 
      2*denom(1/2*s12)*mt^4*s12*s24 + 2*denom(1/2*s12)*mt^4*s12*s23 + 2*denom(
      1/2*s12)*mt^4*s12*s14 + 2*denom(1/2*s12)*mt^4*s12*s13 + 2*denom(1/2*s12)
      *mt^4*s12^2 - 2*denom(1/2*s12)*mt^4*mh^2*s12 - denom(1/2*s12)*mt^6*s24
       + denom(1/2*s12)*mt^6*s23 + denom(1/2*s12)*mt^6*s14 - denom(1/2*s12)*
      mt^6*s13 + 1/4*denom(1/4*s12^2)*s12*s14^2*s23^2 - 1/4*denom(1/4*s12^2)*
      s12*s13*s14*s23*s24 - 1/8*denom(1/4*s12^2)*s12^2*s14*s23*s24 - 1/8*
      denom(1/4*s12^2)*s12^2*s14*s23^2 - 1/8*denom(1/4*s12^2)*s12^2*s14^2*s23
       - 1/8*denom(1/4*s12^2)*s12^2*s13*s24^2 - 1/8*denom(1/4*s12^2)*s12^2*s13
      *s23*s24 - 1/8*denom(1/4*s12^2)*s12^2*s13*s14*s24 - 1/8*denom(1/4*s12^2)
      *s12^2*s13*s14*s23 - 1/8*denom(1/4*s12^2)*s12^2*s13^2*s24 - 1/8*denom(1/
      4*s12^2)*s12^3*s14*s23 - 1/8*denom(1/4*s12^2)*s12^3*s13*s24 + 1/8*denom(
      1/4*s12^2)*mh^2*s12^2*s14*s23 + 1/8*denom(1/4*s12^2)*mh^2*s12^2*s13*s24
       + 1/4*denom(1/4*s12^2)*mt^2*s12*s14*s23*s24 - 1/2*denom(1/4*s12^2)*mt^2
      *s12*s14*s23^2 - 1/2*denom(1/4*s12^2)*mt^2*s12*s14^2*s23 + 1/4*denom(1/4
      *s12^2)*mt^2*s12*s13*s23*s24 + 1/4*denom(1/4*s12^2)*mt^2*s12*s13*s14*s24
       + 1/4*denom(1/4*s12^2)*mt^2*s12*s13*s14*s23 + 1/8*denom(1/4*s12^2)*mt^2
      *s12^2*s24^2 + 1/4*denom(1/4*s12^2)*mt^2*s12^2*s23*s24 + 1/8*denom(1/4*
      s12^2)*mt^2*s12^2*s23^2 + 1/4*denom(1/4*s12^2)*mt^2*s12^2*s14*s24 + 1/4*
      denom(1/4*s12^2)*mt^2*s12^2*s14*s23 + 1/8*denom(1/4*s12^2)*mt^2*s12^2*
      s14^2 + 1/4*denom(1/4*s12^2)*mt^2*s12^2*s13*s24 + 1/4*denom(1/4*s12^2)*
      mt^2*s12^2*s13*s23 + 1/4*denom(1/4*s12^2)*mt^2*s12^2*s13*s14 + 1/8*
      denom(1/4*s12^2)*mt^2*s12^2*s13^2 + 1/8*denom(1/4*s12^2)*mt^2*s12^3*s24
       + 1/8*denom(1/4*s12^2)*mt^2*s12^3*s23 + 1/8*denom(1/4*s12^2)*mt^2*s12^3
      *s14 + 1/8*denom(1/4*s12^2)*mt^2*s12^3*s13 - 1/8*denom(1/4*s12^2)*mt^2*
      mh^2*s12^2*s24 - 1/8*denom(1/4*s12^2)*mt^2*mh^2*s12^2*s23 - 1/8*denom(1/
      4*s12^2)*mt^2*mh^2*s12^2*s14 - 1/8*denom(1/4*s12^2)*mt^2*mh^2*s12^2*s13
       - 1/4*denom(1/4*s12^2)*mt^4*s12*s23*s24 + 1/4*denom(1/4*s12^2)*mt^4*s12
      *s23^2 - 1/4*denom(1/4*s12^2)*mt^4*s12*s14*s24 + 3/4*denom(1/4*s12^2)*
      mt^4*s12*s14*s23 + 1/4*denom(1/4*s12^2)*mt^4*s12*s14^2 - 1/4*denom(1/4*
      s12^2)*mt^4*s12*s13*s24 - 1/4*denom(1/4*s12^2)*mt^4*s12*s13*s23 - 1/4*
      denom(1/4*s12^2)*mt^4*s12*s13*s14 - 1/4*denom(1/4*s12^2)*mt^4*s12^2*s24
       - 1/4*denom(1/4*s12^2)*mt^4*s12^2*s23 - 1/4*denom(1/4*s12^2)*mt^4*s12^2
      *s14 - 1/4*denom(1/4*s12^2)*mt^4*s12^2*s13 - 1/4*denom(1/4*s12^2)*mt^4*
      s12^3 + 1/4*denom(1/4*s12^2)*mt^4*mh^2*s12^2 + 1/4*denom(1/4*s12^2)*mt^6
      *s12*s24 - 1/4*denom(1/4*s12^2)*mt^6*s12*s23 - 1/4*denom(1/4*s12^2)*mt^6
      *s12*s14 + 1/4*denom(1/4*s12^2)*mt^6*s12*s13;
 
 .sort
id KMatrix(14,26) =  mt^2*s12*s14*s24 + mt^2*s12*s14*s23 + mt^2*s12*s14^2 + 
      mt^2*s12*s13*s14 + mt^2*s12^2*s14 - mt^2*mh^2*s12*s14 - mt^4*s12*s24 - 
      mt^4*s12*s23 - 3*mt^4*s12*s14 - mt^4*s12*s13 - mt^4*s12^2 + mt^4*mh^2*
      s12 + 2*mt^6*s12 - 1/2*denom(1/2*s12)*s12*s13*s14*s23*s24 - 1/2*denom(1/
      2*s12)*s12*s13*s14*s23^2 - 1/2*denom(1/2*s12)*s12*s13*s14^2*s23 - 1/2*
      denom(1/2*s12)*s12*s13^2*s14*s23 - 1/2*denom(1/2*s12)*s12^2*s13*s14*s23
       + 1/2*denom(1/2*s12)*mh^2*s12*s13*s14*s23 + 1/2*denom(1/2*s12)*mt^2*s12
      *s14*s23*s24 + 1/2*denom(1/2*s12)*mt^2*s12*s14*s23^2 + denom(1/2*s12)*
      mt^2*s12*s14^2*s23 + 1/2*denom(1/2*s12)*mt^2*s12*s13*s23*s24 + 1/2*
      denom(1/2*s12)*mt^2*s12*s13*s23^2 + denom(1/2*s12)*mt^2*s12*s13*s14*s24
       + 5/2*denom(1/2*s12)*mt^2*s12*s13*s14*s23 + 1/2*denom(1/2*s12)*mt^2*s12
      *s13*s14^2 + 1/2*denom(1/2*s12)*mt^2*s12*s13^2*s23 + 1/2*denom(1/2*s12)*
      mt^2*s12*s13^2*s14 + 1/2*denom(1/2*s12)*mt^2*s12^2*s14*s23 + 1/2*denom(1/
      2*s12)*mt^2*s12^2*s13*s23 + 1/2*denom(1/2*s12)*mt^2*s12^2*s13*s14 - 1/2*
      denom(1/2*s12)*mt^2*mh^2*s12*s14*s23 - 1/2*denom(1/2*s12)*mt^2*mh^2*s12*
      s13*s23 - 1/2*denom(1/2*s12)*mt^2*mh^2*s12*s13*s14 - 1/2*denom(1/2*s12)*
      mt^4*s12*s23*s24 - 1/2*denom(1/2*s12)*mt^4*s12*s23^2 - denom(1/2*s12)*
      mt^4*s12*s14*s24 - 3*denom(1/2*s12)*mt^4*s12*s14*s23 - denom(1/2*s12)*
      mt^4*s12*s14^2 - denom(1/2*s12)*mt^4*s12*s13*s24 - 2*denom(1/2*s12)*mt^4
      *s12*s13*s23 - 5/2*denom(1/2*s12)*mt^4*s12*s13*s14 - 1/2*denom(1/2*s12)*
      mt^4*s12*s13^2 - 1/2*denom(1/2*s12)*mt^4*s12^2*s23 - 1/2*denom(1/2*s12)*
      mt^4*s12^2*s14 - 1/2*denom(1/2*s12)*mt^4*s12^2*s13 + 1/2*denom(1/2*s12)*
      mt^4*mh^2*s12*s23 + 1/2*denom(1/2*s12)*mt^4*mh^2*s12*s14 + 1/2*denom(1/2
      *s12)*mt^4*mh^2*s12*s13 + denom(1/2*s12)*mt^6*s12*s24 + 2*denom(1/2*s12)
      *mt^6*s12*s23 + 3*denom(1/2*s12)*mt^6*s12*s14 + 2*denom(1/2*s12)*mt^6*
      s12*s13 + 1/2*denom(1/2*s12)*mt^6*s12^2 - 1/2*denom(1/2*s12)*mt^6*mh^2*
      s12 - 2*denom(1/2*s12)*mt^8*s12 - 1/4*denom(1/4*s12^2)*s12*s13*s14^2*
      s23^2 - 1/4*denom(1/4*s12^2)*s12*s13^2*s14*s23*s24 + 1/4*denom(1/4*s12^2
      )*mt^2*s12*s14^2*s23^2 + 1/2*denom(1/4*s12^2)*mt^2*s12*s13*s14*s23*s24
       + 1/2*denom(1/4*s12^2)*mt^2*s12*s13*s14*s23^2 + 1/2*denom(1/4*s12^2)*
      mt^2*s12*s13*s14^2*s23 + 1/4*denom(1/4*s12^2)*mt^2*s12*s13^2*s23*s24 + 1/
      4*denom(1/4*s12^2)*mt^2*s12*s13^2*s14*s24 + 1/4*denom(1/4*s12^2)*mt^2*
      s12*s13^2*s14*s23 - 1/4*denom(1/4*s12^2)*mt^4*s12*s14*s23*s24 - 1/2*
      denom(1/4*s12^2)*mt^4*s12*s14*s23^2 - 1/2*denom(1/4*s12^2)*mt^4*s12*
      s14^2*s23 - 1/2*denom(1/4*s12^2)*mt^4*s12*s13*s23*s24 - 1/4*denom(1/4*
      s12^2)*mt^4*s12*s13*s23^2 - 1/2*denom(1/4*s12^2)*mt^4*s12*s13*s14*s24 - 
      3/2*denom(1/4*s12^2)*mt^4*s12*s13*s14*s23 - 1/4*denom(1/4*s12^2)*mt^4*
      s12*s13*s14^2 - 1/4*denom(1/4*s12^2)*mt^4*s12*s13^2*s24 - 1/4*denom(1/4*
      s12^2)*mt^4*s12*s13^2*s23 - 1/4*denom(1/4*s12^2)*mt^4*s12*s13^2*s14 + 1/
      4*denom(1/4*s12^2)*mt^6*s12*s23*s24 + 1/4*denom(1/4*s12^2)*mt^6*s12*
      s23^2 + 1/4*denom(1/4*s12^2)*mt^6*s12*s14*s24 + 5/4*denom(1/4*s12^2)*
      mt^6*s12*s14*s23 + 1/4*denom(1/4*s12^2)*mt^6*s12*s14^2 + 1/2*denom(1/4*
      s12^2)*mt^6*s12*s13*s24 + denom(1/4*s12^2)*mt^6*s12*s13*s23 + denom(1/4*
      s12^2)*mt^6*s12*s13*s14 + 1/4*denom(1/4*s12^2)*mt^6*s12*s13^2 - 1/4*
      denom(1/4*s12^2)*mt^8*s12*s24 - 3/4*denom(1/4*s12^2)*mt^8*s12*s23 - 3/4*
      denom(1/4*s12^2)*mt^8*s12*s14 - 3/4*denom(1/4*s12^2)*mt^8*s12*s13 + 1/2*
      denom(1/4*s12^2)*mt^10*s12;
 
 .sort
id KMatrix(14,27) =  1/2*s12*s23*s24^2 + s12*s23^2*s24 + 1/2*s12*s23^3 + s12*
      s14*s23*s24 + s12*s14*s23^2 + 1/2*s12*s14^2*s23 + s12*s13*s23*s24 + s12*
      s13*s23^2 + s12*s13*s14*s23 + 1/2*s12*s13^2*s23 + s12^2*s23*s24 + s12^2*
      s23^2 + s12^2*s14*s23 + s12^2*s13*s23 + 1/2*s12^3*s23 - mh^2*s12*s23*s24
       - mh^2*s12*s23^2 - mh^2*s12*s14*s23 - mh^2*s12*s13*s23 - mh^2*s12^2*s23
       + 1/2*mh^4*s12*s23 - 1/2*mt^2*s12*s24^2 - 3*mt^2*s12*s23*s24 - 5/2*mt^2
      *s12*s23^2 - mt^2*s12*s14*s24 - 3*mt^2*s12*s14*s23 - 1/2*mt^2*s12*s14^2
       - mt^2*s12*s13*s24 - 3*mt^2*s12*s13*s23 - mt^2*s12*s13*s14 - 1/2*mt^2*
      s12*s13^2 - mt^2*s12^2*s24 - 3*mt^2*s12^2*s23 - mt^2*s12^2*s14 - mt^2*
      s12^2*s13 - 1/2*mt^2*s12^3 + mt^2*mh^2*s12*s24 + 3*mt^2*mh^2*s12*s23 + 
      mt^2*mh^2*s12*s14 + mt^2*mh^2*s12*s13 + mt^2*mh^2*s12^2 - 1/2*mt^2*mh^4*
      s12 + 2*mt^4*s12*s24 + 4*mt^4*s12*s23 + 2*mt^4*s12*s14 + 2*mt^4*s12*s13
       + 2*mt^4*s12^2 - 2*mt^4*mh^2*s12 - 2*mt^6*s12 + 1/2*denom(1/2*s12)*s12*
      s14*s23^2*s24 + 1/2*denom(1/2*s12)*s12*s14*s23^3 + 1/2*denom(1/2*s12)*
      s12*s14^2*s23^2 + 1/2*denom(1/2*s12)*s12*s13*s23*s24^2 + 1/2*denom(1/2*
      s12)*s12*s13*s23^2*s24 + 1/2*denom(1/2*s12)*s12*s13*s14*s23*s24 + 1/2*
      denom(1/2*s12)*s12*s13*s14*s23^2 + 1/2*denom(1/2*s12)*s12*s13^2*s23*s24
       + 1/2*denom(1/2*s12)*s12^2*s14*s23^2 + 1/2*denom(1/2*s12)*s12^2*s13*s23
      *s24 - 1/2*denom(1/2*s12)*mh^2*s12*s14*s23^2 - 1/2*denom(1/2*s12)*mh^2*
      s12*s13*s23*s24 - 1/2*denom(1/2*s12)*mt^2*s12*s23*s24^2 - denom(1/2*s12)
      *mt^2*s12*s23^2*s24 - 1/2*denom(1/2*s12)*mt^2*s12*s23^3 - 3/2*denom(1/2*
      s12)*mt^2*s12*s14*s23*s24 - 5/2*denom(1/2*s12)*mt^2*s12*s14*s23^2 - 
      denom(1/2*s12)*mt^2*s12*s14^2*s23 - 1/2*denom(1/2*s12)*mt^2*s12*s13*
      s24^2 - 5/2*denom(1/2*s12)*mt^2*s12*s13*s23*s24 - denom(1/2*s12)*mt^2*
      s12*s13*s23^2 - 1/2*denom(1/2*s12)*mt^2*s12*s13*s14*s24 - 3/2*denom(1/2*
      s12)*mt^2*s12*s13*s14*s23 - 1/2*denom(1/2*s12)*mt^2*s12*s13^2*s24 - 1/2*
      denom(1/2*s12)*mt^2*s12*s13^2*s23 - 1/2*denom(1/2*s12)*mt^2*s12^2*s23*
      s24 - 1/2*denom(1/2*s12)*mt^2*s12^2*s23^2 - denom(1/2*s12)*mt^2*s12^2*
      s14*s23 - 1/2*denom(1/2*s12)*mt^2*s12^2*s13*s24 - 1/2*denom(1/2*s12)*
      mt^2*s12^2*s13*s23 + 1/2*denom(1/2*s12)*mt^2*mh^2*s12*s23*s24 + 1/2*
      denom(1/2*s12)*mt^2*mh^2*s12*s23^2 + denom(1/2*s12)*mt^2*mh^2*s12*s14*
      s23 + 1/2*denom(1/2*s12)*mt^2*mh^2*s12*s13*s24 + 1/2*denom(1/2*s12)*mt^2
      *mh^2*s12*s13*s23 + 1/2*denom(1/2*s12)*mt^4*s12*s24^2 + 3*denom(1/2*s12)
      *mt^4*s12*s23*s24 + 5/2*denom(1/2*s12)*mt^4*s12*s23^2 + denom(1/2*s12)*
      mt^4*s12*s14*s24 + 4*denom(1/2*s12)*mt^4*s12*s14*s23 + 1/2*denom(1/2*s12
      )*mt^4*s12*s14^2 + 2*denom(1/2*s12)*mt^4*s12*s13*s24 + 3*denom(1/2*s12)*
      mt^4*s12*s13*s23 + denom(1/2*s12)*mt^4*s12*s13*s14 + 1/2*denom(1/2*s12)*
      mt^4*s12*s13^2 + 1/2*denom(1/2*s12)*mt^4*s12^2*s24 + 3/2*denom(1/2*s12)*
      mt^4*s12^2*s23 + 1/2*denom(1/2*s12)*mt^4*s12^2*s14 + 1/2*denom(1/2*s12)*
      mt^4*s12^2*s13 - 1/2*denom(1/2*s12)*mt^4*mh^2*s12*s24 - 3/2*denom(1/2*
      s12)*mt^4*mh^2*s12*s23 - 1/2*denom(1/2*s12)*mt^4*mh^2*s12*s14 - 1/2*
      denom(1/2*s12)*mt^4*mh^2*s12*s13 - 2*denom(1/2*s12)*mt^6*s12*s24 - 4*
      denom(1/2*s12)*mt^6*s12*s23 - 2*denom(1/2*s12)*mt^6*s12*s14 - 2*denom(1/
      2*s12)*mt^6*s12*s13 - denom(1/2*s12)*mt^6*s12^2 + denom(1/2*s12)*mt^6*
      mh^2*s12 + 2*denom(1/2*s12)*mt^8*s12 + 1/8*denom(1/4*s12^2)*s12*s14^2*
      s23^3 + 1/4*denom(1/4*s12^2)*s12*s13*s14*s23^2*s24 + 1/8*denom(1/4*s12^2
      )*s12*s13^2*s23*s24^2 - 1/4*denom(1/4*s12^2)*mt^2*s12*s14*s23^2*s24 - 1/
      4*denom(1/4*s12^2)*mt^2*s12*s14*s23^3 - 3/8*denom(1/4*s12^2)*mt^2*s12*
      s14^2*s23^2 - 1/4*denom(1/4*s12^2)*mt^2*s12*s13*s23*s24^2 - 1/4*denom(1/
      4*s12^2)*mt^2*s12*s13*s23^2*s24 - 1/2*denom(1/4*s12^2)*mt^2*s12*s13*s14*
      s23*s24 - 1/4*denom(1/4*s12^2)*mt^2*s12*s13*s14*s23^2 - 1/8*denom(1/4*
      s12^2)*mt^2*s12*s13^2*s24^2 - 1/4*denom(1/4*s12^2)*mt^2*s12*s13^2*s23*
      s24 + 1/8*denom(1/4*s12^2)*mt^4*s12*s23*s24^2 + 1/4*denom(1/4*s12^2)*
      mt^4*s12*s23^2*s24 + 1/8*denom(1/4*s12^2)*mt^4*s12*s23^3 + 1/2*denom(1/4
      *s12^2)*mt^4*s12*s14*s23*s24 + denom(1/4*s12^2)*mt^4*s12*s14*s23^2 + 3/8
      *denom(1/4*s12^2)*mt^4*s12*s14^2*s23 + 1/4*denom(1/4*s12^2)*mt^4*s12*s13
      *s24^2 + denom(1/4*s12^2)*mt^4*s12*s13*s23*s24 + 1/4*denom(1/4*s12^2)*
      mt^4*s12*s13*s23^2 + 1/4*denom(1/4*s12^2)*mt^4*s12*s13*s14*s24 + 1/2*
      denom(1/4*s12^2)*mt^4*s12*s13*s14*s23 + 1/4*denom(1/4*s12^2)*mt^4*s12*
      s13^2*s24 + 1/8*denom(1/4*s12^2)*mt^4*s12*s13^2*s23 - 1/8*denom(1/4*
      s12^2)*mt^6*s12*s24^2 - 3/4*denom(1/4*s12^2)*mt^6*s12*s23*s24 - 5/8*
      denom(1/4*s12^2)*mt^6*s12*s23^2 - 1/4*denom(1/4*s12^2)*mt^6*s12*s14*s24
       - 5/4*denom(1/4*s12^2)*mt^6*s12*s14*s23 - 1/8*denom(1/4*s12^2)*mt^6*s12
      *s14^2 - 3/4*denom(1/4*s12^2)*mt^6*s12*s13*s24 - 3/4*denom(1/4*s12^2)*
      mt^6*s12*s13*s23 - 1/4*denom(1/4*s12^2)*mt^6*s12*s13*s14 - 1/8*denom(1/4
      *s12^2)*mt^6*s12*s13^2 + 1/2*denom(1/4*s12^2)*mt^8*s12*s24 + denom(1/4*
      s12^2)*mt^8*s12*s23 + 1/2*denom(1/4*s12^2)*mt^8*s12*s14 + 1/2*denom(1/4*
      s12^2)*mt^8*s12*s13 - 1/2*denom(1/4*s12^2)*mt^10*s12;
 
 .sort
id KMatrix(14,28) =   - 2*mt^4*s12*s14 + 2*mt^6*s12 + denom(1/2*s12)*mt^2*s12*
      s14^2*s24 + denom(1/2*s12)*mt^2*s12*s13*s14*s23 - 2*denom(1/2*s12)*mt^4*
      s12*s14*s24 - denom(1/2*s12)*mt^4*s12*s14*s23 - denom(1/2*s12)*mt^4*s12*
      s14^2 - denom(1/2*s12)*mt^4*s12*s13*s23 - denom(1/2*s12)*mt^4*s12*s13*
      s14 + denom(1/2*s12)*mt^6*s12*s24 + denom(1/2*s12)*mt^6*s12*s23 + 3*
      denom(1/2*s12)*mt^6*s12*s14 + denom(1/2*s12)*mt^6*s12*s13 - 2*denom(1/2*
      s12)*mt^8*s12 - 1/2*denom(1/4*s12^2)*s12*s13*s14^2*s23*s24 + 1/2*denom(1/
      4*s12^2)*mt^2*s12*s14^2*s23*s24 + denom(1/4*s12^2)*mt^2*s12*s13*s14*s23*
      s24 + 1/2*denom(1/4*s12^2)*mt^2*s12*s13*s14^2*s24 + 1/2*denom(1/4*s12^2)
      *mt^2*s12*s13*s14^2*s23 - denom(1/4*s12^2)*mt^4*s12*s14*s23*s24 - 1/2*
      denom(1/4*s12^2)*mt^4*s12*s14^2*s24 - 1/2*denom(1/4*s12^2)*mt^4*s12*
      s14^2*s23 - 1/2*denom(1/4*s12^2)*mt^4*s12*s13*s23*s24 - denom(1/4*s12^2)
      *mt^4*s12*s13*s14*s24 - denom(1/4*s12^2)*mt^4*s12*s13*s14*s23 - 1/2*
      denom(1/4*s12^2)*mt^4*s12*s13*s14^2 + 1/2*denom(1/4*s12^2)*mt^6*s12*s23*
      s24 + denom(1/4*s12^2)*mt^6*s12*s14*s24 + denom(1/4*s12^2)*mt^6*s12*s14*
      s23 + 1/2*denom(1/4*s12^2)*mt^6*s12*s14^2 + 1/2*denom(1/4*s12^2)*mt^6*
      s12*s13*s24 + 1/2*denom(1/4*s12^2)*mt^6*s12*s13*s23 + denom(1/4*s12^2)*
      mt^6*s12*s13*s14 - 1/2*denom(1/4*s12^2)*mt^8*s12*s24 - 1/2*denom(1/4*
      s12^2)*mt^8*s12*s23 - denom(1/4*s12^2)*mt^8*s12*s14 - 1/2*denom(1/4*
      s12^2)*mt^8*s12*s13 + 1/2*denom(1/4*s12^2)*mt^10*s12;
 
 .sort
id KMatrix(14,29) =   - mt^2*s12*s23*s24 - mt^2*s12*s23^2 - mt^2*s12*s14*s23
       - mt^2*s12*s13*s23 - mt^2*s12^2*s23 + mt^2*mh^2*s12*s23 + mt^4*s12*s24
       + 3*mt^4*s12*s23 + mt^4*s12*s14 + mt^4*s12*s13 + mt^4*s12^2 - mt^4*mh^2
      *s12 - 2*mt^6*s12 + 1/2*denom(1/2*s12)*s12*s14*s23*s24^2 + 1/2*denom(1/2
      *s12)*s12*s14*s23^2*s24 + 1/2*denom(1/2*s12)*s12*s14^2*s23*s24 + 1/2*
      denom(1/2*s12)*s12*s13*s14*s23*s24 + 1/2*denom(1/2*s12)*s12^2*s14*s23*
      s24 - 1/2*denom(1/2*s12)*mh^2*s12*s14*s23*s24 - 1/2*denom(1/2*s12)*mt^2*
      s12*s23*s24^2 - 1/2*denom(1/2*s12)*mt^2*s12*s23^2*s24 - 1/2*denom(1/2*
      s12)*mt^2*s12*s14*s24^2 - 5/2*denom(1/2*s12)*mt^2*s12*s14*s23*s24 - 
      denom(1/2*s12)*mt^2*s12*s14*s23^2 - 1/2*denom(1/2*s12)*mt^2*s12*s14^2*
      s24 - 1/2*denom(1/2*s12)*mt^2*s12*s14^2*s23 - denom(1/2*s12)*mt^2*s12*
      s13*s23*s24 - 1/2*denom(1/2*s12)*mt^2*s12*s13*s14*s24 - 1/2*denom(1/2*
      s12)*mt^2*s12*s13*s14*s23 - 1/2*denom(1/2*s12)*mt^2*s12^2*s23*s24 - 1/2*
      denom(1/2*s12)*mt^2*s12^2*s14*s24 - 1/2*denom(1/2*s12)*mt^2*s12^2*s14*
      s23 + 1/2*denom(1/2*s12)*mt^2*mh^2*s12*s23*s24 + 1/2*denom(1/2*s12)*mt^2
      *mh^2*s12*s14*s24 + 1/2*denom(1/2*s12)*mt^2*mh^2*s12*s14*s23 + 1/2*
      denom(1/2*s12)*mt^4*s12*s24^2 + 5/2*denom(1/2*s12)*mt^4*s12*s23*s24 + 
      denom(1/2*s12)*mt^4*s12*s23^2 + 2*denom(1/2*s12)*mt^4*s12*s14*s24 + 3*
      denom(1/2*s12)*mt^4*s12*s14*s23 + 1/2*denom(1/2*s12)*mt^4*s12*s14^2 + 
      denom(1/2*s12)*mt^4*s12*s13*s24 + denom(1/2*s12)*mt^4*s12*s13*s23 + 1/2*
      denom(1/2*s12)*mt^4*s12*s13*s14 + 1/2*denom(1/2*s12)*mt^4*s12^2*s24 + 1/
      2*denom(1/2*s12)*mt^4*s12^2*s23 + 1/2*denom(1/2*s12)*mt^4*s12^2*s14 - 1/
      2*denom(1/2*s12)*mt^4*mh^2*s12*s24 - 1/2*denom(1/2*s12)*mt^4*mh^2*s12*
      s23 - 1/2*denom(1/2*s12)*mt^4*mh^2*s12*s14 - 2*denom(1/2*s12)*mt^6*s12*
      s24 - 3*denom(1/2*s12)*mt^6*s12*s23 - 2*denom(1/2*s12)*mt^6*s12*s14 - 
      denom(1/2*s12)*mt^6*s12*s13 - 1/2*denom(1/2*s12)*mt^6*s12^2 + 1/2*denom(
      1/2*s12)*mt^6*mh^2*s12 + 2*denom(1/2*s12)*mt^8*s12 + 1/4*denom(1/4*s12^2
      )*s12*s14^2*s23^2*s24 + 1/4*denom(1/4*s12^2)*s12*s13*s14*s23*s24^2 - 1/4
      *denom(1/4*s12^2)*mt^2*s12*s14*s23*s24^2 - 1/2*denom(1/4*s12^2)*mt^2*s12
      *s14*s23^2*s24 - 1/2*denom(1/4*s12^2)*mt^2*s12*s14^2*s23*s24 - 1/4*
      denom(1/4*s12^2)*mt^2*s12*s14^2*s23^2 - 1/4*denom(1/4*s12^2)*mt^2*s12*
      s13*s23*s24^2 - 1/4*denom(1/4*s12^2)*mt^2*s12*s13*s14*s24^2 - 1/2*denom(
      1/4*s12^2)*mt^2*s12*s13*s14*s23*s24 + 1/4*denom(1/4*s12^2)*mt^4*s12*s23*
      s24^2 + 1/4*denom(1/4*s12^2)*mt^4*s12*s23^2*s24 + 1/4*denom(1/4*s12^2)*
      mt^4*s12*s14*s24^2 + 3/2*denom(1/4*s12^2)*mt^4*s12*s14*s23*s24 + 1/2*
      denom(1/4*s12^2)*mt^4*s12*s14*s23^2 + 1/4*denom(1/4*s12^2)*mt^4*s12*
      s14^2*s24 + 1/2*denom(1/4*s12^2)*mt^4*s12*s14^2*s23 + 1/4*denom(1/4*
      s12^2)*mt^4*s12*s13*s24^2 + 1/2*denom(1/4*s12^2)*mt^4*s12*s13*s23*s24 + 
      1/2*denom(1/4*s12^2)*mt^4*s12*s13*s14*s24 + 1/4*denom(1/4*s12^2)*mt^4*
      s12*s13*s14*s23 - 1/4*denom(1/4*s12^2)*mt^6*s12*s24^2 - denom(1/4*s12^2)
      *mt^6*s12*s23*s24 - 1/4*denom(1/4*s12^2)*mt^6*s12*s23^2 - denom(1/4*
      s12^2)*mt^6*s12*s14*s24 - 5/4*denom(1/4*s12^2)*mt^6*s12*s14*s23 - 1/4*
      denom(1/4*s12^2)*mt^6*s12*s14^2 - 1/2*denom(1/4*s12^2)*mt^6*s12*s13*s24
       - 1/4*denom(1/4*s12^2)*mt^6*s12*s13*s23 - 1/4*denom(1/4*s12^2)*mt^6*s12
      *s13*s14 + 3/4*denom(1/4*s12^2)*mt^8*s12*s24 + 3/4*denom(1/4*s12^2)*mt^8
      *s12*s23 + 3/4*denom(1/4*s12^2)*mt^8*s12*s14 + 1/4*denom(1/4*s12^2)*mt^8
      *s12*s13 - 1/2*denom(1/4*s12^2)*mt^10*s12;
 
 .sort
id KMatrix(14,30) =  mt^2*s12*s14*s24 + mt^2*s12*s14*s23 + mt^2*s12*s14^2 + 
      mt^2*s12*s13*s14 + mt^2*s12^2*s14 - mt^2*mh^2*s12*s14 - mt^4*s12*s24 - 
      mt^4*s12*s23 - 3*mt^4*s12*s14 - mt^4*s12*s13 - mt^4*s12^2 + mt^4*mh^2*
      s12 + 2*mt^6*s12 - 1/2*denom(1/2*s12)*s12*s13*s14*s23*s24 - 1/2*denom(1/
      2*s12)*s12*s13*s14*s23^2 - 1/2*denom(1/2*s12)*s12*s13*s14^2*s23 - 1/2*
      denom(1/2*s12)*s12*s13^2*s14*s23 - 1/2*denom(1/2*s12)*s12^2*s13*s14*s23
       + 1/2*denom(1/2*s12)*mh^2*s12*s13*s14*s23 + 1/2*denom(1/2*s12)*mt^2*s12
      *s14*s23*s24 + 1/2*denom(1/2*s12)*mt^2*s12*s14*s23^2 + denom(1/2*s12)*
      mt^2*s12*s14^2*s23 + 1/2*denom(1/2*s12)*mt^2*s12*s13*s23*s24 + 1/2*
      denom(1/2*s12)*mt^2*s12*s13*s23^2 + denom(1/2*s12)*mt^2*s12*s13*s14*s24
       + 5/2*denom(1/2*s12)*mt^2*s12*s13*s14*s23 + 1/2*denom(1/2*s12)*mt^2*s12
      *s13*s14^2 + 1/2*denom(1/2*s12)*mt^2*s12*s13^2*s23 + 1/2*denom(1/2*s12)*
      mt^2*s12*s13^2*s14 + 1/2*denom(1/2*s12)*mt^2*s12^2*s14*s23 + 1/2*denom(1/
      2*s12)*mt^2*s12^2*s13*s23 + 1/2*denom(1/2*s12)*mt^2*s12^2*s13*s14 - 1/2*
      denom(1/2*s12)*mt^2*mh^2*s12*s14*s23 - 1/2*denom(1/2*s12)*mt^2*mh^2*s12*
      s13*s23 - 1/2*denom(1/2*s12)*mt^2*mh^2*s12*s13*s14 - 1/2*denom(1/2*s12)*
      mt^4*s12*s23*s24 - 1/2*denom(1/2*s12)*mt^4*s12*s23^2 - denom(1/2*s12)*
      mt^4*s12*s14*s24 - 3*denom(1/2*s12)*mt^4*s12*s14*s23 - denom(1/2*s12)*
      mt^4*s12*s14^2 - denom(1/2*s12)*mt^4*s12*s13*s24 - 2*denom(1/2*s12)*mt^4
      *s12*s13*s23 - 5/2*denom(1/2*s12)*mt^4*s12*s13*s14 - 1/2*denom(1/2*s12)*
      mt^4*s12*s13^2 - 1/2*denom(1/2*s12)*mt^4*s12^2*s23 - 1/2*denom(1/2*s12)*
      mt^4*s12^2*s14 - 1/2*denom(1/2*s12)*mt^4*s12^2*s13 + 1/2*denom(1/2*s12)*
      mt^4*mh^2*s12*s23 + 1/2*denom(1/2*s12)*mt^4*mh^2*s12*s14 + 1/2*denom(1/2
      *s12)*mt^4*mh^2*s12*s13 + denom(1/2*s12)*mt^6*s12*s24 + 2*denom(1/2*s12)
      *mt^6*s12*s23 + 3*denom(1/2*s12)*mt^6*s12*s14 + 2*denom(1/2*s12)*mt^6*
      s12*s13 + 1/2*denom(1/2*s12)*mt^6*s12^2 - 1/2*denom(1/2*s12)*mt^6*mh^2*
      s12 - 2*denom(1/2*s12)*mt^8*s12 - 1/4*denom(1/4*s12^2)*s12*s13*s14^2*
      s23^2 - 1/4*denom(1/4*s12^2)*s12*s13^2*s14*s23*s24 + 1/4*denom(1/4*s12^2
      )*mt^2*s12*s14^2*s23^2 + 1/2*denom(1/4*s12^2)*mt^2*s12*s13*s14*s23*s24
       + 1/2*denom(1/4*s12^2)*mt^2*s12*s13*s14*s23^2 + 1/2*denom(1/4*s12^2)*
      mt^2*s12*s13*s14^2*s23 + 1/4*denom(1/4*s12^2)*mt^2*s12*s13^2*s23*s24 + 1/
      4*denom(1/4*s12^2)*mt^2*s12*s13^2*s14*s24 + 1/4*denom(1/4*s12^2)*mt^2*
      s12*s13^2*s14*s23 - 1/4*denom(1/4*s12^2)*mt^4*s12*s14*s23*s24 - 1/2*
      denom(1/4*s12^2)*mt^4*s12*s14*s23^2 - 1/2*denom(1/4*s12^2)*mt^4*s12*
      s14^2*s23 - 1/2*denom(1/4*s12^2)*mt^4*s12*s13*s23*s24 - 1/4*denom(1/4*
      s12^2)*mt^4*s12*s13*s23^2 - 1/2*denom(1/4*s12^2)*mt^4*s12*s13*s14*s24 - 
      3/2*denom(1/4*s12^2)*mt^4*s12*s13*s14*s23 - 1/4*denom(1/4*s12^2)*mt^4*
      s12*s13*s14^2 - 1/4*denom(1/4*s12^2)*mt^4*s12*s13^2*s24 - 1/4*denom(1/4*
      s12^2)*mt^4*s12*s13^2*s23 - 1/4*denom(1/4*s12^2)*mt^4*s12*s13^2*s14 + 1/
      4*denom(1/4*s12^2)*mt^6*s12*s23*s24 + 1/4*denom(1/4*s12^2)*mt^6*s12*
      s23^2 + 1/4*denom(1/4*s12^2)*mt^6*s12*s14*s24 + 5/4*denom(1/4*s12^2)*
      mt^6*s12*s14*s23 + 1/4*denom(1/4*s12^2)*mt^6*s12*s14^2 + 1/2*denom(1/4*
      s12^2)*mt^6*s12*s13*s24 + denom(1/4*s12^2)*mt^6*s12*s13*s23 + denom(1/4*
      s12^2)*mt^6*s12*s13*s14 + 1/4*denom(1/4*s12^2)*mt^6*s12*s13^2 - 1/4*
      denom(1/4*s12^2)*mt^8*s12*s24 - 3/4*denom(1/4*s12^2)*mt^8*s12*s23 - 3/4*
      denom(1/4*s12^2)*mt^8*s12*s14 - 3/4*denom(1/4*s12^2)*mt^8*s12*s13 + 1/2*
      denom(1/4*s12^2)*mt^10*s12;
 
 .sort
id KMatrix(14,31) =  2*mt^4*s12*s23 - 2*mt^6*s12 - denom(1/2*s12)*mt^2*s12*s14
      *s23*s24 - denom(1/2*s12)*mt^2*s12*s13*s23^2 + denom(1/2*s12)*mt^4*s12*
      s23*s24 + denom(1/2*s12)*mt^4*s12*s23^2 + denom(1/2*s12)*mt^4*s12*s14*
      s24 + denom(1/2*s12)*mt^4*s12*s14*s23 + 2*denom(1/2*s12)*mt^4*s12*s13*
      s23 - denom(1/2*s12)*mt^6*s12*s24 - 3*denom(1/2*s12)*mt^6*s12*s23 - 
      denom(1/2*s12)*mt^6*s12*s14 - denom(1/2*s12)*mt^6*s12*s13 + 2*denom(1/2*
      s12)*mt^8*s12 + 1/2*denom(1/4*s12^2)*s12*s13*s14*s23^2*s24 - 1/2*denom(1/
      4*s12^2)*mt^2*s12*s14*s23^2*s24 - 1/2*denom(1/4*s12^2)*mt^2*s12*s13*
      s23^2*s24 - denom(1/4*s12^2)*mt^2*s12*s13*s14*s23*s24 - 1/2*denom(1/4*
      s12^2)*mt^2*s12*s13*s14*s23^2 + 1/2*denom(1/4*s12^2)*mt^4*s12*s23^2*s24
       + denom(1/4*s12^2)*mt^4*s12*s14*s23*s24 + 1/2*denom(1/4*s12^2)*mt^4*s12
      *s14*s23^2 + denom(1/4*s12^2)*mt^4*s12*s13*s23*s24 + 1/2*denom(1/4*s12^2
      )*mt^4*s12*s13*s23^2 + 1/2*denom(1/4*s12^2)*mt^4*s12*s13*s14*s24 + 
      denom(1/4*s12^2)*mt^4*s12*s13*s14*s23 - denom(1/4*s12^2)*mt^6*s12*s23*
      s24 - 1/2*denom(1/4*s12^2)*mt^6*s12*s23^2 - 1/2*denom(1/4*s12^2)*mt^6*
      s12*s14*s24 - denom(1/4*s12^2)*mt^6*s12*s14*s23 - 1/2*denom(1/4*s12^2)*
      mt^6*s12*s13*s24 - denom(1/4*s12^2)*mt^6*s12*s13*s23 - 1/2*denom(1/4*
      s12^2)*mt^6*s12*s13*s14 + 1/2*denom(1/4*s12^2)*mt^8*s12*s24 + denom(1/4*
      s12^2)*mt^8*s12*s23 + 1/2*denom(1/4*s12^2)*mt^8*s12*s14 + 1/2*denom(1/4*
      s12^2)*mt^8*s12*s13 - 1/2*denom(1/4*s12^2)*mt^10*s12;
 
 .sort
id KMatrix(14,32) =   - 1/2*s12*s14*s24^2 - s12*s14*s23*s24 - 1/2*s12*s14*
      s23^2 - s12*s14^2*s24 - s12*s14^2*s23 - 1/2*s12*s14^3 - s12*s13*s14*s24
       - s12*s13*s14*s23 - s12*s13*s14^2 - 1/2*s12*s13^2*s14 - s12^2*s14*s24
       - s12^2*s14*s23 - s12^2*s14^2 - s12^2*s13*s14 - 1/2*s12^3*s14 + mh^2*
      s12*s14*s24 + mh^2*s12*s14*s23 + mh^2*s12*s14^2 + mh^2*s12*s13*s14 + 
      mh^2*s12^2*s14 - 1/2*mh^4*s12*s14 + 1/2*mt^2*s12*s24^2 + mt^2*s12*s23*
      s24 + 1/2*mt^2*s12*s23^2 + 3*mt^2*s12*s14*s24 + 3*mt^2*s12*s14*s23 + 5/2
      *mt^2*s12*s14^2 + mt^2*s12*s13*s24 + mt^2*s12*s13*s23 + 3*mt^2*s12*s13*
      s14 + 1/2*mt^2*s12*s13^2 + mt^2*s12^2*s24 + mt^2*s12^2*s23 + 3*mt^2*
      s12^2*s14 + mt^2*s12^2*s13 + 1/2*mt^2*s12^3 - mt^2*mh^2*s12*s24 - mt^2*
      mh^2*s12*s23 - 3*mt^2*mh^2*s12*s14 - mt^2*mh^2*s12*s13 - mt^2*mh^2*s12^2
       + 1/2*mt^2*mh^4*s12 - 2*mt^4*s12*s24 - 2*mt^4*s12*s23 - 4*mt^4*s12*s14
       - 2*mt^4*s12*s13 - 2*mt^4*s12^2 + 2*mt^4*mh^2*s12 + 2*mt^6*s12 - 1/2*
      denom(1/2*s12)*s12*s14^2*s23*s24 - 1/2*denom(1/2*s12)*s12*s14^2*s23^2 - 
      1/2*denom(1/2*s12)*s12*s14^3*s23 - 1/2*denom(1/2*s12)*s12*s13*s14*s24^2
       - 1/2*denom(1/2*s12)*s12*s13*s14*s23*s24 - 1/2*denom(1/2*s12)*s12*s13*
      s14^2*s24 - 1/2*denom(1/2*s12)*s12*s13*s14^2*s23 - 1/2*denom(1/2*s12)*
      s12*s13^2*s14*s24 - 1/2*denom(1/2*s12)*s12^2*s14^2*s23 - 1/2*denom(1/2*
      s12)*s12^2*s13*s14*s24 + 1/2*denom(1/2*s12)*mh^2*s12*s14^2*s23 + 1/2*
      denom(1/2*s12)*mh^2*s12*s13*s14*s24 + 1/2*denom(1/2*s12)*mt^2*s12*s14*
      s24^2 + 3/2*denom(1/2*s12)*mt^2*s12*s14*s23*s24 + denom(1/2*s12)*mt^2*
      s12*s14*s23^2 + denom(1/2*s12)*mt^2*s12*s14^2*s24 + 5/2*denom(1/2*s12)*
      mt^2*s12*s14^2*s23 + 1/2*denom(1/2*s12)*mt^2*s12*s14^3 + 1/2*denom(1/2*
      s12)*mt^2*s12*s13*s24^2 + 1/2*denom(1/2*s12)*mt^2*s12*s13*s23*s24 + 5/2*
      denom(1/2*s12)*mt^2*s12*s13*s14*s24 + 3/2*denom(1/2*s12)*mt^2*s12*s13*
      s14*s23 + denom(1/2*s12)*mt^2*s12*s13*s14^2 + 1/2*denom(1/2*s12)*mt^2*
      s12*s13^2*s24 + 1/2*denom(1/2*s12)*mt^2*s12*s13^2*s14 + 1/2*denom(1/2*
      s12)*mt^2*s12^2*s14*s24 + denom(1/2*s12)*mt^2*s12^2*s14*s23 + 1/2*denom(
      1/2*s12)*mt^2*s12^2*s14^2 + 1/2*denom(1/2*s12)*mt^2*s12^2*s13*s24 + 1/2*
      denom(1/2*s12)*mt^2*s12^2*s13*s14 - 1/2*denom(1/2*s12)*mt^2*mh^2*s12*s14
      *s24 - denom(1/2*s12)*mt^2*mh^2*s12*s14*s23 - 1/2*denom(1/2*s12)*mt^2*
      mh^2*s12*s14^2 - 1/2*denom(1/2*s12)*mt^2*mh^2*s12*s13*s24 - 1/2*denom(1/
      2*s12)*mt^2*mh^2*s12*s13*s14 - 1/2*denom(1/2*s12)*mt^4*s12*s24^2 - 
      denom(1/2*s12)*mt^4*s12*s23*s24 - 1/2*denom(1/2*s12)*mt^4*s12*s23^2 - 3*
      denom(1/2*s12)*mt^4*s12*s14*s24 - 4*denom(1/2*s12)*mt^4*s12*s14*s23 - 5/
      2*denom(1/2*s12)*mt^4*s12*s14^2 - 2*denom(1/2*s12)*mt^4*s12*s13*s24 - 
      denom(1/2*s12)*mt^4*s12*s13*s23 - 3*denom(1/2*s12)*mt^4*s12*s13*s14 - 1/
      2*denom(1/2*s12)*mt^4*s12*s13^2 - 1/2*denom(1/2*s12)*mt^4*s12^2*s24 - 1/
      2*denom(1/2*s12)*mt^4*s12^2*s23 - 3/2*denom(1/2*s12)*mt^4*s12^2*s14 - 1/
      2*denom(1/2*s12)*mt^4*s12^2*s13 + 1/2*denom(1/2*s12)*mt^4*mh^2*s12*s24
       + 1/2*denom(1/2*s12)*mt^4*mh^2*s12*s23 + 3/2*denom(1/2*s12)*mt^4*mh^2*
      s12*s14 + 1/2*denom(1/2*s12)*mt^4*mh^2*s12*s13 + 2*denom(1/2*s12)*mt^6*
      s12*s24 + 2*denom(1/2*s12)*mt^6*s12*s23 + 4*denom(1/2*s12)*mt^6*s12*s14
       + 2*denom(1/2*s12)*mt^6*s12*s13 + denom(1/2*s12)*mt^6*s12^2 - denom(1/2
      *s12)*mt^6*mh^2*s12 - 2*denom(1/2*s12)*mt^8*s12 - 1/8*denom(1/4*s12^2)*
      s12*s14^3*s23^2 - 1/4*denom(1/4*s12^2)*s12*s13*s14^2*s23*s24 - 1/8*
      denom(1/4*s12^2)*s12*s13^2*s14*s24^2 + 1/4*denom(1/4*s12^2)*mt^2*s12*
      s14^2*s23*s24 + 3/8*denom(1/4*s12^2)*mt^2*s12*s14^2*s23^2 + 1/4*denom(1/
      4*s12^2)*mt^2*s12*s14^3*s23 + 1/4*denom(1/4*s12^2)*mt^2*s12*s13*s14*
      s24^2 + 1/2*denom(1/4*s12^2)*mt^2*s12*s13*s14*s23*s24 + 1/4*denom(1/4*
      s12^2)*mt^2*s12*s13*s14^2*s24 + 1/4*denom(1/4*s12^2)*mt^2*s12*s13*s14^2*
      s23 + 1/8*denom(1/4*s12^2)*mt^2*s12*s13^2*s24^2 + 1/4*denom(1/4*s12^2)*
      mt^2*s12*s13^2*s14*s24 - 1/8*denom(1/4*s12^2)*mt^4*s12*s14*s24^2 - 1/2*
      denom(1/4*s12^2)*mt^4*s12*s14*s23*s24 - 3/8*denom(1/4*s12^2)*mt^4*s12*
      s14*s23^2 - 1/4*denom(1/4*s12^2)*mt^4*s12*s14^2*s24 - denom(1/4*s12^2)*
      mt^4*s12*s14^2*s23 - 1/8*denom(1/4*s12^2)*mt^4*s12*s14^3 - 1/4*denom(1/4
      *s12^2)*mt^4*s12*s13*s24^2 - 1/4*denom(1/4*s12^2)*mt^4*s12*s13*s23*s24
       - denom(1/4*s12^2)*mt^4*s12*s13*s14*s24 - 1/2*denom(1/4*s12^2)*mt^4*s12
      *s13*s14*s23 - 1/4*denom(1/4*s12^2)*mt^4*s12*s13*s14^2 - 1/4*denom(1/4*
      s12^2)*mt^4*s12*s13^2*s24 - 1/8*denom(1/4*s12^2)*mt^4*s12*s13^2*s14 + 1/
      8*denom(1/4*s12^2)*mt^6*s12*s24^2 + 1/4*denom(1/4*s12^2)*mt^6*s12*s23*
      s24 + 1/8*denom(1/4*s12^2)*mt^6*s12*s23^2 + 3/4*denom(1/4*s12^2)*mt^6*
      s12*s14*s24 + 5/4*denom(1/4*s12^2)*mt^6*s12*s14*s23 + 5/8*denom(1/4*
      s12^2)*mt^6*s12*s14^2 + 3/4*denom(1/4*s12^2)*mt^6*s12*s13*s24 + 1/4*
      denom(1/4*s12^2)*mt^6*s12*s13*s23 + 3/4*denom(1/4*s12^2)*mt^6*s12*s13*
      s14 + 1/8*denom(1/4*s12^2)*mt^6*s12*s13^2 - 1/2*denom(1/4*s12^2)*mt^8*
      s12*s24 - 1/2*denom(1/4*s12^2)*mt^8*s12*s23 - denom(1/4*s12^2)*mt^8*s12*
      s14 - 1/2*denom(1/4*s12^2)*mt^8*s12*s13 + 1/2*denom(1/4*s12^2)*mt^10*s12
      ;
 
 .sort
id KMatrix(14,33) =   - mt^2*s12*s23*s24 - mt^2*s12*s23^2 - mt^2*s12*s14*s23
       - mt^2*s12*s13*s23 - mt^2*s12^2*s23 + mt^2*mh^2*s12*s23 + mt^4*s12*s24
       + 3*mt^4*s12*s23 + mt^4*s12*s14 + mt^4*s12*s13 + mt^4*s12^2 - mt^4*mh^2
      *s12 - 2*mt^6*s12 + 1/2*denom(1/2*s12)*s12*s14*s23*s24^2 + 1/2*denom(1/2
      *s12)*s12*s14*s23^2*s24 + 1/2*denom(1/2*s12)*s12*s14^2*s23*s24 + 1/2*
      denom(1/2*s12)*s12*s13*s14*s23*s24 + 1/2*denom(1/2*s12)*s12^2*s14*s23*
      s24 - 1/2*denom(1/2*s12)*mh^2*s12*s14*s23*s24 - 1/2*denom(1/2*s12)*mt^2*
      s12*s23*s24^2 - 1/2*denom(1/2*s12)*mt^2*s12*s23^2*s24 - 1/2*denom(1/2*
      s12)*mt^2*s12*s14*s24^2 - 5/2*denom(1/2*s12)*mt^2*s12*s14*s23*s24 - 
      denom(1/2*s12)*mt^2*s12*s14*s23^2 - 1/2*denom(1/2*s12)*mt^2*s12*s14^2*
      s24 - 1/2*denom(1/2*s12)*mt^2*s12*s14^2*s23 - denom(1/2*s12)*mt^2*s12*
      s13*s23*s24 - 1/2*denom(1/2*s12)*mt^2*s12*s13*s14*s24 - 1/2*denom(1/2*
      s12)*mt^2*s12*s13*s14*s23 - 1/2*denom(1/2*s12)*mt^2*s12^2*s23*s24 - 1/2*
      denom(1/2*s12)*mt^2*s12^2*s14*s24 - 1/2*denom(1/2*s12)*mt^2*s12^2*s14*
      s23 + 1/2*denom(1/2*s12)*mt^2*mh^2*s12*s23*s24 + 1/2*denom(1/2*s12)*mt^2
      *mh^2*s12*s14*s24 + 1/2*denom(1/2*s12)*mt^2*mh^2*s12*s14*s23 + 1/2*
      denom(1/2*s12)*mt^4*s12*s24^2 + 5/2*denom(1/2*s12)*mt^4*s12*s23*s24 + 
      denom(1/2*s12)*mt^4*s12*s23^2 + 2*denom(1/2*s12)*mt^4*s12*s14*s24 + 3*
      denom(1/2*s12)*mt^4*s12*s14*s23 + 1/2*denom(1/2*s12)*mt^4*s12*s14^2 + 
      denom(1/2*s12)*mt^4*s12*s13*s24 + denom(1/2*s12)*mt^4*s12*s13*s23 + 1/2*
      denom(1/2*s12)*mt^4*s12*s13*s14 + 1/2*denom(1/2*s12)*mt^4*s12^2*s24 + 1/
      2*denom(1/2*s12)*mt^4*s12^2*s23 + 1/2*denom(1/2*s12)*mt^4*s12^2*s14 - 1/
      2*denom(1/2*s12)*mt^4*mh^2*s12*s24 - 1/2*denom(1/2*s12)*mt^4*mh^2*s12*
      s23 - 1/2*denom(1/2*s12)*mt^4*mh^2*s12*s14 - 2*denom(1/2*s12)*mt^6*s12*
      s24 - 3*denom(1/2*s12)*mt^6*s12*s23 - 2*denom(1/2*s12)*mt^6*s12*s14 - 
      denom(1/2*s12)*mt^6*s12*s13 - 1/2*denom(1/2*s12)*mt^6*s12^2 + 1/2*denom(
      1/2*s12)*mt^6*mh^2*s12 + 2*denom(1/2*s12)*mt^8*s12 + 1/4*denom(1/4*s12^2
      )*s12*s14^2*s23^2*s24 + 1/4*denom(1/4*s12^2)*s12*s13*s14*s23*s24^2 - 1/4
      *denom(1/4*s12^2)*mt^2*s12*s14*s23*s24^2 - 1/2*denom(1/4*s12^2)*mt^2*s12
      *s14*s23^2*s24 - 1/2*denom(1/4*s12^2)*mt^2*s12*s14^2*s23*s24 - 1/4*
      denom(1/4*s12^2)*mt^2*s12*s14^2*s23^2 - 1/4*denom(1/4*s12^2)*mt^2*s12*
      s13*s23*s24^2 - 1/4*denom(1/4*s12^2)*mt^2*s12*s13*s14*s24^2 - 1/2*denom(
      1/4*s12^2)*mt^2*s12*s13*s14*s23*s24 + 1/4*denom(1/4*s12^2)*mt^4*s12*s23*
      s24^2 + 1/4*denom(1/4*s12^2)*mt^4*s12*s23^2*s24 + 1/4*denom(1/4*s12^2)*
      mt^4*s12*s14*s24^2 + 3/2*denom(1/4*s12^2)*mt^4*s12*s14*s23*s24 + 1/2*
      denom(1/4*s12^2)*mt^4*s12*s14*s23^2 + 1/4*denom(1/4*s12^2)*mt^4*s12*
      s14^2*s24 + 1/2*denom(1/4*s12^2)*mt^4*s12*s14^2*s23 + 1/4*denom(1/4*
      s12^2)*mt^4*s12*s13*s24^2 + 1/2*denom(1/4*s12^2)*mt^4*s12*s13*s23*s24 + 
      1/2*denom(1/4*s12^2)*mt^4*s12*s13*s14*s24 + 1/4*denom(1/4*s12^2)*mt^4*
      s12*s13*s14*s23 - 1/4*denom(1/4*s12^2)*mt^6*s12*s24^2 - denom(1/4*s12^2)
      *mt^6*s12*s23*s24 - 1/4*denom(1/4*s12^2)*mt^6*s12*s23^2 - denom(1/4*
      s12^2)*mt^6*s12*s14*s24 - 5/4*denom(1/4*s12^2)*mt^6*s12*s14*s23 - 1/4*
      denom(1/4*s12^2)*mt^6*s12*s14^2 - 1/2*denom(1/4*s12^2)*mt^6*s12*s13*s24
       - 1/4*denom(1/4*s12^2)*mt^6*s12*s13*s23 - 1/4*denom(1/4*s12^2)*mt^6*s12
      *s13*s14 + 3/4*denom(1/4*s12^2)*mt^8*s12*s24 + 3/4*denom(1/4*s12^2)*mt^8
      *s12*s23 + 3/4*denom(1/4*s12^2)*mt^8*s12*s14 + 1/4*denom(1/4*s12^2)*mt^8
      *s12*s13 - 1/2*denom(1/4*s12^2)*mt^10*s12;
 
 .sort
id KMatrix(14,34) =   - mt*s12*s14*s24 - mt*s12*s14*s23 - mt*s12*s14^2 - mt*
      s12*s13*s14 - mt*s12^2*s14 + mt*mh^2*s12*s14 + mt^3*s12*s24 + mt^3*s12*
      s23 + 3*mt^3*s12*s14 + mt^3*s12*s13 + mt^3*s12^2 - mt^3*mh^2*s12 - 2*
      mt^5*s12 - denom(1/2*s12)*mt*s12*s14^2*s23 - denom(1/2*s12)*mt*s12*s13*
      s14*s24 + denom(1/2*s12)*mt^3*s12*s14*s24 + 2*denom(1/2*s12)*mt^3*s12*
      s14*s23 + denom(1/2*s12)*mt^3*s12*s14^2 + denom(1/2*s12)*mt^3*s12*s13*
      s24 + denom(1/2*s12)*mt^3*s12*s13*s14 - denom(1/2*s12)*mt^5*s12*s24 - 
      denom(1/2*s12)*mt^5*s12*s23 - 3*denom(1/2*s12)*mt^5*s12*s14 - denom(1/2*
      s12)*mt^5*s12*s13 + 2*denom(1/2*s12)*mt^7*s12 + 1/4*denom(1/4*s12^2)*mt*
      s12^2*s14^2*s23 + 1/4*denom(1/4*s12^2)*mt*s12^2*s13*s14*s24 - 1/4*denom(
      1/4*s12^2)*mt^3*s12^2*s14*s24 - 1/2*denom(1/4*s12^2)*mt^3*s12^2*s14*s23
       - 1/4*denom(1/4*s12^2)*mt^3*s12^2*s14^2 - 1/4*denom(1/4*s12^2)*mt^3*
      s12^2*s13*s24 - 1/4*denom(1/4*s12^2)*mt^3*s12^2*s13*s14 + 1/4*denom(1/4*
      s12^2)*mt^5*s12^2*s24 + 1/4*denom(1/4*s12^2)*mt^5*s12^2*s23 + 3/4*denom(
      1/4*s12^2)*mt^5*s12^2*s14 + 1/4*denom(1/4*s12^2)*mt^5*s12^2*s13 - 1/2*
      denom(1/4*s12^2)*mt^7*s12^2;
 
 .sort
id KMatrix(14,35) =  mt*s12*s23*s24 + mt*s12*s23^2 + mt*s12*s14*s23 + mt*s12*
      s13*s23 + mt*s12^2*s23 - mt*mh^2*s12*s23 - mt^3*s12*s24 - 3*mt^3*s12*s23
       - mt^3*s12*s14 - mt^3*s12*s13 - mt^3*s12^2 + mt^3*mh^2*s12 + 2*mt^5*s12
       + denom(1/2*s12)*mt*s12*s14*s23^2 + denom(1/2*s12)*mt*s12*s13*s23*s24
       - denom(1/2*s12)*mt^3*s12*s23*s24 - denom(1/2*s12)*mt^3*s12*s23^2 - 2*
      denom(1/2*s12)*mt^3*s12*s14*s23 - denom(1/2*s12)*mt^3*s12*s13*s24 - 
      denom(1/2*s12)*mt^3*s12*s13*s23 + denom(1/2*s12)*mt^5*s12*s24 + 3*denom(
      1/2*s12)*mt^5*s12*s23 + denom(1/2*s12)*mt^5*s12*s14 + denom(1/2*s12)*
      mt^5*s12*s13 - 2*denom(1/2*s12)*mt^7*s12 - 1/4*denom(1/4*s12^2)*mt*s12^2
      *s14*s23^2 - 1/4*denom(1/4*s12^2)*mt*s12^2*s13*s23*s24 + 1/4*denom(1/4*
      s12^2)*mt^3*s12^2*s23*s24 + 1/4*denom(1/4*s12^2)*mt^3*s12^2*s23^2 + 1/2*
      denom(1/4*s12^2)*mt^3*s12^2*s14*s23 + 1/4*denom(1/4*s12^2)*mt^3*s12^2*
      s13*s24 + 1/4*denom(1/4*s12^2)*mt^3*s12^2*s13*s23 - 1/4*denom(1/4*s12^2)
      *mt^5*s12^2*s24 - 3/4*denom(1/4*s12^2)*mt^5*s12^2*s23 - 1/4*denom(1/4*
      s12^2)*mt^5*s12^2*s14 - 1/4*denom(1/4*s12^2)*mt^5*s12^2*s13 + 1/2*denom(
      1/4*s12^2)*mt^7*s12^2;
 
 .sort
id KMatrix(14,36) =   - s12*s14*s23*s24 - s12*s14*s23^2 - s12*s14^2*s23 - s12*
      s13*s14*s23 - s12^2*s14*s23 + mh^2*s12*s14*s23 + mt^2*s12*s23*s24 + mt^2
      *s12*s23^2 + mt^2*s12*s14*s24 + 4*mt^2*s12*s14*s23 + mt^2*s12*s14^2 + 
      mt^2*s12*s13*s23 + mt^2*s12*s13*s14 + mt^2*s12^2*s23 + mt^2*s12^2*s14 - 
      mt^2*mh^2*s12*s23 - mt^2*mh^2*s12*s14 - mt^4*s12*s24 - 3*mt^4*s12*s23 - 
      3*mt^4*s12*s14 - mt^4*s12*s13 - mt^4*s12^2 + mt^4*mh^2*s12 + 2*mt^6*s12
       - denom(1/2*s12)*s12*s14^2*s23^2 - denom(1/2*s12)*s12*s13*s14*s23*s24
       + denom(1/2*s12)*mt^2*s12*s14*s23*s24 + 2*denom(1/2*s12)*mt^2*s12*s14*
      s23^2 + 2*denom(1/2*s12)*mt^2*s12*s14^2*s23 + denom(1/2*s12)*mt^2*s12*
      s13*s23*s24 + denom(1/2*s12)*mt^2*s12*s13*s14*s24 + denom(1/2*s12)*mt^2*
      s12*s13*s14*s23 - denom(1/2*s12)*mt^4*s12*s23*s24 - denom(1/2*s12)*mt^4*
      s12*s23^2 - denom(1/2*s12)*mt^4*s12*s14*s24 - 5*denom(1/2*s12)*mt^4*s12*
      s14*s23 - denom(1/2*s12)*mt^4*s12*s14^2 - denom(1/2*s12)*mt^4*s12*s13*
      s24 - denom(1/2*s12)*mt^4*s12*s13*s23 - denom(1/2*s12)*mt^4*s12*s13*s14
       + denom(1/2*s12)*mt^6*s12*s24 + 3*denom(1/2*s12)*mt^6*s12*s23 + 3*
      denom(1/2*s12)*mt^6*s12*s14 + denom(1/2*s12)*mt^6*s12*s13 - 2*denom(1/2*
      s12)*mt^8*s12 + 1/4*denom(1/4*s12^2)*s12^2*s14^2*s23^2 + 1/4*denom(1/4*
      s12^2)*s12^2*s13*s14*s23*s24 - 1/4*denom(1/4*s12^2)*mt^2*s12^2*s14*s23*
      s24 - 1/2*denom(1/4*s12^2)*mt^2*s12^2*s14*s23^2 - 1/2*denom(1/4*s12^2)*
      mt^2*s12^2*s14^2*s23 - 1/4*denom(1/4*s12^2)*mt^2*s12^2*s13*s23*s24 - 1/4
      *denom(1/4*s12^2)*mt^2*s12^2*s13*s14*s24 - 1/4*denom(1/4*s12^2)*mt^2*
      s12^2*s13*s14*s23 + 1/4*denom(1/4*s12^2)*mt^4*s12^2*s23*s24 + 1/4*denom(
      1/4*s12^2)*mt^4*s12^2*s23^2 + 1/4*denom(1/4*s12^2)*mt^4*s12^2*s14*s24 + 
      5/4*denom(1/4*s12^2)*mt^4*s12^2*s14*s23 + 1/4*denom(1/4*s12^2)*mt^4*
      s12^2*s14^2 + 1/4*denom(1/4*s12^2)*mt^4*s12^2*s13*s24 + 1/4*denom(1/4*
      s12^2)*mt^4*s12^2*s13*s23 + 1/4*denom(1/4*s12^2)*mt^4*s12^2*s13*s14 - 1/
      4*denom(1/4*s12^2)*mt^6*s12^2*s24 - 3/4*denom(1/4*s12^2)*mt^6*s12^2*s23
       - 3/4*denom(1/4*s12^2)*mt^6*s12^2*s14 - 1/4*denom(1/4*s12^2)*mt^6*s12^2
      *s13 + 1/2*denom(1/4*s12^2)*mt^8*s12^2;
 
 .sort
id KMatrix(15,1) =   - 1/2*mt^2*s14*s23*s24 - 1/2*mt^2*s14*s23^2 - 1/2*mt^2*
      s14^2*s23 + 1/2*mt^2*s13*s24^2 + 1/2*mt^2*s13*s23*s24 + 1/2*mt^2*s13*s14
      *s24 - 1/2*mt^2*s13*s14*s23 + 1/2*mt^2*s13^2*s24 + 1/2*mt^2*s12*s24^2 + 
      mt^2*s12*s23*s24 + 1/2*mt^2*s12*s23^2 + mt^2*s12*s14*s24 + 1/2*mt^2*s12*
      s14*s23 + 1/2*mt^2*s12*s14^2 + 3/2*mt^2*s12*s13*s24 + mt^2*s12*s13*s23
       + mt^2*s12*s13*s14 + 1/2*mt^2*s12*s13^2 + mt^2*s12^2*s24 + mt^2*s12^2*
      s23 + mt^2*s12^2*s14 + mt^2*s12^2*s13 + 1/2*mt^2*s12^3 + 1/2*mt^2*mh^2*
      s14*s23 - 1/2*mt^2*mh^2*s13*s24 - mt^2*mh^2*s12*s24 - mt^2*mh^2*s12*s23
       - mt^2*mh^2*s12*s14 - mt^2*mh^2*s12*s13 - mt^2*mh^2*s12^2 + 1/2*mt^2*
      mh^4*s12 - 1/2*mt^4*s24^2 + 1/2*mt^4*s23^2 + 2*mt^4*s14*s23 + 1/2*mt^4*
      s14^2 - 2*mt^4*s13*s24 - 1/2*mt^4*s13^2 - 3/2*mt^4*s12*s24 - 1/2*mt^4*
      s12*s23 - 1/2*mt^4*s12*s14 - 3/2*mt^4*s12*s13 - mt^4*s12^2 + 1/2*mt^4*
      mh^2*s24 - 1/2*mt^4*mh^2*s23 - 1/2*mt^4*mh^2*s14 + 1/2*mt^4*mh^2*s13 + 
      mt^4*mh^2*s12 + mt^6*s24 - mt^6*s23 - mt^6*s14 + mt^6*s13 + 1/4*denom(1/
      2*s12)*s13*s14*s23^2*s24 + 1/4*denom(1/2*s12)*s13*s14*s23^3 + 1/4*denom(
      1/2*s12)*s13*s14^2*s23^2 - 1/4*denom(1/2*s12)*s13^2*s23*s24^2 - 1/4*
      denom(1/2*s12)*s13^2*s23^2*s24 - 1/4*denom(1/2*s12)*s13^2*s14*s23*s24 + 
      1/4*denom(1/2*s12)*s13^2*s14*s23^2 - 1/4*denom(1/2*s12)*s13^3*s23*s24 - 
      1/4*denom(1/2*s12)*s12*s13*s23*s24^2 - 1/2*denom(1/2*s12)*s12*s13*s23^2*
      s24 - 1/4*denom(1/2*s12)*s12*s13*s23^3 - 1/2*denom(1/2*s12)*s12*s13*s14*
      s23*s24 - 1/4*denom(1/2*s12)*s12*s13*s14*s23^2 - 1/4*denom(1/2*s12)*s12*
      s13*s14^2*s23 - 3/4*denom(1/2*s12)*s12*s13^2*s23*s24 - 1/2*denom(1/2*s12
      )*s12*s13^2*s23^2 - 1/2*denom(1/2*s12)*s12*s13^2*s14*s23 - 1/4*denom(1/2
      *s12)*s12*s13^3*s23 - 1/2*denom(1/2*s12)*s12^2*s13*s23*s24 - 1/2*denom(1/
      2*s12)*s12^2*s13*s23^2 - 1/2*denom(1/2*s12)*s12^2*s13*s14*s23 - 1/2*
      denom(1/2*s12)*s12^2*s13^2*s23 - 1/4*denom(1/2*s12)*s12^3*s13*s23 - 1/4*
      denom(1/2*s12)*mh^2*s13*s14*s23^2 + 1/4*denom(1/2*s12)*mh^2*s13^2*s23*
      s24 + 1/2*denom(1/2*s12)*mh^2*s12*s13*s23*s24 + 1/2*denom(1/2*s12)*mh^2*
      s12*s13*s23^2 + 1/2*denom(1/2*s12)*mh^2*s12*s13*s14*s23 + 1/2*denom(1/2*
      s12)*mh^2*s12*s13^2*s23 + 1/2*denom(1/2*s12)*mh^2*s12^2*s13*s23 - 1/4*
      denom(1/2*s12)*mh^4*s12*s13*s23 - 1/4*denom(1/2*s12)*mt^2*s14*s23^2*s24
       - 1/4*denom(1/2*s12)*mt^2*s14*s23^3 - 1/2*denom(1/2*s12)*mt^2*s14^2*
      s23^2 + 1/2*denom(1/2*s12)*mt^2*s13*s23*s24^2 + 1/4*denom(1/2*s12)*mt^2*
      s13*s23^2*s24 - 1/4*denom(1/2*s12)*mt^2*s13*s23^3 - 3/2*denom(1/2*s12)*
      mt^2*s13*s14*s23^2 - 1/2*denom(1/2*s12)*mt^2*s13*s14^2*s23 + 1/2*denom(1/
      2*s12)*mt^2*s13^2*s24^2 + 3/2*denom(1/2*s12)*mt^2*s13^2*s23*s24 + 1/4*
      denom(1/2*s12)*mt^2*s13^2*s14*s24 - 1/4*denom(1/2*s12)*mt^2*s13^2*s14*
      s23 + 1/4*denom(1/2*s12)*mt^2*s13^3*s24 + 1/4*denom(1/2*s12)*mt^2*s13^3*
      s23 + 1/4*denom(1/2*s12)*mt^2*s12*s23*s24^2 + 1/2*denom(1/2*s12)*mt^2*
      s12*s23^2*s24 + 1/4*denom(1/2*s12)*mt^2*s12*s23^3 + 3/4*denom(1/2*s12)*
      mt^2*s12*s14*s23*s24 + 1/2*denom(1/2*s12)*mt^2*s12*s14*s23^2 + 1/2*
      denom(1/2*s12)*mt^2*s12*s14^2*s23 + 1/2*denom(1/2*s12)*mt^2*s12*s13*
      s24^2 + 9/4*denom(1/2*s12)*mt^2*s12*s13*s23*s24 + denom(1/2*s12)*mt^2*
      s12*s13*s23^2 + 3/4*denom(1/2*s12)*mt^2*s12*s13*s14*s24 + 5/4*denom(1/2*
      s12)*mt^2*s12*s13*s14*s23 + 1/4*denom(1/2*s12)*mt^2*s12*s13*s14^2 + 
      denom(1/2*s12)*mt^2*s12*s13^2*s24 + 3/2*denom(1/2*s12)*mt^2*s12*s13^2*
      s23 + 1/2*denom(1/2*s12)*mt^2*s12*s13^2*s14 + 1/4*denom(1/2*s12)*mt^2*
      s12*s13^3 + 1/2*denom(1/2*s12)*mt^2*s12^2*s23*s24 + 1/2*denom(1/2*s12)*
      mt^2*s12^2*s23^2 + 3/4*denom(1/2*s12)*mt^2*s12^2*s14*s23 + 3/4*denom(1/2
      *s12)*mt^2*s12^2*s13*s24 + 3/2*denom(1/2*s12)*mt^2*s12^2*s13*s23 + 1/2*
      denom(1/2*s12)*mt^2*s12^2*s13*s14 + 1/2*denom(1/2*s12)*mt^2*s12^2*s13^2
       + 1/4*denom(1/2*s12)*mt^2*s12^3*s23 + 1/4*denom(1/2*s12)*mt^2*s12^3*s13
       + 1/4*denom(1/2*s12)*mt^2*mh^2*s14*s23^2 - 1/2*denom(1/2*s12)*mt^2*mh^2
      *s13*s23*s24 + 1/4*denom(1/2*s12)*mt^2*mh^2*s13*s23^2 + 1/2*denom(1/2*
      s12)*mt^2*mh^2*s13*s14*s23 - 1/4*denom(1/2*s12)*mt^2*mh^2*s13^2*s24 - 1/
      4*denom(1/2*s12)*mt^2*mh^2*s13^2*s23 - 1/2*denom(1/2*s12)*mt^2*mh^2*s12*
      s23*s24 - 1/2*denom(1/2*s12)*mt^2*mh^2*s12*s23^2 - 3/4*denom(1/2*s12)*
      mt^2*mh^2*s12*s14*s23 - 3/4*denom(1/2*s12)*mt^2*mh^2*s12*s13*s24 - 3/2*
      denom(1/2*s12)*mt^2*mh^2*s12*s13*s23 - 1/2*denom(1/2*s12)*mt^2*mh^2*s12*
      s13*s14 - 1/2*denom(1/2*s12)*mt^2*mh^2*s12*s13^2 - 1/2*denom(1/2*s12)*
      mt^2*mh^2*s12^2*s23 - 1/2*denom(1/2*s12)*mt^2*mh^2*s12^2*s13 + 1/4*
      denom(1/2*s12)*mt^2*mh^4*s12*s23 + 1/4*denom(1/2*s12)*mt^2*mh^4*s12*s13
       - 1/4*denom(1/2*s12)*mt^4*s23*s24^2 + 1/4*denom(1/2*s12)*mt^4*s23^3 + 1/
      4*denom(1/2*s12)*mt^4*s14*s23*s24 + 7/4*denom(1/2*s12)*mt^4*s14*s23^2 + 
      denom(1/2*s12)*mt^4*s14^2*s23 - denom(1/2*s12)*mt^4*s13*s24^2 - 7/4*
      denom(1/2*s12)*mt^4*s13*s23*s24 + 3/4*denom(1/2*s12)*mt^4*s13*s23^2 - 1/
      4*denom(1/2*s12)*mt^4*s13*s14*s24 + 7/4*denom(1/2*s12)*mt^4*s13*s14*s23
       + 1/4*denom(1/2*s12)*mt^4*s13*s14^2 - 7/4*denom(1/2*s12)*mt^4*s13^2*s24
       - 3/4*denom(1/2*s12)*mt^4*s13^2*s23 - 1/4*denom(1/2*s12)*mt^4*s13^3 - 1/
      2*denom(1/2*s12)*mt^4*s12*s24^2 - 7/4*denom(1/2*s12)*mt^4*s12*s23*s24 - 
      3/4*denom(1/2*s12)*mt^4*s12*s23^2 - denom(1/2*s12)*mt^4*s12*s14*s24 - 
      denom(1/2*s12)*mt^4*s12*s14*s23 - 1/2*denom(1/2*s12)*mt^4*s12*s14^2 - 2*
      denom(1/2*s12)*mt^4*s12*s13*s24 - 2*denom(1/2*s12)*mt^4*s12*s13*s23 - 5/
      4*denom(1/2*s12)*mt^4*s12*s13*s14 - 5/4*denom(1/2*s12)*mt^4*s12*s13^2 - 
      3/4*denom(1/2*s12)*mt^4*s12^2*s24 - 5/4*denom(1/2*s12)*mt^4*s12^2*s23 - 
      3/4*denom(1/2*s12)*mt^4*s12^2*s14 - 5/4*denom(1/2*s12)*mt^4*s12^2*s13 - 
      1/4*denom(1/2*s12)*mt^4*s12^3 + 1/4*denom(1/2*s12)*mt^4*mh^2*s23*s24 - 1/
      4*denom(1/2*s12)*mt^4*mh^2*s23^2 - 1/2*denom(1/2*s12)*mt^4*mh^2*s14*s23
       + 1/2*denom(1/2*s12)*mt^4*mh^2*s13*s24 - 1/4*denom(1/2*s12)*mt^4*mh^2*
      s13*s14 + 1/4*denom(1/2*s12)*mt^4*mh^2*s13^2 + 3/4*denom(1/2*s12)*mt^4*
      mh^2*s12*s24 + 5/4*denom(1/2*s12)*mt^4*mh^2*s12*s23 + 3/4*denom(1/2*s12)
      *mt^4*mh^2*s12*s14 + 5/4*denom(1/2*s12)*mt^4*mh^2*s12*s13 + 1/2*denom(1/
      2*s12)*mt^4*mh^2*s12^2 - 1/4*denom(1/2*s12)*mt^4*mh^4*s12 + 1/2*denom(1/
      2*s12)*mt^6*s24^2 + 1/2*denom(1/2*s12)*mt^6*s23*s24 - denom(1/2*s12)*
      mt^6*s23^2 - 5/2*denom(1/2*s12)*mt^6*s14*s23 - 1/2*denom(1/2*s12)*mt^6*
      s14^2 + 5/2*denom(1/2*s12)*mt^6*s13*s24 - 1/2*denom(1/2*s12)*mt^6*s13*
      s14 + denom(1/2*s12)*mt^6*s13^2 + 5/4*denom(1/2*s12)*mt^6*s12*s24 + 3/4*
      denom(1/2*s12)*mt^6*s12*s23 + 3/4*denom(1/2*s12)*mt^6*s12*s14 + 5/4*
      denom(1/2*s12)*mt^6*s12*s13 + denom(1/2*s12)*mt^6*s12^2 - 1/4*denom(1/2*
      s12)*mt^6*mh^2*s24 + 1/4*denom(1/2*s12)*mt^6*mh^2*s23 + 1/4*denom(1/2*
      s12)*mt^6*mh^2*s14 - 1/4*denom(1/2*s12)*mt^6*mh^2*s13 - denom(1/2*s12)*
      mt^6*mh^2*s12 - denom(1/2*s12)*mt^8*s24 + denom(1/2*s12)*mt^8*s23 + 
      denom(1/2*s12)*mt^8*s14 - denom(1/2*s12)*mt^8*s13 + 1/8*denom(1/4*s12^2)
      *s13*s14^2*s23^3 - 1/8*denom(1/4*s12^2)*s13^3*s23*s24^2 - 1/8*denom(1/4*
      s12^2)*s12*s13*s14*s23^2*s24 - 1/8*denom(1/4*s12^2)*s12*s13*s14*s23^3 - 
      1/8*denom(1/4*s12^2)*s12*s13*s14^2*s23^2 - 1/8*denom(1/4*s12^2)*s12*
      s13^2*s23*s24^2 - 1/8*denom(1/4*s12^2)*s12*s13^2*s23^2*s24 - 1/8*denom(1/
      4*s12^2)*s12*s13^2*s14*s23*s24 - 1/8*denom(1/4*s12^2)*s12*s13^2*s14*
      s23^2 - 1/8*denom(1/4*s12^2)*s12*s13^3*s23*s24 - 1/8*denom(1/4*s12^2)*
      s12^2*s13*s14*s23^2 - 1/8*denom(1/4*s12^2)*s12^2*s13^2*s23*s24 + 1/8*
      denom(1/4*s12^2)*mh^2*s12*s13*s14*s23^2 + 1/8*denom(1/4*s12^2)*mh^2*s12*
      s13^2*s23*s24 - 1/8*denom(1/4*s12^2)*mt^2*s14^2*s23^3 - 1/4*denom(1/4*
      s12^2)*mt^2*s13*s14*s23^3 - 3/8*denom(1/4*s12^2)*mt^2*s13*s14^2*s23^2 + 
      3/8*denom(1/4*s12^2)*mt^2*s13^2*s23*s24^2 + 1/8*denom(1/4*s12^2)*mt^2*
      s13^3*s24^2 + 1/4*denom(1/4*s12^2)*mt^2*s13^3*s23*s24 + 1/8*denom(1/4*
      s12^2)*mt^2*s12*s14*s23^2*s24 + 1/8*denom(1/4*s12^2)*mt^2*s12*s14*s23^3
       + 1/8*denom(1/4*s12^2)*mt^2*s12*s14^2*s23^2 + 1/4*denom(1/4*s12^2)*mt^2
      *s12*s13*s23*s24^2 + 3/8*denom(1/4*s12^2)*mt^2*s12*s13*s23^2*s24 + 1/8*
      denom(1/4*s12^2)*mt^2*s12*s13*s23^3 + 1/2*denom(1/4*s12^2)*mt^2*s12*s13*
      s14*s23*s24 + 1/2*denom(1/4*s12^2)*mt^2*s12*s13*s14*s23^2 + 1/4*denom(1/
      4*s12^2)*mt^2*s12*s13*s14^2*s23 + 1/8*denom(1/4*s12^2)*mt^2*s12*s13^2*
      s24^2 + 1/2*denom(1/4*s12^2)*mt^2*s12*s13^2*s23*s24 + 1/4*denom(1/4*
      s12^2)*mt^2*s12*s13^2*s23^2 + 1/8*denom(1/4*s12^2)*mt^2*s12*s13^2*s14*
      s24 + 3/8*denom(1/4*s12^2)*mt^2*s12*s13^2*s14*s23 + 1/8*denom(1/4*s12^2)
      *mt^2*s12*s13^3*s24 + 1/8*denom(1/4*s12^2)*mt^2*s12*s13^3*s23 + 1/8*
      denom(1/4*s12^2)*mt^2*s12^2*s14*s23^2 + 1/4*denom(1/4*s12^2)*mt^2*s12^2*
      s13*s23*s24 + 1/8*denom(1/4*s12^2)*mt^2*s12^2*s13*s23^2 + 1/4*denom(1/4*
      s12^2)*mt^2*s12^2*s13*s14*s23 + 1/8*denom(1/4*s12^2)*mt^2*s12^2*s13^2*
      s24 + 1/8*denom(1/4*s12^2)*mt^2*s12^2*s13^2*s23 - 1/8*denom(1/4*s12^2)*
      mt^2*mh^2*s12*s14*s23^2 - 1/4*denom(1/4*s12^2)*mt^2*mh^2*s12*s13*s23*s24
       - 1/8*denom(1/4*s12^2)*mt^2*mh^2*s12*s13*s23^2 - 1/4*denom(1/4*s12^2)*
      mt^2*mh^2*s12*s13*s14*s23 - 1/8*denom(1/4*s12^2)*mt^2*mh^2*s12*s13^2*s24
       - 1/8*denom(1/4*s12^2)*mt^2*mh^2*s12*s13^2*s23 + 1/4*denom(1/4*s12^2)*
      mt^4*s14*s23^3 + 3/8*denom(1/4*s12^2)*mt^4*s14^2*s23^2 - 3/8*denom(1/4*
      s12^2)*mt^4*s13*s23*s24^2 + 1/8*denom(1/4*s12^2)*mt^4*s13*s23^3 + 3/4*
      denom(1/4*s12^2)*mt^4*s13*s14*s23^2 + 3/8*denom(1/4*s12^2)*mt^4*s13*
      s14^2*s23 - 3/8*denom(1/4*s12^2)*mt^4*s13^2*s24^2 - 3/4*denom(1/4*s12^2)
      *mt^4*s13^2*s23*s24 - 1/4*denom(1/4*s12^2)*mt^4*s13^3*s24 - 1/8*denom(1/
      4*s12^2)*mt^4*s13^3*s23 - 1/8*denom(1/4*s12^2)*mt^4*s12*s23*s24^2 - 1/4*
      denom(1/4*s12^2)*mt^4*s12*s23^2*s24 - 1/8*denom(1/4*s12^2)*mt^4*s12*
      s23^3 - 3/8*denom(1/4*s12^2)*mt^4*s12*s14*s23*s24 - 3/8*denom(1/4*s12^2)
      *mt^4*s12*s14*s23^2 - 1/4*denom(1/4*s12^2)*mt^4*s12*s14^2*s23 - 1/4*
      denom(1/4*s12^2)*mt^4*s12*s13*s24^2 - 7/8*denom(1/4*s12^2)*mt^4*s12*s13*
      s23*s24 - 5/8*denom(1/4*s12^2)*mt^4*s12*s13*s23^2 - 3/8*denom(1/4*s12^2)
      *mt^4*s12*s13*s14*s24 - 7/8*denom(1/4*s12^2)*mt^4*s12*s13*s14*s23 - 1/8*
      denom(1/4*s12^2)*mt^4*s12*s13*s14^2 - 3/8*denom(1/4*s12^2)*mt^4*s12*
      s13^2*s24 - 5/8*denom(1/4*s12^2)*mt^4*s12*s13^2*s23 - 1/4*denom(1/4*
      s12^2)*mt^4*s12*s13^2*s14 - 1/8*denom(1/4*s12^2)*mt^4*s12*s13^3 - 1/8*
      denom(1/4*s12^2)*mt^4*s12^2*s23*s24 - 1/8*denom(1/4*s12^2)*mt^4*s12^2*
      s23^2 - 1/4*denom(1/4*s12^2)*mt^4*s12^2*s14*s23 - 1/4*denom(1/4*s12^2)*
      mt^4*s12^2*s13*s24 - 1/2*denom(1/4*s12^2)*mt^4*s12^2*s13*s23 - 1/8*
      denom(1/4*s12^2)*mt^4*s12^2*s13*s14 - 1/8*denom(1/4*s12^2)*mt^4*s12^2*
      s13^2 + 1/8*denom(1/4*s12^2)*mt^4*mh^2*s12*s23*s24 + 1/8*denom(1/4*s12^2
      )*mt^4*mh^2*s12*s23^2 + 1/4*denom(1/4*s12^2)*mt^4*mh^2*s12*s14*s23 + 1/4
      *denom(1/4*s12^2)*mt^4*mh^2*s12*s13*s24 + 1/2*denom(1/4*s12^2)*mt^4*mh^2
      *s12*s13*s23 + 1/8*denom(1/4*s12^2)*mt^4*mh^2*s12*s13*s14 + 1/8*denom(1/
      4*s12^2)*mt^4*mh^2*s12*s13^2 + 1/8*denom(1/4*s12^2)*mt^6*s23*s24^2 - 1/8
      *denom(1/4*s12^2)*mt^6*s23^3 - 3/4*denom(1/4*s12^2)*mt^6*s14*s23^2 - 3/8
      *denom(1/4*s12^2)*mt^6*s14^2*s23 + 3/8*denom(1/4*s12^2)*mt^6*s13*s24^2
       + 3/4*denom(1/4*s12^2)*mt^6*s13*s23*s24 - 3/8*denom(1/4*s12^2)*mt^6*s13
      *s23^2 - 3/4*denom(1/4*s12^2)*mt^6*s13*s14*s23 - 1/8*denom(1/4*s12^2)*
      mt^6*s13*s14^2 + 3/4*denom(1/4*s12^2)*mt^6*s13^2*s24 + 3/8*denom(1/4*
      s12^2)*mt^6*s13^2*s23 + 1/8*denom(1/4*s12^2)*mt^6*s13^3 + 1/8*denom(1/4*
      s12^2)*mt^6*s12*s24^2 + 1/2*denom(1/4*s12^2)*mt^6*s12*s23*s24 + 3/8*
      denom(1/4*s12^2)*mt^6*s12*s23^2 + 1/4*denom(1/4*s12^2)*mt^6*s12*s14*s24
       + 1/2*denom(1/4*s12^2)*mt^6*s12*s14*s23 + 1/8*denom(1/4*s12^2)*mt^6*s12
      *s14^2 + 1/2*denom(1/4*s12^2)*mt^6*s12*s13*s24 + 3/4*denom(1/4*s12^2)*
      mt^6*s12*s13*s23 + 1/2*denom(1/4*s12^2)*mt^6*s12*s13*s14 + 3/8*denom(1/4
      *s12^2)*mt^6*s12*s13^2 + 1/8*denom(1/4*s12^2)*mt^6*s12^2*s24 + 3/8*
      denom(1/4*s12^2)*mt^6*s12^2*s23 + 1/8*denom(1/4*s12^2)*mt^6*s12^2*s14 + 
      3/8*denom(1/4*s12^2)*mt^6*s12^2*s13 - 1/8*denom(1/4*s12^2)*mt^6*mh^2*s12
      *s24 - 3/8*denom(1/4*s12^2)*mt^6*mh^2*s12*s23 - 1/8*denom(1/4*s12^2)*
      mt^6*mh^2*s12*s14 - 3/8*denom(1/4*s12^2)*mt^6*mh^2*s12*s13 - 1/8*denom(1/
      4*s12^2)*mt^8*s24^2 - 1/4*denom(1/4*s12^2)*mt^8*s23*s24 + 3/8*denom(1/4*
      s12^2)*mt^8*s23^2 + 3/4*denom(1/4*s12^2)*mt^8*s14*s23 + 1/8*denom(1/4*
      s12^2)*mt^8*s14^2 - 3/4*denom(1/4*s12^2)*mt^8*s13*s24 + 1/4*denom(1/4*
      s12^2)*mt^8*s13*s14 - 3/8*denom(1/4*s12^2)*mt^8*s13^2 - 1/4*denom(1/4*
      s12^2)*mt^8*s12*s24 - 1/4*denom(1/4*s12^2)*mt^8*s12*s23 - 1/4*denom(1/4*
      s12^2)*mt^8*s12*s14 - 1/4*denom(1/4*s12^2)*mt^8*s12*s13 - 1/4*denom(1/4*
      s12^2)*mt^8*s12^2 + 1/4*denom(1/4*s12^2)*mt^8*mh^2*s12 + 1/4*denom(1/4*
      s12^2)*mt^10*s24 - 1/4*denom(1/4*s12^2)*mt^10*s23 - 1/4*denom(1/4*s12^2)
      *mt^10*s14 + 1/4*denom(1/4*s12^2)*mt^10*s13;
 
 .sort
id KMatrix(15,2) =  1/4*s14*s23*s24^2 + 1/2*s14*s23^2*s24 + 1/4*s14*s23^3 + 1/
      2*s14^2*s23*s24 + 1/2*s14^2*s23^2 + 1/4*s14^3*s23 - 1/4*s13*s24^3 - 1/2*
      s13*s23*s24^2 - 1/4*s13*s23^2*s24 - 1/2*s13*s14*s24^2 + 1/2*s13*s14*
      s23^2 - 1/4*s13*s14^2*s24 + 1/2*s13*s14^2*s23 - 1/2*s13^2*s24^2 - 1/2*
      s13^2*s23*s24 - 1/2*s13^2*s14*s24 + 1/4*s13^2*s14*s23 - 1/4*s13^3*s24 - 
      1/4*s12*s24^3 - 3/4*s12*s23*s24^2 - 3/4*s12*s23^2*s24 - 1/4*s12*s23^3 - 
      3/4*s12*s14*s24^2 - s12*s14*s23*s24 - 1/4*s12*s14*s23^2 - 3/4*s12*s14^2*
      s24 - 1/4*s12*s14^2*s23 - 1/4*s12*s14^3 - 5/4*s12*s13*s24^2 - 2*s12*s13*
      s23*s24 - 3/4*s12*s13*s23^2 - 2*s12*s13*s14*s24 - s12*s13*s14*s23 - 3/4*
      s12*s13*s14^2 - 5/4*s12*s13^2*s24 - 3/4*s12*s13^2*s23 - 3/4*s12*s13^2*
      s14 - 1/4*s12*s13^3 - 3/4*s12^2*s24^2 - 3/2*s12^2*s23*s24 - 3/4*s12^2*
      s23^2 - 3/2*s12^2*s14*s24 - 5/4*s12^2*s14*s23 - 3/4*s12^2*s14^2 - 7/4*
      s12^2*s13*s24 - 3/2*s12^2*s13*s23 - 3/2*s12^2*s13*s14 - 3/4*s12^2*s13^2
       - 3/4*s12^3*s24 - 3/4*s12^3*s23 - 3/4*s12^3*s14 - 3/4*s12^3*s13 - 1/4*
      s12^4 - 1/2*mh^2*s14*s23*s24 - 1/2*mh^2*s14*s23^2 - 1/2*mh^2*s14^2*s23
       + 1/2*mh^2*s13*s24^2 + 1/2*mh^2*s13*s23*s24 + 1/2*mh^2*s13*s14*s24 - 1/
      2*mh^2*s13*s14*s23 + 1/2*mh^2*s13^2*s24 + 3/4*mh^2*s12*s24^2 + 3/2*mh^2*
      s12*s23*s24 + 3/4*mh^2*s12*s23^2 + 3/2*mh^2*s12*s14*s24 + mh^2*s12*s14*
      s23 + 3/4*mh^2*s12*s14^2 + 2*mh^2*s12*s13*s24 + 3/2*mh^2*s12*s13*s23 + 3/
      2*mh^2*s12*s13*s14 + 3/4*mh^2*s12*s13^2 + 3/2*mh^2*s12^2*s24 + 3/2*mh^2*
      s12^2*s23 + 3/2*mh^2*s12^2*s14 + 3/2*mh^2*s12^2*s13 + 3/4*mh^2*s12^3 + 1/
      4*mh^4*s14*s23 - 1/4*mh^4*s13*s24 - 3/4*mh^4*s12*s24 - 3/4*mh^4*s12*s23
       - 3/4*mh^4*s12*s14 - 3/4*mh^4*s12*s13 - 3/4*mh^4*s12^2 + 1/4*mh^6*s12
       + 1/4*mt^2*s24^3 + 1/4*mt^2*s23*s24^2 - 1/4*mt^2*s23^2*s24 - 1/4*mt^2*
      s23^3 + 1/4*mt^2*s14*s24^2 - 3/2*mt^2*s14*s23*s24 - 7/4*mt^2*s14*s23^2
       - 1/4*mt^2*s14^2*s24 - 7/4*mt^2*s14^2*s23 - 1/4*mt^2*s14^3 + 7/4*mt^2*
      s13*s24^2 + 3/2*mt^2*s13*s23*s24 - 1/4*mt^2*s13*s23^2 + 3/2*mt^2*s13*s14
      *s24 - 3/2*mt^2*s13*s14*s23 - 1/4*mt^2*s13*s14^2 + 7/4*mt^2*s13^2*s24 + 
      1/4*mt^2*s13^2*s23 + 1/4*mt^2*s13^2*s14 + 1/4*mt^2*s13^3 + 3/2*mt^2*s12*
      s24^2 + 2*mt^2*s12*s23*s24 + 1/2*mt^2*s12*s23^2 + 2*mt^2*s12*s14*s24 + 1/
      2*mt^2*s12*s14^2 + 4*mt^2*s12*s13*s24 + 2*mt^2*s12*s13*s23 + 2*mt^2*s12*
      s13*s14 + 3/2*mt^2*s12*s13^2 + 9/4*mt^2*s12^2*s24 + 7/4*mt^2*s12^2*s23
       + 7/4*mt^2*s12^2*s14 + 9/4*mt^2*s12^2*s13 + mt^2*s12^3 - 1/2*mt^2*mh^2*
      s24^2 + 1/2*mt^2*mh^2*s23^2 + 2*mt^2*mh^2*s14*s23 + 1/2*mt^2*mh^2*s14^2
       - 2*mt^2*mh^2*s13*s24 - 1/2*mt^2*mh^2*s13^2 - 5/2*mt^2*mh^2*s12*s24 - 3/
      2*mt^2*mh^2*s12*s23 - 3/2*mt^2*mh^2*s12*s14 - 5/2*mt^2*mh^2*s12*s13 - 2*
      mt^2*mh^2*s12^2 + 1/4*mt^2*mh^4*s24 - 1/4*mt^2*mh^4*s23 - 1/4*mt^2*mh^4*
      s14 + 1/4*mt^2*mh^4*s13 + mt^2*mh^4*s12 - mt^4*s24^2 + mt^4*s23^2 + 3*
      mt^4*s14*s23 + mt^4*s14^2 - 3*mt^4*s13*s24 - mt^4*s13^2 - 2*mt^4*s12*s24
       - 2*mt^4*s12*s13 - mt^4*s12^2 + mt^4*mh^2*s24 - mt^4*mh^2*s23 - mt^4*
      mh^2*s14 + mt^4*mh^2*s13 + mt^4*mh^2*s12 + mt^6*s24 - mt^6*s23 - mt^6*
      s14 + mt^6*s13 + 1/4*denom(1/2*s12)*s14^2*s23^2*s24 + 1/4*denom(1/2*s12)
      *s14^2*s23^3 + 1/4*denom(1/2*s12)*s14^3*s23^2 + 1/4*denom(1/2*s12)*s13*
      s14^2*s23^2 - 1/4*denom(1/2*s12)*s13^2*s24^3 - 1/4*denom(1/2*s12)*s13^2*
      s23*s24^2 - 1/4*denom(1/2*s12)*s13^2*s14*s24^2 - 1/4*denom(1/2*s12)*
      s13^3*s24^2 - 1/4*denom(1/2*s12)*s12*s14*s23*s24^2 - 1/2*denom(1/2*s12)*
      s12*s14*s23^2*s24 - 1/4*denom(1/2*s12)*s12*s14*s23^3 - 1/2*denom(1/2*s12
      )*s12*s14^2*s23*s24 - 1/4*denom(1/2*s12)*s12*s14^2*s23^2 - 1/4*denom(1/2
      *s12)*s12*s14^3*s23 - 1/4*denom(1/2*s12)*s12*s13*s24^3 - 1/2*denom(1/2*
      s12)*s12*s13*s23*s24^2 - 1/4*denom(1/2*s12)*s12*s13*s23^2*s24 - 1/2*
      denom(1/2*s12)*s12*s13*s14*s24^2 - denom(1/2*s12)*s12*s13*s14*s23*s24 - 
      1/2*denom(1/2*s12)*s12*s13*s14*s23^2 - 1/4*denom(1/2*s12)*s12*s13*s14^2*
      s24 - 1/2*denom(1/2*s12)*s12*s13*s14^2*s23 - 3/4*denom(1/2*s12)*s12*
      s13^2*s24^2 - 1/2*denom(1/2*s12)*s12*s13^2*s23*s24 - 1/2*denom(1/2*s12)*
      s12*s13^2*s14*s24 - 1/4*denom(1/2*s12)*s12*s13^2*s14*s23 - 1/4*denom(1/2
      *s12)*s12*s13^3*s24 - 1/2*denom(1/2*s12)*s12^2*s14*s23*s24 - 1/2*denom(1/
      2*s12)*s12^2*s14*s23^2 - 1/2*denom(1/2*s12)*s12^2*s14^2*s23 - 1/2*denom(
      1/2*s12)*s12^2*s13*s24^2 - 1/2*denom(1/2*s12)*s12^2*s13*s23*s24 - 1/2*
      denom(1/2*s12)*s12^2*s13*s14*s24 - 1/2*denom(1/2*s12)*s12^2*s13*s14*s23
       - 1/2*denom(1/2*s12)*s12^2*s13^2*s24 - 1/4*denom(1/2*s12)*s12^3*s14*s23
       - 1/4*denom(1/2*s12)*s12^3*s13*s24 - 1/4*denom(1/2*s12)*mh^2*s14^2*
      s23^2 + 1/4*denom(1/2*s12)*mh^2*s13^2*s24^2 + 1/2*denom(1/2*s12)*mh^2*
      s12*s14*s23*s24 + 1/2*denom(1/2*s12)*mh^2*s12*s14*s23^2 + 1/2*denom(1/2*
      s12)*mh^2*s12*s14^2*s23 + 1/2*denom(1/2*s12)*mh^2*s12*s13*s24^2 + 1/2*
      denom(1/2*s12)*mh^2*s12*s13*s23*s24 + 1/2*denom(1/2*s12)*mh^2*s12*s13*
      s14*s24 + 1/2*denom(1/2*s12)*mh^2*s12*s13*s14*s23 + 1/2*denom(1/2*s12)*
      mh^2*s12*s13^2*s24 + 1/2*denom(1/2*s12)*mh^2*s12^2*s14*s23 + 1/2*denom(1/
      2*s12)*mh^2*s12^2*s13*s24 - 1/4*denom(1/2*s12)*mh^4*s12*s14*s23 - 1/4*
      denom(1/2*s12)*mh^4*s12*s13*s24 - 1/2*denom(1/2*s12)*mt^2*s14*s23^2*s24
       - 1/2*denom(1/2*s12)*mt^2*s14*s23^3 - 1/2*denom(1/2*s12)*mt^2*s14^2*s23
      *s24 - 3/2*denom(1/2*s12)*mt^2*s14^2*s23^2 - 1/2*denom(1/2*s12)*mt^2*
      s14^3*s23 + 1/2*denom(1/2*s12)*mt^2*s13*s24^3 + 1/2*denom(1/2*s12)*mt^2*
      s13*s23*s24^2 + 1/2*denom(1/2*s12)*mt^2*s13*s14*s24^2 - 1/2*denom(1/2*
      s12)*mt^2*s13*s14*s23^2 - 1/2*denom(1/2*s12)*mt^2*s13*s14^2*s23 + 3/2*
      denom(1/2*s12)*mt^2*s13^2*s24^2 + 1/2*denom(1/2*s12)*mt^2*s13^2*s23*s24
       + 1/2*denom(1/2*s12)*mt^2*s13^2*s14*s24 + 1/2*denom(1/2*s12)*mt^2*s13^3
      *s24 + 1/4*denom(1/2*s12)*mt^2*s12*s24^3 + 3/4*denom(1/2*s12)*mt^2*s12*
      s23*s24^2 + 3/4*denom(1/2*s12)*mt^2*s12*s23^2*s24 + 1/4*denom(1/2*s12)*
      mt^2*s12*s23^3 + 3/4*denom(1/2*s12)*mt^2*s12*s14*s24^2 + 2*denom(1/2*s12
      )*mt^2*s12*s14*s23*s24 + 3/4*denom(1/2*s12)*mt^2*s12*s14*s23^2 + 3/4*
      denom(1/2*s12)*mt^2*s12*s14^2*s24 + 3/4*denom(1/2*s12)*mt^2*s12*s14^2*
      s23 + 1/4*denom(1/2*s12)*mt^2*s12*s14^3 + 7/4*denom(1/2*s12)*mt^2*s12*
      s13*s24^2 + 2*denom(1/2*s12)*mt^2*s12*s13*s23*s24 + 3/4*denom(1/2*s12)*
      mt^2*s12*s13*s23^2 + 2*denom(1/2*s12)*mt^2*s12*s13*s14*s24 + 2*denom(1/2
      *s12)*mt^2*s12*s13*s14*s23 + 3/4*denom(1/2*s12)*mt^2*s12*s13*s14^2 + 7/4
      *denom(1/2*s12)*mt^2*s12*s13^2*s24 + 3/4*denom(1/2*s12)*mt^2*s12*s13^2*
      s23 + 3/4*denom(1/2*s12)*mt^2*s12*s13^2*s14 + 1/4*denom(1/2*s12)*mt^2*
      s12*s13^3 + 1/2*denom(1/2*s12)*mt^2*s12^2*s24^2 + denom(1/2*s12)*mt^2*
      s12^2*s23*s24 + 1/2*denom(1/2*s12)*mt^2*s12^2*s23^2 + denom(1/2*s12)*
      mt^2*s12^2*s14*s24 + 3/2*denom(1/2*s12)*mt^2*s12^2*s14*s23 + 1/2*denom(1/
      2*s12)*mt^2*s12^2*s14^2 + 3/2*denom(1/2*s12)*mt^2*s12^2*s13*s24 + denom(
      1/2*s12)*mt^2*s12^2*s13*s23 + denom(1/2*s12)*mt^2*s12^2*s13*s14 + 1/2*
      denom(1/2*s12)*mt^2*s12^2*s13^2 + 1/4*denom(1/2*s12)*mt^2*s12^3*s24 + 1/
      4*denom(1/2*s12)*mt^2*s12^3*s23 + 1/4*denom(1/2*s12)*mt^2*s12^3*s14 + 1/
      4*denom(1/2*s12)*mt^2*s12^3*s13 + 1/2*denom(1/2*s12)*mt^2*mh^2*s14*s23^2
       + 1/2*denom(1/2*s12)*mt^2*mh^2*s14^2*s23 - 1/2*denom(1/2*s12)*mt^2*mh^2
      *s13*s24^2 - 1/2*denom(1/2*s12)*mt^2*mh^2*s13^2*s24 - 1/2*denom(1/2*s12)
      *mt^2*mh^2*s12*s24^2 - denom(1/2*s12)*mt^2*mh^2*s12*s23*s24 - 1/2*denom(
      1/2*s12)*mt^2*mh^2*s12*s23^2 - denom(1/2*s12)*mt^2*mh^2*s12*s14*s24 - 3/
      2*denom(1/2*s12)*mt^2*mh^2*s12*s14*s23 - 1/2*denom(1/2*s12)*mt^2*mh^2*
      s12*s14^2 - 3/2*denom(1/2*s12)*mt^2*mh^2*s12*s13*s24 - denom(1/2*s12)*
      mt^2*mh^2*s12*s13*s23 - denom(1/2*s12)*mt^2*mh^2*s12*s13*s14 - 1/2*
      denom(1/2*s12)*mt^2*mh^2*s12*s13^2 - 1/2*denom(1/2*s12)*mt^2*mh^2*s12^2*
      s24 - 1/2*denom(1/2*s12)*mt^2*mh^2*s12^2*s23 - 1/2*denom(1/2*s12)*mt^2*
      mh^2*s12^2*s14 - 1/2*denom(1/2*s12)*mt^2*mh^2*s12^2*s13 + 1/4*denom(1/2*
      s12)*mt^2*mh^4*s12*s24 + 1/4*denom(1/2*s12)*mt^2*mh^4*s12*s23 + 1/4*
      denom(1/2*s12)*mt^2*mh^4*s12*s14 + 1/4*denom(1/2*s12)*mt^2*mh^4*s12*s13
       - 1/4*denom(1/2*s12)*mt^4*s24^3 - 1/4*denom(1/2*s12)*mt^4*s23*s24^2 + 1/
      4*denom(1/2*s12)*mt^4*s23^2*s24 + 1/4*denom(1/2*s12)*mt^4*s23^3 - 1/4*
      denom(1/2*s12)*mt^4*s14*s24^2 + denom(1/2*s12)*mt^4*s14*s23*s24 + 9/4*
      denom(1/2*s12)*mt^4*s14*s23^2 + 1/4*denom(1/2*s12)*mt^4*s14^2*s24 + 9/4*
      denom(1/2*s12)*mt^4*s14^2*s23 + 1/4*denom(1/2*s12)*mt^4*s14^3 - 9/4*
      denom(1/2*s12)*mt^4*s13*s24^2 - denom(1/2*s12)*mt^4*s13*s23*s24 + 1/4*
      denom(1/2*s12)*mt^4*s13*s23^2 - denom(1/2*s12)*mt^4*s13*s14*s24 + denom(
      1/2*s12)*mt^4*s13*s14*s23 + 1/4*denom(1/2*s12)*mt^4*s13*s14^2 - 9/4*
      denom(1/2*s12)*mt^4*s13^2*s24 - 1/4*denom(1/2*s12)*mt^4*s13^2*s23 - 1/4*
      denom(1/2*s12)*mt^4*s13^2*s14 - 1/4*denom(1/2*s12)*mt^4*s13^3 - 5/4*
      denom(1/2*s12)*mt^4*s12*s24^2 - 2*denom(1/2*s12)*mt^4*s12*s23*s24 - 3/4*
      denom(1/2*s12)*mt^4*s12*s23^2 - 2*denom(1/2*s12)*mt^4*s12*s14*s24 - 
      denom(1/2*s12)*mt^4*s12*s14*s23 - 3/4*denom(1/2*s12)*mt^4*s12*s14^2 - 3*
      denom(1/2*s12)*mt^4*s12*s13*s24 - 2*denom(1/2*s12)*mt^4*s12*s13*s23 - 2*
      denom(1/2*s12)*mt^4*s12*s13*s14 - 5/4*denom(1/2*s12)*mt^4*s12*s13^2 - 3/
      2*denom(1/2*s12)*mt^4*s12^2*s24 - 3/2*denom(1/2*s12)*mt^4*s12^2*s23 - 3/
      2*denom(1/2*s12)*mt^4*s12^2*s14 - 3/2*denom(1/2*s12)*mt^4*s12^2*s13 - 1/
      2*denom(1/2*s12)*mt^4*s12^3 + 1/4*denom(1/2*s12)*mt^4*mh^2*s24^2 - 1/4*
      denom(1/2*s12)*mt^4*mh^2*s23^2 - denom(1/2*s12)*mt^4*mh^2*s14*s23 - 1/4*
      denom(1/2*s12)*mt^4*mh^2*s14^2 + denom(1/2*s12)*mt^4*mh^2*s13*s24 + 1/4*
      denom(1/2*s12)*mt^4*mh^2*s13^2 + 3/2*denom(1/2*s12)*mt^4*mh^2*s12*s24 + 
      3/2*denom(1/2*s12)*mt^4*mh^2*s12*s23 + 3/2*denom(1/2*s12)*mt^4*mh^2*s12*
      s14 + 3/2*denom(1/2*s12)*mt^4*mh^2*s12*s13 + denom(1/2*s12)*mt^4*mh^2*
      s12^2 - 1/2*denom(1/2*s12)*mt^4*mh^4*s12 + denom(1/2*s12)*mt^6*s24^2 - 
      denom(1/2*s12)*mt^6*s23^2 - 3*denom(1/2*s12)*mt^6*s14*s23 - denom(1/2*
      s12)*mt^6*s14^2 + 3*denom(1/2*s12)*mt^6*s13*s24 + denom(1/2*s12)*mt^6*
      s13^2 + 3/2*denom(1/2*s12)*mt^6*s12*s24 + 1/2*denom(1/2*s12)*mt^6*s12*
      s23 + 1/2*denom(1/2*s12)*mt^6*s12*s14 + 3/2*denom(1/2*s12)*mt^6*s12*s13
       + denom(1/2*s12)*mt^6*s12^2 - 1/2*denom(1/2*s12)*mt^6*mh^2*s24 + 1/2*
      denom(1/2*s12)*mt^6*mh^2*s23 + 1/2*denom(1/2*s12)*mt^6*mh^2*s14 - 1/2*
      denom(1/2*s12)*mt^6*mh^2*s13 - denom(1/2*s12)*mt^6*mh^2*s12 - denom(1/2*
      s12)*mt^8*s24 + denom(1/2*s12)*mt^8*s23 + denom(1/2*s12)*mt^8*s14 - 
      denom(1/2*s12)*mt^8*s13 + 1/16*denom(1/4*s12^2)*s14^3*s23^3 + 1/16*
      denom(1/4*s12^2)*s13*s14^2*s23^2*s24 - 1/16*denom(1/4*s12^2)*s13^2*s14*
      s23*s24^2 - 1/16*denom(1/4*s12^2)*s13^3*s24^3 - 1/16*denom(1/4*s12^2)*
      s12*s14^2*s23^2*s24 - 1/16*denom(1/4*s12^2)*s12*s14^2*s23^3 - 1/16*
      denom(1/4*s12^2)*s12*s14^3*s23^2 - 1/8*denom(1/4*s12^2)*s12*s13*s14*s23*
      s24^2 - 1/8*denom(1/4*s12^2)*s12*s13*s14*s23^2*s24 - 1/8*denom(1/4*s12^2
      )*s12*s13*s14^2*s23*s24 - 1/16*denom(1/4*s12^2)*s12*s13*s14^2*s23^2 - 1/
      16*denom(1/4*s12^2)*s12*s13^2*s24^3 - 1/16*denom(1/4*s12^2)*s12*s13^2*
      s23*s24^2 - 1/16*denom(1/4*s12^2)*s12*s13^2*s14*s24^2 - 1/8*denom(1/4*
      s12^2)*s12*s13^2*s14*s23*s24 - 1/16*denom(1/4*s12^2)*s12*s13^3*s24^2 - 1/
      16*denom(1/4*s12^2)*s12^2*s14^2*s23^2 - 1/8*denom(1/4*s12^2)*s12^2*s13*
      s14*s23*s24 - 1/16*denom(1/4*s12^2)*s12^2*s13^2*s24^2 + 1/16*denom(1/4*
      s12^2)*mh^2*s12*s14^2*s23^2 + 1/8*denom(1/4*s12^2)*mh^2*s12*s13*s14*s23*
      s24 + 1/16*denom(1/4*s12^2)*mh^2*s12*s13^2*s24^2 - 1/16*denom(1/4*s12^2)
      *mt^2*s14^2*s23^2*s24 - 3/16*denom(1/4*s12^2)*mt^2*s14^2*s23^3 - 3/16*
      denom(1/4*s12^2)*mt^2*s14^3*s23^2 + 1/8*denom(1/4*s12^2)*mt^2*s13*s14*
      s23*s24^2 - 1/8*denom(1/4*s12^2)*mt^2*s13*s14*s23^2*s24 - 1/8*denom(1/4*
      s12^2)*mt^2*s13*s14^2*s23*s24 - 1/16*denom(1/4*s12^2)*mt^2*s13*s14^2*
      s23^2 + 3/16*denom(1/4*s12^2)*mt^2*s13^2*s24^3 + 1/16*denom(1/4*s12^2)*
      mt^2*s13^2*s23*s24^2 + 1/16*denom(1/4*s12^2)*mt^2*s13^2*s14*s24^2 + 1/8*
      denom(1/4*s12^2)*mt^2*s13^2*s14*s23*s24 + 3/16*denom(1/4*s12^2)*mt^2*
      s13^3*s24^2 + 1/8*denom(1/4*s12^2)*mt^2*s12*s14*s23*s24^2 + 1/4*denom(1/
      4*s12^2)*mt^2*s12*s14*s23^2*s24 + 1/8*denom(1/4*s12^2)*mt^2*s12*s14*
      s23^3 + 1/4*denom(1/4*s12^2)*mt^2*s12*s14^2*s23*s24 + 1/4*denom(1/4*
      s12^2)*mt^2*s12*s14^2*s23^2 + 1/8*denom(1/4*s12^2)*mt^2*s12*s14^3*s23 + 
      1/8*denom(1/4*s12^2)*mt^2*s12*s13*s24^3 + 1/4*denom(1/4*s12^2)*mt^2*s12*
      s13*s23*s24^2 + 1/8*denom(1/4*s12^2)*mt^2*s12*s13*s23^2*s24 + 1/4*denom(
      1/4*s12^2)*mt^2*s12*s13*s14*s24^2 + 1/2*denom(1/4*s12^2)*mt^2*s12*s13*
      s14*s23*s24 + 1/4*denom(1/4*s12^2)*mt^2*s12*s13*s14*s23^2 + 1/8*denom(1/
      4*s12^2)*mt^2*s12*s13*s14^2*s24 + 1/4*denom(1/4*s12^2)*mt^2*s12*s13*
      s14^2*s23 + 1/4*denom(1/4*s12^2)*mt^2*s12*s13^2*s24^2 + 1/4*denom(1/4*
      s12^2)*mt^2*s12*s13^2*s23*s24 + 1/4*denom(1/4*s12^2)*mt^2*s12*s13^2*s14*
      s24 + 1/8*denom(1/4*s12^2)*mt^2*s12*s13^2*s14*s23 + 1/8*denom(1/4*s12^2)
      *mt^2*s12*s13^3*s24 + 1/8*denom(1/4*s12^2)*mt^2*s12^2*s14*s23*s24 + 1/8*
      denom(1/4*s12^2)*mt^2*s12^2*s14*s23^2 + 1/8*denom(1/4*s12^2)*mt^2*s12^2*
      s14^2*s23 + 1/8*denom(1/4*s12^2)*mt^2*s12^2*s13*s24^2 + 1/8*denom(1/4*
      s12^2)*mt^2*s12^2*s13*s23*s24 + 1/8*denom(1/4*s12^2)*mt^2*s12^2*s13*s14*
      s24 + 1/8*denom(1/4*s12^2)*mt^2*s12^2*s13*s14*s23 + 1/8*denom(1/4*s12^2)
      *mt^2*s12^2*s13^2*s24 - 1/8*denom(1/4*s12^2)*mt^2*mh^2*s12*s14*s23*s24
       - 1/8*denom(1/4*s12^2)*mt^2*mh^2*s12*s14*s23^2 - 1/8*denom(1/4*s12^2)*
      mt^2*mh^2*s12*s14^2*s23 - 1/8*denom(1/4*s12^2)*mt^2*mh^2*s12*s13*s24^2
       - 1/8*denom(1/4*s12^2)*mt^2*mh^2*s12*s13*s23*s24 - 1/8*denom(1/4*s12^2)
      *mt^2*mh^2*s12*s13*s14*s24 - 1/8*denom(1/4*s12^2)*mt^2*mh^2*s12*s13*s14*
      s23 - 1/8*denom(1/4*s12^2)*mt^2*mh^2*s12*s13^2*s24 - 1/16*denom(1/4*
      s12^2)*mt^4*s14*s23*s24^2 + 1/8*denom(1/4*s12^2)*mt^4*s14*s23^2*s24 + 3/
      16*denom(1/4*s12^2)*mt^4*s14*s23^3 + 1/8*denom(1/4*s12^2)*mt^4*s14^2*s23
      *s24 + 5/8*denom(1/4*s12^2)*mt^4*s14^2*s23^2 + 3/16*denom(1/4*s12^2)*
      mt^4*s14^3*s23 - 3/16*denom(1/4*s12^2)*mt^4*s13*s24^3 - 1/8*denom(1/4*
      s12^2)*mt^4*s13*s23*s24^2 + 1/16*denom(1/4*s12^2)*mt^4*s13*s23^2*s24 - 1/
      8*denom(1/4*s12^2)*mt^4*s13*s14*s24^2 + 1/8*denom(1/4*s12^2)*mt^4*s13*
      s14*s23^2 + 1/16*denom(1/4*s12^2)*mt^4*s13*s14^2*s24 + 1/8*denom(1/4*
      s12^2)*mt^4*s13*s14^2*s23 - 5/8*denom(1/4*s12^2)*mt^4*s13^2*s24^2 - 1/8*
      denom(1/4*s12^2)*mt^4*s13^2*s23*s24 - 1/8*denom(1/4*s12^2)*mt^4*s13^2*
      s14*s24 - 1/16*denom(1/4*s12^2)*mt^4*s13^2*s14*s23 - 3/16*denom(1/4*
      s12^2)*mt^4*s13^3*s24 - 1/16*denom(1/4*s12^2)*mt^4*s12*s24^3 - 3/16*
      denom(1/4*s12^2)*mt^4*s12*s23*s24^2 - 3/16*denom(1/4*s12^2)*mt^4*s12*
      s23^2*s24 - 1/16*denom(1/4*s12^2)*mt^4*s12*s23^3 - 3/16*denom(1/4*s12^2)
      *mt^4*s12*s14*s24^2 - 5/8*denom(1/4*s12^2)*mt^4*s12*s14*s23*s24 - 7/16*
      denom(1/4*s12^2)*mt^4*s12*s14*s23^2 - 3/16*denom(1/4*s12^2)*mt^4*s12*
      s14^2*s24 - 7/16*denom(1/4*s12^2)*mt^4*s12*s14^2*s23 - 1/16*denom(1/4*
      s12^2)*mt^4*s12*s14^3 - 7/16*denom(1/4*s12^2)*mt^4*s12*s13*s24^2 - 5/8*
      denom(1/4*s12^2)*mt^4*s12*s13*s23*s24 - 3/16*denom(1/4*s12^2)*mt^4*s12*
      s13*s23^2 - 5/8*denom(1/4*s12^2)*mt^4*s12*s13*s14*s24 - 5/8*denom(1/4*
      s12^2)*mt^4*s12*s13*s14*s23 - 3/16*denom(1/4*s12^2)*mt^4*s12*s13*s14^2
       - 7/16*denom(1/4*s12^2)*mt^4*s12*s13^2*s24 - 3/16*denom(1/4*s12^2)*mt^4
      *s12*s13^2*s23 - 3/16*denom(1/4*s12^2)*mt^4*s12*s13^2*s14 - 1/16*denom(1/
      4*s12^2)*mt^4*s12*s13^3 - 1/16*denom(1/4*s12^2)*mt^4*s12^2*s24^2 - 1/8*
      denom(1/4*s12^2)*mt^4*s12^2*s23*s24 - 1/16*denom(1/4*s12^2)*mt^4*s12^2*
      s23^2 - 1/8*denom(1/4*s12^2)*mt^4*s12^2*s14*s24 - 3/8*denom(1/4*s12^2)*
      mt^4*s12^2*s14*s23 - 1/16*denom(1/4*s12^2)*mt^4*s12^2*s14^2 - 3/8*denom(
      1/4*s12^2)*mt^4*s12^2*s13*s24 - 1/8*denom(1/4*s12^2)*mt^4*s12^2*s13*s23
       - 1/8*denom(1/4*s12^2)*mt^4*s12^2*s13*s14 - 1/16*denom(1/4*s12^2)*mt^4*
      s12^2*s13^2 + 1/16*denom(1/4*s12^2)*mt^4*mh^2*s12*s24^2 + 1/8*denom(1/4*
      s12^2)*mt^4*mh^2*s12*s23*s24 + 1/16*denom(1/4*s12^2)*mt^4*mh^2*s12*s23^2
       + 1/8*denom(1/4*s12^2)*mt^4*mh^2*s12*s14*s24 + 3/8*denom(1/4*s12^2)*
      mt^4*mh^2*s12*s14*s23 + 1/16*denom(1/4*s12^2)*mt^4*mh^2*s12*s14^2 + 3/8*
      denom(1/4*s12^2)*mt^4*mh^2*s12*s13*s24 + 1/8*denom(1/4*s12^2)*mt^4*mh^2*
      s12*s13*s23 + 1/8*denom(1/4*s12^2)*mt^4*mh^2*s12*s13*s14 + 1/16*denom(1/
      4*s12^2)*mt^4*mh^2*s12*s13^2 + 1/16*denom(1/4*s12^2)*mt^6*s24^3 + 1/16*
      denom(1/4*s12^2)*mt^6*s23*s24^2 - 1/16*denom(1/4*s12^2)*mt^6*s23^2*s24
       - 1/16*denom(1/4*s12^2)*mt^6*s23^3 + 1/16*denom(1/4*s12^2)*mt^6*s14*
      s24^2 - 1/8*denom(1/4*s12^2)*mt^6*s14*s23*s24 - 11/16*denom(1/4*s12^2)*
      mt^6*s14*s23^2 - 1/16*denom(1/4*s12^2)*mt^6*s14^2*s24 - 11/16*denom(1/4*
      s12^2)*mt^6*s14^2*s23 - 1/16*denom(1/4*s12^2)*mt^6*s14^3 + 11/16*denom(1/
      4*s12^2)*mt^6*s13*s24^2 + 1/8*denom(1/4*s12^2)*mt^6*s13*s23*s24 - 1/16*
      denom(1/4*s12^2)*mt^6*s13*s23^2 + 1/8*denom(1/4*s12^2)*mt^6*s13*s14*s24
       - 1/8*denom(1/4*s12^2)*mt^6*s13*s14*s23 - 1/16*denom(1/4*s12^2)*mt^6*
      s13*s14^2 + 11/16*denom(1/4*s12^2)*mt^6*s13^2*s24 + 1/16*denom(1/4*s12^2
      )*mt^6*s13^2*s23 + 1/16*denom(1/4*s12^2)*mt^6*s13^2*s14 + 1/16*denom(1/4
      *s12^2)*mt^6*s13^3 + 1/4*denom(1/4*s12^2)*mt^6*s12*s24^2 + 1/2*denom(1/4
      *s12^2)*mt^6*s12*s23*s24 + 1/4*denom(1/4*s12^2)*mt^6*s12*s23^2 + 1/2*
      denom(1/4*s12^2)*mt^6*s12*s14*s24 + 1/2*denom(1/4*s12^2)*mt^6*s12*s14*
      s23 + 1/4*denom(1/4*s12^2)*mt^6*s12*s14^2 + 1/2*denom(1/4*s12^2)*mt^6*
      s12*s13*s24 + 1/2*denom(1/4*s12^2)*mt^6*s12*s13*s23 + 1/2*denom(1/4*
      s12^2)*mt^6*s12*s13*s14 + 1/4*denom(1/4*s12^2)*mt^6*s12*s13^2 + 1/4*
      denom(1/4*s12^2)*mt^6*s12^2*s24 + 1/4*denom(1/4*s12^2)*mt^6*s12^2*s23 + 
      1/4*denom(1/4*s12^2)*mt^6*s12^2*s14 + 1/4*denom(1/4*s12^2)*mt^6*s12^2*
      s13 - 1/4*denom(1/4*s12^2)*mt^6*mh^2*s12*s24 - 1/4*denom(1/4*s12^2)*mt^6
      *mh^2*s12*s23 - 1/4*denom(1/4*s12^2)*mt^6*mh^2*s12*s14 - 1/4*denom(1/4*
      s12^2)*mt^6*mh^2*s12*s13 - 1/4*denom(1/4*s12^2)*mt^8*s24^2 + 1/4*denom(1/
      4*s12^2)*mt^8*s23^2 + 3/4*denom(1/4*s12^2)*mt^8*s14*s23 + 1/4*denom(1/4*
      s12^2)*mt^8*s14^2 - 3/4*denom(1/4*s12^2)*mt^8*s13*s24 - 1/4*denom(1/4*
      s12^2)*mt^8*s13^2 - 1/4*denom(1/4*s12^2)*mt^8*s12*s24 - 1/4*denom(1/4*
      s12^2)*mt^8*s12*s23 - 1/4*denom(1/4*s12^2)*mt^8*s12*s14 - 1/4*denom(1/4*
      s12^2)*mt^8*s12*s13 - 1/4*denom(1/4*s12^2)*mt^8*s12^2 + 1/4*denom(1/4*
      s12^2)*mt^8*mh^2*s12 + 1/4*denom(1/4*s12^2)*mt^10*s24 - 1/4*denom(1/4*
      s12^2)*mt^10*s23 - 1/4*denom(1/4*s12^2)*mt^10*s14 + 1/4*denom(1/4*s12^2)
      *mt^10*s13;
 
 .sort
id KMatrix(15,3) =  mt^4*s14*s23 - mt^4*s13*s24 - mt^4*s12*s24 - mt^4*s12*s23
       - mt^4*s12*s14 - mt^4*s12*s13 - mt^4*s12^2 + mt^4*mh^2*s12 + mt^6*s24
       - mt^6*s23 - mt^6*s14 + mt^6*s13 - 1/2*denom(1/2*s12)*mt^2*s14^2*s23*
      s24 + 1/2*denom(1/2*s12)*mt^2*s13*s14*s24^2 - 1/2*denom(1/2*s12)*mt^2*
      s13*s14*s23^2 + 1/2*denom(1/2*s12)*mt^2*s13^2*s23*s24 + 1/2*denom(1/2*
      s12)*mt^2*s12*s14*s24^2 + 1/2*denom(1/2*s12)*mt^2*s12*s14*s23*s24 + 1/2*
      denom(1/2*s12)*mt^2*s12*s14^2*s24 + 1/2*denom(1/2*s12)*mt^2*s12*s13*s23*
      s24 + 1/2*denom(1/2*s12)*mt^2*s12*s13*s23^2 + 1/2*denom(1/2*s12)*mt^2*
      s12*s13*s14*s24 + 1/2*denom(1/2*s12)*mt^2*s12*s13*s14*s23 + 1/2*denom(1/
      2*s12)*mt^2*s12*s13^2*s23 + 1/2*denom(1/2*s12)*mt^2*s12^2*s14*s24 + 1/2*
      denom(1/2*s12)*mt^2*s12^2*s13*s23 - 1/2*denom(1/2*s12)*mt^2*mh^2*s12*s14
      *s24 - 1/2*denom(1/2*s12)*mt^2*mh^2*s12*s13*s23 - 1/2*denom(1/2*s12)*
      mt^4*s14*s24^2 + denom(1/2*s12)*mt^4*s14*s23*s24 + 1/2*denom(1/2*s12)*
      mt^4*s14*s23^2 + 1/2*denom(1/2*s12)*mt^4*s14^2*s24 + 1/2*denom(1/2*s12)*
      mt^4*s14^2*s23 - 1/2*denom(1/2*s12)*mt^4*s13*s24^2 - denom(1/2*s12)*mt^4
      *s13*s23*s24 + 1/2*denom(1/2*s12)*mt^4*s13*s23^2 - denom(1/2*s12)*mt^4*
      s13*s14*s24 + denom(1/2*s12)*mt^4*s13*s14*s23 - 1/2*denom(1/2*s12)*mt^4*
      s13^2*s24 - 1/2*denom(1/2*s12)*mt^4*s13^2*s23 - 1/2*denom(1/2*s12)*mt^4*
      s12*s24^2 - denom(1/2*s12)*mt^4*s12*s23*s24 - 1/2*denom(1/2*s12)*mt^4*
      s12*s23^2 - denom(1/2*s12)*mt^4*s12*s14*s24 - denom(1/2*s12)*mt^4*s12*
      s14*s23 - 1/2*denom(1/2*s12)*mt^4*s12*s14^2 - denom(1/2*s12)*mt^4*s12*
      s13*s24 - denom(1/2*s12)*mt^4*s12*s13*s23 - denom(1/2*s12)*mt^4*s12*s13*
      s14 - 1/2*denom(1/2*s12)*mt^4*s12*s13^2 - 1/2*denom(1/2*s12)*mt^4*s12^2*
      s24 - 1/2*denom(1/2*s12)*mt^4*s12^2*s23 - 1/2*denom(1/2*s12)*mt^4*s12^2*
      s14 - 1/2*denom(1/2*s12)*mt^4*s12^2*s13 + 1/2*denom(1/2*s12)*mt^4*mh^2*
      s12*s24 + 1/2*denom(1/2*s12)*mt^4*mh^2*s12*s23 + 1/2*denom(1/2*s12)*mt^4
      *mh^2*s12*s14 + 1/2*denom(1/2*s12)*mt^4*mh^2*s12*s13 + 1/2*denom(1/2*s12
      )*mt^6*s24^2 - 1/2*denom(1/2*s12)*mt^6*s23^2 - 2*denom(1/2*s12)*mt^6*s14
      *s23 - 1/2*denom(1/2*s12)*mt^6*s14^2 + 2*denom(1/2*s12)*mt^6*s13*s24 + 1/
      2*denom(1/2*s12)*mt^6*s13^2 + denom(1/2*s12)*mt^6*s12*s24 + denom(1/2*
      s12)*mt^6*s12*s23 + denom(1/2*s12)*mt^6*s12*s14 + denom(1/2*s12)*mt^6*
      s12*s13 + denom(1/2*s12)*mt^6*s12^2 - denom(1/2*s12)*mt^6*mh^2*s12 - 
      denom(1/2*s12)*mt^8*s24 + denom(1/2*s12)*mt^8*s23 + denom(1/2*s12)*mt^8*
      s14 - denom(1/2*s12)*mt^8*s13 + 1/4*denom(1/4*s12^2)*s13*s14^2*s23^2*s24
       - 1/4*denom(1/4*s12^2)*s13^2*s14*s23*s24^2 - 1/4*denom(1/4*s12^2)*s12*
      s13*s14*s23*s24^2 - 1/4*denom(1/4*s12^2)*s12*s13*s14*s23^2*s24 - 1/4*
      denom(1/4*s12^2)*s12*s13*s14^2*s23*s24 - 1/4*denom(1/4*s12^2)*s12*s13^2*
      s14*s23*s24 - 1/4*denom(1/4*s12^2)*s12^2*s13*s14*s23*s24 + 1/4*denom(1/4
      *s12^2)*mh^2*s12*s13*s14*s23*s24 - 1/4*denom(1/4*s12^2)*mt^2*s14^2*s23^2
      *s24 + 1/2*denom(1/4*s12^2)*mt^2*s13*s14*s23*s24^2 - 1/2*denom(1/4*s12^2
      )*mt^2*s13*s14*s23^2*s24 - 1/2*denom(1/4*s12^2)*mt^2*s13*s14^2*s23*s24
       - 1/4*denom(1/4*s12^2)*mt^2*s13*s14^2*s23^2 + 1/4*denom(1/4*s12^2)*mt^2
      *s13^2*s23*s24^2 + 1/4*denom(1/4*s12^2)*mt^2*s13^2*s14*s24^2 + 1/2*
      denom(1/4*s12^2)*mt^2*s13^2*s14*s23*s24 + 1/4*denom(1/4*s12^2)*mt^2*s12*
      s14*s23*s24^2 + 1/4*denom(1/4*s12^2)*mt^2*s12*s14*s23^2*s24 + 1/4*denom(
      1/4*s12^2)*mt^2*s12*s14^2*s23*s24 + 1/4*denom(1/4*s12^2)*mt^2*s12*s13*
      s23*s24^2 + 1/4*denom(1/4*s12^2)*mt^2*s12*s13*s23^2*s24 + 1/4*denom(1/4*
      s12^2)*mt^2*s12*s13*s14*s24^2 + denom(1/4*s12^2)*mt^2*s12*s13*s14*s23*
      s24 + 1/4*denom(1/4*s12^2)*mt^2*s12*s13*s14*s23^2 + 1/4*denom(1/4*s12^2)
      *mt^2*s12*s13*s14^2*s24 + 1/4*denom(1/4*s12^2)*mt^2*s12*s13*s14^2*s23 + 
      1/4*denom(1/4*s12^2)*mt^2*s12*s13^2*s23*s24 + 1/4*denom(1/4*s12^2)*mt^2*
      s12*s13^2*s14*s24 + 1/4*denom(1/4*s12^2)*mt^2*s12*s13^2*s14*s23 + 1/4*
      denom(1/4*s12^2)*mt^2*s12^2*s14*s23*s24 + 1/4*denom(1/4*s12^2)*mt^2*
      s12^2*s13*s23*s24 + 1/4*denom(1/4*s12^2)*mt^2*s12^2*s13*s14*s24 + 1/4*
      denom(1/4*s12^2)*mt^2*s12^2*s13*s14*s23 - 1/4*denom(1/4*s12^2)*mt^2*mh^2
      *s12*s14*s23*s24 - 1/4*denom(1/4*s12^2)*mt^2*mh^2*s12*s13*s23*s24 - 1/4*
      denom(1/4*s12^2)*mt^2*mh^2*s12*s13*s14*s24 - 1/4*denom(1/4*s12^2)*mt^2*
      mh^2*s12*s13*s14*s23 - 1/4*denom(1/4*s12^2)*mt^4*s14*s23*s24^2 + 1/2*
      denom(1/4*s12^2)*mt^4*s14*s23^2*s24 + 1/2*denom(1/4*s12^2)*mt^4*s14^2*
      s23*s24 + 1/4*denom(1/4*s12^2)*mt^4*s14^2*s23^2 - 1/2*denom(1/4*s12^2)*
      mt^4*s13*s23*s24^2 + 1/4*denom(1/4*s12^2)*mt^4*s13*s23^2*s24 - 1/2*
      denom(1/4*s12^2)*mt^4*s13*s14*s24^2 + 1/2*denom(1/4*s12^2)*mt^4*s13*s14*
      s23^2 + 1/4*denom(1/4*s12^2)*mt^4*s13*s14^2*s24 + 1/2*denom(1/4*s12^2)*
      mt^4*s13*s14^2*s23 - 1/4*denom(1/4*s12^2)*mt^4*s13^2*s24^2 - 1/2*denom(1/
      4*s12^2)*mt^4*s13^2*s23*s24 - 1/2*denom(1/4*s12^2)*mt^4*s13^2*s14*s24 - 
      1/4*denom(1/4*s12^2)*mt^4*s13^2*s14*s23 - 1/4*denom(1/4*s12^2)*mt^4*s12*
      s23*s24^2 - 1/4*denom(1/4*s12^2)*mt^4*s12*s23^2*s24 - 1/4*denom(1/4*
      s12^2)*mt^4*s12*s14*s24^2 - 3/4*denom(1/4*s12^2)*mt^4*s12*s14*s23*s24 - 
      1/4*denom(1/4*s12^2)*mt^4*s12*s14*s23^2 - 1/4*denom(1/4*s12^2)*mt^4*s12*
      s14^2*s24 - 1/4*denom(1/4*s12^2)*mt^4*s12*s14^2*s23 - 1/4*denom(1/4*
      s12^2)*mt^4*s12*s13*s24^2 - 3/4*denom(1/4*s12^2)*mt^4*s12*s13*s23*s24 - 
      1/4*denom(1/4*s12^2)*mt^4*s12*s13*s23^2 - 3/4*denom(1/4*s12^2)*mt^4*s12*
      s13*s14*s24 - 3/4*denom(1/4*s12^2)*mt^4*s12*s13*s14*s23 - 1/4*denom(1/4*
      s12^2)*mt^4*s12*s13*s14^2 - 1/4*denom(1/4*s12^2)*mt^4*s12*s13^2*s24 - 1/
      4*denom(1/4*s12^2)*mt^4*s12*s13^2*s23 - 1/4*denom(1/4*s12^2)*mt^4*s12*
      s13^2*s14 - 1/4*denom(1/4*s12^2)*mt^4*s12^2*s23*s24 - 1/4*denom(1/4*
      s12^2)*mt^4*s12^2*s14*s24 - 1/4*denom(1/4*s12^2)*mt^4*s12^2*s14*s23 - 1/
      4*denom(1/4*s12^2)*mt^4*s12^2*s13*s24 - 1/4*denom(1/4*s12^2)*mt^4*s12^2*
      s13*s23 - 1/4*denom(1/4*s12^2)*mt^4*s12^2*s13*s14 + 1/4*denom(1/4*s12^2)
      *mt^4*mh^2*s12*s23*s24 + 1/4*denom(1/4*s12^2)*mt^4*mh^2*s12*s14*s24 + 1/
      4*denom(1/4*s12^2)*mt^4*mh^2*s12*s14*s23 + 1/4*denom(1/4*s12^2)*mt^4*
      mh^2*s12*s13*s24 + 1/4*denom(1/4*s12^2)*mt^4*mh^2*s12*s13*s23 + 1/4*
      denom(1/4*s12^2)*mt^4*mh^2*s12*s13*s14 + 1/4*denom(1/4*s12^2)*mt^6*s23*
      s24^2 - 1/4*denom(1/4*s12^2)*mt^6*s23^2*s24 + 1/4*denom(1/4*s12^2)*mt^6*
      s14*s24^2 - 1/2*denom(1/4*s12^2)*mt^6*s14*s23*s24 - 1/2*denom(1/4*s12^2)
      *mt^6*s14*s23^2 - 1/4*denom(1/4*s12^2)*mt^6*s14^2*s24 - 1/2*denom(1/4*
      s12^2)*mt^6*s14^2*s23 + 1/2*denom(1/4*s12^2)*mt^6*s13*s24^2 + 1/2*denom(
      1/4*s12^2)*mt^6*s13*s23*s24 - 1/4*denom(1/4*s12^2)*mt^6*s13*s23^2 + 1/2*
      denom(1/4*s12^2)*mt^6*s13*s14*s24 - 1/2*denom(1/4*s12^2)*mt^6*s13*s14*
      s23 - 1/4*denom(1/4*s12^2)*mt^6*s13*s14^2 + 1/2*denom(1/4*s12^2)*mt^6*
      s13^2*s24 + 1/4*denom(1/4*s12^2)*mt^6*s13^2*s23 + 1/4*denom(1/4*s12^2)*
      mt^6*s13^2*s14 + 1/4*denom(1/4*s12^2)*mt^6*s12*s24^2 + 1/2*denom(1/4*
      s12^2)*mt^6*s12*s23*s24 + 1/4*denom(1/4*s12^2)*mt^6*s12*s23^2 + 1/2*
      denom(1/4*s12^2)*mt^6*s12*s14*s24 + 1/2*denom(1/4*s12^2)*mt^6*s12*s14*
      s23 + 1/4*denom(1/4*s12^2)*mt^6*s12*s14^2 + 1/2*denom(1/4*s12^2)*mt^6*
      s12*s13*s24 + 1/2*denom(1/4*s12^2)*mt^6*s12*s13*s23 + 1/2*denom(1/4*
      s12^2)*mt^6*s12*s13*s14 + 1/4*denom(1/4*s12^2)*mt^6*s12*s13^2 + 1/4*
      denom(1/4*s12^2)*mt^6*s12^2*s24 + 1/4*denom(1/4*s12^2)*mt^6*s12^2*s23 + 
      1/4*denom(1/4*s12^2)*mt^6*s12^2*s14 + 1/4*denom(1/4*s12^2)*mt^6*s12^2*
      s13 - 1/4*denom(1/4*s12^2)*mt^6*mh^2*s12*s24 - 1/4*denom(1/4*s12^2)*mt^6
      *mh^2*s12*s23 - 1/4*denom(1/4*s12^2)*mt^6*mh^2*s12*s14 - 1/4*denom(1/4*
      s12^2)*mt^6*mh^2*s12*s13 - 1/4*denom(1/4*s12^2)*mt^8*s24^2 + 1/4*denom(1/
      4*s12^2)*mt^8*s23^2 + 3/4*denom(1/4*s12^2)*mt^8*s14*s23 + 1/4*denom(1/4*
      s12^2)*mt^8*s14^2 - 3/4*denom(1/4*s12^2)*mt^8*s13*s24 - 1/4*denom(1/4*
      s12^2)*mt^8*s13^2 - 1/4*denom(1/4*s12^2)*mt^8*s12*s24 - 1/4*denom(1/4*
      s12^2)*mt^8*s12*s23 - 1/4*denom(1/4*s12^2)*mt^8*s12*s14 - 1/4*denom(1/4*
      s12^2)*mt^8*s12*s13 - 1/4*denom(1/4*s12^2)*mt^8*s12^2 + 1/4*denom(1/4*
      s12^2)*mt^8*mh^2*s12 + 1/4*denom(1/4*s12^2)*mt^10*s24 - 1/4*denom(1/4*
      s12^2)*mt^10*s23 - 1/4*denom(1/4*s12^2)*mt^10*s14 + 1/4*denom(1/4*s12^2)
      *mt^10*s13;
 
 .sort
id KMatrix(15,4) =   - 1/2*mt^2*s14*s23*s24 - 1/2*mt^2*s14*s23^2 - 1/2*mt^2*
      s14^2*s23 + 1/2*mt^2*s13*s24^2 + 1/2*mt^2*s13*s23*s24 + 1/2*mt^2*s13*s14
      *s24 - 1/2*mt^2*s13*s14*s23 + 1/2*mt^2*s13^2*s24 + 1/2*mt^2*s12*s24^2 + 
      mt^2*s12*s23*s24 + 1/2*mt^2*s12*s23^2 + mt^2*s12*s14*s24 + 1/2*mt^2*s12*
      s14*s23 + 1/2*mt^2*s12*s14^2 + 3/2*mt^2*s12*s13*s24 + mt^2*s12*s13*s23
       + mt^2*s12*s13*s14 + 1/2*mt^2*s12*s13^2 + mt^2*s12^2*s24 + mt^2*s12^2*
      s23 + mt^2*s12^2*s14 + mt^2*s12^2*s13 + 1/2*mt^2*s12^3 + 1/2*mt^2*mh^2*
      s14*s23 - 1/2*mt^2*mh^2*s13*s24 - mt^2*mh^2*s12*s24 - mt^2*mh^2*s12*s23
       - mt^2*mh^2*s12*s14 - mt^2*mh^2*s12*s13 - mt^2*mh^2*s12^2 + 1/2*mt^2*
      mh^4*s12 - 1/2*mt^4*s24^2 + 1/2*mt^4*s23^2 + 2*mt^4*s14*s23 + 1/2*mt^4*
      s14^2 - 2*mt^4*s13*s24 - 1/2*mt^4*s13^2 - 3/2*mt^4*s12*s24 - 1/2*mt^4*
      s12*s23 - 1/2*mt^4*s12*s14 - 3/2*mt^4*s12*s13 - mt^4*s12^2 + 1/2*mt^4*
      mh^2*s24 - 1/2*mt^4*mh^2*s23 - 1/2*mt^4*mh^2*s14 + 1/2*mt^4*mh^2*s13 + 
      mt^4*mh^2*s12 + mt^6*s24 - mt^6*s23 - mt^6*s14 + mt^6*s13 + 1/4*denom(1/
      2*s12)*s14^2*s23*s24^2 + 1/4*denom(1/2*s12)*s14^2*s23^2*s24 + 1/4*denom(
      1/2*s12)*s14^3*s23*s24 - 1/4*denom(1/2*s12)*s13*s14*s24^3 - 1/4*denom(1/
      2*s12)*s13*s14*s23*s24^2 - 1/4*denom(1/2*s12)*s13*s14^2*s24^2 + 1/4*
      denom(1/2*s12)*s13*s14^2*s23*s24 - 1/4*denom(1/2*s12)*s13^2*s14*s24^2 - 
      1/4*denom(1/2*s12)*s12*s14*s24^3 - 1/2*denom(1/2*s12)*s12*s14*s23*s24^2
       - 1/4*denom(1/2*s12)*s12*s14*s23^2*s24 - 1/2*denom(1/2*s12)*s12*s14^2*
      s24^2 - 1/4*denom(1/2*s12)*s12*s14^2*s23*s24 - 1/4*denom(1/2*s12)*s12*
      s14^3*s24 - 3/4*denom(1/2*s12)*s12*s13*s14*s24^2 - 1/2*denom(1/2*s12)*
      s12*s13*s14*s23*s24 - 1/2*denom(1/2*s12)*s12*s13*s14^2*s24 - 1/4*denom(1/
      2*s12)*s12*s13^2*s14*s24 - 1/2*denom(1/2*s12)*s12^2*s14*s24^2 - 1/2*
      denom(1/2*s12)*s12^2*s14*s23*s24 - 1/2*denom(1/2*s12)*s12^2*s14^2*s24 - 
      1/2*denom(1/2*s12)*s12^2*s13*s14*s24 - 1/4*denom(1/2*s12)*s12^3*s14*s24
       - 1/4*denom(1/2*s12)*mh^2*s14^2*s23*s24 + 1/4*denom(1/2*s12)*mh^2*s13*
      s14*s24^2 + 1/2*denom(1/2*s12)*mh^2*s12*s14*s24^2 + 1/2*denom(1/2*s12)*
      mh^2*s12*s14*s23*s24 + 1/2*denom(1/2*s12)*mh^2*s12*s14^2*s24 + 1/2*
      denom(1/2*s12)*mh^2*s12*s13*s14*s24 + 1/2*denom(1/2*s12)*mh^2*s12^2*s14*
      s24 - 1/4*denom(1/2*s12)*mh^4*s12*s14*s24 + 1/4*denom(1/2*s12)*mt^2*s14*
      s24^3 - 1/4*denom(1/2*s12)*mt^2*s14*s23*s24^2 - 1/2*denom(1/2*s12)*mt^2*
      s14*s23^2*s24 - 3/2*denom(1/2*s12)*mt^2*s14^2*s23*s24 - 1/2*denom(1/2*
      s12)*mt^2*s14^2*s23^2 - 1/4*denom(1/2*s12)*mt^2*s14^3*s24 - 1/4*denom(1/
      2*s12)*mt^2*s14^3*s23 + 1/4*denom(1/2*s12)*mt^2*s13*s24^3 + 1/4*denom(1/
      2*s12)*mt^2*s13*s23*s24^2 + 3/2*denom(1/2*s12)*mt^2*s13*s14*s24^2 + 1/4*
      denom(1/2*s12)*mt^2*s13*s14^2*s24 - 1/4*denom(1/2*s12)*mt^2*s13*s14^2*
      s23 + 1/2*denom(1/2*s12)*mt^2*s13^2*s24^2 + 1/2*denom(1/2*s12)*mt^2*
      s13^2*s14*s24 + 1/4*denom(1/2*s12)*mt^2*s12*s24^3 + 1/2*denom(1/2*s12)*
      mt^2*s12*s23*s24^2 + 1/4*denom(1/2*s12)*mt^2*s12*s23^2*s24 + 3/2*denom(1/
      2*s12)*mt^2*s12*s14*s24^2 + 5/4*denom(1/2*s12)*mt^2*s12*s14*s23*s24 + 1/
      2*denom(1/2*s12)*mt^2*s12*s14*s23^2 + denom(1/2*s12)*mt^2*s12*s14^2*s24
       + 1/2*denom(1/2*s12)*mt^2*s12*s14^2*s23 + 1/4*denom(1/2*s12)*mt^2*s12*
      s14^3 + denom(1/2*s12)*mt^2*s12*s13*s24^2 + 3/4*denom(1/2*s12)*mt^2*s12*
      s13*s23*s24 + 9/4*denom(1/2*s12)*mt^2*s12*s13*s14*s24 + 3/4*denom(1/2*
      s12)*mt^2*s12*s13*s14*s23 + 1/2*denom(1/2*s12)*mt^2*s12*s13*s14^2 + 1/2*
      denom(1/2*s12)*mt^2*s12*s13^2*s24 + 1/4*denom(1/2*s12)*mt^2*s12*s13^2*
      s14 + 1/2*denom(1/2*s12)*mt^2*s12^2*s24^2 + 1/2*denom(1/2*s12)*mt^2*
      s12^2*s23*s24 + 3/2*denom(1/2*s12)*mt^2*s12^2*s14*s24 + 3/4*denom(1/2*
      s12)*mt^2*s12^2*s14*s23 + 1/2*denom(1/2*s12)*mt^2*s12^2*s14^2 + 3/4*
      denom(1/2*s12)*mt^2*s12^2*s13*s24 + 1/2*denom(1/2*s12)*mt^2*s12^2*s13*
      s14 + 1/4*denom(1/2*s12)*mt^2*s12^3*s24 + 1/4*denom(1/2*s12)*mt^2*s12^3*
      s14 - 1/4*denom(1/2*s12)*mt^2*mh^2*s14*s24^2 + 1/2*denom(1/2*s12)*mt^2*
      mh^2*s14*s23*s24 + 1/4*denom(1/2*s12)*mt^2*mh^2*s14^2*s24 + 1/4*denom(1/
      2*s12)*mt^2*mh^2*s14^2*s23 - 1/4*denom(1/2*s12)*mt^2*mh^2*s13*s24^2 - 1/
      2*denom(1/2*s12)*mt^2*mh^2*s13*s14*s24 - 1/2*denom(1/2*s12)*mt^2*mh^2*
      s12*s24^2 - 1/2*denom(1/2*s12)*mt^2*mh^2*s12*s23*s24 - 3/2*denom(1/2*s12
      )*mt^2*mh^2*s12*s14*s24 - 3/4*denom(1/2*s12)*mt^2*mh^2*s12*s14*s23 - 1/2
      *denom(1/2*s12)*mt^2*mh^2*s12*s14^2 - 3/4*denom(1/2*s12)*mt^2*mh^2*s12*
      s13*s24 - 1/2*denom(1/2*s12)*mt^2*mh^2*s12*s13*s14 - 1/2*denom(1/2*s12)*
      mt^2*mh^2*s12^2*s24 - 1/2*denom(1/2*s12)*mt^2*mh^2*s12^2*s14 + 1/4*
      denom(1/2*s12)*mt^2*mh^4*s12*s24 + 1/4*denom(1/2*s12)*mt^2*mh^4*s12*s14
       - 1/4*denom(1/2*s12)*mt^4*s24^3 + 1/4*denom(1/2*s12)*mt^4*s23^2*s24 - 3/
      4*denom(1/2*s12)*mt^4*s14*s24^2 + 7/4*denom(1/2*s12)*mt^4*s14*s23*s24 + 
      denom(1/2*s12)*mt^4*s14*s23^2 + 3/4*denom(1/2*s12)*mt^4*s14^2*s24 + 7/4*
      denom(1/2*s12)*mt^4*s14^2*s23 + 1/4*denom(1/2*s12)*mt^4*s14^3 - 7/4*
      denom(1/2*s12)*mt^4*s13*s24^2 - 1/4*denom(1/2*s12)*mt^4*s13*s23*s24 - 7/
      4*denom(1/2*s12)*mt^4*s13*s14*s24 + 1/4*denom(1/2*s12)*mt^4*s13*s14*s23
       - denom(1/2*s12)*mt^4*s13^2*s24 - 1/4*denom(1/2*s12)*mt^4*s13^2*s14 - 5/
      4*denom(1/2*s12)*mt^4*s12*s24^2 - 5/4*denom(1/2*s12)*mt^4*s12*s23*s24 - 
      1/2*denom(1/2*s12)*mt^4*s12*s23^2 - 2*denom(1/2*s12)*mt^4*s12*s14*s24 - 
      denom(1/2*s12)*mt^4*s12*s14*s23 - 3/4*denom(1/2*s12)*mt^4*s12*s14^2 - 2*
      denom(1/2*s12)*mt^4*s12*s13*s24 - denom(1/2*s12)*mt^4*s12*s13*s23 - 7/4*
      denom(1/2*s12)*mt^4*s12*s13*s14 - 1/2*denom(1/2*s12)*mt^4*s12*s13^2 - 5/
      4*denom(1/2*s12)*mt^4*s12^2*s24 - 3/4*denom(1/2*s12)*mt^4*s12^2*s23 - 5/
      4*denom(1/2*s12)*mt^4*s12^2*s14 - 3/4*denom(1/2*s12)*mt^4*s12^2*s13 - 1/
      4*denom(1/2*s12)*mt^4*s12^3 + 1/4*denom(1/2*s12)*mt^4*mh^2*s24^2 - 1/4*
      denom(1/2*s12)*mt^4*mh^2*s23*s24 - 1/2*denom(1/2*s12)*mt^4*mh^2*s14*s23
       - 1/4*denom(1/2*s12)*mt^4*mh^2*s14^2 + 1/2*denom(1/2*s12)*mt^4*mh^2*s13
      *s24 + 1/4*denom(1/2*s12)*mt^4*mh^2*s13*s14 + 5/4*denom(1/2*s12)*mt^4*
      mh^2*s12*s24 + 3/4*denom(1/2*s12)*mt^4*mh^2*s12*s23 + 5/4*denom(1/2*s12)
      *mt^4*mh^2*s12*s14 + 3/4*denom(1/2*s12)*mt^4*mh^2*s12*s13 + 1/2*denom(1/
      2*s12)*mt^4*mh^2*s12^2 - 1/4*denom(1/2*s12)*mt^4*mh^4*s12 + denom(1/2*
      s12)*mt^6*s24^2 - 1/2*denom(1/2*s12)*mt^6*s23*s24 - 1/2*denom(1/2*s12)*
      mt^6*s23^2 - 5/2*denom(1/2*s12)*mt^6*s14*s23 - denom(1/2*s12)*mt^6*s14^2
       + 5/2*denom(1/2*s12)*mt^6*s13*s24 + 1/2*denom(1/2*s12)*mt^6*s13*s14 + 1/
      2*denom(1/2*s12)*mt^6*s13^2 + 5/4*denom(1/2*s12)*mt^6*s12*s24 + 3/4*
      denom(1/2*s12)*mt^6*s12*s23 + 3/4*denom(1/2*s12)*mt^6*s12*s14 + 5/4*
      denom(1/2*s12)*mt^6*s12*s13 + denom(1/2*s12)*mt^6*s12^2 - 1/4*denom(1/2*
      s12)*mt^6*mh^2*s24 + 1/4*denom(1/2*s12)*mt^6*mh^2*s23 + 1/4*denom(1/2*
      s12)*mt^6*mh^2*s14 - 1/4*denom(1/2*s12)*mt^6*mh^2*s13 - denom(1/2*s12)*
      mt^6*mh^2*s12 - denom(1/2*s12)*mt^8*s24 + denom(1/2*s12)*mt^8*s23 + 
      denom(1/2*s12)*mt^8*s14 - denom(1/2*s12)*mt^8*s13 + 1/8*denom(1/4*s12^2)
      *s14^3*s23^2*s24 - 1/8*denom(1/4*s12^2)*s13^2*s14*s24^3 - 1/8*denom(1/4*
      s12^2)*s12*s14^2*s23*s24^2 - 1/8*denom(1/4*s12^2)*s12*s14^2*s23^2*s24 - 
      1/8*denom(1/4*s12^2)*s12*s14^3*s23*s24 - 1/8*denom(1/4*s12^2)*s12*s13*
      s14*s24^3 - 1/8*denom(1/4*s12^2)*s12*s13*s14*s23*s24^2 - 1/8*denom(1/4*
      s12^2)*s12*s13*s14^2*s24^2 - 1/8*denom(1/4*s12^2)*s12*s13*s14^2*s23*s24
       - 1/8*denom(1/4*s12^2)*s12*s13^2*s14*s24^2 - 1/8*denom(1/4*s12^2)*s12^2
      *s14^2*s23*s24 - 1/8*denom(1/4*s12^2)*s12^2*s13*s14*s24^2 + 1/8*denom(1/
      4*s12^2)*mh^2*s12*s14^2*s23*s24 + 1/8*denom(1/4*s12^2)*mh^2*s12*s13*s14*
      s24^2 - 3/8*denom(1/4*s12^2)*mt^2*s14^2*s23^2*s24 - 1/4*denom(1/4*s12^2)
      *mt^2*s14^3*s23*s24 - 1/8*denom(1/4*s12^2)*mt^2*s14^3*s23^2 + 1/4*denom(
      1/4*s12^2)*mt^2*s13*s14*s24^3 + 1/8*denom(1/4*s12^2)*mt^2*s13^2*s24^3 + 
      3/8*denom(1/4*s12^2)*mt^2*s13^2*s14*s24^2 + 1/8*denom(1/4*s12^2)*mt^2*
      s12*s14*s24^3 + 3/8*denom(1/4*s12^2)*mt^2*s12*s14*s23*s24^2 + 1/4*denom(
      1/4*s12^2)*mt^2*s12*s14*s23^2*s24 + 1/4*denom(1/4*s12^2)*mt^2*s12*s14^2*
      s24^2 + 1/2*denom(1/4*s12^2)*mt^2*s12*s14^2*s23*s24 + 1/8*denom(1/4*
      s12^2)*mt^2*s12*s14^2*s23^2 + 1/8*denom(1/4*s12^2)*mt^2*s12*s14^3*s24 + 
      1/8*denom(1/4*s12^2)*mt^2*s12*s14^3*s23 + 1/8*denom(1/4*s12^2)*mt^2*s12*
      s13*s24^3 + 1/8*denom(1/4*s12^2)*mt^2*s12*s13*s23*s24^2 + 1/2*denom(1/4*
      s12^2)*mt^2*s12*s13*s14*s24^2 + 1/2*denom(1/4*s12^2)*mt^2*s12*s13*s14*
      s23*s24 + 3/8*denom(1/4*s12^2)*mt^2*s12*s13*s14^2*s24 + 1/8*denom(1/4*
      s12^2)*mt^2*s12*s13*s14^2*s23 + 1/8*denom(1/4*s12^2)*mt^2*s12*s13^2*
      s24^2 + 1/4*denom(1/4*s12^2)*mt^2*s12*s13^2*s14*s24 + 1/8*denom(1/4*
      s12^2)*mt^2*s12^2*s14*s24^2 + 1/4*denom(1/4*s12^2)*mt^2*s12^2*s14*s23*
      s24 + 1/8*denom(1/4*s12^2)*mt^2*s12^2*s14^2*s24 + 1/8*denom(1/4*s12^2)*
      mt^2*s12^2*s14^2*s23 + 1/8*denom(1/4*s12^2)*mt^2*s12^2*s13*s24^2 + 1/4*
      denom(1/4*s12^2)*mt^2*s12^2*s13*s14*s24 - 1/8*denom(1/4*s12^2)*mt^2*mh^2
      *s12*s14*s24^2 - 1/4*denom(1/4*s12^2)*mt^2*mh^2*s12*s14*s23*s24 - 1/8*
      denom(1/4*s12^2)*mt^2*mh^2*s12*s14^2*s24 - 1/8*denom(1/4*s12^2)*mt^2*
      mh^2*s12*s14^2*s23 - 1/8*denom(1/4*s12^2)*mt^2*mh^2*s12*s13*s24^2 - 1/4*
      denom(1/4*s12^2)*mt^2*mh^2*s12*s13*s14*s24 - 1/8*denom(1/4*s12^2)*mt^4*
      s14*s24^3 + 3/8*denom(1/4*s12^2)*mt^4*s14*s23^2*s24 + 3/4*denom(1/4*
      s12^2)*mt^4*s14^2*s23*s24 + 3/8*denom(1/4*s12^2)*mt^4*s14^2*s23^2 + 1/8*
      denom(1/4*s12^2)*mt^4*s14^3*s24 + 1/4*denom(1/4*s12^2)*mt^4*s14^3*s23 - 
      1/4*denom(1/4*s12^2)*mt^4*s13*s24^3 - 3/4*denom(1/4*s12^2)*mt^4*s13*s14*
      s24^2 - 3/8*denom(1/4*s12^2)*mt^4*s13^2*s24^2 - 3/8*denom(1/4*s12^2)*
      mt^4*s13^2*s14*s24 - 1/8*denom(1/4*s12^2)*mt^4*s12*s24^3 - 1/4*denom(1/4
      *s12^2)*mt^4*s12*s23*s24^2 - 1/8*denom(1/4*s12^2)*mt^4*s12*s23^2*s24 - 5/
      8*denom(1/4*s12^2)*mt^4*s12*s14*s24^2 - 7/8*denom(1/4*s12^2)*mt^4*s12*
      s14*s23*s24 - 1/4*denom(1/4*s12^2)*mt^4*s12*s14*s23^2 - 5/8*denom(1/4*
      s12^2)*mt^4*s12*s14^2*s24 - 3/8*denom(1/4*s12^2)*mt^4*s12*s14^2*s23 - 1/
      8*denom(1/4*s12^2)*mt^4*s12*s14^3 - 3/8*denom(1/4*s12^2)*mt^4*s12*s13*
      s24^2 - 3/8*denom(1/4*s12^2)*mt^4*s12*s13*s23*s24 - 7/8*denom(1/4*s12^2)
      *mt^4*s12*s13*s14*s24 - 3/8*denom(1/4*s12^2)*mt^4*s12*s13*s14*s23 - 1/4*
      denom(1/4*s12^2)*mt^4*s12*s13*s14^2 - 1/4*denom(1/4*s12^2)*mt^4*s12*
      s13^2*s24 - 1/8*denom(1/4*s12^2)*mt^4*s12*s13^2*s14 - 1/8*denom(1/4*
      s12^2)*mt^4*s12^2*s24^2 - 1/8*denom(1/4*s12^2)*mt^4*s12^2*s23*s24 - 1/2*
      denom(1/4*s12^2)*mt^4*s12^2*s14*s24 - 1/4*denom(1/4*s12^2)*mt^4*s12^2*
      s14*s23 - 1/8*denom(1/4*s12^2)*mt^4*s12^2*s14^2 - 1/4*denom(1/4*s12^2)*
      mt^4*s12^2*s13*s24 - 1/8*denom(1/4*s12^2)*mt^4*s12^2*s13*s14 + 1/8*
      denom(1/4*s12^2)*mt^4*mh^2*s12*s24^2 + 1/8*denom(1/4*s12^2)*mt^4*mh^2*
      s12*s23*s24 + 1/2*denom(1/4*s12^2)*mt^4*mh^2*s12*s14*s24 + 1/4*denom(1/4
      *s12^2)*mt^4*mh^2*s12*s14*s23 + 1/8*denom(1/4*s12^2)*mt^4*mh^2*s12*s14^2
       + 1/4*denom(1/4*s12^2)*mt^4*mh^2*s12*s13*s24 + 1/8*denom(1/4*s12^2)*
      mt^4*mh^2*s12*s13*s14 + 1/8*denom(1/4*s12^2)*mt^6*s24^3 - 1/8*denom(1/4*
      s12^2)*mt^6*s23^2*s24 + 3/8*denom(1/4*s12^2)*mt^6*s14*s24^2 - 3/4*denom(
      1/4*s12^2)*mt^6*s14*s23*s24 - 3/8*denom(1/4*s12^2)*mt^6*s14*s23^2 - 3/8*
      denom(1/4*s12^2)*mt^6*s14^2*s24 - 3/4*denom(1/4*s12^2)*mt^6*s14^2*s23 - 
      1/8*denom(1/4*s12^2)*mt^6*s14^3 + 3/4*denom(1/4*s12^2)*mt^6*s13*s24^2 + 
      3/4*denom(1/4*s12^2)*mt^6*s13*s14*s24 + 3/8*denom(1/4*s12^2)*mt^6*s13^2*
      s24 + 1/8*denom(1/4*s12^2)*mt^6*s13^2*s14 + 3/8*denom(1/4*s12^2)*mt^6*
      s12*s24^2 + 1/2*denom(1/4*s12^2)*mt^6*s12*s23*s24 + 1/8*denom(1/4*s12^2)
      *mt^6*s12*s23^2 + 3/4*denom(1/4*s12^2)*mt^6*s12*s14*s24 + 1/2*denom(1/4*
      s12^2)*mt^6*s12*s14*s23 + 3/8*denom(1/4*s12^2)*mt^6*s12*s14^2 + 1/2*
      denom(1/4*s12^2)*mt^6*s12*s13*s24 + 1/4*denom(1/4*s12^2)*mt^6*s12*s13*
      s23 + 1/2*denom(1/4*s12^2)*mt^6*s12*s13*s14 + 1/8*denom(1/4*s12^2)*mt^6*
      s12*s13^2 + 3/8*denom(1/4*s12^2)*mt^6*s12^2*s24 + 1/8*denom(1/4*s12^2)*
      mt^6*s12^2*s23 + 3/8*denom(1/4*s12^2)*mt^6*s12^2*s14 + 1/8*denom(1/4*
      s12^2)*mt^6*s12^2*s13 - 3/8*denom(1/4*s12^2)*mt^6*mh^2*s12*s24 - 1/8*
      denom(1/4*s12^2)*mt^6*mh^2*s12*s23 - 3/8*denom(1/4*s12^2)*mt^6*mh^2*s12*
      s14 - 1/8*denom(1/4*s12^2)*mt^6*mh^2*s12*s13 - 3/8*denom(1/4*s12^2)*mt^8
      *s24^2 + 1/4*denom(1/4*s12^2)*mt^8*s23*s24 + 1/8*denom(1/4*s12^2)*mt^8*
      s23^2 + 3/4*denom(1/4*s12^2)*mt^8*s14*s23 + 3/8*denom(1/4*s12^2)*mt^8*
      s14^2 - 3/4*denom(1/4*s12^2)*mt^8*s13*s24 - 1/4*denom(1/4*s12^2)*mt^8*
      s13*s14 - 1/8*denom(1/4*s12^2)*mt^8*s13^2 - 1/4*denom(1/4*s12^2)*mt^8*
      s12*s24 - 1/4*denom(1/4*s12^2)*mt^8*s12*s23 - 1/4*denom(1/4*s12^2)*mt^8*
      s12*s14 - 1/4*denom(1/4*s12^2)*mt^8*s12*s13 - 1/4*denom(1/4*s12^2)*mt^8*
      s12^2 + 1/4*denom(1/4*s12^2)*mt^8*mh^2*s12 + 1/4*denom(1/4*s12^2)*mt^10*
      s24 - 1/4*denom(1/4*s12^2)*mt^10*s23 - 1/4*denom(1/4*s12^2)*mt^10*s14 + 
      1/4*denom(1/4*s12^2)*mt^10*s13;
 
 .sort
id KMatrix(15,5) =   - mt^3*s12*s14*s24 - mt^3*s12*s14*s23 - mt^3*s12*s14^2 - 
      mt^3*s12*s13*s14 - mt^3*s12^2*s14 + mt^3*mh^2*s12*s14 + mt^5*s12*s24 + 
      mt^5*s12*s23 + 3*mt^5*s12*s14 + mt^5*s12*s13 + mt^5*s12^2 - mt^5*mh^2*
      s12 - 2*mt^7*s12 + 1/2*denom(1/2*s12)*mt*s12*s13*s14*s23*s24 + 1/2*
      denom(1/2*s12)*mt*s12*s13*s14*s23^2 + 1/2*denom(1/2*s12)*mt*s12*s13*
      s14^2*s23 + 1/2*denom(1/2*s12)*mt*s12*s13^2*s14*s23 + 1/2*denom(1/2*s12)
      *mt*s12^2*s13*s14*s23 - 1/2*denom(1/2*s12)*mt*mh^2*s12*s13*s14*s23 - 1/2
      *denom(1/2*s12)*mt^3*s12*s14*s23*s24 - 1/2*denom(1/2*s12)*mt^3*s12*s14*
      s23^2 - denom(1/2*s12)*mt^3*s12*s14^2*s23 - 1/2*denom(1/2*s12)*mt^3*s12*
      s13*s23*s24 - 1/2*denom(1/2*s12)*mt^3*s12*s13*s23^2 - denom(1/2*s12)*
      mt^3*s12*s13*s14*s24 - 5/2*denom(1/2*s12)*mt^3*s12*s13*s14*s23 - 1/2*
      denom(1/2*s12)*mt^3*s12*s13*s14^2 - 1/2*denom(1/2*s12)*mt^3*s12*s13^2*
      s23 - 1/2*denom(1/2*s12)*mt^3*s12*s13^2*s14 - 1/2*denom(1/2*s12)*mt^3*
      s12^2*s14*s23 - 1/2*denom(1/2*s12)*mt^3*s12^2*s13*s23 - 1/2*denom(1/2*
      s12)*mt^3*s12^2*s13*s14 + 1/2*denom(1/2*s12)*mt^3*mh^2*s12*s14*s23 + 1/2
      *denom(1/2*s12)*mt^3*mh^2*s12*s13*s23 + 1/2*denom(1/2*s12)*mt^3*mh^2*s12
      *s13*s14 + 1/2*denom(1/2*s12)*mt^5*s12*s23*s24 + 1/2*denom(1/2*s12)*mt^5
      *s12*s23^2 + denom(1/2*s12)*mt^5*s12*s14*s24 + 3*denom(1/2*s12)*mt^5*s12
      *s14*s23 + denom(1/2*s12)*mt^5*s12*s14^2 + denom(1/2*s12)*mt^5*s12*s13*
      s24 + 2*denom(1/2*s12)*mt^5*s12*s13*s23 + 5/2*denom(1/2*s12)*mt^5*s12*
      s13*s14 + 1/2*denom(1/2*s12)*mt^5*s12*s13^2 + 1/2*denom(1/2*s12)*mt^5*
      s12^2*s23 + 1/2*denom(1/2*s12)*mt^5*s12^2*s14 + 1/2*denom(1/2*s12)*mt^5*
      s12^2*s13 - 1/2*denom(1/2*s12)*mt^5*mh^2*s12*s23 - 1/2*denom(1/2*s12)*
      mt^5*mh^2*s12*s14 - 1/2*denom(1/2*s12)*mt^5*mh^2*s12*s13 - denom(1/2*s12
      )*mt^7*s12*s24 - 2*denom(1/2*s12)*mt^7*s12*s23 - 3*denom(1/2*s12)*mt^7*
      s12*s14 - 2*denom(1/2*s12)*mt^7*s12*s13 - 1/2*denom(1/2*s12)*mt^7*s12^2
       + 1/2*denom(1/2*s12)*mt^7*mh^2*s12 + 2*denom(1/2*s12)*mt^9*s12 + 1/4*
      denom(1/4*s12^2)*mt*s12*s13*s14^2*s23^2 + 1/4*denom(1/4*s12^2)*mt*s12*
      s13^2*s14*s23*s24 - 1/4*denom(1/4*s12^2)*mt^3*s12*s14^2*s23^2 - 1/2*
      denom(1/4*s12^2)*mt^3*s12*s13*s14*s23*s24 - 1/2*denom(1/4*s12^2)*mt^3*
      s12*s13*s14*s23^2 - 1/2*denom(1/4*s12^2)*mt^3*s12*s13*s14^2*s23 - 1/4*
      denom(1/4*s12^2)*mt^3*s12*s13^2*s23*s24 - 1/4*denom(1/4*s12^2)*mt^3*s12*
      s13^2*s14*s24 - 1/4*denom(1/4*s12^2)*mt^3*s12*s13^2*s14*s23 + 1/4*denom(
      1/4*s12^2)*mt^5*s12*s14*s23*s24 + 1/2*denom(1/4*s12^2)*mt^5*s12*s14*
      s23^2 + 1/2*denom(1/4*s12^2)*mt^5*s12*s14^2*s23 + 1/2*denom(1/4*s12^2)*
      mt^5*s12*s13*s23*s24 + 1/4*denom(1/4*s12^2)*mt^5*s12*s13*s23^2 + 1/2*
      denom(1/4*s12^2)*mt^5*s12*s13*s14*s24 + 3/2*denom(1/4*s12^2)*mt^5*s12*
      s13*s14*s23 + 1/4*denom(1/4*s12^2)*mt^5*s12*s13*s14^2 + 1/4*denom(1/4*
      s12^2)*mt^5*s12*s13^2*s24 + 1/4*denom(1/4*s12^2)*mt^5*s12*s13^2*s23 + 1/
      4*denom(1/4*s12^2)*mt^5*s12*s13^2*s14 - 1/4*denom(1/4*s12^2)*mt^7*s12*
      s23*s24 - 1/4*denom(1/4*s12^2)*mt^7*s12*s23^2 - 1/4*denom(1/4*s12^2)*
      mt^7*s12*s14*s24 - 5/4*denom(1/4*s12^2)*mt^7*s12*s14*s23 - 1/4*denom(1/4
      *s12^2)*mt^7*s12*s14^2 - 1/2*denom(1/4*s12^2)*mt^7*s12*s13*s24 - denom(1/
      4*s12^2)*mt^7*s12*s13*s23 - denom(1/4*s12^2)*mt^7*s12*s13*s14 - 1/4*
      denom(1/4*s12^2)*mt^7*s12*s13^2 + 1/4*denom(1/4*s12^2)*mt^9*s12*s24 + 3/
      4*denom(1/4*s12^2)*mt^9*s12*s23 + 3/4*denom(1/4*s12^2)*mt^9*s12*s14 + 3/
      4*denom(1/4*s12^2)*mt^9*s12*s13 - 1/2*denom(1/4*s12^2)*mt^11*s12;
 
 .sort
id KMatrix(15,6) =  1/2*mt*s12*s14*s24^2 + mt*s12*s14*s23*s24 + 1/2*mt*s12*s14
      *s23^2 + mt*s12*s14^2*s24 + mt*s12*s14^2*s23 + 1/2*mt*s12*s14^3 + mt*s12
      *s13*s14*s24 + mt*s12*s13*s14*s23 + mt*s12*s13*s14^2 + 1/2*mt*s12*s13^2*
      s14 + mt*s12^2*s14*s24 + mt*s12^2*s14*s23 + mt*s12^2*s14^2 + mt*s12^2*
      s13*s14 + 1/2*mt*s12^3*s14 - mt*mh^2*s12*s14*s24 - mt*mh^2*s12*s14*s23
       - mt*mh^2*s12*s14^2 - mt*mh^2*s12*s13*s14 - mt*mh^2*s12^2*s14 + 1/2*mt*
      mh^4*s12*s14 - 1/2*mt^3*s12*s24^2 - mt^3*s12*s23*s24 - 1/2*mt^3*s12*
      s23^2 - 3*mt^3*s12*s14*s24 - 3*mt^3*s12*s14*s23 - 5/2*mt^3*s12*s14^2 - 
      mt^3*s12*s13*s24 - mt^3*s12*s13*s23 - 3*mt^3*s12*s13*s14 - 1/2*mt^3*s12*
      s13^2 - mt^3*s12^2*s24 - mt^3*s12^2*s23 - 3*mt^3*s12^2*s14 - mt^3*s12^2*
      s13 - 1/2*mt^3*s12^3 + mt^3*mh^2*s12*s24 + mt^3*mh^2*s12*s23 + 3*mt^3*
      mh^2*s12*s14 + mt^3*mh^2*s12*s13 + mt^3*mh^2*s12^2 - 1/2*mt^3*mh^4*s12
       + 2*mt^5*s12*s24 + 2*mt^5*s12*s23 + 4*mt^5*s12*s14 + 2*mt^5*s12*s13 + 2
      *mt^5*s12^2 - 2*mt^5*mh^2*s12 - 2*mt^7*s12 + 1/2*denom(1/2*s12)*mt*s12*
      s14^2*s23*s24 + 1/2*denom(1/2*s12)*mt*s12*s14^2*s23^2 + 1/2*denom(1/2*
      s12)*mt*s12*s14^3*s23 + 1/2*denom(1/2*s12)*mt*s12*s13*s14*s24^2 + 1/2*
      denom(1/2*s12)*mt*s12*s13*s14*s23*s24 + 1/2*denom(1/2*s12)*mt*s12*s13*
      s14^2*s24 + 1/2*denom(1/2*s12)*mt*s12*s13*s14^2*s23 + 1/2*denom(1/2*s12)
      *mt*s12*s13^2*s14*s24 + 1/2*denom(1/2*s12)*mt*s12^2*s14^2*s23 + 1/2*
      denom(1/2*s12)*mt*s12^2*s13*s14*s24 - 1/2*denom(1/2*s12)*mt*mh^2*s12*
      s14^2*s23 - 1/2*denom(1/2*s12)*mt*mh^2*s12*s13*s14*s24 - 1/2*denom(1/2*
      s12)*mt^3*s12*s14*s24^2 - 3/2*denom(1/2*s12)*mt^3*s12*s14*s23*s24 - 
      denom(1/2*s12)*mt^3*s12*s14*s23^2 - denom(1/2*s12)*mt^3*s12*s14^2*s24 - 
      5/2*denom(1/2*s12)*mt^3*s12*s14^2*s23 - 1/2*denom(1/2*s12)*mt^3*s12*
      s14^3 - 1/2*denom(1/2*s12)*mt^3*s12*s13*s24^2 - 1/2*denom(1/2*s12)*mt^3*
      s12*s13*s23*s24 - 5/2*denom(1/2*s12)*mt^3*s12*s13*s14*s24 - 3/2*denom(1/
      2*s12)*mt^3*s12*s13*s14*s23 - denom(1/2*s12)*mt^3*s12*s13*s14^2 - 1/2*
      denom(1/2*s12)*mt^3*s12*s13^2*s24 - 1/2*denom(1/2*s12)*mt^3*s12*s13^2*
      s14 - 1/2*denom(1/2*s12)*mt^3*s12^2*s14*s24 - denom(1/2*s12)*mt^3*s12^2*
      s14*s23 - 1/2*denom(1/2*s12)*mt^3*s12^2*s14^2 - 1/2*denom(1/2*s12)*mt^3*
      s12^2*s13*s24 - 1/2*denom(1/2*s12)*mt^3*s12^2*s13*s14 + 1/2*denom(1/2*
      s12)*mt^3*mh^2*s12*s14*s24 + denom(1/2*s12)*mt^3*mh^2*s12*s14*s23 + 1/2*
      denom(1/2*s12)*mt^3*mh^2*s12*s14^2 + 1/2*denom(1/2*s12)*mt^3*mh^2*s12*
      s13*s24 + 1/2*denom(1/2*s12)*mt^3*mh^2*s12*s13*s14 + 1/2*denom(1/2*s12)*
      mt^5*s12*s24^2 + denom(1/2*s12)*mt^5*s12*s23*s24 + 1/2*denom(1/2*s12)*
      mt^5*s12*s23^2 + 3*denom(1/2*s12)*mt^5*s12*s14*s24 + 4*denom(1/2*s12)*
      mt^5*s12*s14*s23 + 5/2*denom(1/2*s12)*mt^5*s12*s14^2 + 2*denom(1/2*s12)*
      mt^5*s12*s13*s24 + denom(1/2*s12)*mt^5*s12*s13*s23 + 3*denom(1/2*s12)*
      mt^5*s12*s13*s14 + 1/2*denom(1/2*s12)*mt^5*s12*s13^2 + 1/2*denom(1/2*s12
      )*mt^5*s12^2*s24 + 1/2*denom(1/2*s12)*mt^5*s12^2*s23 + 3/2*denom(1/2*s12
      )*mt^5*s12^2*s14 + 1/2*denom(1/2*s12)*mt^5*s12^2*s13 - 1/2*denom(1/2*s12
      )*mt^5*mh^2*s12*s24 - 1/2*denom(1/2*s12)*mt^5*mh^2*s12*s23 - 3/2*denom(1/
      2*s12)*mt^5*mh^2*s12*s14 - 1/2*denom(1/2*s12)*mt^5*mh^2*s12*s13 - 2*
      denom(1/2*s12)*mt^7*s12*s24 - 2*denom(1/2*s12)*mt^7*s12*s23 - 4*denom(1/
      2*s12)*mt^7*s12*s14 - 2*denom(1/2*s12)*mt^7*s12*s13 - denom(1/2*s12)*
      mt^7*s12^2 + denom(1/2*s12)*mt^7*mh^2*s12 + 2*denom(1/2*s12)*mt^9*s12 + 
      1/8*denom(1/4*s12^2)*mt*s12*s14^3*s23^2 + 1/4*denom(1/4*s12^2)*mt*s12*
      s13*s14^2*s23*s24 + 1/8*denom(1/4*s12^2)*mt*s12*s13^2*s14*s24^2 - 1/4*
      denom(1/4*s12^2)*mt^3*s12*s14^2*s23*s24 - 3/8*denom(1/4*s12^2)*mt^3*s12*
      s14^2*s23^2 - 1/4*denom(1/4*s12^2)*mt^3*s12*s14^3*s23 - 1/4*denom(1/4*
      s12^2)*mt^3*s12*s13*s14*s24^2 - 1/2*denom(1/4*s12^2)*mt^3*s12*s13*s14*
      s23*s24 - 1/4*denom(1/4*s12^2)*mt^3*s12*s13*s14^2*s24 - 1/4*denom(1/4*
      s12^2)*mt^3*s12*s13*s14^2*s23 - 1/8*denom(1/4*s12^2)*mt^3*s12*s13^2*
      s24^2 - 1/4*denom(1/4*s12^2)*mt^3*s12*s13^2*s14*s24 + 1/8*denom(1/4*
      s12^2)*mt^5*s12*s14*s24^2 + 1/2*denom(1/4*s12^2)*mt^5*s12*s14*s23*s24 + 
      3/8*denom(1/4*s12^2)*mt^5*s12*s14*s23^2 + 1/4*denom(1/4*s12^2)*mt^5*s12*
      s14^2*s24 + denom(1/4*s12^2)*mt^5*s12*s14^2*s23 + 1/8*denom(1/4*s12^2)*
      mt^5*s12*s14^3 + 1/4*denom(1/4*s12^2)*mt^5*s12*s13*s24^2 + 1/4*denom(1/4
      *s12^2)*mt^5*s12*s13*s23*s24 + denom(1/4*s12^2)*mt^5*s12*s13*s14*s24 + 1/
      2*denom(1/4*s12^2)*mt^5*s12*s13*s14*s23 + 1/4*denom(1/4*s12^2)*mt^5*s12*
      s13*s14^2 + 1/4*denom(1/4*s12^2)*mt^5*s12*s13^2*s24 + 1/8*denom(1/4*
      s12^2)*mt^5*s12*s13^2*s14 - 1/8*denom(1/4*s12^2)*mt^7*s12*s24^2 - 1/4*
      denom(1/4*s12^2)*mt^7*s12*s23*s24 - 1/8*denom(1/4*s12^2)*mt^7*s12*s23^2
       - 3/4*denom(1/4*s12^2)*mt^7*s12*s14*s24 - 5/4*denom(1/4*s12^2)*mt^7*s12
      *s14*s23 - 5/8*denom(1/4*s12^2)*mt^7*s12*s14^2 - 3/4*denom(1/4*s12^2)*
      mt^7*s12*s13*s24 - 1/4*denom(1/4*s12^2)*mt^7*s12*s13*s23 - 3/4*denom(1/4
      *s12^2)*mt^7*s12*s13*s14 - 1/8*denom(1/4*s12^2)*mt^7*s12*s13^2 + 1/2*
      denom(1/4*s12^2)*mt^9*s12*s24 + 1/2*denom(1/4*s12^2)*mt^9*s12*s23 + 
      denom(1/4*s12^2)*mt^9*s12*s14 + 1/2*denom(1/4*s12^2)*mt^9*s12*s13 - 1/2*
      denom(1/4*s12^2)*mt^11*s12;
 
 .sort
id KMatrix(15,7) =  2*mt^5*s12*s14 - 2*mt^7*s12 - denom(1/2*s12)*mt^3*s12*
      s14^2*s24 - denom(1/2*s12)*mt^3*s12*s13*s14*s23 + 2*denom(1/2*s12)*mt^5*
      s12*s14*s24 + denom(1/2*s12)*mt^5*s12*s14*s23 + denom(1/2*s12)*mt^5*s12*
      s14^2 + denom(1/2*s12)*mt^5*s12*s13*s23 + denom(1/2*s12)*mt^5*s12*s13*
      s14 - denom(1/2*s12)*mt^7*s12*s24 - denom(1/2*s12)*mt^7*s12*s23 - 3*
      denom(1/2*s12)*mt^7*s12*s14 - denom(1/2*s12)*mt^7*s12*s13 + 2*denom(1/2*
      s12)*mt^9*s12 + 1/2*denom(1/4*s12^2)*mt*s12*s13*s14^2*s23*s24 - 1/2*
      denom(1/4*s12^2)*mt^3*s12*s14^2*s23*s24 - denom(1/4*s12^2)*mt^3*s12*s13*
      s14*s23*s24 - 1/2*denom(1/4*s12^2)*mt^3*s12*s13*s14^2*s24 - 1/2*denom(1/
      4*s12^2)*mt^3*s12*s13*s14^2*s23 + denom(1/4*s12^2)*mt^5*s12*s14*s23*s24
       + 1/2*denom(1/4*s12^2)*mt^5*s12*s14^2*s24 + 1/2*denom(1/4*s12^2)*mt^5*
      s12*s14^2*s23 + 1/2*denom(1/4*s12^2)*mt^5*s12*s13*s23*s24 + denom(1/4*
      s12^2)*mt^5*s12*s13*s14*s24 + denom(1/4*s12^2)*mt^5*s12*s13*s14*s23 + 1/
      2*denom(1/4*s12^2)*mt^5*s12*s13*s14^2 - 1/2*denom(1/4*s12^2)*mt^7*s12*
      s23*s24 - denom(1/4*s12^2)*mt^7*s12*s14*s24 - denom(1/4*s12^2)*mt^7*s12*
      s14*s23 - 1/2*denom(1/4*s12^2)*mt^7*s12*s14^2 - 1/2*denom(1/4*s12^2)*
      mt^7*s12*s13*s24 - 1/2*denom(1/4*s12^2)*mt^7*s12*s13*s23 - denom(1/4*
      s12^2)*mt^7*s12*s13*s14 + 1/2*denom(1/4*s12^2)*mt^9*s12*s24 + 1/2*denom(
      1/4*s12^2)*mt^9*s12*s23 + denom(1/4*s12^2)*mt^9*s12*s14 + 1/2*denom(1/4*
      s12^2)*mt^9*s12*s13 - 1/2*denom(1/4*s12^2)*mt^11*s12;
 
 .sort
id KMatrix(15,8) =   - mt^3*s12*s14*s24 - mt^3*s12*s14*s23 - mt^3*s12*s14^2 - 
      mt^3*s12*s13*s14 - mt^3*s12^2*s14 + mt^3*mh^2*s12*s14 + mt^5*s12*s24 + 
      mt^5*s12*s23 + 3*mt^5*s12*s14 + mt^5*s12*s13 + mt^5*s12^2 - mt^5*mh^2*
      s12 - 2*mt^7*s12 + 1/2*denom(1/2*s12)*mt*s12*s14^2*s24^2 + 1/2*denom(1/2
      *s12)*mt*s12*s14^2*s23*s24 + 1/2*denom(1/2*s12)*mt*s12*s14^3*s24 + 1/2*
      denom(1/2*s12)*mt*s12*s13*s14^2*s24 + 1/2*denom(1/2*s12)*mt*s12^2*s14^2*
      s24 - 1/2*denom(1/2*s12)*mt*mh^2*s12*s14^2*s24 - denom(1/2*s12)*mt^3*s12
      *s14*s24^2 - denom(1/2*s12)*mt^3*s12*s14*s23*s24 - 5/2*denom(1/2*s12)*
      mt^3*s12*s14^2*s24 - denom(1/2*s12)*mt^3*s12*s14^2*s23 - 1/2*denom(1/2*
      s12)*mt^3*s12*s14^3 - 3/2*denom(1/2*s12)*mt^3*s12*s13*s14*s24 - 1/2*
      denom(1/2*s12)*mt^3*s12*s13*s14^2 - denom(1/2*s12)*mt^3*s12^2*s14*s24 - 
      1/2*denom(1/2*s12)*mt^3*s12^2*s14^2 + denom(1/2*s12)*mt^3*mh^2*s12*s14*
      s24 + 1/2*denom(1/2*s12)*mt^3*mh^2*s12*s14^2 + 1/2*denom(1/2*s12)*mt^5*
      s12*s24^2 + 1/2*denom(1/2*s12)*mt^5*s12*s23*s24 + 4*denom(1/2*s12)*mt^5*
      s12*s14*s24 + 2*denom(1/2*s12)*mt^5*s12*s14*s23 + 5/2*denom(1/2*s12)*
      mt^5*s12*s14^2 + denom(1/2*s12)*mt^5*s12*s13*s24 + 3/2*denom(1/2*s12)*
      mt^5*s12*s13*s14 + 1/2*denom(1/2*s12)*mt^5*s12^2*s24 + denom(1/2*s12)*
      mt^5*s12^2*s14 - 1/2*denom(1/2*s12)*mt^5*mh^2*s12*s24 - denom(1/2*s12)*
      mt^5*mh^2*s12*s14 - 2*denom(1/2*s12)*mt^7*s12*s24 - denom(1/2*s12)*mt^7*
      s12*s23 - 4*denom(1/2*s12)*mt^7*s12*s14 - denom(1/2*s12)*mt^7*s12*s13 - 
      1/2*denom(1/2*s12)*mt^7*s12^2 + 1/2*denom(1/2*s12)*mt^7*mh^2*s12 + 2*
      denom(1/2*s12)*mt^9*s12 + 1/4*denom(1/4*s12^2)*mt*s12*s14^3*s23*s24 + 1/
      4*denom(1/4*s12^2)*mt*s12*s13*s14^2*s24^2 - 1/4*denom(1/4*s12^2)*mt^3*
      s12*s14^2*s24^2 - 3/4*denom(1/4*s12^2)*mt^3*s12*s14^2*s23*s24 - 1/4*
      denom(1/4*s12^2)*mt^3*s12*s14^3*s24 - 1/4*denom(1/4*s12^2)*mt^3*s12*
      s14^3*s23 - 1/2*denom(1/4*s12^2)*mt^3*s12*s13*s14*s24^2 - 1/2*denom(1/4*
      s12^2)*mt^3*s12*s13*s14^2*s24 + 1/2*denom(1/4*s12^2)*mt^5*s12*s14*s24^2
       + 3/4*denom(1/4*s12^2)*mt^5*s12*s14*s23*s24 + 5/4*denom(1/4*s12^2)*mt^5
      *s12*s14^2*s24 + 3/4*denom(1/4*s12^2)*mt^5*s12*s14^2*s23 + 1/4*denom(1/4
      *s12^2)*mt^5*s12*s14^3 + 1/4*denom(1/4*s12^2)*mt^5*s12*s13*s24^2 + 
      denom(1/4*s12^2)*mt^5*s12*s13*s14*s24 + 1/4*denom(1/4*s12^2)*mt^5*s12*
      s13*s14^2 - 1/4*denom(1/4*s12^2)*mt^7*s12*s24^2 - 1/4*denom(1/4*s12^2)*
      mt^7*s12*s23*s24 - 7/4*denom(1/4*s12^2)*mt^7*s12*s14*s24 - 3/4*denom(1/4
      *s12^2)*mt^7*s12*s14*s23 - denom(1/4*s12^2)*mt^7*s12*s14^2 - 1/2*denom(1/
      4*s12^2)*mt^7*s12*s13*s24 - 1/2*denom(1/4*s12^2)*mt^7*s12*s13*s14 + 3/4*
      denom(1/4*s12^2)*mt^9*s12*s24 + 1/4*denom(1/4*s12^2)*mt^9*s12*s23 + 5/4*
      denom(1/4*s12^2)*mt^9*s12*s14 + 1/4*denom(1/4*s12^2)*mt^9*s12*s13 - 1/2*
      denom(1/4*s12^2)*mt^11*s12;
 
 .sort
id KMatrix(15,9) =  mt^3*s12*s23*s24 + mt^3*s12*s23^2 + mt^3*s12*s14*s23 + 
      mt^3*s12*s13*s23 + mt^3*s12^2*s23 - mt^3*mh^2*s12*s23 - mt^5*s12*s24 - 3
      *mt^5*s12*s23 - mt^5*s12*s14 - mt^5*s12*s13 - mt^5*s12^2 + mt^5*mh^2*s12
       + 2*mt^7*s12 - 1/2*denom(1/2*s12)*mt*s12*s13*s23^2*s24 - 1/2*denom(1/2*
      s12)*mt*s12*s13*s23^3 - 1/2*denom(1/2*s12)*mt*s12*s13*s14*s23^2 - 1/2*
      denom(1/2*s12)*mt*s12*s13^2*s23^2 - 1/2*denom(1/2*s12)*mt*s12^2*s13*
      s23^2 + 1/2*denom(1/2*s12)*mt*mh^2*s12*s13*s23^2 + 1/2*denom(1/2*s12)*
      mt^3*s12*s23^2*s24 + 1/2*denom(1/2*s12)*mt^3*s12*s23^3 + denom(1/2*s12)*
      mt^3*s12*s14*s23^2 + 3/2*denom(1/2*s12)*mt^3*s12*s13*s23*s24 + 5/2*
      denom(1/2*s12)*mt^3*s12*s13*s23^2 + denom(1/2*s12)*mt^3*s12*s13*s14*s23
       + denom(1/2*s12)*mt^3*s12*s13^2*s23 + 1/2*denom(1/2*s12)*mt^3*s12^2*
      s23^2 + denom(1/2*s12)*mt^3*s12^2*s13*s23 - 1/2*denom(1/2*s12)*mt^3*mh^2
      *s12*s23^2 - denom(1/2*s12)*mt^3*mh^2*s12*s13*s23 - 3/2*denom(1/2*s12)*
      mt^5*s12*s23*s24 - 5/2*denom(1/2*s12)*mt^5*s12*s23^2 - 2*denom(1/2*s12)*
      mt^5*s12*s14*s23 - denom(1/2*s12)*mt^5*s12*s13*s24 - 4*denom(1/2*s12)*
      mt^5*s12*s13*s23 - 1/2*denom(1/2*s12)*mt^5*s12*s13*s14 - 1/2*denom(1/2*
      s12)*mt^5*s12*s13^2 - denom(1/2*s12)*mt^5*s12^2*s23 - 1/2*denom(1/2*s12)
      *mt^5*s12^2*s13 + denom(1/2*s12)*mt^5*mh^2*s12*s23 + 1/2*denom(1/2*s12)*
      mt^5*mh^2*s12*s13 + denom(1/2*s12)*mt^7*s12*s24 + 4*denom(1/2*s12)*mt^7*
      s12*s23 + denom(1/2*s12)*mt^7*s12*s14 + 2*denom(1/2*s12)*mt^7*s12*s13 + 
      1/2*denom(1/2*s12)*mt^7*s12^2 - 1/2*denom(1/2*s12)*mt^7*mh^2*s12 - 2*
      denom(1/2*s12)*mt^9*s12 - 1/4*denom(1/4*s12^2)*mt*s12*s13*s14*s23^3 - 1/
      4*denom(1/4*s12^2)*mt*s12*s13^2*s23^2*s24 + 1/4*denom(1/4*s12^2)*mt^3*
      s12*s14*s23^3 + 1/2*denom(1/4*s12^2)*mt^3*s12*s13*s23^2*s24 + 1/4*denom(
      1/4*s12^2)*mt^3*s12*s13*s23^3 + 3/4*denom(1/4*s12^2)*mt^3*s12*s13*s14*
      s23^2 + 1/2*denom(1/4*s12^2)*mt^3*s12*s13^2*s23*s24 + 1/4*denom(1/4*
      s12^2)*mt^3*s12*s13^2*s23^2 - 1/4*denom(1/4*s12^2)*mt^5*s12*s23^2*s24 - 
      1/4*denom(1/4*s12^2)*mt^5*s12*s23^3 - 3/4*denom(1/4*s12^2)*mt^5*s12*s14*
      s23^2 - denom(1/4*s12^2)*mt^5*s12*s13*s23*s24 - 5/4*denom(1/4*s12^2)*
      mt^5*s12*s13*s23^2 - 3/4*denom(1/4*s12^2)*mt^5*s12*s13*s14*s23 - 1/4*
      denom(1/4*s12^2)*mt^5*s12*s13^2*s24 - 1/2*denom(1/4*s12^2)*mt^5*s12*
      s13^2*s23 + 1/2*denom(1/4*s12^2)*mt^7*s12*s23*s24 + denom(1/4*s12^2)*
      mt^7*s12*s23^2 + 3/4*denom(1/4*s12^2)*mt^7*s12*s14*s23 + 1/2*denom(1/4*
      s12^2)*mt^7*s12*s13*s24 + 7/4*denom(1/4*s12^2)*mt^7*s12*s13*s23 + 1/4*
      denom(1/4*s12^2)*mt^7*s12*s13*s14 + 1/4*denom(1/4*s12^2)*mt^7*s12*s13^2
       - 1/4*denom(1/4*s12^2)*mt^9*s12*s24 - 5/4*denom(1/4*s12^2)*mt^9*s12*s23
       - 1/4*denom(1/4*s12^2)*mt^9*s12*s14 - 3/4*denom(1/4*s12^2)*mt^9*s12*s13
       + 1/2*denom(1/4*s12^2)*mt^11*s12;
 
 .sort
id KMatrix(15,10) =   - 1/2*mt*s12*s23*s24^2 - mt*s12*s23^2*s24 - 1/2*mt*s12*
      s23^3 - mt*s12*s14*s23*s24 - mt*s12*s14*s23^2 - 1/2*mt*s12*s14^2*s23 - 
      mt*s12*s13*s23*s24 - mt*s12*s13*s23^2 - mt*s12*s13*s14*s23 - 1/2*mt*s12*
      s13^2*s23 - mt*s12^2*s23*s24 - mt*s12^2*s23^2 - mt*s12^2*s14*s23 - mt*
      s12^2*s13*s23 - 1/2*mt*s12^3*s23 + mt*mh^2*s12*s23*s24 + mt*mh^2*s12*
      s23^2 + mt*mh^2*s12*s14*s23 + mt*mh^2*s12*s13*s23 + mt*mh^2*s12^2*s23 - 
      1/2*mt*mh^4*s12*s23 + 1/2*mt^3*s12*s24^2 + 3*mt^3*s12*s23*s24 + 5/2*mt^3
      *s12*s23^2 + mt^3*s12*s14*s24 + 3*mt^3*s12*s14*s23 + 1/2*mt^3*s12*s14^2
       + mt^3*s12*s13*s24 + 3*mt^3*s12*s13*s23 + mt^3*s12*s13*s14 + 1/2*mt^3*
      s12*s13^2 + mt^3*s12^2*s24 + 3*mt^3*s12^2*s23 + mt^3*s12^2*s14 + mt^3*
      s12^2*s13 + 1/2*mt^3*s12^3 - mt^3*mh^2*s12*s24 - 3*mt^3*mh^2*s12*s23 - 
      mt^3*mh^2*s12*s14 - mt^3*mh^2*s12*s13 - mt^3*mh^2*s12^2 + 1/2*mt^3*mh^4*
      s12 - 2*mt^5*s12*s24 - 4*mt^5*s12*s23 - 2*mt^5*s12*s14 - 2*mt^5*s12*s13
       - 2*mt^5*s12^2 + 2*mt^5*mh^2*s12 + 2*mt^7*s12 - 1/2*denom(1/2*s12)*mt*
      s12*s14*s23^2*s24 - 1/2*denom(1/2*s12)*mt*s12*s14*s23^3 - 1/2*denom(1/2*
      s12)*mt*s12*s14^2*s23^2 - 1/2*denom(1/2*s12)*mt*s12*s13*s23*s24^2 - 1/2*
      denom(1/2*s12)*mt*s12*s13*s23^2*s24 - 1/2*denom(1/2*s12)*mt*s12*s13*s14*
      s23*s24 - 1/2*denom(1/2*s12)*mt*s12*s13*s14*s23^2 - 1/2*denom(1/2*s12)*
      mt*s12*s13^2*s23*s24 - 1/2*denom(1/2*s12)*mt*s12^2*s14*s23^2 - 1/2*
      denom(1/2*s12)*mt*s12^2*s13*s23*s24 + 1/2*denom(1/2*s12)*mt*mh^2*s12*s14
      *s23^2 + 1/2*denom(1/2*s12)*mt*mh^2*s12*s13*s23*s24 + 1/2*denom(1/2*s12)
      *mt^3*s12*s23*s24^2 + denom(1/2*s12)*mt^3*s12*s23^2*s24 + 1/2*denom(1/2*
      s12)*mt^3*s12*s23^3 + 3/2*denom(1/2*s12)*mt^3*s12*s14*s23*s24 + 5/2*
      denom(1/2*s12)*mt^3*s12*s14*s23^2 + denom(1/2*s12)*mt^3*s12*s14^2*s23 + 
      1/2*denom(1/2*s12)*mt^3*s12*s13*s24^2 + 5/2*denom(1/2*s12)*mt^3*s12*s13*
      s23*s24 + denom(1/2*s12)*mt^3*s12*s13*s23^2 + 1/2*denom(1/2*s12)*mt^3*
      s12*s13*s14*s24 + 3/2*denom(1/2*s12)*mt^3*s12*s13*s14*s23 + 1/2*denom(1/
      2*s12)*mt^3*s12*s13^2*s24 + 1/2*denom(1/2*s12)*mt^3*s12*s13^2*s23 + 1/2*
      denom(1/2*s12)*mt^3*s12^2*s23*s24 + 1/2*denom(1/2*s12)*mt^3*s12^2*s23^2
       + denom(1/2*s12)*mt^3*s12^2*s14*s23 + 1/2*denom(1/2*s12)*mt^3*s12^2*s13
      *s24 + 1/2*denom(1/2*s12)*mt^3*s12^2*s13*s23 - 1/2*denom(1/2*s12)*mt^3*
      mh^2*s12*s23*s24 - 1/2*denom(1/2*s12)*mt^3*mh^2*s12*s23^2 - denom(1/2*
      s12)*mt^3*mh^2*s12*s14*s23 - 1/2*denom(1/2*s12)*mt^3*mh^2*s12*s13*s24 - 
      1/2*denom(1/2*s12)*mt^3*mh^2*s12*s13*s23 - 1/2*denom(1/2*s12)*mt^5*s12*
      s24^2 - 3*denom(1/2*s12)*mt^5*s12*s23*s24 - 5/2*denom(1/2*s12)*mt^5*s12*
      s23^2 - denom(1/2*s12)*mt^5*s12*s14*s24 - 4*denom(1/2*s12)*mt^5*s12*s14*
      s23 - 1/2*denom(1/2*s12)*mt^5*s12*s14^2 - 2*denom(1/2*s12)*mt^5*s12*s13*
      s24 - 3*denom(1/2*s12)*mt^5*s12*s13*s23 - denom(1/2*s12)*mt^5*s12*s13*
      s14 - 1/2*denom(1/2*s12)*mt^5*s12*s13^2 - 1/2*denom(1/2*s12)*mt^5*s12^2*
      s24 - 3/2*denom(1/2*s12)*mt^5*s12^2*s23 - 1/2*denom(1/2*s12)*mt^5*s12^2*
      s14 - 1/2*denom(1/2*s12)*mt^5*s12^2*s13 + 1/2*denom(1/2*s12)*mt^5*mh^2*
      s12*s24 + 3/2*denom(1/2*s12)*mt^5*mh^2*s12*s23 + 1/2*denom(1/2*s12)*mt^5
      *mh^2*s12*s14 + 1/2*denom(1/2*s12)*mt^5*mh^2*s12*s13 + 2*denom(1/2*s12)*
      mt^7*s12*s24 + 4*denom(1/2*s12)*mt^7*s12*s23 + 2*denom(1/2*s12)*mt^7*s12
      *s14 + 2*denom(1/2*s12)*mt^7*s12*s13 + denom(1/2*s12)*mt^7*s12^2 - 
      denom(1/2*s12)*mt^7*mh^2*s12 - 2*denom(1/2*s12)*mt^9*s12 - 1/8*denom(1/4
      *s12^2)*mt*s12*s14^2*s23^3 - 1/4*denom(1/4*s12^2)*mt*s12*s13*s14*s23^2*
      s24 - 1/8*denom(1/4*s12^2)*mt*s12*s13^2*s23*s24^2 + 1/4*denom(1/4*s12^2)
      *mt^3*s12*s14*s23^2*s24 + 1/4*denom(1/4*s12^2)*mt^3*s12*s14*s23^3 + 3/8*
      denom(1/4*s12^2)*mt^3*s12*s14^2*s23^2 + 1/4*denom(1/4*s12^2)*mt^3*s12*
      s13*s23*s24^2 + 1/4*denom(1/4*s12^2)*mt^3*s12*s13*s23^2*s24 + 1/2*denom(
      1/4*s12^2)*mt^3*s12*s13*s14*s23*s24 + 1/4*denom(1/4*s12^2)*mt^3*s12*s13*
      s14*s23^2 + 1/8*denom(1/4*s12^2)*mt^3*s12*s13^2*s24^2 + 1/4*denom(1/4*
      s12^2)*mt^3*s12*s13^2*s23*s24 - 1/8*denom(1/4*s12^2)*mt^5*s12*s23*s24^2
       - 1/4*denom(1/4*s12^2)*mt^5*s12*s23^2*s24 - 1/8*denom(1/4*s12^2)*mt^5*
      s12*s23^3 - 1/2*denom(1/4*s12^2)*mt^5*s12*s14*s23*s24 - denom(1/4*s12^2)
      *mt^5*s12*s14*s23^2 - 3/8*denom(1/4*s12^2)*mt^5*s12*s14^2*s23 - 1/4*
      denom(1/4*s12^2)*mt^5*s12*s13*s24^2 - denom(1/4*s12^2)*mt^5*s12*s13*s23*
      s24 - 1/4*denom(1/4*s12^2)*mt^5*s12*s13*s23^2 - 1/4*denom(1/4*s12^2)*
      mt^5*s12*s13*s14*s24 - 1/2*denom(1/4*s12^2)*mt^5*s12*s13*s14*s23 - 1/4*
      denom(1/4*s12^2)*mt^5*s12*s13^2*s24 - 1/8*denom(1/4*s12^2)*mt^5*s12*
      s13^2*s23 + 1/8*denom(1/4*s12^2)*mt^7*s12*s24^2 + 3/4*denom(1/4*s12^2)*
      mt^7*s12*s23*s24 + 5/8*denom(1/4*s12^2)*mt^7*s12*s23^2 + 1/4*denom(1/4*
      s12^2)*mt^7*s12*s14*s24 + 5/4*denom(1/4*s12^2)*mt^7*s12*s14*s23 + 1/8*
      denom(1/4*s12^2)*mt^7*s12*s14^2 + 3/4*denom(1/4*s12^2)*mt^7*s12*s13*s24
       + 3/4*denom(1/4*s12^2)*mt^7*s12*s13*s23 + 1/4*denom(1/4*s12^2)*mt^7*s12
      *s13*s14 + 1/8*denom(1/4*s12^2)*mt^7*s12*s13^2 - 1/2*denom(1/4*s12^2)*
      mt^9*s12*s24 - denom(1/4*s12^2)*mt^9*s12*s23 - 1/2*denom(1/4*s12^2)*mt^9
      *s12*s14 - 1/2*denom(1/4*s12^2)*mt^9*s12*s13 + 1/2*denom(1/4*s12^2)*
      mt^11*s12;
 
 .sort
id KMatrix(15,11) =   - 2*mt^5*s12*s23 + 2*mt^7*s12 + denom(1/2*s12)*mt^3*s12*
      s14*s23*s24 + denom(1/2*s12)*mt^3*s12*s13*s23^2 - denom(1/2*s12)*mt^5*
      s12*s23*s24 - denom(1/2*s12)*mt^5*s12*s23^2 - denom(1/2*s12)*mt^5*s12*
      s14*s24 - denom(1/2*s12)*mt^5*s12*s14*s23 - 2*denom(1/2*s12)*mt^5*s12*
      s13*s23 + denom(1/2*s12)*mt^7*s12*s24 + 3*denom(1/2*s12)*mt^7*s12*s23 + 
      denom(1/2*s12)*mt^7*s12*s14 + denom(1/2*s12)*mt^7*s12*s13 - 2*denom(1/2*
      s12)*mt^9*s12 - 1/2*denom(1/4*s12^2)*mt*s12*s13*s14*s23^2*s24 + 1/2*
      denom(1/4*s12^2)*mt^3*s12*s14*s23^2*s24 + 1/2*denom(1/4*s12^2)*mt^3*s12*
      s13*s23^2*s24 + denom(1/4*s12^2)*mt^3*s12*s13*s14*s23*s24 + 1/2*denom(1/
      4*s12^2)*mt^3*s12*s13*s14*s23^2 - 1/2*denom(1/4*s12^2)*mt^5*s12*s23^2*
      s24 - denom(1/4*s12^2)*mt^5*s12*s14*s23*s24 - 1/2*denom(1/4*s12^2)*mt^5*
      s12*s14*s23^2 - denom(1/4*s12^2)*mt^5*s12*s13*s23*s24 - 1/2*denom(1/4*
      s12^2)*mt^5*s12*s13*s23^2 - 1/2*denom(1/4*s12^2)*mt^5*s12*s13*s14*s24 - 
      denom(1/4*s12^2)*mt^5*s12*s13*s14*s23 + denom(1/4*s12^2)*mt^7*s12*s23*
      s24 + 1/2*denom(1/4*s12^2)*mt^7*s12*s23^2 + 1/2*denom(1/4*s12^2)*mt^7*
      s12*s14*s24 + denom(1/4*s12^2)*mt^7*s12*s14*s23 + 1/2*denom(1/4*s12^2)*
      mt^7*s12*s13*s24 + denom(1/4*s12^2)*mt^7*s12*s13*s23 + 1/2*denom(1/4*
      s12^2)*mt^7*s12*s13*s14 - 1/2*denom(1/4*s12^2)*mt^9*s12*s24 - denom(1/4*
      s12^2)*mt^9*s12*s23 - 1/2*denom(1/4*s12^2)*mt^9*s12*s14 - 1/2*denom(1/4*
      s12^2)*mt^9*s12*s13 + 1/2*denom(1/4*s12^2)*mt^11*s12;
 
 .sort
id KMatrix(15,12) =  mt^3*s12*s23*s24 + mt^3*s12*s23^2 + mt^3*s12*s14*s23 + 
      mt^3*s12*s13*s23 + mt^3*s12^2*s23 - mt^3*mh^2*s12*s23 - mt^5*s12*s24 - 3
      *mt^5*s12*s23 - mt^5*s12*s14 - mt^5*s12*s13 - mt^5*s12^2 + mt^5*mh^2*s12
       + 2*mt^7*s12 - 1/2*denom(1/2*s12)*mt*s12*s14*s23*s24^2 - 1/2*denom(1/2*
      s12)*mt*s12*s14*s23^2*s24 - 1/2*denom(1/2*s12)*mt*s12*s14^2*s23*s24 - 1/
      2*denom(1/2*s12)*mt*s12*s13*s14*s23*s24 - 1/2*denom(1/2*s12)*mt*s12^2*
      s14*s23*s24 + 1/2*denom(1/2*s12)*mt*mh^2*s12*s14*s23*s24 + 1/2*denom(1/2
      *s12)*mt^3*s12*s23*s24^2 + 1/2*denom(1/2*s12)*mt^3*s12*s23^2*s24 + 1/2*
      denom(1/2*s12)*mt^3*s12*s14*s24^2 + 5/2*denom(1/2*s12)*mt^3*s12*s14*s23*
      s24 + denom(1/2*s12)*mt^3*s12*s14*s23^2 + 1/2*denom(1/2*s12)*mt^3*s12*
      s14^2*s24 + 1/2*denom(1/2*s12)*mt^3*s12*s14^2*s23 + denom(1/2*s12)*mt^3*
      s12*s13*s23*s24 + 1/2*denom(1/2*s12)*mt^3*s12*s13*s14*s24 + 1/2*denom(1/
      2*s12)*mt^3*s12*s13*s14*s23 + 1/2*denom(1/2*s12)*mt^3*s12^2*s23*s24 + 1/
      2*denom(1/2*s12)*mt^3*s12^2*s14*s24 + 1/2*denom(1/2*s12)*mt^3*s12^2*s14*
      s23 - 1/2*denom(1/2*s12)*mt^3*mh^2*s12*s23*s24 - 1/2*denom(1/2*s12)*mt^3
      *mh^2*s12*s14*s24 - 1/2*denom(1/2*s12)*mt^3*mh^2*s12*s14*s23 - 1/2*
      denom(1/2*s12)*mt^5*s12*s24^2 - 5/2*denom(1/2*s12)*mt^5*s12*s23*s24 - 
      denom(1/2*s12)*mt^5*s12*s23^2 - 2*denom(1/2*s12)*mt^5*s12*s14*s24 - 3*
      denom(1/2*s12)*mt^5*s12*s14*s23 - 1/2*denom(1/2*s12)*mt^5*s12*s14^2 - 
      denom(1/2*s12)*mt^5*s12*s13*s24 - denom(1/2*s12)*mt^5*s12*s13*s23 - 1/2*
      denom(1/2*s12)*mt^5*s12*s13*s14 - 1/2*denom(1/2*s12)*mt^5*s12^2*s24 - 1/
      2*denom(1/2*s12)*mt^5*s12^2*s23 - 1/2*denom(1/2*s12)*mt^5*s12^2*s14 + 1/
      2*denom(1/2*s12)*mt^5*mh^2*s12*s24 + 1/2*denom(1/2*s12)*mt^5*mh^2*s12*
      s23 + 1/2*denom(1/2*s12)*mt^5*mh^2*s12*s14 + 2*denom(1/2*s12)*mt^7*s12*
      s24 + 3*denom(1/2*s12)*mt^7*s12*s23 + 2*denom(1/2*s12)*mt^7*s12*s14 + 
      denom(1/2*s12)*mt^7*s12*s13 + 1/2*denom(1/2*s12)*mt^7*s12^2 - 1/2*denom(
      1/2*s12)*mt^7*mh^2*s12 - 2*denom(1/2*s12)*mt^9*s12 - 1/4*denom(1/4*s12^2
      )*mt*s12*s14^2*s23^2*s24 - 1/4*denom(1/4*s12^2)*mt*s12*s13*s14*s23*s24^2
       + 1/4*denom(1/4*s12^2)*mt^3*s12*s14*s23*s24^2 + 1/2*denom(1/4*s12^2)*
      mt^3*s12*s14*s23^2*s24 + 1/2*denom(1/4*s12^2)*mt^3*s12*s14^2*s23*s24 + 1/
      4*denom(1/4*s12^2)*mt^3*s12*s14^2*s23^2 + 1/4*denom(1/4*s12^2)*mt^3*s12*
      s13*s23*s24^2 + 1/4*denom(1/4*s12^2)*mt^3*s12*s13*s14*s24^2 + 1/2*denom(
      1/4*s12^2)*mt^3*s12*s13*s14*s23*s24 - 1/4*denom(1/4*s12^2)*mt^5*s12*s23*
      s24^2 - 1/4*denom(1/4*s12^2)*mt^5*s12*s23^2*s24 - 1/4*denom(1/4*s12^2)*
      mt^5*s12*s14*s24^2 - 3/2*denom(1/4*s12^2)*mt^5*s12*s14*s23*s24 - 1/2*
      denom(1/4*s12^2)*mt^5*s12*s14*s23^2 - 1/4*denom(1/4*s12^2)*mt^5*s12*
      s14^2*s24 - 1/2*denom(1/4*s12^2)*mt^5*s12*s14^2*s23 - 1/4*denom(1/4*
      s12^2)*mt^5*s12*s13*s24^2 - 1/2*denom(1/4*s12^2)*mt^5*s12*s13*s23*s24 - 
      1/2*denom(1/4*s12^2)*mt^5*s12*s13*s14*s24 - 1/4*denom(1/4*s12^2)*mt^5*
      s12*s13*s14*s23 + 1/4*denom(1/4*s12^2)*mt^7*s12*s24^2 + denom(1/4*s12^2)
      *mt^7*s12*s23*s24 + 1/4*denom(1/4*s12^2)*mt^7*s12*s23^2 + denom(1/4*
      s12^2)*mt^7*s12*s14*s24 + 5/4*denom(1/4*s12^2)*mt^7*s12*s14*s23 + 1/4*
      denom(1/4*s12^2)*mt^7*s12*s14^2 + 1/2*denom(1/4*s12^2)*mt^7*s12*s13*s24
       + 1/4*denom(1/4*s12^2)*mt^7*s12*s13*s23 + 1/4*denom(1/4*s12^2)*mt^7*s12
      *s13*s14 - 3/4*denom(1/4*s12^2)*mt^9*s12*s24 - 3/4*denom(1/4*s12^2)*mt^9
      *s12*s23 - 3/4*denom(1/4*s12^2)*mt^9*s12*s14 - 1/4*denom(1/4*s12^2)*mt^9
      *s12*s13 + 1/2*denom(1/4*s12^2)*mt^11*s12;
 
 .sort
id KMatrix(15,13) =   - mt^2*s12*s14*s23*s24 - mt^2*s12*s14*s23^2 - mt^2*s12*
      s14^2*s23 - mt^2*s12*s13*s14*s23 - mt^2*s12^2*s14*s23 + mt^2*mh^2*s12*
      s14*s23 + mt^4*s12*s23*s24 + mt^4*s12*s23^2 + mt^4*s12*s14*s24 + 4*mt^4*
      s12*s14*s23 + mt^4*s12*s14^2 + mt^4*s12*s13*s23 + mt^4*s12*s13*s14 + 
      mt^4*s12^2*s23 + mt^4*s12^2*s14 - mt^4*mh^2*s12*s23 - mt^4*mh^2*s12*s14
       - mt^6*s12*s24 - 3*mt^6*s12*s23 - 3*mt^6*s12*s14 - mt^6*s12*s13 - mt^6*
      s12^2 + mt^6*mh^2*s12 + 2*mt^8*s12 + 1/2*denom(1/2*s12)*s12*s13*s14*
      s23^2*s24 + 1/2*denom(1/2*s12)*s12*s13*s14*s23^3 + 1/2*denom(1/2*s12)*
      s12*s13*s14^2*s23^2 + 1/2*denom(1/2*s12)*s12*s13^2*s14*s23^2 + 1/2*
      denom(1/2*s12)*s12^2*s13*s14*s23^2 - 1/2*denom(1/2*s12)*mh^2*s12*s13*s14
      *s23^2 - 1/2*denom(1/2*s12)*mt^2*s12*s14*s23^2*s24 - 1/2*denom(1/2*s12)*
      mt^2*s12*s14*s23^3 - denom(1/2*s12)*mt^2*s12*s14^2*s23^2 - 1/2*denom(1/2
      *s12)*mt^2*s12*s13*s23^2*s24 - 1/2*denom(1/2*s12)*mt^2*s12*s13*s23^3 - 3/
      2*denom(1/2*s12)*mt^2*s12*s13*s14*s23*s24 - 3*denom(1/2*s12)*mt^2*s12*
      s13*s14*s23^2 - denom(1/2*s12)*mt^2*s12*s13*s14^2*s23 - 1/2*denom(1/2*
      s12)*mt^2*s12*s13^2*s23^2 - denom(1/2*s12)*mt^2*s12*s13^2*s14*s23 - 1/2*
      denom(1/2*s12)*mt^2*s12^2*s14*s23^2 - 1/2*denom(1/2*s12)*mt^2*s12^2*s13*
      s23^2 - denom(1/2*s12)*mt^2*s12^2*s13*s14*s23 + 1/2*denom(1/2*s12)*mt^2*
      mh^2*s12*s14*s23^2 + 1/2*denom(1/2*s12)*mt^2*mh^2*s12*s13*s23^2 + denom(
      1/2*s12)*mt^2*mh^2*s12*s13*s14*s23 + 1/2*denom(1/2*s12)*mt^4*s12*s23^2*
      s24 + 1/2*denom(1/2*s12)*mt^4*s12*s23^3 + 3/2*denom(1/2*s12)*mt^4*s12*
      s14*s23*s24 + 7/2*denom(1/2*s12)*mt^4*s12*s14*s23^2 + 2*denom(1/2*s12)*
      mt^4*s12*s14^2*s23 + 3/2*denom(1/2*s12)*mt^4*s12*s13*s23*s24 + 5/2*
      denom(1/2*s12)*mt^4*s12*s13*s23^2 + denom(1/2*s12)*mt^4*s12*s13*s14*s24
       + 5*denom(1/2*s12)*mt^4*s12*s13*s14*s23 + 1/2*denom(1/2*s12)*mt^4*s12*
      s13*s14^2 + denom(1/2*s12)*mt^4*s12*s13^2*s23 + 1/2*denom(1/2*s12)*mt^4*
      s12*s13^2*s14 + 1/2*denom(1/2*s12)*mt^4*s12^2*s23^2 + denom(1/2*s12)*
      mt^4*s12^2*s14*s23 + denom(1/2*s12)*mt^4*s12^2*s13*s23 + 1/2*denom(1/2*
      s12)*mt^4*s12^2*s13*s14 - 1/2*denom(1/2*s12)*mt^4*mh^2*s12*s23^2 - 
      denom(1/2*s12)*mt^4*mh^2*s12*s14*s23 - denom(1/2*s12)*mt^4*mh^2*s12*s13*
      s23 - 1/2*denom(1/2*s12)*mt^4*mh^2*s12*s13*s14 - 3/2*denom(1/2*s12)*mt^6
      *s12*s23*s24 - 5/2*denom(1/2*s12)*mt^6*s12*s23^2 - denom(1/2*s12)*mt^6*
      s12*s14*s24 - 6*denom(1/2*s12)*mt^6*s12*s14*s23 - denom(1/2*s12)*mt^6*
      s12*s14^2 - denom(1/2*s12)*mt^6*s12*s13*s24 - 4*denom(1/2*s12)*mt^6*s12*
      s13*s23 - 5/2*denom(1/2*s12)*mt^6*s12*s13*s14 - 1/2*denom(1/2*s12)*mt^6*
      s12*s13^2 - denom(1/2*s12)*mt^6*s12^2*s23 - 1/2*denom(1/2*s12)*mt^6*
      s12^2*s14 - 1/2*denom(1/2*s12)*mt^6*s12^2*s13 + denom(1/2*s12)*mt^6*mh^2
      *s12*s23 + 1/2*denom(1/2*s12)*mt^6*mh^2*s12*s14 + 1/2*denom(1/2*s12)*
      mt^6*mh^2*s12*s13 + denom(1/2*s12)*mt^8*s12*s24 + 4*denom(1/2*s12)*mt^8*
      s12*s23 + 3*denom(1/2*s12)*mt^8*s12*s14 + 2*denom(1/2*s12)*mt^8*s12*s13
       + 1/2*denom(1/2*s12)*mt^8*s12^2 - 1/2*denom(1/2*s12)*mt^8*mh^2*s12 - 2*
      denom(1/2*s12)*mt^10*s12 + 1/4*denom(1/4*s12^2)*s12*s13*s14^2*s23^3 + 1/
      4*denom(1/4*s12^2)*s12*s13^2*s14*s23^2*s24 - 1/4*denom(1/4*s12^2)*mt^2*
      s12*s14^2*s23^3 - 1/2*denom(1/4*s12^2)*mt^2*s12*s13*s14*s23^2*s24 - 1/2*
      denom(1/4*s12^2)*mt^2*s12*s13*s14*s23^3 - 3/4*denom(1/4*s12^2)*mt^2*s12*
      s13*s14^2*s23^2 - 1/4*denom(1/4*s12^2)*mt^2*s12*s13^2*s23^2*s24 - 1/2*
      denom(1/4*s12^2)*mt^2*s12*s13^2*s14*s23*s24 - 1/4*denom(1/4*s12^2)*mt^2*
      s12*s13^2*s14*s23^2 + 1/4*denom(1/4*s12^2)*mt^4*s12*s14*s23^2*s24 + 1/2*
      denom(1/4*s12^2)*mt^4*s12*s14*s23^3 + 3/4*denom(1/4*s12^2)*mt^4*s12*
      s14^2*s23^2 + 1/2*denom(1/4*s12^2)*mt^4*s12*s13*s23^2*s24 + 1/4*denom(1/
      4*s12^2)*mt^4*s12*s13*s23^3 + denom(1/4*s12^2)*mt^4*s12*s13*s14*s23*s24
       + 2*denom(1/4*s12^2)*mt^4*s12*s13*s14*s23^2 + 3/4*denom(1/4*s12^2)*mt^4
      *s12*s13*s14^2*s23 + 1/2*denom(1/4*s12^2)*mt^4*s12*s13^2*s23*s24 + 1/4*
      denom(1/4*s12^2)*mt^4*s12*s13^2*s23^2 + 1/4*denom(1/4*s12^2)*mt^4*s12*
      s13^2*s14*s24 + 1/2*denom(1/4*s12^2)*mt^4*s12*s13^2*s14*s23 - 1/4*denom(
      1/4*s12^2)*mt^6*s12*s23^2*s24 - 1/4*denom(1/4*s12^2)*mt^6*s12*s23^3 - 1/
      2*denom(1/4*s12^2)*mt^6*s12*s14*s23*s24 - 7/4*denom(1/4*s12^2)*mt^6*s12*
      s14*s23^2 - 3/4*denom(1/4*s12^2)*mt^6*s12*s14^2*s23 - denom(1/4*s12^2)*
      mt^6*s12*s13*s23*s24 - 5/4*denom(1/4*s12^2)*mt^6*s12*s13*s23^2 - 1/2*
      denom(1/4*s12^2)*mt^6*s12*s13*s14*s24 - 5/2*denom(1/4*s12^2)*mt^6*s12*
      s13*s14*s23 - 1/4*denom(1/4*s12^2)*mt^6*s12*s13*s14^2 - 1/4*denom(1/4*
      s12^2)*mt^6*s12*s13^2*s24 - 1/2*denom(1/4*s12^2)*mt^6*s12*s13^2*s23 - 1/
      4*denom(1/4*s12^2)*mt^6*s12*s13^2*s14 + 1/2*denom(1/4*s12^2)*mt^8*s12*
      s23*s24 + denom(1/4*s12^2)*mt^8*s12*s23^2 + 1/4*denom(1/4*s12^2)*mt^8*
      s12*s14*s24 + 2*denom(1/4*s12^2)*mt^8*s12*s14*s23 + 1/4*denom(1/4*s12^2)
      *mt^8*s12*s14^2 + 1/2*denom(1/4*s12^2)*mt^8*s12*s13*s24 + 7/4*denom(1/4*
      s12^2)*mt^8*s12*s13*s23 + denom(1/4*s12^2)*mt^8*s12*s13*s14 + 1/4*denom(
      1/4*s12^2)*mt^8*s12*s13^2 - 1/4*denom(1/4*s12^2)*mt^10*s12*s24 - 5/4*
      denom(1/4*s12^2)*mt^10*s12*s23 - 3/4*denom(1/4*s12^2)*mt^10*s12*s14 - 3/
      4*denom(1/4*s12^2)*mt^10*s12*s13 + 1/2*denom(1/4*s12^2)*mt^12*s12;
 
 .sort
id KMatrix(15,14) =  1/2*s12*s14*s23*s24^2 + s12*s14*s23^2*s24 + 1/2*s12*s14*
      s23^3 + s12*s14^2*s23*s24 + s12*s14^2*s23^2 + 1/2*s12*s14^3*s23 + s12*
      s13*s14*s23*s24 + s12*s13*s14*s23^2 + s12*s13*s14^2*s23 + 1/2*s12*s13^2*
      s14*s23 + s12^2*s14*s23*s24 + s12^2*s14*s23^2 + s12^2*s14^2*s23 + s12^2*
      s13*s14*s23 + 1/2*s12^3*s14*s23 - mh^2*s12*s14*s23*s24 - mh^2*s12*s14*
      s23^2 - mh^2*s12*s14^2*s23 - mh^2*s12*s13*s14*s23 - mh^2*s12^2*s14*s23
       + 1/2*mh^4*s12*s14*s23 - 1/2*mt^2*s12*s23*s24^2 - mt^2*s12*s23^2*s24 - 
      1/2*mt^2*s12*s23^3 - 1/2*mt^2*s12*s14*s24^2 - 4*mt^2*s12*s14*s23*s24 - 7/
      2*mt^2*s12*s14*s23^2 - mt^2*s12*s14^2*s24 - 7/2*mt^2*s12*s14^2*s23 - 1/2
      *mt^2*s12*s14^3 - mt^2*s12*s13*s23*s24 - mt^2*s12*s13*s23^2 - mt^2*s12*
      s13*s14*s24 - 4*mt^2*s12*s13*s14*s23 - mt^2*s12*s13*s14^2 - 1/2*mt^2*s12
      *s13^2*s23 - 1/2*mt^2*s12*s13^2*s14 - mt^2*s12^2*s23*s24 - mt^2*s12^2*
      s23^2 - mt^2*s12^2*s14*s24 - 4*mt^2*s12^2*s14*s23 - mt^2*s12^2*s14^2 - 
      mt^2*s12^2*s13*s23 - mt^2*s12^2*s13*s14 - 1/2*mt^2*s12^3*s23 - 1/2*mt^2*
      s12^3*s14 + mt^2*mh^2*s12*s23*s24 + mt^2*mh^2*s12*s23^2 + mt^2*mh^2*s12*
      s14*s24 + 4*mt^2*mh^2*s12*s14*s23 + mt^2*mh^2*s12*s14^2 + mt^2*mh^2*s12*
      s13*s23 + mt^2*mh^2*s12*s13*s14 + mt^2*mh^2*s12^2*s23 + mt^2*mh^2*s12^2*
      s14 - 1/2*mt^2*mh^4*s12*s23 - 1/2*mt^2*mh^4*s12*s14 + 1/2*mt^4*s12*s24^2
       + 3*mt^4*s12*s23*s24 + 5/2*mt^4*s12*s23^2 + 3*mt^4*s12*s14*s24 + 7*mt^4
      *s12*s14*s23 + 5/2*mt^4*s12*s14^2 + mt^4*s12*s13*s24 + 3*mt^4*s12*s13*
      s23 + 3*mt^4*s12*s13*s14 + 1/2*mt^4*s12*s13^2 + mt^4*s12^2*s24 + 3*mt^4*
      s12^2*s23 + 3*mt^4*s12^2*s14 + mt^4*s12^2*s13 + 1/2*mt^4*s12^3 - mt^4*
      mh^2*s12*s24 - 3*mt^4*mh^2*s12*s23 - 3*mt^4*mh^2*s12*s14 - mt^4*mh^2*s12
      *s13 - mt^4*mh^2*s12^2 + 1/2*mt^4*mh^4*s12 - 2*mt^6*s12*s24 - 4*mt^6*s12
      *s23 - 4*mt^6*s12*s14 - 2*mt^6*s12*s13 - 2*mt^6*s12^2 + 2*mt^6*mh^2*s12
       + 2*mt^8*s12 + 1/2*denom(1/2*s12)*s12*s14^2*s23^2*s24 + 1/2*denom(1/2*
      s12)*s12*s14^2*s23^3 + 1/2*denom(1/2*s12)*s12*s14^3*s23^2 + 1/2*denom(1/
      2*s12)*s12*s13*s14*s23*s24^2 + 1/2*denom(1/2*s12)*s12*s13*s14*s23^2*s24
       + 1/2*denom(1/2*s12)*s12*s13*s14^2*s23*s24 + 1/2*denom(1/2*s12)*s12*s13
      *s14^2*s23^2 + 1/2*denom(1/2*s12)*s12*s13^2*s14*s23*s24 + 1/2*denom(1/2*
      s12)*s12^2*s14^2*s23^2 + 1/2*denom(1/2*s12)*s12^2*s13*s14*s23*s24 - 1/2*
      denom(1/2*s12)*mh^2*s12*s14^2*s23^2 - 1/2*denom(1/2*s12)*mh^2*s12*s13*
      s14*s23*s24 - 1/2*denom(1/2*s12)*mt^2*s12*s14*s23*s24^2 - 3/2*denom(1/2*
      s12)*mt^2*s12*s14*s23^2*s24 - denom(1/2*s12)*mt^2*s12*s14*s23^3 - 3/2*
      denom(1/2*s12)*mt^2*s12*s14^2*s23*s24 - 3*denom(1/2*s12)*mt^2*s12*s14^2*
      s23^2 - denom(1/2*s12)*mt^2*s12*s14^3*s23 - 1/2*denom(1/2*s12)*mt^2*s12*
      s13*s23*s24^2 - 1/2*denom(1/2*s12)*mt^2*s12*s13*s23^2*s24 - 1/2*denom(1/
      2*s12)*mt^2*s12*s13*s14*s24^2 - 3*denom(1/2*s12)*mt^2*s12*s13*s14*s23*
      s24 - 3/2*denom(1/2*s12)*mt^2*s12*s13*s14*s23^2 - 1/2*denom(1/2*s12)*
      mt^2*s12*s13*s14^2*s24 - 3/2*denom(1/2*s12)*mt^2*s12*s13*s14^2*s23 - 1/2
      *denom(1/2*s12)*mt^2*s12*s13^2*s23*s24 - 1/2*denom(1/2*s12)*mt^2*s12*
      s13^2*s14*s24 - 1/2*denom(1/2*s12)*mt^2*s12*s13^2*s14*s23 - 1/2*denom(1/
      2*s12)*mt^2*s12^2*s14*s23*s24 - denom(1/2*s12)*mt^2*s12^2*s14*s23^2 - 
      denom(1/2*s12)*mt^2*s12^2*s14^2*s23 - 1/2*denom(1/2*s12)*mt^2*s12^2*s13*
      s23*s24 - 1/2*denom(1/2*s12)*mt^2*s12^2*s13*s14*s24 - 1/2*denom(1/2*s12)
      *mt^2*s12^2*s13*s14*s23 + 1/2*denom(1/2*s12)*mt^2*mh^2*s12*s14*s23*s24
       + denom(1/2*s12)*mt^2*mh^2*s12*s14*s23^2 + denom(1/2*s12)*mt^2*mh^2*s12
      *s14^2*s23 + 1/2*denom(1/2*s12)*mt^2*mh^2*s12*s13*s23*s24 + 1/2*denom(1/
      2*s12)*mt^2*mh^2*s12*s13*s14*s24 + 1/2*denom(1/2*s12)*mt^2*mh^2*s12*s13*
      s14*s23 + 1/2*denom(1/2*s12)*mt^4*s12*s23*s24^2 + denom(1/2*s12)*mt^4*
      s12*s23^2*s24 + 1/2*denom(1/2*s12)*mt^4*s12*s23^3 + 1/2*denom(1/2*s12)*
      mt^4*s12*s14*s24^2 + 9/2*denom(1/2*s12)*mt^4*s12*s14*s23*s24 + 5*denom(1/
      2*s12)*mt^4*s12*s14*s23^2 + denom(1/2*s12)*mt^4*s12*s14^2*s24 + 5*denom(
      1/2*s12)*mt^4*s12*s14^2*s23 + 1/2*denom(1/2*s12)*mt^4*s12*s14^3 + 1/2*
      denom(1/2*s12)*mt^4*s12*s13*s24^2 + 5/2*denom(1/2*s12)*mt^4*s12*s13*s23*
      s24 + denom(1/2*s12)*mt^4*s12*s13*s23^2 + 5/2*denom(1/2*s12)*mt^4*s12*
      s13*s14*s24 + 9/2*denom(1/2*s12)*mt^4*s12*s13*s14*s23 + denom(1/2*s12)*
      mt^4*s12*s13*s14^2 + 1/2*denom(1/2*s12)*mt^4*s12*s13^2*s24 + 1/2*denom(1/
      2*s12)*mt^4*s12*s13^2*s23 + 1/2*denom(1/2*s12)*mt^4*s12*s13^2*s14 + 1/2*
      denom(1/2*s12)*mt^4*s12^2*s23*s24 + 1/2*denom(1/2*s12)*mt^4*s12^2*s23^2
       + 1/2*denom(1/2*s12)*mt^4*s12^2*s14*s24 + 5/2*denom(1/2*s12)*mt^4*s12^2
      *s14*s23 + 1/2*denom(1/2*s12)*mt^4*s12^2*s14^2 + 1/2*denom(1/2*s12)*mt^4
      *s12^2*s13*s24 + 1/2*denom(1/2*s12)*mt^4*s12^2*s13*s23 + 1/2*denom(1/2*
      s12)*mt^4*s12^2*s13*s14 - 1/2*denom(1/2*s12)*mt^4*mh^2*s12*s23*s24 - 1/2
      *denom(1/2*s12)*mt^4*mh^2*s12*s23^2 - 1/2*denom(1/2*s12)*mt^4*mh^2*s12*
      s14*s24 - 5/2*denom(1/2*s12)*mt^4*mh^2*s12*s14*s23 - 1/2*denom(1/2*s12)*
      mt^4*mh^2*s12*s14^2 - 1/2*denom(1/2*s12)*mt^4*mh^2*s12*s13*s24 - 1/2*
      denom(1/2*s12)*mt^4*mh^2*s12*s13*s23 - 1/2*denom(1/2*s12)*mt^4*mh^2*s12*
      s13*s14 - 1/2*denom(1/2*s12)*mt^6*s12*s24^2 - 3*denom(1/2*s12)*mt^6*s12*
      s23*s24 - 5/2*denom(1/2*s12)*mt^6*s12*s23^2 - 3*denom(1/2*s12)*mt^6*s12*
      s14*s24 - 8*denom(1/2*s12)*mt^6*s12*s14*s23 - 5/2*denom(1/2*s12)*mt^6*
      s12*s14^2 - 2*denom(1/2*s12)*mt^6*s12*s13*s24 - 3*denom(1/2*s12)*mt^6*
      s12*s13*s23 - 3*denom(1/2*s12)*mt^6*s12*s13*s14 - 1/2*denom(1/2*s12)*
      mt^6*s12*s13^2 - 1/2*denom(1/2*s12)*mt^6*s12^2*s24 - 3/2*denom(1/2*s12)*
      mt^6*s12^2*s23 - 3/2*denom(1/2*s12)*mt^6*s12^2*s14 - 1/2*denom(1/2*s12)*
      mt^6*s12^2*s13 + 1/2*denom(1/2*s12)*mt^6*mh^2*s12*s24 + 3/2*denom(1/2*
      s12)*mt^6*mh^2*s12*s23 + 3/2*denom(1/2*s12)*mt^6*mh^2*s12*s14 + 1/2*
      denom(1/2*s12)*mt^6*mh^2*s12*s13 + 2*denom(1/2*s12)*mt^8*s12*s24 + 4*
      denom(1/2*s12)*mt^8*s12*s23 + 4*denom(1/2*s12)*mt^8*s12*s14 + 2*denom(1/
      2*s12)*mt^8*s12*s13 + denom(1/2*s12)*mt^8*s12^2 - denom(1/2*s12)*mt^8*
      mh^2*s12 - 2*denom(1/2*s12)*mt^10*s12 + 1/8*denom(1/4*s12^2)*s12*s14^3*
      s23^3 + 1/4*denom(1/4*s12^2)*s12*s13*s14^2*s23^2*s24 + 1/8*denom(1/4*
      s12^2)*s12*s13^2*s14*s23*s24^2 - 1/4*denom(1/4*s12^2)*mt^2*s12*s14^2*
      s23^2*s24 - 3/8*denom(1/4*s12^2)*mt^2*s12*s14^2*s23^3 - 3/8*denom(1/4*
      s12^2)*mt^2*s12*s14^3*s23^2 - 1/4*denom(1/4*s12^2)*mt^2*s12*s13*s14*s23*
      s24^2 - 1/2*denom(1/4*s12^2)*mt^2*s12*s13*s14*s23^2*s24 - 1/2*denom(1/4*
      s12^2)*mt^2*s12*s13*s14^2*s23*s24 - 1/4*denom(1/4*s12^2)*mt^2*s12*s13*
      s14^2*s23^2 - 1/8*denom(1/4*s12^2)*mt^2*s12*s13^2*s23*s24^2 - 1/8*denom(
      1/4*s12^2)*mt^2*s12*s13^2*s14*s24^2 - 1/4*denom(1/4*s12^2)*mt^2*s12*
      s13^2*s14*s23*s24 + 1/8*denom(1/4*s12^2)*mt^4*s12*s14*s23*s24^2 + 1/2*
      denom(1/4*s12^2)*mt^4*s12*s14*s23^2*s24 + 3/8*denom(1/4*s12^2)*mt^4*s12*
      s14*s23^3 + 1/2*denom(1/4*s12^2)*mt^4*s12*s14^2*s23*s24 + 11/8*denom(1/4
      *s12^2)*mt^4*s12*s14^2*s23^2 + 3/8*denom(1/4*s12^2)*mt^4*s12*s14^3*s23
       + 1/4*denom(1/4*s12^2)*mt^4*s12*s13*s23*s24^2 + 1/4*denom(1/4*s12^2)*
      mt^4*s12*s13*s23^2*s24 + 1/4*denom(1/4*s12^2)*mt^4*s12*s13*s14*s24^2 + 3/
      2*denom(1/4*s12^2)*mt^4*s12*s13*s14*s23*s24 + 1/2*denom(1/4*s12^2)*mt^4*
      s12*s13*s14*s23^2 + 1/4*denom(1/4*s12^2)*mt^4*s12*s13*s14^2*s24 + 1/2*
      denom(1/4*s12^2)*mt^4*s12*s13*s14^2*s23 + 1/8*denom(1/4*s12^2)*mt^4*s12*
      s13^2*s24^2 + 1/4*denom(1/4*s12^2)*mt^4*s12*s13^2*s23*s24 + 1/4*denom(1/
      4*s12^2)*mt^4*s12*s13^2*s14*s24 + 1/8*denom(1/4*s12^2)*mt^4*s12*s13^2*
      s14*s23 - 1/8*denom(1/4*s12^2)*mt^6*s12*s23*s24^2 - 1/4*denom(1/4*s12^2)
      *mt^6*s12*s23^2*s24 - 1/8*denom(1/4*s12^2)*mt^6*s12*s23^3 - 1/8*denom(1/
      4*s12^2)*mt^6*s12*s14*s24^2 - 5/4*denom(1/4*s12^2)*mt^6*s12*s14*s23*s24
       - 13/8*denom(1/4*s12^2)*mt^6*s12*s14*s23^2 - 1/4*denom(1/4*s12^2)*mt^6*
      s12*s14^2*s24 - 13/8*denom(1/4*s12^2)*mt^6*s12*s14^2*s23 - 1/8*denom(1/4
      *s12^2)*mt^6*s12*s14^3 - 1/4*denom(1/4*s12^2)*mt^6*s12*s13*s24^2 - 
      denom(1/4*s12^2)*mt^6*s12*s13*s23*s24 - 1/4*denom(1/4*s12^2)*mt^6*s12*
      s13*s23^2 - denom(1/4*s12^2)*mt^6*s12*s13*s14*s24 - 5/4*denom(1/4*s12^2)
      *mt^6*s12*s13*s14*s23 - 1/4*denom(1/4*s12^2)*mt^6*s12*s13*s14^2 - 1/4*
      denom(1/4*s12^2)*mt^6*s12*s13^2*s24 - 1/8*denom(1/4*s12^2)*mt^6*s12*
      s13^2*s23 - 1/8*denom(1/4*s12^2)*mt^6*s12*s13^2*s14 + 1/8*denom(1/4*
      s12^2)*mt^8*s12*s24^2 + 3/4*denom(1/4*s12^2)*mt^8*s12*s23*s24 + 5/8*
      denom(1/4*s12^2)*mt^8*s12*s23^2 + 3/4*denom(1/4*s12^2)*mt^8*s12*s14*s24
       + 9/4*denom(1/4*s12^2)*mt^8*s12*s14*s23 + 5/8*denom(1/4*s12^2)*mt^8*s12
      *s14^2 + 3/4*denom(1/4*s12^2)*mt^8*s12*s13*s24 + 3/4*denom(1/4*s12^2)*
      mt^8*s12*s13*s23 + 3/4*denom(1/4*s12^2)*mt^8*s12*s13*s14 + 1/8*denom(1/4
      *s12^2)*mt^8*s12*s13^2 - 1/2*denom(1/4*s12^2)*mt^10*s12*s24 - denom(1/4*
      s12^2)*mt^10*s12*s23 - denom(1/4*s12^2)*mt^10*s12*s14 - 1/2*denom(1/4*
      s12^2)*mt^10*s12*s13 + 1/2*denom(1/4*s12^2)*mt^12*s12;
 
 .sort
id KMatrix(15,15) =  2*mt^4*s12*s14*s23 - 2*mt^6*s12*s23 - 2*mt^6*s12*s14 + 2*
      mt^8*s12 - denom(1/2*s12)*mt^2*s12*s14^2*s23*s24 - denom(1/2*s12)*mt^2*
      s12*s13*s14*s23^2 + 2*denom(1/2*s12)*mt^4*s12*s14*s23*s24 + denom(1/2*
      s12)*mt^4*s12*s14*s23^2 + denom(1/2*s12)*mt^4*s12*s14^2*s24 + denom(1/2*
      s12)*mt^4*s12*s14^2*s23 + denom(1/2*s12)*mt^4*s12*s13*s23^2 + 2*denom(1/
      2*s12)*mt^4*s12*s13*s14*s23 - denom(1/2*s12)*mt^6*s12*s23*s24 - denom(1/
      2*s12)*mt^6*s12*s23^2 - 2*denom(1/2*s12)*mt^6*s12*s14*s24 - 4*denom(1/2*
      s12)*mt^6*s12*s14*s23 - denom(1/2*s12)*mt^6*s12*s14^2 - 2*denom(1/2*s12)
      *mt^6*s12*s13*s23 - denom(1/2*s12)*mt^6*s12*s13*s14 + denom(1/2*s12)*
      mt^8*s12*s24 + 3*denom(1/2*s12)*mt^8*s12*s23 + 3*denom(1/2*s12)*mt^8*s12
      *s14 + denom(1/2*s12)*mt^8*s12*s13 - 2*denom(1/2*s12)*mt^10*s12 + 1/2*
      denom(1/4*s12^2)*s12*s13*s14^2*s23^2*s24 - 1/2*denom(1/4*s12^2)*mt^2*s12
      *s14^2*s23^2*s24 - denom(1/4*s12^2)*mt^2*s12*s13*s14*s23^2*s24 - denom(1/
      4*s12^2)*mt^2*s12*s13*s14^2*s23*s24 - 1/2*denom(1/4*s12^2)*mt^2*s12*s13*
      s14^2*s23^2 + denom(1/4*s12^2)*mt^4*s12*s14*s23^2*s24 + denom(1/4*s12^2)
      *mt^4*s12*s14^2*s23*s24 + 1/2*denom(1/4*s12^2)*mt^4*s12*s14^2*s23^2 + 1/
      2*denom(1/4*s12^2)*mt^4*s12*s13*s23^2*s24 + 2*denom(1/4*s12^2)*mt^4*s12*
      s13*s14*s23*s24 + denom(1/4*s12^2)*mt^4*s12*s13*s14*s23^2 + 1/2*denom(1/
      4*s12^2)*mt^4*s12*s13*s14^2*s24 + denom(1/4*s12^2)*mt^4*s12*s13*s14^2*
      s23 - 1/2*denom(1/4*s12^2)*mt^6*s12*s23^2*s24 - 2*denom(1/4*s12^2)*mt^6*
      s12*s14*s23*s24 - denom(1/4*s12^2)*mt^6*s12*s14*s23^2 - 1/2*denom(1/4*
      s12^2)*mt^6*s12*s14^2*s24 - denom(1/4*s12^2)*mt^6*s12*s14^2*s23 - denom(
      1/4*s12^2)*mt^6*s12*s13*s23*s24 - 1/2*denom(1/4*s12^2)*mt^6*s12*s13*
      s23^2 - denom(1/4*s12^2)*mt^6*s12*s13*s14*s24 - 2*denom(1/4*s12^2)*mt^6*
      s12*s13*s14*s23 - 1/2*denom(1/4*s12^2)*mt^6*s12*s13*s14^2 + denom(1/4*
      s12^2)*mt^8*s12*s23*s24 + 1/2*denom(1/4*s12^2)*mt^8*s12*s23^2 + denom(1/
      4*s12^2)*mt^8*s12*s14*s24 + 2*denom(1/4*s12^2)*mt^8*s12*s14*s23 + 1/2*
      denom(1/4*s12^2)*mt^8*s12*s14^2 + 1/2*denom(1/4*s12^2)*mt^8*s12*s13*s24
       + denom(1/4*s12^2)*mt^8*s12*s13*s23 + denom(1/4*s12^2)*mt^8*s12*s13*s14
       - 1/2*denom(1/4*s12^2)*mt^10*s12*s24 - denom(1/4*s12^2)*mt^10*s12*s23
       - denom(1/4*s12^2)*mt^10*s12*s14 - 1/2*denom(1/4*s12^2)*mt^10*s12*s13
       + 1/2*denom(1/4*s12^2)*mt^12*s12;
 
 .sort
id KMatrix(15,16) =   - mt^2*s12*s14*s23*s24 - mt^2*s12*s14*s23^2 - mt^2*s12*
      s14^2*s23 - mt^2*s12*s13*s14*s23 - mt^2*s12^2*s14*s23 + mt^2*mh^2*s12*
      s14*s23 + mt^4*s12*s23*s24 + mt^4*s12*s23^2 + mt^4*s12*s14*s24 + 4*mt^4*
      s12*s14*s23 + mt^4*s12*s14^2 + mt^4*s12*s13*s23 + mt^4*s12*s13*s14 + 
      mt^4*s12^2*s23 + mt^4*s12^2*s14 - mt^4*mh^2*s12*s23 - mt^4*mh^2*s12*s14
       - mt^6*s12*s24 - 3*mt^6*s12*s23 - 3*mt^6*s12*s14 - mt^6*s12*s13 - mt^6*
      s12^2 + mt^6*mh^2*s12 + 2*mt^8*s12 + 1/2*denom(1/2*s12)*s12*s14^2*s23*
      s24^2 + 1/2*denom(1/2*s12)*s12*s14^2*s23^2*s24 + 1/2*denom(1/2*s12)*s12*
      s14^3*s23*s24 + 1/2*denom(1/2*s12)*s12*s13*s14^2*s23*s24 + 1/2*denom(1/2
      *s12)*s12^2*s14^2*s23*s24 - 1/2*denom(1/2*s12)*mh^2*s12*s14^2*s23*s24 - 
      denom(1/2*s12)*mt^2*s12*s14*s23*s24^2 - denom(1/2*s12)*mt^2*s12*s14*
      s23^2*s24 - 1/2*denom(1/2*s12)*mt^2*s12*s14^2*s24^2 - 3*denom(1/2*s12)*
      mt^2*s12*s14^2*s23*s24 - denom(1/2*s12)*mt^2*s12*s14^2*s23^2 - 1/2*
      denom(1/2*s12)*mt^2*s12*s14^3*s24 - 1/2*denom(1/2*s12)*mt^2*s12*s14^3*
      s23 - 3/2*denom(1/2*s12)*mt^2*s12*s13*s14*s23*s24 - 1/2*denom(1/2*s12)*
      mt^2*s12*s13*s14^2*s24 - 1/2*denom(1/2*s12)*mt^2*s12*s13*s14^2*s23 - 
      denom(1/2*s12)*mt^2*s12^2*s14*s23*s24 - 1/2*denom(1/2*s12)*mt^2*s12^2*
      s14^2*s24 - 1/2*denom(1/2*s12)*mt^2*s12^2*s14^2*s23 + denom(1/2*s12)*
      mt^2*mh^2*s12*s14*s23*s24 + 1/2*denom(1/2*s12)*mt^2*mh^2*s12*s14^2*s24
       + 1/2*denom(1/2*s12)*mt^2*mh^2*s12*s14^2*s23 + 1/2*denom(1/2*s12)*mt^4*
      s12*s23*s24^2 + 1/2*denom(1/2*s12)*mt^4*s12*s23^2*s24 + denom(1/2*s12)*
      mt^4*s12*s14*s24^2 + 5*denom(1/2*s12)*mt^4*s12*s14*s23*s24 + 2*denom(1/2
      *s12)*mt^4*s12*s14*s23^2 + 5/2*denom(1/2*s12)*mt^4*s12*s14^2*s24 + 7/2*
      denom(1/2*s12)*mt^4*s12*s14^2*s23 + 1/2*denom(1/2*s12)*mt^4*s12*s14^3 + 
      denom(1/2*s12)*mt^4*s12*s13*s23*s24 + 3/2*denom(1/2*s12)*mt^4*s12*s13*
      s14*s24 + 3/2*denom(1/2*s12)*mt^4*s12*s13*s14*s23 + 1/2*denom(1/2*s12)*
      mt^4*s12*s13*s14^2 + 1/2*denom(1/2*s12)*mt^4*s12^2*s23*s24 + denom(1/2*
      s12)*mt^4*s12^2*s14*s24 + denom(1/2*s12)*mt^4*s12^2*s14*s23 + 1/2*denom(
      1/2*s12)*mt^4*s12^2*s14^2 - 1/2*denom(1/2*s12)*mt^4*mh^2*s12*s23*s24 - 
      denom(1/2*s12)*mt^4*mh^2*s12*s14*s24 - denom(1/2*s12)*mt^4*mh^2*s12*s14*
      s23 - 1/2*denom(1/2*s12)*mt^4*mh^2*s12*s14^2 - 1/2*denom(1/2*s12)*mt^6*
      s12*s24^2 - 5/2*denom(1/2*s12)*mt^6*s12*s23*s24 - denom(1/2*s12)*mt^6*
      s12*s23^2 - 4*denom(1/2*s12)*mt^6*s12*s14*s24 - 6*denom(1/2*s12)*mt^6*
      s12*s14*s23 - 5/2*denom(1/2*s12)*mt^6*s12*s14^2 - denom(1/2*s12)*mt^6*
      s12*s13*s24 - denom(1/2*s12)*mt^6*s12*s13*s23 - 3/2*denom(1/2*s12)*mt^6*
      s12*s13*s14 - 1/2*denom(1/2*s12)*mt^6*s12^2*s24 - 1/2*denom(1/2*s12)*
      mt^6*s12^2*s23 - denom(1/2*s12)*mt^6*s12^2*s14 + 1/2*denom(1/2*s12)*mt^6
      *mh^2*s12*s24 + 1/2*denom(1/2*s12)*mt^6*mh^2*s12*s23 + denom(1/2*s12)*
      mt^6*mh^2*s12*s14 + 2*denom(1/2*s12)*mt^8*s12*s24 + 3*denom(1/2*s12)*
      mt^8*s12*s23 + 4*denom(1/2*s12)*mt^8*s12*s14 + denom(1/2*s12)*mt^8*s12*
      s13 + 1/2*denom(1/2*s12)*mt^8*s12^2 - 1/2*denom(1/2*s12)*mt^8*mh^2*s12
       - 2*denom(1/2*s12)*mt^10*s12 + 1/4*denom(1/4*s12^2)*s12*s14^3*s23^2*s24
       + 1/4*denom(1/4*s12^2)*s12*s13*s14^2*s23*s24^2 - 1/4*denom(1/4*s12^2)*
      mt^2*s12*s14^2*s23*s24^2 - 3/4*denom(1/4*s12^2)*mt^2*s12*s14^2*s23^2*s24
       - 1/2*denom(1/4*s12^2)*mt^2*s12*s14^3*s23*s24 - 1/4*denom(1/4*s12^2)*
      mt^2*s12*s14^3*s23^2 - 1/2*denom(1/4*s12^2)*mt^2*s12*s13*s14*s23*s24^2
       - 1/4*denom(1/4*s12^2)*mt^2*s12*s13*s14^2*s24^2 - 1/2*denom(1/4*s12^2)*
      mt^2*s12*s13*s14^2*s23*s24 + 1/2*denom(1/4*s12^2)*mt^4*s12*s14*s23*s24^2
       + 3/4*denom(1/4*s12^2)*mt^4*s12*s14*s23^2*s24 + 1/4*denom(1/4*s12^2)*
      mt^4*s12*s14^2*s24^2 + 2*denom(1/4*s12^2)*mt^4*s12*s14^2*s23*s24 + 3/4*
      denom(1/4*s12^2)*mt^4*s12*s14^2*s23^2 + 1/4*denom(1/4*s12^2)*mt^4*s12*
      s14^3*s24 + 1/2*denom(1/4*s12^2)*mt^4*s12*s14^3*s23 + 1/4*denom(1/4*
      s12^2)*mt^4*s12*s13*s23*s24^2 + 1/2*denom(1/4*s12^2)*mt^4*s12*s13*s14*
      s24^2 + denom(1/4*s12^2)*mt^4*s12*s13*s14*s23*s24 + 1/2*denom(1/4*s12^2)
      *mt^4*s12*s13*s14^2*s24 + 1/4*denom(1/4*s12^2)*mt^4*s12*s13*s14^2*s23 - 
      1/4*denom(1/4*s12^2)*mt^6*s12*s23*s24^2 - 1/4*denom(1/4*s12^2)*mt^6*s12*
      s23^2*s24 - 1/2*denom(1/4*s12^2)*mt^6*s12*s14*s24^2 - 5/2*denom(1/4*
      s12^2)*mt^6*s12*s14*s23*s24 - 3/4*denom(1/4*s12^2)*mt^6*s12*s14*s23^2 - 
      5/4*denom(1/4*s12^2)*mt^6*s12*s14^2*s24 - 7/4*denom(1/4*s12^2)*mt^6*s12*
      s14^2*s23 - 1/4*denom(1/4*s12^2)*mt^6*s12*s14^3 - 1/4*denom(1/4*s12^2)*
      mt^6*s12*s13*s24^2 - 1/2*denom(1/4*s12^2)*mt^6*s12*s13*s23*s24 - denom(1/
      4*s12^2)*mt^6*s12*s13*s14*s24 - 1/2*denom(1/4*s12^2)*mt^6*s12*s13*s14*
      s23 - 1/4*denom(1/4*s12^2)*mt^6*s12*s13*s14^2 + 1/4*denom(1/4*s12^2)*
      mt^8*s12*s24^2 + denom(1/4*s12^2)*mt^8*s12*s23*s24 + 1/4*denom(1/4*s12^2
      )*mt^8*s12*s23^2 + 7/4*denom(1/4*s12^2)*mt^8*s12*s14*s24 + 2*denom(1/4*
      s12^2)*mt^8*s12*s14*s23 + denom(1/4*s12^2)*mt^8*s12*s14^2 + 1/2*denom(1/
      4*s12^2)*mt^8*s12*s13*s24 + 1/4*denom(1/4*s12^2)*mt^8*s12*s13*s23 + 1/2*
      denom(1/4*s12^2)*mt^8*s12*s13*s14 - 3/4*denom(1/4*s12^2)*mt^10*s12*s24
       - 3/4*denom(1/4*s12^2)*mt^10*s12*s23 - 5/4*denom(1/4*s12^2)*mt^10*s12*
      s14 - 1/4*denom(1/4*s12^2)*mt^10*s12*s13 + 1/2*denom(1/4*s12^2)*mt^12*
      s12;
 
 .sort
id KMatrix(15,17) =   - 1/2*s14*s23*s24 - 1/2*s14*s23^2 - 1/2*s14^2*s23 + 1/2*
      s13*s24^2 + 1/2*s13*s23*s24 + 1/2*s13*s14*s24 - 1/2*s13*s14*s23 + 1/2*
      s13^2*s24 + 1/2*s12*s24^2 + s12*s23*s24 + 1/2*s12*s23^2 + s12*s14*s24 + 
      1/2*s12*s14*s23 + 1/2*s12*s14^2 + 3/2*s12*s13*s24 + s12*s13*s23 + s12*
      s13*s14 + 1/2*s12*s13^2 + s12^2*s24 + s12^2*s23 + s12^2*s14 + s12^2*s13
       + 1/2*s12^3 + 1/2*mh^2*s14*s23 - 1/2*mh^2*s13*s24 - mh^2*s12*s24 - mh^2
      *s12*s23 - mh^2*s12*s14 - mh^2*s12*s13 - mh^2*s12^2 + 1/2*mh^4*s12 - 1/2
      *mt^2*s24^2 + 1/2*mt^2*s23^2 + 2*mt^2*s14*s23 + 1/2*mt^2*s14^2 - 2*mt^2*
      s13*s24 - 1/2*mt^2*s13^2 - 3/2*mt^2*s12*s24 - 1/2*mt^2*s12*s23 - 1/2*
      mt^2*s12*s14 - 3/2*mt^2*s12*s13 - mt^2*s12^2 + 1/2*mt^2*mh^2*s24 - 1/2*
      mt^2*mh^2*s23 - 1/2*mt^2*mh^2*s14 + 1/2*mt^2*mh^2*s13 + mt^2*mh^2*s12 + 
      mt^4*s24 - mt^4*s23 - mt^4*s14 + mt^4*s13 - 1/2*denom(1/2*s12)*s14^2*
      s23^2 + 1/2*denom(1/2*s12)*s13^2*s24^2 + 1/2*denom(1/2*s12)*s12*s14*s23*
      s24 + 1/2*denom(1/2*s12)*s12*s14*s23^2 + 1/2*denom(1/2*s12)*s12*s14^2*
      s23 + 1/2*denom(1/2*s12)*s12*s13*s24^2 + 1/2*denom(1/2*s12)*s12*s13*s23*
      s24 + 1/2*denom(1/2*s12)*s12*s13*s14*s24 + 1/2*denom(1/2*s12)*s12*s13*
      s14*s23 + 1/2*denom(1/2*s12)*s12*s13^2*s24 + 1/2*denom(1/2*s12)*s12^2*
      s14*s23 + 1/2*denom(1/2*s12)*s12^2*s13*s24 - 1/2*denom(1/2*s12)*mh^2*s12
      *s14*s23 - 1/2*denom(1/2*s12)*mh^2*s12*s13*s24 + denom(1/2*s12)*mt^2*s14
      *s23^2 + denom(1/2*s12)*mt^2*s14^2*s23 - denom(1/2*s12)*mt^2*s13*s24^2
       - denom(1/2*s12)*mt^2*s13^2*s24 - 1/2*denom(1/2*s12)*mt^2*s12*s24^2 - 
      denom(1/2*s12)*mt^2*s12*s23*s24 - 1/2*denom(1/2*s12)*mt^2*s12*s23^2 - 
      denom(1/2*s12)*mt^2*s12*s14*s24 - denom(1/2*s12)*mt^2*s12*s14*s23 - 1/2*
      denom(1/2*s12)*mt^2*s12*s14^2 - denom(1/2*s12)*mt^2*s12*s13*s24 - denom(
      1/2*s12)*mt^2*s12*s13*s23 - denom(1/2*s12)*mt^2*s12*s13*s14 - 1/2*denom(
      1/2*s12)*mt^2*s12*s13^2 - 1/2*denom(1/2*s12)*mt^2*s12^2*s24 - 1/2*denom(
      1/2*s12)*mt^2*s12^2*s23 - 1/2*denom(1/2*s12)*mt^2*s12^2*s14 - 1/2*denom(
      1/2*s12)*mt^2*s12^2*s13 + 1/2*denom(1/2*s12)*mt^2*mh^2*s12*s24 + 1/2*
      denom(1/2*s12)*mt^2*mh^2*s12*s23 + 1/2*denom(1/2*s12)*mt^2*mh^2*s12*s14
       + 1/2*denom(1/2*s12)*mt^2*mh^2*s12*s13 + 1/2*denom(1/2*s12)*mt^4*s24^2
       - 1/2*denom(1/2*s12)*mt^4*s23^2 - 2*denom(1/2*s12)*mt^4*s14*s23 - 1/2*
      denom(1/2*s12)*mt^4*s14^2 + 2*denom(1/2*s12)*mt^4*s13*s24 + 1/2*denom(1/
      2*s12)*mt^4*s13^2 + denom(1/2*s12)*mt^4*s12*s24 + denom(1/2*s12)*mt^4*
      s12*s23 + denom(1/2*s12)*mt^4*s12*s14 + denom(1/2*s12)*mt^4*s12*s13 + 
      denom(1/2*s12)*mt^4*s12^2 - denom(1/2*s12)*mt^4*mh^2*s12 - denom(1/2*s12
      )*mt^6*s24 + denom(1/2*s12)*mt^6*s23 + denom(1/2*s12)*mt^6*s14 - denom(1/
      2*s12)*mt^6*s13 + 1/8*denom(1/4*s12^2)*s12*s14^2*s23^2 - 1/8*denom(1/4*
      s12^2)*s12*s13^2*s24^2 - 1/8*denom(1/4*s12^2)*s12^2*s14*s23*s24 - 1/8*
      denom(1/4*s12^2)*s12^2*s14*s23^2 - 1/8*denom(1/4*s12^2)*s12^2*s14^2*s23
       - 1/8*denom(1/4*s12^2)*s12^2*s13*s24^2 - 1/8*denom(1/4*s12^2)*s12^2*s13
      *s23*s24 - 1/8*denom(1/4*s12^2)*s12^2*s13*s14*s24 - 1/8*denom(1/4*s12^2)
      *s12^2*s13*s14*s23 - 1/8*denom(1/4*s12^2)*s12^2*s13^2*s24 - 1/8*denom(1/
      4*s12^2)*s12^3*s14*s23 - 1/8*denom(1/4*s12^2)*s12^3*s13*s24 + 1/8*denom(
      1/4*s12^2)*mh^2*s12^2*s14*s23 + 1/8*denom(1/4*s12^2)*mh^2*s12^2*s13*s24
       - 1/4*denom(1/4*s12^2)*mt^2*s12*s14*s23^2 - 1/4*denom(1/4*s12^2)*mt^2*
      s12*s14^2*s23 + 1/4*denom(1/4*s12^2)*mt^2*s12*s13*s24^2 + 1/4*denom(1/4*
      s12^2)*mt^2*s12*s13^2*s24 + 1/8*denom(1/4*s12^2)*mt^2*s12^2*s24^2 + 1/4*
      denom(1/4*s12^2)*mt^2*s12^2*s23*s24 + 1/8*denom(1/4*s12^2)*mt^2*s12^2*
      s23^2 + 1/4*denom(1/4*s12^2)*mt^2*s12^2*s14*s24 + 1/4*denom(1/4*s12^2)*
      mt^2*s12^2*s14*s23 + 1/8*denom(1/4*s12^2)*mt^2*s12^2*s14^2 + 1/4*denom(1/
      4*s12^2)*mt^2*s12^2*s13*s24 + 1/4*denom(1/4*s12^2)*mt^2*s12^2*s13*s23 + 
      1/4*denom(1/4*s12^2)*mt^2*s12^2*s13*s14 + 1/8*denom(1/4*s12^2)*mt^2*
      s12^2*s13^2 + 1/8*denom(1/4*s12^2)*mt^2*s12^3*s24 + 1/8*denom(1/4*s12^2)
      *mt^2*s12^3*s23 + 1/8*denom(1/4*s12^2)*mt^2*s12^3*s14 + 1/8*denom(1/4*
      s12^2)*mt^2*s12^3*s13 - 1/8*denom(1/4*s12^2)*mt^2*mh^2*s12^2*s24 - 1/8*
      denom(1/4*s12^2)*mt^2*mh^2*s12^2*s23 - 1/8*denom(1/4*s12^2)*mt^2*mh^2*
      s12^2*s14 - 1/8*denom(1/4*s12^2)*mt^2*mh^2*s12^2*s13 - 1/8*denom(1/4*
      s12^2)*mt^4*s12*s24^2 + 1/8*denom(1/4*s12^2)*mt^4*s12*s23^2 + 1/2*denom(
      1/4*s12^2)*mt^4*s12*s14*s23 + 1/8*denom(1/4*s12^2)*mt^4*s12*s14^2 - 1/2*
      denom(1/4*s12^2)*mt^4*s12*s13*s24 - 1/8*denom(1/4*s12^2)*mt^4*s12*s13^2
       - 1/4*denom(1/4*s12^2)*mt^4*s12^2*s24 - 1/4*denom(1/4*s12^2)*mt^4*s12^2
      *s23 - 1/4*denom(1/4*s12^2)*mt^4*s12^2*s14 - 1/4*denom(1/4*s12^2)*mt^4*
      s12^2*s13 - 1/4*denom(1/4*s12^2)*mt^4*s12^3 + 1/4*denom(1/4*s12^2)*mt^4*
      mh^2*s12^2 + 1/4*denom(1/4*s12^2)*mt^6*s12*s24 - 1/4*denom(1/4*s12^2)*
      mt^6*s12*s23 - 1/4*denom(1/4*s12^2)*mt^6*s12*s14 + 1/4*denom(1/4*s12^2)*
      mt^6*s12*s13;
 
 .sort
id KMatrix(15,18) =   - mt*s12*s14*s24 - mt*s12*s14*s23 - mt*s12*s14^2 - mt*
      s12*s13*s14 - mt*s12^2*s14 + mt*mh^2*s12*s14 + mt^3*s12*s24 + mt^3*s12*
      s23 + 3*mt^3*s12*s14 + mt^3*s12*s13 + mt^3*s12^2 - mt^3*mh^2*s12 - 2*
      mt^5*s12 - denom(1/2*s12)*mt*s12*s14^2*s23 - denom(1/2*s12)*mt*s12*s13*
      s14*s24 + denom(1/2*s12)*mt^3*s12*s14*s24 + 2*denom(1/2*s12)*mt^3*s12*
      s14*s23 + denom(1/2*s12)*mt^3*s12*s14^2 + denom(1/2*s12)*mt^3*s12*s13*
      s24 + denom(1/2*s12)*mt^3*s12*s13*s14 - denom(1/2*s12)*mt^5*s12*s24 - 
      denom(1/2*s12)*mt^5*s12*s23 - 3*denom(1/2*s12)*mt^5*s12*s14 - denom(1/2*
      s12)*mt^5*s12*s13 + 2*denom(1/2*s12)*mt^7*s12 + 1/4*denom(1/4*s12^2)*mt*
      s12^2*s14^2*s23 + 1/4*denom(1/4*s12^2)*mt*s12^2*s13*s14*s24 - 1/4*denom(
      1/4*s12^2)*mt^3*s12^2*s14*s24 - 1/2*denom(1/4*s12^2)*mt^3*s12^2*s14*s23
       - 1/4*denom(1/4*s12^2)*mt^3*s12^2*s14^2 - 1/4*denom(1/4*s12^2)*mt^3*
      s12^2*s13*s24 - 1/4*denom(1/4*s12^2)*mt^3*s12^2*s13*s14 + 1/4*denom(1/4*
      s12^2)*mt^5*s12^2*s24 + 1/4*denom(1/4*s12^2)*mt^5*s12^2*s23 + 3/4*denom(
      1/4*s12^2)*mt^5*s12^2*s14 + 1/4*denom(1/4*s12^2)*mt^5*s12^2*s13 - 1/2*
      denom(1/4*s12^2)*mt^7*s12^2;
 
 .sort
id KMatrix(15,19) =  mt*s12*s23*s24 + mt*s12*s23^2 + mt*s12*s14*s23 + mt*s12*
      s13*s23 + mt*s12^2*s23 - mt*mh^2*s12*s23 - mt^3*s12*s24 - 3*mt^3*s12*s23
       - mt^3*s12*s14 - mt^3*s12*s13 - mt^3*s12^2 + mt^3*mh^2*s12 + 2*mt^5*s12
       + denom(1/2*s12)*mt*s12*s14*s23^2 + denom(1/2*s12)*mt*s12*s13*s23*s24
       - denom(1/2*s12)*mt^3*s12*s23*s24 - denom(1/2*s12)*mt^3*s12*s23^2 - 2*
      denom(1/2*s12)*mt^3*s12*s14*s23 - denom(1/2*s12)*mt^3*s12*s13*s24 - 
      denom(1/2*s12)*mt^3*s12*s13*s23 + denom(1/2*s12)*mt^5*s12*s24 + 3*denom(
      1/2*s12)*mt^5*s12*s23 + denom(1/2*s12)*mt^5*s12*s14 + denom(1/2*s12)*
      mt^5*s12*s13 - 2*denom(1/2*s12)*mt^7*s12 - 1/4*denom(1/4*s12^2)*mt*s12^2
      *s14*s23^2 - 1/4*denom(1/4*s12^2)*mt*s12^2*s13*s23*s24 + 1/4*denom(1/4*
      s12^2)*mt^3*s12^2*s23*s24 + 1/4*denom(1/4*s12^2)*mt^3*s12^2*s23^2 + 1/2*
      denom(1/4*s12^2)*mt^3*s12^2*s14*s23 + 1/4*denom(1/4*s12^2)*mt^3*s12^2*
      s13*s24 + 1/4*denom(1/4*s12^2)*mt^3*s12^2*s13*s23 - 1/4*denom(1/4*s12^2)
      *mt^5*s12^2*s24 - 3/4*denom(1/4*s12^2)*mt^5*s12^2*s23 - 1/4*denom(1/4*
      s12^2)*mt^5*s12^2*s14 - 1/4*denom(1/4*s12^2)*mt^5*s12^2*s13 + 1/2*denom(
      1/4*s12^2)*mt^7*s12^2;
 
 .sort
id KMatrix(15,20) =  mt^3*s12*s24 + mt^3*s12*s23 + mt^3*s12*s14 + mt^3*s12*s13
       + mt^3*s12^2 - mt^3*mh^2*s12 - 1/2*denom(1/2*s12)*mt*s12*s13*s23*s24 - 
      1/2*denom(1/2*s12)*mt*s12*s13*s23^2 - 1/2*denom(1/2*s12)*mt*s12*s13*s14*
      s23 - 1/2*denom(1/2*s12)*mt*s12*s13^2*s23 - 1/2*denom(1/2*s12)*mt*s12^2*
      s13*s23 + 1/2*denom(1/2*s12)*mt*mh^2*s12*s13*s23 + 1/2*denom(1/2*s12)*
      mt^3*s12*s23*s24 + 1/2*denom(1/2*s12)*mt^3*s12*s23^2 - denom(1/2*s12)*
      mt^3*s12*s14*s24 + denom(1/2*s12)*mt^3*s12*s14*s23 + denom(1/2*s12)*mt^3
      *s12*s13*s24 + denom(1/2*s12)*mt^3*s12*s13*s23 + 1/2*denom(1/2*s12)*mt^3
      *s12*s13*s14 + 1/2*denom(1/2*s12)*mt^3*s12*s13^2 + 1/2*denom(1/2*s12)*
      mt^3*s12^2*s23 + 1/2*denom(1/2*s12)*mt^3*s12^2*s13 - 1/2*denom(1/2*s12)*
      mt^3*mh^2*s12*s23 - 1/2*denom(1/2*s12)*mt^3*mh^2*s12*s13 - denom(1/2*s12
      )*mt^5*s12*s23 - denom(1/2*s12)*mt^5*s12*s13 - 1/2*denom(1/2*s12)*mt^5*
      s12^2 + 1/2*denom(1/2*s12)*mt^5*mh^2*s12 + 1/2*denom(1/4*s12^2)*mt*s12*
      s13*s14*s23*s24 - 1/4*denom(1/4*s12^2)*mt*s12*s13*s14*s23^2 - 1/4*denom(
      1/4*s12^2)*mt*s12*s13^2*s23*s24 - 1/2*denom(1/4*s12^2)*mt^3*s12*s14*s23*
      s24 + 1/4*denom(1/4*s12^2)*mt^3*s12*s14*s23^2 + 1/4*denom(1/4*s12^2)*
      mt^3*s12*s13*s23^2 - 1/2*denom(1/4*s12^2)*mt^3*s12*s13*s14*s24 + 1/4*
      denom(1/4*s12^2)*mt^3*s12*s13^2*s24 + 1/4*denom(1/4*s12^2)*mt^3*s12*
      s13^2*s23 + 1/4*denom(1/4*s12^2)*mt^5*s12*s23*s24 - 1/4*denom(1/4*s12^2)
      *mt^5*s12*s23^2 + 1/2*denom(1/4*s12^2)*mt^5*s12*s14*s24 - 1/2*denom(1/4*
      s12^2)*mt^5*s12*s13*s23 + 1/4*denom(1/4*s12^2)*mt^5*s12*s13*s14 - 1/4*
      denom(1/4*s12^2)*mt^5*s12*s13^2 - 1/4*denom(1/4*s12^2)*mt^7*s12*s24 + 1/
      4*denom(1/4*s12^2)*mt^7*s12*s23 - 1/4*denom(1/4*s12^2)*mt^7*s12*s14 + 1/
      4*denom(1/4*s12^2)*mt^7*s12*s13;
 
 .sort
id KMatrix(15,21) =   - 1/2*mt*s12*s24^2 - mt*s12*s23*s24 - 1/2*mt*s12*s23^2
       - mt*s12*s14*s24 - mt*s12*s14*s23 - 1/2*mt*s12*s14^2 - mt*s12*s13*s24
       - mt*s12*s13*s23 - mt*s12*s13*s14 - 1/2*mt*s12*s13^2 - mt*s12^2*s24 - 
      mt*s12^2*s23 - mt*s12^2*s14 - mt*s12^2*s13 - 1/2*mt*s12^3 + mt*mh^2*s12*
      s24 + mt*mh^2*s12*s23 + mt*mh^2*s12*s14 + mt*mh^2*s12*s13 + mt*mh^2*
      s12^2 - 1/2*mt*mh^4*s12 + mt^3*s12*s24 + mt^3*s12*s23 + mt^3*s12*s14 + 
      mt^3*s12*s13 + mt^3*s12^2 - mt^3*mh^2*s12 + 1/2*denom(1/2*s12)*mt*s12*
      s14*s24^2 - 1/2*denom(1/2*s12)*mt*s12*s14*s23^2 + 1/2*denom(1/2*s12)*mt*
      s12*s14^2*s24 - 1/2*denom(1/2*s12)*mt*s12*s14^2*s23 - 1/2*denom(1/2*s12)
      *mt*s12*s13*s24^2 - 1/2*denom(1/2*s12)*mt*s12*s13*s23*s24 - 1/2*denom(1/
      2*s12)*mt*s12*s13*s14*s23 - 1/2*denom(1/2*s12)*mt*s12*s13^2*s24 + 1/2*
      denom(1/2*s12)*mt*s12^2*s14*s24 - 1/2*denom(1/2*s12)*mt*s12^2*s14*s23 - 
      1/2*denom(1/2*s12)*mt*s12^2*s13*s24 - 1/2*denom(1/2*s12)*mt*mh^2*s12*s14
      *s24 + 1/2*denom(1/2*s12)*mt*mh^2*s12*s14*s23 + 1/2*denom(1/2*s12)*mt*
      mh^2*s12*s13*s24 + 1/2*denom(1/2*s12)*mt^3*s12*s23*s24 + 1/2*denom(1/2*
      s12)*mt^3*s12*s23^2 - denom(1/2*s12)*mt^3*s12*s14*s24 + denom(1/2*s12)*
      mt^3*s12*s14*s23 + denom(1/2*s12)*mt^3*s12*s13*s24 + denom(1/2*s12)*mt^3
      *s12*s13*s23 + 1/2*denom(1/2*s12)*mt^3*s12*s13*s14 + 1/2*denom(1/2*s12)*
      mt^3*s12*s13^2 + 1/2*denom(1/2*s12)*mt^3*s12^2*s23 + 1/2*denom(1/2*s12)*
      mt^3*s12^2*s13 - 1/2*denom(1/2*s12)*mt^3*mh^2*s12*s23 - 1/2*denom(1/2*
      s12)*mt^3*mh^2*s12*s13 - denom(1/2*s12)*mt^5*s12*s23 - denom(1/2*s12)*
      mt^5*s12*s13 - 1/2*denom(1/2*s12)*mt^5*s12^2 + 1/2*denom(1/2*s12)*mt^5*
      mh^2*s12 + 1/4*denom(1/4*s12^2)*mt*s12*s14^2*s23*s24 - 1/8*denom(1/4*
      s12^2)*mt*s12*s14^2*s23^2 + 1/4*denom(1/4*s12^2)*mt*s12*s13*s14*s24^2 - 
      1/4*denom(1/4*s12^2)*mt*s12*s13*s14*s23*s24 - 1/8*denom(1/4*s12^2)*mt*
      s12*s13^2*s24^2 - 1/4*denom(1/4*s12^2)*mt^3*s12*s14*s24^2 - 1/4*denom(1/
      4*s12^2)*mt^3*s12*s14*s23*s24 + 1/4*denom(1/4*s12^2)*mt^3*s12*s14*s23^2
       - 1/4*denom(1/4*s12^2)*mt^3*s12*s14^2*s24 + 1/4*denom(1/4*s12^2)*mt^3*
      s12*s13*s23*s24 - 1/4*denom(1/4*s12^2)*mt^3*s12*s13*s14*s24 + 1/4*denom(
      1/4*s12^2)*mt^3*s12*s13*s14*s23 + 1/4*denom(1/4*s12^2)*mt^3*s12*s13^2*
      s24 + 1/8*denom(1/4*s12^2)*mt^5*s12*s24^2 - 1/8*denom(1/4*s12^2)*mt^5*
      s12*s23^2 + 3/4*denom(1/4*s12^2)*mt^5*s12*s14*s24 - 1/4*denom(1/4*s12^2)
      *mt^5*s12*s14*s23 + 1/8*denom(1/4*s12^2)*mt^5*s12*s14^2 - 1/4*denom(1/4*
      s12^2)*mt^5*s12*s13*s24 - 1/4*denom(1/4*s12^2)*mt^5*s12*s13*s23 - 1/8*
      denom(1/4*s12^2)*mt^5*s12*s13^2 - 1/4*denom(1/4*s12^2)*mt^7*s12*s24 + 1/
      4*denom(1/4*s12^2)*mt^7*s12*s23 - 1/4*denom(1/4*s12^2)*mt^7*s12*s14 + 1/
      4*denom(1/4*s12^2)*mt^7*s12*s13;
 
 .sort
id KMatrix(15,22) =  1/2*mt*s12*s24^2 + mt*s12*s23*s24 + 1/2*mt*s12*s23^2 + mt
      *s12*s14*s24 + mt*s12*s14*s23 + 1/2*mt*s12*s14^2 + mt*s12*s13*s24 + mt*
      s12*s13*s23 + mt*s12*s13*s14 + 1/2*mt*s12*s13^2 + mt*s12^2*s24 + mt*
      s12^2*s23 + mt*s12^2*s14 + mt*s12^2*s13 + 1/2*mt*s12^3 - mt*mh^2*s12*s24
       - mt*mh^2*s12*s23 - mt*mh^2*s12*s14 - mt*mh^2*s12*s13 - mt*mh^2*s12^2
       + 1/2*mt*mh^4*s12 - mt^3*s12*s24 - mt^3*s12*s23 - mt^3*s12*s14 - mt^3*
      s12*s13 - mt^3*s12^2 + mt^3*mh^2*s12 + 1/2*denom(1/2*s12)*mt*s12*s14*s23
      *s24 + 1/2*denom(1/2*s12)*mt*s12*s14*s23^2 + 1/2*denom(1/2*s12)*mt*s12*
      s14^2*s23 + 1/2*denom(1/2*s12)*mt*s12*s13*s24^2 - 1/2*denom(1/2*s12)*mt*
      s12*s13*s23^2 + 1/2*denom(1/2*s12)*mt*s12*s13*s14*s24 + 1/2*denom(1/2*
      s12)*mt*s12*s13^2*s24 - 1/2*denom(1/2*s12)*mt*s12*s13^2*s23 + 1/2*denom(
      1/2*s12)*mt*s12^2*s14*s23 + 1/2*denom(1/2*s12)*mt*s12^2*s13*s24 - 1/2*
      denom(1/2*s12)*mt*s12^2*s13*s23 - 1/2*denom(1/2*s12)*mt*mh^2*s12*s14*s23
       - 1/2*denom(1/2*s12)*mt*mh^2*s12*s13*s24 + 1/2*denom(1/2*s12)*mt*mh^2*
      s12*s13*s23 - 1/2*denom(1/2*s12)*mt^3*s12*s24^2 - 1/2*denom(1/2*s12)*
      mt^3*s12*s23*s24 - denom(1/2*s12)*mt^3*s12*s14*s24 - denom(1/2*s12)*mt^3
      *s12*s14*s23 - 1/2*denom(1/2*s12)*mt^3*s12*s14^2 - denom(1/2*s12)*mt^3*
      s12*s13*s24 + denom(1/2*s12)*mt^3*s12*s13*s23 - 1/2*denom(1/2*s12)*mt^3*
      s12*s13*s14 - 1/2*denom(1/2*s12)*mt^3*s12^2*s24 - 1/2*denom(1/2*s12)*
      mt^3*s12^2*s14 + 1/2*denom(1/2*s12)*mt^3*mh^2*s12*s24 + 1/2*denom(1/2*
      s12)*mt^3*mh^2*s12*s14 + denom(1/2*s12)*mt^5*s12*s24 + denom(1/2*s12)*
      mt^5*s12*s14 + 1/2*denom(1/2*s12)*mt^5*s12^2 - 1/2*denom(1/2*s12)*mt^5*
      mh^2*s12 + 1/8*denom(1/4*s12^2)*mt*s12*s14^2*s23^2 + 1/4*denom(1/4*s12^2
      )*mt*s12*s13*s14*s23*s24 - 1/4*denom(1/4*s12^2)*mt*s12*s13*s14*s23^2 + 1/
      8*denom(1/4*s12^2)*mt*s12*s13^2*s24^2 - 1/4*denom(1/4*s12^2)*mt*s12*
      s13^2*s23*s24 - 1/4*denom(1/4*s12^2)*mt^3*s12*s14*s23*s24 - 1/4*denom(1/
      4*s12^2)*mt^3*s12*s14^2*s23 - 1/4*denom(1/4*s12^2)*mt^3*s12*s13*s24^2 + 
      1/4*denom(1/4*s12^2)*mt^3*s12*s13*s23*s24 + 1/4*denom(1/4*s12^2)*mt^3*
      s12*s13*s23^2 - 1/4*denom(1/4*s12^2)*mt^3*s12*s13*s14*s24 + 1/4*denom(1/
      4*s12^2)*mt^3*s12*s13*s14*s23 + 1/4*denom(1/4*s12^2)*mt^3*s12*s13^2*s23
       + 1/8*denom(1/4*s12^2)*mt^5*s12*s24^2 - 1/8*denom(1/4*s12^2)*mt^5*s12*
      s23^2 + 1/4*denom(1/4*s12^2)*mt^5*s12*s14*s24 + 1/4*denom(1/4*s12^2)*
      mt^5*s12*s14*s23 + 1/8*denom(1/4*s12^2)*mt^5*s12*s14^2 + 1/4*denom(1/4*
      s12^2)*mt^5*s12*s13*s24 - 3/4*denom(1/4*s12^2)*mt^5*s12*s13*s23 - 1/8*
      denom(1/4*s12^2)*mt^5*s12*s13^2 - 1/4*denom(1/4*s12^2)*mt^7*s12*s24 + 1/
      4*denom(1/4*s12^2)*mt^7*s12*s23 - 1/4*denom(1/4*s12^2)*mt^7*s12*s14 + 1/
      4*denom(1/4*s12^2)*mt^7*s12*s13;
 
 .sort
id KMatrix(15,23) =   - mt^3*s12*s24 - mt^3*s12*s23 - mt^3*s12*s14 - mt^3*s12*
      s13 - mt^3*s12^2 + mt^3*mh^2*s12 + 1/2*denom(1/2*s12)*mt*s12*s14*s24^2
       + 1/2*denom(1/2*s12)*mt*s12*s14*s23*s24 + 1/2*denom(1/2*s12)*mt*s12*
      s14^2*s24 + 1/2*denom(1/2*s12)*mt*s12*s13*s14*s24 + 1/2*denom(1/2*s12)*
      mt*s12^2*s14*s24 - 1/2*denom(1/2*s12)*mt*mh^2*s12*s14*s24 - 1/2*denom(1/
      2*s12)*mt^3*s12*s24^2 - 1/2*denom(1/2*s12)*mt^3*s12*s23*s24 - denom(1/2*
      s12)*mt^3*s12*s14*s24 - denom(1/2*s12)*mt^3*s12*s14*s23 - 1/2*denom(1/2*
      s12)*mt^3*s12*s14^2 - denom(1/2*s12)*mt^3*s12*s13*s24 + denom(1/2*s12)*
      mt^3*s12*s13*s23 - 1/2*denom(1/2*s12)*mt^3*s12*s13*s14 - 1/2*denom(1/2*
      s12)*mt^3*s12^2*s24 - 1/2*denom(1/2*s12)*mt^3*s12^2*s14 + 1/2*denom(1/2*
      s12)*mt^3*mh^2*s12*s24 + 1/2*denom(1/2*s12)*mt^3*mh^2*s12*s14 + denom(1/
      2*s12)*mt^5*s12*s24 + denom(1/2*s12)*mt^5*s12*s14 + 1/2*denom(1/2*s12)*
      mt^5*s12^2 - 1/2*denom(1/2*s12)*mt^5*mh^2*s12 + 1/4*denom(1/4*s12^2)*mt*
      s12*s14^2*s23*s24 + 1/4*denom(1/4*s12^2)*mt*s12*s13*s14*s24^2 - 1/2*
      denom(1/4*s12^2)*mt*s12*s13*s14*s23*s24 - 1/4*denom(1/4*s12^2)*mt^3*s12*
      s14*s24^2 - 1/4*denom(1/4*s12^2)*mt^3*s12*s14^2*s24 - 1/4*denom(1/4*
      s12^2)*mt^3*s12*s14^2*s23 - 1/4*denom(1/4*s12^2)*mt^3*s12*s13*s24^2 + 1/
      2*denom(1/4*s12^2)*mt^3*s12*s13*s23*s24 + 1/2*denom(1/4*s12^2)*mt^3*s12*
      s13*s14*s23 + 1/4*denom(1/4*s12^2)*mt^5*s12*s24^2 - 1/4*denom(1/4*s12^2)
      *mt^5*s12*s23*s24 + 1/2*denom(1/4*s12^2)*mt^5*s12*s14*s24 + 1/4*denom(1/
      4*s12^2)*mt^5*s12*s14^2 - 1/2*denom(1/4*s12^2)*mt^5*s12*s13*s23 - 1/4*
      denom(1/4*s12^2)*mt^5*s12*s13*s14 - 1/4*denom(1/4*s12^2)*mt^7*s12*s24 + 
      1/4*denom(1/4*s12^2)*mt^7*s12*s23 - 1/4*denom(1/4*s12^2)*mt^7*s12*s14 + 
      1/4*denom(1/4*s12^2)*mt^7*s12*s13;
 
 .sort
id KMatrix(15,24) =   - s12*s14*s23*s24 - s12*s14*s23^2 - s12*s14^2*s23 - s12*
      s13*s14*s23 - s12^2*s14*s23 + mh^2*s12*s14*s23 + mt^2*s12*s23*s24 + mt^2
      *s12*s23^2 + mt^2*s12*s14*s24 + 4*mt^2*s12*s14*s23 + mt^2*s12*s14^2 + 
      mt^2*s12*s13*s23 + mt^2*s12*s13*s14 + mt^2*s12^2*s23 + mt^2*s12^2*s14 - 
      mt^2*mh^2*s12*s23 - mt^2*mh^2*s12*s14 - mt^4*s12*s24 - 3*mt^4*s12*s23 - 
      3*mt^4*s12*s14 - mt^4*s12*s13 - mt^4*s12^2 + mt^4*mh^2*s12 + 2*mt^6*s12
       - denom(1/2*s12)*s12*s14^2*s23^2 - denom(1/2*s12)*s12*s13*s14*s23*s24
       + denom(1/2*s12)*mt^2*s12*s14*s23*s24 + 2*denom(1/2*s12)*mt^2*s12*s14*
      s23^2 + 2*denom(1/2*s12)*mt^2*s12*s14^2*s23 + denom(1/2*s12)*mt^2*s12*
      s13*s23*s24 + denom(1/2*s12)*mt^2*s12*s13*s14*s24 + denom(1/2*s12)*mt^2*
      s12*s13*s14*s23 - denom(1/2*s12)*mt^4*s12*s23*s24 - denom(1/2*s12)*mt^4*
      s12*s23^2 - denom(1/2*s12)*mt^4*s12*s14*s24 - 5*denom(1/2*s12)*mt^4*s12*
      s14*s23 - denom(1/2*s12)*mt^4*s12*s14^2 - denom(1/2*s12)*mt^4*s12*s13*
      s24 - denom(1/2*s12)*mt^4*s12*s13*s23 - denom(1/2*s12)*mt^4*s12*s13*s14
       + denom(1/2*s12)*mt^6*s12*s24 + 3*denom(1/2*s12)*mt^6*s12*s23 + 3*
      denom(1/2*s12)*mt^6*s12*s14 + denom(1/2*s12)*mt^6*s12*s13 - 2*denom(1/2*
      s12)*mt^8*s12 + 1/4*denom(1/4*s12^2)*s12^2*s14^2*s23^2 + 1/4*denom(1/4*
      s12^2)*s12^2*s13*s14*s23*s24 - 1/4*denom(1/4*s12^2)*mt^2*s12^2*s14*s23*
      s24 - 1/2*denom(1/4*s12^2)*mt^2*s12^2*s14*s23^2 - 1/2*denom(1/4*s12^2)*
      mt^2*s12^2*s14^2*s23 - 1/4*denom(1/4*s12^2)*mt^2*s12^2*s13*s23*s24 - 1/4
      *denom(1/4*s12^2)*mt^2*s12^2*s13*s14*s24 - 1/4*denom(1/4*s12^2)*mt^2*
      s12^2*s13*s14*s23 + 1/4*denom(1/4*s12^2)*mt^4*s12^2*s23*s24 + 1/4*denom(
      1/4*s12^2)*mt^4*s12^2*s23^2 + 1/4*denom(1/4*s12^2)*mt^4*s12^2*s14*s24 + 
      5/4*denom(1/4*s12^2)*mt^4*s12^2*s14*s23 + 1/4*denom(1/4*s12^2)*mt^4*
      s12^2*s14^2 + 1/4*denom(1/4*s12^2)*mt^4*s12^2*s13*s24 + 1/4*denom(1/4*
      s12^2)*mt^4*s12^2*s13*s23 + 1/4*denom(1/4*s12^2)*mt^4*s12^2*s13*s14 - 1/
      4*denom(1/4*s12^2)*mt^6*s12^2*s24 - 3/4*denom(1/4*s12^2)*mt^6*s12^2*s23
       - 3/4*denom(1/4*s12^2)*mt^6*s12^2*s14 - 1/4*denom(1/4*s12^2)*mt^6*s12^2
      *s13 + 1/2*denom(1/4*s12^2)*mt^8*s12^2;
 
 .sort
id KMatrix(15,25) =   - 1/2*s14*s23*s24 - 1/2*s14*s23^2 - 1/2*s14^2*s23 + 1/2*
      s13*s24^2 + 1/2*s13*s23*s24 + 1/2*s13*s14*s24 - 1/2*s13*s14*s23 + 1/2*
      s13^2*s24 - 1/2*s12*s14*s23 + 1/2*s12*s13*s24 + 1/2*mh^2*s14*s23 - 1/2*
      mh^2*s13*s24 - 1/2*mt^2*s24^2 + 1/2*mt^2*s23^2 + 2*mt^2*s14*s23 + 1/2*
      mt^2*s14^2 - 2*mt^2*s13*s24 - 1/2*mt^2*s13^2 + 1/2*mt^2*s12*s24 + 3/2*
      mt^2*s12*s23 + 3/2*mt^2*s12*s14 + 1/2*mt^2*s12*s13 + mt^2*s12^2 + 1/2*
      mt^2*mh^2*s24 - 1/2*mt^2*mh^2*s23 - 1/2*mt^2*mh^2*s14 + 1/2*mt^2*mh^2*
      s13 - mt^2*mh^2*s12 + mt^4*s24 - mt^4*s23 - mt^4*s14 + mt^4*s13 - 1/2*
      denom(1/2*s12)*s14^2*s23^2 + 1/2*denom(1/2*s12)*s13^2*s24^2 + denom(1/2*
      s12)*mt^2*s14*s23^2 + denom(1/2*s12)*mt^2*s14^2*s23 - denom(1/2*s12)*
      mt^2*s13*s24^2 - denom(1/2*s12)*mt^2*s13^2*s24 - denom(1/2*s12)*mt^2*s12
      *s14*s24 + denom(1/2*s12)*mt^2*s12*s14*s23 + denom(1/2*s12)*mt^2*s12*s13
      *s24 - denom(1/2*s12)*mt^2*s12*s13*s23 + 1/2*denom(1/2*s12)*mt^4*s24^2
       - 1/2*denom(1/2*s12)*mt^4*s23^2 - 2*denom(1/2*s12)*mt^4*s14*s23 - 1/2*
      denom(1/2*s12)*mt^4*s14^2 + 2*denom(1/2*s12)*mt^4*s13*s24 + 1/2*denom(1/
      2*s12)*mt^4*s13^2 - denom(1/2*s12)*mt^6*s24 + denom(1/2*s12)*mt^6*s23 + 
      denom(1/2*s12)*mt^6*s14 - denom(1/2*s12)*mt^6*s13 + 1/4*denom(1/4*s12^2)
      *s12*s13*s14*s23*s24 - 1/4*denom(1/4*s12^2)*s12*s13^2*s24^2 - 1/8*denom(
      1/4*s12^2)*s12^2*s14*s23*s24 - 1/8*denom(1/4*s12^2)*s12^2*s14*s23^2 - 1/
      8*denom(1/4*s12^2)*s12^2*s14^2*s23 - 1/8*denom(1/4*s12^2)*s12^2*s13*
      s24^2 - 1/8*denom(1/4*s12^2)*s12^2*s13*s23*s24 - 1/8*denom(1/4*s12^2)*
      s12^2*s13*s14*s24 - 1/8*denom(1/4*s12^2)*s12^2*s13*s14*s23 - 1/8*denom(1/
      4*s12^2)*s12^2*s13^2*s24 - 1/8*denom(1/4*s12^2)*s12^3*s14*s23 - 1/8*
      denom(1/4*s12^2)*s12^3*s13*s24 + 1/8*denom(1/4*s12^2)*mh^2*s12^2*s14*s23
       + 1/8*denom(1/4*s12^2)*mh^2*s12^2*s13*s24 - 1/4*denom(1/4*s12^2)*mt^2*
      s12*s14*s23*s24 + 1/2*denom(1/4*s12^2)*mt^2*s12*s13*s24^2 - 1/4*denom(1/
      4*s12^2)*mt^2*s12*s13*s23*s24 - 1/4*denom(1/4*s12^2)*mt^2*s12*s13*s14*
      s24 - 1/4*denom(1/4*s12^2)*mt^2*s12*s13*s14*s23 + 1/2*denom(1/4*s12^2)*
      mt^2*s12*s13^2*s24 + 1/8*denom(1/4*s12^2)*mt^2*s12^2*s24^2 + 1/4*denom(1/
      4*s12^2)*mt^2*s12^2*s23*s24 + 1/8*denom(1/4*s12^2)*mt^2*s12^2*s23^2 + 1/
      4*denom(1/4*s12^2)*mt^2*s12^2*s14*s24 + 1/4*denom(1/4*s12^2)*mt^2*s12^2*
      s14*s23 + 1/8*denom(1/4*s12^2)*mt^2*s12^2*s14^2 + 1/4*denom(1/4*s12^2)*
      mt^2*s12^2*s13*s24 + 1/4*denom(1/4*s12^2)*mt^2*s12^2*s13*s23 + 1/4*
      denom(1/4*s12^2)*mt^2*s12^2*s13*s14 + 1/8*denom(1/4*s12^2)*mt^2*s12^2*
      s13^2 + 1/8*denom(1/4*s12^2)*mt^2*s12^3*s24 + 1/8*denom(1/4*s12^2)*mt^2*
      s12^3*s23 + 1/8*denom(1/4*s12^2)*mt^2*s12^3*s14 + 1/8*denom(1/4*s12^2)*
      mt^2*s12^3*s13 - 1/8*denom(1/4*s12^2)*mt^2*mh^2*s12^2*s24 - 1/8*denom(1/
      4*s12^2)*mt^2*mh^2*s12^2*s23 - 1/8*denom(1/4*s12^2)*mt^2*mh^2*s12^2*s14
       - 1/8*denom(1/4*s12^2)*mt^2*mh^2*s12^2*s13 - 1/4*denom(1/4*s12^2)*mt^4*
      s12*s24^2 + 1/4*denom(1/4*s12^2)*mt^4*s12*s23*s24 + 1/4*denom(1/4*s12^2)
      *mt^4*s12*s14*s24 + 1/4*denom(1/4*s12^2)*mt^4*s12*s14*s23 - 3/4*denom(1/
      4*s12^2)*mt^4*s12*s13*s24 + 1/4*denom(1/4*s12^2)*mt^4*s12*s13*s23 + 1/4*
      denom(1/4*s12^2)*mt^4*s12*s13*s14 - 1/4*denom(1/4*s12^2)*mt^4*s12*s13^2
       - 1/4*denom(1/4*s12^2)*mt^4*s12^2*s24 - 1/4*denom(1/4*s12^2)*mt^4*s12^2
      *s23 - 1/4*denom(1/4*s12^2)*mt^4*s12^2*s14 - 1/4*denom(1/4*s12^2)*mt^4*
      s12^2*s13 - 1/4*denom(1/4*s12^2)*mt^4*s12^3 + 1/4*denom(1/4*s12^2)*mt^4*
      mh^2*s12^2 + 1/4*denom(1/4*s12^2)*mt^6*s12*s24 - 1/4*denom(1/4*s12^2)*
      mt^6*s12*s23 - 1/4*denom(1/4*s12^2)*mt^6*s12*s14 + 1/4*denom(1/4*s12^2)*
      mt^6*s12*s13;
 
 .sort
id KMatrix(15,26) =  mt^2*s12*s14*s24 + mt^2*s12*s14*s23 + mt^2*s12*s14^2 + 
      mt^2*s12*s13*s14 + mt^2*s12^2*s14 - mt^2*mh^2*s12*s14 - mt^4*s12*s24 - 
      mt^4*s12*s23 - 3*mt^4*s12*s14 - mt^4*s12*s13 - mt^4*s12^2 + mt^4*mh^2*
      s12 + 2*mt^6*s12 - 1/2*denom(1/2*s12)*s12*s13*s14*s23*s24 - 1/2*denom(1/
      2*s12)*s12*s13*s14*s23^2 - 1/2*denom(1/2*s12)*s12*s13*s14^2*s23 - 1/2*
      denom(1/2*s12)*s12*s13^2*s14*s23 - 1/2*denom(1/2*s12)*s12^2*s13*s14*s23
       + 1/2*denom(1/2*s12)*mh^2*s12*s13*s14*s23 + 1/2*denom(1/2*s12)*mt^2*s12
      *s14*s23*s24 + 1/2*denom(1/2*s12)*mt^2*s12*s14*s23^2 + denom(1/2*s12)*
      mt^2*s12*s14^2*s23 + 1/2*denom(1/2*s12)*mt^2*s12*s13*s23*s24 + 1/2*
      denom(1/2*s12)*mt^2*s12*s13*s23^2 + denom(1/2*s12)*mt^2*s12*s13*s14*s24
       + 5/2*denom(1/2*s12)*mt^2*s12*s13*s14*s23 + 1/2*denom(1/2*s12)*mt^2*s12
      *s13*s14^2 + 1/2*denom(1/2*s12)*mt^2*s12*s13^2*s23 + 1/2*denom(1/2*s12)*
      mt^2*s12*s13^2*s14 + 1/2*denom(1/2*s12)*mt^2*s12^2*s14*s23 + 1/2*denom(1/
      2*s12)*mt^2*s12^2*s13*s23 + 1/2*denom(1/2*s12)*mt^2*s12^2*s13*s14 - 1/2*
      denom(1/2*s12)*mt^2*mh^2*s12*s14*s23 - 1/2*denom(1/2*s12)*mt^2*mh^2*s12*
      s13*s23 - 1/2*denom(1/2*s12)*mt^2*mh^2*s12*s13*s14 - 1/2*denom(1/2*s12)*
      mt^4*s12*s23*s24 - 1/2*denom(1/2*s12)*mt^4*s12*s23^2 - denom(1/2*s12)*
      mt^4*s12*s14*s24 - 3*denom(1/2*s12)*mt^4*s12*s14*s23 - denom(1/2*s12)*
      mt^4*s12*s14^2 - denom(1/2*s12)*mt^4*s12*s13*s24 - 2*denom(1/2*s12)*mt^4
      *s12*s13*s23 - 5/2*denom(1/2*s12)*mt^4*s12*s13*s14 - 1/2*denom(1/2*s12)*
      mt^4*s12*s13^2 - 1/2*denom(1/2*s12)*mt^4*s12^2*s23 - 1/2*denom(1/2*s12)*
      mt^4*s12^2*s14 - 1/2*denom(1/2*s12)*mt^4*s12^2*s13 + 1/2*denom(1/2*s12)*
      mt^4*mh^2*s12*s23 + 1/2*denom(1/2*s12)*mt^4*mh^2*s12*s14 + 1/2*denom(1/2
      *s12)*mt^4*mh^2*s12*s13 + denom(1/2*s12)*mt^6*s12*s24 + 2*denom(1/2*s12)
      *mt^6*s12*s23 + 3*denom(1/2*s12)*mt^6*s12*s14 + 2*denom(1/2*s12)*mt^6*
      s12*s13 + 1/2*denom(1/2*s12)*mt^6*s12^2 - 1/2*denom(1/2*s12)*mt^6*mh^2*
      s12 - 2*denom(1/2*s12)*mt^8*s12 - 1/4*denom(1/4*s12^2)*s12*s13*s14^2*
      s23^2 - 1/4*denom(1/4*s12^2)*s12*s13^2*s14*s23*s24 + 1/4*denom(1/4*s12^2
      )*mt^2*s12*s14^2*s23^2 + 1/2*denom(1/4*s12^2)*mt^2*s12*s13*s14*s23*s24
       + 1/2*denom(1/4*s12^2)*mt^2*s12*s13*s14*s23^2 + 1/2*denom(1/4*s12^2)*
      mt^2*s12*s13*s14^2*s23 + 1/4*denom(1/4*s12^2)*mt^2*s12*s13^2*s23*s24 + 1/
      4*denom(1/4*s12^2)*mt^2*s12*s13^2*s14*s24 + 1/4*denom(1/4*s12^2)*mt^2*
      s12*s13^2*s14*s23 - 1/4*denom(1/4*s12^2)*mt^4*s12*s14*s23*s24 - 1/2*
      denom(1/4*s12^2)*mt^4*s12*s14*s23^2 - 1/2*denom(1/4*s12^2)*mt^4*s12*
      s14^2*s23 - 1/2*denom(1/4*s12^2)*mt^4*s12*s13*s23*s24 - 1/4*denom(1/4*
      s12^2)*mt^4*s12*s13*s23^2 - 1/2*denom(1/4*s12^2)*mt^4*s12*s13*s14*s24 - 
      3/2*denom(1/4*s12^2)*mt^4*s12*s13*s14*s23 - 1/4*denom(1/4*s12^2)*mt^4*
      s12*s13*s14^2 - 1/4*denom(1/4*s12^2)*mt^4*s12*s13^2*s24 - 1/4*denom(1/4*
      s12^2)*mt^4*s12*s13^2*s23 - 1/4*denom(1/4*s12^2)*mt^4*s12*s13^2*s14 + 1/
      4*denom(1/4*s12^2)*mt^6*s12*s23*s24 + 1/4*denom(1/4*s12^2)*mt^6*s12*
      s23^2 + 1/4*denom(1/4*s12^2)*mt^6*s12*s14*s24 + 5/4*denom(1/4*s12^2)*
      mt^6*s12*s14*s23 + 1/4*denom(1/4*s12^2)*mt^6*s12*s14^2 + 1/2*denom(1/4*
      s12^2)*mt^6*s12*s13*s24 + denom(1/4*s12^2)*mt^6*s12*s13*s23 + denom(1/4*
      s12^2)*mt^6*s12*s13*s14 + 1/4*denom(1/4*s12^2)*mt^6*s12*s13^2 - 1/4*
      denom(1/4*s12^2)*mt^8*s12*s24 - 3/4*denom(1/4*s12^2)*mt^8*s12*s23 - 3/4*
      denom(1/4*s12^2)*mt^8*s12*s14 - 3/4*denom(1/4*s12^2)*mt^8*s12*s13 + 1/2*
      denom(1/4*s12^2)*mt^10*s12;
 
 .sort
id KMatrix(15,27) =  2*mt^4*s12*s23 - 2*mt^6*s12 - denom(1/2*s12)*mt^2*s12*s14
      *s23*s24 - denom(1/2*s12)*mt^2*s12*s13*s23^2 + denom(1/2*s12)*mt^4*s12*
      s23*s24 + denom(1/2*s12)*mt^4*s12*s23^2 + denom(1/2*s12)*mt^4*s12*s14*
      s24 + denom(1/2*s12)*mt^4*s12*s14*s23 + 2*denom(1/2*s12)*mt^4*s12*s13*
      s23 - denom(1/2*s12)*mt^6*s12*s24 - 3*denom(1/2*s12)*mt^6*s12*s23 - 
      denom(1/2*s12)*mt^6*s12*s14 - denom(1/2*s12)*mt^6*s12*s13 + 2*denom(1/2*
      s12)*mt^8*s12 + 1/2*denom(1/4*s12^2)*s12*s13*s14*s23^2*s24 - 1/2*denom(1/
      4*s12^2)*mt^2*s12*s14*s23^2*s24 - 1/2*denom(1/4*s12^2)*mt^2*s12*s13*
      s23^2*s24 - denom(1/4*s12^2)*mt^2*s12*s13*s14*s23*s24 - 1/2*denom(1/4*
      s12^2)*mt^2*s12*s13*s14*s23^2 + 1/2*denom(1/4*s12^2)*mt^4*s12*s23^2*s24
       + denom(1/4*s12^2)*mt^4*s12*s14*s23*s24 + 1/2*denom(1/4*s12^2)*mt^4*s12
      *s14*s23^2 + denom(1/4*s12^2)*mt^4*s12*s13*s23*s24 + 1/2*denom(1/4*s12^2
      )*mt^4*s12*s13*s23^2 + 1/2*denom(1/4*s12^2)*mt^4*s12*s13*s14*s24 + 
      denom(1/4*s12^2)*mt^4*s12*s13*s14*s23 - denom(1/4*s12^2)*mt^6*s12*s23*
      s24 - 1/2*denom(1/4*s12^2)*mt^6*s12*s23^2 - 1/2*denom(1/4*s12^2)*mt^6*
      s12*s14*s24 - denom(1/4*s12^2)*mt^6*s12*s14*s23 - 1/2*denom(1/4*s12^2)*
      mt^6*s12*s13*s24 - denom(1/4*s12^2)*mt^6*s12*s13*s23 - 1/2*denom(1/4*
      s12^2)*mt^6*s12*s13*s14 + 1/2*denom(1/4*s12^2)*mt^8*s12*s24 + denom(1/4*
      s12^2)*mt^8*s12*s23 + 1/2*denom(1/4*s12^2)*mt^8*s12*s14 + 1/2*denom(1/4*
      s12^2)*mt^8*s12*s13 - 1/2*denom(1/4*s12^2)*mt^10*s12;
 
 .sort
id KMatrix(15,28) =   - 1/2*s12*s14*s24^2 - s12*s14*s23*s24 - 1/2*s12*s14*
      s23^2 - s12*s14^2*s24 - s12*s14^2*s23 - 1/2*s12*s14^3 - s12*s13*s14*s24
       - s12*s13*s14*s23 - s12*s13*s14^2 - 1/2*s12*s13^2*s14 - s12^2*s14*s24
       - s12^2*s14*s23 - s12^2*s14^2 - s12^2*s13*s14 - 1/2*s12^3*s14 + mh^2*
      s12*s14*s24 + mh^2*s12*s14*s23 + mh^2*s12*s14^2 + mh^2*s12*s13*s14 + 
      mh^2*s12^2*s14 - 1/2*mh^4*s12*s14 + 1/2*mt^2*s12*s24^2 + mt^2*s12*s23*
      s24 + 1/2*mt^2*s12*s23^2 + 3*mt^2*s12*s14*s24 + 3*mt^2*s12*s14*s23 + 5/2
      *mt^2*s12*s14^2 + mt^2*s12*s13*s24 + mt^2*s12*s13*s23 + 3*mt^2*s12*s13*
      s14 + 1/2*mt^2*s12*s13^2 + mt^2*s12^2*s24 + mt^2*s12^2*s23 + 3*mt^2*
      s12^2*s14 + mt^2*s12^2*s13 + 1/2*mt^2*s12^3 - mt^2*mh^2*s12*s24 - mt^2*
      mh^2*s12*s23 - 3*mt^2*mh^2*s12*s14 - mt^2*mh^2*s12*s13 - mt^2*mh^2*s12^2
       + 1/2*mt^2*mh^4*s12 - 2*mt^4*s12*s24 - 2*mt^4*s12*s23 - 4*mt^4*s12*s14
       - 2*mt^4*s12*s13 - 2*mt^4*s12^2 + 2*mt^4*mh^2*s12 + 2*mt^6*s12 - 1/2*
      denom(1/2*s12)*s12*s14^2*s23*s24 - 1/2*denom(1/2*s12)*s12*s14^2*s23^2 - 
      1/2*denom(1/2*s12)*s12*s14^3*s23 - 1/2*denom(1/2*s12)*s12*s13*s14*s24^2
       - 1/2*denom(1/2*s12)*s12*s13*s14*s23*s24 - 1/2*denom(1/2*s12)*s12*s13*
      s14^2*s24 - 1/2*denom(1/2*s12)*s12*s13*s14^2*s23 - 1/2*denom(1/2*s12)*
      s12*s13^2*s14*s24 - 1/2*denom(1/2*s12)*s12^2*s14^2*s23 - 1/2*denom(1/2*
      s12)*s12^2*s13*s14*s24 + 1/2*denom(1/2*s12)*mh^2*s12*s14^2*s23 + 1/2*
      denom(1/2*s12)*mh^2*s12*s13*s14*s24 + 1/2*denom(1/2*s12)*mt^2*s12*s14*
      s24^2 + 3/2*denom(1/2*s12)*mt^2*s12*s14*s23*s24 + denom(1/2*s12)*mt^2*
      s12*s14*s23^2 + denom(1/2*s12)*mt^2*s12*s14^2*s24 + 5/2*denom(1/2*s12)*
      mt^2*s12*s14^2*s23 + 1/2*denom(1/2*s12)*mt^2*s12*s14^3 + 1/2*denom(1/2*
      s12)*mt^2*s12*s13*s24^2 + 1/2*denom(1/2*s12)*mt^2*s12*s13*s23*s24 + 5/2*
      denom(1/2*s12)*mt^2*s12*s13*s14*s24 + 3/2*denom(1/2*s12)*mt^2*s12*s13*
      s14*s23 + denom(1/2*s12)*mt^2*s12*s13*s14^2 + 1/2*denom(1/2*s12)*mt^2*
      s12*s13^2*s24 + 1/2*denom(1/2*s12)*mt^2*s12*s13^2*s14 + 1/2*denom(1/2*
      s12)*mt^2*s12^2*s14*s24 + denom(1/2*s12)*mt^2*s12^2*s14*s23 + 1/2*denom(
      1/2*s12)*mt^2*s12^2*s14^2 + 1/2*denom(1/2*s12)*mt^2*s12^2*s13*s24 + 1/2*
      denom(1/2*s12)*mt^2*s12^2*s13*s14 - 1/2*denom(1/2*s12)*mt^2*mh^2*s12*s14
      *s24 - denom(1/2*s12)*mt^2*mh^2*s12*s14*s23 - 1/2*denom(1/2*s12)*mt^2*
      mh^2*s12*s14^2 - 1/2*denom(1/2*s12)*mt^2*mh^2*s12*s13*s24 - 1/2*denom(1/
      2*s12)*mt^2*mh^2*s12*s13*s14 - 1/2*denom(1/2*s12)*mt^4*s12*s24^2 - 
      denom(1/2*s12)*mt^4*s12*s23*s24 - 1/2*denom(1/2*s12)*mt^4*s12*s23^2 - 3*
      denom(1/2*s12)*mt^4*s12*s14*s24 - 4*denom(1/2*s12)*mt^4*s12*s14*s23 - 5/
      2*denom(1/2*s12)*mt^4*s12*s14^2 - 2*denom(1/2*s12)*mt^4*s12*s13*s24 - 
      denom(1/2*s12)*mt^4*s12*s13*s23 - 3*denom(1/2*s12)*mt^4*s12*s13*s14 - 1/
      2*denom(1/2*s12)*mt^4*s12*s13^2 - 1/2*denom(1/2*s12)*mt^4*s12^2*s24 - 1/
      2*denom(1/2*s12)*mt^4*s12^2*s23 - 3/2*denom(1/2*s12)*mt^4*s12^2*s14 - 1/
      2*denom(1/2*s12)*mt^4*s12^2*s13 + 1/2*denom(1/2*s12)*mt^4*mh^2*s12*s24
       + 1/2*denom(1/2*s12)*mt^4*mh^2*s12*s23 + 3/2*denom(1/2*s12)*mt^4*mh^2*
      s12*s14 + 1/2*denom(1/2*s12)*mt^4*mh^2*s12*s13 + 2*denom(1/2*s12)*mt^6*
      s12*s24 + 2*denom(1/2*s12)*mt^6*s12*s23 + 4*denom(1/2*s12)*mt^6*s12*s14
       + 2*denom(1/2*s12)*mt^6*s12*s13 + denom(1/2*s12)*mt^6*s12^2 - denom(1/2
      *s12)*mt^6*mh^2*s12 - 2*denom(1/2*s12)*mt^8*s12 - 1/8*denom(1/4*s12^2)*
      s12*s14^3*s23^2 - 1/4*denom(1/4*s12^2)*s12*s13*s14^2*s23*s24 - 1/8*
      denom(1/4*s12^2)*s12*s13^2*s14*s24^2 + 1/4*denom(1/4*s12^2)*mt^2*s12*
      s14^2*s23*s24 + 3/8*denom(1/4*s12^2)*mt^2*s12*s14^2*s23^2 + 1/4*denom(1/
      4*s12^2)*mt^2*s12*s14^3*s23 + 1/4*denom(1/4*s12^2)*mt^2*s12*s13*s14*
      s24^2 + 1/2*denom(1/4*s12^2)*mt^2*s12*s13*s14*s23*s24 + 1/4*denom(1/4*
      s12^2)*mt^2*s12*s13*s14^2*s24 + 1/4*denom(1/4*s12^2)*mt^2*s12*s13*s14^2*
      s23 + 1/8*denom(1/4*s12^2)*mt^2*s12*s13^2*s24^2 + 1/4*denom(1/4*s12^2)*
      mt^2*s12*s13^2*s14*s24 - 1/8*denom(1/4*s12^2)*mt^4*s12*s14*s24^2 - 1/2*
      denom(1/4*s12^2)*mt^4*s12*s14*s23*s24 - 3/8*denom(1/4*s12^2)*mt^4*s12*
      s14*s23^2 - 1/4*denom(1/4*s12^2)*mt^4*s12*s14^2*s24 - denom(1/4*s12^2)*
      mt^4*s12*s14^2*s23 - 1/8*denom(1/4*s12^2)*mt^4*s12*s14^3 - 1/4*denom(1/4
      *s12^2)*mt^4*s12*s13*s24^2 - 1/4*denom(1/4*s12^2)*mt^4*s12*s13*s23*s24
       - denom(1/4*s12^2)*mt^4*s12*s13*s14*s24 - 1/2*denom(1/4*s12^2)*mt^4*s12
      *s13*s14*s23 - 1/4*denom(1/4*s12^2)*mt^4*s12*s13*s14^2 - 1/4*denom(1/4*
      s12^2)*mt^4*s12*s13^2*s24 - 1/8*denom(1/4*s12^2)*mt^4*s12*s13^2*s14 + 1/
      8*denom(1/4*s12^2)*mt^6*s12*s24^2 + 1/4*denom(1/4*s12^2)*mt^6*s12*s23*
      s24 + 1/8*denom(1/4*s12^2)*mt^6*s12*s23^2 + 3/4*denom(1/4*s12^2)*mt^6*
      s12*s14*s24 + 5/4*denom(1/4*s12^2)*mt^6*s12*s14*s23 + 5/8*denom(1/4*
      s12^2)*mt^6*s12*s14^2 + 3/4*denom(1/4*s12^2)*mt^6*s12*s13*s24 + 1/4*
      denom(1/4*s12^2)*mt^6*s12*s13*s23 + 3/4*denom(1/4*s12^2)*mt^6*s12*s13*
      s14 + 1/8*denom(1/4*s12^2)*mt^6*s12*s13^2 - 1/2*denom(1/4*s12^2)*mt^8*
      s12*s24 - 1/2*denom(1/4*s12^2)*mt^8*s12*s23 - denom(1/4*s12^2)*mt^8*s12*
      s14 - 1/2*denom(1/4*s12^2)*mt^8*s12*s13 + 1/2*denom(1/4*s12^2)*mt^10*s12
      ;
 
 .sort
id KMatrix(15,29) =   - mt^2*s12*s23*s24 - mt^2*s12*s23^2 - mt^2*s12*s14*s23
       - mt^2*s12*s13*s23 - mt^2*s12^2*s23 + mt^2*mh^2*s12*s23 + mt^4*s12*s24
       + 3*mt^4*s12*s23 + mt^4*s12*s14 + mt^4*s12*s13 + mt^4*s12^2 - mt^4*mh^2
      *s12 - 2*mt^6*s12 + 1/2*denom(1/2*s12)*s12*s14*s23*s24^2 + 1/2*denom(1/2
      *s12)*s12*s14*s23^2*s24 + 1/2*denom(1/2*s12)*s12*s14^2*s23*s24 + 1/2*
      denom(1/2*s12)*s12*s13*s14*s23*s24 + 1/2*denom(1/2*s12)*s12^2*s14*s23*
      s24 - 1/2*denom(1/2*s12)*mh^2*s12*s14*s23*s24 - 1/2*denom(1/2*s12)*mt^2*
      s12*s23*s24^2 - 1/2*denom(1/2*s12)*mt^2*s12*s23^2*s24 - 1/2*denom(1/2*
      s12)*mt^2*s12*s14*s24^2 - 5/2*denom(1/2*s12)*mt^2*s12*s14*s23*s24 - 
      denom(1/2*s12)*mt^2*s12*s14*s23^2 - 1/2*denom(1/2*s12)*mt^2*s12*s14^2*
      s24 - 1/2*denom(1/2*s12)*mt^2*s12*s14^2*s23 - denom(1/2*s12)*mt^2*s12*
      s13*s23*s24 - 1/2*denom(1/2*s12)*mt^2*s12*s13*s14*s24 - 1/2*denom(1/2*
      s12)*mt^2*s12*s13*s14*s23 - 1/2*denom(1/2*s12)*mt^2*s12^2*s23*s24 - 1/2*
      denom(1/2*s12)*mt^2*s12^2*s14*s24 - 1/2*denom(1/2*s12)*mt^2*s12^2*s14*
      s23 + 1/2*denom(1/2*s12)*mt^2*mh^2*s12*s23*s24 + 1/2*denom(1/2*s12)*mt^2
      *mh^2*s12*s14*s24 + 1/2*denom(1/2*s12)*mt^2*mh^2*s12*s14*s23 + 1/2*
      denom(1/2*s12)*mt^4*s12*s24^2 + 5/2*denom(1/2*s12)*mt^4*s12*s23*s24 + 
      denom(1/2*s12)*mt^4*s12*s23^2 + 2*denom(1/2*s12)*mt^4*s12*s14*s24 + 3*
      denom(1/2*s12)*mt^4*s12*s14*s23 + 1/2*denom(1/2*s12)*mt^4*s12*s14^2 + 
      denom(1/2*s12)*mt^4*s12*s13*s24 + denom(1/2*s12)*mt^4*s12*s13*s23 + 1/2*
      denom(1/2*s12)*mt^4*s12*s13*s14 + 1/2*denom(1/2*s12)*mt^4*s12^2*s24 + 1/
      2*denom(1/2*s12)*mt^4*s12^2*s23 + 1/2*denom(1/2*s12)*mt^4*s12^2*s14 - 1/
      2*denom(1/2*s12)*mt^4*mh^2*s12*s24 - 1/2*denom(1/2*s12)*mt^4*mh^2*s12*
      s23 - 1/2*denom(1/2*s12)*mt^4*mh^2*s12*s14 - 2*denom(1/2*s12)*mt^6*s12*
      s24 - 3*denom(1/2*s12)*mt^6*s12*s23 - 2*denom(1/2*s12)*mt^6*s12*s14 - 
      denom(1/2*s12)*mt^6*s12*s13 - 1/2*denom(1/2*s12)*mt^6*s12^2 + 1/2*denom(
      1/2*s12)*mt^6*mh^2*s12 + 2*denom(1/2*s12)*mt^8*s12 + 1/4*denom(1/4*s12^2
      )*s12*s14^2*s23^2*s24 + 1/4*denom(1/4*s12^2)*s12*s13*s14*s23*s24^2 - 1/4
      *denom(1/4*s12^2)*mt^2*s12*s14*s23*s24^2 - 1/2*denom(1/4*s12^2)*mt^2*s12
      *s14*s23^2*s24 - 1/2*denom(1/4*s12^2)*mt^2*s12*s14^2*s23*s24 - 1/4*
      denom(1/4*s12^2)*mt^2*s12*s14^2*s23^2 - 1/4*denom(1/4*s12^2)*mt^2*s12*
      s13*s23*s24^2 - 1/4*denom(1/4*s12^2)*mt^2*s12*s13*s14*s24^2 - 1/2*denom(
      1/4*s12^2)*mt^2*s12*s13*s14*s23*s24 + 1/4*denom(1/4*s12^2)*mt^4*s12*s23*
      s24^2 + 1/4*denom(1/4*s12^2)*mt^4*s12*s23^2*s24 + 1/4*denom(1/4*s12^2)*
      mt^4*s12*s14*s24^2 + 3/2*denom(1/4*s12^2)*mt^4*s12*s14*s23*s24 + 1/2*
      denom(1/4*s12^2)*mt^4*s12*s14*s23^2 + 1/4*denom(1/4*s12^2)*mt^4*s12*
      s14^2*s24 + 1/2*denom(1/4*s12^2)*mt^4*s12*s14^2*s23 + 1/4*denom(1/4*
      s12^2)*mt^4*s12*s13*s24^2 + 1/2*denom(1/4*s12^2)*mt^4*s12*s13*s23*s24 + 
      1/2*denom(1/4*s12^2)*mt^4*s12*s13*s14*s24 + 1/4*denom(1/4*s12^2)*mt^4*
      s12*s13*s14*s23 - 1/4*denom(1/4*s12^2)*mt^6*s12*s24^2 - denom(1/4*s12^2)
      *mt^6*s12*s23*s24 - 1/4*denom(1/4*s12^2)*mt^6*s12*s23^2 - denom(1/4*
      s12^2)*mt^6*s12*s14*s24 - 5/4*denom(1/4*s12^2)*mt^6*s12*s14*s23 - 1/4*
      denom(1/4*s12^2)*mt^6*s12*s14^2 - 1/2*denom(1/4*s12^2)*mt^6*s12*s13*s24
       - 1/4*denom(1/4*s12^2)*mt^6*s12*s13*s23 - 1/4*denom(1/4*s12^2)*mt^6*s12
      *s13*s14 + 3/4*denom(1/4*s12^2)*mt^8*s12*s24 + 3/4*denom(1/4*s12^2)*mt^8
      *s12*s23 + 3/4*denom(1/4*s12^2)*mt^8*s12*s14 + 1/4*denom(1/4*s12^2)*mt^8
      *s12*s13 - 1/2*denom(1/4*s12^2)*mt^10*s12;
 
 .sort
id KMatrix(15,30) =  mt^2*s12*s14*s24 + mt^2*s12*s14*s23 + mt^2*s12*s14^2 + 
      mt^2*s12*s13*s14 + mt^2*s12^2*s14 - mt^2*mh^2*s12*s14 - mt^4*s12*s24 - 
      mt^4*s12*s23 - 3*mt^4*s12*s14 - mt^4*s12*s13 - mt^4*s12^2 + mt^4*mh^2*
      s12 + 2*mt^6*s12 - 1/2*denom(1/2*s12)*s12*s13*s14*s23*s24 - 1/2*denom(1/
      2*s12)*s12*s13*s14*s23^2 - 1/2*denom(1/2*s12)*s12*s13*s14^2*s23 - 1/2*
      denom(1/2*s12)*s12*s13^2*s14*s23 - 1/2*denom(1/2*s12)*s12^2*s13*s14*s23
       + 1/2*denom(1/2*s12)*mh^2*s12*s13*s14*s23 + 1/2*denom(1/2*s12)*mt^2*s12
      *s14*s23*s24 + 1/2*denom(1/2*s12)*mt^2*s12*s14*s23^2 + denom(1/2*s12)*
      mt^2*s12*s14^2*s23 + 1/2*denom(1/2*s12)*mt^2*s12*s13*s23*s24 + 1/2*
      denom(1/2*s12)*mt^2*s12*s13*s23^2 + denom(1/2*s12)*mt^2*s12*s13*s14*s24
       + 5/2*denom(1/2*s12)*mt^2*s12*s13*s14*s23 + 1/2*denom(1/2*s12)*mt^2*s12
      *s13*s14^2 + 1/2*denom(1/2*s12)*mt^2*s12*s13^2*s23 + 1/2*denom(1/2*s12)*
      mt^2*s12*s13^2*s14 + 1/2*denom(1/2*s12)*mt^2*s12^2*s14*s23 + 1/2*denom(1/
      2*s12)*mt^2*s12^2*s13*s23 + 1/2*denom(1/2*s12)*mt^2*s12^2*s13*s14 - 1/2*
      denom(1/2*s12)*mt^2*mh^2*s12*s14*s23 - 1/2*denom(1/2*s12)*mt^2*mh^2*s12*
      s13*s23 - 1/2*denom(1/2*s12)*mt^2*mh^2*s12*s13*s14 - 1/2*denom(1/2*s12)*
      mt^4*s12*s23*s24 - 1/2*denom(1/2*s12)*mt^4*s12*s23^2 - denom(1/2*s12)*
      mt^4*s12*s14*s24 - 3*denom(1/2*s12)*mt^4*s12*s14*s23 - denom(1/2*s12)*
      mt^4*s12*s14^2 - denom(1/2*s12)*mt^4*s12*s13*s24 - 2*denom(1/2*s12)*mt^4
      *s12*s13*s23 - 5/2*denom(1/2*s12)*mt^4*s12*s13*s14 - 1/2*denom(1/2*s12)*
      mt^4*s12*s13^2 - 1/2*denom(1/2*s12)*mt^4*s12^2*s23 - 1/2*denom(1/2*s12)*
      mt^4*s12^2*s14 - 1/2*denom(1/2*s12)*mt^4*s12^2*s13 + 1/2*denom(1/2*s12)*
      mt^4*mh^2*s12*s23 + 1/2*denom(1/2*s12)*mt^4*mh^2*s12*s14 + 1/2*denom(1/2
      *s12)*mt^4*mh^2*s12*s13 + denom(1/2*s12)*mt^6*s12*s24 + 2*denom(1/2*s12)
      *mt^6*s12*s23 + 3*denom(1/2*s12)*mt^6*s12*s14 + 2*denom(1/2*s12)*mt^6*
      s12*s13 + 1/2*denom(1/2*s12)*mt^6*s12^2 - 1/2*denom(1/2*s12)*mt^6*mh^2*
      s12 - 2*denom(1/2*s12)*mt^8*s12 - 1/4*denom(1/4*s12^2)*s12*s13*s14^2*
      s23^2 - 1/4*denom(1/4*s12^2)*s12*s13^2*s14*s23*s24 + 1/4*denom(1/4*s12^2
      )*mt^2*s12*s14^2*s23^2 + 1/2*denom(1/4*s12^2)*mt^2*s12*s13*s14*s23*s24
       + 1/2*denom(1/4*s12^2)*mt^2*s12*s13*s14*s23^2 + 1/2*denom(1/4*s12^2)*
      mt^2*s12*s13*s14^2*s23 + 1/4*denom(1/4*s12^2)*mt^2*s12*s13^2*s23*s24 + 1/
      4*denom(1/4*s12^2)*mt^2*s12*s13^2*s14*s24 + 1/4*denom(1/4*s12^2)*mt^2*
      s12*s13^2*s14*s23 - 1/4*denom(1/4*s12^2)*mt^4*s12*s14*s23*s24 - 1/2*
      denom(1/4*s12^2)*mt^4*s12*s14*s23^2 - 1/2*denom(1/4*s12^2)*mt^4*s12*
      s14^2*s23 - 1/2*denom(1/4*s12^2)*mt^4*s12*s13*s23*s24 - 1/4*denom(1/4*
      s12^2)*mt^4*s12*s13*s23^2 - 1/2*denom(1/4*s12^2)*mt^4*s12*s13*s14*s24 - 
      3/2*denom(1/4*s12^2)*mt^4*s12*s13*s14*s23 - 1/4*denom(1/4*s12^2)*mt^4*
      s12*s13*s14^2 - 1/4*denom(1/4*s12^2)*mt^4*s12*s13^2*s24 - 1/4*denom(1/4*
      s12^2)*mt^4*s12*s13^2*s23 - 1/4*denom(1/4*s12^2)*mt^4*s12*s13^2*s14 + 1/
      4*denom(1/4*s12^2)*mt^6*s12*s23*s24 + 1/4*denom(1/4*s12^2)*mt^6*s12*
      s23^2 + 1/4*denom(1/4*s12^2)*mt^6*s12*s14*s24 + 5/4*denom(1/4*s12^2)*
      mt^6*s12*s14*s23 + 1/4*denom(1/4*s12^2)*mt^6*s12*s14^2 + 1/2*denom(1/4*
      s12^2)*mt^6*s12*s13*s24 + denom(1/4*s12^2)*mt^6*s12*s13*s23 + denom(1/4*
      s12^2)*mt^6*s12*s13*s14 + 1/4*denom(1/4*s12^2)*mt^6*s12*s13^2 - 1/4*
      denom(1/4*s12^2)*mt^8*s12*s24 - 3/4*denom(1/4*s12^2)*mt^8*s12*s23 - 3/4*
      denom(1/4*s12^2)*mt^8*s12*s14 - 3/4*denom(1/4*s12^2)*mt^8*s12*s13 + 1/2*
      denom(1/4*s12^2)*mt^10*s12;
 
 .sort
id KMatrix(15,31) =  1/2*s12*s23*s24^2 + s12*s23^2*s24 + 1/2*s12*s23^3 + s12*
      s14*s23*s24 + s12*s14*s23^2 + 1/2*s12*s14^2*s23 + s12*s13*s23*s24 + s12*
      s13*s23^2 + s12*s13*s14*s23 + 1/2*s12*s13^2*s23 + s12^2*s23*s24 + s12^2*
      s23^2 + s12^2*s14*s23 + s12^2*s13*s23 + 1/2*s12^3*s23 - mh^2*s12*s23*s24
       - mh^2*s12*s23^2 - mh^2*s12*s14*s23 - mh^2*s12*s13*s23 - mh^2*s12^2*s23
       + 1/2*mh^4*s12*s23 - 1/2*mt^2*s12*s24^2 - 3*mt^2*s12*s23*s24 - 5/2*mt^2
      *s12*s23^2 - mt^2*s12*s14*s24 - 3*mt^2*s12*s14*s23 - 1/2*mt^2*s12*s14^2
       - mt^2*s12*s13*s24 - 3*mt^2*s12*s13*s23 - mt^2*s12*s13*s14 - 1/2*mt^2*
      s12*s13^2 - mt^2*s12^2*s24 - 3*mt^2*s12^2*s23 - mt^2*s12^2*s14 - mt^2*
      s12^2*s13 - 1/2*mt^2*s12^3 + mt^2*mh^2*s12*s24 + 3*mt^2*mh^2*s12*s23 + 
      mt^2*mh^2*s12*s14 + mt^2*mh^2*s12*s13 + mt^2*mh^2*s12^2 - 1/2*mt^2*mh^4*
      s12 + 2*mt^4*s12*s24 + 4*mt^4*s12*s23 + 2*mt^4*s12*s14 + 2*mt^4*s12*s13
       + 2*mt^4*s12^2 - 2*mt^4*mh^2*s12 - 2*mt^6*s12 + 1/2*denom(1/2*s12)*s12*
      s14*s23^2*s24 + 1/2*denom(1/2*s12)*s12*s14*s23^3 + 1/2*denom(1/2*s12)*
      s12*s14^2*s23^2 + 1/2*denom(1/2*s12)*s12*s13*s23*s24^2 + 1/2*denom(1/2*
      s12)*s12*s13*s23^2*s24 + 1/2*denom(1/2*s12)*s12*s13*s14*s23*s24 + 1/2*
      denom(1/2*s12)*s12*s13*s14*s23^2 + 1/2*denom(1/2*s12)*s12*s13^2*s23*s24
       + 1/2*denom(1/2*s12)*s12^2*s14*s23^2 + 1/2*denom(1/2*s12)*s12^2*s13*s23
      *s24 - 1/2*denom(1/2*s12)*mh^2*s12*s14*s23^2 - 1/2*denom(1/2*s12)*mh^2*
      s12*s13*s23*s24 - 1/2*denom(1/2*s12)*mt^2*s12*s23*s24^2 - denom(1/2*s12)
      *mt^2*s12*s23^2*s24 - 1/2*denom(1/2*s12)*mt^2*s12*s23^3 - 3/2*denom(1/2*
      s12)*mt^2*s12*s14*s23*s24 - 5/2*denom(1/2*s12)*mt^2*s12*s14*s23^2 - 
      denom(1/2*s12)*mt^2*s12*s14^2*s23 - 1/2*denom(1/2*s12)*mt^2*s12*s13*
      s24^2 - 5/2*denom(1/2*s12)*mt^2*s12*s13*s23*s24 - denom(1/2*s12)*mt^2*
      s12*s13*s23^2 - 1/2*denom(1/2*s12)*mt^2*s12*s13*s14*s24 - 3/2*denom(1/2*
      s12)*mt^2*s12*s13*s14*s23 - 1/2*denom(1/2*s12)*mt^2*s12*s13^2*s24 - 1/2*
      denom(1/2*s12)*mt^2*s12*s13^2*s23 - 1/2*denom(1/2*s12)*mt^2*s12^2*s23*
      s24 - 1/2*denom(1/2*s12)*mt^2*s12^2*s23^2 - denom(1/2*s12)*mt^2*s12^2*
      s14*s23 - 1/2*denom(1/2*s12)*mt^2*s12^2*s13*s24 - 1/2*denom(1/2*s12)*
      mt^2*s12^2*s13*s23 + 1/2*denom(1/2*s12)*mt^2*mh^2*s12*s23*s24 + 1/2*
      denom(1/2*s12)*mt^2*mh^2*s12*s23^2 + denom(1/2*s12)*mt^2*mh^2*s12*s14*
      s23 + 1/2*denom(1/2*s12)*mt^2*mh^2*s12*s13*s24 + 1/2*denom(1/2*s12)*mt^2
      *mh^2*s12*s13*s23 + 1/2*denom(1/2*s12)*mt^4*s12*s24^2 + 3*denom(1/2*s12)
      *mt^4*s12*s23*s24 + 5/2*denom(1/2*s12)*mt^4*s12*s23^2 + denom(1/2*s12)*
      mt^4*s12*s14*s24 + 4*denom(1/2*s12)*mt^4*s12*s14*s23 + 1/2*denom(1/2*s12
      )*mt^4*s12*s14^2 + 2*denom(1/2*s12)*mt^4*s12*s13*s24 + 3*denom(1/2*s12)*
      mt^4*s12*s13*s23 + denom(1/2*s12)*mt^4*s12*s13*s14 + 1/2*denom(1/2*s12)*
      mt^4*s12*s13^2 + 1/2*denom(1/2*s12)*mt^4*s12^2*s24 + 3/2*denom(1/2*s12)*
      mt^4*s12^2*s23 + 1/2*denom(1/2*s12)*mt^4*s12^2*s14 + 1/2*denom(1/2*s12)*
      mt^4*s12^2*s13 - 1/2*denom(1/2*s12)*mt^4*mh^2*s12*s24 - 3/2*denom(1/2*
      s12)*mt^4*mh^2*s12*s23 - 1/2*denom(1/2*s12)*mt^4*mh^2*s12*s14 - 1/2*
      denom(1/2*s12)*mt^4*mh^2*s12*s13 - 2*denom(1/2*s12)*mt^6*s12*s24 - 4*
      denom(1/2*s12)*mt^6*s12*s23 - 2*denom(1/2*s12)*mt^6*s12*s14 - 2*denom(1/
      2*s12)*mt^6*s12*s13 - denom(1/2*s12)*mt^6*s12^2 + denom(1/2*s12)*mt^6*
      mh^2*s12 + 2*denom(1/2*s12)*mt^8*s12 + 1/8*denom(1/4*s12^2)*s12*s14^2*
      s23^3 + 1/4*denom(1/4*s12^2)*s12*s13*s14*s23^2*s24 + 1/8*denom(1/4*s12^2
      )*s12*s13^2*s23*s24^2 - 1/4*denom(1/4*s12^2)*mt^2*s12*s14*s23^2*s24 - 1/
      4*denom(1/4*s12^2)*mt^2*s12*s14*s23^3 - 3/8*denom(1/4*s12^2)*mt^2*s12*
      s14^2*s23^2 - 1/4*denom(1/4*s12^2)*mt^2*s12*s13*s23*s24^2 - 1/4*denom(1/
      4*s12^2)*mt^2*s12*s13*s23^2*s24 - 1/2*denom(1/4*s12^2)*mt^2*s12*s13*s14*
      s23*s24 - 1/4*denom(1/4*s12^2)*mt^2*s12*s13*s14*s23^2 - 1/8*denom(1/4*
      s12^2)*mt^2*s12*s13^2*s24^2 - 1/4*denom(1/4*s12^2)*mt^2*s12*s13^2*s23*
      s24 + 1/8*denom(1/4*s12^2)*mt^4*s12*s23*s24^2 + 1/4*denom(1/4*s12^2)*
      mt^4*s12*s23^2*s24 + 1/8*denom(1/4*s12^2)*mt^4*s12*s23^3 + 1/2*denom(1/4
      *s12^2)*mt^4*s12*s14*s23*s24 + denom(1/4*s12^2)*mt^4*s12*s14*s23^2 + 3/8
      *denom(1/4*s12^2)*mt^4*s12*s14^2*s23 + 1/4*denom(1/4*s12^2)*mt^4*s12*s13
      *s24^2 + denom(1/4*s12^2)*mt^4*s12*s13*s23*s24 + 1/4*denom(1/4*s12^2)*
      mt^4*s12*s13*s23^2 + 1/4*denom(1/4*s12^2)*mt^4*s12*s13*s14*s24 + 1/2*
      denom(1/4*s12^2)*mt^4*s12*s13*s14*s23 + 1/4*denom(1/4*s12^2)*mt^4*s12*
      s13^2*s24 + 1/8*denom(1/4*s12^2)*mt^4*s12*s13^2*s23 - 1/8*denom(1/4*
      s12^2)*mt^6*s12*s24^2 - 3/4*denom(1/4*s12^2)*mt^6*s12*s23*s24 - 5/8*
      denom(1/4*s12^2)*mt^6*s12*s23^2 - 1/4*denom(1/4*s12^2)*mt^6*s12*s14*s24
       - 5/4*denom(1/4*s12^2)*mt^6*s12*s14*s23 - 1/8*denom(1/4*s12^2)*mt^6*s12
      *s14^2 - 3/4*denom(1/4*s12^2)*mt^6*s12*s13*s24 - 3/4*denom(1/4*s12^2)*
      mt^6*s12*s13*s23 - 1/4*denom(1/4*s12^2)*mt^6*s12*s13*s14 - 1/8*denom(1/4
      *s12^2)*mt^6*s12*s13^2 + 1/2*denom(1/4*s12^2)*mt^8*s12*s24 + denom(1/4*
      s12^2)*mt^8*s12*s23 + 1/2*denom(1/4*s12^2)*mt^8*s12*s14 + 1/2*denom(1/4*
      s12^2)*mt^8*s12*s13 - 1/2*denom(1/4*s12^2)*mt^10*s12;
 
 .sort
id KMatrix(15,32) =   - 2*mt^4*s12*s14 + 2*mt^6*s12 + denom(1/2*s12)*mt^2*s12*
      s14^2*s24 + denom(1/2*s12)*mt^2*s12*s13*s14*s23 - 2*denom(1/2*s12)*mt^4*
      s12*s14*s24 - denom(1/2*s12)*mt^4*s12*s14*s23 - denom(1/2*s12)*mt^4*s12*
      s14^2 - denom(1/2*s12)*mt^4*s12*s13*s23 - denom(1/2*s12)*mt^4*s12*s13*
      s14 + denom(1/2*s12)*mt^6*s12*s24 + denom(1/2*s12)*mt^6*s12*s23 + 3*
      denom(1/2*s12)*mt^6*s12*s14 + denom(1/2*s12)*mt^6*s12*s13 - 2*denom(1/2*
      s12)*mt^8*s12 - 1/2*denom(1/4*s12^2)*s12*s13*s14^2*s23*s24 + 1/2*denom(1/
      4*s12^2)*mt^2*s12*s14^2*s23*s24 + denom(1/4*s12^2)*mt^2*s12*s13*s14*s23*
      s24 + 1/2*denom(1/4*s12^2)*mt^2*s12*s13*s14^2*s24 + 1/2*denom(1/4*s12^2)
      *mt^2*s12*s13*s14^2*s23 - denom(1/4*s12^2)*mt^4*s12*s14*s23*s24 - 1/2*
      denom(1/4*s12^2)*mt^4*s12*s14^2*s24 - 1/2*denom(1/4*s12^2)*mt^4*s12*
      s14^2*s23 - 1/2*denom(1/4*s12^2)*mt^4*s12*s13*s23*s24 - denom(1/4*s12^2)
      *mt^4*s12*s13*s14*s24 - denom(1/4*s12^2)*mt^4*s12*s13*s14*s23 - 1/2*
      denom(1/4*s12^2)*mt^4*s12*s13*s14^2 + 1/2*denom(1/4*s12^2)*mt^6*s12*s23*
      s24 + denom(1/4*s12^2)*mt^6*s12*s14*s24 + denom(1/4*s12^2)*mt^6*s12*s14*
      s23 + 1/2*denom(1/4*s12^2)*mt^6*s12*s14^2 + 1/2*denom(1/4*s12^2)*mt^6*
      s12*s13*s24 + 1/2*denom(1/4*s12^2)*mt^6*s12*s13*s23 + denom(1/4*s12^2)*
      mt^6*s12*s13*s14 - 1/2*denom(1/4*s12^2)*mt^8*s12*s24 - 1/2*denom(1/4*
      s12^2)*mt^8*s12*s23 - denom(1/4*s12^2)*mt^8*s12*s14 - 1/2*denom(1/4*
      s12^2)*mt^8*s12*s13 + 1/2*denom(1/4*s12^2)*mt^10*s12;
 
 .sort
id KMatrix(15,33) =   - mt^2*s12*s23*s24 - mt^2*s12*s23^2 - mt^2*s12*s14*s23
       - mt^2*s12*s13*s23 - mt^2*s12^2*s23 + mt^2*mh^2*s12*s23 + mt^4*s12*s24
       + 3*mt^4*s12*s23 + mt^4*s12*s14 + mt^4*s12*s13 + mt^4*s12^2 - mt^4*mh^2
      *s12 - 2*mt^6*s12 + 1/2*denom(1/2*s12)*s12*s14*s23*s24^2 + 1/2*denom(1/2
      *s12)*s12*s14*s23^2*s24 + 1/2*denom(1/2*s12)*s12*s14^2*s23*s24 + 1/2*
      denom(1/2*s12)*s12*s13*s14*s23*s24 + 1/2*denom(1/2*s12)*s12^2*s14*s23*
      s24 - 1/2*denom(1/2*s12)*mh^2*s12*s14*s23*s24 - 1/2*denom(1/2*s12)*mt^2*
      s12*s23*s24^2 - 1/2*denom(1/2*s12)*mt^2*s12*s23^2*s24 - 1/2*denom(1/2*
      s12)*mt^2*s12*s14*s24^2 - 5/2*denom(1/2*s12)*mt^2*s12*s14*s23*s24 - 
      denom(1/2*s12)*mt^2*s12*s14*s23^2 - 1/2*denom(1/2*s12)*mt^2*s12*s14^2*
      s24 - 1/2*denom(1/2*s12)*mt^2*s12*s14^2*s23 - denom(1/2*s12)*mt^2*s12*
      s13*s23*s24 - 1/2*denom(1/2*s12)*mt^2*s12*s13*s14*s24 - 1/2*denom(1/2*
      s12)*mt^2*s12*s13*s14*s23 - 1/2*denom(1/2*s12)*mt^2*s12^2*s23*s24 - 1/2*
      denom(1/2*s12)*mt^2*s12^2*s14*s24 - 1/2*denom(1/2*s12)*mt^2*s12^2*s14*
      s23 + 1/2*denom(1/2*s12)*mt^2*mh^2*s12*s23*s24 + 1/2*denom(1/2*s12)*mt^2
      *mh^2*s12*s14*s24 + 1/2*denom(1/2*s12)*mt^2*mh^2*s12*s14*s23 + 1/2*
      denom(1/2*s12)*mt^4*s12*s24^2 + 5/2*denom(1/2*s12)*mt^4*s12*s23*s24 + 
      denom(1/2*s12)*mt^4*s12*s23^2 + 2*denom(1/2*s12)*mt^4*s12*s14*s24 + 3*
      denom(1/2*s12)*mt^4*s12*s14*s23 + 1/2*denom(1/2*s12)*mt^4*s12*s14^2 + 
      denom(1/2*s12)*mt^4*s12*s13*s24 + denom(1/2*s12)*mt^4*s12*s13*s23 + 1/2*
      denom(1/2*s12)*mt^4*s12*s13*s14 + 1/2*denom(1/2*s12)*mt^4*s12^2*s24 + 1/
      2*denom(1/2*s12)*mt^4*s12^2*s23 + 1/2*denom(1/2*s12)*mt^4*s12^2*s14 - 1/
      2*denom(1/2*s12)*mt^4*mh^2*s12*s24 - 1/2*denom(1/2*s12)*mt^4*mh^2*s12*
      s23 - 1/2*denom(1/2*s12)*mt^4*mh^2*s12*s14 - 2*denom(1/2*s12)*mt^6*s12*
      s24 - 3*denom(1/2*s12)*mt^6*s12*s23 - 2*denom(1/2*s12)*mt^6*s12*s14 - 
      denom(1/2*s12)*mt^6*s12*s13 - 1/2*denom(1/2*s12)*mt^6*s12^2 + 1/2*denom(
      1/2*s12)*mt^6*mh^2*s12 + 2*denom(1/2*s12)*mt^8*s12 + 1/4*denom(1/4*s12^2
      )*s12*s14^2*s23^2*s24 + 1/4*denom(1/4*s12^2)*s12*s13*s14*s23*s24^2 - 1/4
      *denom(1/4*s12^2)*mt^2*s12*s14*s23*s24^2 - 1/2*denom(1/4*s12^2)*mt^2*s12
      *s14*s23^2*s24 - 1/2*denom(1/4*s12^2)*mt^2*s12*s14^2*s23*s24 - 1/4*
      denom(1/4*s12^2)*mt^2*s12*s14^2*s23^2 - 1/4*denom(1/4*s12^2)*mt^2*s12*
      s13*s23*s24^2 - 1/4*denom(1/4*s12^2)*mt^2*s12*s13*s14*s24^2 - 1/2*denom(
      1/4*s12^2)*mt^2*s12*s13*s14*s23*s24 + 1/4*denom(1/4*s12^2)*mt^4*s12*s23*
      s24^2 + 1/4*denom(1/4*s12^2)*mt^4*s12*s23^2*s24 + 1/4*denom(1/4*s12^2)*
      mt^4*s12*s14*s24^2 + 3/2*denom(1/4*s12^2)*mt^4*s12*s14*s23*s24 + 1/2*
      denom(1/4*s12^2)*mt^4*s12*s14*s23^2 + 1/4*denom(1/4*s12^2)*mt^4*s12*
      s14^2*s24 + 1/2*denom(1/4*s12^2)*mt^4*s12*s14^2*s23 + 1/4*denom(1/4*
      s12^2)*mt^4*s12*s13*s24^2 + 1/2*denom(1/4*s12^2)*mt^4*s12*s13*s23*s24 + 
      1/2*denom(1/4*s12^2)*mt^4*s12*s13*s14*s24 + 1/4*denom(1/4*s12^2)*mt^4*
      s12*s13*s14*s23 - 1/4*denom(1/4*s12^2)*mt^6*s12*s24^2 - denom(1/4*s12^2)
      *mt^6*s12*s23*s24 - 1/4*denom(1/4*s12^2)*mt^6*s12*s23^2 - denom(1/4*
      s12^2)*mt^6*s12*s14*s24 - 5/4*denom(1/4*s12^2)*mt^6*s12*s14*s23 - 1/4*
      denom(1/4*s12^2)*mt^6*s12*s14^2 - 1/2*denom(1/4*s12^2)*mt^6*s12*s13*s24
       - 1/4*denom(1/4*s12^2)*mt^6*s12*s13*s23 - 1/4*denom(1/4*s12^2)*mt^6*s12
      *s13*s14 + 3/4*denom(1/4*s12^2)*mt^8*s12*s24 + 3/4*denom(1/4*s12^2)*mt^8
      *s12*s23 + 3/4*denom(1/4*s12^2)*mt^8*s12*s14 + 1/4*denom(1/4*s12^2)*mt^8
      *s12*s13 - 1/2*denom(1/4*s12^2)*mt^10*s12;
 
 .sort
id KMatrix(15,34) =   - mt*s12*s14*s24 - mt*s12*s14*s23 - mt*s12*s14^2 - mt*
      s12*s13*s14 - mt*s12^2*s14 + mt*mh^2*s12*s14 + mt^3*s12*s24 + mt^3*s12*
      s23 + 3*mt^3*s12*s14 + mt^3*s12*s13 + mt^3*s12^2 - mt^3*mh^2*s12 - 2*
      mt^5*s12 - denom(1/2*s12)*mt*s12*s14^2*s23 - denom(1/2*s12)*mt*s12*s13*
      s14*s24 + denom(1/2*s12)*mt^3*s12*s14*s24 + 2*denom(1/2*s12)*mt^3*s12*
      s14*s23 + denom(1/2*s12)*mt^3*s12*s14^2 + denom(1/2*s12)*mt^3*s12*s13*
      s24 + denom(1/2*s12)*mt^3*s12*s13*s14 - denom(1/2*s12)*mt^5*s12*s24 - 
      denom(1/2*s12)*mt^5*s12*s23 - 3*denom(1/2*s12)*mt^5*s12*s14 - denom(1/2*
      s12)*mt^5*s12*s13 + 2*denom(1/2*s12)*mt^7*s12 + 1/4*denom(1/4*s12^2)*mt*
      s12^2*s14^2*s23 + 1/4*denom(1/4*s12^2)*mt*s12^2*s13*s14*s24 - 1/4*denom(
      1/4*s12^2)*mt^3*s12^2*s14*s24 - 1/2*denom(1/4*s12^2)*mt^3*s12^2*s14*s23
       - 1/4*denom(1/4*s12^2)*mt^3*s12^2*s14^2 - 1/4*denom(1/4*s12^2)*mt^3*
      s12^2*s13*s24 - 1/4*denom(1/4*s12^2)*mt^3*s12^2*s13*s14 + 1/4*denom(1/4*
      s12^2)*mt^5*s12^2*s24 + 1/4*denom(1/4*s12^2)*mt^5*s12^2*s23 + 3/4*denom(
      1/4*s12^2)*mt^5*s12^2*s14 + 1/4*denom(1/4*s12^2)*mt^5*s12^2*s13 - 1/2*
      denom(1/4*s12^2)*mt^7*s12^2;
 
 .sort
id KMatrix(15,35) =  mt*s12*s23*s24 + mt*s12*s23^2 + mt*s12*s14*s23 + mt*s12*
      s13*s23 + mt*s12^2*s23 - mt*mh^2*s12*s23 - mt^3*s12*s24 - 3*mt^3*s12*s23
       - mt^3*s12*s14 - mt^3*s12*s13 - mt^3*s12^2 + mt^3*mh^2*s12 + 2*mt^5*s12
       + denom(1/2*s12)*mt*s12*s14*s23^2 + denom(1/2*s12)*mt*s12*s13*s23*s24
       - denom(1/2*s12)*mt^3*s12*s23*s24 - denom(1/2*s12)*mt^3*s12*s23^2 - 2*
      denom(1/2*s12)*mt^3*s12*s14*s23 - denom(1/2*s12)*mt^3*s12*s13*s24 - 
      denom(1/2*s12)*mt^3*s12*s13*s23 + denom(1/2*s12)*mt^5*s12*s24 + 3*denom(
      1/2*s12)*mt^5*s12*s23 + denom(1/2*s12)*mt^5*s12*s14 + denom(1/2*s12)*
      mt^5*s12*s13 - 2*denom(1/2*s12)*mt^7*s12 - 1/4*denom(1/4*s12^2)*mt*s12^2
      *s14*s23^2 - 1/4*denom(1/4*s12^2)*mt*s12^2*s13*s23*s24 + 1/4*denom(1/4*
      s12^2)*mt^3*s12^2*s23*s24 + 1/4*denom(1/4*s12^2)*mt^3*s12^2*s23^2 + 1/2*
      denom(1/4*s12^2)*mt^3*s12^2*s14*s23 + 1/4*denom(1/4*s12^2)*mt^3*s12^2*
      s13*s24 + 1/4*denom(1/4*s12^2)*mt^3*s12^2*s13*s23 - 1/4*denom(1/4*s12^2)
      *mt^5*s12^2*s24 - 3/4*denom(1/4*s12^2)*mt^5*s12^2*s23 - 1/4*denom(1/4*
      s12^2)*mt^5*s12^2*s14 - 1/4*denom(1/4*s12^2)*mt^5*s12^2*s13 + 1/2*denom(
      1/4*s12^2)*mt^7*s12^2;
 
 .sort
id KMatrix(15,36) =   - s12*s14*s23*s24 - s12*s14*s23^2 - s12*s14^2*s23 - s12*
      s13*s14*s23 - s12^2*s14*s23 + mh^2*s12*s14*s23 + mt^2*s12*s23*s24 + mt^2
      *s12*s23^2 + mt^2*s12*s14*s24 + 4*mt^2*s12*s14*s23 + mt^2*s12*s14^2 + 
      mt^2*s12*s13*s23 + mt^2*s12*s13*s14 + mt^2*s12^2*s23 + mt^2*s12^2*s14 - 
      mt^2*mh^2*s12*s23 - mt^2*mh^2*s12*s14 - mt^4*s12*s24 - 3*mt^4*s12*s23 - 
      3*mt^4*s12*s14 - mt^4*s12*s13 - mt^4*s12^2 + mt^4*mh^2*s12 + 2*mt^6*s12
       - denom(1/2*s12)*s12*s14^2*s23^2 - denom(1/2*s12)*s12*s13*s14*s23*s24
       + denom(1/2*s12)*mt^2*s12*s14*s23*s24 + 2*denom(1/2*s12)*mt^2*s12*s14*
      s23^2 + 2*denom(1/2*s12)*mt^2*s12*s14^2*s23 + denom(1/2*s12)*mt^2*s12*
      s13*s23*s24 + denom(1/2*s12)*mt^2*s12*s13*s14*s24 + denom(1/2*s12)*mt^2*
      s12*s13*s14*s23 - denom(1/2*s12)*mt^4*s12*s23*s24 - denom(1/2*s12)*mt^4*
      s12*s23^2 - denom(1/2*s12)*mt^4*s12*s14*s24 - 5*denom(1/2*s12)*mt^4*s12*
      s14*s23 - denom(1/2*s12)*mt^4*s12*s14^2 - denom(1/2*s12)*mt^4*s12*s13*
      s24 - denom(1/2*s12)*mt^4*s12*s13*s23 - denom(1/2*s12)*mt^4*s12*s13*s14
       + denom(1/2*s12)*mt^6*s12*s24 + 3*denom(1/2*s12)*mt^6*s12*s23 + 3*
      denom(1/2*s12)*mt^6*s12*s14 + denom(1/2*s12)*mt^6*s12*s13 - 2*denom(1/2*
      s12)*mt^8*s12 + 1/4*denom(1/4*s12^2)*s12^2*s14^2*s23^2 + 1/4*denom(1/4*
      s12^2)*s12^2*s13*s14*s23*s24 - 1/4*denom(1/4*s12^2)*mt^2*s12^2*s14*s23*
      s24 - 1/2*denom(1/4*s12^2)*mt^2*s12^2*s14*s23^2 - 1/2*denom(1/4*s12^2)*
      mt^2*s12^2*s14^2*s23 - 1/4*denom(1/4*s12^2)*mt^2*s12^2*s13*s23*s24 - 1/4
      *denom(1/4*s12^2)*mt^2*s12^2*s13*s14*s24 - 1/4*denom(1/4*s12^2)*mt^2*
      s12^2*s13*s14*s23 + 1/4*denom(1/4*s12^2)*mt^4*s12^2*s23*s24 + 1/4*denom(
      1/4*s12^2)*mt^4*s12^2*s23^2 + 1/4*denom(1/4*s12^2)*mt^4*s12^2*s14*s24 + 
      5/4*denom(1/4*s12^2)*mt^4*s12^2*s14*s23 + 1/4*denom(1/4*s12^2)*mt^4*
      s12^2*s14^2 + 1/4*denom(1/4*s12^2)*mt^4*s12^2*s13*s24 + 1/4*denom(1/4*
      s12^2)*mt^4*s12^2*s13*s23 + 1/4*denom(1/4*s12^2)*mt^4*s12^2*s13*s14 - 1/
      4*denom(1/4*s12^2)*mt^6*s12^2*s24 - 3/4*denom(1/4*s12^2)*mt^6*s12^2*s23
       - 3/4*denom(1/4*s12^2)*mt^6*s12^2*s14 - 1/4*denom(1/4*s12^2)*mt^6*s12^2
      *s13 + 1/2*denom(1/4*s12^2)*mt^8*s12^2;
 
 .sort
id KMatrix(16,1) =  1/4*s14*s23*s24^2 + 1/2*s14*s23^2*s24 + 1/4*s14*s23^3 + 1/
      2*s14^2*s23*s24 + 1/2*s14^2*s23^2 + 1/4*s14^3*s23 - 1/4*s13*s24^3 - 1/2*
      s13*s23*s24^2 - 1/4*s13*s23^2*s24 - 1/2*s13*s14*s24^2 + 1/2*s13*s14*
      s23^2 - 1/4*s13*s14^2*s24 + 1/2*s13*s14^2*s23 - 1/2*s13^2*s24^2 - 1/2*
      s13^2*s23*s24 - 1/2*s13^2*s14*s24 + 1/4*s13^2*s14*s23 - 1/4*s13^3*s24 - 
      1/4*s12*s24^3 - 3/4*s12*s23*s24^2 - 3/4*s12*s23^2*s24 - 1/4*s12*s23^3 - 
      3/4*s12*s14*s24^2 - s12*s14*s23*s24 - 1/4*s12*s14*s23^2 - 3/4*s12*s14^2*
      s24 - 1/4*s12*s14^2*s23 - 1/4*s12*s14^3 - 5/4*s12*s13*s24^2 - 2*s12*s13*
      s23*s24 - 3/4*s12*s13*s23^2 - 2*s12*s13*s14*s24 - s12*s13*s14*s23 - 3/4*
      s12*s13*s14^2 - 5/4*s12*s13^2*s24 - 3/4*s12*s13^2*s23 - 3/4*s12*s13^2*
      s14 - 1/4*s12*s13^3 - 3/4*s12^2*s24^2 - 3/2*s12^2*s23*s24 - 3/4*s12^2*
      s23^2 - 3/2*s12^2*s14*s24 - 5/4*s12^2*s14*s23 - 3/4*s12^2*s14^2 - 7/4*
      s12^2*s13*s24 - 3/2*s12^2*s13*s23 - 3/2*s12^2*s13*s14 - 3/4*s12^2*s13^2
       - 3/4*s12^3*s24 - 3/4*s12^3*s23 - 3/4*s12^3*s14 - 3/4*s12^3*s13 - 1/4*
      s12^4 - 1/2*mh^2*s14*s23*s24 - 1/2*mh^2*s14*s23^2 - 1/2*mh^2*s14^2*s23
       + 1/2*mh^2*s13*s24^2 + 1/2*mh^2*s13*s23*s24 + 1/2*mh^2*s13*s14*s24 - 1/
      2*mh^2*s13*s14*s23 + 1/2*mh^2*s13^2*s24 + 3/4*mh^2*s12*s24^2 + 3/2*mh^2*
      s12*s23*s24 + 3/4*mh^2*s12*s23^2 + 3/2*mh^2*s12*s14*s24 + mh^2*s12*s14*
      s23 + 3/4*mh^2*s12*s14^2 + 2*mh^2*s12*s13*s24 + 3/2*mh^2*s12*s13*s23 + 3/
      2*mh^2*s12*s13*s14 + 3/4*mh^2*s12*s13^2 + 3/2*mh^2*s12^2*s24 + 3/2*mh^2*
      s12^2*s23 + 3/2*mh^2*s12^2*s14 + 3/2*mh^2*s12^2*s13 + 3/4*mh^2*s12^3 + 1/
      4*mh^4*s14*s23 - 1/4*mh^4*s13*s24 - 3/4*mh^4*s12*s24 - 3/4*mh^4*s12*s23
       - 3/4*mh^4*s12*s14 - 3/4*mh^4*s12*s13 - 3/4*mh^4*s12^2 + 1/4*mh^6*s12
       + 1/4*mt^2*s24^3 + 1/4*mt^2*s23*s24^2 - 1/4*mt^2*s23^2*s24 - 1/4*mt^2*
      s23^3 + 1/4*mt^2*s14*s24^2 - 3/2*mt^2*s14*s23*s24 - 7/4*mt^2*s14*s23^2
       - 1/4*mt^2*s14^2*s24 - 7/4*mt^2*s14^2*s23 - 1/4*mt^2*s14^3 + 7/4*mt^2*
      s13*s24^2 + 3/2*mt^2*s13*s23*s24 - 1/4*mt^2*s13*s23^2 + 3/2*mt^2*s13*s14
      *s24 - 3/2*mt^2*s13*s14*s23 - 1/4*mt^2*s13*s14^2 + 7/4*mt^2*s13^2*s24 + 
      1/4*mt^2*s13^2*s23 + 1/4*mt^2*s13^2*s14 + 1/4*mt^2*s13^3 + 3/2*mt^2*s12*
      s24^2 + 2*mt^2*s12*s23*s24 + 1/2*mt^2*s12*s23^2 + 2*mt^2*s12*s14*s24 + 1/
      2*mt^2*s12*s14^2 + 4*mt^2*s12*s13*s24 + 2*mt^2*s12*s13*s23 + 2*mt^2*s12*
      s13*s14 + 3/2*mt^2*s12*s13^2 + 9/4*mt^2*s12^2*s24 + 7/4*mt^2*s12^2*s23
       + 7/4*mt^2*s12^2*s14 + 9/4*mt^2*s12^2*s13 + mt^2*s12^3 - 1/2*mt^2*mh^2*
      s24^2 + 1/2*mt^2*mh^2*s23^2 + 2*mt^2*mh^2*s14*s23 + 1/2*mt^2*mh^2*s14^2
       - 2*mt^2*mh^2*s13*s24 - 1/2*mt^2*mh^2*s13^2 - 5/2*mt^2*mh^2*s12*s24 - 3/
      2*mt^2*mh^2*s12*s23 - 3/2*mt^2*mh^2*s12*s14 - 5/2*mt^2*mh^2*s12*s13 - 2*
      mt^2*mh^2*s12^2 + 1/4*mt^2*mh^4*s24 - 1/4*mt^2*mh^4*s23 - 1/4*mt^2*mh^4*
      s14 + 1/4*mt^2*mh^4*s13 + mt^2*mh^4*s12 - mt^4*s24^2 + mt^4*s23^2 + 3*
      mt^4*s14*s23 + mt^4*s14^2 - 3*mt^4*s13*s24 - mt^4*s13^2 - 2*mt^4*s12*s24
       - 2*mt^4*s12*s13 - mt^4*s12^2 + mt^4*mh^2*s24 - mt^4*mh^2*s23 - mt^4*
      mh^2*s14 + mt^4*mh^2*s13 + mt^4*mh^2*s12 + mt^6*s24 - mt^6*s23 - mt^6*
      s14 + mt^6*s13 + 1/4*denom(1/2*s12)*s14^2*s23^2*s24 + 1/4*denom(1/2*s12)
      *s14^2*s23^3 + 1/4*denom(1/2*s12)*s14^3*s23^2 + 1/4*denom(1/2*s12)*s13*
      s14^2*s23^2 - 1/4*denom(1/2*s12)*s13^2*s24^3 - 1/4*denom(1/2*s12)*s13^2*
      s23*s24^2 - 1/4*denom(1/2*s12)*s13^2*s14*s24^2 - 1/4*denom(1/2*s12)*
      s13^3*s24^2 - 1/4*denom(1/2*s12)*s12*s14*s23*s24^2 - 1/2*denom(1/2*s12)*
      s12*s14*s23^2*s24 - 1/4*denom(1/2*s12)*s12*s14*s23^3 - 1/2*denom(1/2*s12
      )*s12*s14^2*s23*s24 - 1/4*denom(1/2*s12)*s12*s14^2*s23^2 - 1/4*denom(1/2
      *s12)*s12*s14^3*s23 - 1/4*denom(1/2*s12)*s12*s13*s24^3 - 1/2*denom(1/2*
      s12)*s12*s13*s23*s24^2 - 1/4*denom(1/2*s12)*s12*s13*s23^2*s24 - 1/2*
      denom(1/2*s12)*s12*s13*s14*s24^2 - denom(1/2*s12)*s12*s13*s14*s23*s24 - 
      1/2*denom(1/2*s12)*s12*s13*s14*s23^2 - 1/4*denom(1/2*s12)*s12*s13*s14^2*
      s24 - 1/2*denom(1/2*s12)*s12*s13*s14^2*s23 - 3/4*denom(1/2*s12)*s12*
      s13^2*s24^2 - 1/2*denom(1/2*s12)*s12*s13^2*s23*s24 - 1/2*denom(1/2*s12)*
      s12*s13^2*s14*s24 - 1/4*denom(1/2*s12)*s12*s13^2*s14*s23 - 1/4*denom(1/2
      *s12)*s12*s13^3*s24 - 1/2*denom(1/2*s12)*s12^2*s14*s23*s24 - 1/2*denom(1/
      2*s12)*s12^2*s14*s23^2 - 1/2*denom(1/2*s12)*s12^2*s14^2*s23 - 1/2*denom(
      1/2*s12)*s12^2*s13*s24^2 - 1/2*denom(1/2*s12)*s12^2*s13*s23*s24 - 1/2*
      denom(1/2*s12)*s12^2*s13*s14*s24 - 1/2*denom(1/2*s12)*s12^2*s13*s14*s23
       - 1/2*denom(1/2*s12)*s12^2*s13^2*s24 - 1/4*denom(1/2*s12)*s12^3*s14*s23
       - 1/4*denom(1/2*s12)*s12^3*s13*s24 - 1/4*denom(1/2*s12)*mh^2*s14^2*
      s23^2 + 1/4*denom(1/2*s12)*mh^2*s13^2*s24^2 + 1/2*denom(1/2*s12)*mh^2*
      s12*s14*s23*s24 + 1/2*denom(1/2*s12)*mh^2*s12*s14*s23^2 + 1/2*denom(1/2*
      s12)*mh^2*s12*s14^2*s23 + 1/2*denom(1/2*s12)*mh^2*s12*s13*s24^2 + 1/2*
      denom(1/2*s12)*mh^2*s12*s13*s23*s24 + 1/2*denom(1/2*s12)*mh^2*s12*s13*
      s14*s24 + 1/2*denom(1/2*s12)*mh^2*s12*s13*s14*s23 + 1/2*denom(1/2*s12)*
      mh^2*s12*s13^2*s24 + 1/2*denom(1/2*s12)*mh^2*s12^2*s14*s23 + 1/2*denom(1/
      2*s12)*mh^2*s12^2*s13*s24 - 1/4*denom(1/2*s12)*mh^4*s12*s14*s23 - 1/4*
      denom(1/2*s12)*mh^4*s12*s13*s24 - 1/2*denom(1/2*s12)*mt^2*s14*s23^2*s24
       - 1/2*denom(1/2*s12)*mt^2*s14*s23^3 - 1/2*denom(1/2*s12)*mt^2*s14^2*s23
      *s24 - 3/2*denom(1/2*s12)*mt^2*s14^2*s23^2 - 1/2*denom(1/2*s12)*mt^2*
      s14^3*s23 + 1/2*denom(1/2*s12)*mt^2*s13*s24^3 + 1/2*denom(1/2*s12)*mt^2*
      s13*s23*s24^2 + 1/2*denom(1/2*s12)*mt^2*s13*s14*s24^2 - 1/2*denom(1/2*
      s12)*mt^2*s13*s14*s23^2 - 1/2*denom(1/2*s12)*mt^2*s13*s14^2*s23 + 3/2*
      denom(1/2*s12)*mt^2*s13^2*s24^2 + 1/2*denom(1/2*s12)*mt^2*s13^2*s23*s24
       + 1/2*denom(1/2*s12)*mt^2*s13^2*s14*s24 + 1/2*denom(1/2*s12)*mt^2*s13^3
      *s24 + 1/4*denom(1/2*s12)*mt^2*s12*s24^3 + 3/4*denom(1/2*s12)*mt^2*s12*
      s23*s24^2 + 3/4*denom(1/2*s12)*mt^2*s12*s23^2*s24 + 1/4*denom(1/2*s12)*
      mt^2*s12*s23^3 + 3/4*denom(1/2*s12)*mt^2*s12*s14*s24^2 + 2*denom(1/2*s12
      )*mt^2*s12*s14*s23*s24 + 3/4*denom(1/2*s12)*mt^2*s12*s14*s23^2 + 3/4*
      denom(1/2*s12)*mt^2*s12*s14^2*s24 + 3/4*denom(1/2*s12)*mt^2*s12*s14^2*
      s23 + 1/4*denom(1/2*s12)*mt^2*s12*s14^3 + 7/4*denom(1/2*s12)*mt^2*s12*
      s13*s24^2 + 2*denom(1/2*s12)*mt^2*s12*s13*s23*s24 + 3/4*denom(1/2*s12)*
      mt^2*s12*s13*s23^2 + 2*denom(1/2*s12)*mt^2*s12*s13*s14*s24 + 2*denom(1/2
      *s12)*mt^2*s12*s13*s14*s23 + 3/4*denom(1/2*s12)*mt^2*s12*s13*s14^2 + 7/4
      *denom(1/2*s12)*mt^2*s12*s13^2*s24 + 3/4*denom(1/2*s12)*mt^2*s12*s13^2*
      s23 + 3/4*denom(1/2*s12)*mt^2*s12*s13^2*s14 + 1/4*denom(1/2*s12)*mt^2*
      s12*s13^3 + 1/2*denom(1/2*s12)*mt^2*s12^2*s24^2 + denom(1/2*s12)*mt^2*
      s12^2*s23*s24 + 1/2*denom(1/2*s12)*mt^2*s12^2*s23^2 + denom(1/2*s12)*
      mt^2*s12^2*s14*s24 + 3/2*denom(1/2*s12)*mt^2*s12^2*s14*s23 + 1/2*denom(1/
      2*s12)*mt^2*s12^2*s14^2 + 3/2*denom(1/2*s12)*mt^2*s12^2*s13*s24 + denom(
      1/2*s12)*mt^2*s12^2*s13*s23 + denom(1/2*s12)*mt^2*s12^2*s13*s14 + 1/2*
      denom(1/2*s12)*mt^2*s12^2*s13^2 + 1/4*denom(1/2*s12)*mt^2*s12^3*s24 + 1/
      4*denom(1/2*s12)*mt^2*s12^3*s23 + 1/4*denom(1/2*s12)*mt^2*s12^3*s14 + 1/
      4*denom(1/2*s12)*mt^2*s12^3*s13 + 1/2*denom(1/2*s12)*mt^2*mh^2*s14*s23^2
       + 1/2*denom(1/2*s12)*mt^2*mh^2*s14^2*s23 - 1/2*denom(1/2*s12)*mt^2*mh^2
      *s13*s24^2 - 1/2*denom(1/2*s12)*mt^2*mh^2*s13^2*s24 - 1/2*denom(1/2*s12)
      *mt^2*mh^2*s12*s24^2 - denom(1/2*s12)*mt^2*mh^2*s12*s23*s24 - 1/2*denom(
      1/2*s12)*mt^2*mh^2*s12*s23^2 - denom(1/2*s12)*mt^2*mh^2*s12*s14*s24 - 3/
      2*denom(1/2*s12)*mt^2*mh^2*s12*s14*s23 - 1/2*denom(1/2*s12)*mt^2*mh^2*
      s12*s14^2 - 3/2*denom(1/2*s12)*mt^2*mh^2*s12*s13*s24 - denom(1/2*s12)*
      mt^2*mh^2*s12*s13*s23 - denom(1/2*s12)*mt^2*mh^2*s12*s13*s14 - 1/2*
      denom(1/2*s12)*mt^2*mh^2*s12*s13^2 - 1/2*denom(1/2*s12)*mt^2*mh^2*s12^2*
      s24 - 1/2*denom(1/2*s12)*mt^2*mh^2*s12^2*s23 - 1/2*denom(1/2*s12)*mt^2*
      mh^2*s12^2*s14 - 1/2*denom(1/2*s12)*mt^2*mh^2*s12^2*s13 + 1/4*denom(1/2*
      s12)*mt^2*mh^4*s12*s24 + 1/4*denom(1/2*s12)*mt^2*mh^4*s12*s23 + 1/4*
      denom(1/2*s12)*mt^2*mh^4*s12*s14 + 1/4*denom(1/2*s12)*mt^2*mh^4*s12*s13
       - 1/4*denom(1/2*s12)*mt^4*s24^3 - 1/4*denom(1/2*s12)*mt^4*s23*s24^2 + 1/
      4*denom(1/2*s12)*mt^4*s23^2*s24 + 1/4*denom(1/2*s12)*mt^4*s23^3 - 1/4*
      denom(1/2*s12)*mt^4*s14*s24^2 + denom(1/2*s12)*mt^4*s14*s23*s24 + 9/4*
      denom(1/2*s12)*mt^4*s14*s23^2 + 1/4*denom(1/2*s12)*mt^4*s14^2*s24 + 9/4*
      denom(1/2*s12)*mt^4*s14^2*s23 + 1/4*denom(1/2*s12)*mt^4*s14^3 - 9/4*
      denom(1/2*s12)*mt^4*s13*s24^2 - denom(1/2*s12)*mt^4*s13*s23*s24 + 1/4*
      denom(1/2*s12)*mt^4*s13*s23^2 - denom(1/2*s12)*mt^4*s13*s14*s24 + denom(
      1/2*s12)*mt^4*s13*s14*s23 + 1/4*denom(1/2*s12)*mt^4*s13*s14^2 - 9/4*
      denom(1/2*s12)*mt^4*s13^2*s24 - 1/4*denom(1/2*s12)*mt^4*s13^2*s23 - 1/4*
      denom(1/2*s12)*mt^4*s13^2*s14 - 1/4*denom(1/2*s12)*mt^4*s13^3 - 5/4*
      denom(1/2*s12)*mt^4*s12*s24^2 - 2*denom(1/2*s12)*mt^4*s12*s23*s24 - 3/4*
      denom(1/2*s12)*mt^4*s12*s23^2 - 2*denom(1/2*s12)*mt^4*s12*s14*s24 - 
      denom(1/2*s12)*mt^4*s12*s14*s23 - 3/4*denom(1/2*s12)*mt^4*s12*s14^2 - 3*
      denom(1/2*s12)*mt^4*s12*s13*s24 - 2*denom(1/2*s12)*mt^4*s12*s13*s23 - 2*
      denom(1/2*s12)*mt^4*s12*s13*s14 - 5/4*denom(1/2*s12)*mt^4*s12*s13^2 - 3/
      2*denom(1/2*s12)*mt^4*s12^2*s24 - 3/2*denom(1/2*s12)*mt^4*s12^2*s23 - 3/
      2*denom(1/2*s12)*mt^4*s12^2*s14 - 3/2*denom(1/2*s12)*mt^4*s12^2*s13 - 1/
      2*denom(1/2*s12)*mt^4*s12^3 + 1/4*denom(1/2*s12)*mt^4*mh^2*s24^2 - 1/4*
      denom(1/2*s12)*mt^4*mh^2*s23^2 - denom(1/2*s12)*mt^4*mh^2*s14*s23 - 1/4*
      denom(1/2*s12)*mt^4*mh^2*s14^2 + denom(1/2*s12)*mt^4*mh^2*s13*s24 + 1/4*
      denom(1/2*s12)*mt^4*mh^2*s13^2 + 3/2*denom(1/2*s12)*mt^4*mh^2*s12*s24 + 
      3/2*denom(1/2*s12)*mt^4*mh^2*s12*s23 + 3/2*denom(1/2*s12)*mt^4*mh^2*s12*
      s14 + 3/2*denom(1/2*s12)*mt^4*mh^2*s12*s13 + denom(1/2*s12)*mt^4*mh^2*
      s12^2 - 1/2*denom(1/2*s12)*mt^4*mh^4*s12 + denom(1/2*s12)*mt^6*s24^2 - 
      denom(1/2*s12)*mt^6*s23^2 - 3*denom(1/2*s12)*mt^6*s14*s23 - denom(1/2*
      s12)*mt^6*s14^2 + 3*denom(1/2*s12)*mt^6*s13*s24 + denom(1/2*s12)*mt^6*
      s13^2 + 3/2*denom(1/2*s12)*mt^6*s12*s24 + 1/2*denom(1/2*s12)*mt^6*s12*
      s23 + 1/2*denom(1/2*s12)*mt^6*s12*s14 + 3/2*denom(1/2*s12)*mt^6*s12*s13
       + denom(1/2*s12)*mt^6*s12^2 - 1/2*denom(1/2*s12)*mt^6*mh^2*s24 + 1/2*
      denom(1/2*s12)*mt^6*mh^2*s23 + 1/2*denom(1/2*s12)*mt^6*mh^2*s14 - 1/2*
      denom(1/2*s12)*mt^6*mh^2*s13 - denom(1/2*s12)*mt^6*mh^2*s12 - denom(1/2*
      s12)*mt^8*s24 + denom(1/2*s12)*mt^8*s23 + denom(1/2*s12)*mt^8*s14 - 
      denom(1/2*s12)*mt^8*s13 + 1/16*denom(1/4*s12^2)*s14^3*s23^3 + 1/16*
      denom(1/4*s12^2)*s13*s14^2*s23^2*s24 - 1/16*denom(1/4*s12^2)*s13^2*s14*
      s23*s24^2 - 1/16*denom(1/4*s12^2)*s13^3*s24^3 - 1/16*denom(1/4*s12^2)*
      s12*s14^2*s23^2*s24 - 1/16*denom(1/4*s12^2)*s12*s14^2*s23^3 - 1/16*
      denom(1/4*s12^2)*s12*s14^3*s23^2 - 1/8*denom(1/4*s12^2)*s12*s13*s14*s23*
      s24^2 - 1/8*denom(1/4*s12^2)*s12*s13*s14*s23^2*s24 - 1/8*denom(1/4*s12^2
      )*s12*s13*s14^2*s23*s24 - 1/16*denom(1/4*s12^2)*s12*s13*s14^2*s23^2 - 1/
      16*denom(1/4*s12^2)*s12*s13^2*s24^3 - 1/16*denom(1/4*s12^2)*s12*s13^2*
      s23*s24^2 - 1/16*denom(1/4*s12^2)*s12*s13^2*s14*s24^2 - 1/8*denom(1/4*
      s12^2)*s12*s13^2*s14*s23*s24 - 1/16*denom(1/4*s12^2)*s12*s13^3*s24^2 - 1/
      16*denom(1/4*s12^2)*s12^2*s14^2*s23^2 - 1/8*denom(1/4*s12^2)*s12^2*s13*
      s14*s23*s24 - 1/16*denom(1/4*s12^2)*s12^2*s13^2*s24^2 + 1/16*denom(1/4*
      s12^2)*mh^2*s12*s14^2*s23^2 + 1/8*denom(1/4*s12^2)*mh^2*s12*s13*s14*s23*
      s24 + 1/16*denom(1/4*s12^2)*mh^2*s12*s13^2*s24^2 - 1/16*denom(1/4*s12^2)
      *mt^2*s14^2*s23^2*s24 - 3/16*denom(1/4*s12^2)*mt^2*s14^2*s23^3 - 3/16*
      denom(1/4*s12^2)*mt^2*s14^3*s23^2 + 1/8*denom(1/4*s12^2)*mt^2*s13*s14*
      s23*s24^2 - 1/8*denom(1/4*s12^2)*mt^2*s13*s14*s23^2*s24 - 1/8*denom(1/4*
      s12^2)*mt^2*s13*s14^2*s23*s24 - 1/16*denom(1/4*s12^2)*mt^2*s13*s14^2*
      s23^2 + 3/16*denom(1/4*s12^2)*mt^2*s13^2*s24^3 + 1/16*denom(1/4*s12^2)*
      mt^2*s13^2*s23*s24^2 + 1/16*denom(1/4*s12^2)*mt^2*s13^2*s14*s24^2 + 1/8*
      denom(1/4*s12^2)*mt^2*s13^2*s14*s23*s24 + 3/16*denom(1/4*s12^2)*mt^2*
      s13^3*s24^2 + 1/8*denom(1/4*s12^2)*mt^2*s12*s14*s23*s24^2 + 1/4*denom(1/
      4*s12^2)*mt^2*s12*s14*s23^2*s24 + 1/8*denom(1/4*s12^2)*mt^2*s12*s14*
      s23^3 + 1/4*denom(1/4*s12^2)*mt^2*s12*s14^2*s23*s24 + 1/4*denom(1/4*
      s12^2)*mt^2*s12*s14^2*s23^2 + 1/8*denom(1/4*s12^2)*mt^2*s12*s14^3*s23 + 
      1/8*denom(1/4*s12^2)*mt^2*s12*s13*s24^3 + 1/4*denom(1/4*s12^2)*mt^2*s12*
      s13*s23*s24^2 + 1/8*denom(1/4*s12^2)*mt^2*s12*s13*s23^2*s24 + 1/4*denom(
      1/4*s12^2)*mt^2*s12*s13*s14*s24^2 + 1/2*denom(1/4*s12^2)*mt^2*s12*s13*
      s14*s23*s24 + 1/4*denom(1/4*s12^2)*mt^2*s12*s13*s14*s23^2 + 1/8*denom(1/
      4*s12^2)*mt^2*s12*s13*s14^2*s24 + 1/4*denom(1/4*s12^2)*mt^2*s12*s13*
      s14^2*s23 + 1/4*denom(1/4*s12^2)*mt^2*s12*s13^2*s24^2 + 1/4*denom(1/4*
      s12^2)*mt^2*s12*s13^2*s23*s24 + 1/4*denom(1/4*s12^2)*mt^2*s12*s13^2*s14*
      s24 + 1/8*denom(1/4*s12^2)*mt^2*s12*s13^2*s14*s23 + 1/8*denom(1/4*s12^2)
      *mt^2*s12*s13^3*s24 + 1/8*denom(1/4*s12^2)*mt^2*s12^2*s14*s23*s24 + 1/8*
      denom(1/4*s12^2)*mt^2*s12^2*s14*s23^2 + 1/8*denom(1/4*s12^2)*mt^2*s12^2*
      s14^2*s23 + 1/8*denom(1/4*s12^2)*mt^2*s12^2*s13*s24^2 + 1/8*denom(1/4*
      s12^2)*mt^2*s12^2*s13*s23*s24 + 1/8*denom(1/4*s12^2)*mt^2*s12^2*s13*s14*
      s24 + 1/8*denom(1/4*s12^2)*mt^2*s12^2*s13*s14*s23 + 1/8*denom(1/4*s12^2)
      *mt^2*s12^2*s13^2*s24 - 1/8*denom(1/4*s12^2)*mt^2*mh^2*s12*s14*s23*s24
       - 1/8*denom(1/4*s12^2)*mt^2*mh^2*s12*s14*s23^2 - 1/8*denom(1/4*s12^2)*
      mt^2*mh^2*s12*s14^2*s23 - 1/8*denom(1/4*s12^2)*mt^2*mh^2*s12*s13*s24^2
       - 1/8*denom(1/4*s12^2)*mt^2*mh^2*s12*s13*s23*s24 - 1/8*denom(1/4*s12^2)
      *mt^2*mh^2*s12*s13*s14*s24 - 1/8*denom(1/4*s12^2)*mt^2*mh^2*s12*s13*s14*
      s23 - 1/8*denom(1/4*s12^2)*mt^2*mh^2*s12*s13^2*s24 - 1/16*denom(1/4*
      s12^2)*mt^4*s14*s23*s24^2 + 1/8*denom(1/4*s12^2)*mt^4*s14*s23^2*s24 + 3/
      16*denom(1/4*s12^2)*mt^4*s14*s23^3 + 1/8*denom(1/4*s12^2)*mt^4*s14^2*s23
      *s24 + 5/8*denom(1/4*s12^2)*mt^4*s14^2*s23^2 + 3/16*denom(1/4*s12^2)*
      mt^4*s14^3*s23 - 3/16*denom(1/4*s12^2)*mt^4*s13*s24^3 - 1/8*denom(1/4*
      s12^2)*mt^4*s13*s23*s24^2 + 1/16*denom(1/4*s12^2)*mt^4*s13*s23^2*s24 - 1/
      8*denom(1/4*s12^2)*mt^4*s13*s14*s24^2 + 1/8*denom(1/4*s12^2)*mt^4*s13*
      s14*s23^2 + 1/16*denom(1/4*s12^2)*mt^4*s13*s14^2*s24 + 1/8*denom(1/4*
      s12^2)*mt^4*s13*s14^2*s23 - 5/8*denom(1/4*s12^2)*mt^4*s13^2*s24^2 - 1/8*
      denom(1/4*s12^2)*mt^4*s13^2*s23*s24 - 1/8*denom(1/4*s12^2)*mt^4*s13^2*
      s14*s24 - 1/16*denom(1/4*s12^2)*mt^4*s13^2*s14*s23 - 3/16*denom(1/4*
      s12^2)*mt^4*s13^3*s24 - 1/16*denom(1/4*s12^2)*mt^4*s12*s24^3 - 3/16*
      denom(1/4*s12^2)*mt^4*s12*s23*s24^2 - 3/16*denom(1/4*s12^2)*mt^4*s12*
      s23^2*s24 - 1/16*denom(1/4*s12^2)*mt^4*s12*s23^3 - 3/16*denom(1/4*s12^2)
      *mt^4*s12*s14*s24^2 - 5/8*denom(1/4*s12^2)*mt^4*s12*s14*s23*s24 - 7/16*
      denom(1/4*s12^2)*mt^4*s12*s14*s23^2 - 3/16*denom(1/4*s12^2)*mt^4*s12*
      s14^2*s24 - 7/16*denom(1/4*s12^2)*mt^4*s12*s14^2*s23 - 1/16*denom(1/4*
      s12^2)*mt^4*s12*s14^3 - 7/16*denom(1/4*s12^2)*mt^4*s12*s13*s24^2 - 5/8*
      denom(1/4*s12^2)*mt^4*s12*s13*s23*s24 - 3/16*denom(1/4*s12^2)*mt^4*s12*
      s13*s23^2 - 5/8*denom(1/4*s12^2)*mt^4*s12*s13*s14*s24 - 5/8*denom(1/4*
      s12^2)*mt^4*s12*s13*s14*s23 - 3/16*denom(1/4*s12^2)*mt^4*s12*s13*s14^2
       - 7/16*denom(1/4*s12^2)*mt^4*s12*s13^2*s24 - 3/16*denom(1/4*s12^2)*mt^4
      *s12*s13^2*s23 - 3/16*denom(1/4*s12^2)*mt^4*s12*s13^2*s14 - 1/16*denom(1/
      4*s12^2)*mt^4*s12*s13^3 - 1/16*denom(1/4*s12^2)*mt^4*s12^2*s24^2 - 1/8*
      denom(1/4*s12^2)*mt^4*s12^2*s23*s24 - 1/16*denom(1/4*s12^2)*mt^4*s12^2*
      s23^2 - 1/8*denom(1/4*s12^2)*mt^4*s12^2*s14*s24 - 3/8*denom(1/4*s12^2)*
      mt^4*s12^2*s14*s23 - 1/16*denom(1/4*s12^2)*mt^4*s12^2*s14^2 - 3/8*denom(
      1/4*s12^2)*mt^4*s12^2*s13*s24 - 1/8*denom(1/4*s12^2)*mt^4*s12^2*s13*s23
       - 1/8*denom(1/4*s12^2)*mt^4*s12^2*s13*s14 - 1/16*denom(1/4*s12^2)*mt^4*
      s12^2*s13^2 + 1/16*denom(1/4*s12^2)*mt^4*mh^2*s12*s24^2 + 1/8*denom(1/4*
      s12^2)*mt^4*mh^2*s12*s23*s24 + 1/16*denom(1/4*s12^2)*mt^4*mh^2*s12*s23^2
       + 1/8*denom(1/4*s12^2)*mt^4*mh^2*s12*s14*s24 + 3/8*denom(1/4*s12^2)*
      mt^4*mh^2*s12*s14*s23 + 1/16*denom(1/4*s12^2)*mt^4*mh^2*s12*s14^2 + 3/8*
      denom(1/4*s12^2)*mt^4*mh^2*s12*s13*s24 + 1/8*denom(1/4*s12^2)*mt^4*mh^2*
      s12*s13*s23 + 1/8*denom(1/4*s12^2)*mt^4*mh^2*s12*s13*s14 + 1/16*denom(1/
      4*s12^2)*mt^4*mh^2*s12*s13^2 + 1/16*denom(1/4*s12^2)*mt^6*s24^3 + 1/16*
      denom(1/4*s12^2)*mt^6*s23*s24^2 - 1/16*denom(1/4*s12^2)*mt^6*s23^2*s24
       - 1/16*denom(1/4*s12^2)*mt^6*s23^3 + 1/16*denom(1/4*s12^2)*mt^6*s14*
      s24^2 - 1/8*denom(1/4*s12^2)*mt^6*s14*s23*s24 - 11/16*denom(1/4*s12^2)*
      mt^6*s14*s23^2 - 1/16*denom(1/4*s12^2)*mt^6*s14^2*s24 - 11/16*denom(1/4*
      s12^2)*mt^6*s14^2*s23 - 1/16*denom(1/4*s12^2)*mt^6*s14^3 + 11/16*denom(1/
      4*s12^2)*mt^6*s13*s24^2 + 1/8*denom(1/4*s12^2)*mt^6*s13*s23*s24 - 1/16*
      denom(1/4*s12^2)*mt^6*s13*s23^2 + 1/8*denom(1/4*s12^2)*mt^6*s13*s14*s24
       - 1/8*denom(1/4*s12^2)*mt^6*s13*s14*s23 - 1/16*denom(1/4*s12^2)*mt^6*
      s13*s14^2 + 11/16*denom(1/4*s12^2)*mt^6*s13^2*s24 + 1/16*denom(1/4*s12^2
      )*mt^6*s13^2*s23 + 1/16*denom(1/4*s12^2)*mt^6*s13^2*s14 + 1/16*denom(1/4
      *s12^2)*mt^6*s13^3 + 1/4*denom(1/4*s12^2)*mt^6*s12*s24^2 + 1/2*denom(1/4
      *s12^2)*mt^6*s12*s23*s24 + 1/4*denom(1/4*s12^2)*mt^6*s12*s23^2 + 1/2*
      denom(1/4*s12^2)*mt^6*s12*s14*s24 + 1/2*denom(1/4*s12^2)*mt^6*s12*s14*
      s23 + 1/4*denom(1/4*s12^2)*mt^6*s12*s14^2 + 1/2*denom(1/4*s12^2)*mt^6*
      s12*s13*s24 + 1/2*denom(1/4*s12^2)*mt^6*s12*s13*s23 + 1/2*denom(1/4*
      s12^2)*mt^6*s12*s13*s14 + 1/4*denom(1/4*s12^2)*mt^6*s12*s13^2 + 1/4*
      denom(1/4*s12^2)*mt^6*s12^2*s24 + 1/4*denom(1/4*s12^2)*mt^6*s12^2*s23 + 
      1/4*denom(1/4*s12^2)*mt^6*s12^2*s14 + 1/4*denom(1/4*s12^2)*mt^6*s12^2*
      s13 - 1/4*denom(1/4*s12^2)*mt^6*mh^2*s12*s24 - 1/4*denom(1/4*s12^2)*mt^6
      *mh^2*s12*s23 - 1/4*denom(1/4*s12^2)*mt^6*mh^2*s12*s14 - 1/4*denom(1/4*
      s12^2)*mt^6*mh^2*s12*s13 - 1/4*denom(1/4*s12^2)*mt^8*s24^2 + 1/4*denom(1/
      4*s12^2)*mt^8*s23^2 + 3/4*denom(1/4*s12^2)*mt^8*s14*s23 + 1/4*denom(1/4*
      s12^2)*mt^8*s14^2 - 3/4*denom(1/4*s12^2)*mt^8*s13*s24 - 1/4*denom(1/4*
      s12^2)*mt^8*s13^2 - 1/4*denom(1/4*s12^2)*mt^8*s12*s24 - 1/4*denom(1/4*
      s12^2)*mt^8*s12*s23 - 1/4*denom(1/4*s12^2)*mt^8*s12*s14 - 1/4*denom(1/4*
      s12^2)*mt^8*s12*s13 - 1/4*denom(1/4*s12^2)*mt^8*s12^2 + 1/4*denom(1/4*
      s12^2)*mt^8*mh^2*s12 + 1/4*denom(1/4*s12^2)*mt^10*s24 - 1/4*denom(1/4*
      s12^2)*mt^10*s23 - 1/4*denom(1/4*s12^2)*mt^10*s14 + 1/4*denom(1/4*s12^2)
      *mt^10*s13;
 
 .sort
id KMatrix(16,2) =   - 1/2*mt^2*s14*s23*s24 - 1/2*mt^2*s14*s23^2 - 1/2*mt^2*
      s14^2*s23 + 1/2*mt^2*s13*s24^2 + 1/2*mt^2*s13*s23*s24 + 1/2*mt^2*s13*s14
      *s24 - 1/2*mt^2*s13*s14*s23 + 1/2*mt^2*s13^2*s24 + 1/2*mt^2*s12*s24^2 + 
      mt^2*s12*s23*s24 + 1/2*mt^2*s12*s23^2 + mt^2*s12*s14*s24 + 1/2*mt^2*s12*
      s14*s23 + 1/2*mt^2*s12*s14^2 + 3/2*mt^2*s12*s13*s24 + mt^2*s12*s13*s23
       + mt^2*s12*s13*s14 + 1/2*mt^2*s12*s13^2 + mt^2*s12^2*s24 + mt^2*s12^2*
      s23 + mt^2*s12^2*s14 + mt^2*s12^2*s13 + 1/2*mt^2*s12^3 + 1/2*mt^2*mh^2*
      s14*s23 - 1/2*mt^2*mh^2*s13*s24 - mt^2*mh^2*s12*s24 - mt^2*mh^2*s12*s23
       - mt^2*mh^2*s12*s14 - mt^2*mh^2*s12*s13 - mt^2*mh^2*s12^2 + 1/2*mt^2*
      mh^4*s12 - 1/2*mt^4*s24^2 + 1/2*mt^4*s23^2 + 2*mt^4*s14*s23 + 1/2*mt^4*
      s14^2 - 2*mt^4*s13*s24 - 1/2*mt^4*s13^2 - 3/2*mt^4*s12*s24 - 1/2*mt^4*
      s12*s23 - 1/2*mt^4*s12*s14 - 3/2*mt^4*s12*s13 - mt^4*s12^2 + 1/2*mt^4*
      mh^2*s24 - 1/2*mt^4*mh^2*s23 - 1/2*mt^4*mh^2*s14 + 1/2*mt^4*mh^2*s13 + 
      mt^4*mh^2*s12 + mt^6*s24 - mt^6*s23 - mt^6*s14 + mt^6*s13 + 1/4*denom(1/
      2*s12)*s14^2*s23*s24^2 + 1/4*denom(1/2*s12)*s14^2*s23^2*s24 + 1/4*denom(
      1/2*s12)*s14^3*s23*s24 - 1/4*denom(1/2*s12)*s13*s14*s24^3 - 1/4*denom(1/
      2*s12)*s13*s14*s23*s24^2 - 1/4*denom(1/2*s12)*s13*s14^2*s24^2 + 1/4*
      denom(1/2*s12)*s13*s14^2*s23*s24 - 1/4*denom(1/2*s12)*s13^2*s14*s24^2 - 
      1/4*denom(1/2*s12)*s12*s14*s24^3 - 1/2*denom(1/2*s12)*s12*s14*s23*s24^2
       - 1/4*denom(1/2*s12)*s12*s14*s23^2*s24 - 1/2*denom(1/2*s12)*s12*s14^2*
      s24^2 - 1/4*denom(1/2*s12)*s12*s14^2*s23*s24 - 1/4*denom(1/2*s12)*s12*
      s14^3*s24 - 3/4*denom(1/2*s12)*s12*s13*s14*s24^2 - 1/2*denom(1/2*s12)*
      s12*s13*s14*s23*s24 - 1/2*denom(1/2*s12)*s12*s13*s14^2*s24 - 1/4*denom(1/
      2*s12)*s12*s13^2*s14*s24 - 1/2*denom(1/2*s12)*s12^2*s14*s24^2 - 1/2*
      denom(1/2*s12)*s12^2*s14*s23*s24 - 1/2*denom(1/2*s12)*s12^2*s14^2*s24 - 
      1/2*denom(1/2*s12)*s12^2*s13*s14*s24 - 1/4*denom(1/2*s12)*s12^3*s14*s24
       - 1/4*denom(1/2*s12)*mh^2*s14^2*s23*s24 + 1/4*denom(1/2*s12)*mh^2*s13*
      s14*s24^2 + 1/2*denom(1/2*s12)*mh^2*s12*s14*s24^2 + 1/2*denom(1/2*s12)*
      mh^2*s12*s14*s23*s24 + 1/2*denom(1/2*s12)*mh^2*s12*s14^2*s24 + 1/2*
      denom(1/2*s12)*mh^2*s12*s13*s14*s24 + 1/2*denom(1/2*s12)*mh^2*s12^2*s14*
      s24 - 1/4*denom(1/2*s12)*mh^4*s12*s14*s24 + 1/4*denom(1/2*s12)*mt^2*s14*
      s24^3 - 1/4*denom(1/2*s12)*mt^2*s14*s23*s24^2 - 1/2*denom(1/2*s12)*mt^2*
      s14*s23^2*s24 - 3/2*denom(1/2*s12)*mt^2*s14^2*s23*s24 - 1/2*denom(1/2*
      s12)*mt^2*s14^2*s23^2 - 1/4*denom(1/2*s12)*mt^2*s14^3*s24 - 1/4*denom(1/
      2*s12)*mt^2*s14^3*s23 + 1/4*denom(1/2*s12)*mt^2*s13*s24^3 + 1/4*denom(1/
      2*s12)*mt^2*s13*s23*s24^2 + 3/2*denom(1/2*s12)*mt^2*s13*s14*s24^2 + 1/4*
      denom(1/2*s12)*mt^2*s13*s14^2*s24 - 1/4*denom(1/2*s12)*mt^2*s13*s14^2*
      s23 + 1/2*denom(1/2*s12)*mt^2*s13^2*s24^2 + 1/2*denom(1/2*s12)*mt^2*
      s13^2*s14*s24 + 1/4*denom(1/2*s12)*mt^2*s12*s24^3 + 1/2*denom(1/2*s12)*
      mt^2*s12*s23*s24^2 + 1/4*denom(1/2*s12)*mt^2*s12*s23^2*s24 + 3/2*denom(1/
      2*s12)*mt^2*s12*s14*s24^2 + 5/4*denom(1/2*s12)*mt^2*s12*s14*s23*s24 + 1/
      2*denom(1/2*s12)*mt^2*s12*s14*s23^2 + denom(1/2*s12)*mt^2*s12*s14^2*s24
       + 1/2*denom(1/2*s12)*mt^2*s12*s14^2*s23 + 1/4*denom(1/2*s12)*mt^2*s12*
      s14^3 + denom(1/2*s12)*mt^2*s12*s13*s24^2 + 3/4*denom(1/2*s12)*mt^2*s12*
      s13*s23*s24 + 9/4*denom(1/2*s12)*mt^2*s12*s13*s14*s24 + 3/4*denom(1/2*
      s12)*mt^2*s12*s13*s14*s23 + 1/2*denom(1/2*s12)*mt^2*s12*s13*s14^2 + 1/2*
      denom(1/2*s12)*mt^2*s12*s13^2*s24 + 1/4*denom(1/2*s12)*mt^2*s12*s13^2*
      s14 + 1/2*denom(1/2*s12)*mt^2*s12^2*s24^2 + 1/2*denom(1/2*s12)*mt^2*
      s12^2*s23*s24 + 3/2*denom(1/2*s12)*mt^2*s12^2*s14*s24 + 3/4*denom(1/2*
      s12)*mt^2*s12^2*s14*s23 + 1/2*denom(1/2*s12)*mt^2*s12^2*s14^2 + 3/4*
      denom(1/2*s12)*mt^2*s12^2*s13*s24 + 1/2*denom(1/2*s12)*mt^2*s12^2*s13*
      s14 + 1/4*denom(1/2*s12)*mt^2*s12^3*s24 + 1/4*denom(1/2*s12)*mt^2*s12^3*
      s14 - 1/4*denom(1/2*s12)*mt^2*mh^2*s14*s24^2 + 1/2*denom(1/2*s12)*mt^2*
      mh^2*s14*s23*s24 + 1/4*denom(1/2*s12)*mt^2*mh^2*s14^2*s24 + 1/4*denom(1/
      2*s12)*mt^2*mh^2*s14^2*s23 - 1/4*denom(1/2*s12)*mt^2*mh^2*s13*s24^2 - 1/
      2*denom(1/2*s12)*mt^2*mh^2*s13*s14*s24 - 1/2*denom(1/2*s12)*mt^2*mh^2*
      s12*s24^2 - 1/2*denom(1/2*s12)*mt^2*mh^2*s12*s23*s24 - 3/2*denom(1/2*s12
      )*mt^2*mh^2*s12*s14*s24 - 3/4*denom(1/2*s12)*mt^2*mh^2*s12*s14*s23 - 1/2
      *denom(1/2*s12)*mt^2*mh^2*s12*s14^2 - 3/4*denom(1/2*s12)*mt^2*mh^2*s12*
      s13*s24 - 1/2*denom(1/2*s12)*mt^2*mh^2*s12*s13*s14 - 1/2*denom(1/2*s12)*
      mt^2*mh^2*s12^2*s24 - 1/2*denom(1/2*s12)*mt^2*mh^2*s12^2*s14 + 1/4*
      denom(1/2*s12)*mt^2*mh^4*s12*s24 + 1/4*denom(1/2*s12)*mt^2*mh^4*s12*s14
       - 1/4*denom(1/2*s12)*mt^4*s24^3 + 1/4*denom(1/2*s12)*mt^4*s23^2*s24 - 3/
      4*denom(1/2*s12)*mt^4*s14*s24^2 + 7/4*denom(1/2*s12)*mt^4*s14*s23*s24 + 
      denom(1/2*s12)*mt^4*s14*s23^2 + 3/4*denom(1/2*s12)*mt^4*s14^2*s24 + 7/4*
      denom(1/2*s12)*mt^4*s14^2*s23 + 1/4*denom(1/2*s12)*mt^4*s14^3 - 7/4*
      denom(1/2*s12)*mt^4*s13*s24^2 - 1/4*denom(1/2*s12)*mt^4*s13*s23*s24 - 7/
      4*denom(1/2*s12)*mt^4*s13*s14*s24 + 1/4*denom(1/2*s12)*mt^4*s13*s14*s23
       - denom(1/2*s12)*mt^4*s13^2*s24 - 1/4*denom(1/2*s12)*mt^4*s13^2*s14 - 5/
      4*denom(1/2*s12)*mt^4*s12*s24^2 - 5/4*denom(1/2*s12)*mt^4*s12*s23*s24 - 
      1/2*denom(1/2*s12)*mt^4*s12*s23^2 - 2*denom(1/2*s12)*mt^4*s12*s14*s24 - 
      denom(1/2*s12)*mt^4*s12*s14*s23 - 3/4*denom(1/2*s12)*mt^4*s12*s14^2 - 2*
      denom(1/2*s12)*mt^4*s12*s13*s24 - denom(1/2*s12)*mt^4*s12*s13*s23 - 7/4*
      denom(1/2*s12)*mt^4*s12*s13*s14 - 1/2*denom(1/2*s12)*mt^4*s12*s13^2 - 5/
      4*denom(1/2*s12)*mt^4*s12^2*s24 - 3/4*denom(1/2*s12)*mt^4*s12^2*s23 - 5/
      4*denom(1/2*s12)*mt^4*s12^2*s14 - 3/4*denom(1/2*s12)*mt^4*s12^2*s13 - 1/
      4*denom(1/2*s12)*mt^4*s12^3 + 1/4*denom(1/2*s12)*mt^4*mh^2*s24^2 - 1/4*
      denom(1/2*s12)*mt^4*mh^2*s23*s24 - 1/2*denom(1/2*s12)*mt^4*mh^2*s14*s23
       - 1/4*denom(1/2*s12)*mt^4*mh^2*s14^2 + 1/2*denom(1/2*s12)*mt^4*mh^2*s13
      *s24 + 1/4*denom(1/2*s12)*mt^4*mh^2*s13*s14 + 5/4*denom(1/2*s12)*mt^4*
      mh^2*s12*s24 + 3/4*denom(1/2*s12)*mt^4*mh^2*s12*s23 + 5/4*denom(1/2*s12)
      *mt^4*mh^2*s12*s14 + 3/4*denom(1/2*s12)*mt^4*mh^2*s12*s13 + 1/2*denom(1/
      2*s12)*mt^4*mh^2*s12^2 - 1/4*denom(1/2*s12)*mt^4*mh^4*s12 + denom(1/2*
      s12)*mt^6*s24^2 - 1/2*denom(1/2*s12)*mt^6*s23*s24 - 1/2*denom(1/2*s12)*
      mt^6*s23^2 - 5/2*denom(1/2*s12)*mt^6*s14*s23 - denom(1/2*s12)*mt^6*s14^2
       + 5/2*denom(1/2*s12)*mt^6*s13*s24 + 1/2*denom(1/2*s12)*mt^6*s13*s14 + 1/
      2*denom(1/2*s12)*mt^6*s13^2 + 5/4*denom(1/2*s12)*mt^6*s12*s24 + 3/4*
      denom(1/2*s12)*mt^6*s12*s23 + 3/4*denom(1/2*s12)*mt^6*s12*s14 + 5/4*
      denom(1/2*s12)*mt^6*s12*s13 + denom(1/2*s12)*mt^6*s12^2 - 1/4*denom(1/2*
      s12)*mt^6*mh^2*s24 + 1/4*denom(1/2*s12)*mt^6*mh^2*s23 + 1/4*denom(1/2*
      s12)*mt^6*mh^2*s14 - 1/4*denom(1/2*s12)*mt^6*mh^2*s13 - denom(1/2*s12)*
      mt^6*mh^2*s12 - denom(1/2*s12)*mt^8*s24 + denom(1/2*s12)*mt^8*s23 + 
      denom(1/2*s12)*mt^8*s14 - denom(1/2*s12)*mt^8*s13 + 1/8*denom(1/4*s12^2)
      *s14^3*s23^2*s24 - 1/8*denom(1/4*s12^2)*s13^2*s14*s24^3 - 1/8*denom(1/4*
      s12^2)*s12*s14^2*s23*s24^2 - 1/8*denom(1/4*s12^2)*s12*s14^2*s23^2*s24 - 
      1/8*denom(1/4*s12^2)*s12*s14^3*s23*s24 - 1/8*denom(1/4*s12^2)*s12*s13*
      s14*s24^3 - 1/8*denom(1/4*s12^2)*s12*s13*s14*s23*s24^2 - 1/8*denom(1/4*
      s12^2)*s12*s13*s14^2*s24^2 - 1/8*denom(1/4*s12^2)*s12*s13*s14^2*s23*s24
       - 1/8*denom(1/4*s12^2)*s12*s13^2*s14*s24^2 - 1/8*denom(1/4*s12^2)*s12^2
      *s14^2*s23*s24 - 1/8*denom(1/4*s12^2)*s12^2*s13*s14*s24^2 + 1/8*denom(1/
      4*s12^2)*mh^2*s12*s14^2*s23*s24 + 1/8*denom(1/4*s12^2)*mh^2*s12*s13*s14*
      s24^2 - 3/8*denom(1/4*s12^2)*mt^2*s14^2*s23^2*s24 - 1/4*denom(1/4*s12^2)
      *mt^2*s14^3*s23*s24 - 1/8*denom(1/4*s12^2)*mt^2*s14^3*s23^2 + 1/4*denom(
      1/4*s12^2)*mt^2*s13*s14*s24^3 + 1/8*denom(1/4*s12^2)*mt^2*s13^2*s24^3 + 
      3/8*denom(1/4*s12^2)*mt^2*s13^2*s14*s24^2 + 1/8*denom(1/4*s12^2)*mt^2*
      s12*s14*s24^3 + 3/8*denom(1/4*s12^2)*mt^2*s12*s14*s23*s24^2 + 1/4*denom(
      1/4*s12^2)*mt^2*s12*s14*s23^2*s24 + 1/4*denom(1/4*s12^2)*mt^2*s12*s14^2*
      s24^2 + 1/2*denom(1/4*s12^2)*mt^2*s12*s14^2*s23*s24 + 1/8*denom(1/4*
      s12^2)*mt^2*s12*s14^2*s23^2 + 1/8*denom(1/4*s12^2)*mt^2*s12*s14^3*s24 + 
      1/8*denom(1/4*s12^2)*mt^2*s12*s14^3*s23 + 1/8*denom(1/4*s12^2)*mt^2*s12*
      s13*s24^3 + 1/8*denom(1/4*s12^2)*mt^2*s12*s13*s23*s24^2 + 1/2*denom(1/4*
      s12^2)*mt^2*s12*s13*s14*s24^2 + 1/2*denom(1/4*s12^2)*mt^2*s12*s13*s14*
      s23*s24 + 3/8*denom(1/4*s12^2)*mt^2*s12*s13*s14^2*s24 + 1/8*denom(1/4*
      s12^2)*mt^2*s12*s13*s14^2*s23 + 1/8*denom(1/4*s12^2)*mt^2*s12*s13^2*
      s24^2 + 1/4*denom(1/4*s12^2)*mt^2*s12*s13^2*s14*s24 + 1/8*denom(1/4*
      s12^2)*mt^2*s12^2*s14*s24^2 + 1/4*denom(1/4*s12^2)*mt^2*s12^2*s14*s23*
      s24 + 1/8*denom(1/4*s12^2)*mt^2*s12^2*s14^2*s24 + 1/8*denom(1/4*s12^2)*
      mt^2*s12^2*s14^2*s23 + 1/8*denom(1/4*s12^2)*mt^2*s12^2*s13*s24^2 + 1/4*
      denom(1/4*s12^2)*mt^2*s12^2*s13*s14*s24 - 1/8*denom(1/4*s12^2)*mt^2*mh^2
      *s12*s14*s24^2 - 1/4*denom(1/4*s12^2)*mt^2*mh^2*s12*s14*s23*s24 - 1/8*
      denom(1/4*s12^2)*mt^2*mh^2*s12*s14^2*s24 - 1/8*denom(1/4*s12^2)*mt^2*
      mh^2*s12*s14^2*s23 - 1/8*denom(1/4*s12^2)*mt^2*mh^2*s12*s13*s24^2 - 1/4*
      denom(1/4*s12^2)*mt^2*mh^2*s12*s13*s14*s24 - 1/8*denom(1/4*s12^2)*mt^4*
      s14*s24^3 + 3/8*denom(1/4*s12^2)*mt^4*s14*s23^2*s24 + 3/4*denom(1/4*
      s12^2)*mt^4*s14^2*s23*s24 + 3/8*denom(1/4*s12^2)*mt^4*s14^2*s23^2 + 1/8*
      denom(1/4*s12^2)*mt^4*s14^3*s24 + 1/4*denom(1/4*s12^2)*mt^4*s14^3*s23 - 
      1/4*denom(1/4*s12^2)*mt^4*s13*s24^3 - 3/4*denom(1/4*s12^2)*mt^4*s13*s14*
      s24^2 - 3/8*denom(1/4*s12^2)*mt^4*s13^2*s24^2 - 3/8*denom(1/4*s12^2)*
      mt^4*s13^2*s14*s24 - 1/8*denom(1/4*s12^2)*mt^4*s12*s24^3 - 1/4*denom(1/4
      *s12^2)*mt^4*s12*s23*s24^2 - 1/8*denom(1/4*s12^2)*mt^4*s12*s23^2*s24 - 5/
      8*denom(1/4*s12^2)*mt^4*s12*s14*s24^2 - 7/8*denom(1/4*s12^2)*mt^4*s12*
      s14*s23*s24 - 1/4*denom(1/4*s12^2)*mt^4*s12*s14*s23^2 - 5/8*denom(1/4*
      s12^2)*mt^4*s12*s14^2*s24 - 3/8*denom(1/4*s12^2)*mt^4*s12*s14^2*s23 - 1/
      8*denom(1/4*s12^2)*mt^4*s12*s14^3 - 3/8*denom(1/4*s12^2)*mt^4*s12*s13*
      s24^2 - 3/8*denom(1/4*s12^2)*mt^4*s12*s13*s23*s24 - 7/8*denom(1/4*s12^2)
      *mt^4*s12*s13*s14*s24 - 3/8*denom(1/4*s12^2)*mt^4*s12*s13*s14*s23 - 1/4*
      denom(1/4*s12^2)*mt^4*s12*s13*s14^2 - 1/4*denom(1/4*s12^2)*mt^4*s12*
      s13^2*s24 - 1/8*denom(1/4*s12^2)*mt^4*s12*s13^2*s14 - 1/8*denom(1/4*
      s12^2)*mt^4*s12^2*s24^2 - 1/8*denom(1/4*s12^2)*mt^4*s12^2*s23*s24 - 1/2*
      denom(1/4*s12^2)*mt^4*s12^2*s14*s24 - 1/4*denom(1/4*s12^2)*mt^4*s12^2*
      s14*s23 - 1/8*denom(1/4*s12^2)*mt^4*s12^2*s14^2 - 1/4*denom(1/4*s12^2)*
      mt^4*s12^2*s13*s24 - 1/8*denom(1/4*s12^2)*mt^4*s12^2*s13*s14 + 1/8*
      denom(1/4*s12^2)*mt^4*mh^2*s12*s24^2 + 1/8*denom(1/4*s12^2)*mt^4*mh^2*
      s12*s23*s24 + 1/2*denom(1/4*s12^2)*mt^4*mh^2*s12*s14*s24 + 1/4*denom(1/4
      *s12^2)*mt^4*mh^2*s12*s14*s23 + 1/8*denom(1/4*s12^2)*mt^4*mh^2*s12*s14^2
       + 1/4*denom(1/4*s12^2)*mt^4*mh^2*s12*s13*s24 + 1/8*denom(1/4*s12^2)*
      mt^4*mh^2*s12*s13*s14 + 1/8*denom(1/4*s12^2)*mt^6*s24^3 - 1/8*denom(1/4*
      s12^2)*mt^6*s23^2*s24 + 3/8*denom(1/4*s12^2)*mt^6*s14*s24^2 - 3/4*denom(
      1/4*s12^2)*mt^6*s14*s23*s24 - 3/8*denom(1/4*s12^2)*mt^6*s14*s23^2 - 3/8*
      denom(1/4*s12^2)*mt^6*s14^2*s24 - 3/4*denom(1/4*s12^2)*mt^6*s14^2*s23 - 
      1/8*denom(1/4*s12^2)*mt^6*s14^3 + 3/4*denom(1/4*s12^2)*mt^6*s13*s24^2 + 
      3/4*denom(1/4*s12^2)*mt^6*s13*s14*s24 + 3/8*denom(1/4*s12^2)*mt^6*s13^2*
      s24 + 1/8*denom(1/4*s12^2)*mt^6*s13^2*s14 + 3/8*denom(1/4*s12^2)*mt^6*
      s12*s24^2 + 1/2*denom(1/4*s12^2)*mt^6*s12*s23*s24 + 1/8*denom(1/4*s12^2)
      *mt^6*s12*s23^2 + 3/4*denom(1/4*s12^2)*mt^6*s12*s14*s24 + 1/2*denom(1/4*
      s12^2)*mt^6*s12*s14*s23 + 3/8*denom(1/4*s12^2)*mt^6*s12*s14^2 + 1/2*
      denom(1/4*s12^2)*mt^6*s12*s13*s24 + 1/4*denom(1/4*s12^2)*mt^6*s12*s13*
      s23 + 1/2*denom(1/4*s12^2)*mt^6*s12*s13*s14 + 1/8*denom(1/4*s12^2)*mt^6*
      s12*s13^2 + 3/8*denom(1/4*s12^2)*mt^6*s12^2*s24 + 1/8*denom(1/4*s12^2)*
      mt^6*s12^2*s23 + 3/8*denom(1/4*s12^2)*mt^6*s12^2*s14 + 1/8*denom(1/4*
      s12^2)*mt^6*s12^2*s13 - 3/8*denom(1/4*s12^2)*mt^6*mh^2*s12*s24 - 1/8*
      denom(1/4*s12^2)*mt^6*mh^2*s12*s23 - 3/8*denom(1/4*s12^2)*mt^6*mh^2*s12*
      s14 - 1/8*denom(1/4*s12^2)*mt^6*mh^2*s12*s13 - 3/8*denom(1/4*s12^2)*mt^8
      *s24^2 + 1/4*denom(1/4*s12^2)*mt^8*s23*s24 + 1/8*denom(1/4*s12^2)*mt^8*
      s23^2 + 3/4*denom(1/4*s12^2)*mt^8*s14*s23 + 3/8*denom(1/4*s12^2)*mt^8*
      s14^2 - 3/4*denom(1/4*s12^2)*mt^8*s13*s24 - 1/4*denom(1/4*s12^2)*mt^8*
      s13*s14 - 1/8*denom(1/4*s12^2)*mt^8*s13^2 - 1/4*denom(1/4*s12^2)*mt^8*
      s12*s24 - 1/4*denom(1/4*s12^2)*mt^8*s12*s23 - 1/4*denom(1/4*s12^2)*mt^8*
      s12*s14 - 1/4*denom(1/4*s12^2)*mt^8*s12*s13 - 1/4*denom(1/4*s12^2)*mt^8*
      s12^2 + 1/4*denom(1/4*s12^2)*mt^8*mh^2*s12 + 1/4*denom(1/4*s12^2)*mt^10*
      s24 - 1/4*denom(1/4*s12^2)*mt^10*s23 - 1/4*denom(1/4*s12^2)*mt^10*s14 + 
      1/4*denom(1/4*s12^2)*mt^10*s13;
 
 .sort
id KMatrix(16,3) =   - 1/2*mt^2*s14*s23*s24 - 1/2*mt^2*s14*s23^2 - 1/2*mt^2*
      s14^2*s23 + 1/2*mt^2*s13*s24^2 + 1/2*mt^2*s13*s23*s24 + 1/2*mt^2*s13*s14
      *s24 - 1/2*mt^2*s13*s14*s23 + 1/2*mt^2*s13^2*s24 + 1/2*mt^2*s12*s24^2 + 
      mt^2*s12*s23*s24 + 1/2*mt^2*s12*s23^2 + mt^2*s12*s14*s24 + 1/2*mt^2*s12*
      s14*s23 + 1/2*mt^2*s12*s14^2 + 3/2*mt^2*s12*s13*s24 + mt^2*s12*s13*s23
       + mt^2*s12*s13*s14 + 1/2*mt^2*s12*s13^2 + mt^2*s12^2*s24 + mt^2*s12^2*
      s23 + mt^2*s12^2*s14 + mt^2*s12^2*s13 + 1/2*mt^2*s12^3 + 1/2*mt^2*mh^2*
      s14*s23 - 1/2*mt^2*mh^2*s13*s24 - mt^2*mh^2*s12*s24 - mt^2*mh^2*s12*s23
       - mt^2*mh^2*s12*s14 - mt^2*mh^2*s12*s13 - mt^2*mh^2*s12^2 + 1/2*mt^2*
      mh^4*s12 - 1/2*mt^4*s24^2 + 1/2*mt^4*s23^2 + 2*mt^4*s14*s23 + 1/2*mt^4*
      s14^2 - 2*mt^4*s13*s24 - 1/2*mt^4*s13^2 - 3/2*mt^4*s12*s24 - 1/2*mt^4*
      s12*s23 - 1/2*mt^4*s12*s14 - 3/2*mt^4*s12*s13 - mt^4*s12^2 + 1/2*mt^4*
      mh^2*s24 - 1/2*mt^4*mh^2*s23 - 1/2*mt^4*mh^2*s14 + 1/2*mt^4*mh^2*s13 + 
      mt^4*mh^2*s12 + mt^6*s24 - mt^6*s23 - mt^6*s14 + mt^6*s13 + 1/4*denom(1/
      2*s12)*s14^2*s23*s24^2 + 1/4*denom(1/2*s12)*s14^2*s23^2*s24 + 1/4*denom(
      1/2*s12)*s14^3*s23*s24 - 1/4*denom(1/2*s12)*s13*s14*s24^3 - 1/4*denom(1/
      2*s12)*s13*s14*s23*s24^2 - 1/4*denom(1/2*s12)*s13*s14^2*s24^2 + 1/4*
      denom(1/2*s12)*s13*s14^2*s23*s24 - 1/4*denom(1/2*s12)*s13^2*s14*s24^2 - 
      1/4*denom(1/2*s12)*s12*s14*s24^3 - 1/2*denom(1/2*s12)*s12*s14*s23*s24^2
       - 1/4*denom(1/2*s12)*s12*s14*s23^2*s24 - 1/2*denom(1/2*s12)*s12*s14^2*
      s24^2 - 1/4*denom(1/2*s12)*s12*s14^2*s23*s24 - 1/4*denom(1/2*s12)*s12*
      s14^3*s24 - 3/4*denom(1/2*s12)*s12*s13*s14*s24^2 - 1/2*denom(1/2*s12)*
      s12*s13*s14*s23*s24 - 1/2*denom(1/2*s12)*s12*s13*s14^2*s24 - 1/4*denom(1/
      2*s12)*s12*s13^2*s14*s24 - 1/2*denom(1/2*s12)*s12^2*s14*s24^2 - 1/2*
      denom(1/2*s12)*s12^2*s14*s23*s24 - 1/2*denom(1/2*s12)*s12^2*s14^2*s24 - 
      1/2*denom(1/2*s12)*s12^2*s13*s14*s24 - 1/4*denom(1/2*s12)*s12^3*s14*s24
       - 1/4*denom(1/2*s12)*mh^2*s14^2*s23*s24 + 1/4*denom(1/2*s12)*mh^2*s13*
      s14*s24^2 + 1/2*denom(1/2*s12)*mh^2*s12*s14*s24^2 + 1/2*denom(1/2*s12)*
      mh^2*s12*s14*s23*s24 + 1/2*denom(1/2*s12)*mh^2*s12*s14^2*s24 + 1/2*
      denom(1/2*s12)*mh^2*s12*s13*s14*s24 + 1/2*denom(1/2*s12)*mh^2*s12^2*s14*
      s24 - 1/4*denom(1/2*s12)*mh^4*s12*s14*s24 + 1/4*denom(1/2*s12)*mt^2*s14*
      s24^3 - 1/4*denom(1/2*s12)*mt^2*s14*s23*s24^2 - 1/2*denom(1/2*s12)*mt^2*
      s14*s23^2*s24 - 3/2*denom(1/2*s12)*mt^2*s14^2*s23*s24 - 1/2*denom(1/2*
      s12)*mt^2*s14^2*s23^2 - 1/4*denom(1/2*s12)*mt^2*s14^3*s24 - 1/4*denom(1/
      2*s12)*mt^2*s14^3*s23 + 1/4*denom(1/2*s12)*mt^2*s13*s24^3 + 1/4*denom(1/
      2*s12)*mt^2*s13*s23*s24^2 + 3/2*denom(1/2*s12)*mt^2*s13*s14*s24^2 + 1/4*
      denom(1/2*s12)*mt^2*s13*s14^2*s24 - 1/4*denom(1/2*s12)*mt^2*s13*s14^2*
      s23 + 1/2*denom(1/2*s12)*mt^2*s13^2*s24^2 + 1/2*denom(1/2*s12)*mt^2*
      s13^2*s14*s24 + 1/4*denom(1/2*s12)*mt^2*s12*s24^3 + 1/2*denom(1/2*s12)*
      mt^2*s12*s23*s24^2 + 1/4*denom(1/2*s12)*mt^2*s12*s23^2*s24 + 3/2*denom(1/
      2*s12)*mt^2*s12*s14*s24^2 + 5/4*denom(1/2*s12)*mt^2*s12*s14*s23*s24 + 1/
      2*denom(1/2*s12)*mt^2*s12*s14*s23^2 + denom(1/2*s12)*mt^2*s12*s14^2*s24
       + 1/2*denom(1/2*s12)*mt^2*s12*s14^2*s23 + 1/4*denom(1/2*s12)*mt^2*s12*
      s14^3 + denom(1/2*s12)*mt^2*s12*s13*s24^2 + 3/4*denom(1/2*s12)*mt^2*s12*
      s13*s23*s24 + 9/4*denom(1/2*s12)*mt^2*s12*s13*s14*s24 + 3/4*denom(1/2*
      s12)*mt^2*s12*s13*s14*s23 + 1/2*denom(1/2*s12)*mt^2*s12*s13*s14^2 + 1/2*
      denom(1/2*s12)*mt^2*s12*s13^2*s24 + 1/4*denom(1/2*s12)*mt^2*s12*s13^2*
      s14 + 1/2*denom(1/2*s12)*mt^2*s12^2*s24^2 + 1/2*denom(1/2*s12)*mt^2*
      s12^2*s23*s24 + 3/2*denom(1/2*s12)*mt^2*s12^2*s14*s24 + 3/4*denom(1/2*
      s12)*mt^2*s12^2*s14*s23 + 1/2*denom(1/2*s12)*mt^2*s12^2*s14^2 + 3/4*
      denom(1/2*s12)*mt^2*s12^2*s13*s24 + 1/2*denom(1/2*s12)*mt^2*s12^2*s13*
      s14 + 1/4*denom(1/2*s12)*mt^2*s12^3*s24 + 1/4*denom(1/2*s12)*mt^2*s12^3*
      s14 - 1/4*denom(1/2*s12)*mt^2*mh^2*s14*s24^2 + 1/2*denom(1/2*s12)*mt^2*
      mh^2*s14*s23*s24 + 1/4*denom(1/2*s12)*mt^2*mh^2*s14^2*s24 + 1/4*denom(1/
      2*s12)*mt^2*mh^2*s14^2*s23 - 1/4*denom(1/2*s12)*mt^2*mh^2*s13*s24^2 - 1/
      2*denom(1/2*s12)*mt^2*mh^2*s13*s14*s24 - 1/2*denom(1/2*s12)*mt^2*mh^2*
      s12*s24^2 - 1/2*denom(1/2*s12)*mt^2*mh^2*s12*s23*s24 - 3/2*denom(1/2*s12
      )*mt^2*mh^2*s12*s14*s24 - 3/4*denom(1/2*s12)*mt^2*mh^2*s12*s14*s23 - 1/2
      *denom(1/2*s12)*mt^2*mh^2*s12*s14^2 - 3/4*denom(1/2*s12)*mt^2*mh^2*s12*
      s13*s24 - 1/2*denom(1/2*s12)*mt^2*mh^2*s12*s13*s14 - 1/2*denom(1/2*s12)*
      mt^2*mh^2*s12^2*s24 - 1/2*denom(1/2*s12)*mt^2*mh^2*s12^2*s14 + 1/4*
      denom(1/2*s12)*mt^2*mh^4*s12*s24 + 1/4*denom(1/2*s12)*mt^2*mh^4*s12*s14
       - 1/4*denom(1/2*s12)*mt^4*s24^3 + 1/4*denom(1/2*s12)*mt^4*s23^2*s24 - 3/
      4*denom(1/2*s12)*mt^4*s14*s24^2 + 7/4*denom(1/2*s12)*mt^4*s14*s23*s24 + 
      denom(1/2*s12)*mt^4*s14*s23^2 + 3/4*denom(1/2*s12)*mt^4*s14^2*s24 + 7/4*
      denom(1/2*s12)*mt^4*s14^2*s23 + 1/4*denom(1/2*s12)*mt^4*s14^3 - 7/4*
      denom(1/2*s12)*mt^4*s13*s24^2 - 1/4*denom(1/2*s12)*mt^4*s13*s23*s24 - 7/
      4*denom(1/2*s12)*mt^4*s13*s14*s24 + 1/4*denom(1/2*s12)*mt^4*s13*s14*s23
       - denom(1/2*s12)*mt^4*s13^2*s24 - 1/4*denom(1/2*s12)*mt^4*s13^2*s14 - 5/
      4*denom(1/2*s12)*mt^4*s12*s24^2 - 5/4*denom(1/2*s12)*mt^4*s12*s23*s24 - 
      1/2*denom(1/2*s12)*mt^4*s12*s23^2 - 2*denom(1/2*s12)*mt^4*s12*s14*s24 - 
      denom(1/2*s12)*mt^4*s12*s14*s23 - 3/4*denom(1/2*s12)*mt^4*s12*s14^2 - 2*
      denom(1/2*s12)*mt^4*s12*s13*s24 - denom(1/2*s12)*mt^4*s12*s13*s23 - 7/4*
      denom(1/2*s12)*mt^4*s12*s13*s14 - 1/2*denom(1/2*s12)*mt^4*s12*s13^2 - 5/
      4*denom(1/2*s12)*mt^4*s12^2*s24 - 3/4*denom(1/2*s12)*mt^4*s12^2*s23 - 5/
      4*denom(1/2*s12)*mt^4*s12^2*s14 - 3/4*denom(1/2*s12)*mt^4*s12^2*s13 - 1/
      4*denom(1/2*s12)*mt^4*s12^3 + 1/4*denom(1/2*s12)*mt^4*mh^2*s24^2 - 1/4*
      denom(1/2*s12)*mt^4*mh^2*s23*s24 - 1/2*denom(1/2*s12)*mt^4*mh^2*s14*s23
       - 1/4*denom(1/2*s12)*mt^4*mh^2*s14^2 + 1/2*denom(1/2*s12)*mt^4*mh^2*s13
      *s24 + 1/4*denom(1/2*s12)*mt^4*mh^2*s13*s14 + 5/4*denom(1/2*s12)*mt^4*
      mh^2*s12*s24 + 3/4*denom(1/2*s12)*mt^4*mh^2*s12*s23 + 5/4*denom(1/2*s12)
      *mt^4*mh^2*s12*s14 + 3/4*denom(1/2*s12)*mt^4*mh^2*s12*s13 + 1/2*denom(1/
      2*s12)*mt^4*mh^2*s12^2 - 1/4*denom(1/2*s12)*mt^4*mh^4*s12 + denom(1/2*
      s12)*mt^6*s24^2 - 1/2*denom(1/2*s12)*mt^6*s23*s24 - 1/2*denom(1/2*s12)*
      mt^6*s23^2 - 5/2*denom(1/2*s12)*mt^6*s14*s23 - denom(1/2*s12)*mt^6*s14^2
       + 5/2*denom(1/2*s12)*mt^6*s13*s24 + 1/2*denom(1/2*s12)*mt^6*s13*s14 + 1/
      2*denom(1/2*s12)*mt^6*s13^2 + 5/4*denom(1/2*s12)*mt^6*s12*s24 + 3/4*
      denom(1/2*s12)*mt^6*s12*s23 + 3/4*denom(1/2*s12)*mt^6*s12*s14 + 5/4*
      denom(1/2*s12)*mt^6*s12*s13 + denom(1/2*s12)*mt^6*s12^2 - 1/4*denom(1/2*
      s12)*mt^6*mh^2*s24 + 1/4*denom(1/2*s12)*mt^6*mh^2*s23 + 1/4*denom(1/2*
      s12)*mt^6*mh^2*s14 - 1/4*denom(1/2*s12)*mt^6*mh^2*s13 - denom(1/2*s12)*
      mt^6*mh^2*s12 - denom(1/2*s12)*mt^8*s24 + denom(1/2*s12)*mt^8*s23 + 
      denom(1/2*s12)*mt^8*s14 - denom(1/2*s12)*mt^8*s13 + 1/8*denom(1/4*s12^2)
      *s14^3*s23^2*s24 - 1/8*denom(1/4*s12^2)*s13^2*s14*s24^3 - 1/8*denom(1/4*
      s12^2)*s12*s14^2*s23*s24^2 - 1/8*denom(1/4*s12^2)*s12*s14^2*s23^2*s24 - 
      1/8*denom(1/4*s12^2)*s12*s14^3*s23*s24 - 1/8*denom(1/4*s12^2)*s12*s13*
      s14*s24^3 - 1/8*denom(1/4*s12^2)*s12*s13*s14*s23*s24^2 - 1/8*denom(1/4*
      s12^2)*s12*s13*s14^2*s24^2 - 1/8*denom(1/4*s12^2)*s12*s13*s14^2*s23*s24
       - 1/8*denom(1/4*s12^2)*s12*s13^2*s14*s24^2 - 1/8*denom(1/4*s12^2)*s12^2
      *s14^2*s23*s24 - 1/8*denom(1/4*s12^2)*s12^2*s13*s14*s24^2 + 1/8*denom(1/
      4*s12^2)*mh^2*s12*s14^2*s23*s24 + 1/8*denom(1/4*s12^2)*mh^2*s12*s13*s14*
      s24^2 - 3/8*denom(1/4*s12^2)*mt^2*s14^2*s23^2*s24 - 1/4*denom(1/4*s12^2)
      *mt^2*s14^3*s23*s24 - 1/8*denom(1/4*s12^2)*mt^2*s14^3*s23^2 + 1/4*denom(
      1/4*s12^2)*mt^2*s13*s14*s24^3 + 1/8*denom(1/4*s12^2)*mt^2*s13^2*s24^3 + 
      3/8*denom(1/4*s12^2)*mt^2*s13^2*s14*s24^2 + 1/8*denom(1/4*s12^2)*mt^2*
      s12*s14*s24^3 + 3/8*denom(1/4*s12^2)*mt^2*s12*s14*s23*s24^2 + 1/4*denom(
      1/4*s12^2)*mt^2*s12*s14*s23^2*s24 + 1/4*denom(1/4*s12^2)*mt^2*s12*s14^2*
      s24^2 + 1/2*denom(1/4*s12^2)*mt^2*s12*s14^2*s23*s24 + 1/8*denom(1/4*
      s12^2)*mt^2*s12*s14^2*s23^2 + 1/8*denom(1/4*s12^2)*mt^2*s12*s14^3*s24 + 
      1/8*denom(1/4*s12^2)*mt^2*s12*s14^3*s23 + 1/8*denom(1/4*s12^2)*mt^2*s12*
      s13*s24^3 + 1/8*denom(1/4*s12^2)*mt^2*s12*s13*s23*s24^2 + 1/2*denom(1/4*
      s12^2)*mt^2*s12*s13*s14*s24^2 + 1/2*denom(1/4*s12^2)*mt^2*s12*s13*s14*
      s23*s24 + 3/8*denom(1/4*s12^2)*mt^2*s12*s13*s14^2*s24 + 1/8*denom(1/4*
      s12^2)*mt^2*s12*s13*s14^2*s23 + 1/8*denom(1/4*s12^2)*mt^2*s12*s13^2*
      s24^2 + 1/4*denom(1/4*s12^2)*mt^2*s12*s13^2*s14*s24 + 1/8*denom(1/4*
      s12^2)*mt^2*s12^2*s14*s24^2 + 1/4*denom(1/4*s12^2)*mt^2*s12^2*s14*s23*
      s24 + 1/8*denom(1/4*s12^2)*mt^2*s12^2*s14^2*s24 + 1/8*denom(1/4*s12^2)*
      mt^2*s12^2*s14^2*s23 + 1/8*denom(1/4*s12^2)*mt^2*s12^2*s13*s24^2 + 1/4*
      denom(1/4*s12^2)*mt^2*s12^2*s13*s14*s24 - 1/8*denom(1/4*s12^2)*mt^2*mh^2
      *s12*s14*s24^2 - 1/4*denom(1/4*s12^2)*mt^2*mh^2*s12*s14*s23*s24 - 1/8*
      denom(1/4*s12^2)*mt^2*mh^2*s12*s14^2*s24 - 1/8*denom(1/4*s12^2)*mt^2*
      mh^2*s12*s14^2*s23 - 1/8*denom(1/4*s12^2)*mt^2*mh^2*s12*s13*s24^2 - 1/4*
      denom(1/4*s12^2)*mt^2*mh^2*s12*s13*s14*s24 - 1/8*denom(1/4*s12^2)*mt^4*
      s14*s24^3 + 3/8*denom(1/4*s12^2)*mt^4*s14*s23^2*s24 + 3/4*denom(1/4*
      s12^2)*mt^4*s14^2*s23*s24 + 3/8*denom(1/4*s12^2)*mt^4*s14^2*s23^2 + 1/8*
      denom(1/4*s12^2)*mt^4*s14^3*s24 + 1/4*denom(1/4*s12^2)*mt^4*s14^3*s23 - 
      1/4*denom(1/4*s12^2)*mt^4*s13*s24^3 - 3/4*denom(1/4*s12^2)*mt^4*s13*s14*
      s24^2 - 3/8*denom(1/4*s12^2)*mt^4*s13^2*s24^2 - 3/8*denom(1/4*s12^2)*
      mt^4*s13^2*s14*s24 - 1/8*denom(1/4*s12^2)*mt^4*s12*s24^3 - 1/4*denom(1/4
      *s12^2)*mt^4*s12*s23*s24^2 - 1/8*denom(1/4*s12^2)*mt^4*s12*s23^2*s24 - 5/
      8*denom(1/4*s12^2)*mt^4*s12*s14*s24^2 - 7/8*denom(1/4*s12^2)*mt^4*s12*
      s14*s23*s24 - 1/4*denom(1/4*s12^2)*mt^4*s12*s14*s23^2 - 5/8*denom(1/4*
      s12^2)*mt^4*s12*s14^2*s24 - 3/8*denom(1/4*s12^2)*mt^4*s12*s14^2*s23 - 1/
      8*denom(1/4*s12^2)*mt^4*s12*s14^3 - 3/8*denom(1/4*s12^2)*mt^4*s12*s13*
      s24^2 - 3/8*denom(1/4*s12^2)*mt^4*s12*s13*s23*s24 - 7/8*denom(1/4*s12^2)
      *mt^4*s12*s13*s14*s24 - 3/8*denom(1/4*s12^2)*mt^4*s12*s13*s14*s23 - 1/4*
      denom(1/4*s12^2)*mt^4*s12*s13*s14^2 - 1/4*denom(1/4*s12^2)*mt^4*s12*
      s13^2*s24 - 1/8*denom(1/4*s12^2)*mt^4*s12*s13^2*s14 - 1/8*denom(1/4*
      s12^2)*mt^4*s12^2*s24^2 - 1/8*denom(1/4*s12^2)*mt^4*s12^2*s23*s24 - 1/2*
      denom(1/4*s12^2)*mt^4*s12^2*s14*s24 - 1/4*denom(1/4*s12^2)*mt^4*s12^2*
      s14*s23 - 1/8*denom(1/4*s12^2)*mt^4*s12^2*s14^2 - 1/4*denom(1/4*s12^2)*
      mt^4*s12^2*s13*s24 - 1/8*denom(1/4*s12^2)*mt^4*s12^2*s13*s14 + 1/8*
      denom(1/4*s12^2)*mt^4*mh^2*s12*s24^2 + 1/8*denom(1/4*s12^2)*mt^4*mh^2*
      s12*s23*s24 + 1/2*denom(1/4*s12^2)*mt^4*mh^2*s12*s14*s24 + 1/4*denom(1/4
      *s12^2)*mt^4*mh^2*s12*s14*s23 + 1/8*denom(1/4*s12^2)*mt^4*mh^2*s12*s14^2
       + 1/4*denom(1/4*s12^2)*mt^4*mh^2*s12*s13*s24 + 1/8*denom(1/4*s12^2)*
      mt^4*mh^2*s12*s13*s14 + 1/8*denom(1/4*s12^2)*mt^6*s24^3 - 1/8*denom(1/4*
      s12^2)*mt^6*s23^2*s24 + 3/8*denom(1/4*s12^2)*mt^6*s14*s24^2 - 3/4*denom(
      1/4*s12^2)*mt^6*s14*s23*s24 - 3/8*denom(1/4*s12^2)*mt^6*s14*s23^2 - 3/8*
      denom(1/4*s12^2)*mt^6*s14^2*s24 - 3/4*denom(1/4*s12^2)*mt^6*s14^2*s23 - 
      1/8*denom(1/4*s12^2)*mt^6*s14^3 + 3/4*denom(1/4*s12^2)*mt^6*s13*s24^2 + 
      3/4*denom(1/4*s12^2)*mt^6*s13*s14*s24 + 3/8*denom(1/4*s12^2)*mt^6*s13^2*
      s24 + 1/8*denom(1/4*s12^2)*mt^6*s13^2*s14 + 3/8*denom(1/4*s12^2)*mt^6*
      s12*s24^2 + 1/2*denom(1/4*s12^2)*mt^6*s12*s23*s24 + 1/8*denom(1/4*s12^2)
      *mt^6*s12*s23^2 + 3/4*denom(1/4*s12^2)*mt^6*s12*s14*s24 + 1/2*denom(1/4*
      s12^2)*mt^6*s12*s14*s23 + 3/8*denom(1/4*s12^2)*mt^6*s12*s14^2 + 1/2*
      denom(1/4*s12^2)*mt^6*s12*s13*s24 + 1/4*denom(1/4*s12^2)*mt^6*s12*s13*
      s23 + 1/2*denom(1/4*s12^2)*mt^6*s12*s13*s14 + 1/8*denom(1/4*s12^2)*mt^6*
      s12*s13^2 + 3/8*denom(1/4*s12^2)*mt^6*s12^2*s24 + 1/8*denom(1/4*s12^2)*
      mt^6*s12^2*s23 + 3/8*denom(1/4*s12^2)*mt^6*s12^2*s14 + 1/8*denom(1/4*
      s12^2)*mt^6*s12^2*s13 - 3/8*denom(1/4*s12^2)*mt^6*mh^2*s12*s24 - 1/8*
      denom(1/4*s12^2)*mt^6*mh^2*s12*s23 - 3/8*denom(1/4*s12^2)*mt^6*mh^2*s12*
      s14 - 1/8*denom(1/4*s12^2)*mt^6*mh^2*s12*s13 - 3/8*denom(1/4*s12^2)*mt^8
      *s24^2 + 1/4*denom(1/4*s12^2)*mt^8*s23*s24 + 1/8*denom(1/4*s12^2)*mt^8*
      s23^2 + 3/4*denom(1/4*s12^2)*mt^8*s14*s23 + 3/8*denom(1/4*s12^2)*mt^8*
      s14^2 - 3/4*denom(1/4*s12^2)*mt^8*s13*s24 - 1/4*denom(1/4*s12^2)*mt^8*
      s13*s14 - 1/8*denom(1/4*s12^2)*mt^8*s13^2 - 1/4*denom(1/4*s12^2)*mt^8*
      s12*s24 - 1/4*denom(1/4*s12^2)*mt^8*s12*s23 - 1/4*denom(1/4*s12^2)*mt^8*
      s12*s14 - 1/4*denom(1/4*s12^2)*mt^8*s12*s13 - 1/4*denom(1/4*s12^2)*mt^8*
      s12^2 + 1/4*denom(1/4*s12^2)*mt^8*mh^2*s12 + 1/4*denom(1/4*s12^2)*mt^10*
      s24 - 1/4*denom(1/4*s12^2)*mt^10*s23 - 1/4*denom(1/4*s12^2)*mt^10*s14 + 
      1/4*denom(1/4*s12^2)*mt^10*s13;
 
 .sort
id KMatrix(16,4) =  mt^4*s14*s23 - mt^4*s13*s24 - mt^4*s12*s24 - mt^4*s12*s23
       - mt^4*s12*s14 - mt^4*s12*s13 - mt^4*s12^2 + mt^4*mh^2*s12 + mt^6*s24
       - mt^6*s23 - mt^6*s14 + mt^6*s13 - denom(1/2*s12)*mt^2*s14^2*s23*s24 + 
      denom(1/2*s12)*mt^2*s13*s14*s24^2 + denom(1/2*s12)*mt^2*s12*s14*s24^2 + 
      denom(1/2*s12)*mt^2*s12*s14*s23*s24 + denom(1/2*s12)*mt^2*s12*s14^2*s24
       + denom(1/2*s12)*mt^2*s12*s13*s14*s24 + denom(1/2*s12)*mt^2*s12^2*s14*
      s24 - denom(1/2*s12)*mt^2*mh^2*s12*s14*s24 - denom(1/2*s12)*mt^4*s14*
      s24^2 + 2*denom(1/2*s12)*mt^4*s14*s23*s24 + denom(1/2*s12)*mt^4*s14^2*
      s24 + denom(1/2*s12)*mt^4*s14^2*s23 - denom(1/2*s12)*mt^4*s13*s24^2 - 2*
      denom(1/2*s12)*mt^4*s13*s14*s24 - denom(1/2*s12)*mt^4*s12*s24^2 - denom(
      1/2*s12)*mt^4*s12*s23*s24 - 2*denom(1/2*s12)*mt^4*s12*s14*s24 - denom(1/
      2*s12)*mt^4*s12*s14*s23 - denom(1/2*s12)*mt^4*s12*s14^2 - denom(1/2*s12)
      *mt^4*s12*s13*s24 - denom(1/2*s12)*mt^4*s12*s13*s14 - denom(1/2*s12)*
      mt^4*s12^2*s24 - denom(1/2*s12)*mt^4*s12^2*s14 + denom(1/2*s12)*mt^4*
      mh^2*s12*s24 + denom(1/2*s12)*mt^4*mh^2*s12*s14 + denom(1/2*s12)*mt^6*
      s24^2 - denom(1/2*s12)*mt^6*s23*s24 - 2*denom(1/2*s12)*mt^6*s14*s23 - 
      denom(1/2*s12)*mt^6*s14^2 + 2*denom(1/2*s12)*mt^6*s13*s24 + denom(1/2*
      s12)*mt^6*s13*s14 + denom(1/2*s12)*mt^6*s12*s24 + denom(1/2*s12)*mt^6*
      s12*s23 + denom(1/2*s12)*mt^6*s12*s14 + denom(1/2*s12)*mt^6*s12*s13 + 
      denom(1/2*s12)*mt^6*s12^2 - denom(1/2*s12)*mt^6*mh^2*s12 - denom(1/2*s12
      )*mt^8*s24 + denom(1/2*s12)*mt^8*s23 + denom(1/2*s12)*mt^8*s14 - denom(1/
      2*s12)*mt^8*s13 + 1/4*denom(1/4*s12^2)*s14^3*s23*s24^2 - 1/4*denom(1/4*
      s12^2)*s13*s14^2*s24^3 - 1/4*denom(1/4*s12^2)*s12*s14^2*s24^3 - 1/4*
      denom(1/4*s12^2)*s12*s14^2*s23*s24^2 - 1/4*denom(1/4*s12^2)*s12*s14^3*
      s24^2 - 1/4*denom(1/4*s12^2)*s12*s13*s14^2*s24^2 - 1/4*denom(1/4*s12^2)*
      s12^2*s14^2*s24^2 + 1/4*denom(1/4*s12^2)*mh^2*s12*s14^2*s24^2 + 1/4*
      denom(1/4*s12^2)*mt^2*s14^2*s24^3 - 3/4*denom(1/4*s12^2)*mt^2*s14^2*s23*
      s24^2 - 1/4*denom(1/4*s12^2)*mt^2*s14^3*s24^2 - 1/2*denom(1/4*s12^2)*
      mt^2*s14^3*s23*s24 + 1/2*denom(1/4*s12^2)*mt^2*s13*s14*s24^3 + 3/4*
      denom(1/4*s12^2)*mt^2*s13*s14^2*s24^2 + 1/2*denom(1/4*s12^2)*mt^2*s12*
      s14*s24^3 + 1/2*denom(1/4*s12^2)*mt^2*s12*s14*s23*s24^2 + denom(1/4*
      s12^2)*mt^2*s12*s14^2*s24^2 + 1/2*denom(1/4*s12^2)*mt^2*s12*s14^2*s23*
      s24 + 1/2*denom(1/4*s12^2)*mt^2*s12*s14^3*s24 + 1/2*denom(1/4*s12^2)*
      mt^2*s12*s13*s14*s24^2 + 1/2*denom(1/4*s12^2)*mt^2*s12*s13*s14^2*s24 + 1/
      2*denom(1/4*s12^2)*mt^2*s12^2*s14*s24^2 + 1/2*denom(1/4*s12^2)*mt^2*
      s12^2*s14^2*s24 - 1/2*denom(1/4*s12^2)*mt^2*mh^2*s12*s14*s24^2 - 1/2*
      denom(1/4*s12^2)*mt^2*mh^2*s12*s14^2*s24 - 1/2*denom(1/4*s12^2)*mt^4*s14
      *s24^3 + 3/4*denom(1/4*s12^2)*mt^4*s14*s23*s24^2 + 3/2*denom(1/4*s12^2)*
      mt^4*s14^2*s23*s24 + 1/2*denom(1/4*s12^2)*mt^4*s14^3*s24 + 1/4*denom(1/4
      *s12^2)*mt^4*s14^3*s23 - 1/4*denom(1/4*s12^2)*mt^4*s13*s24^3 - 3/2*
      denom(1/4*s12^2)*mt^4*s13*s14*s24^2 - 3/4*denom(1/4*s12^2)*mt^4*s13*
      s14^2*s24 - 1/4*denom(1/4*s12^2)*mt^4*s12*s24^3 - 1/4*denom(1/4*s12^2)*
      mt^4*s12*s23*s24^2 - 5/4*denom(1/4*s12^2)*mt^4*s12*s14*s24^2 - denom(1/4
      *s12^2)*mt^4*s12*s14*s23*s24 - 5/4*denom(1/4*s12^2)*mt^4*s12*s14^2*s24
       - 1/4*denom(1/4*s12^2)*mt^4*s12*s14^2*s23 - 1/4*denom(1/4*s12^2)*mt^4*
      s12*s14^3 - 1/4*denom(1/4*s12^2)*mt^4*s12*s13*s24^2 - denom(1/4*s12^2)*
      mt^4*s12*s13*s14*s24 - 1/4*denom(1/4*s12^2)*mt^4*s12*s13*s14^2 - 1/4*
      denom(1/4*s12^2)*mt^4*s12^2*s24^2 - denom(1/4*s12^2)*mt^4*s12^2*s14*s24
       - 1/4*denom(1/4*s12^2)*mt^4*s12^2*s14^2 + 1/4*denom(1/4*s12^2)*mt^4*
      mh^2*s12*s24^2 + denom(1/4*s12^2)*mt^4*mh^2*s12*s14*s24 + 1/4*denom(1/4*
      s12^2)*mt^4*mh^2*s12*s14^2 + 1/4*denom(1/4*s12^2)*mt^6*s24^3 - 1/4*
      denom(1/4*s12^2)*mt^6*s23*s24^2 + 3/4*denom(1/4*s12^2)*mt^6*s14*s24^2 - 
      3/2*denom(1/4*s12^2)*mt^6*s14*s23*s24 - 3/4*denom(1/4*s12^2)*mt^6*s14^2*
      s24 - 3/4*denom(1/4*s12^2)*mt^6*s14^2*s23 - 1/4*denom(1/4*s12^2)*mt^6*
      s14^3 + 3/4*denom(1/4*s12^2)*mt^6*s13*s24^2 + 3/2*denom(1/4*s12^2)*mt^6*
      s13*s14*s24 + 1/4*denom(1/4*s12^2)*mt^6*s13*s14^2 + 1/2*denom(1/4*s12^2)
      *mt^6*s12*s24^2 + 1/2*denom(1/4*s12^2)*mt^6*s12*s23*s24 + denom(1/4*
      s12^2)*mt^6*s12*s14*s24 + 1/2*denom(1/4*s12^2)*mt^6*s12*s14*s23 + 1/2*
      denom(1/4*s12^2)*mt^6*s12*s14^2 + 1/2*denom(1/4*s12^2)*mt^6*s12*s13*s24
       + 1/2*denom(1/4*s12^2)*mt^6*s12*s13*s14 + 1/2*denom(1/4*s12^2)*mt^6*
      s12^2*s24 + 1/2*denom(1/4*s12^2)*mt^6*s12^2*s14 - 1/2*denom(1/4*s12^2)*
      mt^6*mh^2*s12*s24 - 1/2*denom(1/4*s12^2)*mt^6*mh^2*s12*s14 - 1/2*denom(1/
      4*s12^2)*mt^8*s24^2 + 1/2*denom(1/4*s12^2)*mt^8*s23*s24 + 3/4*denom(1/4*
      s12^2)*mt^8*s14*s23 + 1/2*denom(1/4*s12^2)*mt^8*s14^2 - 3/4*denom(1/4*
      s12^2)*mt^8*s13*s24 - 1/2*denom(1/4*s12^2)*mt^8*s13*s14 - 1/4*denom(1/4*
      s12^2)*mt^8*s12*s24 - 1/4*denom(1/4*s12^2)*mt^8*s12*s23 - 1/4*denom(1/4*
      s12^2)*mt^8*s12*s14 - 1/4*denom(1/4*s12^2)*mt^8*s12*s13 - 1/4*denom(1/4*
      s12^2)*mt^8*s12^2 + 1/4*denom(1/4*s12^2)*mt^8*mh^2*s12 + 1/4*denom(1/4*
      s12^2)*mt^10*s24 - 1/4*denom(1/4*s12^2)*mt^10*s23 - 1/4*denom(1/4*s12^2)
      *mt^10*s14 + 1/4*denom(1/4*s12^2)*mt^10*s13;
 
 .sort
id KMatrix(16,5) =  1/2*mt*s12*s14*s24^2 + mt*s12*s14*s23*s24 + 1/2*mt*s12*s14
      *s23^2 + mt*s12*s14^2*s24 + mt*s12*s14^2*s23 + 1/2*mt*s12*s14^3 + mt*s12
      *s13*s14*s24 + mt*s12*s13*s14*s23 + mt*s12*s13*s14^2 + 1/2*mt*s12*s13^2*
      s14 + mt*s12^2*s14*s24 + mt*s12^2*s14*s23 + mt*s12^2*s14^2 + mt*s12^2*
      s13*s14 + 1/2*mt*s12^3*s14 - mt*mh^2*s12*s14*s24 - mt*mh^2*s12*s14*s23
       - mt*mh^2*s12*s14^2 - mt*mh^2*s12*s13*s14 - mt*mh^2*s12^2*s14 + 1/2*mt*
      mh^4*s12*s14 - 1/2*mt^3*s12*s24^2 - mt^3*s12*s23*s24 - 1/2*mt^3*s12*
      s23^2 - 3*mt^3*s12*s14*s24 - 3*mt^3*s12*s14*s23 - 5/2*mt^3*s12*s14^2 - 
      mt^3*s12*s13*s24 - mt^3*s12*s13*s23 - 3*mt^3*s12*s13*s14 - 1/2*mt^3*s12*
      s13^2 - mt^3*s12^2*s24 - mt^3*s12^2*s23 - 3*mt^3*s12^2*s14 - mt^3*s12^2*
      s13 - 1/2*mt^3*s12^3 + mt^3*mh^2*s12*s24 + mt^3*mh^2*s12*s23 + 3*mt^3*
      mh^2*s12*s14 + mt^3*mh^2*s12*s13 + mt^3*mh^2*s12^2 - 1/2*mt^3*mh^4*s12
       + 2*mt^5*s12*s24 + 2*mt^5*s12*s23 + 4*mt^5*s12*s14 + 2*mt^5*s12*s13 + 2
      *mt^5*s12^2 - 2*mt^5*mh^2*s12 - 2*mt^7*s12 + 1/2*denom(1/2*s12)*mt*s12*
      s14^2*s23*s24 + 1/2*denom(1/2*s12)*mt*s12*s14^2*s23^2 + 1/2*denom(1/2*
      s12)*mt*s12*s14^3*s23 + 1/2*denom(1/2*s12)*mt*s12*s13*s14*s24^2 + 1/2*
      denom(1/2*s12)*mt*s12*s13*s14*s23*s24 + 1/2*denom(1/2*s12)*mt*s12*s13*
      s14^2*s24 + 1/2*denom(1/2*s12)*mt*s12*s13*s14^2*s23 + 1/2*denom(1/2*s12)
      *mt*s12*s13^2*s14*s24 + 1/2*denom(1/2*s12)*mt*s12^2*s14^2*s23 + 1/2*
      denom(1/2*s12)*mt*s12^2*s13*s14*s24 - 1/2*denom(1/2*s12)*mt*mh^2*s12*
      s14^2*s23 - 1/2*denom(1/2*s12)*mt*mh^2*s12*s13*s14*s24 - 1/2*denom(1/2*
      s12)*mt^3*s12*s14*s24^2 - 3/2*denom(1/2*s12)*mt^3*s12*s14*s23*s24 - 
      denom(1/2*s12)*mt^3*s12*s14*s23^2 - denom(1/2*s12)*mt^3*s12*s14^2*s24 - 
      5/2*denom(1/2*s12)*mt^3*s12*s14^2*s23 - 1/2*denom(1/2*s12)*mt^3*s12*
      s14^3 - 1/2*denom(1/2*s12)*mt^3*s12*s13*s24^2 - 1/2*denom(1/2*s12)*mt^3*
      s12*s13*s23*s24 - 5/2*denom(1/2*s12)*mt^3*s12*s13*s14*s24 - 3/2*denom(1/
      2*s12)*mt^3*s12*s13*s14*s23 - denom(1/2*s12)*mt^3*s12*s13*s14^2 - 1/2*
      denom(1/2*s12)*mt^3*s12*s13^2*s24 - 1/2*denom(1/2*s12)*mt^3*s12*s13^2*
      s14 - 1/2*denom(1/2*s12)*mt^3*s12^2*s14*s24 - denom(1/2*s12)*mt^3*s12^2*
      s14*s23 - 1/2*denom(1/2*s12)*mt^3*s12^2*s14^2 - 1/2*denom(1/2*s12)*mt^3*
      s12^2*s13*s24 - 1/2*denom(1/2*s12)*mt^3*s12^2*s13*s14 + 1/2*denom(1/2*
      s12)*mt^3*mh^2*s12*s14*s24 + denom(1/2*s12)*mt^3*mh^2*s12*s14*s23 + 1/2*
      denom(1/2*s12)*mt^3*mh^2*s12*s14^2 + 1/2*denom(1/2*s12)*mt^3*mh^2*s12*
      s13*s24 + 1/2*denom(1/2*s12)*mt^3*mh^2*s12*s13*s14 + 1/2*denom(1/2*s12)*
      mt^5*s12*s24^2 + denom(1/2*s12)*mt^5*s12*s23*s24 + 1/2*denom(1/2*s12)*
      mt^5*s12*s23^2 + 3*denom(1/2*s12)*mt^5*s12*s14*s24 + 4*denom(1/2*s12)*
      mt^5*s12*s14*s23 + 5/2*denom(1/2*s12)*mt^5*s12*s14^2 + 2*denom(1/2*s12)*
      mt^5*s12*s13*s24 + denom(1/2*s12)*mt^5*s12*s13*s23 + 3*denom(1/2*s12)*
      mt^5*s12*s13*s14 + 1/2*denom(1/2*s12)*mt^5*s12*s13^2 + 1/2*denom(1/2*s12
      )*mt^5*s12^2*s24 + 1/2*denom(1/2*s12)*mt^5*s12^2*s23 + 3/2*denom(1/2*s12
      )*mt^5*s12^2*s14 + 1/2*denom(1/2*s12)*mt^5*s12^2*s13 - 1/2*denom(1/2*s12
      )*mt^5*mh^2*s12*s24 - 1/2*denom(1/2*s12)*mt^5*mh^2*s12*s23 - 3/2*denom(1/
      2*s12)*mt^5*mh^2*s12*s14 - 1/2*denom(1/2*s12)*mt^5*mh^2*s12*s13 - 2*
      denom(1/2*s12)*mt^7*s12*s24 - 2*denom(1/2*s12)*mt^7*s12*s23 - 4*denom(1/
      2*s12)*mt^7*s12*s14 - 2*denom(1/2*s12)*mt^7*s12*s13 - denom(1/2*s12)*
      mt^7*s12^2 + denom(1/2*s12)*mt^7*mh^2*s12 + 2*denom(1/2*s12)*mt^9*s12 + 
      1/8*denom(1/4*s12^2)*mt*s12*s14^3*s23^2 + 1/4*denom(1/4*s12^2)*mt*s12*
      s13*s14^2*s23*s24 + 1/8*denom(1/4*s12^2)*mt*s12*s13^2*s14*s24^2 - 1/4*
      denom(1/4*s12^2)*mt^3*s12*s14^2*s23*s24 - 3/8*denom(1/4*s12^2)*mt^3*s12*
      s14^2*s23^2 - 1/4*denom(1/4*s12^2)*mt^3*s12*s14^3*s23 - 1/4*denom(1/4*
      s12^2)*mt^3*s12*s13*s14*s24^2 - 1/2*denom(1/4*s12^2)*mt^3*s12*s13*s14*
      s23*s24 - 1/4*denom(1/4*s12^2)*mt^3*s12*s13*s14^2*s24 - 1/4*denom(1/4*
      s12^2)*mt^3*s12*s13*s14^2*s23 - 1/8*denom(1/4*s12^2)*mt^3*s12*s13^2*
      s24^2 - 1/4*denom(1/4*s12^2)*mt^3*s12*s13^2*s14*s24 + 1/8*denom(1/4*
      s12^2)*mt^5*s12*s14*s24^2 + 1/2*denom(1/4*s12^2)*mt^5*s12*s14*s23*s24 + 
      3/8*denom(1/4*s12^2)*mt^5*s12*s14*s23^2 + 1/4*denom(1/4*s12^2)*mt^5*s12*
      s14^2*s24 + denom(1/4*s12^2)*mt^5*s12*s14^2*s23 + 1/8*denom(1/4*s12^2)*
      mt^5*s12*s14^3 + 1/4*denom(1/4*s12^2)*mt^5*s12*s13*s24^2 + 1/4*denom(1/4
      *s12^2)*mt^5*s12*s13*s23*s24 + denom(1/4*s12^2)*mt^5*s12*s13*s14*s24 + 1/
      2*denom(1/4*s12^2)*mt^5*s12*s13*s14*s23 + 1/4*denom(1/4*s12^2)*mt^5*s12*
      s13*s14^2 + 1/4*denom(1/4*s12^2)*mt^5*s12*s13^2*s24 + 1/8*denom(1/4*
      s12^2)*mt^5*s12*s13^2*s14 - 1/8*denom(1/4*s12^2)*mt^7*s12*s24^2 - 1/4*
      denom(1/4*s12^2)*mt^7*s12*s23*s24 - 1/8*denom(1/4*s12^2)*mt^7*s12*s23^2
       - 3/4*denom(1/4*s12^2)*mt^7*s12*s14*s24 - 5/4*denom(1/4*s12^2)*mt^7*s12
      *s14*s23 - 5/8*denom(1/4*s12^2)*mt^7*s12*s14^2 - 3/4*denom(1/4*s12^2)*
      mt^7*s12*s13*s24 - 1/4*denom(1/4*s12^2)*mt^7*s12*s13*s23 - 3/4*denom(1/4
      *s12^2)*mt^7*s12*s13*s14 - 1/8*denom(1/4*s12^2)*mt^7*s12*s13^2 + 1/2*
      denom(1/4*s12^2)*mt^9*s12*s24 + 1/2*denom(1/4*s12^2)*mt^9*s12*s23 + 
      denom(1/4*s12^2)*mt^9*s12*s14 + 1/2*denom(1/4*s12^2)*mt^9*s12*s13 - 1/2*
      denom(1/4*s12^2)*mt^11*s12;
 
 .sort
id KMatrix(16,6) =   - mt^3*s12*s14*s24 - mt^3*s12*s14*s23 - mt^3*s12*s14^2 - 
      mt^3*s12*s13*s14 - mt^3*s12^2*s14 + mt^3*mh^2*s12*s14 + mt^5*s12*s24 + 
      mt^5*s12*s23 + 3*mt^5*s12*s14 + mt^5*s12*s13 + mt^5*s12^2 - mt^5*mh^2*
      s12 - 2*mt^7*s12 + 1/2*denom(1/2*s12)*mt*s12*s14^2*s24^2 + 1/2*denom(1/2
      *s12)*mt*s12*s14^2*s23*s24 + 1/2*denom(1/2*s12)*mt*s12*s14^3*s24 + 1/2*
      denom(1/2*s12)*mt*s12*s13*s14^2*s24 + 1/2*denom(1/2*s12)*mt*s12^2*s14^2*
      s24 - 1/2*denom(1/2*s12)*mt*mh^2*s12*s14^2*s24 - denom(1/2*s12)*mt^3*s12
      *s14*s24^2 - denom(1/2*s12)*mt^3*s12*s14*s23*s24 - 5/2*denom(1/2*s12)*
      mt^3*s12*s14^2*s24 - denom(1/2*s12)*mt^3*s12*s14^2*s23 - 1/2*denom(1/2*
      s12)*mt^3*s12*s14^3 - 3/2*denom(1/2*s12)*mt^3*s12*s13*s14*s24 - 1/2*
      denom(1/2*s12)*mt^3*s12*s13*s14^2 - denom(1/2*s12)*mt^3*s12^2*s14*s24 - 
      1/2*denom(1/2*s12)*mt^3*s12^2*s14^2 + denom(1/2*s12)*mt^3*mh^2*s12*s14*
      s24 + 1/2*denom(1/2*s12)*mt^3*mh^2*s12*s14^2 + 1/2*denom(1/2*s12)*mt^5*
      s12*s24^2 + 1/2*denom(1/2*s12)*mt^5*s12*s23*s24 + 4*denom(1/2*s12)*mt^5*
      s12*s14*s24 + 2*denom(1/2*s12)*mt^5*s12*s14*s23 + 5/2*denom(1/2*s12)*
      mt^5*s12*s14^2 + denom(1/2*s12)*mt^5*s12*s13*s24 + 3/2*denom(1/2*s12)*
      mt^5*s12*s13*s14 + 1/2*denom(1/2*s12)*mt^5*s12^2*s24 + denom(1/2*s12)*
      mt^5*s12^2*s14 - 1/2*denom(1/2*s12)*mt^5*mh^2*s12*s24 - denom(1/2*s12)*
      mt^5*mh^2*s12*s14 - 2*denom(1/2*s12)*mt^7*s12*s24 - denom(1/2*s12)*mt^7*
      s12*s23 - 4*denom(1/2*s12)*mt^7*s12*s14 - denom(1/2*s12)*mt^7*s12*s13 - 
      1/2*denom(1/2*s12)*mt^7*s12^2 + 1/2*denom(1/2*s12)*mt^7*mh^2*s12 + 2*
      denom(1/2*s12)*mt^9*s12 + 1/4*denom(1/4*s12^2)*mt*s12*s14^3*s23*s24 + 1/
      4*denom(1/4*s12^2)*mt*s12*s13*s14^2*s24^2 - 1/4*denom(1/4*s12^2)*mt^3*
      s12*s14^2*s24^2 - 3/4*denom(1/4*s12^2)*mt^3*s12*s14^2*s23*s24 - 1/4*
      denom(1/4*s12^2)*mt^3*s12*s14^3*s24 - 1/4*denom(1/4*s12^2)*mt^3*s12*
      s14^3*s23 - 1/2*denom(1/4*s12^2)*mt^3*s12*s13*s14*s24^2 - 1/2*denom(1/4*
      s12^2)*mt^3*s12*s13*s14^2*s24 + 1/2*denom(1/4*s12^2)*mt^5*s12*s14*s24^2
       + 3/4*denom(1/4*s12^2)*mt^5*s12*s14*s23*s24 + 5/4*denom(1/4*s12^2)*mt^5
      *s12*s14^2*s24 + 3/4*denom(1/4*s12^2)*mt^5*s12*s14^2*s23 + 1/4*denom(1/4
      *s12^2)*mt^5*s12*s14^3 + 1/4*denom(1/4*s12^2)*mt^5*s12*s13*s24^2 + 
      denom(1/4*s12^2)*mt^5*s12*s13*s14*s24 + 1/4*denom(1/4*s12^2)*mt^5*s12*
      s13*s14^2 - 1/4*denom(1/4*s12^2)*mt^7*s12*s24^2 - 1/4*denom(1/4*s12^2)*
      mt^7*s12*s23*s24 - 7/4*denom(1/4*s12^2)*mt^7*s12*s14*s24 - 3/4*denom(1/4
      *s12^2)*mt^7*s12*s14*s23 - denom(1/4*s12^2)*mt^7*s12*s14^2 - 1/2*denom(1/
      4*s12^2)*mt^7*s12*s13*s24 - 1/2*denom(1/4*s12^2)*mt^7*s12*s13*s14 + 3/4*
      denom(1/4*s12^2)*mt^9*s12*s24 + 1/4*denom(1/4*s12^2)*mt^9*s12*s23 + 5/4*
      denom(1/4*s12^2)*mt^9*s12*s14 + 1/4*denom(1/4*s12^2)*mt^9*s12*s13 - 1/2*
      denom(1/4*s12^2)*mt^11*s12;
 
 .sort
id KMatrix(16,7) =   - mt^3*s12*s14*s24 - mt^3*s12*s14*s23 - mt^3*s12*s14^2 - 
      mt^3*s12*s13*s14 - mt^3*s12^2*s14 + mt^3*mh^2*s12*s14 + mt^5*s12*s24 + 
      mt^5*s12*s23 + 3*mt^5*s12*s14 + mt^5*s12*s13 + mt^5*s12^2 - mt^5*mh^2*
      s12 - 2*mt^7*s12 + 1/2*denom(1/2*s12)*mt*s12*s14^2*s24^2 + 1/2*denom(1/2
      *s12)*mt*s12*s14^2*s23*s24 + 1/2*denom(1/2*s12)*mt*s12*s14^3*s24 + 1/2*
      denom(1/2*s12)*mt*s12*s13*s14^2*s24 + 1/2*denom(1/2*s12)*mt*s12^2*s14^2*
      s24 - 1/2*denom(1/2*s12)*mt*mh^2*s12*s14^2*s24 - denom(1/2*s12)*mt^3*s12
      *s14*s24^2 - denom(1/2*s12)*mt^3*s12*s14*s23*s24 - 5/2*denom(1/2*s12)*
      mt^3*s12*s14^2*s24 - denom(1/2*s12)*mt^3*s12*s14^2*s23 - 1/2*denom(1/2*
      s12)*mt^3*s12*s14^3 - 3/2*denom(1/2*s12)*mt^3*s12*s13*s14*s24 - 1/2*
      denom(1/2*s12)*mt^3*s12*s13*s14^2 - denom(1/2*s12)*mt^3*s12^2*s14*s24 - 
      1/2*denom(1/2*s12)*mt^3*s12^2*s14^2 + denom(1/2*s12)*mt^3*mh^2*s12*s14*
      s24 + 1/2*denom(1/2*s12)*mt^3*mh^2*s12*s14^2 + 1/2*denom(1/2*s12)*mt^5*
      s12*s24^2 + 1/2*denom(1/2*s12)*mt^5*s12*s23*s24 + 4*denom(1/2*s12)*mt^5*
      s12*s14*s24 + 2*denom(1/2*s12)*mt^5*s12*s14*s23 + 5/2*denom(1/2*s12)*
      mt^5*s12*s14^2 + denom(1/2*s12)*mt^5*s12*s13*s24 + 3/2*denom(1/2*s12)*
      mt^5*s12*s13*s14 + 1/2*denom(1/2*s12)*mt^5*s12^2*s24 + denom(1/2*s12)*
      mt^5*s12^2*s14 - 1/2*denom(1/2*s12)*mt^5*mh^2*s12*s24 - denom(1/2*s12)*
      mt^5*mh^2*s12*s14 - 2*denom(1/2*s12)*mt^7*s12*s24 - denom(1/2*s12)*mt^7*
      s12*s23 - 4*denom(1/2*s12)*mt^7*s12*s14 - denom(1/2*s12)*mt^7*s12*s13 - 
      1/2*denom(1/2*s12)*mt^7*s12^2 + 1/2*denom(1/2*s12)*mt^7*mh^2*s12 + 2*
      denom(1/2*s12)*mt^9*s12 + 1/4*denom(1/4*s12^2)*mt*s12*s14^3*s23*s24 + 1/
      4*denom(1/4*s12^2)*mt*s12*s13*s14^2*s24^2 - 1/4*denom(1/4*s12^2)*mt^3*
      s12*s14^2*s24^2 - 3/4*denom(1/4*s12^2)*mt^3*s12*s14^2*s23*s24 - 1/4*
      denom(1/4*s12^2)*mt^3*s12*s14^3*s24 - 1/4*denom(1/4*s12^2)*mt^3*s12*
      s14^3*s23 - 1/2*denom(1/4*s12^2)*mt^3*s12*s13*s14*s24^2 - 1/2*denom(1/4*
      s12^2)*mt^3*s12*s13*s14^2*s24 + 1/2*denom(1/4*s12^2)*mt^5*s12*s14*s24^2
       + 3/4*denom(1/4*s12^2)*mt^5*s12*s14*s23*s24 + 5/4*denom(1/4*s12^2)*mt^5
      *s12*s14^2*s24 + 3/4*denom(1/4*s12^2)*mt^5*s12*s14^2*s23 + 1/4*denom(1/4
      *s12^2)*mt^5*s12*s14^3 + 1/4*denom(1/4*s12^2)*mt^5*s12*s13*s24^2 + 
      denom(1/4*s12^2)*mt^5*s12*s13*s14*s24 + 1/4*denom(1/4*s12^2)*mt^5*s12*
      s13*s14^2 - 1/4*denom(1/4*s12^2)*mt^7*s12*s24^2 - 1/4*denom(1/4*s12^2)*
      mt^7*s12*s23*s24 - 7/4*denom(1/4*s12^2)*mt^7*s12*s14*s24 - 3/4*denom(1/4
      *s12^2)*mt^7*s12*s14*s23 - denom(1/4*s12^2)*mt^7*s12*s14^2 - 1/2*denom(1/
      4*s12^2)*mt^7*s12*s13*s24 - 1/2*denom(1/4*s12^2)*mt^7*s12*s13*s14 + 3/4*
      denom(1/4*s12^2)*mt^9*s12*s24 + 1/4*denom(1/4*s12^2)*mt^9*s12*s23 + 5/4*
      denom(1/4*s12^2)*mt^9*s12*s14 + 1/4*denom(1/4*s12^2)*mt^9*s12*s13 - 1/2*
      denom(1/4*s12^2)*mt^11*s12;
 
 .sort
id KMatrix(16,8) =  2*mt^5*s12*s14 - 2*mt^7*s12 - 2*denom(1/2*s12)*mt^3*s12*
      s14^2*s24 + 4*denom(1/2*s12)*mt^5*s12*s14*s24 + 2*denom(1/2*s12)*mt^5*
      s12*s14^2 - 2*denom(1/2*s12)*mt^7*s12*s24 - 4*denom(1/2*s12)*mt^7*s12*
      s14 + 2*denom(1/2*s12)*mt^9*s12 + 1/2*denom(1/4*s12^2)*mt*s12*s14^3*
      s24^2 - 3/2*denom(1/4*s12^2)*mt^3*s12*s14^2*s24^2 - denom(1/4*s12^2)*
      mt^3*s12*s14^3*s24 + 3/2*denom(1/4*s12^2)*mt^5*s12*s14*s24^2 + 3*denom(1/
      4*s12^2)*mt^5*s12*s14^2*s24 + 1/2*denom(1/4*s12^2)*mt^5*s12*s14^3 - 1/2*
      denom(1/4*s12^2)*mt^7*s12*s24^2 - 3*denom(1/4*s12^2)*mt^7*s12*s14*s24 - 
      3/2*denom(1/4*s12^2)*mt^7*s12*s14^2 + denom(1/4*s12^2)*mt^9*s12*s24 + 3/
      2*denom(1/4*s12^2)*mt^9*s12*s14 - 1/2*denom(1/4*s12^2)*mt^11*s12;
 
 .sort
id KMatrix(16,9) =   - 1/2*mt*s12*s23*s24^2 - mt*s12*s23^2*s24 - 1/2*mt*s12*
      s23^3 - mt*s12*s14*s23*s24 - mt*s12*s14*s23^2 - 1/2*mt*s12*s14^2*s23 - 
      mt*s12*s13*s23*s24 - mt*s12*s13*s23^2 - mt*s12*s13*s14*s23 - 1/2*mt*s12*
      s13^2*s23 - mt*s12^2*s23*s24 - mt*s12^2*s23^2 - mt*s12^2*s14*s23 - mt*
      s12^2*s13*s23 - 1/2*mt*s12^3*s23 + mt*mh^2*s12*s23*s24 + mt*mh^2*s12*
      s23^2 + mt*mh^2*s12*s14*s23 + mt*mh^2*s12*s13*s23 + mt*mh^2*s12^2*s23 - 
      1/2*mt*mh^4*s12*s23 + 1/2*mt^3*s12*s24^2 + 3*mt^3*s12*s23*s24 + 5/2*mt^3
      *s12*s23^2 + mt^3*s12*s14*s24 + 3*mt^3*s12*s14*s23 + 1/2*mt^3*s12*s14^2
       + mt^3*s12*s13*s24 + 3*mt^3*s12*s13*s23 + mt^3*s12*s13*s14 + 1/2*mt^3*
      s12*s13^2 + mt^3*s12^2*s24 + 3*mt^3*s12^2*s23 + mt^3*s12^2*s14 + mt^3*
      s12^2*s13 + 1/2*mt^3*s12^3 - mt^3*mh^2*s12*s24 - 3*mt^3*mh^2*s12*s23 - 
      mt^3*mh^2*s12*s14 - mt^3*mh^2*s12*s13 - mt^3*mh^2*s12^2 + 1/2*mt^3*mh^4*
      s12 - 2*mt^5*s12*s24 - 4*mt^5*s12*s23 - 2*mt^5*s12*s14 - 2*mt^5*s12*s13
       - 2*mt^5*s12^2 + 2*mt^5*mh^2*s12 + 2*mt^7*s12 - 1/2*denom(1/2*s12)*mt*
      s12*s14*s23^2*s24 - 1/2*denom(1/2*s12)*mt*s12*s14*s23^3 - 1/2*denom(1/2*
      s12)*mt*s12*s14^2*s23^2 - 1/2*denom(1/2*s12)*mt*s12*s13*s23*s24^2 - 1/2*
      denom(1/2*s12)*mt*s12*s13*s23^2*s24 - 1/2*denom(1/2*s12)*mt*s12*s13*s14*
      s23*s24 - 1/2*denom(1/2*s12)*mt*s12*s13*s14*s23^2 - 1/2*denom(1/2*s12)*
      mt*s12*s13^2*s23*s24 - 1/2*denom(1/2*s12)*mt*s12^2*s14*s23^2 - 1/2*
      denom(1/2*s12)*mt*s12^2*s13*s23*s24 + 1/2*denom(1/2*s12)*mt*mh^2*s12*s14
      *s23^2 + 1/2*denom(1/2*s12)*mt*mh^2*s12*s13*s23*s24 + 1/2*denom(1/2*s12)
      *mt^3*s12*s23*s24^2 + denom(1/2*s12)*mt^3*s12*s23^2*s24 + 1/2*denom(1/2*
      s12)*mt^3*s12*s23^3 + 3/2*denom(1/2*s12)*mt^3*s12*s14*s23*s24 + 5/2*
      denom(1/2*s12)*mt^3*s12*s14*s23^2 + denom(1/2*s12)*mt^3*s12*s14^2*s23 + 
      1/2*denom(1/2*s12)*mt^3*s12*s13*s24^2 + 5/2*denom(1/2*s12)*mt^3*s12*s13*
      s23*s24 + denom(1/2*s12)*mt^3*s12*s13*s23^2 + 1/2*denom(1/2*s12)*mt^3*
      s12*s13*s14*s24 + 3/2*denom(1/2*s12)*mt^3*s12*s13*s14*s23 + 1/2*denom(1/
      2*s12)*mt^3*s12*s13^2*s24 + 1/2*denom(1/2*s12)*mt^3*s12*s13^2*s23 + 1/2*
      denom(1/2*s12)*mt^3*s12^2*s23*s24 + 1/2*denom(1/2*s12)*mt^3*s12^2*s23^2
       + denom(1/2*s12)*mt^3*s12^2*s14*s23 + 1/2*denom(1/2*s12)*mt^3*s12^2*s13
      *s24 + 1/2*denom(1/2*s12)*mt^3*s12^2*s13*s23 - 1/2*denom(1/2*s12)*mt^3*
      mh^2*s12*s23*s24 - 1/2*denom(1/2*s12)*mt^3*mh^2*s12*s23^2 - denom(1/2*
      s12)*mt^3*mh^2*s12*s14*s23 - 1/2*denom(1/2*s12)*mt^3*mh^2*s12*s13*s24 - 
      1/2*denom(1/2*s12)*mt^3*mh^2*s12*s13*s23 - 1/2*denom(1/2*s12)*mt^5*s12*
      s24^2 - 3*denom(1/2*s12)*mt^5*s12*s23*s24 - 5/2*denom(1/2*s12)*mt^5*s12*
      s23^2 - denom(1/2*s12)*mt^5*s12*s14*s24 - 4*denom(1/2*s12)*mt^5*s12*s14*
      s23 - 1/2*denom(1/2*s12)*mt^5*s12*s14^2 - 2*denom(1/2*s12)*mt^5*s12*s13*
      s24 - 3*denom(1/2*s12)*mt^5*s12*s13*s23 - denom(1/2*s12)*mt^5*s12*s13*
      s14 - 1/2*denom(1/2*s12)*mt^5*s12*s13^2 - 1/2*denom(1/2*s12)*mt^5*s12^2*
      s24 - 3/2*denom(1/2*s12)*mt^5*s12^2*s23 - 1/2*denom(1/2*s12)*mt^5*s12^2*
      s14 - 1/2*denom(1/2*s12)*mt^5*s12^2*s13 + 1/2*denom(1/2*s12)*mt^5*mh^2*
      s12*s24 + 3/2*denom(1/2*s12)*mt^5*mh^2*s12*s23 + 1/2*denom(1/2*s12)*mt^5
      *mh^2*s12*s14 + 1/2*denom(1/2*s12)*mt^5*mh^2*s12*s13 + 2*denom(1/2*s12)*
      mt^7*s12*s24 + 4*denom(1/2*s12)*mt^7*s12*s23 + 2*denom(1/2*s12)*mt^7*s12
      *s14 + 2*denom(1/2*s12)*mt^7*s12*s13 + denom(1/2*s12)*mt^7*s12^2 - 
      denom(1/2*s12)*mt^7*mh^2*s12 - 2*denom(1/2*s12)*mt^9*s12 - 1/8*denom(1/4
      *s12^2)*mt*s12*s14^2*s23^3 - 1/4*denom(1/4*s12^2)*mt*s12*s13*s14*s23^2*
      s24 - 1/8*denom(1/4*s12^2)*mt*s12*s13^2*s23*s24^2 + 1/4*denom(1/4*s12^2)
      *mt^3*s12*s14*s23^2*s24 + 1/4*denom(1/4*s12^2)*mt^3*s12*s14*s23^3 + 3/8*
      denom(1/4*s12^2)*mt^3*s12*s14^2*s23^2 + 1/4*denom(1/4*s12^2)*mt^3*s12*
      s13*s23*s24^2 + 1/4*denom(1/4*s12^2)*mt^3*s12*s13*s23^2*s24 + 1/2*denom(
      1/4*s12^2)*mt^3*s12*s13*s14*s23*s24 + 1/4*denom(1/4*s12^2)*mt^3*s12*s13*
      s14*s23^2 + 1/8*denom(1/4*s12^2)*mt^3*s12*s13^2*s24^2 + 1/4*denom(1/4*
      s12^2)*mt^3*s12*s13^2*s23*s24 - 1/8*denom(1/4*s12^2)*mt^5*s12*s23*s24^2
       - 1/4*denom(1/4*s12^2)*mt^5*s12*s23^2*s24 - 1/8*denom(1/4*s12^2)*mt^5*
      s12*s23^3 - 1/2*denom(1/4*s12^2)*mt^5*s12*s14*s23*s24 - denom(1/4*s12^2)
      *mt^5*s12*s14*s23^2 - 3/8*denom(1/4*s12^2)*mt^5*s12*s14^2*s23 - 1/4*
      denom(1/4*s12^2)*mt^5*s12*s13*s24^2 - denom(1/4*s12^2)*mt^5*s12*s13*s23*
      s24 - 1/4*denom(1/4*s12^2)*mt^5*s12*s13*s23^2 - 1/4*denom(1/4*s12^2)*
      mt^5*s12*s13*s14*s24 - 1/2*denom(1/4*s12^2)*mt^5*s12*s13*s14*s23 - 1/4*
      denom(1/4*s12^2)*mt^5*s12*s13^2*s24 - 1/8*denom(1/4*s12^2)*mt^5*s12*
      s13^2*s23 + 1/8*denom(1/4*s12^2)*mt^7*s12*s24^2 + 3/4*denom(1/4*s12^2)*
      mt^7*s12*s23*s24 + 5/8*denom(1/4*s12^2)*mt^7*s12*s23^2 + 1/4*denom(1/4*
      s12^2)*mt^7*s12*s14*s24 + 5/4*denom(1/4*s12^2)*mt^7*s12*s14*s23 + 1/8*
      denom(1/4*s12^2)*mt^7*s12*s14^2 + 3/4*denom(1/4*s12^2)*mt^7*s12*s13*s24
       + 3/4*denom(1/4*s12^2)*mt^7*s12*s13*s23 + 1/4*denom(1/4*s12^2)*mt^7*s12
      *s13*s14 + 1/8*denom(1/4*s12^2)*mt^7*s12*s13^2 - 1/2*denom(1/4*s12^2)*
      mt^9*s12*s24 - denom(1/4*s12^2)*mt^9*s12*s23 - 1/2*denom(1/4*s12^2)*mt^9
      *s12*s14 - 1/2*denom(1/4*s12^2)*mt^9*s12*s13 + 1/2*denom(1/4*s12^2)*
      mt^11*s12;
 
 .sort
id KMatrix(16,10) =  mt^3*s12*s23*s24 + mt^3*s12*s23^2 + mt^3*s12*s14*s23 + 
      mt^3*s12*s13*s23 + mt^3*s12^2*s23 - mt^3*mh^2*s12*s23 - mt^5*s12*s24 - 3
      *mt^5*s12*s23 - mt^5*s12*s14 - mt^5*s12*s13 - mt^5*s12^2 + mt^5*mh^2*s12
       + 2*mt^7*s12 - 1/2*denom(1/2*s12)*mt*s12*s14*s23*s24^2 - 1/2*denom(1/2*
      s12)*mt*s12*s14*s23^2*s24 - 1/2*denom(1/2*s12)*mt*s12*s14^2*s23*s24 - 1/
      2*denom(1/2*s12)*mt*s12*s13*s14*s23*s24 - 1/2*denom(1/2*s12)*mt*s12^2*
      s14*s23*s24 + 1/2*denom(1/2*s12)*mt*mh^2*s12*s14*s23*s24 + 1/2*denom(1/2
      *s12)*mt^3*s12*s23*s24^2 + 1/2*denom(1/2*s12)*mt^3*s12*s23^2*s24 + 1/2*
      denom(1/2*s12)*mt^3*s12*s14*s24^2 + 5/2*denom(1/2*s12)*mt^3*s12*s14*s23*
      s24 + denom(1/2*s12)*mt^3*s12*s14*s23^2 + 1/2*denom(1/2*s12)*mt^3*s12*
      s14^2*s24 + 1/2*denom(1/2*s12)*mt^3*s12*s14^2*s23 + denom(1/2*s12)*mt^3*
      s12*s13*s23*s24 + 1/2*denom(1/2*s12)*mt^3*s12*s13*s14*s24 + 1/2*denom(1/
      2*s12)*mt^3*s12*s13*s14*s23 + 1/2*denom(1/2*s12)*mt^3*s12^2*s23*s24 + 1/
      2*denom(1/2*s12)*mt^3*s12^2*s14*s24 + 1/2*denom(1/2*s12)*mt^3*s12^2*s14*
      s23 - 1/2*denom(1/2*s12)*mt^3*mh^2*s12*s23*s24 - 1/2*denom(1/2*s12)*mt^3
      *mh^2*s12*s14*s24 - 1/2*denom(1/2*s12)*mt^3*mh^2*s12*s14*s23 - 1/2*
      denom(1/2*s12)*mt^5*s12*s24^2 - 5/2*denom(1/2*s12)*mt^5*s12*s23*s24 - 
      denom(1/2*s12)*mt^5*s12*s23^2 - 2*denom(1/2*s12)*mt^5*s12*s14*s24 - 3*
      denom(1/2*s12)*mt^5*s12*s14*s23 - 1/2*denom(1/2*s12)*mt^5*s12*s14^2 - 
      denom(1/2*s12)*mt^5*s12*s13*s24 - denom(1/2*s12)*mt^5*s12*s13*s23 - 1/2*
      denom(1/2*s12)*mt^5*s12*s13*s14 - 1/2*denom(1/2*s12)*mt^5*s12^2*s24 - 1/
      2*denom(1/2*s12)*mt^5*s12^2*s23 - 1/2*denom(1/2*s12)*mt^5*s12^2*s14 + 1/
      2*denom(1/2*s12)*mt^5*mh^2*s12*s24 + 1/2*denom(1/2*s12)*mt^5*mh^2*s12*
      s23 + 1/2*denom(1/2*s12)*mt^5*mh^2*s12*s14 + 2*denom(1/2*s12)*mt^7*s12*
      s24 + 3*denom(1/2*s12)*mt^7*s12*s23 + 2*denom(1/2*s12)*mt^7*s12*s14 + 
      denom(1/2*s12)*mt^7*s12*s13 + 1/2*denom(1/2*s12)*mt^7*s12^2 - 1/2*denom(
      1/2*s12)*mt^7*mh^2*s12 - 2*denom(1/2*s12)*mt^9*s12 - 1/4*denom(1/4*s12^2
      )*mt*s12*s14^2*s23^2*s24 - 1/4*denom(1/4*s12^2)*mt*s12*s13*s14*s23*s24^2
       + 1/4*denom(1/4*s12^2)*mt^3*s12*s14*s23*s24^2 + 1/2*denom(1/4*s12^2)*
      mt^3*s12*s14*s23^2*s24 + 1/2*denom(1/4*s12^2)*mt^3*s12*s14^2*s23*s24 + 1/
      4*denom(1/4*s12^2)*mt^3*s12*s14^2*s23^2 + 1/4*denom(1/4*s12^2)*mt^3*s12*
      s13*s23*s24^2 + 1/4*denom(1/4*s12^2)*mt^3*s12*s13*s14*s24^2 + 1/2*denom(
      1/4*s12^2)*mt^3*s12*s13*s14*s23*s24 - 1/4*denom(1/4*s12^2)*mt^5*s12*s23*
      s24^2 - 1/4*denom(1/4*s12^2)*mt^5*s12*s23^2*s24 - 1/4*denom(1/4*s12^2)*
      mt^5*s12*s14*s24^2 - 3/2*denom(1/4*s12^2)*mt^5*s12*s14*s23*s24 - 1/2*
      denom(1/4*s12^2)*mt^5*s12*s14*s23^2 - 1/4*denom(1/4*s12^2)*mt^5*s12*
      s14^2*s24 - 1/2*denom(1/4*s12^2)*mt^5*s12*s14^2*s23 - 1/4*denom(1/4*
      s12^2)*mt^5*s12*s13*s24^2 - 1/2*denom(1/4*s12^2)*mt^5*s12*s13*s23*s24 - 
      1/2*denom(1/4*s12^2)*mt^5*s12*s13*s14*s24 - 1/4*denom(1/4*s12^2)*mt^5*
      s12*s13*s14*s23 + 1/4*denom(1/4*s12^2)*mt^7*s12*s24^2 + denom(1/4*s12^2)
      *mt^7*s12*s23*s24 + 1/4*denom(1/4*s12^2)*mt^7*s12*s23^2 + denom(1/4*
      s12^2)*mt^7*s12*s14*s24 + 5/4*denom(1/4*s12^2)*mt^7*s12*s14*s23 + 1/4*
      denom(1/4*s12^2)*mt^7*s12*s14^2 + 1/2*denom(1/4*s12^2)*mt^7*s12*s13*s24
       + 1/4*denom(1/4*s12^2)*mt^7*s12*s13*s23 + 1/4*denom(1/4*s12^2)*mt^7*s12
      *s13*s14 - 3/4*denom(1/4*s12^2)*mt^9*s12*s24 - 3/4*denom(1/4*s12^2)*mt^9
      *s12*s23 - 3/4*denom(1/4*s12^2)*mt^9*s12*s14 - 1/4*denom(1/4*s12^2)*mt^9
      *s12*s13 + 1/2*denom(1/4*s12^2)*mt^11*s12;
 
 .sort
id KMatrix(16,11) =  mt^3*s12*s23*s24 + mt^3*s12*s23^2 + mt^3*s12*s14*s23 + 
      mt^3*s12*s13*s23 + mt^3*s12^2*s23 - mt^3*mh^2*s12*s23 - mt^5*s12*s24 - 3
      *mt^5*s12*s23 - mt^5*s12*s14 - mt^5*s12*s13 - mt^5*s12^2 + mt^5*mh^2*s12
       + 2*mt^7*s12 - 1/2*denom(1/2*s12)*mt*s12*s14*s23*s24^2 - 1/2*denom(1/2*
      s12)*mt*s12*s14*s23^2*s24 - 1/2*denom(1/2*s12)*mt*s12*s14^2*s23*s24 - 1/
      2*denom(1/2*s12)*mt*s12*s13*s14*s23*s24 - 1/2*denom(1/2*s12)*mt*s12^2*
      s14*s23*s24 + 1/2*denom(1/2*s12)*mt*mh^2*s12*s14*s23*s24 + 1/2*denom(1/2
      *s12)*mt^3*s12*s23*s24^2 + 1/2*denom(1/2*s12)*mt^3*s12*s23^2*s24 + 1/2*
      denom(1/2*s12)*mt^3*s12*s14*s24^2 + 5/2*denom(1/2*s12)*mt^3*s12*s14*s23*
      s24 + denom(1/2*s12)*mt^3*s12*s14*s23^2 + 1/2*denom(1/2*s12)*mt^3*s12*
      s14^2*s24 + 1/2*denom(1/2*s12)*mt^3*s12*s14^2*s23 + denom(1/2*s12)*mt^3*
      s12*s13*s23*s24 + 1/2*denom(1/2*s12)*mt^3*s12*s13*s14*s24 + 1/2*denom(1/
      2*s12)*mt^3*s12*s13*s14*s23 + 1/2*denom(1/2*s12)*mt^3*s12^2*s23*s24 + 1/
      2*denom(1/2*s12)*mt^3*s12^2*s14*s24 + 1/2*denom(1/2*s12)*mt^3*s12^2*s14*
      s23 - 1/2*denom(1/2*s12)*mt^3*mh^2*s12*s23*s24 - 1/2*denom(1/2*s12)*mt^3
      *mh^2*s12*s14*s24 - 1/2*denom(1/2*s12)*mt^3*mh^2*s12*s14*s23 - 1/2*
      denom(1/2*s12)*mt^5*s12*s24^2 - 5/2*denom(1/2*s12)*mt^5*s12*s23*s24 - 
      denom(1/2*s12)*mt^5*s12*s23^2 - 2*denom(1/2*s12)*mt^5*s12*s14*s24 - 3*
      denom(1/2*s12)*mt^5*s12*s14*s23 - 1/2*denom(1/2*s12)*mt^5*s12*s14^2 - 
      denom(1/2*s12)*mt^5*s12*s13*s24 - denom(1/2*s12)*mt^5*s12*s13*s23 - 1/2*
      denom(1/2*s12)*mt^5*s12*s13*s14 - 1/2*denom(1/2*s12)*mt^5*s12^2*s24 - 1/
      2*denom(1/2*s12)*mt^5*s12^2*s23 - 1/2*denom(1/2*s12)*mt^5*s12^2*s14 + 1/
      2*denom(1/2*s12)*mt^5*mh^2*s12*s24 + 1/2*denom(1/2*s12)*mt^5*mh^2*s12*
      s23 + 1/2*denom(1/2*s12)*mt^5*mh^2*s12*s14 + 2*denom(1/2*s12)*mt^7*s12*
      s24 + 3*denom(1/2*s12)*mt^7*s12*s23 + 2*denom(1/2*s12)*mt^7*s12*s14 + 
      denom(1/2*s12)*mt^7*s12*s13 + 1/2*denom(1/2*s12)*mt^7*s12^2 - 1/2*denom(
      1/2*s12)*mt^7*mh^2*s12 - 2*denom(1/2*s12)*mt^9*s12 - 1/4*denom(1/4*s12^2
      )*mt*s12*s14^2*s23^2*s24 - 1/4*denom(1/4*s12^2)*mt*s12*s13*s14*s23*s24^2
       + 1/4*denom(1/4*s12^2)*mt^3*s12*s14*s23*s24^2 + 1/2*denom(1/4*s12^2)*
      mt^3*s12*s14*s23^2*s24 + 1/2*denom(1/4*s12^2)*mt^3*s12*s14^2*s23*s24 + 1/
      4*denom(1/4*s12^2)*mt^3*s12*s14^2*s23^2 + 1/4*denom(1/4*s12^2)*mt^3*s12*
      s13*s23*s24^2 + 1/4*denom(1/4*s12^2)*mt^3*s12*s13*s14*s24^2 + 1/2*denom(
      1/4*s12^2)*mt^3*s12*s13*s14*s23*s24 - 1/4*denom(1/4*s12^2)*mt^5*s12*s23*
      s24^2 - 1/4*denom(1/4*s12^2)*mt^5*s12*s23^2*s24 - 1/4*denom(1/4*s12^2)*
      mt^5*s12*s14*s24^2 - 3/2*denom(1/4*s12^2)*mt^5*s12*s14*s23*s24 - 1/2*
      denom(1/4*s12^2)*mt^5*s12*s14*s23^2 - 1/4*denom(1/4*s12^2)*mt^5*s12*
      s14^2*s24 - 1/2*denom(1/4*s12^2)*mt^5*s12*s14^2*s23 - 1/4*denom(1/4*
      s12^2)*mt^5*s12*s13*s24^2 - 1/2*denom(1/4*s12^2)*mt^5*s12*s13*s23*s24 - 
      1/2*denom(1/4*s12^2)*mt^5*s12*s13*s14*s24 - 1/4*denom(1/4*s12^2)*mt^5*
      s12*s13*s14*s23 + 1/4*denom(1/4*s12^2)*mt^7*s12*s24^2 + denom(1/4*s12^2)
      *mt^7*s12*s23*s24 + 1/4*denom(1/4*s12^2)*mt^7*s12*s23^2 + denom(1/4*
      s12^2)*mt^7*s12*s14*s24 + 5/4*denom(1/4*s12^2)*mt^7*s12*s14*s23 + 1/4*
      denom(1/4*s12^2)*mt^7*s12*s14^2 + 1/2*denom(1/4*s12^2)*mt^7*s12*s13*s24
       + 1/4*denom(1/4*s12^2)*mt^7*s12*s13*s23 + 1/4*denom(1/4*s12^2)*mt^7*s12
      *s13*s14 - 3/4*denom(1/4*s12^2)*mt^9*s12*s24 - 3/4*denom(1/4*s12^2)*mt^9
      *s12*s23 - 3/4*denom(1/4*s12^2)*mt^9*s12*s14 - 1/4*denom(1/4*s12^2)*mt^9
      *s12*s13 + 1/2*denom(1/4*s12^2)*mt^11*s12;
 
 .sort
id KMatrix(16,12) =   - 2*mt^5*s12*s23 + 2*mt^7*s12 + 2*denom(1/2*s12)*mt^3*
      s12*s14*s23*s24 - 2*denom(1/2*s12)*mt^5*s12*s23*s24 - 2*denom(1/2*s12)*
      mt^5*s12*s14*s24 - 2*denom(1/2*s12)*mt^5*s12*s14*s23 + 2*denom(1/2*s12)*
      mt^7*s12*s24 + 2*denom(1/2*s12)*mt^7*s12*s23 + 2*denom(1/2*s12)*mt^7*s12
      *s14 - 2*denom(1/2*s12)*mt^9*s12 - 1/2*denom(1/4*s12^2)*mt*s12*s14^2*s23
      *s24^2 + denom(1/4*s12^2)*mt^3*s12*s14*s23*s24^2 + 1/2*denom(1/4*s12^2)*
      mt^3*s12*s14^2*s24^2 + denom(1/4*s12^2)*mt^3*s12*s14^2*s23*s24 - 1/2*
      denom(1/4*s12^2)*mt^5*s12*s23*s24^2 - denom(1/4*s12^2)*mt^5*s12*s14*
      s24^2 - 2*denom(1/4*s12^2)*mt^5*s12*s14*s23*s24 - denom(1/4*s12^2)*mt^5*
      s12*s14^2*s24 - 1/2*denom(1/4*s12^2)*mt^5*s12*s14^2*s23 + 1/2*denom(1/4*
      s12^2)*mt^7*s12*s24^2 + denom(1/4*s12^2)*mt^7*s12*s23*s24 + 2*denom(1/4*
      s12^2)*mt^7*s12*s14*s24 + denom(1/4*s12^2)*mt^7*s12*s14*s23 + 1/2*denom(
      1/4*s12^2)*mt^7*s12*s14^2 - denom(1/4*s12^2)*mt^9*s12*s24 - 1/2*denom(1/
      4*s12^2)*mt^9*s12*s23 - denom(1/4*s12^2)*mt^9*s12*s14 + 1/2*denom(1/4*
      s12^2)*mt^11*s12;
 
 .sort
id KMatrix(16,13) =  1/2*s12*s14*s23*s24^2 + s12*s14*s23^2*s24 + 1/2*s12*s14*
      s23^3 + s12*s14^2*s23*s24 + s12*s14^2*s23^2 + 1/2*s12*s14^3*s23 + s12*
      s13*s14*s23*s24 + s12*s13*s14*s23^2 + s12*s13*s14^2*s23 + 1/2*s12*s13^2*
      s14*s23 + s12^2*s14*s23*s24 + s12^2*s14*s23^2 + s12^2*s14^2*s23 + s12^2*
      s13*s14*s23 + 1/2*s12^3*s14*s23 - mh^2*s12*s14*s23*s24 - mh^2*s12*s14*
      s23^2 - mh^2*s12*s14^2*s23 - mh^2*s12*s13*s14*s23 - mh^2*s12^2*s14*s23
       + 1/2*mh^4*s12*s14*s23 - 1/2*mt^2*s12*s23*s24^2 - mt^2*s12*s23^2*s24 - 
      1/2*mt^2*s12*s23^3 - 1/2*mt^2*s12*s14*s24^2 - 4*mt^2*s12*s14*s23*s24 - 7/
      2*mt^2*s12*s14*s23^2 - mt^2*s12*s14^2*s24 - 7/2*mt^2*s12*s14^2*s23 - 1/2
      *mt^2*s12*s14^3 - mt^2*s12*s13*s23*s24 - mt^2*s12*s13*s23^2 - mt^2*s12*
      s13*s14*s24 - 4*mt^2*s12*s13*s14*s23 - mt^2*s12*s13*s14^2 - 1/2*mt^2*s12
      *s13^2*s23 - 1/2*mt^2*s12*s13^2*s14 - mt^2*s12^2*s23*s24 - mt^2*s12^2*
      s23^2 - mt^2*s12^2*s14*s24 - 4*mt^2*s12^2*s14*s23 - mt^2*s12^2*s14^2 - 
      mt^2*s12^2*s13*s23 - mt^2*s12^2*s13*s14 - 1/2*mt^2*s12^3*s23 - 1/2*mt^2*
      s12^3*s14 + mt^2*mh^2*s12*s23*s24 + mt^2*mh^2*s12*s23^2 + mt^2*mh^2*s12*
      s14*s24 + 4*mt^2*mh^2*s12*s14*s23 + mt^2*mh^2*s12*s14^2 + mt^2*mh^2*s12*
      s13*s23 + mt^2*mh^2*s12*s13*s14 + mt^2*mh^2*s12^2*s23 + mt^2*mh^2*s12^2*
      s14 - 1/2*mt^2*mh^4*s12*s23 - 1/2*mt^2*mh^4*s12*s14 + 1/2*mt^4*s12*s24^2
       + 3*mt^4*s12*s23*s24 + 5/2*mt^4*s12*s23^2 + 3*mt^4*s12*s14*s24 + 7*mt^4
      *s12*s14*s23 + 5/2*mt^4*s12*s14^2 + mt^4*s12*s13*s24 + 3*mt^4*s12*s13*
      s23 + 3*mt^4*s12*s13*s14 + 1/2*mt^4*s12*s13^2 + mt^4*s12^2*s24 + 3*mt^4*
      s12^2*s23 + 3*mt^4*s12^2*s14 + mt^4*s12^2*s13 + 1/2*mt^4*s12^3 - mt^4*
      mh^2*s12*s24 - 3*mt^4*mh^2*s12*s23 - 3*mt^4*mh^2*s12*s14 - mt^4*mh^2*s12
      *s13 - mt^4*mh^2*s12^2 + 1/2*mt^4*mh^4*s12 - 2*mt^6*s12*s24 - 4*mt^6*s12
      *s23 - 4*mt^6*s12*s14 - 2*mt^6*s12*s13 - 2*mt^6*s12^2 + 2*mt^6*mh^2*s12
       + 2*mt^8*s12 + 1/2*denom(1/2*s12)*s12*s14^2*s23^2*s24 + 1/2*denom(1/2*
      s12)*s12*s14^2*s23^3 + 1/2*denom(1/2*s12)*s12*s14^3*s23^2 + 1/2*denom(1/
      2*s12)*s12*s13*s14*s23*s24^2 + 1/2*denom(1/2*s12)*s12*s13*s14*s23^2*s24
       + 1/2*denom(1/2*s12)*s12*s13*s14^2*s23*s24 + 1/2*denom(1/2*s12)*s12*s13
      *s14^2*s23^2 + 1/2*denom(1/2*s12)*s12*s13^2*s14*s23*s24 + 1/2*denom(1/2*
      s12)*s12^2*s14^2*s23^2 + 1/2*denom(1/2*s12)*s12^2*s13*s14*s23*s24 - 1/2*
      denom(1/2*s12)*mh^2*s12*s14^2*s23^2 - 1/2*denom(1/2*s12)*mh^2*s12*s13*
      s14*s23*s24 - 1/2*denom(1/2*s12)*mt^2*s12*s14*s23*s24^2 - 3/2*denom(1/2*
      s12)*mt^2*s12*s14*s23^2*s24 - denom(1/2*s12)*mt^2*s12*s14*s23^3 - 3/2*
      denom(1/2*s12)*mt^2*s12*s14^2*s23*s24 - 3*denom(1/2*s12)*mt^2*s12*s14^2*
      s23^2 - denom(1/2*s12)*mt^2*s12*s14^3*s23 - 1/2*denom(1/2*s12)*mt^2*s12*
      s13*s23*s24^2 - 1/2*denom(1/2*s12)*mt^2*s12*s13*s23^2*s24 - 1/2*denom(1/
      2*s12)*mt^2*s12*s13*s14*s24^2 - 3*denom(1/2*s12)*mt^2*s12*s13*s14*s23*
      s24 - 3/2*denom(1/2*s12)*mt^2*s12*s13*s14*s23^2 - 1/2*denom(1/2*s12)*
      mt^2*s12*s13*s14^2*s24 - 3/2*denom(1/2*s12)*mt^2*s12*s13*s14^2*s23 - 1/2
      *denom(1/2*s12)*mt^2*s12*s13^2*s23*s24 - 1/2*denom(1/2*s12)*mt^2*s12*
      s13^2*s14*s24 - 1/2*denom(1/2*s12)*mt^2*s12*s13^2*s14*s23 - 1/2*denom(1/
      2*s12)*mt^2*s12^2*s14*s23*s24 - denom(1/2*s12)*mt^2*s12^2*s14*s23^2 - 
      denom(1/2*s12)*mt^2*s12^2*s14^2*s23 - 1/2*denom(1/2*s12)*mt^2*s12^2*s13*
      s23*s24 - 1/2*denom(1/2*s12)*mt^2*s12^2*s13*s14*s24 - 1/2*denom(1/2*s12)
      *mt^2*s12^2*s13*s14*s23 + 1/2*denom(1/2*s12)*mt^2*mh^2*s12*s14*s23*s24
       + denom(1/2*s12)*mt^2*mh^2*s12*s14*s23^2 + denom(1/2*s12)*mt^2*mh^2*s12
      *s14^2*s23 + 1/2*denom(1/2*s12)*mt^2*mh^2*s12*s13*s23*s24 + 1/2*denom(1/
      2*s12)*mt^2*mh^2*s12*s13*s14*s24 + 1/2*denom(1/2*s12)*mt^2*mh^2*s12*s13*
      s14*s23 + 1/2*denom(1/2*s12)*mt^4*s12*s23*s24^2 + denom(1/2*s12)*mt^4*
      s12*s23^2*s24 + 1/2*denom(1/2*s12)*mt^4*s12*s23^3 + 1/2*denom(1/2*s12)*
      mt^4*s12*s14*s24^2 + 9/2*denom(1/2*s12)*mt^4*s12*s14*s23*s24 + 5*denom(1/
      2*s12)*mt^4*s12*s14*s23^2 + denom(1/2*s12)*mt^4*s12*s14^2*s24 + 5*denom(
      1/2*s12)*mt^4*s12*s14^2*s23 + 1/2*denom(1/2*s12)*mt^4*s12*s14^3 + 1/2*
      denom(1/2*s12)*mt^4*s12*s13*s24^2 + 5/2*denom(1/2*s12)*mt^4*s12*s13*s23*
      s24 + denom(1/2*s12)*mt^4*s12*s13*s23^2 + 5/2*denom(1/2*s12)*mt^4*s12*
      s13*s14*s24 + 9/2*denom(1/2*s12)*mt^4*s12*s13*s14*s23 + denom(1/2*s12)*
      mt^4*s12*s13*s14^2 + 1/2*denom(1/2*s12)*mt^4*s12*s13^2*s24 + 1/2*denom(1/
      2*s12)*mt^4*s12*s13^2*s23 + 1/2*denom(1/2*s12)*mt^4*s12*s13^2*s14 + 1/2*
      denom(1/2*s12)*mt^4*s12^2*s23*s24 + 1/2*denom(1/2*s12)*mt^4*s12^2*s23^2
       + 1/2*denom(1/2*s12)*mt^4*s12^2*s14*s24 + 5/2*denom(1/2*s12)*mt^4*s12^2
      *s14*s23 + 1/2*denom(1/2*s12)*mt^4*s12^2*s14^2 + 1/2*denom(1/2*s12)*mt^4
      *s12^2*s13*s24 + 1/2*denom(1/2*s12)*mt^4*s12^2*s13*s23 + 1/2*denom(1/2*
      s12)*mt^4*s12^2*s13*s14 - 1/2*denom(1/2*s12)*mt^4*mh^2*s12*s23*s24 - 1/2
      *denom(1/2*s12)*mt^4*mh^2*s12*s23^2 - 1/2*denom(1/2*s12)*mt^4*mh^2*s12*
      s14*s24 - 5/2*denom(1/2*s12)*mt^4*mh^2*s12*s14*s23 - 1/2*denom(1/2*s12)*
      mt^4*mh^2*s12*s14^2 - 1/2*denom(1/2*s12)*mt^4*mh^2*s12*s13*s24 - 1/2*
      denom(1/2*s12)*mt^4*mh^2*s12*s13*s23 - 1/2*denom(1/2*s12)*mt^4*mh^2*s12*
      s13*s14 - 1/2*denom(1/2*s12)*mt^6*s12*s24^2 - 3*denom(1/2*s12)*mt^6*s12*
      s23*s24 - 5/2*denom(1/2*s12)*mt^6*s12*s23^2 - 3*denom(1/2*s12)*mt^6*s12*
      s14*s24 - 8*denom(1/2*s12)*mt^6*s12*s14*s23 - 5/2*denom(1/2*s12)*mt^6*
      s12*s14^2 - 2*denom(1/2*s12)*mt^6*s12*s13*s24 - 3*denom(1/2*s12)*mt^6*
      s12*s13*s23 - 3*denom(1/2*s12)*mt^6*s12*s13*s14 - 1/2*denom(1/2*s12)*
      mt^6*s12*s13^2 - 1/2*denom(1/2*s12)*mt^6*s12^2*s24 - 3/2*denom(1/2*s12)*
      mt^6*s12^2*s23 - 3/2*denom(1/2*s12)*mt^6*s12^2*s14 - 1/2*denom(1/2*s12)*
      mt^6*s12^2*s13 + 1/2*denom(1/2*s12)*mt^6*mh^2*s12*s24 + 3/2*denom(1/2*
      s12)*mt^6*mh^2*s12*s23 + 3/2*denom(1/2*s12)*mt^6*mh^2*s12*s14 + 1/2*
      denom(1/2*s12)*mt^6*mh^2*s12*s13 + 2*denom(1/2*s12)*mt^8*s12*s24 + 4*
      denom(1/2*s12)*mt^8*s12*s23 + 4*denom(1/2*s12)*mt^8*s12*s14 + 2*denom(1/
      2*s12)*mt^8*s12*s13 + denom(1/2*s12)*mt^8*s12^2 - denom(1/2*s12)*mt^8*
      mh^2*s12 - 2*denom(1/2*s12)*mt^10*s12 + 1/8*denom(1/4*s12^2)*s12*s14^3*
      s23^3 + 1/4*denom(1/4*s12^2)*s12*s13*s14^2*s23^2*s24 + 1/8*denom(1/4*
      s12^2)*s12*s13^2*s14*s23*s24^2 - 1/4*denom(1/4*s12^2)*mt^2*s12*s14^2*
      s23^2*s24 - 3/8*denom(1/4*s12^2)*mt^2*s12*s14^2*s23^3 - 3/8*denom(1/4*
      s12^2)*mt^2*s12*s14^3*s23^2 - 1/4*denom(1/4*s12^2)*mt^2*s12*s13*s14*s23*
      s24^2 - 1/2*denom(1/4*s12^2)*mt^2*s12*s13*s14*s23^2*s24 - 1/2*denom(1/4*
      s12^2)*mt^2*s12*s13*s14^2*s23*s24 - 1/4*denom(1/4*s12^2)*mt^2*s12*s13*
      s14^2*s23^2 - 1/8*denom(1/4*s12^2)*mt^2*s12*s13^2*s23*s24^2 - 1/8*denom(
      1/4*s12^2)*mt^2*s12*s13^2*s14*s24^2 - 1/4*denom(1/4*s12^2)*mt^2*s12*
      s13^2*s14*s23*s24 + 1/8*denom(1/4*s12^2)*mt^4*s12*s14*s23*s24^2 + 1/2*
      denom(1/4*s12^2)*mt^4*s12*s14*s23^2*s24 + 3/8*denom(1/4*s12^2)*mt^4*s12*
      s14*s23^3 + 1/2*denom(1/4*s12^2)*mt^4*s12*s14^2*s23*s24 + 11/8*denom(1/4
      *s12^2)*mt^4*s12*s14^2*s23^2 + 3/8*denom(1/4*s12^2)*mt^4*s12*s14^3*s23
       + 1/4*denom(1/4*s12^2)*mt^4*s12*s13*s23*s24^2 + 1/4*denom(1/4*s12^2)*
      mt^4*s12*s13*s23^2*s24 + 1/4*denom(1/4*s12^2)*mt^4*s12*s13*s14*s24^2 + 3/
      2*denom(1/4*s12^2)*mt^4*s12*s13*s14*s23*s24 + 1/2*denom(1/4*s12^2)*mt^4*
      s12*s13*s14*s23^2 + 1/4*denom(1/4*s12^2)*mt^4*s12*s13*s14^2*s24 + 1/2*
      denom(1/4*s12^2)*mt^4*s12*s13*s14^2*s23 + 1/8*denom(1/4*s12^2)*mt^4*s12*
      s13^2*s24^2 + 1/4*denom(1/4*s12^2)*mt^4*s12*s13^2*s23*s24 + 1/4*denom(1/
      4*s12^2)*mt^4*s12*s13^2*s14*s24 + 1/8*denom(1/4*s12^2)*mt^4*s12*s13^2*
      s14*s23 - 1/8*denom(1/4*s12^2)*mt^6*s12*s23*s24^2 - 1/4*denom(1/4*s12^2)
      *mt^6*s12*s23^2*s24 - 1/8*denom(1/4*s12^2)*mt^6*s12*s23^3 - 1/8*denom(1/
      4*s12^2)*mt^6*s12*s14*s24^2 - 5/4*denom(1/4*s12^2)*mt^6*s12*s14*s23*s24
       - 13/8*denom(1/4*s12^2)*mt^6*s12*s14*s23^2 - 1/4*denom(1/4*s12^2)*mt^6*
      s12*s14^2*s24 - 13/8*denom(1/4*s12^2)*mt^6*s12*s14^2*s23 - 1/8*denom(1/4
      *s12^2)*mt^6*s12*s14^3 - 1/4*denom(1/4*s12^2)*mt^6*s12*s13*s24^2 - 
      denom(1/4*s12^2)*mt^6*s12*s13*s23*s24 - 1/4*denom(1/4*s12^2)*mt^6*s12*
      s13*s23^2 - denom(1/4*s12^2)*mt^6*s12*s13*s14*s24 - 5/4*denom(1/4*s12^2)
      *mt^6*s12*s13*s14*s23 - 1/4*denom(1/4*s12^2)*mt^6*s12*s13*s14^2 - 1/4*
      denom(1/4*s12^2)*mt^6*s12*s13^2*s24 - 1/8*denom(1/4*s12^2)*mt^6*s12*
      s13^2*s23 - 1/8*denom(1/4*s12^2)*mt^6*s12*s13^2*s14 + 1/8*denom(1/4*
      s12^2)*mt^8*s12*s24^2 + 3/4*denom(1/4*s12^2)*mt^8*s12*s23*s24 + 5/8*
      denom(1/4*s12^2)*mt^8*s12*s23^2 + 3/4*denom(1/4*s12^2)*mt^8*s12*s14*s24
       + 9/4*denom(1/4*s12^2)*mt^8*s12*s14*s23 + 5/8*denom(1/4*s12^2)*mt^8*s12
      *s14^2 + 3/4*denom(1/4*s12^2)*mt^8*s12*s13*s24 + 3/4*denom(1/4*s12^2)*
      mt^8*s12*s13*s23 + 3/4*denom(1/4*s12^2)*mt^8*s12*s13*s14 + 1/8*denom(1/4
      *s12^2)*mt^8*s12*s13^2 - 1/2*denom(1/4*s12^2)*mt^10*s12*s24 - denom(1/4*
      s12^2)*mt^10*s12*s23 - denom(1/4*s12^2)*mt^10*s12*s14 - 1/2*denom(1/4*
      s12^2)*mt^10*s12*s13 + 1/2*denom(1/4*s12^2)*mt^12*s12;
 
 .sort
id KMatrix(16,14) =   - mt^2*s12*s14*s23*s24 - mt^2*s12*s14*s23^2 - mt^2*s12*
      s14^2*s23 - mt^2*s12*s13*s14*s23 - mt^2*s12^2*s14*s23 + mt^2*mh^2*s12*
      s14*s23 + mt^4*s12*s23*s24 + mt^4*s12*s23^2 + mt^4*s12*s14*s24 + 4*mt^4*
      s12*s14*s23 + mt^4*s12*s14^2 + mt^4*s12*s13*s23 + mt^4*s12*s13*s14 + 
      mt^4*s12^2*s23 + mt^4*s12^2*s14 - mt^4*mh^2*s12*s23 - mt^4*mh^2*s12*s14
       - mt^6*s12*s24 - 3*mt^6*s12*s23 - 3*mt^6*s12*s14 - mt^6*s12*s13 - mt^6*
      s12^2 + mt^6*mh^2*s12 + 2*mt^8*s12 + 1/2*denom(1/2*s12)*s12*s14^2*s23*
      s24^2 + 1/2*denom(1/2*s12)*s12*s14^2*s23^2*s24 + 1/2*denom(1/2*s12)*s12*
      s14^3*s23*s24 + 1/2*denom(1/2*s12)*s12*s13*s14^2*s23*s24 + 1/2*denom(1/2
      *s12)*s12^2*s14^2*s23*s24 - 1/2*denom(1/2*s12)*mh^2*s12*s14^2*s23*s24 - 
      denom(1/2*s12)*mt^2*s12*s14*s23*s24^2 - denom(1/2*s12)*mt^2*s12*s14*
      s23^2*s24 - 1/2*denom(1/2*s12)*mt^2*s12*s14^2*s24^2 - 3*denom(1/2*s12)*
      mt^2*s12*s14^2*s23*s24 - denom(1/2*s12)*mt^2*s12*s14^2*s23^2 - 1/2*
      denom(1/2*s12)*mt^2*s12*s14^3*s24 - 1/2*denom(1/2*s12)*mt^2*s12*s14^3*
      s23 - 3/2*denom(1/2*s12)*mt^2*s12*s13*s14*s23*s24 - 1/2*denom(1/2*s12)*
      mt^2*s12*s13*s14^2*s24 - 1/2*denom(1/2*s12)*mt^2*s12*s13*s14^2*s23 - 
      denom(1/2*s12)*mt^2*s12^2*s14*s23*s24 - 1/2*denom(1/2*s12)*mt^2*s12^2*
      s14^2*s24 - 1/2*denom(1/2*s12)*mt^2*s12^2*s14^2*s23 + denom(1/2*s12)*
      mt^2*mh^2*s12*s14*s23*s24 + 1/2*denom(1/2*s12)*mt^2*mh^2*s12*s14^2*s24
       + 1/2*denom(1/2*s12)*mt^2*mh^2*s12*s14^2*s23 + 1/2*denom(1/2*s12)*mt^4*
      s12*s23*s24^2 + 1/2*denom(1/2*s12)*mt^4*s12*s23^2*s24 + denom(1/2*s12)*
      mt^4*s12*s14*s24^2 + 5*denom(1/2*s12)*mt^4*s12*s14*s23*s24 + 2*denom(1/2
      *s12)*mt^4*s12*s14*s23^2 + 5/2*denom(1/2*s12)*mt^4*s12*s14^2*s24 + 7/2*
      denom(1/2*s12)*mt^4*s12*s14^2*s23 + 1/2*denom(1/2*s12)*mt^4*s12*s14^3 + 
      denom(1/2*s12)*mt^4*s12*s13*s23*s24 + 3/2*denom(1/2*s12)*mt^4*s12*s13*
      s14*s24 + 3/2*denom(1/2*s12)*mt^4*s12*s13*s14*s23 + 1/2*denom(1/2*s12)*
      mt^4*s12*s13*s14^2 + 1/2*denom(1/2*s12)*mt^4*s12^2*s23*s24 + denom(1/2*
      s12)*mt^4*s12^2*s14*s24 + denom(1/2*s12)*mt^4*s12^2*s14*s23 + 1/2*denom(
      1/2*s12)*mt^4*s12^2*s14^2 - 1/2*denom(1/2*s12)*mt^4*mh^2*s12*s23*s24 - 
      denom(1/2*s12)*mt^4*mh^2*s12*s14*s24 - denom(1/2*s12)*mt^4*mh^2*s12*s14*
      s23 - 1/2*denom(1/2*s12)*mt^4*mh^2*s12*s14^2 - 1/2*denom(1/2*s12)*mt^6*
      s12*s24^2 - 5/2*denom(1/2*s12)*mt^6*s12*s23*s24 - denom(1/2*s12)*mt^6*
      s12*s23^2 - 4*denom(1/2*s12)*mt^6*s12*s14*s24 - 6*denom(1/2*s12)*mt^6*
      s12*s14*s23 - 5/2*denom(1/2*s12)*mt^6*s12*s14^2 - denom(1/2*s12)*mt^6*
      s12*s13*s24 - denom(1/2*s12)*mt^6*s12*s13*s23 - 3/2*denom(1/2*s12)*mt^6*
      s12*s13*s14 - 1/2*denom(1/2*s12)*mt^6*s12^2*s24 - 1/2*denom(1/2*s12)*
      mt^6*s12^2*s23 - denom(1/2*s12)*mt^6*s12^2*s14 + 1/2*denom(1/2*s12)*mt^6
      *mh^2*s12*s24 + 1/2*denom(1/2*s12)*mt^6*mh^2*s12*s23 + denom(1/2*s12)*
      mt^6*mh^2*s12*s14 + 2*denom(1/2*s12)*mt^8*s12*s24 + 3*denom(1/2*s12)*
      mt^8*s12*s23 + 4*denom(1/2*s12)*mt^8*s12*s14 + denom(1/2*s12)*mt^8*s12*
      s13 + 1/2*denom(1/2*s12)*mt^8*s12^2 - 1/2*denom(1/2*s12)*mt^8*mh^2*s12
       - 2*denom(1/2*s12)*mt^10*s12 + 1/4*denom(1/4*s12^2)*s12*s14^3*s23^2*s24
       + 1/4*denom(1/4*s12^2)*s12*s13*s14^2*s23*s24^2 - 1/4*denom(1/4*s12^2)*
      mt^2*s12*s14^2*s23*s24^2 - 3/4*denom(1/4*s12^2)*mt^2*s12*s14^2*s23^2*s24
       - 1/2*denom(1/4*s12^2)*mt^2*s12*s14^3*s23*s24 - 1/4*denom(1/4*s12^2)*
      mt^2*s12*s14^3*s23^2 - 1/2*denom(1/4*s12^2)*mt^2*s12*s13*s14*s23*s24^2
       - 1/4*denom(1/4*s12^2)*mt^2*s12*s13*s14^2*s24^2 - 1/2*denom(1/4*s12^2)*
      mt^2*s12*s13*s14^2*s23*s24 + 1/2*denom(1/4*s12^2)*mt^4*s12*s14*s23*s24^2
       + 3/4*denom(1/4*s12^2)*mt^4*s12*s14*s23^2*s24 + 1/4*denom(1/4*s12^2)*
      mt^4*s12*s14^2*s24^2 + 2*denom(1/4*s12^2)*mt^4*s12*s14^2*s23*s24 + 3/4*
      denom(1/4*s12^2)*mt^4*s12*s14^2*s23^2 + 1/4*denom(1/4*s12^2)*mt^4*s12*
      s14^3*s24 + 1/2*denom(1/4*s12^2)*mt^4*s12*s14^3*s23 + 1/4*denom(1/4*
      s12^2)*mt^4*s12*s13*s23*s24^2 + 1/2*denom(1/4*s12^2)*mt^4*s12*s13*s14*
      s24^2 + denom(1/4*s12^2)*mt^4*s12*s13*s14*s23*s24 + 1/2*denom(1/4*s12^2)
      *mt^4*s12*s13*s14^2*s24 + 1/4*denom(1/4*s12^2)*mt^4*s12*s13*s14^2*s23 - 
      1/4*denom(1/4*s12^2)*mt^6*s12*s23*s24^2 - 1/4*denom(1/4*s12^2)*mt^6*s12*
      s23^2*s24 - 1/2*denom(1/4*s12^2)*mt^6*s12*s14*s24^2 - 5/2*denom(1/4*
      s12^2)*mt^6*s12*s14*s23*s24 - 3/4*denom(1/4*s12^2)*mt^6*s12*s14*s23^2 - 
      5/4*denom(1/4*s12^2)*mt^6*s12*s14^2*s24 - 7/4*denom(1/4*s12^2)*mt^6*s12*
      s14^2*s23 - 1/4*denom(1/4*s12^2)*mt^6*s12*s14^3 - 1/4*denom(1/4*s12^2)*
      mt^6*s12*s13*s24^2 - 1/2*denom(1/4*s12^2)*mt^6*s12*s13*s23*s24 - denom(1/
      4*s12^2)*mt^6*s12*s13*s14*s24 - 1/2*denom(1/4*s12^2)*mt^6*s12*s13*s14*
      s23 - 1/4*denom(1/4*s12^2)*mt^6*s12*s13*s14^2 + 1/4*denom(1/4*s12^2)*
      mt^8*s12*s24^2 + denom(1/4*s12^2)*mt^8*s12*s23*s24 + 1/4*denom(1/4*s12^2
      )*mt^8*s12*s23^2 + 7/4*denom(1/4*s12^2)*mt^8*s12*s14*s24 + 2*denom(1/4*
      s12^2)*mt^8*s12*s14*s23 + denom(1/4*s12^2)*mt^8*s12*s14^2 + 1/2*denom(1/
      4*s12^2)*mt^8*s12*s13*s24 + 1/4*denom(1/4*s12^2)*mt^8*s12*s13*s23 + 1/2*
      denom(1/4*s12^2)*mt^8*s12*s13*s14 - 3/4*denom(1/4*s12^2)*mt^10*s12*s24
       - 3/4*denom(1/4*s12^2)*mt^10*s12*s23 - 5/4*denom(1/4*s12^2)*mt^10*s12*
      s14 - 1/4*denom(1/4*s12^2)*mt^10*s12*s13 + 1/2*denom(1/4*s12^2)*mt^12*
      s12;
 
 .sort
id KMatrix(16,15) =   - mt^2*s12*s14*s23*s24 - mt^2*s12*s14*s23^2 - mt^2*s12*
      s14^2*s23 - mt^2*s12*s13*s14*s23 - mt^2*s12^2*s14*s23 + mt^2*mh^2*s12*
      s14*s23 + mt^4*s12*s23*s24 + mt^4*s12*s23^2 + mt^4*s12*s14*s24 + 4*mt^4*
      s12*s14*s23 + mt^4*s12*s14^2 + mt^4*s12*s13*s23 + mt^4*s12*s13*s14 + 
      mt^4*s12^2*s23 + mt^4*s12^2*s14 - mt^4*mh^2*s12*s23 - mt^4*mh^2*s12*s14
       - mt^6*s12*s24 - 3*mt^6*s12*s23 - 3*mt^6*s12*s14 - mt^6*s12*s13 - mt^6*
      s12^2 + mt^6*mh^2*s12 + 2*mt^8*s12 + 1/2*denom(1/2*s12)*s12*s14^2*s23*
      s24^2 + 1/2*denom(1/2*s12)*s12*s14^2*s23^2*s24 + 1/2*denom(1/2*s12)*s12*
      s14^3*s23*s24 + 1/2*denom(1/2*s12)*s12*s13*s14^2*s23*s24 + 1/2*denom(1/2
      *s12)*s12^2*s14^2*s23*s24 - 1/2*denom(1/2*s12)*mh^2*s12*s14^2*s23*s24 - 
      denom(1/2*s12)*mt^2*s12*s14*s23*s24^2 - denom(1/2*s12)*mt^2*s12*s14*
      s23^2*s24 - 1/2*denom(1/2*s12)*mt^2*s12*s14^2*s24^2 - 3*denom(1/2*s12)*
      mt^2*s12*s14^2*s23*s24 - denom(1/2*s12)*mt^2*s12*s14^2*s23^2 - 1/2*
      denom(1/2*s12)*mt^2*s12*s14^3*s24 - 1/2*denom(1/2*s12)*mt^2*s12*s14^3*
      s23 - 3/2*denom(1/2*s12)*mt^2*s12*s13*s14*s23*s24 - 1/2*denom(1/2*s12)*
      mt^2*s12*s13*s14^2*s24 - 1/2*denom(1/2*s12)*mt^2*s12*s13*s14^2*s23 - 
      denom(1/2*s12)*mt^2*s12^2*s14*s23*s24 - 1/2*denom(1/2*s12)*mt^2*s12^2*
      s14^2*s24 - 1/2*denom(1/2*s12)*mt^2*s12^2*s14^2*s23 + denom(1/2*s12)*
      mt^2*mh^2*s12*s14*s23*s24 + 1/2*denom(1/2*s12)*mt^2*mh^2*s12*s14^2*s24
       + 1/2*denom(1/2*s12)*mt^2*mh^2*s12*s14^2*s23 + 1/2*denom(1/2*s12)*mt^4*
      s12*s23*s24^2 + 1/2*denom(1/2*s12)*mt^4*s12*s23^2*s24 + denom(1/2*s12)*
      mt^4*s12*s14*s24^2 + 5*denom(1/2*s12)*mt^4*s12*s14*s23*s24 + 2*denom(1/2
      *s12)*mt^4*s12*s14*s23^2 + 5/2*denom(1/2*s12)*mt^4*s12*s14^2*s24 + 7/2*
      denom(1/2*s12)*mt^4*s12*s14^2*s23 + 1/2*denom(1/2*s12)*mt^4*s12*s14^3 + 
      denom(1/2*s12)*mt^4*s12*s13*s23*s24 + 3/2*denom(1/2*s12)*mt^4*s12*s13*
      s14*s24 + 3/2*denom(1/2*s12)*mt^4*s12*s13*s14*s23 + 1/2*denom(1/2*s12)*
      mt^4*s12*s13*s14^2 + 1/2*denom(1/2*s12)*mt^4*s12^2*s23*s24 + denom(1/2*
      s12)*mt^4*s12^2*s14*s24 + denom(1/2*s12)*mt^4*s12^2*s14*s23 + 1/2*denom(
      1/2*s12)*mt^4*s12^2*s14^2 - 1/2*denom(1/2*s12)*mt^4*mh^2*s12*s23*s24 - 
      denom(1/2*s12)*mt^4*mh^2*s12*s14*s24 - denom(1/2*s12)*mt^4*mh^2*s12*s14*
      s23 - 1/2*denom(1/2*s12)*mt^4*mh^2*s12*s14^2 - 1/2*denom(1/2*s12)*mt^6*
      s12*s24^2 - 5/2*denom(1/2*s12)*mt^6*s12*s23*s24 - denom(1/2*s12)*mt^6*
      s12*s23^2 - 4*denom(1/2*s12)*mt^6*s12*s14*s24 - 6*denom(1/2*s12)*mt^6*
      s12*s14*s23 - 5/2*denom(1/2*s12)*mt^6*s12*s14^2 - denom(1/2*s12)*mt^6*
      s12*s13*s24 - denom(1/2*s12)*mt^6*s12*s13*s23 - 3/2*denom(1/2*s12)*mt^6*
      s12*s13*s14 - 1/2*denom(1/2*s12)*mt^6*s12^2*s24 - 1/2*denom(1/2*s12)*
      mt^6*s12^2*s23 - denom(1/2*s12)*mt^6*s12^2*s14 + 1/2*denom(1/2*s12)*mt^6
      *mh^2*s12*s24 + 1/2*denom(1/2*s12)*mt^6*mh^2*s12*s23 + denom(1/2*s12)*
      mt^6*mh^2*s12*s14 + 2*denom(1/2*s12)*mt^8*s12*s24 + 3*denom(1/2*s12)*
      mt^8*s12*s23 + 4*denom(1/2*s12)*mt^8*s12*s14 + denom(1/2*s12)*mt^8*s12*
      s13 + 1/2*denom(1/2*s12)*mt^8*s12^2 - 1/2*denom(1/2*s12)*mt^8*mh^2*s12
       - 2*denom(1/2*s12)*mt^10*s12 + 1/4*denom(1/4*s12^2)*s12*s14^3*s23^2*s24
       + 1/4*denom(1/4*s12^2)*s12*s13*s14^2*s23*s24^2 - 1/4*denom(1/4*s12^2)*
      mt^2*s12*s14^2*s23*s24^2 - 3/4*denom(1/4*s12^2)*mt^2*s12*s14^2*s23^2*s24
       - 1/2*denom(1/4*s12^2)*mt^2*s12*s14^3*s23*s24 - 1/4*denom(1/4*s12^2)*
      mt^2*s12*s14^3*s23^2 - 1/2*denom(1/4*s12^2)*mt^2*s12*s13*s14*s23*s24^2
       - 1/4*denom(1/4*s12^2)*mt^2*s12*s13*s14^2*s24^2 - 1/2*denom(1/4*s12^2)*
      mt^2*s12*s13*s14^2*s23*s24 + 1/2*denom(1/4*s12^2)*mt^4*s12*s14*s23*s24^2
       + 3/4*denom(1/4*s12^2)*mt^4*s12*s14*s23^2*s24 + 1/4*denom(1/4*s12^2)*
      mt^4*s12*s14^2*s24^2 + 2*denom(1/4*s12^2)*mt^4*s12*s14^2*s23*s24 + 3/4*
      denom(1/4*s12^2)*mt^4*s12*s14^2*s23^2 + 1/4*denom(1/4*s12^2)*mt^4*s12*
      s14^3*s24 + 1/2*denom(1/4*s12^2)*mt^4*s12*s14^3*s23 + 1/4*denom(1/4*
      s12^2)*mt^4*s12*s13*s23*s24^2 + 1/2*denom(1/4*s12^2)*mt^4*s12*s13*s14*
      s24^2 + denom(1/4*s12^2)*mt^4*s12*s13*s14*s23*s24 + 1/2*denom(1/4*s12^2)
      *mt^4*s12*s13*s14^2*s24 + 1/4*denom(1/4*s12^2)*mt^4*s12*s13*s14^2*s23 - 
      1/4*denom(1/4*s12^2)*mt^6*s12*s23*s24^2 - 1/4*denom(1/4*s12^2)*mt^6*s12*
      s23^2*s24 - 1/2*denom(1/4*s12^2)*mt^6*s12*s14*s24^2 - 5/2*denom(1/4*
      s12^2)*mt^6*s12*s14*s23*s24 - 3/4*denom(1/4*s12^2)*mt^6*s12*s14*s23^2 - 
      5/4*denom(1/4*s12^2)*mt^6*s12*s14^2*s24 - 7/4*denom(1/4*s12^2)*mt^6*s12*
      s14^2*s23 - 1/4*denom(1/4*s12^2)*mt^6*s12*s14^3 - 1/4*denom(1/4*s12^2)*
      mt^6*s12*s13*s24^2 - 1/2*denom(1/4*s12^2)*mt^6*s12*s13*s23*s24 - denom(1/
      4*s12^2)*mt^6*s12*s13*s14*s24 - 1/2*denom(1/4*s12^2)*mt^6*s12*s13*s14*
      s23 - 1/4*denom(1/4*s12^2)*mt^6*s12*s13*s14^2 + 1/4*denom(1/4*s12^2)*
      mt^8*s12*s24^2 + denom(1/4*s12^2)*mt^8*s12*s23*s24 + 1/4*denom(1/4*s12^2
      )*mt^8*s12*s23^2 + 7/4*denom(1/4*s12^2)*mt^8*s12*s14*s24 + 2*denom(1/4*
      s12^2)*mt^8*s12*s14*s23 + denom(1/4*s12^2)*mt^8*s12*s14^2 + 1/2*denom(1/
      4*s12^2)*mt^8*s12*s13*s24 + 1/4*denom(1/4*s12^2)*mt^8*s12*s13*s23 + 1/2*
      denom(1/4*s12^2)*mt^8*s12*s13*s14 - 3/4*denom(1/4*s12^2)*mt^10*s12*s24
       - 3/4*denom(1/4*s12^2)*mt^10*s12*s23 - 5/4*denom(1/4*s12^2)*mt^10*s12*
      s14 - 1/4*denom(1/4*s12^2)*mt^10*s12*s13 + 1/2*denom(1/4*s12^2)*mt^12*
      s12;
 
 .sort
id KMatrix(16,16) =  2*mt^4*s12*s14*s23 - 2*mt^6*s12*s23 - 2*mt^6*s12*s14 + 2*
      mt^8*s12 - 2*denom(1/2*s12)*mt^2*s12*s14^2*s23*s24 + 4*denom(1/2*s12)*
      mt^4*s12*s14*s23*s24 + 2*denom(1/2*s12)*mt^4*s12*s14^2*s24 + 2*denom(1/2
      *s12)*mt^4*s12*s14^2*s23 - 2*denom(1/2*s12)*mt^6*s12*s23*s24 - 4*denom(1/
      2*s12)*mt^6*s12*s14*s24 - 4*denom(1/2*s12)*mt^6*s12*s14*s23 - 2*denom(1/
      2*s12)*mt^6*s12*s14^2 + 2*denom(1/2*s12)*mt^8*s12*s24 + 2*denom(1/2*s12)
      *mt^8*s12*s23 + 4*denom(1/2*s12)*mt^8*s12*s14 - 2*denom(1/2*s12)*mt^10*
      s12 + 1/2*denom(1/4*s12^2)*s12*s14^3*s23*s24^2 - 3/2*denom(1/4*s12^2)*
      mt^2*s12*s14^2*s23*s24^2 - 1/2*denom(1/4*s12^2)*mt^2*s12*s14^3*s24^2 - 
      denom(1/4*s12^2)*mt^2*s12*s14^3*s23*s24 + 3/2*denom(1/4*s12^2)*mt^4*s12*
      s14*s23*s24^2 + 3/2*denom(1/4*s12^2)*mt^4*s12*s14^2*s24^2 + 3*denom(1/4*
      s12^2)*mt^4*s12*s14^2*s23*s24 + denom(1/4*s12^2)*mt^4*s12*s14^3*s24 + 1/
      2*denom(1/4*s12^2)*mt^4*s12*s14^3*s23 - 1/2*denom(1/4*s12^2)*mt^6*s12*
      s23*s24^2 - 3/2*denom(1/4*s12^2)*mt^6*s12*s14*s24^2 - 3*denom(1/4*s12^2)
      *mt^6*s12*s14*s23*s24 - 3*denom(1/4*s12^2)*mt^6*s12*s14^2*s24 - 3/2*
      denom(1/4*s12^2)*mt^6*s12*s14^2*s23 - 1/2*denom(1/4*s12^2)*mt^6*s12*
      s14^3 + 1/2*denom(1/4*s12^2)*mt^8*s12*s24^2 + denom(1/4*s12^2)*mt^8*s12*
      s23*s24 + 3*denom(1/4*s12^2)*mt^8*s12*s14*s24 + 3/2*denom(1/4*s12^2)*
      mt^8*s12*s14*s23 + 3/2*denom(1/4*s12^2)*mt^8*s12*s14^2 - denom(1/4*s12^2
      )*mt^10*s12*s24 - 1/2*denom(1/4*s12^2)*mt^10*s12*s23 - 3/2*denom(1/4*
      s12^2)*mt^10*s12*s14 + 1/2*denom(1/4*s12^2)*mt^12*s12;
 
 .sort
id KMatrix(16,17) =  mt^2*s14*s23 - mt^2*s13*s24 - mt^2*s12*s24 - mt^2*s12*s23
       - mt^2*s12*s14 - mt^2*s12*s13 - mt^2*s12^2 + mt^2*mh^2*s12 + mt^4*s24
       - mt^4*s23 - mt^4*s14 + mt^4*s13 - denom(1/2*s12)*s14^2*s23*s24 + 
      denom(1/2*s12)*s13*s14*s24^2 + denom(1/2*s12)*s12*s14*s24^2 + denom(1/2*
      s12)*s12*s14*s23*s24 + denom(1/2*s12)*s12*s14^2*s24 + denom(1/2*s12)*s12
      *s13*s14*s24 + denom(1/2*s12)*s12^2*s14*s24 - denom(1/2*s12)*mh^2*s12*
      s14*s24 - denom(1/2*s12)*mt^2*s14*s24^2 + 2*denom(1/2*s12)*mt^2*s14*s23*
      s24 + denom(1/2*s12)*mt^2*s14^2*s24 + denom(1/2*s12)*mt^2*s14^2*s23 - 
      denom(1/2*s12)*mt^2*s13*s24^2 - 2*denom(1/2*s12)*mt^2*s13*s14*s24 - 
      denom(1/2*s12)*mt^2*s12*s24^2 - denom(1/2*s12)*mt^2*s12*s23*s24 - 2*
      denom(1/2*s12)*mt^2*s12*s14*s24 - denom(1/2*s12)*mt^2*s12*s14*s23 - 
      denom(1/2*s12)*mt^2*s12*s14^2 - denom(1/2*s12)*mt^2*s12*s13*s24 - denom(
      1/2*s12)*mt^2*s12*s13*s14 - denom(1/2*s12)*mt^2*s12^2*s24 - denom(1/2*
      s12)*mt^2*s12^2*s14 + denom(1/2*s12)*mt^2*mh^2*s12*s24 + denom(1/2*s12)*
      mt^2*mh^2*s12*s14 + denom(1/2*s12)*mt^4*s24^2 - denom(1/2*s12)*mt^4*s23*
      s24 - 2*denom(1/2*s12)*mt^4*s14*s23 - denom(1/2*s12)*mt^4*s14^2 + 2*
      denom(1/2*s12)*mt^4*s13*s24 + denom(1/2*s12)*mt^4*s13*s14 + denom(1/2*
      s12)*mt^4*s12*s24 + denom(1/2*s12)*mt^4*s12*s23 + denom(1/2*s12)*mt^4*
      s12*s14 + denom(1/2*s12)*mt^4*s12*s13 + denom(1/2*s12)*mt^4*s12^2 - 
      denom(1/2*s12)*mt^4*mh^2*s12 - denom(1/2*s12)*mt^6*s24 + denom(1/2*s12)*
      mt^6*s23 + denom(1/2*s12)*mt^6*s14 - denom(1/2*s12)*mt^6*s13 + 1/4*
      denom(1/4*s12^2)*s12*s14^2*s23*s24 - 1/4*denom(1/4*s12^2)*s12*s13*s14*
      s24^2 - 1/4*denom(1/4*s12^2)*s12^2*s14*s24^2 - 1/4*denom(1/4*s12^2)*
      s12^2*s14*s23*s24 - 1/4*denom(1/4*s12^2)*s12^2*s14^2*s24 - 1/4*denom(1/4
      *s12^2)*s12^2*s13*s14*s24 - 1/4*denom(1/4*s12^2)*s12^3*s14*s24 + 1/4*
      denom(1/4*s12^2)*mh^2*s12^2*s14*s24 + 1/4*denom(1/4*s12^2)*mt^2*s12*s14*
      s24^2 - 1/2*denom(1/4*s12^2)*mt^2*s12*s14*s23*s24 - 1/4*denom(1/4*s12^2)
      *mt^2*s12*s14^2*s24 - 1/4*denom(1/4*s12^2)*mt^2*s12*s14^2*s23 + 1/4*
      denom(1/4*s12^2)*mt^2*s12*s13*s24^2 + 1/2*denom(1/4*s12^2)*mt^2*s12*s13*
      s14*s24 + 1/4*denom(1/4*s12^2)*mt^2*s12^2*s24^2 + 1/4*denom(1/4*s12^2)*
      mt^2*s12^2*s23*s24 + 1/2*denom(1/4*s12^2)*mt^2*s12^2*s14*s24 + 1/4*
      denom(1/4*s12^2)*mt^2*s12^2*s14*s23 + 1/4*denom(1/4*s12^2)*mt^2*s12^2*
      s14^2 + 1/4*denom(1/4*s12^2)*mt^2*s12^2*s13*s24 + 1/4*denom(1/4*s12^2)*
      mt^2*s12^2*s13*s14 + 1/4*denom(1/4*s12^2)*mt^2*s12^3*s24 + 1/4*denom(1/4
      *s12^2)*mt^2*s12^3*s14 - 1/4*denom(1/4*s12^2)*mt^2*mh^2*s12^2*s24 - 1/4*
      denom(1/4*s12^2)*mt^2*mh^2*s12^2*s14 - 1/4*denom(1/4*s12^2)*mt^4*s12*
      s24^2 + 1/4*denom(1/4*s12^2)*mt^4*s12*s23*s24 + 1/2*denom(1/4*s12^2)*
      mt^4*s12*s14*s23 + 1/4*denom(1/4*s12^2)*mt^4*s12*s14^2 - 1/2*denom(1/4*
      s12^2)*mt^4*s12*s13*s24 - 1/4*denom(1/4*s12^2)*mt^4*s12*s13*s14 - 1/4*
      denom(1/4*s12^2)*mt^4*s12^2*s24 - 1/4*denom(1/4*s12^2)*mt^4*s12^2*s23 - 
      1/4*denom(1/4*s12^2)*mt^4*s12^2*s14 - 1/4*denom(1/4*s12^2)*mt^4*s12^2*
      s13 - 1/4*denom(1/4*s12^2)*mt^4*s12^3 + 1/4*denom(1/4*s12^2)*mt^4*mh^2*
      s12^2 + 1/4*denom(1/4*s12^2)*mt^6*s12*s24 - 1/4*denom(1/4*s12^2)*mt^6*
      s12*s23 - 1/4*denom(1/4*s12^2)*mt^6*s12*s14 + 1/4*denom(1/4*s12^2)*mt^6*
      s12*s13;
 
 .sort
id KMatrix(16,18) =  2*mt^3*s12*s14 - 2*mt^5*s12 - 2*denom(1/2*s12)*mt*s12*
      s14^2*s24 + 4*denom(1/2*s12)*mt^3*s12*s14*s24 + 2*denom(1/2*s12)*mt^3*
      s12*s14^2 - 2*denom(1/2*s12)*mt^5*s12*s24 - 4*denom(1/2*s12)*mt^5*s12*
      s14 + 2*denom(1/2*s12)*mt^7*s12 + 1/2*denom(1/4*s12^2)*mt*s12^2*s14^2*
      s24 - denom(1/4*s12^2)*mt^3*s12^2*s14*s24 - 1/2*denom(1/4*s12^2)*mt^3*
      s12^2*s14^2 + 1/2*denom(1/4*s12^2)*mt^5*s12^2*s24 + denom(1/4*s12^2)*
      mt^5*s12^2*s14 - 1/2*denom(1/4*s12^2)*mt^7*s12^2;
 
 .sort
id KMatrix(16,19) =   - 2*mt^3*s12*s23 + 2*mt^5*s12 + 2*denom(1/2*s12)*mt*s12*
      s14*s23*s24 - 2*denom(1/2*s12)*mt^3*s12*s23*s24 - 2*denom(1/2*s12)*mt^3*
      s12*s14*s24 - 2*denom(1/2*s12)*mt^3*s12*s14*s23 + 2*denom(1/2*s12)*mt^5*
      s12*s24 + 2*denom(1/2*s12)*mt^5*s12*s23 + 2*denom(1/2*s12)*mt^5*s12*s14
       - 2*denom(1/2*s12)*mt^7*s12 - 1/2*denom(1/4*s12^2)*mt*s12^2*s14*s23*s24
       + 1/2*denom(1/4*s12^2)*mt^3*s12^2*s23*s24 + 1/2*denom(1/4*s12^2)*mt^3*
      s12^2*s14*s24 + 1/2*denom(1/4*s12^2)*mt^3*s12^2*s14*s23 - 1/2*denom(1/4*
      s12^2)*mt^5*s12^2*s24 - 1/2*denom(1/4*s12^2)*mt^5*s12^2*s23 - 1/2*denom(
      1/4*s12^2)*mt^5*s12^2*s14 + 1/2*denom(1/4*s12^2)*mt^7*s12^2;
 
 .sort
id KMatrix(16,20) =   - 1/2*mt*s12*s24^2 - mt*s12*s23*s24 - 1/2*mt*s12*s23^2
       - mt*s12*s14*s24 - mt*s12*s14*s23 - 1/2*mt*s12*s14^2 - mt*s12*s13*s24
       - mt*s12*s13*s23 - mt*s12*s13*s14 - 1/2*mt*s12*s13^2 - mt*s12^2*s24 - 
      mt*s12^2*s23 - mt*s12^2*s14 - mt*s12^2*s13 - 1/2*mt*s12^3 + mt*mh^2*s12*
      s24 + mt*mh^2*s12*s23 + mt*mh^2*s12*s14 + mt*mh^2*s12*s13 + mt*mh^2*
      s12^2 - 1/2*mt*mh^4*s12 + mt^3*s12*s24 + mt^3*s12*s23 + mt^3*s12*s14 + 
      mt^3*s12*s13 + mt^3*s12^2 - mt^3*mh^2*s12 + 1/2*denom(1/2*s12)*mt*s12*
      s14*s24^2 - 1/2*denom(1/2*s12)*mt*s12*s14*s23^2 + 1/2*denom(1/2*s12)*mt*
      s12*s14^2*s24 - 1/2*denom(1/2*s12)*mt*s12*s14^2*s23 - 1/2*denom(1/2*s12)
      *mt*s12*s13*s24^2 - 1/2*denom(1/2*s12)*mt*s12*s13*s23*s24 - 1/2*denom(1/
      2*s12)*mt*s12*s13*s14*s23 - 1/2*denom(1/2*s12)*mt*s12*s13^2*s24 + 1/2*
      denom(1/2*s12)*mt*s12^2*s14*s24 - 1/2*denom(1/2*s12)*mt*s12^2*s14*s23 - 
      1/2*denom(1/2*s12)*mt*s12^2*s13*s24 - 1/2*denom(1/2*s12)*mt*mh^2*s12*s14
      *s24 + 1/2*denom(1/2*s12)*mt*mh^2*s12*s14*s23 + 1/2*denom(1/2*s12)*mt*
      mh^2*s12*s13*s24 + 1/2*denom(1/2*s12)*mt^3*s12*s23*s24 + 1/2*denom(1/2*
      s12)*mt^3*s12*s23^2 - denom(1/2*s12)*mt^3*s12*s14*s24 + denom(1/2*s12)*
      mt^3*s12*s14*s23 + denom(1/2*s12)*mt^3*s12*s13*s24 + denom(1/2*s12)*mt^3
      *s12*s13*s23 + 1/2*denom(1/2*s12)*mt^3*s12*s13*s14 + 1/2*denom(1/2*s12)*
      mt^3*s12*s13^2 + 1/2*denom(1/2*s12)*mt^3*s12^2*s23 + 1/2*denom(1/2*s12)*
      mt^3*s12^2*s13 - 1/2*denom(1/2*s12)*mt^3*mh^2*s12*s23 - 1/2*denom(1/2*
      s12)*mt^3*mh^2*s12*s13 - denom(1/2*s12)*mt^5*s12*s23 - denom(1/2*s12)*
      mt^5*s12*s13 - 1/2*denom(1/2*s12)*mt^5*s12^2 + 1/2*denom(1/2*s12)*mt^5*
      mh^2*s12 + 1/4*denom(1/4*s12^2)*mt*s12*s14^2*s23*s24 - 1/8*denom(1/4*
      s12^2)*mt*s12*s14^2*s23^2 + 1/4*denom(1/4*s12^2)*mt*s12*s13*s14*s24^2 - 
      1/4*denom(1/4*s12^2)*mt*s12*s13*s14*s23*s24 - 1/8*denom(1/4*s12^2)*mt*
      s12*s13^2*s24^2 - 1/4*denom(1/4*s12^2)*mt^3*s12*s14*s24^2 - 1/4*denom(1/
      4*s12^2)*mt^3*s12*s14*s23*s24 + 1/4*denom(1/4*s12^2)*mt^3*s12*s14*s23^2
       - 1/4*denom(1/4*s12^2)*mt^3*s12*s14^2*s24 + 1/4*denom(1/4*s12^2)*mt^3*
      s12*s13*s23*s24 - 1/4*denom(1/4*s12^2)*mt^3*s12*s13*s14*s24 + 1/4*denom(
      1/4*s12^2)*mt^3*s12*s13*s14*s23 + 1/4*denom(1/4*s12^2)*mt^3*s12*s13^2*
      s24 + 1/8*denom(1/4*s12^2)*mt^5*s12*s24^2 - 1/8*denom(1/4*s12^2)*mt^5*
      s12*s23^2 + 3/4*denom(1/4*s12^2)*mt^5*s12*s14*s24 - 1/4*denom(1/4*s12^2)
      *mt^5*s12*s14*s23 + 1/8*denom(1/4*s12^2)*mt^5*s12*s14^2 - 1/4*denom(1/4*
      s12^2)*mt^5*s12*s13*s24 - 1/4*denom(1/4*s12^2)*mt^5*s12*s13*s23 - 1/8*
      denom(1/4*s12^2)*mt^5*s12*s13^2 - 1/4*denom(1/4*s12^2)*mt^7*s12*s24 + 1/
      4*denom(1/4*s12^2)*mt^7*s12*s23 - 1/4*denom(1/4*s12^2)*mt^7*s12*s14 + 1/
      4*denom(1/4*s12^2)*mt^7*s12*s13;
 
 .sort
id KMatrix(16,21) =  mt^3*s12*s24 + mt^3*s12*s23 + mt^3*s12*s14 + mt^3*s12*s13
       + mt^3*s12^2 - mt^3*mh^2*s12 - 1/2*denom(1/2*s12)*mt*s12*s14*s24^2 - 1/
      2*denom(1/2*s12)*mt*s12*s14*s23*s24 - 1/2*denom(1/2*s12)*mt*s12*s14^2*
      s24 - 1/2*denom(1/2*s12)*mt*s12*s13*s14*s24 - 1/2*denom(1/2*s12)*mt*
      s12^2*s14*s24 + 1/2*denom(1/2*s12)*mt*mh^2*s12*s14*s24 + 1/2*denom(1/2*
      s12)*mt^3*s12*s24^2 + 1/2*denom(1/2*s12)*mt^3*s12*s23*s24 + denom(1/2*
      s12)*mt^3*s12*s14*s23 + 1/2*denom(1/2*s12)*mt^3*s12*s14^2 + denom(1/2*
      s12)*mt^3*s12*s13*s24 + 1/2*denom(1/2*s12)*mt^3*s12*s13*s14 + 1/2*denom(
      1/2*s12)*mt^3*s12^2*s24 + 1/2*denom(1/2*s12)*mt^3*s12^2*s14 - 1/2*denom(
      1/2*s12)*mt^3*mh^2*s12*s24 - 1/2*denom(1/2*s12)*mt^3*mh^2*s12*s14 - 
      denom(1/2*s12)*mt^5*s12*s23 - denom(1/2*s12)*mt^5*s12*s13 - 1/2*denom(1/
      2*s12)*mt^5*s12^2 + 1/2*denom(1/2*s12)*mt^5*mh^2*s12 + 1/2*denom(1/4*
      s12^2)*mt*s12*s14^2*s24^2 - 1/4*denom(1/4*s12^2)*mt*s12*s14^2*s23*s24 - 
      1/4*denom(1/4*s12^2)*mt*s12*s13*s14*s24^2 - 3/4*denom(1/4*s12^2)*mt^3*
      s12*s14*s24^2 + 1/2*denom(1/4*s12^2)*mt^3*s12*s14*s23*s24 - 3/4*denom(1/
      4*s12^2)*mt^3*s12*s14^2*s24 + 1/4*denom(1/4*s12^2)*mt^3*s12*s14^2*s23 + 
      1/4*denom(1/4*s12^2)*mt^3*s12*s13*s24^2 + 1/2*denom(1/4*s12^2)*mt^3*s12*
      s13*s14*s24 + 1/4*denom(1/4*s12^2)*mt^5*s12*s24^2 - 1/4*denom(1/4*s12^2)
      *mt^5*s12*s23*s24 + denom(1/4*s12^2)*mt^5*s12*s14*s24 - 1/2*denom(1/4*
      s12^2)*mt^5*s12*s14*s23 + 1/4*denom(1/4*s12^2)*mt^5*s12*s14^2 - 1/2*
      denom(1/4*s12^2)*mt^5*s12*s13*s24 - 1/4*denom(1/4*s12^2)*mt^5*s12*s13*
      s14 - 1/4*denom(1/4*s12^2)*mt^7*s12*s24 + 1/4*denom(1/4*s12^2)*mt^7*s12*
      s23 - 1/4*denom(1/4*s12^2)*mt^7*s12*s14 + 1/4*denom(1/4*s12^2)*mt^7*s12*
      s13;
 
 .sort
id KMatrix(16,22) =   - 1/2*mt*s12*s24^2 - mt*s12*s23*s24 - 1/2*mt*s12*s23^2
       - mt*s12*s14*s24 - mt*s12*s14*s23 - 1/2*mt*s12*s14^2 - mt*s12*s13*s24
       - mt*s12*s13*s23 - mt*s12*s13*s14 - 1/2*mt*s12*s13^2 - mt*s12^2*s24 - 
      mt*s12^2*s23 - mt*s12^2*s14 - mt*s12^2*s13 - 1/2*mt*s12^3 + mt*mh^2*s12*
      s24 + mt*mh^2*s12*s23 + mt*mh^2*s12*s14 + mt*mh^2*s12*s13 + mt*mh^2*
      s12^2 - 1/2*mt*mh^4*s12 + mt^3*s12*s24 + mt^3*s12*s23 + mt^3*s12*s14 + 
      mt^3*s12*s13 + mt^3*s12^2 - mt^3*mh^2*s12 + 1/2*denom(1/2*s12)*mt*s12*
      s14*s24^2 - 1/2*denom(1/2*s12)*mt*s12*s14*s23^2 + 1/2*denom(1/2*s12)*mt*
      s12*s14^2*s24 - 1/2*denom(1/2*s12)*mt*s12*s14^2*s23 - 1/2*denom(1/2*s12)
      *mt*s12*s13*s24^2 - 1/2*denom(1/2*s12)*mt*s12*s13*s23*s24 - 1/2*denom(1/
      2*s12)*mt*s12*s13*s14*s23 - 1/2*denom(1/2*s12)*mt*s12*s13^2*s24 + 1/2*
      denom(1/2*s12)*mt*s12^2*s14*s24 - 1/2*denom(1/2*s12)*mt*s12^2*s14*s23 - 
      1/2*denom(1/2*s12)*mt*s12^2*s13*s24 - 1/2*denom(1/2*s12)*mt*mh^2*s12*s14
      *s24 + 1/2*denom(1/2*s12)*mt*mh^2*s12*s14*s23 + 1/2*denom(1/2*s12)*mt*
      mh^2*s12*s13*s24 + 1/2*denom(1/2*s12)*mt^3*s12*s23*s24 + 1/2*denom(1/2*
      s12)*mt^3*s12*s23^2 - denom(1/2*s12)*mt^3*s12*s14*s24 + denom(1/2*s12)*
      mt^3*s12*s14*s23 + denom(1/2*s12)*mt^3*s12*s13*s24 + denom(1/2*s12)*mt^3
      *s12*s13*s23 + 1/2*denom(1/2*s12)*mt^3*s12*s13*s14 + 1/2*denom(1/2*s12)*
      mt^3*s12*s13^2 + 1/2*denom(1/2*s12)*mt^3*s12^2*s23 + 1/2*denom(1/2*s12)*
      mt^3*s12^2*s13 - 1/2*denom(1/2*s12)*mt^3*mh^2*s12*s23 - 1/2*denom(1/2*
      s12)*mt^3*mh^2*s12*s13 - denom(1/2*s12)*mt^5*s12*s23 - denom(1/2*s12)*
      mt^5*s12*s13 - 1/2*denom(1/2*s12)*mt^5*s12^2 + 1/2*denom(1/2*s12)*mt^5*
      mh^2*s12 + 1/4*denom(1/4*s12^2)*mt*s12*s14^2*s23*s24 - 1/8*denom(1/4*
      s12^2)*mt*s12*s14^2*s23^2 + 1/4*denom(1/4*s12^2)*mt*s12*s13*s14*s24^2 - 
      1/4*denom(1/4*s12^2)*mt*s12*s13*s14*s23*s24 - 1/8*denom(1/4*s12^2)*mt*
      s12*s13^2*s24^2 - 1/4*denom(1/4*s12^2)*mt^3*s12*s14*s24^2 - 1/4*denom(1/
      4*s12^2)*mt^3*s12*s14*s23*s24 + 1/4*denom(1/4*s12^2)*mt^3*s12*s14*s23^2
       - 1/4*denom(1/4*s12^2)*mt^3*s12*s14^2*s24 + 1/4*denom(1/4*s12^2)*mt^3*
      s12*s13*s23*s24 - 1/4*denom(1/4*s12^2)*mt^3*s12*s13*s14*s24 + 1/4*denom(
      1/4*s12^2)*mt^3*s12*s13*s14*s23 + 1/4*denom(1/4*s12^2)*mt^3*s12*s13^2*
      s24 + 1/8*denom(1/4*s12^2)*mt^5*s12*s24^2 - 1/8*denom(1/4*s12^2)*mt^5*
      s12*s23^2 + 3/4*denom(1/4*s12^2)*mt^5*s12*s14*s24 - 1/4*denom(1/4*s12^2)
      *mt^5*s12*s14*s23 + 1/8*denom(1/4*s12^2)*mt^5*s12*s14^2 - 1/4*denom(1/4*
      s12^2)*mt^5*s12*s13*s24 - 1/4*denom(1/4*s12^2)*mt^5*s12*s13*s23 - 1/8*
      denom(1/4*s12^2)*mt^5*s12*s13^2 - 1/4*denom(1/4*s12^2)*mt^7*s12*s24 + 1/
      4*denom(1/4*s12^2)*mt^7*s12*s23 - 1/4*denom(1/4*s12^2)*mt^7*s12*s14 + 1/
      4*denom(1/4*s12^2)*mt^7*s12*s13;
 
 .sort
id KMatrix(16,23) =  mt^3*s12*s24 + mt^3*s12*s23 + mt^3*s12*s14 + mt^3*s12*s13
       + mt^3*s12^2 - mt^3*mh^2*s12 - 1/2*denom(1/2*s12)*mt*s12*s14*s24^2 - 1/
      2*denom(1/2*s12)*mt*s12*s14*s23*s24 - 1/2*denom(1/2*s12)*mt*s12*s14^2*
      s24 - 1/2*denom(1/2*s12)*mt*s12*s13*s14*s24 - 1/2*denom(1/2*s12)*mt*
      s12^2*s14*s24 + 1/2*denom(1/2*s12)*mt*mh^2*s12*s14*s24 + 1/2*denom(1/2*
      s12)*mt^3*s12*s24^2 + 1/2*denom(1/2*s12)*mt^3*s12*s23*s24 + denom(1/2*
      s12)*mt^3*s12*s14*s23 + 1/2*denom(1/2*s12)*mt^3*s12*s14^2 + denom(1/2*
      s12)*mt^3*s12*s13*s24 + 1/2*denom(1/2*s12)*mt^3*s12*s13*s14 + 1/2*denom(
      1/2*s12)*mt^3*s12^2*s24 + 1/2*denom(1/2*s12)*mt^3*s12^2*s14 - 1/2*denom(
      1/2*s12)*mt^3*mh^2*s12*s24 - 1/2*denom(1/2*s12)*mt^3*mh^2*s12*s14 - 
      denom(1/2*s12)*mt^5*s12*s23 - denom(1/2*s12)*mt^5*s12*s13 - 1/2*denom(1/
      2*s12)*mt^5*s12^2 + 1/2*denom(1/2*s12)*mt^5*mh^2*s12 + 1/2*denom(1/4*
      s12^2)*mt*s12*s14^2*s24^2 - 1/4*denom(1/4*s12^2)*mt*s12*s14^2*s23*s24 - 
      1/4*denom(1/4*s12^2)*mt*s12*s13*s14*s24^2 - 3/4*denom(1/4*s12^2)*mt^3*
      s12*s14*s24^2 + 1/2*denom(1/4*s12^2)*mt^3*s12*s14*s23*s24 - 3/4*denom(1/
      4*s12^2)*mt^3*s12*s14^2*s24 + 1/4*denom(1/4*s12^2)*mt^3*s12*s14^2*s23 + 
      1/4*denom(1/4*s12^2)*mt^3*s12*s13*s24^2 + 1/2*denom(1/4*s12^2)*mt^3*s12*
      s13*s14*s24 + 1/4*denom(1/4*s12^2)*mt^5*s12*s24^2 - 1/4*denom(1/4*s12^2)
      *mt^5*s12*s23*s24 + denom(1/4*s12^2)*mt^5*s12*s14*s24 - 1/2*denom(1/4*
      s12^2)*mt^5*s12*s14*s23 + 1/4*denom(1/4*s12^2)*mt^5*s12*s14^2 - 1/2*
      denom(1/4*s12^2)*mt^5*s12*s13*s24 - 1/4*denom(1/4*s12^2)*mt^5*s12*s13*
      s14 - 1/4*denom(1/4*s12^2)*mt^7*s12*s24 + 1/4*denom(1/4*s12^2)*mt^7*s12*
      s23 - 1/4*denom(1/4*s12^2)*mt^7*s12*s14 + 1/4*denom(1/4*s12^2)*mt^7*s12*
      s13;
 
 .sort
id KMatrix(16,24) =  2*mt^2*s12*s14*s23 - 2*mt^4*s12*s23 - 2*mt^4*s12*s14 + 2*
      mt^6*s12 - 2*denom(1/2*s12)*s12*s14^2*s23*s24 + 4*denom(1/2*s12)*mt^2*
      s12*s14*s23*s24 + 2*denom(1/2*s12)*mt^2*s12*s14^2*s24 + 2*denom(1/2*s12)
      *mt^2*s12*s14^2*s23 - 2*denom(1/2*s12)*mt^4*s12*s23*s24 - 4*denom(1/2*
      s12)*mt^4*s12*s14*s24 - 4*denom(1/2*s12)*mt^4*s12*s14*s23 - 2*denom(1/2*
      s12)*mt^4*s12*s14^2 + 2*denom(1/2*s12)*mt^6*s12*s24 + 2*denom(1/2*s12)*
      mt^6*s12*s23 + 4*denom(1/2*s12)*mt^6*s12*s14 - 2*denom(1/2*s12)*mt^8*s12
       + 1/2*denom(1/4*s12^2)*s12^2*s14^2*s23*s24 - denom(1/4*s12^2)*mt^2*
      s12^2*s14*s23*s24 - 1/2*denom(1/4*s12^2)*mt^2*s12^2*s14^2*s24 - 1/2*
      denom(1/4*s12^2)*mt^2*s12^2*s14^2*s23 + 1/2*denom(1/4*s12^2)*mt^4*s12^2*
      s23*s24 + denom(1/4*s12^2)*mt^4*s12^2*s14*s24 + denom(1/4*s12^2)*mt^4*
      s12^2*s14*s23 + 1/2*denom(1/4*s12^2)*mt^4*s12^2*s14^2 - 1/2*denom(1/4*
      s12^2)*mt^6*s12^2*s24 - 1/2*denom(1/4*s12^2)*mt^6*s12^2*s23 - denom(1/4*
      s12^2)*mt^6*s12^2*s14 + 1/2*denom(1/4*s12^2)*mt^8*s12^2;
 
 .sort
id KMatrix(16,25) =  mt^2*s14*s23 - mt^2*s13*s24 - mt^2*s12*s24 - mt^2*s12*s23
       - mt^2*s12*s14 - mt^2*s12*s13 - mt^2*s12^2 + mt^2*mh^2*s12 + mt^4*s24
       - mt^4*s23 - mt^4*s14 + mt^4*s13 - denom(1/2*s12)*s14^2*s23*s24 + 
      denom(1/2*s12)*s13*s14*s24^2 + denom(1/2*s12)*s12*s14*s24^2 + denom(1/2*
      s12)*s12*s14*s23*s24 + denom(1/2*s12)*s12*s14^2*s24 + denom(1/2*s12)*s12
      *s13*s14*s24 + denom(1/2*s12)*s12^2*s14*s24 - denom(1/2*s12)*mh^2*s12*
      s14*s24 - denom(1/2*s12)*mt^2*s14*s24^2 + 2*denom(1/2*s12)*mt^2*s14*s23*
      s24 + denom(1/2*s12)*mt^2*s14^2*s24 + denom(1/2*s12)*mt^2*s14^2*s23 - 
      denom(1/2*s12)*mt^2*s13*s24^2 - 2*denom(1/2*s12)*mt^2*s13*s14*s24 - 
      denom(1/2*s12)*mt^2*s12*s24^2 - denom(1/2*s12)*mt^2*s12*s23*s24 - 2*
      denom(1/2*s12)*mt^2*s12*s14*s24 - denom(1/2*s12)*mt^2*s12*s14*s23 - 
      denom(1/2*s12)*mt^2*s12*s14^2 - denom(1/2*s12)*mt^2*s12*s13*s24 - denom(
      1/2*s12)*mt^2*s12*s13*s14 - denom(1/2*s12)*mt^2*s12^2*s24 - denom(1/2*
      s12)*mt^2*s12^2*s14 + denom(1/2*s12)*mt^2*mh^2*s12*s24 + denom(1/2*s12)*
      mt^2*mh^2*s12*s14 + denom(1/2*s12)*mt^4*s24^2 - denom(1/2*s12)*mt^4*s23*
      s24 - 2*denom(1/2*s12)*mt^4*s14*s23 - denom(1/2*s12)*mt^4*s14^2 + 2*
      denom(1/2*s12)*mt^4*s13*s24 + denom(1/2*s12)*mt^4*s13*s14 + denom(1/2*
      s12)*mt^4*s12*s24 + denom(1/2*s12)*mt^4*s12*s23 + denom(1/2*s12)*mt^4*
      s12*s14 + denom(1/2*s12)*mt^4*s12*s13 + denom(1/2*s12)*mt^4*s12^2 - 
      denom(1/2*s12)*mt^4*mh^2*s12 - denom(1/2*s12)*mt^6*s24 + denom(1/2*s12)*
      mt^6*s23 + denom(1/2*s12)*mt^6*s14 - denom(1/2*s12)*mt^6*s13 + 1/4*
      denom(1/4*s12^2)*s12*s14^2*s23*s24 - 1/4*denom(1/4*s12^2)*s12*s13*s14*
      s24^2 - 1/4*denom(1/4*s12^2)*s12^2*s14*s24^2 - 1/4*denom(1/4*s12^2)*
      s12^2*s14*s23*s24 - 1/4*denom(1/4*s12^2)*s12^2*s14^2*s24 - 1/4*denom(1/4
      *s12^2)*s12^2*s13*s14*s24 - 1/4*denom(1/4*s12^2)*s12^3*s14*s24 + 1/4*
      denom(1/4*s12^2)*mh^2*s12^2*s14*s24 + 1/4*denom(1/4*s12^2)*mt^2*s12*s14*
      s24^2 - 1/2*denom(1/4*s12^2)*mt^2*s12*s14*s23*s24 - 1/4*denom(1/4*s12^2)
      *mt^2*s12*s14^2*s24 - 1/4*denom(1/4*s12^2)*mt^2*s12*s14^2*s23 + 1/4*
      denom(1/4*s12^2)*mt^2*s12*s13*s24^2 + 1/2*denom(1/4*s12^2)*mt^2*s12*s13*
      s14*s24 + 1/4*denom(1/4*s12^2)*mt^2*s12^2*s24^2 + 1/4*denom(1/4*s12^2)*
      mt^2*s12^2*s23*s24 + 1/2*denom(1/4*s12^2)*mt^2*s12^2*s14*s24 + 1/4*
      denom(1/4*s12^2)*mt^2*s12^2*s14*s23 + 1/4*denom(1/4*s12^2)*mt^2*s12^2*
      s14^2 + 1/4*denom(1/4*s12^2)*mt^2*s12^2*s13*s24 + 1/4*denom(1/4*s12^2)*
      mt^2*s12^2*s13*s14 + 1/4*denom(1/4*s12^2)*mt^2*s12^3*s24 + 1/4*denom(1/4
      *s12^2)*mt^2*s12^3*s14 - 1/4*denom(1/4*s12^2)*mt^2*mh^2*s12^2*s24 - 1/4*
      denom(1/4*s12^2)*mt^2*mh^2*s12^2*s14 - 1/4*denom(1/4*s12^2)*mt^4*s12*
      s24^2 + 1/4*denom(1/4*s12^2)*mt^4*s12*s23*s24 + 1/2*denom(1/4*s12^2)*
      mt^4*s12*s14*s23 + 1/4*denom(1/4*s12^2)*mt^4*s12*s14^2 - 1/2*denom(1/4*
      s12^2)*mt^4*s12*s13*s24 - 1/4*denom(1/4*s12^2)*mt^4*s12*s13*s14 - 1/4*
      denom(1/4*s12^2)*mt^4*s12^2*s24 - 1/4*denom(1/4*s12^2)*mt^4*s12^2*s23 - 
      1/4*denom(1/4*s12^2)*mt^4*s12^2*s14 - 1/4*denom(1/4*s12^2)*mt^4*s12^2*
      s13 - 1/4*denom(1/4*s12^2)*mt^4*s12^3 + 1/4*denom(1/4*s12^2)*mt^4*mh^2*
      s12^2 + 1/4*denom(1/4*s12^2)*mt^6*s12*s24 - 1/4*denom(1/4*s12^2)*mt^6*
      s12*s23 - 1/4*denom(1/4*s12^2)*mt^6*s12*s14 + 1/4*denom(1/4*s12^2)*mt^6*
      s12*s13;
 
 .sort
id KMatrix(16,26) =   - 1/2*s12*s14*s24^2 - s12*s14*s23*s24 - 1/2*s12*s14*
      s23^2 - s12*s14^2*s24 - s12*s14^2*s23 - 1/2*s12*s14^3 - s12*s13*s14*s24
       - s12*s13*s14*s23 - s12*s13*s14^2 - 1/2*s12*s13^2*s14 - s12^2*s14*s24
       - s12^2*s14*s23 - s12^2*s14^2 - s12^2*s13*s14 - 1/2*s12^3*s14 + mh^2*
      s12*s14*s24 + mh^2*s12*s14*s23 + mh^2*s12*s14^2 + mh^2*s12*s13*s14 + 
      mh^2*s12^2*s14 - 1/2*mh^4*s12*s14 + 1/2*mt^2*s12*s24^2 + mt^2*s12*s23*
      s24 + 1/2*mt^2*s12*s23^2 + 3*mt^2*s12*s14*s24 + 3*mt^2*s12*s14*s23 + 5/2
      *mt^2*s12*s14^2 + mt^2*s12*s13*s24 + mt^2*s12*s13*s23 + 3*mt^2*s12*s13*
      s14 + 1/2*mt^2*s12*s13^2 + mt^2*s12^2*s24 + mt^2*s12^2*s23 + 3*mt^2*
      s12^2*s14 + mt^2*s12^2*s13 + 1/2*mt^2*s12^3 - mt^2*mh^2*s12*s24 - mt^2*
      mh^2*s12*s23 - 3*mt^2*mh^2*s12*s14 - mt^2*mh^2*s12*s13 - mt^2*mh^2*s12^2
       + 1/2*mt^2*mh^4*s12 - 2*mt^4*s12*s24 - 2*mt^4*s12*s23 - 4*mt^4*s12*s14
       - 2*mt^4*s12*s13 - 2*mt^4*s12^2 + 2*mt^4*mh^2*s12 + 2*mt^6*s12 - 1/2*
      denom(1/2*s12)*s12*s14^2*s23*s24 - 1/2*denom(1/2*s12)*s12*s14^2*s23^2 - 
      1/2*denom(1/2*s12)*s12*s14^3*s23 - 1/2*denom(1/2*s12)*s12*s13*s14*s24^2
       - 1/2*denom(1/2*s12)*s12*s13*s14*s23*s24 - 1/2*denom(1/2*s12)*s12*s13*
      s14^2*s24 - 1/2*denom(1/2*s12)*s12*s13*s14^2*s23 - 1/2*denom(1/2*s12)*
      s12*s13^2*s14*s24 - 1/2*denom(1/2*s12)*s12^2*s14^2*s23 - 1/2*denom(1/2*
      s12)*s12^2*s13*s14*s24 + 1/2*denom(1/2*s12)*mh^2*s12*s14^2*s23 + 1/2*
      denom(1/2*s12)*mh^2*s12*s13*s14*s24 + 1/2*denom(1/2*s12)*mt^2*s12*s14*
      s24^2 + 3/2*denom(1/2*s12)*mt^2*s12*s14*s23*s24 + denom(1/2*s12)*mt^2*
      s12*s14*s23^2 + denom(1/2*s12)*mt^2*s12*s14^2*s24 + 5/2*denom(1/2*s12)*
      mt^2*s12*s14^2*s23 + 1/2*denom(1/2*s12)*mt^2*s12*s14^3 + 1/2*denom(1/2*
      s12)*mt^2*s12*s13*s24^2 + 1/2*denom(1/2*s12)*mt^2*s12*s13*s23*s24 + 5/2*
      denom(1/2*s12)*mt^2*s12*s13*s14*s24 + 3/2*denom(1/2*s12)*mt^2*s12*s13*
      s14*s23 + denom(1/2*s12)*mt^2*s12*s13*s14^2 + 1/2*denom(1/2*s12)*mt^2*
      s12*s13^2*s24 + 1/2*denom(1/2*s12)*mt^2*s12*s13^2*s14 + 1/2*denom(1/2*
      s12)*mt^2*s12^2*s14*s24 + denom(1/2*s12)*mt^2*s12^2*s14*s23 + 1/2*denom(
      1/2*s12)*mt^2*s12^2*s14^2 + 1/2*denom(1/2*s12)*mt^2*s12^2*s13*s24 + 1/2*
      denom(1/2*s12)*mt^2*s12^2*s13*s14 - 1/2*denom(1/2*s12)*mt^2*mh^2*s12*s14
      *s24 - denom(1/2*s12)*mt^2*mh^2*s12*s14*s23 - 1/2*denom(1/2*s12)*mt^2*
      mh^2*s12*s14^2 - 1/2*denom(1/2*s12)*mt^2*mh^2*s12*s13*s24 - 1/2*denom(1/
      2*s12)*mt^2*mh^2*s12*s13*s14 - 1/2*denom(1/2*s12)*mt^4*s12*s24^2 - 
      denom(1/2*s12)*mt^4*s12*s23*s24 - 1/2*denom(1/2*s12)*mt^4*s12*s23^2 - 3*
      denom(1/2*s12)*mt^4*s12*s14*s24 - 4*denom(1/2*s12)*mt^4*s12*s14*s23 - 5/
      2*denom(1/2*s12)*mt^4*s12*s14^2 - 2*denom(1/2*s12)*mt^4*s12*s13*s24 - 
      denom(1/2*s12)*mt^4*s12*s13*s23 - 3*denom(1/2*s12)*mt^4*s12*s13*s14 - 1/
      2*denom(1/2*s12)*mt^4*s12*s13^2 - 1/2*denom(1/2*s12)*mt^4*s12^2*s24 - 1/
      2*denom(1/2*s12)*mt^4*s12^2*s23 - 3/2*denom(1/2*s12)*mt^4*s12^2*s14 - 1/
      2*denom(1/2*s12)*mt^4*s12^2*s13 + 1/2*denom(1/2*s12)*mt^4*mh^2*s12*s24
       + 1/2*denom(1/2*s12)*mt^4*mh^2*s12*s23 + 3/2*denom(1/2*s12)*mt^4*mh^2*
      s12*s14 + 1/2*denom(1/2*s12)*mt^4*mh^2*s12*s13 + 2*denom(1/2*s12)*mt^6*
      s12*s24 + 2*denom(1/2*s12)*mt^6*s12*s23 + 4*denom(1/2*s12)*mt^6*s12*s14
       + 2*denom(1/2*s12)*mt^6*s12*s13 + denom(1/2*s12)*mt^6*s12^2 - denom(1/2
      *s12)*mt^6*mh^2*s12 - 2*denom(1/2*s12)*mt^8*s12 - 1/8*denom(1/4*s12^2)*
      s12*s14^3*s23^2 - 1/4*denom(1/4*s12^2)*s12*s13*s14^2*s23*s24 - 1/8*
      denom(1/4*s12^2)*s12*s13^2*s14*s24^2 + 1/4*denom(1/4*s12^2)*mt^2*s12*
      s14^2*s23*s24 + 3/8*denom(1/4*s12^2)*mt^2*s12*s14^2*s23^2 + 1/4*denom(1/
      4*s12^2)*mt^2*s12*s14^3*s23 + 1/4*denom(1/4*s12^2)*mt^2*s12*s13*s14*
      s24^2 + 1/2*denom(1/4*s12^2)*mt^2*s12*s13*s14*s23*s24 + 1/4*denom(1/4*
      s12^2)*mt^2*s12*s13*s14^2*s24 + 1/4*denom(1/4*s12^2)*mt^2*s12*s13*s14^2*
      s23 + 1/8*denom(1/4*s12^2)*mt^2*s12*s13^2*s24^2 + 1/4*denom(1/4*s12^2)*
      mt^2*s12*s13^2*s14*s24 - 1/8*denom(1/4*s12^2)*mt^4*s12*s14*s24^2 - 1/2*
      denom(1/4*s12^2)*mt^4*s12*s14*s23*s24 - 3/8*denom(1/4*s12^2)*mt^4*s12*
      s14*s23^2 - 1/4*denom(1/4*s12^2)*mt^4*s12*s14^2*s24 - denom(1/4*s12^2)*
      mt^4*s12*s14^2*s23 - 1/8*denom(1/4*s12^2)*mt^4*s12*s14^3 - 1/4*denom(1/4
      *s12^2)*mt^4*s12*s13*s24^2 - 1/4*denom(1/4*s12^2)*mt^4*s12*s13*s23*s24
       - denom(1/4*s12^2)*mt^4*s12*s13*s14*s24 - 1/2*denom(1/4*s12^2)*mt^4*s12
      *s13*s14*s23 - 1/4*denom(1/4*s12^2)*mt^4*s12*s13*s14^2 - 1/4*denom(1/4*
      s12^2)*mt^4*s12*s13^2*s24 - 1/8*denom(1/4*s12^2)*mt^4*s12*s13^2*s14 + 1/
      8*denom(1/4*s12^2)*mt^6*s12*s24^2 + 1/4*denom(1/4*s12^2)*mt^6*s12*s23*
      s24 + 1/8*denom(1/4*s12^2)*mt^6*s12*s23^2 + 3/4*denom(1/4*s12^2)*mt^6*
      s12*s14*s24 + 5/4*denom(1/4*s12^2)*mt^6*s12*s14*s23 + 5/8*denom(1/4*
      s12^2)*mt^6*s12*s14^2 + 3/4*denom(1/4*s12^2)*mt^6*s12*s13*s24 + 1/4*
      denom(1/4*s12^2)*mt^6*s12*s13*s23 + 3/4*denom(1/4*s12^2)*mt^6*s12*s13*
      s14 + 1/8*denom(1/4*s12^2)*mt^6*s12*s13^2 - 1/2*denom(1/4*s12^2)*mt^8*
      s12*s24 - 1/2*denom(1/4*s12^2)*mt^8*s12*s23 - denom(1/4*s12^2)*mt^8*s12*
      s14 - 1/2*denom(1/4*s12^2)*mt^8*s12*s13 + 1/2*denom(1/4*s12^2)*mt^10*s12
      ;
 
 .sort
id KMatrix(16,27) =   - mt^2*s12*s23*s24 - mt^2*s12*s23^2 - mt^2*s12*s14*s23
       - mt^2*s12*s13*s23 - mt^2*s12^2*s23 + mt^2*mh^2*s12*s23 + mt^4*s12*s24
       + 3*mt^4*s12*s23 + mt^4*s12*s14 + mt^4*s12*s13 + mt^4*s12^2 - mt^4*mh^2
      *s12 - 2*mt^6*s12 + 1/2*denom(1/2*s12)*s12*s14*s23*s24^2 + 1/2*denom(1/2
      *s12)*s12*s14*s23^2*s24 + 1/2*denom(1/2*s12)*s12*s14^2*s23*s24 + 1/2*
      denom(1/2*s12)*s12*s13*s14*s23*s24 + 1/2*denom(1/2*s12)*s12^2*s14*s23*
      s24 - 1/2*denom(1/2*s12)*mh^2*s12*s14*s23*s24 - 1/2*denom(1/2*s12)*mt^2*
      s12*s23*s24^2 - 1/2*denom(1/2*s12)*mt^2*s12*s23^2*s24 - 1/2*denom(1/2*
      s12)*mt^2*s12*s14*s24^2 - 5/2*denom(1/2*s12)*mt^2*s12*s14*s23*s24 - 
      denom(1/2*s12)*mt^2*s12*s14*s23^2 - 1/2*denom(1/2*s12)*mt^2*s12*s14^2*
      s24 - 1/2*denom(1/2*s12)*mt^2*s12*s14^2*s23 - denom(1/2*s12)*mt^2*s12*
      s13*s23*s24 - 1/2*denom(1/2*s12)*mt^2*s12*s13*s14*s24 - 1/2*denom(1/2*
      s12)*mt^2*s12*s13*s14*s23 - 1/2*denom(1/2*s12)*mt^2*s12^2*s23*s24 - 1/2*
      denom(1/2*s12)*mt^2*s12^2*s14*s24 - 1/2*denom(1/2*s12)*mt^2*s12^2*s14*
      s23 + 1/2*denom(1/2*s12)*mt^2*mh^2*s12*s23*s24 + 1/2*denom(1/2*s12)*mt^2
      *mh^2*s12*s14*s24 + 1/2*denom(1/2*s12)*mt^2*mh^2*s12*s14*s23 + 1/2*
      denom(1/2*s12)*mt^4*s12*s24^2 + 5/2*denom(1/2*s12)*mt^4*s12*s23*s24 + 
      denom(1/2*s12)*mt^4*s12*s23^2 + 2*denom(1/2*s12)*mt^4*s12*s14*s24 + 3*
      denom(1/2*s12)*mt^4*s12*s14*s23 + 1/2*denom(1/2*s12)*mt^4*s12*s14^2 + 
      denom(1/2*s12)*mt^4*s12*s13*s24 + denom(1/2*s12)*mt^4*s12*s13*s23 + 1/2*
      denom(1/2*s12)*mt^4*s12*s13*s14 + 1/2*denom(1/2*s12)*mt^4*s12^2*s24 + 1/
      2*denom(1/2*s12)*mt^4*s12^2*s23 + 1/2*denom(1/2*s12)*mt^4*s12^2*s14 - 1/
      2*denom(1/2*s12)*mt^4*mh^2*s12*s24 - 1/2*denom(1/2*s12)*mt^4*mh^2*s12*
      s23 - 1/2*denom(1/2*s12)*mt^4*mh^2*s12*s14 - 2*denom(1/2*s12)*mt^6*s12*
      s24 - 3*denom(1/2*s12)*mt^6*s12*s23 - 2*denom(1/2*s12)*mt^6*s12*s14 - 
      denom(1/2*s12)*mt^6*s12*s13 - 1/2*denom(1/2*s12)*mt^6*s12^2 + 1/2*denom(
      1/2*s12)*mt^6*mh^2*s12 + 2*denom(1/2*s12)*mt^8*s12 + 1/4*denom(1/4*s12^2
      )*s12*s14^2*s23^2*s24 + 1/4*denom(1/4*s12^2)*s12*s13*s14*s23*s24^2 - 1/4
      *denom(1/4*s12^2)*mt^2*s12*s14*s23*s24^2 - 1/2*denom(1/4*s12^2)*mt^2*s12
      *s14*s23^2*s24 - 1/2*denom(1/4*s12^2)*mt^2*s12*s14^2*s23*s24 - 1/4*
      denom(1/4*s12^2)*mt^2*s12*s14^2*s23^2 - 1/4*denom(1/4*s12^2)*mt^2*s12*
      s13*s23*s24^2 - 1/4*denom(1/4*s12^2)*mt^2*s12*s13*s14*s24^2 - 1/2*denom(
      1/4*s12^2)*mt^2*s12*s13*s14*s23*s24 + 1/4*denom(1/4*s12^2)*mt^4*s12*s23*
      s24^2 + 1/4*denom(1/4*s12^2)*mt^4*s12*s23^2*s24 + 1/4*denom(1/4*s12^2)*
      mt^4*s12*s14*s24^2 + 3/2*denom(1/4*s12^2)*mt^4*s12*s14*s23*s24 + 1/2*
      denom(1/4*s12^2)*mt^4*s12*s14*s23^2 + 1/4*denom(1/4*s12^2)*mt^4*s12*
      s14^2*s24 + 1/2*denom(1/4*s12^2)*mt^4*s12*s14^2*s23 + 1/4*denom(1/4*
      s12^2)*mt^4*s12*s13*s24^2 + 1/2*denom(1/4*s12^2)*mt^4*s12*s13*s23*s24 + 
      1/2*denom(1/4*s12^2)*mt^4*s12*s13*s14*s24 + 1/4*denom(1/4*s12^2)*mt^4*
      s12*s13*s14*s23 - 1/4*denom(1/4*s12^2)*mt^6*s12*s24^2 - denom(1/4*s12^2)
      *mt^6*s12*s23*s24 - 1/4*denom(1/4*s12^2)*mt^6*s12*s23^2 - denom(1/4*
      s12^2)*mt^6*s12*s14*s24 - 5/4*denom(1/4*s12^2)*mt^6*s12*s14*s23 - 1/4*
      denom(1/4*s12^2)*mt^6*s12*s14^2 - 1/2*denom(1/4*s12^2)*mt^6*s12*s13*s24
       - 1/4*denom(1/4*s12^2)*mt^6*s12*s13*s23 - 1/4*denom(1/4*s12^2)*mt^6*s12
      *s13*s14 + 3/4*denom(1/4*s12^2)*mt^8*s12*s24 + 3/4*denom(1/4*s12^2)*mt^8
      *s12*s23 + 3/4*denom(1/4*s12^2)*mt^8*s12*s14 + 1/4*denom(1/4*s12^2)*mt^8
      *s12*s13 - 1/2*denom(1/4*s12^2)*mt^10*s12;
 
 .sort
id KMatrix(16,28) =  mt^2*s12*s14*s24 + mt^2*s12*s14*s23 + mt^2*s12*s14^2 + 
      mt^2*s12*s13*s14 + mt^2*s12^2*s14 - mt^2*mh^2*s12*s14 - mt^4*s12*s24 - 
      mt^4*s12*s23 - 3*mt^4*s12*s14 - mt^4*s12*s13 - mt^4*s12^2 + mt^4*mh^2*
      s12 + 2*mt^6*s12 - 1/2*denom(1/2*s12)*s12*s14^2*s24^2 - 1/2*denom(1/2*
      s12)*s12*s14^2*s23*s24 - 1/2*denom(1/2*s12)*s12*s14^3*s24 - 1/2*denom(1/
      2*s12)*s12*s13*s14^2*s24 - 1/2*denom(1/2*s12)*s12^2*s14^2*s24 + 1/2*
      denom(1/2*s12)*mh^2*s12*s14^2*s24 + denom(1/2*s12)*mt^2*s12*s14*s24^2 + 
      denom(1/2*s12)*mt^2*s12*s14*s23*s24 + 5/2*denom(1/2*s12)*mt^2*s12*s14^2*
      s24 + denom(1/2*s12)*mt^2*s12*s14^2*s23 + 1/2*denom(1/2*s12)*mt^2*s12*
      s14^3 + 3/2*denom(1/2*s12)*mt^2*s12*s13*s14*s24 + 1/2*denom(1/2*s12)*
      mt^2*s12*s13*s14^2 + denom(1/2*s12)*mt^2*s12^2*s14*s24 + 1/2*denom(1/2*
      s12)*mt^2*s12^2*s14^2 - denom(1/2*s12)*mt^2*mh^2*s12*s14*s24 - 1/2*
      denom(1/2*s12)*mt^2*mh^2*s12*s14^2 - 1/2*denom(1/2*s12)*mt^4*s12*s24^2
       - 1/2*denom(1/2*s12)*mt^4*s12*s23*s24 - 4*denom(1/2*s12)*mt^4*s12*s14*
      s24 - 2*denom(1/2*s12)*mt^4*s12*s14*s23 - 5/2*denom(1/2*s12)*mt^4*s12*
      s14^2 - denom(1/2*s12)*mt^4*s12*s13*s24 - 3/2*denom(1/2*s12)*mt^4*s12*
      s13*s14 - 1/2*denom(1/2*s12)*mt^4*s12^2*s24 - denom(1/2*s12)*mt^4*s12^2*
      s14 + 1/2*denom(1/2*s12)*mt^4*mh^2*s12*s24 + denom(1/2*s12)*mt^4*mh^2*
      s12*s14 + 2*denom(1/2*s12)*mt^6*s12*s24 + denom(1/2*s12)*mt^6*s12*s23 + 
      4*denom(1/2*s12)*mt^6*s12*s14 + denom(1/2*s12)*mt^6*s12*s13 + 1/2*denom(
      1/2*s12)*mt^6*s12^2 - 1/2*denom(1/2*s12)*mt^6*mh^2*s12 - 2*denom(1/2*s12
      )*mt^8*s12 - 1/4*denom(1/4*s12^2)*s12*s14^3*s23*s24 - 1/4*denom(1/4*
      s12^2)*s12*s13*s14^2*s24^2 + 1/4*denom(1/4*s12^2)*mt^2*s12*s14^2*s24^2
       + 3/4*denom(1/4*s12^2)*mt^2*s12*s14^2*s23*s24 + 1/4*denom(1/4*s12^2)*
      mt^2*s12*s14^3*s24 + 1/4*denom(1/4*s12^2)*mt^2*s12*s14^3*s23 + 1/2*
      denom(1/4*s12^2)*mt^2*s12*s13*s14*s24^2 + 1/2*denom(1/4*s12^2)*mt^2*s12*
      s13*s14^2*s24 - 1/2*denom(1/4*s12^2)*mt^4*s12*s14*s24^2 - 3/4*denom(1/4*
      s12^2)*mt^4*s12*s14*s23*s24 - 5/4*denom(1/4*s12^2)*mt^4*s12*s14^2*s24 - 
      3/4*denom(1/4*s12^2)*mt^4*s12*s14^2*s23 - 1/4*denom(1/4*s12^2)*mt^4*s12*
      s14^3 - 1/4*denom(1/4*s12^2)*mt^4*s12*s13*s24^2 - denom(1/4*s12^2)*mt^4*
      s12*s13*s14*s24 - 1/4*denom(1/4*s12^2)*mt^4*s12*s13*s14^2 + 1/4*denom(1/
      4*s12^2)*mt^6*s12*s24^2 + 1/4*denom(1/4*s12^2)*mt^6*s12*s23*s24 + 7/4*
      denom(1/4*s12^2)*mt^6*s12*s14*s24 + 3/4*denom(1/4*s12^2)*mt^6*s12*s14*
      s23 + denom(1/4*s12^2)*mt^6*s12*s14^2 + 1/2*denom(1/4*s12^2)*mt^6*s12*
      s13*s24 + 1/2*denom(1/4*s12^2)*mt^6*s12*s13*s14 - 3/4*denom(1/4*s12^2)*
      mt^8*s12*s24 - 1/4*denom(1/4*s12^2)*mt^8*s12*s23 - 5/4*denom(1/4*s12^2)*
      mt^8*s12*s14 - 1/4*denom(1/4*s12^2)*mt^8*s12*s13 + 1/2*denom(1/4*s12^2)*
      mt^10*s12;
 
 .sort
id KMatrix(16,29) =  2*mt^4*s12*s23 - 2*mt^6*s12 - 2*denom(1/2*s12)*mt^2*s12*
      s14*s23*s24 + 2*denom(1/2*s12)*mt^4*s12*s23*s24 + 2*denom(1/2*s12)*mt^4*
      s12*s14*s24 + 2*denom(1/2*s12)*mt^4*s12*s14*s23 - 2*denom(1/2*s12)*mt^6*
      s12*s24 - 2*denom(1/2*s12)*mt^6*s12*s23 - 2*denom(1/2*s12)*mt^6*s12*s14
       + 2*denom(1/2*s12)*mt^8*s12 + 1/2*denom(1/4*s12^2)*s12*s14^2*s23*s24^2
       - denom(1/4*s12^2)*mt^2*s12*s14*s23*s24^2 - 1/2*denom(1/4*s12^2)*mt^2*
      s12*s14^2*s24^2 - denom(1/4*s12^2)*mt^2*s12*s14^2*s23*s24 + 1/2*denom(1/
      4*s12^2)*mt^4*s12*s23*s24^2 + denom(1/4*s12^2)*mt^4*s12*s14*s24^2 + 2*
      denom(1/4*s12^2)*mt^4*s12*s14*s23*s24 + denom(1/4*s12^2)*mt^4*s12*s14^2*
      s24 + 1/2*denom(1/4*s12^2)*mt^4*s12*s14^2*s23 - 1/2*denom(1/4*s12^2)*
      mt^6*s12*s24^2 - denom(1/4*s12^2)*mt^6*s12*s23*s24 - 2*denom(1/4*s12^2)*
      mt^6*s12*s14*s24 - denom(1/4*s12^2)*mt^6*s12*s14*s23 - 1/2*denom(1/4*
      s12^2)*mt^6*s12*s14^2 + denom(1/4*s12^2)*mt^8*s12*s24 + 1/2*denom(1/4*
      s12^2)*mt^8*s12*s23 + denom(1/4*s12^2)*mt^8*s12*s14 - 1/2*denom(1/4*
      s12^2)*mt^10*s12;
 
 .sort
id KMatrix(16,30) =   - 1/2*s12*s14*s24^2 - s12*s14*s23*s24 - 1/2*s12*s14*
      s23^2 - s12*s14^2*s24 - s12*s14^2*s23 - 1/2*s12*s14^3 - s12*s13*s14*s24
       - s12*s13*s14*s23 - s12*s13*s14^2 - 1/2*s12*s13^2*s14 - s12^2*s14*s24
       - s12^2*s14*s23 - s12^2*s14^2 - s12^2*s13*s14 - 1/2*s12^3*s14 + mh^2*
      s12*s14*s24 + mh^2*s12*s14*s23 + mh^2*s12*s14^2 + mh^2*s12*s13*s14 + 
      mh^2*s12^2*s14 - 1/2*mh^4*s12*s14 + 1/2*mt^2*s12*s24^2 + mt^2*s12*s23*
      s24 + 1/2*mt^2*s12*s23^2 + 3*mt^2*s12*s14*s24 + 3*mt^2*s12*s14*s23 + 5/2
      *mt^2*s12*s14^2 + mt^2*s12*s13*s24 + mt^2*s12*s13*s23 + 3*mt^2*s12*s13*
      s14 + 1/2*mt^2*s12*s13^2 + mt^2*s12^2*s24 + mt^2*s12^2*s23 + 3*mt^2*
      s12^2*s14 + mt^2*s12^2*s13 + 1/2*mt^2*s12^3 - mt^2*mh^2*s12*s24 - mt^2*
      mh^2*s12*s23 - 3*mt^2*mh^2*s12*s14 - mt^2*mh^2*s12*s13 - mt^2*mh^2*s12^2
       + 1/2*mt^2*mh^4*s12 - 2*mt^4*s12*s24 - 2*mt^4*s12*s23 - 4*mt^4*s12*s14
       - 2*mt^4*s12*s13 - 2*mt^4*s12^2 + 2*mt^4*mh^2*s12 + 2*mt^6*s12 - 1/2*
      denom(1/2*s12)*s12*s14^2*s23*s24 - 1/2*denom(1/2*s12)*s12*s14^2*s23^2 - 
      1/2*denom(1/2*s12)*s12*s14^3*s23 - 1/2*denom(1/2*s12)*s12*s13*s14*s24^2
       - 1/2*denom(1/2*s12)*s12*s13*s14*s23*s24 - 1/2*denom(1/2*s12)*s12*s13*
      s14^2*s24 - 1/2*denom(1/2*s12)*s12*s13*s14^2*s23 - 1/2*denom(1/2*s12)*
      s12*s13^2*s14*s24 - 1/2*denom(1/2*s12)*s12^2*s14^2*s23 - 1/2*denom(1/2*
      s12)*s12^2*s13*s14*s24 + 1/2*denom(1/2*s12)*mh^2*s12*s14^2*s23 + 1/2*
      denom(1/2*s12)*mh^2*s12*s13*s14*s24 + 1/2*denom(1/2*s12)*mt^2*s12*s14*
      s24^2 + 3/2*denom(1/2*s12)*mt^2*s12*s14*s23*s24 + denom(1/2*s12)*mt^2*
      s12*s14*s23^2 + denom(1/2*s12)*mt^2*s12*s14^2*s24 + 5/2*denom(1/2*s12)*
      mt^2*s12*s14^2*s23 + 1/2*denom(1/2*s12)*mt^2*s12*s14^3 + 1/2*denom(1/2*
      s12)*mt^2*s12*s13*s24^2 + 1/2*denom(1/2*s12)*mt^2*s12*s13*s23*s24 + 5/2*
      denom(1/2*s12)*mt^2*s12*s13*s14*s24 + 3/2*denom(1/2*s12)*mt^2*s12*s13*
      s14*s23 + denom(1/2*s12)*mt^2*s12*s13*s14^2 + 1/2*denom(1/2*s12)*mt^2*
      s12*s13^2*s24 + 1/2*denom(1/2*s12)*mt^2*s12*s13^2*s14 + 1/2*denom(1/2*
      s12)*mt^2*s12^2*s14*s24 + denom(1/2*s12)*mt^2*s12^2*s14*s23 + 1/2*denom(
      1/2*s12)*mt^2*s12^2*s14^2 + 1/2*denom(1/2*s12)*mt^2*s12^2*s13*s24 + 1/2*
      denom(1/2*s12)*mt^2*s12^2*s13*s14 - 1/2*denom(1/2*s12)*mt^2*mh^2*s12*s14
      *s24 - denom(1/2*s12)*mt^2*mh^2*s12*s14*s23 - 1/2*denom(1/2*s12)*mt^2*
      mh^2*s12*s14^2 - 1/2*denom(1/2*s12)*mt^2*mh^2*s12*s13*s24 - 1/2*denom(1/
      2*s12)*mt^2*mh^2*s12*s13*s14 - 1/2*denom(1/2*s12)*mt^4*s12*s24^2 - 
      denom(1/2*s12)*mt^4*s12*s23*s24 - 1/2*denom(1/2*s12)*mt^4*s12*s23^2 - 3*
      denom(1/2*s12)*mt^4*s12*s14*s24 - 4*denom(1/2*s12)*mt^4*s12*s14*s23 - 5/
      2*denom(1/2*s12)*mt^4*s12*s14^2 - 2*denom(1/2*s12)*mt^4*s12*s13*s24 - 
      denom(1/2*s12)*mt^4*s12*s13*s23 - 3*denom(1/2*s12)*mt^4*s12*s13*s14 - 1/
      2*denom(1/2*s12)*mt^4*s12*s13^2 - 1/2*denom(1/2*s12)*mt^4*s12^2*s24 - 1/
      2*denom(1/2*s12)*mt^4*s12^2*s23 - 3/2*denom(1/2*s12)*mt^4*s12^2*s14 - 1/
      2*denom(1/2*s12)*mt^4*s12^2*s13 + 1/2*denom(1/2*s12)*mt^4*mh^2*s12*s24
       + 1/2*denom(1/2*s12)*mt^4*mh^2*s12*s23 + 3/2*denom(1/2*s12)*mt^4*mh^2*
      s12*s14 + 1/2*denom(1/2*s12)*mt^4*mh^2*s12*s13 + 2*denom(1/2*s12)*mt^6*
      s12*s24 + 2*denom(1/2*s12)*mt^6*s12*s23 + 4*denom(1/2*s12)*mt^6*s12*s14
       + 2*denom(1/2*s12)*mt^6*s12*s13 + denom(1/2*s12)*mt^6*s12^2 - denom(1/2
      *s12)*mt^6*mh^2*s12 - 2*denom(1/2*s12)*mt^8*s12 - 1/8*denom(1/4*s12^2)*
      s12*s14^3*s23^2 - 1/4*denom(1/4*s12^2)*s12*s13*s14^2*s23*s24 - 1/8*
      denom(1/4*s12^2)*s12*s13^2*s14*s24^2 + 1/4*denom(1/4*s12^2)*mt^2*s12*
      s14^2*s23*s24 + 3/8*denom(1/4*s12^2)*mt^2*s12*s14^2*s23^2 + 1/4*denom(1/
      4*s12^2)*mt^2*s12*s14^3*s23 + 1/4*denom(1/4*s12^2)*mt^2*s12*s13*s14*
      s24^2 + 1/2*denom(1/4*s12^2)*mt^2*s12*s13*s14*s23*s24 + 1/4*denom(1/4*
      s12^2)*mt^2*s12*s13*s14^2*s24 + 1/4*denom(1/4*s12^2)*mt^2*s12*s13*s14^2*
      s23 + 1/8*denom(1/4*s12^2)*mt^2*s12*s13^2*s24^2 + 1/4*denom(1/4*s12^2)*
      mt^2*s12*s13^2*s14*s24 - 1/8*denom(1/4*s12^2)*mt^4*s12*s14*s24^2 - 1/2*
      denom(1/4*s12^2)*mt^4*s12*s14*s23*s24 - 3/8*denom(1/4*s12^2)*mt^4*s12*
      s14*s23^2 - 1/4*denom(1/4*s12^2)*mt^4*s12*s14^2*s24 - denom(1/4*s12^2)*
      mt^4*s12*s14^2*s23 - 1/8*denom(1/4*s12^2)*mt^4*s12*s14^3 - 1/4*denom(1/4
      *s12^2)*mt^4*s12*s13*s24^2 - 1/4*denom(1/4*s12^2)*mt^4*s12*s13*s23*s24
       - denom(1/4*s12^2)*mt^4*s12*s13*s14*s24 - 1/2*denom(1/4*s12^2)*mt^4*s12
      *s13*s14*s23 - 1/4*denom(1/4*s12^2)*mt^4*s12*s13*s14^2 - 1/4*denom(1/4*
      s12^2)*mt^4*s12*s13^2*s24 - 1/8*denom(1/4*s12^2)*mt^4*s12*s13^2*s14 + 1/
      8*denom(1/4*s12^2)*mt^6*s12*s24^2 + 1/4*denom(1/4*s12^2)*mt^6*s12*s23*
      s24 + 1/8*denom(1/4*s12^2)*mt^6*s12*s23^2 + 3/4*denom(1/4*s12^2)*mt^6*
      s12*s14*s24 + 5/4*denom(1/4*s12^2)*mt^6*s12*s14*s23 + 5/8*denom(1/4*
      s12^2)*mt^6*s12*s14^2 + 3/4*denom(1/4*s12^2)*mt^6*s12*s13*s24 + 1/4*
      denom(1/4*s12^2)*mt^6*s12*s13*s23 + 3/4*denom(1/4*s12^2)*mt^6*s12*s13*
      s14 + 1/8*denom(1/4*s12^2)*mt^6*s12*s13^2 - 1/2*denom(1/4*s12^2)*mt^8*
      s12*s24 - 1/2*denom(1/4*s12^2)*mt^8*s12*s23 - denom(1/4*s12^2)*mt^8*s12*
      s14 - 1/2*denom(1/4*s12^2)*mt^8*s12*s13 + 1/2*denom(1/4*s12^2)*mt^10*s12
      ;
 
 .sort
id KMatrix(16,31) =   - mt^2*s12*s23*s24 - mt^2*s12*s23^2 - mt^2*s12*s14*s23
       - mt^2*s12*s13*s23 - mt^2*s12^2*s23 + mt^2*mh^2*s12*s23 + mt^4*s12*s24
       + 3*mt^4*s12*s23 + mt^4*s12*s14 + mt^4*s12*s13 + mt^4*s12^2 - mt^4*mh^2
      *s12 - 2*mt^6*s12 + 1/2*denom(1/2*s12)*s12*s14*s23*s24^2 + 1/2*denom(1/2
      *s12)*s12*s14*s23^2*s24 + 1/2*denom(1/2*s12)*s12*s14^2*s23*s24 + 1/2*
      denom(1/2*s12)*s12*s13*s14*s23*s24 + 1/2*denom(1/2*s12)*s12^2*s14*s23*
      s24 - 1/2*denom(1/2*s12)*mh^2*s12*s14*s23*s24 - 1/2*denom(1/2*s12)*mt^2*
      s12*s23*s24^2 - 1/2*denom(1/2*s12)*mt^2*s12*s23^2*s24 - 1/2*denom(1/2*
      s12)*mt^2*s12*s14*s24^2 - 5/2*denom(1/2*s12)*mt^2*s12*s14*s23*s24 - 
      denom(1/2*s12)*mt^2*s12*s14*s23^2 - 1/2*denom(1/2*s12)*mt^2*s12*s14^2*
      s24 - 1/2*denom(1/2*s12)*mt^2*s12*s14^2*s23 - denom(1/2*s12)*mt^2*s12*
      s13*s23*s24 - 1/2*denom(1/2*s12)*mt^2*s12*s13*s14*s24 - 1/2*denom(1/2*
      s12)*mt^2*s12*s13*s14*s23 - 1/2*denom(1/2*s12)*mt^2*s12^2*s23*s24 - 1/2*
      denom(1/2*s12)*mt^2*s12^2*s14*s24 - 1/2*denom(1/2*s12)*mt^2*s12^2*s14*
      s23 + 1/2*denom(1/2*s12)*mt^2*mh^2*s12*s23*s24 + 1/2*denom(1/2*s12)*mt^2
      *mh^2*s12*s14*s24 + 1/2*denom(1/2*s12)*mt^2*mh^2*s12*s14*s23 + 1/2*
      denom(1/2*s12)*mt^4*s12*s24^2 + 5/2*denom(1/2*s12)*mt^4*s12*s23*s24 + 
      denom(1/2*s12)*mt^4*s12*s23^2 + 2*denom(1/2*s12)*mt^4*s12*s14*s24 + 3*
      denom(1/2*s12)*mt^4*s12*s14*s23 + 1/2*denom(1/2*s12)*mt^4*s12*s14^2 + 
      denom(1/2*s12)*mt^4*s12*s13*s24 + denom(1/2*s12)*mt^4*s12*s13*s23 + 1/2*
      denom(1/2*s12)*mt^4*s12*s13*s14 + 1/2*denom(1/2*s12)*mt^4*s12^2*s24 + 1/
      2*denom(1/2*s12)*mt^4*s12^2*s23 + 1/2*denom(1/2*s12)*mt^4*s12^2*s14 - 1/
      2*denom(1/2*s12)*mt^4*mh^2*s12*s24 - 1/2*denom(1/2*s12)*mt^4*mh^2*s12*
      s23 - 1/2*denom(1/2*s12)*mt^4*mh^2*s12*s14 - 2*denom(1/2*s12)*mt^6*s12*
      s24 - 3*denom(1/2*s12)*mt^6*s12*s23 - 2*denom(1/2*s12)*mt^6*s12*s14 - 
      denom(1/2*s12)*mt^6*s12*s13 - 1/2*denom(1/2*s12)*mt^6*s12^2 + 1/2*denom(
      1/2*s12)*mt^6*mh^2*s12 + 2*denom(1/2*s12)*mt^8*s12 + 1/4*denom(1/4*s12^2
      )*s12*s14^2*s23^2*s24 + 1/4*denom(1/4*s12^2)*s12*s13*s14*s23*s24^2 - 1/4
      *denom(1/4*s12^2)*mt^2*s12*s14*s23*s24^2 - 1/2*denom(1/4*s12^2)*mt^2*s12
      *s14*s23^2*s24 - 1/2*denom(1/4*s12^2)*mt^2*s12*s14^2*s23*s24 - 1/4*
      denom(1/4*s12^2)*mt^2*s12*s14^2*s23^2 - 1/4*denom(1/4*s12^2)*mt^2*s12*
      s13*s23*s24^2 - 1/4*denom(1/4*s12^2)*mt^2*s12*s13*s14*s24^2 - 1/2*denom(
      1/4*s12^2)*mt^2*s12*s13*s14*s23*s24 + 1/4*denom(1/4*s12^2)*mt^4*s12*s23*
      s24^2 + 1/4*denom(1/4*s12^2)*mt^4*s12*s23^2*s24 + 1/4*denom(1/4*s12^2)*
      mt^4*s12*s14*s24^2 + 3/2*denom(1/4*s12^2)*mt^4*s12*s14*s23*s24 + 1/2*
      denom(1/4*s12^2)*mt^4*s12*s14*s23^2 + 1/4*denom(1/4*s12^2)*mt^4*s12*
      s14^2*s24 + 1/2*denom(1/4*s12^2)*mt^4*s12*s14^2*s23 + 1/4*denom(1/4*
      s12^2)*mt^4*s12*s13*s24^2 + 1/2*denom(1/4*s12^2)*mt^4*s12*s13*s23*s24 + 
      1/2*denom(1/4*s12^2)*mt^4*s12*s13*s14*s24 + 1/4*denom(1/4*s12^2)*mt^4*
      s12*s13*s14*s23 - 1/4*denom(1/4*s12^2)*mt^6*s12*s24^2 - denom(1/4*s12^2)
      *mt^6*s12*s23*s24 - 1/4*denom(1/4*s12^2)*mt^6*s12*s23^2 - denom(1/4*
      s12^2)*mt^6*s12*s14*s24 - 5/4*denom(1/4*s12^2)*mt^6*s12*s14*s23 - 1/4*
      denom(1/4*s12^2)*mt^6*s12*s14^2 - 1/2*denom(1/4*s12^2)*mt^6*s12*s13*s24
       - 1/4*denom(1/4*s12^2)*mt^6*s12*s13*s23 - 1/4*denom(1/4*s12^2)*mt^6*s12
      *s13*s14 + 3/4*denom(1/4*s12^2)*mt^8*s12*s24 + 3/4*denom(1/4*s12^2)*mt^8
      *s12*s23 + 3/4*denom(1/4*s12^2)*mt^8*s12*s14 + 1/4*denom(1/4*s12^2)*mt^8
      *s12*s13 - 1/2*denom(1/4*s12^2)*mt^10*s12;
 
 .sort
id KMatrix(16,32) =  mt^2*s12*s14*s24 + mt^2*s12*s14*s23 + mt^2*s12*s14^2 + 
      mt^2*s12*s13*s14 + mt^2*s12^2*s14 - mt^2*mh^2*s12*s14 - mt^4*s12*s24 - 
      mt^4*s12*s23 - 3*mt^4*s12*s14 - mt^4*s12*s13 - mt^4*s12^2 + mt^4*mh^2*
      s12 + 2*mt^6*s12 - 1/2*denom(1/2*s12)*s12*s14^2*s24^2 - 1/2*denom(1/2*
      s12)*s12*s14^2*s23*s24 - 1/2*denom(1/2*s12)*s12*s14^3*s24 - 1/2*denom(1/
      2*s12)*s12*s13*s14^2*s24 - 1/2*denom(1/2*s12)*s12^2*s14^2*s24 + 1/2*
      denom(1/2*s12)*mh^2*s12*s14^2*s24 + denom(1/2*s12)*mt^2*s12*s14*s24^2 + 
      denom(1/2*s12)*mt^2*s12*s14*s23*s24 + 5/2*denom(1/2*s12)*mt^2*s12*s14^2*
      s24 + denom(1/2*s12)*mt^2*s12*s14^2*s23 + 1/2*denom(1/2*s12)*mt^2*s12*
      s14^3 + 3/2*denom(1/2*s12)*mt^2*s12*s13*s14*s24 + 1/2*denom(1/2*s12)*
      mt^2*s12*s13*s14^2 + denom(1/2*s12)*mt^2*s12^2*s14*s24 + 1/2*denom(1/2*
      s12)*mt^2*s12^2*s14^2 - denom(1/2*s12)*mt^2*mh^2*s12*s14*s24 - 1/2*
      denom(1/2*s12)*mt^2*mh^2*s12*s14^2 - 1/2*denom(1/2*s12)*mt^4*s12*s24^2
       - 1/2*denom(1/2*s12)*mt^4*s12*s23*s24 - 4*denom(1/2*s12)*mt^4*s12*s14*
      s24 - 2*denom(1/2*s12)*mt^4*s12*s14*s23 - 5/2*denom(1/2*s12)*mt^4*s12*
      s14^2 - denom(1/2*s12)*mt^4*s12*s13*s24 - 3/2*denom(1/2*s12)*mt^4*s12*
      s13*s14 - 1/2*denom(1/2*s12)*mt^4*s12^2*s24 - denom(1/2*s12)*mt^4*s12^2*
      s14 + 1/2*denom(1/2*s12)*mt^4*mh^2*s12*s24 + denom(1/2*s12)*mt^4*mh^2*
      s12*s14 + 2*denom(1/2*s12)*mt^6*s12*s24 + denom(1/2*s12)*mt^6*s12*s23 + 
      4*denom(1/2*s12)*mt^6*s12*s14 + denom(1/2*s12)*mt^6*s12*s13 + 1/2*denom(
      1/2*s12)*mt^6*s12^2 - 1/2*denom(1/2*s12)*mt^6*mh^2*s12 - 2*denom(1/2*s12
      )*mt^8*s12 - 1/4*denom(1/4*s12^2)*s12*s14^3*s23*s24 - 1/4*denom(1/4*
      s12^2)*s12*s13*s14^2*s24^2 + 1/4*denom(1/4*s12^2)*mt^2*s12*s14^2*s24^2
       + 3/4*denom(1/4*s12^2)*mt^2*s12*s14^2*s23*s24 + 1/4*denom(1/4*s12^2)*
      mt^2*s12*s14^3*s24 + 1/4*denom(1/4*s12^2)*mt^2*s12*s14^3*s23 + 1/2*
      denom(1/4*s12^2)*mt^2*s12*s13*s14*s24^2 + 1/2*denom(1/4*s12^2)*mt^2*s12*
      s13*s14^2*s24 - 1/2*denom(1/4*s12^2)*mt^4*s12*s14*s24^2 - 3/4*denom(1/4*
      s12^2)*mt^4*s12*s14*s23*s24 - 5/4*denom(1/4*s12^2)*mt^4*s12*s14^2*s24 - 
      3/4*denom(1/4*s12^2)*mt^4*s12*s14^2*s23 - 1/4*denom(1/4*s12^2)*mt^4*s12*
      s14^3 - 1/4*denom(1/4*s12^2)*mt^4*s12*s13*s24^2 - denom(1/4*s12^2)*mt^4*
      s12*s13*s14*s24 - 1/4*denom(1/4*s12^2)*mt^4*s12*s13*s14^2 + 1/4*denom(1/
      4*s12^2)*mt^6*s12*s24^2 + 1/4*denom(1/4*s12^2)*mt^6*s12*s23*s24 + 7/4*
      denom(1/4*s12^2)*mt^6*s12*s14*s24 + 3/4*denom(1/4*s12^2)*mt^6*s12*s14*
      s23 + denom(1/4*s12^2)*mt^6*s12*s14^2 + 1/2*denom(1/4*s12^2)*mt^6*s12*
      s13*s24 + 1/2*denom(1/4*s12^2)*mt^6*s12*s13*s14 - 3/4*denom(1/4*s12^2)*
      mt^8*s12*s24 - 1/4*denom(1/4*s12^2)*mt^8*s12*s23 - 5/4*denom(1/4*s12^2)*
      mt^8*s12*s14 - 1/4*denom(1/4*s12^2)*mt^8*s12*s13 + 1/2*denom(1/4*s12^2)*
      mt^10*s12;
 
 .sort
id KMatrix(16,33) =  2*mt^4*s12*s23 - 2*mt^6*s12 - 2*denom(1/2*s12)*mt^2*s12*
      s14*s23*s24 + 2*denom(1/2*s12)*mt^4*s12*s23*s24 + 2*denom(1/2*s12)*mt^4*
      s12*s14*s24 + 2*denom(1/2*s12)*mt^4*s12*s14*s23 - 2*denom(1/2*s12)*mt^6*
      s12*s24 - 2*denom(1/2*s12)*mt^6*s12*s23 - 2*denom(1/2*s12)*mt^6*s12*s14
       + 2*denom(1/2*s12)*mt^8*s12 + 1/2*denom(1/4*s12^2)*s12*s14^2*s23*s24^2
       - denom(1/4*s12^2)*mt^2*s12*s14*s23*s24^2 - 1/2*denom(1/4*s12^2)*mt^2*
      s12*s14^2*s24^2 - denom(1/4*s12^2)*mt^2*s12*s14^2*s23*s24 + 1/2*denom(1/
      4*s12^2)*mt^4*s12*s23*s24^2 + denom(1/4*s12^2)*mt^4*s12*s14*s24^2 + 2*
      denom(1/4*s12^2)*mt^4*s12*s14*s23*s24 + denom(1/4*s12^2)*mt^4*s12*s14^2*
      s24 + 1/2*denom(1/4*s12^2)*mt^4*s12*s14^2*s23 - 1/2*denom(1/4*s12^2)*
      mt^6*s12*s24^2 - denom(1/4*s12^2)*mt^6*s12*s23*s24 - 2*denom(1/4*s12^2)*
      mt^6*s12*s14*s24 - denom(1/4*s12^2)*mt^6*s12*s14*s23 - 1/2*denom(1/4*
      s12^2)*mt^6*s12*s14^2 + denom(1/4*s12^2)*mt^8*s12*s24 + 1/2*denom(1/4*
      s12^2)*mt^8*s12*s23 + denom(1/4*s12^2)*mt^8*s12*s14 - 1/2*denom(1/4*
      s12^2)*mt^10*s12;
 
 .sort
id KMatrix(16,34) =  2*mt^3*s12*s14 - 2*mt^5*s12 - 2*denom(1/2*s12)*mt*s12*
      s14^2*s24 + 4*denom(1/2*s12)*mt^3*s12*s14*s24 + 2*denom(1/2*s12)*mt^3*
      s12*s14^2 - 2*denom(1/2*s12)*mt^5*s12*s24 - 4*denom(1/2*s12)*mt^5*s12*
      s14 + 2*denom(1/2*s12)*mt^7*s12 + 1/2*denom(1/4*s12^2)*mt*s12^2*s14^2*
      s24 - denom(1/4*s12^2)*mt^3*s12^2*s14*s24 - 1/2*denom(1/4*s12^2)*mt^3*
      s12^2*s14^2 + 1/2*denom(1/4*s12^2)*mt^5*s12^2*s24 + denom(1/4*s12^2)*
      mt^5*s12^2*s14 - 1/2*denom(1/4*s12^2)*mt^7*s12^2;
 
 .sort
id KMatrix(16,35) =   - 2*mt^3*s12*s23 + 2*mt^5*s12 + 2*denom(1/2*s12)*mt*s12*
      s14*s23*s24 - 2*denom(1/2*s12)*mt^3*s12*s23*s24 - 2*denom(1/2*s12)*mt^3*
      s12*s14*s24 - 2*denom(1/2*s12)*mt^3*s12*s14*s23 + 2*denom(1/2*s12)*mt^5*
      s12*s24 + 2*denom(1/2*s12)*mt^5*s12*s23 + 2*denom(1/2*s12)*mt^5*s12*s14
       - 2*denom(1/2*s12)*mt^7*s12 - 1/2*denom(1/4*s12^2)*mt*s12^2*s14*s23*s24
       + 1/2*denom(1/4*s12^2)*mt^3*s12^2*s23*s24 + 1/2*denom(1/4*s12^2)*mt^3*
      s12^2*s14*s24 + 1/2*denom(1/4*s12^2)*mt^3*s12^2*s14*s23 - 1/2*denom(1/4*
      s12^2)*mt^5*s12^2*s24 - 1/2*denom(1/4*s12^2)*mt^5*s12^2*s23 - 1/2*denom(
      1/4*s12^2)*mt^5*s12^2*s14 + 1/2*denom(1/4*s12^2)*mt^7*s12^2;
 
 .sort
id KMatrix(16,36) =  2*mt^2*s12*s14*s23 - 2*mt^4*s12*s23 - 2*mt^4*s12*s14 + 2*
      mt^6*s12 - 2*denom(1/2*s12)*s12*s14^2*s23*s24 + 4*denom(1/2*s12)*mt^2*
      s12*s14*s23*s24 + 2*denom(1/2*s12)*mt^2*s12*s14^2*s24 + 2*denom(1/2*s12)
      *mt^2*s12*s14^2*s23 - 2*denom(1/2*s12)*mt^4*s12*s23*s24 - 4*denom(1/2*
      s12)*mt^4*s12*s14*s24 - 4*denom(1/2*s12)*mt^4*s12*s14*s23 - 2*denom(1/2*
      s12)*mt^4*s12*s14^2 + 2*denom(1/2*s12)*mt^6*s12*s24 + 2*denom(1/2*s12)*
      mt^6*s12*s23 + 4*denom(1/2*s12)*mt^6*s12*s14 - 2*denom(1/2*s12)*mt^8*s12
       + 1/2*denom(1/4*s12^2)*s12^2*s14^2*s23*s24 - denom(1/4*s12^2)*mt^2*
      s12^2*s14*s23*s24 - 1/2*denom(1/4*s12^2)*mt^2*s12^2*s14^2*s24 - 1/2*
      denom(1/4*s12^2)*mt^2*s12^2*s14^2*s23 + 1/2*denom(1/4*s12^2)*mt^4*s12^2*
      s23*s24 + denom(1/4*s12^2)*mt^4*s12^2*s14*s24 + denom(1/4*s12^2)*mt^4*
      s12^2*s14*s23 + 1/2*denom(1/4*s12^2)*mt^4*s12^2*s14^2 - 1/2*denom(1/4*
      s12^2)*mt^6*s12^2*s24 - 1/2*denom(1/4*s12^2)*mt^6*s12^2*s23 - denom(1/4*
      s12^2)*mt^6*s12^2*s14 + 1/2*denom(1/4*s12^2)*mt^8*s12^2;
 
 .sort
