#procedure INTtoR(expr,fname)
***************************************************
* Exports INTs in expr into fname
***************************************************
 pushhide;
 
 L intsum = `expr';
 id INT(?args1,[],?args2) = INT(?args1,?args2);
 .sort
 
*remove all prefactors
  Bracket INT;
  .sort
  collect cDUM1;
  .sort
  id cDUM1(?args) = 1;
  id cDUM1 = 1;
  .sort
  
 
*Put all INTs into cDUM1
  AntiBracket INT;
  .sort
  collect cDUM1;
  .sort
  splitarg cDUM1;
*  splitarg cDUM2;
*  id cDUM2(?args) = cDUM1(?args);
  .sort

  autodeclare S n;
  id cDUM1(n1?,...,n7000?,?x) = cDUM1(n1,...,n7000) ;

 print +s ;
  .sort
* .end
  
*  transform, cDUM1 , dedup(1,last);
*  .sort
  
  
*Export each INT into new line
*  Format Mathematica;
  
  #create <`fname'>
  #$nn = 0;
  #$ARG=0;
  .sort

  #do i=1,1
    id cDUM1(sDUM1?$ARG,?args) = cDUM1(?args);
    .sort
    id cDUM1 = 1;
    #message arg `$ARG'
    #message  nn `$nn'
*    print intsum;
    .sort
    
    #write <`fname'> "%$", $ARG
    
    if ( match( cDUM1(?args) ) );
      redefine i "0";
      $nn = $nn+1;
    endif;
    .sort

*    if (`$nn' == 5);
*      redefine i "1";
*    endif;
    .sort

  #enddo
  
  #close <`fname'>  
  .sort
  
  #write "%s%$" "# of integrals: " $nn
  .end

  Format normal;
  pophide;
#endprocedure

*$int = term_;
*    .sort
*    
*    #write <`fname'> "%$", $int
*    
*    id $int = 0;
*    .sort
*    
*    #if ( termsin(intsum)==0 )
*    #else
*      redefine i "0";
*      $nn = $nn+1;
*    #endif
*    .sort
